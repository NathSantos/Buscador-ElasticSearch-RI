{"add": {"doc": {"field": [{"@name": "docid", "#text": "BR-TU.05963"}, {"@name": "filename", "#text": "10442_o%20problema%20da%20arvore%20de%20suporte%20de%20custo%20minimo%20com%20restri%c3%a7%c3%b5es%20de%20peso.pdf"}, {"@name": "filetype", "#text": "PDF"}, {"@name": "text", "#text": "2014\nEul\u00e1lia Maria Mota O Problema da \u00c1rvore de Suporte de Custo M\u00ednimo Santos\tcom Restri\u00e7\u00f5es de Peso\nEul\u00e1lia Maria Mota Santos\nUniversidade de Aveiro Departamento de Matem\u00e1tica\n2014\nO Problema da \u00c1rvore de Suporte de Custo M\u00ednimo com Restri\u00e7\u00f5es de Peso\nDisserta\u00e7\u00e3o apresentada \u00e0 Universidade de Aveiro para cumprimento dos requisitos necess\u00e1rios \u00e0 obten\u00e7\u00e3o do grau de Doutor em Matem\u00e1tica, realizada sob a orienta\u00e7\u00e3o cient\u00edfica da Doutora Maria Cristina Saraiva Requejo Agra, Professora Auxiliar do Departamento de Matem\u00e1tica da Universidade de Aveiro.\nApoio financeiro da Funda\u00e7\u00e3o para a Ci\u00eancia e Tecnologia e do Fundo Social Europeu no \u00e2mbito do III Quadro Comunit\u00e1rio de Apoio e por fundos nacionais do Minist\u00e9rio da Ci\u00eancia, Tecnologia e Ensino Superior - Bolsa de doutoramento com a refer\u00eancia SFRH/BD/46394/2008.\no j\u00fari\npresidente\nDoutor M\u00e1rio Guerreiro Silva Ferreira\nProfessor Catedr\u00e1tico da Universidade de Aveiro\nDoutora Maria Teresa Nunes Chaves de Almeida\nProfessora Catedr\u00e1tica do Instituto Superior de Economia e Gest\u00e3o da Universidade de Lisboa\nDoutor Lu\u00eds Eduardo Neves Gouveia\nProfessor Catedr\u00e1tico da Faculdade de Ci\u00eancias da Universidade de Lisboa\nDoutor Domingos Moreira Cardoso\nProfessor Catedr\u00e1tico da Universidade de Aveiro\nDoutor Jos\u00e9 Manuel Vasconcelos Val\u00e9rio de Carvalho\nProfessor Catedr\u00e1tico da Escola de Engenharia da Universidade do Minho\nDoutora Maria Cristina Saraiva Requejo Agra\nProfessora Auxiliar da Universidade de Aveiro (Orientadora)\nagradecimentos\tEm primeiro lugar agrade\u00e7o \u00e0 minha orientadora, a Professora Doutora Maria Cristina Saraiva Requejo Agra pela oportunidade que me deu de realizar este trabalho sob sua orienta\u00e7\u00e3o e pela disponibilidade e apoio que me prestou ao longo da sua elabora\u00e7\u00e3o. Ao professor Agostinho Agra pela ajuda e sugest\u00f5es. Aos meus pais, ao Lu\u00eds, \u00e0 \u00c9rica e ao senhor Carlos Jorge agrade\u00e7o o apoio que sempre me deram. Aos meus amigos, Carlos Campos, F\u00e1tima Pina, Isabel Pego e Olga Oliveira agrade\u00e7o a amizade e o apoio ao longo da realiza\u00e7\u00e3o deste trabalho. Em termos institucionais, agrade\u00e7o o apoio concedido pelas seguintes entidades durante o per\u00edodo de prepara\u00e7\u00e3o deste trabalho: FCT - Funda\u00e7\u00e3o para a Ci\u00eancia e Tecnologia e CIDMA - Centro de Investiga\u00e7\u00e3o e desenvolvimento em Matem\u00e1tica e Aplica\u00e7\u00f5es da Universidade de Aveiro. Para finalizar agrade\u00e7o a todos os que t\u00eam contribu\u00eddo direta ou indiretamente para a minha forma\u00e7\u00e3o.\npalavras-chave\t\u00c1rvores com restri\u00e7\u00f5es de peso, Formula\u00e7\u00f5es, Relaxa\u00e7\u00e3o Linear, Relaxa\u00e7\u00e3o Lagrangeana, Desigualdades v\u00e1lidas, Separa\u00e7\u00e3o, Heur\u00edsticas, Feasibility Pump, Local Branching.\nresumo\tNesta tese abordam-se v\u00e1rias formula\u00e7\u00f5es e diferentes m\u00e9todos para resolver o Problema da \u00c1rvore de Suporte de Custo M\u00ednimo com Restri\u00e7\u00f5es de Peso (WMST - Weight-constrained Minimum Spanning Tree Problem). Este problema, com aplica\u00e7\u00f5es no desenho de redes de comunica\u00e7\u00f5es e telecomunica\u00e7\u00f5es, \u00e9 um problema de Otimiza\u00e7\u00e3o Combinat\u00f3ria NP-dif\u00edcil. O Problema WMST consiste em determinar, numa rede com custos e pesos associados \u00e0s arestas, uma \u00e1rvore de suporte de custo m\u00ednimo de tal forma que o seu peso total n\u00e3o exceda um dado limite especificado. Apresentam-se e comparam-se v\u00e1rias formula\u00e7\u00f5es para o problema. Uma delas \u00e9 usada para desenvolver um procedimento com introdu\u00e7\u00e3o de cortes baseado em separa\u00e7\u00e3o e que se tornou bastante \u00fatil na obten\u00e7\u00e3o de solu\u00e7\u00f5es para o problema. Tendo como prop\u00f3sito fortalecer as formula\u00e7\u00f5es apresentadas, introduzem-se novas classes de desigualdades v\u00e1lidas que foram adaptadas das conhecidas desigualdades de cobertura, desigualdades de cobertura estendida e desigualdades de cobertura levantada. As novas desigualdades incorporam a informa\u00e7\u00e3o de dois conjuntos de solu\u00e7\u00f5es: o conjunto das \u00e1rvores de suporte e o conjunto saco-mochila. Apresentam-se diversos algoritmos heur\u00edsticos de separa\u00e7\u00e3o que nos permitem usar as desigualdades v\u00e1lidas propostas de forma eficiente. Com base na decomposi\u00e7\u00e3o Lagrangeana, apresentam-se e comparam-se algoritmos simples, mas eficientes, que podem ser usados para calcular limites inferiores e superiores para o valor \u00f3timo do WMST. Entre eles encontram-se dois novos algoritmos: um baseado na convexidade da fun\u00e7\u00e3o Lagrangeana e outro que faz uso da inclus\u00e3o de desigualdades v\u00e1lidas. Com o objetivo de obter solu\u00e7\u00f5es aproximadas para o Problema WMST usam-se m\u00e9todos heur\u00edsticos para encontrar uma solu\u00e7\u00e3o inteira admiss\u00edvel. Os m\u00e9todos heur\u00edsticos apresentados s\u00e3o baseados nas estrat\u00e9gias Feasibility Pump e Local Branching. Apresentam-se resultados computacionais usando todos os m\u00e9todos apresentados. Os resultados mostram que os diferentes m\u00e9todos apresentados s\u00e3o bastante eficientes para encontrar solu\u00e7\u00f5es para o Problema WMST.\nkeywords\tTrees with weight constraint, Formulations, Linear relaxation, Lagrangean relaxation, Valid inequalities, Separation, Heuristics, Feasibility Pump, Local Branching.\nabstract\tIn this thesis we discuss several formulations and different methods to solve the Weight-constrained Minimum Spanning Tree Problem (WMST). This problem, with applications in the design of communication networks and telecommunications, is a NP-hard combinatorial optimization problem. The WMST problem aims at obtaining, in a network with costs and weights associated to its edges, a minimum cost spanning tree such that its total weight does not exceed a given specified parameter. Various formulations to the problem are presented and compared. One is used to develop a procedure to introduce cuts based on separation and that became quite useful in obtaining solutions to the problem. To strengthen the formulations, new classes of valid inequalities, adapted from the well-known cover inequalities, extended cover inequalities and lifted cover inequalities, are introduced. These new inequalities incorporate information from two sets of solutions: the spanning trees set and the knapsack set. We present several separation heuristic algorithms that allow us to efficiently use the proposed valid inequalities. Based on Lagrangean decomposition, simple and efficient algorithms are presented and compared. The algorithms can be used to obtain upper and lower bounds to the optimal value of the WMST problem. Among them are two new algorithms: one based on the convexity of the Lagrangean function and another making use of the inclusion of valid inequalities. In order to obtain approximate solutions to the WMST problem, heuristic methods are used to find feasible solutions. The heuristic methods presented are based on the Feasibility Pump and Local Branching strategies. We present computational results using all these methods. Results show that the different methods presented are very efficient for finding solutions to the WMST problem.\nConte\u00fado\n1\tIntrodu\u00e7\u00e3o\t1\n2\tO Problema WMST\t7\n2.1\tDescri\u00e7\u00e3o do Problema\tWMST ....................................... 9\n2.2\tPropriedades do Problema\tWMST ................................... 11\n2.3\tGera\u00e7\u00e3o de Inst\u00e2ncias............................................ 15\n3\tFormula\u00e7\u00e3es\t19\n3.1\tFormula\u00e7\u00f5es Naturais............................................. 21\n3.2\tFormula\u00e7\u00e3es Estendidas .......................................... 24\n3.2.1\tFormula\u00e7\u00e3o de Fluxos ...................................... 24\n3.2.2\tFormula\u00e7\u00e3o Miller-Tucker-Zemlin............................ 26\n3.2.3\tFormula\u00e7\u00e3o de Peso Miller-Tucker-Zemlin.................... 31\n3.2.4\tFormulac\u00e3o de Fluxo com especifica\u00e7\u00e3o de Pesos ............ 36\n3.3\tProcedimento com Introdu\u00e7ao de Cortes............................ 40\n3.4\tExperi\u00e2ncias para Comparac\u00e3o das Formula\u00e7\u00f5es e Resultados Compu-\ntacionais ....................................................... 46\n3.4.1\tExemplo Comparativo das Formulac\u00e3es........................ 46\n3.4.2\tComparac\u00e3o das Formula\u00e7\u00e3es MTZ e WMTZ ..................... 48\n3.4.3\tEstudo Comparativo das Formula\u00e7\u00e3es......................... 57\n3.4.4\tResultados Computacionais.................................. 67\n3.4.5\tS\u00edntese dos Resultados Computacionais...................... 71\n4\tAlgoritmos Lagrangeanos\t73\n4.1\tRelaxa\u00e7\u00e3o Lagrangeana para o Problema WMST ...................... 75\n4.2\tAlgoritmo Lagrangeano Base....................................... 78\ni\n4.3\tComportamento Geom\u00e9trico do Algoritmo Lagrangeano Base para o\nProblema WMST................................................... 81\n4.4\tDefini\u00e7\u00e3o dos Valores Ponderados Utilizados no Algoritmo Lagrangeano\nBase para o Problema WMST....................................... 84\n4.5\tExperi\u00eancias para Compara\u00e7ao dos Algoritmos Lagrangeanos e Resultados Computacionais .......................................... 105\n4.5.1\tExemplo Comparativo dos Algoritmos Lagrangeanos ..........105\n4.5.2\tDescri\u00e7ao dos Valores dos Par\u00eametros Usados nas Experi\u00eancias\nComputacionais Realizadas ............................... 106\n4.5.3\tEstudo Comparativo dos Algoritmos Lagrangeanos e Resultados\nComputacionais........................................... 109\n4.5.4\tS\u00e9ntese dos Resultados Computacionais.....................131\n5\tDesigualdades V\u00e1lidas\t133\n5.1\tDesigualdades de Cobertura (DC).................................135\n5.2\tDesigualdades\tde\tCobertura Impl\u00e9cita\t(DCI)..................... 138\n5.3\tDesigualdades\tde\tCobertura Impl\u00e9cita\tEstendida\t(DCIE)...........141\n5.4\tDesigualdades\tde\tCobertura Impl\u00e9cita\tLevantada\t(DCIL)...........144\n5.5\tDesigualdades\tobtidas por Fixac\u00e3o de\tVari\u00e9veis..................149\n5.5.1\tDesigualdades de Cobertura Impl\u00e9cita Levantada por Down-Lifting\n(DCILDL) ................................................ 150\n5.5.2\tDesigualdades de Cobertura Impl\u00e9cita Levantada por Up-Lifting\n(DCILUL) ................................................ 155\n5.5.3\tDesigualdades Generalizadas de Cobertura Impl\u00e9cita Levantada\n(DGCIL) ................................................. 160\n6\tAlgoritmos de Separa\u00e7\u00e3o\t167\n6.1\tAlgoritmos de Separacao Gen\u00e9ricos................................168\n6.1.1\tAlgoritmo de\tSepara\u00e7\u00e3o\tpara as\tDC.........................171\n6.1.2\tAlgoritmo de\tSepara\u00e7\u00e3o\tpara as\tDCI....................... 177\n6.1.3\tAlgoritmo de\tSepara\u00e7\u00e3o\tpara as\tDCIE...................... 182\n6.1.4\tAlgoritmos de Separa\u00e7\u00e3o para as DCIL..................... 186\n6.1.5\tAlgoritmo de\tSeparac\u00e3o\tpara as\tDCILDL.....................201\n6.1.6\tAlgoritmo de\tSeparac\u00e3o\tpara as\tDCILUL.....................207\n6.1.7\tAlgoritmo de\tSeparac\u00e3o\tpara as\tDGCIL .....................214\nii\n6.2\tExperi\u00eancias e Resultados Computacionais...........................220\n6.2.1\tExperi\u00eancias realizadas com as DCs e as DCIs................221\n6.2.2\tExperi\u00eancias Realizadas com as DCIEs........................222\n6.2.3\tExperi\u00eancias Realizadas com as DCILs........................224\n6.2.4\tExperi\u00eancias Realizadas com as DCILDLs......................226\n6.2.5\tExperi\u00eancias Realizadas com as DCILULs......................228\n6.2.6\tExperi\u00eancias Realizadas com as DGCILs.......................231\n6.2.7\tCompara\u00e7ao dos Algoritmos de Separa\u00e7ao......................233\n6.2.8\tResultados Computacionais...................................237\n6.2.9\tS\u00edntese dos Resultados Computacionais.......................239\n7\tM\u00e9todo Feasibility Pump\t241\n7.1\tHeur\u00edstica Feasibility Pum B\u00e1sica Aplicada ao Problema WMST .... 242\n7.2\tAlterac\u00e3o da Funcao Objetivo na Heur\u00edstica\nFeasibility Pump Aplicada ao Problema WMST.........................247\n7.3\tExtens\u00e3es da Heur\u00edstica Feasibility Pump para o Problema WMST . . . 249\n7.3.1\tModo de Obtenc\u00e3o das Soluc\u00e3es x*............................249\n7.3.2\tCrit\u00e1rios de Arredondamento das Vari\u00e1veis...................250\n7.3.3\tMecanismos de Perturbac\u00e3o...................................252\n7.4\tComportamento da Heur\u00edstica Feasibility Pump.......................253\n7.5\tExperi\u00eancias e Resultados Computacionais...........................256\n7.5.1\tDescric\u00e3o das Experi\u00eancias Computacionais Realizadas........257\n7.5.2\tExemplos Comparativos das Heur\u00edsticas Feasibility Pump .... 260\n7.5.3\tResultados Computacionais...................................263\n7.5.4\tS\u00edntese dos Resultados Computacionais.......................279\n8\tM\u00e9todo Local Branching\t281\n8.1\tLocal Branching Aplicado ao Problema WMST .........................282\n8.2\tExtens\u00e3es do M\u00edtodo Local Branching ...............................286\n8.2.1\tSolu\u00e7\u00e3o de Referencia Inicial...............................287\n8.2.2\tMecanismos de Intensifica\u00e7ao e de Diversificac\u00e3o............288\n8.2.3\tCrit\u00edrios de Paragem........................................289\n8.3\tLocal Branching versus Feasibility Pump............................290\n8.4\tDescri\u00e7\u00e3o dos Algoritmos Local Branching para o WMST...............292\niii\n8.5\tExperi\u00eancias para Compara\u00e7\u00e3o dos Algoritmos Local Branching e Re-\nsultados Computacionais........................................298\n8.5.1\tExemplo Comparativo dos Algoritmos Local Branching......299\n8.5.2\tEstudo Comparativo dos Algoritmos Local Branching.......300\n8.5.3\tResultados Computacionais...............................308\n8.5.4\tS\u00edntese dos Resultados Computacionais...................317\n9 Considera\u00e7\u00f5es Finais\t319\nAnexos\t332\nNotacao Utilizada\t335\nSiglas Utilizadas\t343\nLista de Figuras\t349\nLista de Tabelas\t355\nBibliografia\t362\niv\nCap\u00edtulo 1\nIntrodu\u00e7\u00e3o\nO Problema da Arvore de Suporte de Custo M\u00ednimo com Restri\u00e7\u00f5es de Peso, que designamos por WMST (Weight-Constrained Minimum Spanning Tree Problem), tem na literatura v\u00e1rias denomina\u00e7\u00f5es e podemos encontr\u00e1-lo nas variantes de minimiza\u00e7\u00f5o e maximiza\u00e7\u00f5o. O problema foi mencionado pela primeira vez em 1982 por Aggarwal, Aneja e Nair [3], com a designa\u00e7\u00f5o de Minimum Spanning Tree Subject to a Side Constraint. Outros autores utilizam a designa\u00e7c\u00f5ao Resource-Constrained Minimum Spanning Tree [58] e ainda outros a de Weight-Constraint Minimum Spanning Tree [4, 37, 55, 65]. Para o caso da variante de maximiza\u00e7\u00f5o a designa\u00e7ao mais comum \u00e9 Knapsack-Constrained Maximum Spanning Tree [52, 66].\nO objetivo do Problema WMST \u00e9 a obtencao de uma \u00e9rvore de suporte de custo m\u00ednimo, de tal modo que o peso total da \u00e9rvore n\u00f5o exceda um determinado valor. A introduc\u00f5o da restri\u00e7\u00f5o de peso \u00e0 \u00e9rvore de suporte de custo m\u00ednimo transforma o WMST num problema NP-dif\u00edcil [3].\nO WMST \u00e9e um problema de Otimiza\u00e7c\u00f5ao Combinat\u00e9oria que tem aplicac\u00e7\u00f5ao, por exemplo, no desenho de redes de telecomunica\u00e7c\u00f5oes e redes de comunica\u00e7ca\u00f5o. Em Henn [37] encontram-se dois exemplos de aplica\u00e7\u00f5es do Problema WMST: design of physical systems subjected to limited budgets e minimum cost reliability constrained spanning tree, os quais t\u00eam aplicac\u00f5o em problemas de redes de comunica\u00e7\u00f5o.\nNa literatura, para este problema, podem ser encontradas fundamentalmente duas t\u00e9ecnicas para obtenc\u00e7\u00f5ao de solu\u00e7c\u00f5oes utilizando m\u00e9etodos exatos. Uma das t\u00e9ecnicas consiste no uso da relaxa\u00e7c\u00f5ao Lagrangeana combinada com uma estrat\u00e9egia de Branch and Bound [3, 58] e outra consiste no uso de um algoritmo de tempo pseudo-polinomial\n1\nque usa a teoria espetral de grafos [38].\nO artigo de Ravi e Goemans [54] descreve um esquema aproximado que usa a relaxa\u00e7\u00e3o Lagrangeana e o artigo de Hong, Chung e Park [38] prop\u00f5e um algoritmo de tempo pseudo-polinomial que usa a teoria espetral de grafos e tamb\u00e9m um esquema completo de aproxima\u00e7\u00e3o bicrit\u00e9rio. Os autores Hassin e Levin [35] melhoraram os resultados de [54] e consideram o problema como a interse\u00e7\u00e3o de matr\u00e9ides.\nEm [66] os autores Yamada, Watanabe e Kataoka consideram o problema da arvore de suporte de custo m\u00e9ximo sujeita a restri\u00e7\u00f5es de peso. Provaram que o problema era NP-dif\u00edcil, obtiveram limites superiores usando uma heur\u00edstica de pesquisa local, utilizaram a relaxa\u00e7\u00e3o Lagrangeana para a obtenc\u00e3o de limites inferiores, usaram o algoritmo Branch and Bound e por ultimo um m\u00e9todo para acelerar o tempo computacional. Referem ainda que se pode facilmente aplicar ao caso da minimiza\u00e7c\u00e3ao.\nNo artigo de Xue [65] \u00e9 apresentado um simples, mas eficaz algoritmo primal-dual para obter solu\u00e7c\u00e3oes aproximadas para o problema de encontrar o caminho mais curto com restric\u00e3es de peso (Weight-Constrained Shortest Paths) e para o Problema WMST. O autor apenas apresenta resultados computacionais para o algoritmo aplicado ao primeiro problema, mas afirma que tem inten\u00e7c\u00e3ao de estudar o segundo algoritmo para grafos aleat\u00e9orios e comparar com solu\u00e7co\u00e3es \u00e9otimas obtidas usando o Algoritmo k Smallest Spanning Tree [16].\nEm Henn [37] \u00e9 apresentado um estudo alargado de propriedades e relaxac\u00e3o Lagrangeana para o Problema WMST e um novo algoritmo Branch and Bound.\nEm vez da introdu\u00e7c\u00e3ao da restri\u00e7c\u00e3ao de peso pode-se incluir o peso da \u00e9arvore como segundo objetivo. O problema resultante \u00e9 de uma \u00e1rvore de suporte biobjetivo/bicrit\u00e9rio ([8, 31, 38, 53, 60, 61] entre muitos outros). Em Aggarwal, Aneja e Nair [3] s\u00e3o estabelecidas certas propriedades da solu\u00e7ca\u00e3o \u00e9otima considerando uma a\u00e9rvore de suporte bicrit\u00e9erio.\nEm 2007, Raidl, Pirkwieser e Puchinger [52] apresentaram um algoritmo evolutivo h\u00edbrido para o Problema da Arvore de Suporte de Custo Maximo com Restri\u00e7\u00e3es Saco-mochila, baseado no algoritmo evolutivo proposto para o Problema da A\u00e9 rvore de Suporte de Custo M\u00e9nimo com Restri\u00e7\u00e3es de Grau [39], s\u00e9 adaptaram a inicializac\u00e3o e a varia\u00e7\u00e3o dos operadores.\nRecentemente, Requejo et al. [55] descreveram varias formula\u00e7\u00e3es para o problema, Requejo e Santos [57] apresentaram algoritmos baseados em relaxa\u00e7\u00e3o Lagrangeana e Agra et al. [4] descreveram desigualdades validas para o Problema WMST.\n2\nNesta tese apresentamos v\u00e1rias formula\u00e7\u00f5es e diferentes m\u00e9todos para resolver o Problema WMST, tais como, alguns procedimentos de introdu\u00e7\u00f5o de cortes usando separa\u00e7\u00f5o, o metodo de relaxac\u00f5o: linear e Lagrangeana, alguns m\u00e9todos de gera\u00e7\u00f5o e introduc\u00e7a\u00f5o de desigualdades v\u00e1alidas nas formulac\u00e7o\u00f5es usando separac\u00e7\u00f5ao, o m\u00e1etodo Feasibility Pump para obter uma solu\u00e7\u00f5o inteira admiss\u00e1vel, e por fim o m\u00e9todo Local Branching para melhorar as solu\u00e7\u00f5es admiss\u00e1veis.\nEste trabalho esta organizado da seguinte forma. No Cap\u00e1tulo 2 fazemos uma pequena abordagem a problemas de \u00e1rvores com restri\u00e7\u00f5es adicionais, nos quais se enquadra o Problema WMST. De seguida descrevemos o Problema WMST, apresentamos algumas propriedades importantes e descrevemos o processo de gera\u00e7\u00f5o de inst\u00e2ncias que servir\u00f5o para realizar experi\u00e2ncias e obter resultados computacionais com os diferentes m\u00e9etodos utilizados nesta tese para o Problema WMST.\nNo Cap\u00e1tulo 3 come\u00e7amos por apresentar uma formula\u00e7ao gen\u00e9rica para o Problema WMST. De seguida, apresentamos duas formula\u00e7\u00f5es naturais: uma baseada nas desigualdades de elimina\u00e7c\u00f5ao de subcircuitos e a outra baseada em desigualdades de corte. Depois, apresentamos quatro formula\u00e7c\u00f5oes compactas estendidas: uma formula\u00e7c\u00f5ao de fluxos, duas formulac\u00f5es baseadas nas desigualdades Miller-Tucker-Zemlin e uma formula\u00e7\u00e3o de fluxos que especifica nos \u00e1ndices o peso do caminho desde a raiz. Devido ao uso destas formulac\u00e7\u00f5oes se tornar limitado na pr\u00e1atica, vamos usar um procedimento, baseado em separa\u00e7c\u00f5ao, no qual as restric\u00e7\u00f5oes de corte va\u00f5o sendo introduzidas no modelo. Este procedimento permite obter a solu\u00e7\u00f5o \u00e1tima, ou uma solu\u00e7\u00f5o admiss\u00e1vel pr\u00e1xima da \u00e1tima. No final do cap\u00e1tulo apresentamos resultados computacionais de v\u00e1arias experi\u00e2encias realizadas com as formulac\u00e7\u00f5oes e tamb\u00e1em efetuamos um estudo computacional comparativo entre as varias formula\u00e7\u00f5es apresentadas.\nNo Cap\u00e1tulo 4 come\u00e7amos por fazer uma revis\u00f5o da literatura de alguns algoritmos Lagrangeanos existentes para o Problema WMST e para alguns problemas de Oti-mizac\u00f5o Combinat\u00e1ria. Com o objetivo de obter solu\u00e7\u00f5es aproximadas para o Problema WMST, propomos um algoritmo baseado na relaxa\u00e7\u00f5o Lagrangeana que denomin\u00e1mos de Algoritmo Lagrangeano Base para o Problema WMST e descrevemos o seu comportamento geom\u00e9trico. Para o algoritmo base apresentado propomos diferentes variantes baseadas em algoritmos existentes para problemas de Otimizac\u00f5o Combinat\u00e1ria. Neste Cap\u00e1tulo discutimos ainda os resultados computacionais efetuando um estudo comparativo do ponto de vista computacional entre os va\u00e1rios algoritmos derivados do Algoritmo\n3\nLagrangeano Base.\nNo Cap\u00edtulo 5 com o prop\u00f3sito de fortalecer as formula\u00e7\u00f5es apresentadas no Cap\u00edtulo 3, discutimos classes de desigualdades v\u00e1lidas para o Problema WMST. Come\u00e7amos por adaptar as conhecidas desigualdades de Cobertura para o Problema Saco-mochila Binario para o caso do Problema WMST e apresentamos novas desigualdades v\u00e1lidas baseadas numa estrutura em arvore, que designamos por Desigualdades de Cobertura Impl\u00edcita. Propomos tamb\u00e1m Desigualdades de Cobertura Impl\u00edcita Estendida baseadas nas conhecidas Desigualdades de Cobertura Estendida. Para fortalecer as desigualdades de Cobertura Impl\u00edcita usamos a t\u00e1cnica de levantamento sequencial de vari\u00e1veis e obtemos as Desigualdades de Cobertura Impl\u00edcita Levantada. Por fim, propomos uma generaliza\u00e7\u00e3o das Desigualdades de Cobertura Impl\u00edcita Levantada que podem fortalecer ainda mais as formula\u00e7\u00e3es, sendo estas baseadas na fixac\u00e3o de conjuntos de vari\u00edveis.\nNo Cap\u00edtulo 6 descrevemos dois algoritmos heur\u00edsticos de separa\u00e7\u00e3o gen\u00e9ricos para as classes de desigualdades v\u00edlidas apresentadas no Cap\u00edtulo 5. Num dos algoritmos \u00ede introduzida uma desigualdade v\u00edalida, em cada itera\u00e7ca\u00e3o, enquanto que no outro podem ser introduzidas v\u00edarias desigualdades v\u00edalidas na mesma itera\u00e7c\u00e3ao. De seguida especificam-se as altera\u00e7\u00e3es a efetuar nos algoritmos heur\u00edsticos de separa\u00e7\u00e3o gen\u00edricos para introduzir as desigualdades validas descritas no Cap\u00edtulo 5. Como para algumas classes de desigualdades va\u00edlidas \u00ede necess\u00edario efetuar o levantamento de vari\u00edaveis, apresentamos tamb\u00edm um algoritmo heur\u00edstico baseado em relaxa\u00e7\u00e3o Lagrangeana para determina\u00e7c\u00e3ao dos coeficientes das varia\u00edveis a efetuar levantamento. No final deste cap\u00edtulo, apresentamos um estudo comparativo entre as v\u00edrias experi\u00eancias computacionais realizadas com os algoritmos heur\u00edsticos de separac\u00e3o propostos para as varias classes de desigualdades v\u00edalidas.\nNo Cap\u00edtulo 7 para obter uma soluc\u00e3o inteira admiss\u00edvel descrevemos uma heur\u00edstica denominada de Heur\u00edstica Feasibility Pump B\u00edsica Aplicada ao Problema WMST. Com o intuito de melhorar a qualidade das solu\u00e7oes obtidas, apresentamos uma vers\u00e3o onde se altera a fun\u00e7ao objetivo na Heur\u00edstica Feasibility Pump B\u00edsica aplicada ao Problema WMST. Para melhorar o desempenho das heur\u00edsticas Feasibility Pump propostas referimos algumas extensoes do M\u00edtodo Feasibility Pump para o Problema WMST e apresentamos do ponto de vista geom\u00edtrico o comportamento da Heur\u00edstica Feasibility Pump, no caso geral e no caso particular do problema em estudo. Para finalizar o cap\u00edtulo, discutimos algumas experi\u00eaencias computacionais realizadas, descrevemos quatro estrat\u00edegias Heur\u00edsticas Feasibility Pump e comparamos essas estrat\u00edegias,\n4\ncom a Heur\u00edstica do Xpress aplicada ao nodo raiz utilizando a Formula\u00e7\u00e3o WMTZ e tambem com a primeira solu\u00e7\u00e3o inteira admiss\u00edvel obtida atrav\u00e9s da Formula\u00e7\u00e3o WMTZ quando usa o procedimento Branch and Bound.\nNo Cap\u00edtulo 8 para obter uma soluc\u00e3o inteira admiss\u00edvel aplicamos o M\u00e9todo Local Branching ao Problema WMST atrav\u00eds da implementa\u00e7\u00e3o de um algoritmo que deno-min\u00edmos de Algoritmo Local Branching Cl\u00edssico Aplicado ao Problema WMST. Com o prop\u00edsito de melhorar o desempenho do algoritmo quando aplicado ao Problema WMST s\u00e3ao apresentadas algumas extenso\u00e3es do m\u00edetodo. Para al\u00edem de se compararem os dois m\u00edtodos Feasibility Pump e Local Branching, tamb\u00edm fazemos uma abordagem geom\u00edtrica do comportamento da Heur\u00edstica Local Branching. Neste cap\u00edtulo descrevemos ainda v\u00edarios algoritmos derivados do algoritmo cl\u00edassico e apresentamos um estudo computacional comparativo entre eles. Comparamos tamb\u00edm o melhor destes algoritmos com o Algoritmo Branch and Bound do Procedimento de Introduc\u00e3o de Cortes P-WMTZ+C apresentado no Cap\u00edtulo 3.\nPor fim, no Cap\u00edtulo 9 apresentamos algumas consideracoes finais.\nNo final dos Cap\u00edtulos 3, 4, 6, 7 e 8 s\u00e3o apresentadas s\u00ednteses dos resultados computacionais obtidos para esse cap\u00edtulo.\n5\n6\nCap\u00edtulo 2\nO Problema WMST\nDiversos problemas do mundo real podem ser modelados por grafos. Em muitos problemas, os grafos devem ter estruturas mais pr\u00f3ximas do problema real, particularmente, os problemas com estrutura em \u00f3rvore.\nOs problemas de Otimiza\u00e7ao com topologia em \u00f3rvore surgem num numero surpreendentemente grande de aplica\u00e7\u00f5es, tais como, redes inform\u00f3ticas, redes de transporte, distribui\u00e7\u00e3o de energia, localiza\u00e7\u00f5o de instalacoes, produc\u00f5o industrial, telecomunica\u00e7\u00f5es e muitas outras.\nO Problema da Arvore de Suporte de Custo M\u00ednimo (MCST - Minimum Cost Spanning Tree ou, apenas, MST - Minimum Spanning Tree) \u00f3 um problema de Otimiza\u00e7\u00e3o Combinat\u00f3ria [49] para o qual se conhecem algoritmos eficientes, que em tempo polinomial, permitem obter a solu\u00e7\u00e3o \u00f3tima.\nSe incluirmos uma restri\u00e7\u00e3o adicional ao Problema MST, o problema resultante pertence a chamada classe dos problemas NP-dif\u00edceis [21].\nNa literatura podemos encontrar alguns problemas de \u00f3rvores de suporte de custo m\u00f3nimo com restri\u00e7\u00f5es adicionais que t\u00eam sido alvo de estudo. Para cada problema podemos encontrar muitas refer\u00eancias, mas apenas vamos referir algumas. S\u00f5o eles, o Problema da Arvore de Suporte de Custo M\u00f3nimo com:\n\u2022 Restri\u00e7\u00f5es de Capacidade - Capacited Minimum Spanning Tree [23, 27]\nConsiste em determinar uma \u00f3rvore de suporte de custo m\u00f3nimo centralizada num v\u00e9rtice do grafo 0 (raiz), com a restri\u00e7\u00f5o adicional de a soma dos pesos dos nos de qualquer sub-\u00f3rvore conetada \u00e0 raiz n\u00f5o poder ser maior que um dado valor Q (numero natural).\n7\n\u2022\tRestri\u00e7\u00f5es de Grau - Degree-constrained Minimum Spanning Tree [9, 48]\nPretende-se determinar uma \u00e1rvore de suporte de custo m\u00ednimo tal que o grau dos v\u00e1rtices n\u00e3o exceda um valor m\u00e1ximo.\n\u2022\tRestri\u00e7\u00f5es de Salto - Hop-constrained Minimum Spanning Tree [25, 28]\nConsiste em determinar a \u00e1rvore de suporte de custo m\u00ednimo tal que o numero de saltos no unico caminho desde o nodo raiz at\u00e9 qualquer outro nodo da \u00e1rvore n\u00e3o \u00e1 superior a H (numero natural).\n\u2022\tRestri\u00e7\u00f5es de Di\u00e2metro - Diameter-constrained Minimum Spanning Tree [26, 56]\nNeste problema pretende-se determinar uma \u00e1rvore de suporte de custo m\u00e1nimo sujeita a um limite D (numero natural) para o seu di\u00e2metro.\n\u2022\tRestri\u00e7\u00f5es de Peso - Weight-constrained Minimum Spanning Tree [3, 4]\nConsiste em encontrar uma arvore de suporte de custo m\u00ednimo, de tal modo que o peso total da \u00e1rvore nao exceda um determinado valor W (numero natural). Este \u00e1 o problema em estudo ao longo da tese e vai ser descrito de forma detalhada na Sec\u00e7ao 2.1.\nA inclusao destas restri\u00e7\u00e3es tem a ver com propriedades adicionais que \u00e1 necessario incluir nas redes/arvores. Por exemplo, as restricoes de di\u00e2metro e de salto estao relacionadas com restri\u00e7\u00f5es de atraso m\u00e1ximo e restri\u00e7\u00e3es de fiabilidade da rede, de modo a evitar a degrada\u00e7\u00e3o da qualidade do sinal. As restri\u00e7\u00e3es de capacidade e de grau encontram-se relacionadas com restric\u00e3es de capacidade de certos dispositivos instalados em alguns n\u00e1s e as restri\u00e7\u00e3es de peso ou saco-mochila como tamb\u00e1m s\u00e3o conhecidas encontram-se relacionadas com restric\u00e3es nos custos de instala\u00e7\u00e3o da rede.\n8\n2.1\tDescri\u00e7\u00e3o do Problema WMST\nO Problema da Arvore de Suporte de Custo M\u00ednimo com Restri\u00e7\u00f5es de Peso, WMST ( Weight-constrained Minimum Spanning Tree Problem), \u00e9 definido do seguinte modo.\nConsideremos um grafo completo nao orientado G = (V, E), com o conjunto de\nnodos V = {0,1,... ,n \u2014 1} e o conjunto de arestas E = {{i, j}, i,j G V,i = j}. O n(n \u2014 1)\nconjunto V cont\u00e9m n nodos e o conjunto E cont\u00e9m ------------2---- arestas. Cada aresta\ne = {i, j} G E tem associado um custo ce e um peso we, ambos inteiros e positivos.\nO Problema WMST consiste em encontrar uma \u00e9rvore de suporte T = (V, ET) em G, Et G E, de custo m\u00ednimo C(T) VegET ce, onde o peso total da arvore W(T) Ve\u20ac^, we nao exceda um dado limite W (numero natural). No Problema WMST a restri\u00e7\u00e3o adicional que \u00e9 inclu\u00edda ao Problema MST \u00e9 chamada de restric\u00e3o\nde peso ou restri\u00e7\u00e3o saco-mochila (Knapsack Constraint ou Weight Constraint) e deve\nser de tal forma que\n\u00a3we &lt;W.\nAssim, com a introdu\u00e7\u00e3o desta restricao adicional, o Problema MST transforma-se no Problema WMST que \u00e9 um problema de Otimiza\u00e7\u00e3o Combinat\u00f3ria NP-dif\u00edcil [3]. Denota-se por XWMST o conjunto de todas as solucoes admiss\u00e9veis do Problema WMST e por d(WMST) o valor \u00e9timo.\nExemplo 2.1.\nConsideremos uma inst\u00e2ancia do problema, um exemplo de um grafo com 5 nodos, para o qual os custos e pesos associados a cada aresta se encontram indicados nas seguintes matrizes:\n\t( - 6\t3\t8\t7 A\t\t( -\t1\t9\t8\t7 \\\n\t- 6 2 2\t\t-\t1\t15 16\nH=\t- 4\t5\te\tC =\t- 30 16\n\t- 5\t\t- 10\n\\\t- J\t\\\t- J\nonde H e C s\u00e3o as matrizes de pesos e custos, respetivamente.\n9\nPretendemos obter a \u00e9arvore de suporte de custo m\u00e9nimo com a restri\u00e7ca\u00e3o adicional de o peso da arvore nao poder exceder o valor W = 20 (W(T) &lt;20). Usando, por exemplo, o Algoritmo de Kruskal ou Prim [6] obtemos a \u00e9rvore de suporte de custo m\u00e9nimo ilustrada na Figura 2.1.\n( - 1\nC =\n9\t8\t7\t\\\n1\t15 16\n- 30 16\n- 10\n-\nFigura 2.1: Arvore de suporte de custo m\u00ednimo.\nEsta \u00e9rvore tem custo C(T) = 17 e peso W(T) = 27 pelo que \u00e9 n\u00e3o admiss\u00e9vel para o Problema WMST, pois nao verifica a restri\u00e7ao de peso, ou seja, W(T) = 27 > W = 20. Uma soluc\u00e3o admiss\u00e9vel seria, por exemplo, a \u00e9rvore de suporte da Figura 2.2.\n-1\nC =\n9\t8\t7 >\n1\t15\t16\n-\t30\t16\n\t-\t10\n-\nFigura 2.2: \u00c1rvore de suporte com custo 27 e peso 19.\nA \u00e1rvore representada na Figura 2.2 tem custo C(T) = 27 e peso W(T) = 19. Al\u00e9m de ser admiss\u00e9vel dado que verifica a restri\u00e7\u00e3o de peso (W(T) = 19 &lt;20) ela corresponde a solu\u00e7ao otima do Problema WMST para a inst\u00eancia de 5 nodos considerada.\n10\nUm problema definido num grafo n\u00e3o orientado G = (V, E) pode-se transformar num problema equivalente definido num grafo orientado, onde cada aresta do grafo n\u00e3o orientado e = {0, j} G E \u00e9 substitu\u00edda por um arco (0,j) e cada aresta e = {i,j} G E,i = 0, \u00e9 substitu\u00edda por dois arcos, o arco (i,j) e o arco (j,i). Assim, no grafo orientado G = (V, A), apenas se altera o conjunto de arcos, o qual \u00e9 dado por A = {(i,j), i G V, j G V \\ {0},i = j}. Cada arco (i,j) G A herda os custos e os pesos da aresta correspondente {i,j} do grafo n\u00e3o orientado. Deste modo, cada arco (i,j) tem associado um custo cij e um peso wij, ambos inteiros e positivos.\n2.2\tPropriedades do Problema WMST\nNesta sec\u00e7ao vamos apresentar algumas propriedades do Problema WMST. Para o fazer vamos usar tr\u00eas arvores: a Arvore de Suporte de Custo M\u00ednimo, a Arvore de Suporte de Peso M\u00ednimo e a Arvore de Suporte Ponderada M\u00ednima.\n\u00c1rvore de Suporte de Custo M\u00ednimo (MST)\nO Problema MST consiste em encontrar uma arvore de suporte Tc = (V, ATc), Atc G A em G = (V, A) de custo m\u00ednimo C(Tc) = W(i,j)eA^ Cj.\nPara obtermos uma MST, \u00e1rvore de suporte de custo m\u00ednimo, existem v\u00e1rios algoritmos polinomiais tais como os algoritmos de Sollin, Kruskal e Prim (ver [6]).\n\u00c1rvore de Suporte de Peso M\u00ednimo (MSTW)\nO Problema MSTW consiste em encontrar uma arvore de suporte Tw = (V,ATw), Atw G A em G = (V, A) de peso m\u00ednimo W(Tw) = 12(i,j)eATw wij\u2022\nNeste caso tamb\u00edem podemos recorrer aos algoritmos polinomiais referidos anteriormente para obten\u00e7c\u00e3ao da \u00edarvore Tw (ver [6]).\n11\nAs \u00edrvores Tc e Tw s\u00e3o duas arvores de G, sendo Tc a \u00edrvore de suporte de custo m\u00ednimo e Tw a \u00edrvore de suporte de peso m\u00ednimo. A arvore Tc tem associado um peso W(Tc) V\twij que, n\u00e3o sendo inferior ou igual a W, n\u00e3o \u00ed uma \u00edrvore ad-\nmiss\u00edvel para o Problema WMST. A \u00edarvore Tw tem associado um custo C(Tw) = 12 (i , j)eArw j sendo esta admiss\u00edvel, no caso do seu peso ser inferior ou igual a W. Verifica-se que os custos da \u00edrvore Tc e da \u00edrvore Tw correspondem a um limite inferior e superior, respetivamente, para o valor otimo $(WMST) do Problema WMST, o que nos permite escrever\nC(Tc) &lt;$(WMST) &lt;C(Tw).\nPodemos assumir igualmente a seguinte proposic\u00e7\u00e3ao.\nProposicao 2.1.\nO Problema WMST tem solu\u00e7\u00e3o \u00f3tima se e s\u00f3 se\nW(Tw) &lt;W &lt;W(Tc).\nFacilmente se conclui que se W(Tw) > W, entao o Problema WMST n\u00e3o tem solu\u00e7c\u00e3ao. E temos tamb\u00edem as seguintes proposi\u00e7c\u00e3oes.\nProposicao 2.2.\nSe W(Tc) &lt;W, entao Tc \u00ed uma \u00edrvore correspondente a solucao otima para o Problema WMST.\nProposic\u00e7\u00f5ao 2.3.\nSe W(Tw) &lt;W e C(Tw) = C(Tc), ent\u00e3o Tw \u00ed a \u00edrvore correspondente a solu\u00e7\u00e3o otima para o Problema WMST.\nApesar de Tw ser uma arvore admiss\u00edvel, no caso de W(Tw) &lt;W, o objetivo e encontrar melhores solu\u00e7\u00f5es admiss\u00edveis do que a correspondente solucao da arvore de suporte Tw.\n12\nExemplo 2.2.\nA \u00e1rvore de suporte de custo m\u00ednimo Tc encontra-se representada na Figura 2.1 e temos que C(Tc) = 17 e W(Tc) = 27 pelo que Tc \u00e1 uma \u00e1rvore nao admiss\u00edvel para o Problema WMST (W(Tc) = 27 > 20 = W).\nA \u00e1rvore de suporte de peso m\u00ednimo Tw encontra-se representada na figura seguinte.\n\t\u00ed -\t1\t9\t8 -\t1\t15\t7 16\t\nC =\t\t- 30\t16\t\n\t\t-\t10\t\n\t\t\t-\t/\nFigura 2.3: Arvore de suporte de peso m\u00ednimo.\nA \u00e1rvore Tw tem custo C(Tw) = 70 e peso W(Tw) = 11, pelo que Tw \u00e1 uma \u00e1rvore admiss\u00edvel para o Problema WMST (W(Tw) = 11 &lt;20 = W).\nAssim, 17 &lt;^(WMST) &lt;70 e 11 &lt;W = 20 &lt;27.\n\u00c1rvore de Suporte Ponderada M\u00ednima (MSTP)\nO Problema MSTP consiste em associar valores positivos a cada arco (i, j) G A, os quais s\u00e3o combina\u00e7\u00e3o linear do custo e do peso, sendo estes da forma, pij = awij + bcij, com a e b escalares reais n\u00e3o negativos.\nO Problema MSTP consiste em encontrar a arvore de suporte Tp = (V, ATp),\nATp C A, em G = (V, A) de valor ponderado m\u00e1nimo P(Tp) V(ij)eAT Pj com um peso\tW(Tp)\t=\t(i ;j)\u20acA\tWj\te um custo\tC(Tp)\t=\t(i ;j)\u20acA\tCj.\tPara a obten\u00e7\u00e3o\ndesta arvore Tp tamb\u00e9m podemos recorrer aos algoritmos polinomiais descritos em [6].\nEm particular:\n\u2022 Se a = 0e b =1, entao obtemos a arvore de suporte de custo m\u00e1nimo Tc (Tp = Tc).\n13\n\u2022 Se a = 1 e b = 0, ent\u00e3o obtemos a \u00e1rvore de suporte de peso m\u00ednimo Tw (Tp = Tw).\nNote-se que a \u00e1rvore Tp pode ser uma \u00e1rvore admiss\u00edvel, caso W(Tp) &lt;W ou uma \u00e1rvore nao admiss\u00edvel no caso de W(Tp) > W.\nExemplo 2.3.\nDependendo da escolha dos valores dos par\u00e2metros a e b no c\u00e1lculo dos valores ponderados de cada arco (i, j) G A, podemos obter arvores admiss\u00edveis ou nao admiss\u00edveis. Consideremos, por exemplo, os valores ponderados da forma, pij = 0,5wij + 0,5cj para cada arco (i,j) G A. Na Figura 2.4 encontram-se a matriz de valores ponderados L e a correspondente \u00edrvore de suporte ponderada m\u00ednima Tp.\n\t/ - 3,5\t6\t8\t7\t\\\n\t-\t3,5 8,5\t9\nL =\t-\t17\t10,5\n\t-\t7,5\n\t\\ - /\nFigura 2.4: Arvore de suporte ponderada m\u00ednima (pj = 0,5wj + 0,5cj para todos os (i, j) G A).\nA \u00edrvore Tp obtida na Figura 2.4 tem valor ponderado P(Tp) = 21,5, custo C(Tp) = 19 e peso W(Tp) = 24 pelo que \u00e9 uma \u00edrvore nao admiss\u00edvel para o Problema WMST, pois W(Tp) = 24 > 20 = W.\nCaso se utilize, por exemplo, os valores ponderados da forma, pij = wij + 0,2cij para cada arco (i,j) G A obtemos a matriz de valores ponderados L e a correspondente \u00edrvore de suporte ponderada m\u00ednima Tp representadas na Figura 2.5.\n14\nL =\n\u00ed - 6,2 4,8 9,6\n-\t6,2\t5\n- 10\n5.2\n8.2\n7\n8,4 \\\n- /\nFigura 2.5: Arvore de suporte ponderada m\u00ednima (pj = Wj + 0,2cj para todos os (i, j) G A).\nA \u00e9rvore Tp da Figura 2.5 tem valor ponderado P(Tp) = 21,2, custo C(Tp) = 41 e peso W(Tp) = 13, sendo uma arvore admiss\u00e9vel para o Problema WMST.\n2.3\tGera\u00e7\u00e3o de Inst\u00e2ncias\nNesta sec\u00e7\u00e3o descrevemos o modo como foram geradas as inst\u00e2ncias para o Problema WMST, as quais sao usadas ao longo de toda a tese para obtencao de resultados computacionais dos v\u00e9rios m\u00e9todos propostos. Para gerar as inst\u00e2ncias temos de ter em consideracao que cada aresta e = {i, j} G E tem associado um custo ce e um peso we e temos ainda de definir a constante W que limita o peso. Assim, para obter as matrizes de custos e de pesos e o valor da constante W geramos os seguintes tr\u00e2s tipos de instancias.\n\u2022 Inst\u00e2ncias E\u00fcclideanas (E)\nOs custos ce e os pesos we s\u00e3o obtidos usando distancias Euclideanas. Para obter estas instancias Euclideanas geramos aleatoriamente as coordenadas de n pontos/nodos numa grelha de dimensao 100 x 100. O custo de cada aresta e = {i,j} G E \u00e9 a parte inteira da dist\u00e2ncia Euclideana entre os pontos/nodos i e j gerados na rede. Procedemos de modo semelhante para obter os pesos, gerando uma nova grelha.\nO valor da constante W \u00e9 obtido depois de geradas as matrizes de custos e de pesos. Para obter um valor (admiss\u00e9vel) para o peso limite W temos de ter em considera\u00e7ao a Proposicao 2.1, onde W(Tw) &lt;W &lt;W(Tc). Assim, comecamos\n15\npor obter o peso da \u00e1rvore de suporte de custo m\u00ednimo W(Tc) = Wc e o peso da \u00e1rvore de suporte de peso m\u00ednimo W(Tw) = Ww e depois testamos os seguintes\nvalores para Wi,\nWi = W+Ww,\n2i\ncom i G {1,..., 10}. No caso do valor de Wi n\u00e1o ser inteiro, efetua-se o arredondamento sim\u00e1trico. Dos v\u00e1rios valores Wi testados escolheu-se para o valor de\nW aquele que tornava a inst\u00e2ncia mais dif\u00edcil de resolver.\n\n\nInst\u00e2ncias Aleat\u00f3rias (R)\nOs custos ce e os pesos we s\u00f5o gerados aleatoriamente no intervalo [1; 1000].\nO valor da constante W foi obtido como no grupo de inst\u00e2ncias Euclideanas e tamb\u00e9m ap\u00e1s a gerac\u00f5o das matrizes de custos e pesos.\nInst\u00e2ncias Quase Caminh\u00f3s (QC)\nOs custos ce s\u00f5o gerados de acordo com o conjunto de instancias Spanner descrito em Pisinger [50]. Para obter os custos ce usando o conjunto spanner neste grupo de inst\u00e2ncias s\u00f5o necess\u00e1rios, os par\u00e2metros s e m inteiros e positivos, onde s \u00e1 o tamanho do conjunto spanner e m \u00e1 o limite superior do intervalo para o multiplicador, isto e, gera-se aleatoriamente um multiplicador ma no intervalo [1; m]. Tendo fixado valores para os par\u00e2metros s e m, os custos ce sao obtidos da seguinte forma:\n1. gera-se aleatoriamente cj no intervalo [1; 100], j G {1,..., s};\n2. obt\u00eam-se os itens do conjunto spanner ck =\n2cj\nm\nj,k G {1,...,s};\n3. gera-se aleatoriamente um multiplicador ma (inteiro) no intervalo [1; m] e escolhe-se de forma aleatoria um custo ck, k G {1,..., s};\n4. obtem-se ce = mack.\nApos a realiza\u00e7\u00e3o de experi\u00e2ncias computacionais com varios valores de s e m, verificamos que as inst\u00e2ncias sao mais dif\u00edceis de resolver quando usamos m =10 e valores inteiros entre 2 e 6 para o valor do par\u00e2metro s.\nDepois de gerados os custos, geram-se os pesos we de tal modo que a estrutura da correspondente solu\u00e7\u00e3o seja um quase caminho, ou seja, um grafo com di\u00e2metro grande, mas cujo diametro seja inferior a n \u2014 1. Para gerar os pesos come\u00e7a-se\n16\npor definir um valor para a constante W e inicializa-se o peso de cada aresta a 1. De seguida, obt\u00e9m-se a arvore de suporte de custo m\u00ednimo e atribuem-se pesos elevados \u00e0s arestas que pertencem a esta \u00e9rvore. Para as restantes arestas, aquelas que nao pertencem \u00e0 MST, os pesos s\u00e3o gerados de forma a obter-se uma solu\u00e7\u00e3o proxima de um caminho. Para o conseguir, os pesos das arestas que n\u00e3o pertencem \u00e0 MST obt\u00eam-se do seguinte modo\nW\nwe =-------(1 - p) + r,\nn \u2014 1\nonde p G [0,5; 1] e r \u00f3 gerado aleatoriamente no intervalo\n1 W 1 1;------,p .\nn \u2014 1\nNo caso\ndas arestas continuarem a ter peso 1 usamos a seguinte f\u00e9ormula para determinar\nos pesos\nW\nwe =------(1 + aip) + a2r,\nn \u2014 1\nonde a1 e a2 E [0; 10]. No caso dos valores dos pesos we n\u00e3o serem inteiros efetua-se o arredondamento sim\u00e9trico. A constante W toma valores no intervalo [1000; 3500] consoante a dimensao n da inst\u00eancia.\nEm todos os grupos de inst\u00eancias foram gerados exemplos de 10, 20, 40, 60, 80, 100, 150, 200, 300, 400, 500 e 1000 nodos. Nas inst\u00eancias Aleat\u00e9rias e Euclideanas foram gerados 5 exemplos de cada dimensa\u00e3o, perfazendo um total de 60 inst\u00eaancias em cada um dos grupos. Nas inst\u00eancias Quase Caminhos foram gerados 10 exemplos de cada dimens\u00e3ao com menos de 200 nodos e 5 exemplos para inst\u00eaancias com 200 ou mais nodos. Assim no grupo de inst\u00eancias Quase Caminhos existem um total de 95 instancias teste. Em suma, foram geradas 215 instancias no total.\n17\n18\nCap\u00edtulo 3\nFormula\u00e7\u00f5es\nO WMST \u00e1 um problema de Otimiza\u00e7\u00e3o Combinatoria que pode ser formulado em Programa\u00e7\u00e3o Linear Inteira (PLI). Para um mesmo problema diferentes formula\u00e7\u00e3es podem diferir em termos dos correspondentes limites inferiores obtidos atrav\u00e9s da relaxa\u00e7\u00e3o em programa\u00e7\u00e3o linear. A qualidade do limite inferior obtido depende da formula\u00e7\u00e7\u00e3ao em PLI que se utiliza.\nPara o Problema MST s\u00e3o conhecidas algumas formula\u00e7\u00f5es (ver Magnanti e Wolsey [45]). Para obter formula\u00e7\u00e3es para o Problema WMST pode-se facilmente adaptar uma formula\u00e7\u00e3o para o MST e adicionar a restri\u00e7\u00e3o que limita o peso das arestas na \u00e9rvore de suporte. Esta restricao \u00e9 uma restri\u00e7\u00e3o tipo saco-mochila. A introdu\u00e7\u00e3o desta restri\u00e7ao torna o problema NP-dif\u00e1cil [3].\nAs formula\u00e7c\u00e3oes em Programa\u00e7ca\u00e3o Linear Inteira para Problemas de Otimiza\u00e7c\u00e3ao Combinatoria s\u00e3o, de um modo geral, consideradas formula\u00e7\u00f5es naturais ou formula\u00e7\u00e3es estendidas. Informalmente, e para problemas em arvores, podemos dizer que uma formula\u00e7\u00e3o natural usa apenas as vari\u00e1veis de desenho topol\u00e1gico da \u00e1rvore (uma unica vari\u00e1vel associada a cada arco do grafo). Uma formula\u00e7\u00e3o diz-se estendida se usa, adicionalmente, outras vari\u00e1veis (associadas aos arcos ou nao). Estas variaveis adicionais, apesar de n\u00e3ao serem necessa\u00e1rias para a obten\u00e7c\u00e3ao de uma formula\u00e7c\u00e3ao va\u00e1lida para o problema, cont\u00eam informa\u00e7ao adicional que pode reduzir, consideravelmente, o numero de restri\u00e7c\u00e3oes envolvidas no modelo. Al\u00e1em disso, o seu uso permite derivar formula\u00e7c\u00e3oes compactas (formulacoes que envolvem um numero polinomial de restri\u00e7\u00e3es e vari\u00e1veis).\nNesta sec\u00e7c\u00e3ao apenas consideramos formula\u00e7c\u00e3oes orientadas para o Problema WMST definidas num grafo orientado. Sem perda de generalidade, consideramos o nodo 0 como o nodo raiz.\n19\nConsiderem-se as vari\u00e1veis bin\u00e1rias xij para todos os arcos (i,j) G A, que indicam se o arco (i,j) est\u00e1 ou nao na solu\u00e7ao, ou seja,\n{1,\tse o arco (i,j) pertence \u00e0 solu\u00e7\u00e3o;\nz\n0,\tcaso contr\u00e1rio.\ne para simplificar a notac\u00e3o assumimos que as vari\u00e1veis xi0, i G V\\{0} t\u00eam sempre valor nulo.\nVamos considerar que XT representa o conjunto de todas as solucoes admiss\u00edveis definidas por uma formula\u00e7\u00e3o para o Problema MST, no qual o conjunto de desigualdades definido para x, com x = (xij-) G R|A|, descreve o involucro convexo das soluc\u00e3es inteiras do Problema MST. Assim, este conjunto de restri\u00e7\u00f5es garante que a solu\u00e7\u00e3o tem uma estrutura de arvore (mais precisamente arboresc\u00eancia) de suporte. Uma formula\u00e7\u00e3o gen\u00e1rica para o Problema WMST pode ser dada pelo seguinte modelo:\n(WMST) :\tmin\tCjjxij\t(3.1)\n\t\t\n\ts.a. x G XT\t(3.2)\n\tyy wij xij &lt;w.\t(3.3)\n\t\t\nA fun\u00e7\u00e3o objetivo, dada pela express\u00e3o (3.1), indica que se pretende minimizar o somat\u00f3rio dos custos dos arcos na solu\u00e7\u00e3o. A desigualdade (3.3) \u00e9 a restri\u00e7\u00e3o que limita o peso total da arvore de suporte e garante que a soma dos pesos dos arcos na solu\u00e7\u00e3o n\u00e3o pode exceder um limite W, sendo esta denominada de restri\u00e7ao de peso.\nNotamos que a validade de uma qualquer formulac\u00e3o para o Problema WMST obtida juntando a restri\u00e7\u00e3o (3.3) a uma conhecida formula\u00e7\u00e3o para o Problema MST (conjunto de restricoes dadas por (3.2)) torna-se imediata. As quatro primeiras for-mula\u00e7\u00e3es que apresentamos (ES, CS, MF e MTZ) s\u00e3o obtidas desta forma. O processo de obtenc\u00e3o das duas ultimas formula\u00e7\u00f5es (WMTZ e WE) ja foi diferente.\n20\nNeste cap\u00edtulo, apresentamos formula\u00e7\u00f5es naturais e estendidas para o Problema WMST e apresentamos tamb\u00e9m um procedimento com introdu\u00e7ao de cortes baseado em separac\u00f5o.\nNa Sec\u00e7\u00f5o 3.1 fazemos uma breve apresenta\u00e7\u00f5o de duas formula\u00e7\u00f5es naturais para o Problema WMST, uma onde a express\u00f5o designada por (3.2) representa desigualdades de elimina\u00e7ao de subcircuitos e a outra desigualdades de corte. Na Secc\u00f5o 3.2 s\u00f5o apresentadas quatro formula\u00e7\u00f5es compactas estendidas: uma formula\u00e7\u00f5o de fluxos, duas formula\u00e7\u00f5es baseadas nas desigualdades Miller-Tucker-Zemlin e uma formula\u00e7\u00f5o de fluxos que especifica nos \u00edndices o peso do caminho desde a raiz. Uma vez que o uso destas formulac\u00f5es na pr\u00e9tica torna-se limitado, na Secc\u00f5o 3.3 vamos usar um procedimento, baseado em separac\u00e7\u00f5ao, no qual as restri\u00e7co\u00f5es de corte v\u00f5ao sendo introduzidas e que nos permite obter a solu\u00e7c\u00f5ao \u00edotima, ou uma soluc\u00e7\u00f5ao admiss\u00edvel pr\u00edoxima da \u00e9tima. Por fim, na Sec\u00e7\u00f5o 3.4 apresentamos resultados computacionais de varias experi\u00eancias realizadas com as formula\u00e7\u00f5es e efetuamos um estudo comparativo entre as va\u00e9rias formula\u00e7co\u00f5es apresentadas em termos de qualidade do limite inferior obtido e tempo de execu\u00e7c\u00f5ao na obten\u00e7c\u00f5ao da soluc\u00e7a\u00f5o \u00e9otima ou de uma solu\u00e7c\u00f5ao admiss\u00e9vel. No final da Secc\u00f5o 3.4, em forma de resumo do cap\u00edtulo apresentamos uma s\u00edntese dos resultados computacionais obtidos.\n3.1\tFormulacoes Naturais\nNesta sec\u00e7ao apresentamos duas formula\u00e7\u00f5es naturais para o Problema WMST, uma onde a express\u00e3ao designada por (3.2) representa desigualdades de elimina\u00e7ca\u00e3o de subcircuitos e a outra desigualdades de corte. Nas duas formulac\u00e7\u00e3oes naturais que se seguem considere-se, apenas o conjunto de vari\u00e9veis bin\u00e9rias orientadas xij.\nUma das formula\u00e7c\u00e3oes usa as desigualdades de elimina\u00e7c\u00e3ao de subcircuitos e a outra desigualdades de corte para assegurar a conexidade/prevencao de circuitos na soluc\u00e3o.\nDados dois subconjuntos S1,S2 \u00c7 V. O conjunto\nA(Si, S2) = {(i,j) E A : i E Si,j E S2}\ndesigna o conjunto de arcos com um extremo em S1 e outro extremo em S2 e orientados\n21\nno sentido de Sj, para S2. Quando, Sj, = S2 = S, A(S) designa o conjunto de arcos com ambos os extremos em S. Seja Sc = V \\ S, o conjunto complementar de S.\nFormula\u00e7\u00f5o de Elimina\u00e7\u00f5o de Subcircuitos\nA Formulac\u00e7\u00e3ao de Elimina\u00e7ca\u00e3o de Subcircuitos (ES) tamb\u00edem conhecida por Packing/Subsets Formulation [45] no contexto do Problema WMST \u00ed dada por\nmin 52 cijxij (i, j)eA\ns.a.\nE Xij = |V| - 1\t(3.4)\n(i , j')\u20acA\n52 Xij &lt;|S|- 1, S C V,S = 0, 2 &lt;|S| &lt;|V|- 1\t(3.5)\n(i , j)eA(S)\n52 WijXij &lt;W\t(3.6)\n(i , j)eA\nxij G {0, 1},\t(bj) G A-\t(3.7)\nAs restric\u00e3es de cardinalidade (3.4) asseguram que s\u00e3o escolhidos exatamente |V| \u20141 arcos para estarem na solu\u00e7\u00e3o. Estas restric\u00e3es podem ser substitu\u00eddas pelo seguinte conjunto de restri\u00e7c\u00e3oes\n52xij = 1\tj G V\\{0}\t(3.8)\niev\nque garantem que um e apenas um arco chega a cada nodo, exceto para o nodo raiz.\nO conjunto de restri\u00e7c\u00e3oes (3.5) impede que o conjunto de arcos escolhidos para a soluc\u00e7\u00e3ao contenha ciclos. Estas restric\u00e7\u00e3oes s\u00e3ao chamadas de restric\u00e7o\u00e3es de elimina\u00e7c\u00e3ao de subcircuitos ou packing constraints e restringem o nu\u00edmero de arcos que podem ser adicionados (packed) em qualquer conjunto de nodos S. Observe-se que este segundo conjunto de restric\u00e3es com |S| = 2 implica xij + Xji &lt;1, para qualquer arco (i, j) G A, o que indica que o arco (i, j) e o seu sim\u00edtrico (j,i) nao podem estar simultaneamente na soluc\u00e7\u00e3ao. Estas restric\u00e7\u00e3oes (3.5) quando conjugadas com as restric\u00e7\u00e3oes (3.8), garantem a obtenc\u00e7a\u00e3o de uma soluc\u00e7\u00e3ao com estrutura de \u00edarvore de suporte.\nA restri\u00e7c\u00e3ao de peso (3.6) assegura que o peso total dos arcos na solu\u00e7c\u00e3ao n\u00e3ao pode exceder W. Por fim, as restric\u00e7\u00e3oes (3.7) s\u00e3ao as restri\u00e7c\u00e3oes de integralidade das vari\u00edaveis.\n22\nFormula\u00e7\u00e3o de Cortes\nA Formula\u00e7\u00e3o de Cortes (CS) \u00e9 conhecida por CutSet Formulation [45] e, no contexto do Problema WMST, \u00e9 dada atrav\u00e9s do seguinte modelo:\nmin\ncij xij\n(i,j)eA\ns.a.\nxij = 1,\nieV\nxij \u2014 1,\n(i,j)eA(S',sc)\nwij xij &lt;W\n(i,j)eA\nxij E {0, 1},\nj E V\\{0}\nS c V,S = 0,0 E S\n(i, j) E A.\n(3.9)\n(3.10)\n(3.11)\n(3.12)\nRelativamente \u00e0 formula\u00e7\u00e3o anterior, nesta formula\u00e7\u00e3o, apenas houve altera\u00e7\u00e3o no conjunto de restri\u00e7\u00f5es dado por (3.10). As restri\u00e7\u00e3es (3.10) estabelecem que, qualquer corte direcionado A(S, Sc), separando o n\u00f3 0 G S de qualquer outro conjunto de n\u00f3s, Sc, deve conter pelo menos um arco. Estas desigualdades s\u00e3o chamadas de restri\u00e7\u00e3es de corte. As restri\u00e7\u00f5es (3.10) juntamente com as restri\u00e7\u00e3es (3.9) garantem a obten\u00e7ao de uma solu\u00e7ca\u00e3o com estrutura de \u00f3arvore de suporte.\nSubstituindo as restri\u00e7\u00e3es de integralidade nas duas formula\u00e7\u00f5es por,\nxij > 0,\t(i,j) G A,\t(3.13)\nobtemos, em ambos os modelos, a respetiva relaxa\u00e7ao linear que designamos por ESL e CSL, respetivamente. A relaxacao linear de ambos os modelos fornece o mesmo limite inferior, d(ESL) = i9(CSl) [45]. Como o numero de desigualdades em ambos os conjuntos aumenta exponencialmente com o tamanho do modelo, vamos usar na Sec\u00e7c\u00e3ao 3.3 um procedimento que efetua a inser\u00e7c\u00e3ao das restri\u00e7c\u00e3oes de corte no modelo apenas quando estas n\u00e3ao esta\u00e3o a ser satisfeitas pela solu\u00e7c\u00e3ao obtida usando a atual relaxac\u00e7\u00e3ao.\n23\n3.2\tFormula\u00e7oes Estendidas\nCom o objetivo de garantir a conexidade/prevenc\u00f5o de circuitos na soluc\u00f5o, em vez de usar a fam\u00f3lia de desigualdades (3.5) ou (3.10) com um numero exponencial de desigualdades, podemos usar formula\u00e7c\u00f5oes compactas estendidas. Nesta sec\u00e7c\u00f5ao propomos quatro formulac\u00f5es estendidas: uma formula\u00e7\u00f5o de fluxos, duas formula\u00e7\u00f5es baseadas nas desigualdades Miller-Tucker-Zemlin e uma formulac\u00f5o de fluxos que especifica nos \u00f3ndices o peso do caminho desde a raiz.\n3.2.1\tFormula\u00e7\u00f5o de Fluxos\nCome\u00e7amos por apresentar uma formula\u00e7ao orientada com fluxos desagregados para o Problema WMST. Esta formula\u00e7\u00e3o obtem-se adicionando as restri\u00e7\u00e3es de peso a uma conhecida formula\u00e7\u00e3o de fluxos para o Problema MST (veja-se, por exemplo, Magnanti e Wolsey [45]).\nPara alem das variaveis binarias xij usamos tambem as variaveis de fluxo orientadas, fij, para todos os arcos (i,j) E A e k E V\\{0, i}, que indicam se o arco (i,j) \u00e9 ou n\u00e3o utilizado no caminho da raiz para o nodo k, ou seja,\nfk = &lt;\u2019\nfij\t\u00a10,\nse o arco (i, j) e utilizado no caminho da raiz ate ao nodo k caso contrario\ne para simplificar a nota\u00e7\u00e3o assumimos tambem que as variaveis ji0, i E V\\{0} e k E V\\{0, i} t\u00eam sempre valor nulo.\nA Formulagao de Fluxo (MF - Multicommodity Flow Formulation) para o Problema WMST e a seguinte:\n24\nmin\tCij Xij\ns.a.\nxij\t1,\t\tj G V\\{0}\t(3.14)\n\u00cdGV\t\t\t\n1\t' -1 j = 0\t\t\nE fj - E fk = (\t0 j = 0,k ,\tj G V, k G V\\{0}\t(3.15)\niGV\\{k}\tiev\\{0}\t1\t1 j = k\t\t\nfij &lt;xij,\t\t(i,j) G A,k G V\\{0,i}\t(3.16)\nwij xij &lt;w\t\t\t(3.17)\n(\u00cd,3)ZA\t\t\t\nfij > 0,\t\t(i,j) G A,k G V\\{0,i}\t(3.18)\nxij G {0, 1}\t\t(i, j) G A.\t(3.19)\nAs restri\u00e7\u00e3es de cardinalidade (3.14) garantem que um e apenas um arco chega a cada nodo exceto para o nodo raiz.\nAs restric\u00e3es (3.15) s\u00e3o as restri\u00e7\u00e3es de conserva\u00e7\u00e3o de fluxo e estabelecem que a soluc\u00e3o deve ter um caminho entre o nodo 0 e cada nodo k, para todo k G V\\{0}. O primeiro conjunto de restri\u00e7\u00f5es de conservac\u00e3o de fluxo garantem que a raiz envia uma unidade de fluxo para o nodo k, o segundo conjunto de restric\u00e7\u00e3oes garantem que a quantidade de fluxo que entra num no \u00e9 igual a quantidade de fluxo que sai desse no e o terceiro conjunto de restri\u00e7c\u00e3oes implicam que o nodo k recebe uma unidade de fluxo.\nAs restric\u00e3es de liga\u00e7\u00e3o (3.16) garantem que \u00e9 poss\u00edvel enviar fluxo para cada nodo k atraves do arco (i,j), apenas se o arco se encontra na solu\u00e7ao. Juntamente com as restric\u00e7\u00e3oes de conserva\u00e7ca\u00e3o de fluxo estas restri\u00e7c\u00e3oes asseguram a liga\u00e7c\u00e3ao dos arcos da solu\u00e7\u00e3o. A restri\u00e7\u00e3o de peso (3.17) assegura que o peso total dos arcos na soluc\u00e3o n\u00e3o pode exceder W. As restri\u00e7\u00e3es (3.18) garantem que a quantidade de fluxo enviado entre dois quaisquer nodos \u00e9 n\u00e3o negativa. Por fim, as restri\u00e7\u00e3es (3.19) sao as restric\u00e3es de integralidade das variaveis.\n25\n0\n= 1\nf54 = 1\ntil = 1\n\u00d3\nFigura 3.1: Exemplo com o\nvalor das vari\u00e1veis de fluxo na Formulacao MF.\nNa Figura 3.1 mostramos um exemplo onde podemos observar uma solu\u00e7\u00e3o para o problema mostrando apenas o valor das variaveis de fluxo no caminho do nodo 0 para o nodo 1. Podemos observar que o nodo 0 envia uma unidade de fluxo para o nodo 1, pelo que o nodo 1 vai receber essa unidade de fluxo, para cada um dos restantes nodos do caminho a quantidade de fluxo que entra em cada nodo \u00e9 igual \u00e0 quantidade de fluxo que sai desse n\u00e9.\nSubstituindo as restri\u00e7\u00f5es de integralidade (3.19), por:\nXij > 0,\t(i,j) G A,\t(3.20)\nobtemos a relaxa\u00e7ao linear da Formula\u00e7\u00f5o MF que designamos por MFL. Note que n\u00f5o \u00e9 necessario incluir as restric\u00f5es Xj &lt;1 ((i,j) G A) nem fj &lt;1 ((i,j) G A, k G V\\{0,i}), pois estas restri\u00e7\u00f5es est\u00f5o impl\u00edcitas por (3.14) e (3.16).\nA relaxa\u00e7\u00f5o linear deste modelo fornece o mesmo limite inferior que os modelos da sec\u00e7\u00f5o anterior, isto \u00e9, d(MFL) = d(ESL) = d(CSL) [45]. Resultado que n\u00f5o se altera por ter sido inclu\u00edda a restricao de saco-mochila.\n3.2.2\tFormula\u00e7\u00e3o Miller-Tucker-Zemlin\nPodemos obter uma formulac\u00e7a\u00f5o para o Problema WMST baseada nas restri\u00e7c\u00f5oes Miller-Tucker-Zemlin se substituirmos as restric\u00f5es (3.15), (3.16) e (3.18) pelas res-tri\u00e7c\u00f5oes de elimina\u00e7c\u00f5ao de subcircuitos de Miller-Tucker-Zemlin (MTZ Subtour Elimination Constraints). Nesta formula\u00e7c\u00f5ao usamos as vari\u00e9aveis bina\u00e9rias usuais xij\n26\n((i, j) G A) que indicam se o arco (i,j) esta ou nao na solu\u00e7\u00e3o e que s\u00e3o usadas para definir a topologia das solucoes. Consideramos tamb\u00edm as variaveis u (i = 0,1,..., n-1), as quais definem a posi\u00e7c\u00e3ao do nodo i na \u00edarvore, isto \u00ede, o nu\u00edmero de arcos no caminho entre o nodo raiz e o nodo i.\nA Formulac\u00e3o Miller-Tucker-Zemlin (MTZ) para o Problema WMST \u00ed a seguinte:\nmin\tcij xij (i,j)eA\ns.a.\nXij\t1,\tj G V\\{0}\t(3.21)\nieV\t\t\nnxij + ui &lt;Uj + (n - 1),\t(i,j) G A\t(3.22)\nwij xij &lt;w\t\t(3.23)\n(i,j)eA\t\t\n0 &lt;ui &lt;n - 1,\tiGV\t(3.24)\nxij G {0, 1 } ,\t(i,J) G A.\t(3.25)\nTal como vimos nas formula\u00e7\u00e3es anteriores as restri\u00e7\u00e3es de cardinalidade (3.21) garantem que um e apenas um arco chega a cada nodo exceto para o nodo raiz. A restri\u00e7ao de peso (3.23) assegura que o peso total dos arcos na solu\u00e7ao n\u00e3o excede W. As restri\u00e7\u00e3es (3.25) s\u00e3o as restric\u00e3es de integralidade das vari\u00edveis.\nAs restri\u00e7\u00e3es (3.22) sao as conhecidas restri\u00e7\u00f5es de elimina\u00e7\u00e3o de subcircuitos dadas em Miller et al. [46] para o Problema do Caixeiro Viajante (TSP - Travelling Salesman Problem) e que foram adaptadas para o Problema MST com restri\u00e7\u00e3es de salto [24]. As restri\u00e7\u00f5es (3.24) asseguram que o numero de arcos no caminho entre o nodo raiz e o nodo i \u00ede n\u00e3ao negativo e que nunca excede o nu\u00edmero de arestas da a\u00edrvore.\n27\nSe Xij\t= 1, ent\u00e3o u\t<\tUj\t- 1.\nSe Xj\t= 0, ent\u00e3o ui\t<\tUj\t+ (n\t- 1).\nU5 = 2\nu4 = 2\nu0 = 0\nU6 \u2014 1\nU3 = 2\nFigura 3.2: Exemplo do c\u00e1lculo das posi\u00e7\u00f5es dos nodos na arvore.\nNa Figura 3.2 podemos observar um exemplo onde indicamos as v\u00e9rias posic\u00e3es dos nodos na arvore. Por exemplo, a posi\u00e7\u00e3o do nodo 5 na \u00e9rvore \u00e9 dada pelo numero de arcos no caminho entre o nodo raiz (0) e o nodo 5 que \u00e9 igual a 2 arcos, u5 = 2.\nNo exemplo da Figura 3.2, se a solu\u00e7\u00e3o for um caminho, com nodo origem 0 e nodo destino 6, a posic\u00e3o do ultimo nodo do caminho \u00e9 u6 = 6. As posicoes dos nodos nunca excedem o numero de arestas da arvore (uj &lt;n - 1, j G V).\nNote-se que para a formulac\u00e3o do Problema WMST nao \u00e9 necessario conhecer as posi\u00e7\u00e3es exatas dos nodos na arvore, o que e importante \u00e9 que se o arco (i,j) esta na solu\u00e7ao, a diferenca maxima entre as posi\u00e7\u00e3es dos nodos j e i seja superior ou igual a um, isto e,\nUj - Ui > 1,\t(i,j) G A.\nSubstituindo as restri\u00e7co\u00e3es de integralidade (3.25) por:\nXij > 0,\t(i,j) G A,\t(3.26)\nobtemos a relaxacao linear da Formulac\u00e3o MTZ que designamos por MTZL. Note que n\u00e3o e necessario incluir as restri\u00e7\u00f5es xij &lt;1 ((i,j) G A), pois estas restricoes est\u00e3o impl\u00edcitas por (3.21).\n28\nAs restric\u00e3es (3.22) podem ser fortalecidas (ver Desrochers e Laporte [15] e Gouveia [24]) da seguinte forma:\nDesigualdades Levantadas 1 - MTZl1\n(n - 2)xji + nxij + Ui &lt;Uj + (n - 1),\t(i,j) G A\t(3.27)\nA validade destas restri\u00e7\u00e3es decorre do facto das vari\u00e1veis xij e Xji nao poderem tomar simultaneamente o valor 1, xij + Xji &lt;1. Se Xji = 0, as restric\u00e3es (3.27) est\u00e3o impl\u00e1citas por (3.22) e no caso de Xji = 1, temos que xij = 0, o que significa que existe um arco direcionado que liga os dois nodos j e i, sendo que a diferen\u00e7a m\u00e1xima entre a posi\u00e7\u00e3o dos nodos i e j \u00e1 inferior ou igual a 1, o que se verifica nas restri\u00e7\u00e3es (3.27), pois para este caso u \u2014 Uj &lt;1.\nDesigualdades Levantadas 2 - MTZl2\nxkj + nxij + Ui &lt;Uj + (n \u2014 1),\t(i,j) G A\t(3.28)\nkev\\{i,j}\nDas restri\u00e7\u00f5es (3.21) temos que 52kev\\{i,j} Xkj &lt;1, pelo que 52kev\\{i,j} Xkj e a variavel xij nao podem tomar simultaneamente o valor 1. Se 52\\{i j} xkj = 0, as restri\u00e7\u00f5es (3.28) estao impl\u00e1citas por (3.22). Caso 52k\u00a3V\\{i j} xkj = 1 temos que para algum k G V\\{i,j}, xkj = 1 e xij = 0, o que significa que existe um arco direcionado que liga os nodos k e j, e desta forma a diferen\u00e7a m\u00e1xima entre a posi\u00e7\u00e3o dos nodos i e j nao pode ser superior a n \u2014 2, o que est\u00e1 de acordo com as restri\u00e7\u00e3es (3.28), onde para este caso se obt\u00e1m u \u2014 Uj &lt;n \u2014 2. Portanto, estas restri\u00e7\u00f5es sao v\u00e1lidas para o Problema WMST.\nDesigualdades Levantadas 3 - MTZl3\n(xik + Xkj) + nxij + Ui &lt;Uj + (n \u2014 1),\t(i,j) G A\t(3.29)\nkev\\{i,j}\n29\nDas restri\u00e7\u00e3es (3.21) temos que 52kev\\{i j} xkj &lt;1 e tamb\u00e9m V(i jjgA xij- = n \u2014 1, entao 52keV\\{i j} xik &lt;n \u2014 2, pois o nodo i pode ligar a todos os nodos exceto ao nodo j. Deste modo, temos que o somat\u00e9rio 52keV\\{i j}(xik + xkj) pode tomar valores inferiores ou iguais a n \u2014 1.\nSe 52keV\\{i j}(xik + xkj) = 0, as restri\u00e7\u00e3es (3.29) est\u00e3o impl\u00e9citas por (3.22).\nSe 52keV\\{i j} xik = 0, as restricoes (3.29) estao impl\u00e9citas por (3.28).\nSe 52keV\\{i j}(xik + xkj) = p &lt;n \u2014 1 com p E Z+, ao substituirmos nas restric\u00e3es\n(3.29)\to somat\u00f3rio por p, obtemos p+nxj+ui &lt;Uj+n\u20141. No caso de 52keV\\{i j} xkj = 1 temos que para algum k E V\\{i, j}, xkj = 1 e xij = 0, temos que ui \u2014 Uj &lt;n \u2014 1 \u2014 p &lt;n \u2014 1. No caso de 52kgV\\{i j} xkj = 0 e xij = 1 temos que Uj \u2014 ui > p + 1. Ambas estas restri\u00e7c\u00e3oes s\u00e3ao v\u00e9alidas para o Problema WMST.\nDesigualdades Levantadas 4 - MTZl4\nxkj + (n \u2014 3)xji + nxij + Ui &lt;Uj + (n \u2014 1),\t(i,j) E A\t(3.30)\nkeV\\{i,j}\nDas restri\u00e7\u00e3es (3.21) temos que 52keV\\{i ,j} xkj &lt;1. Se 52keV\\{i j xkj = 0, as restric\u00e7\u00e3oes (3.30) transformam-se nas restri\u00e7c\u00e3oes\n(n \u2014 3)xji + nxij + Ui &lt;Uj + (n \u2014 1),\t(i, j) E A\t(3.31)\nA validade das restri\u00e7c\u00e3oes (3.31) decorre do facto das vari\u00e9aveis xij e xji n\u00e3ao poderem tomar simultaneamente o valor 1, xij + xji &lt;1. Se xji = 0, as restri\u00e7\u00f5es (3.31) est\u00e3o impl\u00e9citas por (3.22) e no caso de xji = 1, temos que xij = 0, o que significa que existe um arco direcionado que liga os dois nodos j e i, sendo que a diferen\u00e7ca m\u00e9axima entre a posi\u00e7ca\u00e3o dos nodos i e j \u00e9e inferior ou igual a 2, o que se verifica nas restri\u00e7co\u00e3es (3.31), pois para este caso Ui \u2014 Uj &lt;2. No caso do somat\u00e9rio 52keV\\{i j} xkj = 1 temos que para algum k E V\\{i, j}, xkj = 1 e xij = 0, pelo que as restri\u00e7\u00e3es (3.30) ficam (n \u2014 3)xji + Ui &lt;Uj + n \u2014 2. Se j = 1 temos que existe um arco direcionado que liga os nodos j e i, e desta forma a diferen\u00e7ca m\u00e9axima entre a posi\u00e7c\u00e3ao dos nodos i e j n\u00e3ao pode ser superior a 1, o que esta de acordo com as restri\u00e7\u00f5es (3.30), onde para este caso se obt\u00e9em Ui \u2014 Uj &lt;1. No caso de xji = 0, a diferenc\u00e7a m\u00e9axima entre a posic\u00e7\u00e3ao dos nodos i e j na\u00e3o pode ser superior a n \u2014 2, o que est\u00e9a de acordo com as restri\u00e7c\u00e3oes\n(3.30)\t, onde para este caso se obt\u00e9m Ui \u2014 Uj &lt;n \u2014 2. Portanto, as restri\u00e7\u00e3es (3.30) sao\n30\nv\u00e1lidas para o Problema WMST.\nAs relaxa\u00e7\u00f5es lineares das Formulacoes MTZl1, MTZl2, MTZl3 e MTZl4 designamos por MTZl1L, MTZl2L, MTZl3L e MTZl4L, respetivamente.\n3.2.3\tFormula\u00e7\u00e3o de Peso Miller-Tucker-Zemlin\nNesta formulacao al\u00e1m das vari\u00e1veis binarias xij ((i, j) G A), que definem a topologia da soluc\u00e3o, consideramos as variaveis pi, (i = 0,..., n \u2014 1), as quais especificam o estado de peso do nodo i na \u00e1arvore, isto \u00e1e, indicam o valor do peso do caminho entre a origem e o nodo i, dado pela soma dos pesos dos arcos no caminho. A Formula\u00e7ao de Peso Miller-Tucker-Zemlin (WMTZ) \u00e1 a que se segue:\nmm\tcij xij\n(\u00ed,j)eA\ns.a.\nXij = 1,\nieV\nWij Xij + Pi &lt;Pj + W (1 - Xij)\nwij Xij &lt;W\n(\u00ed,j)eA\n0 &lt;Pi &lt;W,\nXij G {0 , 1 } 1\nj G V\\{0}\t(3.32)\n(i,j) G A\t(3.33) (3.34)\ni G V\t(3.35)\n(i,j) G A.\t(3.36)\nAs restri\u00e7\u00f5es (3.32), (3.34) e (3.36) s\u00e3o as mesmas da formulac\u00e3o anterior. As restri\u00e7\u00f5es (3.33) sao baseadas nas conhecidas restri\u00e7\u00f5es de elimina\u00e7\u00e3o de subcircuitos dadas em Miller et al. [46] para o Problema TSP. As restri\u00e7\u00f5es (3.35) imp\u00e3em limites nas vari\u00e1aveis pi, isto \u00e1e, asseguram que a soma dos pesos no caminho entre o nodo origem e o nodo i \u00e1e n\u00e3ao negativo e nunca excede o limite W.\n31\nProposi\u00e7\u00e3o 3.1.\nAs restri\u00e7\u00e3es (3.33) evitam a existencia de circuitos.\nDemonstra\u00e7\u00e3o.\nSomando as restri\u00e7\u00e3es (3.33) para os arcos de um circuito C (xij = 1, (i,j) G C) obtemos (i j)&amp;c Wj \u2014 0, o que contradiz o facto dos pesos wij serem positivos. \u25a1\nPara qualquer \u00e9rvore de suporte de peso admiss\u00e9vel podemos sempre encontrar valores para as variaveis pj, \u00a5j G V, tais que (3.33) e (3.35) sao satisfeitas. Se pj \u00e9 o peso do caminho da origem a qualquer nodo j, pj = pi + wij para todos os arcos (i,j) tal que xij = 1 e p0 = 0. As restric\u00e3es (3.33) e (3.35), para todos os arcos (i,j) tal que xij = 0, estao impl\u00e9citas pela restri\u00e7\u00e3o de peso (3.34). Assim, as restric\u00e3es (3.33) e (3.35) s\u00e3o validas para o Problema WMST.\nSe xij = 1, ent\u00e3o wij + pi \u2014 pj\tpi &lt;pj.\nSe xij = 0, ent\u00e3o pi \u2014 pj + W.\n3\nps = 4\npe = 2\np2 = 10\np4 = 14\nps = 15\nFigura 3.3: Exemplo do c\u00e1lculo dos estados dos pesos dos nodos na \u00e1rvore.\nNa Figura 3.3 podemos observar como sao obtidos os estados dos pesos de cada nodo na \u00e9rvore. Por exemplo, o estado de peso do nodo 3 corresponde a soma dos pesos dos arcos (0, 2) e (2, 3), p3 = p2 + w23 = 10 + 5=15.\nSe a soluc\u00e3o do exemplo dado na Figura 3.3 for um caminho, com nodo origem 0 e nodo destino 6, o estado de peso do ultimo nodo do caminho \u00e9 igual ao peso da \u00e9rvore de suporte obtida, pe = W(T) \u2014 W.\n32\nNote-se que para a formula\u00e7c\u00e3ao do Problema WMST na\u00e3o \u00ede necess\u00edario conhecer os estados de peso dos nodos na \u00edarvore, o que \u00ede importante \u00ede que se o arco (i, j) est\u00eda na solu\u00e7\u00e3o, a diferen\u00e7a m\u00e1xima entre os estados de peso pj e pi seja superior ou igual a Wj, isto \u00ed,\nPj - Pi > wij,\t(i,j) G A.\nSubstituindo as restri\u00e7\u00e3es de integralidade (3.36) por:\nXij > 0,\t(i,j) G A,\t(3.37)\nobtemos a relaxa\u00e7ao linear da Formula\u00e7\u00e3o WMTZ que designamos por WMTZL. Note que nao \u00ed necessario incluir as restric\u00e3es Xij &lt;1 ((i, j) G A), pois estas restri\u00e7\u00f5es estao impl\u00edcitas por (3.32).\nNotamos que as Formula\u00e7\u00e3es MTZL e WMTZL s\u00e3o incompar\u00e1veis e para comprovar este facto apresentamos o seguinte exemplo.\nExemplo 3.1.\nNa Tabela 3.1 podemos observar os valores obtidos pela relaxac\u00e3o linear das Formula\u00e7\u00e3es MTZ e WMTZ em algumas inst\u00eancias de 10 e 20 nodos dos tr\u00eas grupos de inst\u00eancias, Quase Caminhos, Aleat\u00f3rias e Euclideanas.\nInst\u00e2ncia\tMTZl\twmtzl\nQC10-1\t70,850\t68,087\nR10-2\t11856,200\t11861,700\nE10-1\t29161,700\t29076,100\nQC20-1\t1004,530\t1017,800\nR20-1\t25226,500\t25308,900\nE20-1\t40383,700\t40368,600\nTabela 3.1: Compara\u00e7\u00e3o dos valores obtidos usando as Formula\u00e7\u00f5es MTZL e WMTZL.\nNas instancias QC10-1, E10-1 e E20-1 o valor obtido pela Formula\u00e7ao MTZL \u00ed superior ao valor obtido pela Formula\u00e7\u00e3o WMTZL, mas nas instancias R10-2, QC20-1\n33\ne R20-1 verifica-se o contrario, ou seja, o valor obtido pela Formula\u00e7ao MTZL \u00e9 inferior ao valor obtido pela Formulac\u00e3o WMTZL. Deste modo verificamos que as Formula\u00e7\u00f5es MTZl e WMTZl n\u00e3o sao compar\u00e1veis em termos de valor da relaxacao linear.\nTal como foi feito anteriormente para as restri\u00e7\u00e3es (3.22) da Formulac\u00e3o MTZ, as restricoes (3.33) tamb\u00e9m podem ser fortalecidas (ver Desrochers e Laporte [15] e Gouveia [24]) da seguinte forma:\nDesigualdades Levantadas 1 - WMTZl1\nWjiXji + WijXij + Pi &lt;Pj + W(1 \u2014 Xij), (i,j) E A\t(3.38)\nA validade destas restri\u00e7\u00e3es decorre do facto das vari\u00e1veis xij e Xji n\u00e3o poderem tomar simultaneamente o valor 1. Se Xji = 0, as restri\u00e7co\u00e3es (3.38) esta\u00e3o impl\u00e9citas por (3.33) e no caso de Xji = 1, temos que Xij = 0, o que significa que existe um arco direcionado que liga os dois nodos j e i, sendo que a diferen\u00e7ca ma\u00e9xima entre os estados de peso dos nodos i e j \u00e9e inferior ou igual a W \u2014 wji, o que se verifica nas restri\u00e7c\u00e3oes (3.38), pois para este caso pi \u2014 pj &lt;W \u2014 Wji.\nDesigualdades Levantadas 2 - WMTZl2\n(W \u2014 Wji)xji + WijXij + pi &lt;pj + W(1 \u2014 Xij),\t(i,j) E A\t(3.39)\nTemos que as vari\u00e9aveis Xij e Xji na\u00e3o podem tomar simultaneamente o valor 1. Se Xji = 0, as restri\u00e7co\u00e3es (3.39) esta\u00e3o impl\u00e9citas por (3.33) e no caso de Xji = 1, temos que Xij = 0, o que significa que existe um arco direcionado que liga os dois nodos j e i, sendo que a diferen\u00e7ca ma\u00e9xima entre os estados de peso dos nodos i e j n\u00e3ao excede o peso do arco (j, i), o que se verifica nas restric\u00e7o\u00e3es (3.39), pois para este caso pi \u2014 pj &lt;Wji. Portanto, estas restri\u00e7c\u00e3oes s\u00e3ao v\u00e9alidas para o Problema WMST.\n34\nDesigualdades Levantadas 3 - WMTZl3\nWkjXkj + WijXij + Pi &lt;Pj + W(1 \u2014 Xij), (i,j) G A\t(3.40)\nkeV\\{i,j}\nDas restricoes (3.32) temos que 52keV\\{i j Xkj &lt;1. No caso de 52keV\\{i j Xkj = 0, ent\u00e3o 52keV\\{j, j} wkjxkj = 0 e as restri\u00e7\u00e3es (3.40) est\u00e3o impl\u00e9citas por (3.33). Caso para algum k G V\\{i,j}, Xkj = 1, 52keV\\{i , j} wkjXkj = Wj e Xj = 0, o que significa que existe um arco direcionado que liga os nodos k e j, e desta forma a diferen\u00e7a m\u00e9xima entre os estados de peso dos nodos i e j n\u00e3o pode ser superior a W \u2014 wkj, o que esta de acordo com as restri\u00e7\u00f5es (3.40), onde para este caso se obt\u00e9m pi \u2014 pj &lt;W \u2014 wkj &lt;W. Portanto, estas restri\u00e7c\u00e3oes sa\u00e3o v\u00e9alidas para o Problema WMST.\nDesigualdades Levantadas 4 - WMTZl4\n(WkjXkj +\tWikXik)+\tWjiXji\t+ WijXij\t+ 'Pi\t<\t'Pj\t+ W(1 \u2014 Xij),\t(i,j)\tG A (3.41)\nkeV\\{i,j}\nDas restri\u00e7\u00e3es (3.32) temos que 52keV\\{i j} Xkj &lt;1 e da restricao (3.34) temos que 52keV\\{i j} wikXik &lt;W, pois o nodo i pode ligar a todos os nodos exceto ao nodo j. Deste modo temos que o somat\u00f3rio 52keV\\{i j}(wkjXkj + wikXik) toma valores inferiores ou iguais a W + wkj para algum k G V\\{i, j}.\nSe \u00a3keV\\{i, j}(wikXik + wkjXkj) = 0, as restri\u00e7\u00e3es (3.41) estao impl\u00e9citas por (3.38).\nSe ^2keV\\{i j}(wikXik + wkjXkj) = q &lt;W + wkj com q G Z+, ao substituir nas res-\ntricoes (3.41) o somat\u00e9rio por q, obtemos q + WjiXji + wijXij + pi &lt;pj + W(1 \u2014 Xij). Caso\nEkeV\\{i ,j} Xkj = 1 temos que para algum k G V\\{i,j} Xkj = 1^2keV\\{i ,j} wkjXkj = wkj e Xij = 0, temos que q + WjiXji + pi &lt;pj + W. Se Xji = 0, ent\u00e3o pi \u2014 pj &lt;W \u2014 q &lt;W\ne se Xji = 1 temos que pi \u2014 pj &lt;W \u2014 q \u2014 Wji &lt;W. No caso de 52kev\\{$ j} xkj = 0, ent\u00e3o Xj = 1 e Xji = 0, pelo que temos pj \u2014 pi > q + wij. Assim, estas restri\u00e7\u00f5es s\u00e3o\nv\u00e9alidas para o Problema WMST.\nAs relaxa\u00e7\u00e3es lineares das Formula\u00e7\u00f5es WMTZl1, WMTZl2, WMTZl3 e WMTZl4 designamos por WMTZl1L, WMTZl2L, WMTZl3L e WMTZl4L, respetivamente.\n35\n3.2.4\tFormula\u00e7\u00e3o de Fluxo com especifica\u00e7\u00e3o de Pesos\nEsta nova formula\u00e7\u00f5o estendida sera denominada de WE. Para al\u00e9m das vari\u00e9veis binarias usuais Xj ((i, j) G A) usamos vari\u00e1veis de fluxo de peso direcionado zj* (para todo (i, j) G A, k G V\\{0, i} e h1 &lt;h2, h1, h2 = 0,..., W), as quais especificam se o arco (i,j) \u00e9 ou n\u00f5o utilizado no caminho da raiz at\u00e9 ao nodo k, sendo h1 o peso do caminho da raiz ao nodo i e h2 o peso do caminho do nodo raiz ao nodo j. Para simplificar a notac\u00f5o assumimos que as variaveis z#**2 para todo i G V\\{0}, k G V\\{0,i}, h1 &lt;h2, h1,h2 = 0,..., W e as variaveis zj^2 para todo h2 &lt;h1 e h2 > W t\u00eam sempre valor nulo. A Formulacao WE \u00e9 dada pelo seguinte conjunto de restri\u00e7c\u00f5oes:\nmin\tCjjXj\n(i,j)eA\ns.a.\nXij = 1,\tj G V\\{0}\t(3.42)\nieV\t\t\nh\th\t1\t' _1 j = 0, h = 0\nzh~wi / .\t/ .\tzijk\tjh _ y^\ty^\tzh,h+wji = J\t0 j = 0, k, h = W ,\niGV\\{k} h=0|h-wij>0\tiEV\\{0} h=0|h+wji<W\t1\t1 j = k, h = W\n\tj G V, k G V\\{0}\t(3.43)\nW\t\t\nX\"> h,h+wij &lt;x / y zijk\t&lt;xij ,\t(M) G A,k G V\\{0,i}\t(3.44)\nh=0\t\t\nh2 > 0\t(M) g A,k g V\\{o,o,\t(3.45)\nxij G {0 , 1 } ,\t(i, j) G A.\t(3.46)\nAs restri\u00e7\u00f5es de cardinalidade (3.42) garantem que um e apenas um arco chega a cada nodo exceto para o nodo raiz.\nAs restric\u00f5es de conserva\u00e7\u00f5o de fluxo (3.43) estabelecem que a soluc\u00f5o deve conter um caminho entre o nodo 0 e o nodo k (para todo k G V\\{0}). O primeiro conjunto de restric\u00e7\u00f5oes de conserva\u00e7c\u00f5ao de fluxo garantem que a raiz envia uma unidade de fluxo para o nodo k, o segundo conjunto de restri\u00e7c\u00f5oes garantem que a quantidade de fluxo que entra num no e igual \u00e0 quantidade de fluxo que sai desse no e o terceiro conjunto de restri\u00e7c\u00f5oes implicam que o nodo k recebe uma unidade de fluxo.\nAs restricoes de liga\u00e7ao (3.44) garantem que \u00e9 poss\u00edvel enviar fluxo para cada nodo\n36\nk atraves do arco (i, j) apenas se o arco esta na solu\u00e7c\u00e3ao.\nJuntamente com as restri\u00e7co\u00e3es de conservac\u00e7\u00e3ao de fluxo estas restri\u00e7c\u00e3oes asseguram a liga\u00e7ca\u00e3o dos arcos da soluc\u00e7\u00e3ao. As restric\u00e7\u00e3oes (3.45) garantem que a quantidade de fluxo enviado entre dois quaisquer nodos e na\u00e3o negativa. Por fim, as restric\u00e7\u00e3oes (3.46) s\u00e3ao as restri\u00e7c\u00e3oes de integralidade das variaveis.\n= 1\nFigura 3.4: Exemplo com o valor das vari\u00e1veis de fluxo na Formula\u00e7\u00e3o WE.\nNa Figura 3.4 mostramos um exemplo onde podemos observar uma solu\u00e7ao e indicamos apenas o valor das variaveis de fluxo no caminho do nodo raiz para o nodo 1. Podemos observar que o nodo 0 envia uma unidade de fluxo para o nodo 1, pelo que o nodo 1 vai receber essa unidade de fluxo, temos tambem que para os nodos que esta\u00e3o no caminho do nodo origem para o nodo 1 a quantidade de fluxo que entra em cada nodo e igual \u00e0 quantidade de fluxo que sai desse no. Assim as variaveis zj\u2019h2 para os arcos (i,j) no caminho do nodo origem para o nodo 1 terao valor um para valores apropriados de hi e h2 . Por exemplo, para o nodo 3 o valor de h1 corresponde ao peso do caminho do nodo raiz ao nodo 3, isto e, h1 = w02 + w23 = 3 + 5 = 8eo valor de h2 corresponde ao peso do caminho do nodo raiz ao nodo 5, ou seja, h2 = w02 + w23 + w35 = 3 + 5 + 7 = 15.\nProposi\u00e7\u00e3o 3.2.\nA Formula\u00e7\u00e3o WE \u00e9 valida para o Problema WMST.\nDemonstra\u00e7\u00e3o.\nDada uma solu\u00e7\u00e3o para o Problema WMST, facilmente, podemos construir uma solucao (x, h) para a Formula\u00e7ao WE, onde as variaveis binarias usuais xij ((i,j) G A) indicam se o arco pertence ou n\u00e3o \u00e0 solu\u00e7\u00e3o e as variaveis de fluxo de peso direcionado zjh2 (para todo (i,j) G A, k G V\\{0, i} e h1 &lt;h2, hi, h2 = 0,..., W), indicam se o\n37\narco (i, j) \u00e9 ou n\u00e3o utilizado no caminho da raiz at\u00e9 ao nodo k, sendo h1 o peso do caminho da raiz ao nodo i e h2 o peso do caminho da raiz ao nodo j.\nTomemos uma solu\u00e7\u00e3o (x, h) que satisfaz as restric\u00e3es da Formula\u00e7ao WE acima e consideremos as vari\u00e9veis de fluxo orientado fj, para todos os arcos (i, j) G A e k G V\\{0, i} definidas do seguinte modo\nW\nfijj\tE ' \u2022\t(3-47)\nh=0\nQuando substitu\u00e9mos (3.47) nas restri\u00e7\u00e3es (3.43) obtemos as restri\u00e7\u00f5es de conserva\u00e7\u00e3o de fluxo usuais. Desta forma, conjuntamente, com as restri\u00e7\u00f5es de cardinalidade (3.42) e integralidade (3.46) obtemos uma \u00e9rvore de suporte. Como fj > 0 para qualquer arco (i, j) G A e k G V\\{0, i}, entao temos que zh1fc\u2019h2 > 0.\nAl\u00e9m disso, se multiplicarmos cada restric\u00e3o (3.44) por wij e depois adicion\u00e9-las para todos os arcos (i, j) G A obtemos a restri\u00e7c\u00e3ao de peso. O que nos garante que a \u00e9rvore obtida satisfaz a restric\u00e3o de peso. Desta forma verificamos que a solu\u00e7\u00e3o (x, h) \u00e9 capaz de determinar uma solu\u00e7\u00e3o para o Problema WMST.\t\u25a1\nSubstituindo as restri\u00e7\u00f5es de integralidade (3.46) por:\nxij > 0, (i, j) G A,\t(3.48)\nobtemos a relaxa\u00e7ao linear da Formula\u00e7\u00e3o WE que designamos por WEL. Note que na\u00e3o \u00e9e necess\u00e9ario incluir as restric\u00e7\u00e3oes xij &lt;1 ((i, j) G A) nem '\t&lt;1 ((i,j) G A\nk G V\\{0,i}), pois estas restri\u00e7\u00e3es est\u00e3o impl\u00e9citas por (3.42) e (3.44).\nExemplo 3.2.\nNeste exemplo apresentamos os diferentes valores obtidos pela relaxa\u00e7c\u00e3ao linear das diferentes formulac\u00e3es para o Exemplo 2.1. Usando formula\u00e7\u00e3es diferentes podemos encontrar soluc\u00e7\u00e3oes \u00e9otimas da relaxa\u00e7ca\u00e3o linear tamb\u00e9em diferentes. Neste exemplo de 5 nodos, para as diferentes formulac\u00e7o\u00e3es apresentadas ao longo deste cap\u00e9tulo, \u00e9e poss\u00e9vel encontrar quatro diferentes limites inferiores para o valor do custo, os quais se encontram na seguinte tabela.\n38\n\tRelaxa\u00e7\u00e3c\t) Linear\nFormula\u00e7\u00e7\u00e3oes\tCusto\tPeso\nMTZ, MTZl2, MTZl3, WMTZ e WMTZll,\t25,333\t20\nWMTZl3 e WMTZl4\t25,3425\t20\nMTZl4\t25,3913\t20\nES, MF, WE, MTZl1, WMTZl2\t25,4\t20\nTabela 3.2: Compara\u00e7\u00e3o das formula\u00e7\u00e3es usando\tum exemplo de 5 nodos\t\nOs limites inferiores mais baixos s\u00e3o obtidos utilizando as Formula\u00e7\u00e3es MTZ, MTZl2, MTZl3, WMTZ e WMTZl1, com custo 25,333 e peso 20 e os limites inferiores mais elevados s\u00e3o obtidos atrav\u00e9s das Formulac\u00e3es ES, MF, WE, MTZl1 e WMTZl2. A melhor solu\u00e7ca\u00e3o \u00e1otima da relaxa\u00e7c\u00e3ao linear encontra-se representada na Figura 3.5.\nXoi = 1 xo4 = 0,2\nX12 = 1\nxi3 = 0,8\nX34 = 0,8\nX43 = 0,2\nrestantes xij = 0, (i,j) G A\nFigura 3.5: Solu\u00e7\u00e3o \u00f3tima da relaxa\u00e7\u00e3o linear obtida pelas Formula\u00e7\u00f5es ES, MF, WE, MTZll e WMTZ12.\nO custo da soluc\u00e3o \u00e1tima da relaxacao linear obtida na Figura 3.5 \u00e1 de 25,4 e o peso \u00e1e de 20.\n39\n3.3\tProcedimento com Introdu\u00e7\u00e3o de Cortes\nNeste procedimento as restri\u00e7\u00e3es de corte s\u00e3o introduzidas no modelo como cortes usando separa\u00e7ao. Apenas quando a atual solu\u00e7ao da relaxa\u00e7ao considerada nao satisfaz alguma restri\u00e7c\u00e3ao de corte \u00e1e que essa restri\u00e7c\u00e3ao ser\u00e1a adicionada ao modelo. Desta forma apenas s\u00e3ao inclu\u00e1das no modelo as restri\u00e7c\u00e3oes de corte necess\u00e1arias para obter a solu\u00e7c\u00e3ao \u00e1otima do Problema WMST.\nPara adicionarmos as restric\u00e7\u00e3oes de corte teremos de saber como identificar a res-tric\u00e7a\u00e3o de corte a incluir no modelo. Para o fazer \u00e1e necess\u00e1ario identificar um corte m\u00e1nimo na soluc\u00e3o atual obtida pela solu\u00e7ao da relaxac\u00e3o. Um corte m\u00e1nimo A(S, Sc) pode ser determinado se aplicarmos o Algoritmo de Ford-Fulkerson [20] para encontrar o fluxo m\u00e1ximo entre a raiz, o no 0, e cada um dos outros n\u00e1s i G V \\ {0}. Denotamos por fmax(0,i), i G V\\{0}, o fluxo maximo entre o nodo zero/raiz e cada um dos restantes nodos do grafo.\nPara descrever os principais passos para efetuar um procedimento gen\u00e1erico com introduc\u00e3o de cortes, vamos come\u00e7ar por denotar por FORM o modelo que ser\u00e1 usado para inclus\u00e3ao dos cortes. Os diferentes passos necessa\u00e1rios para este procedimento s\u00e3ao os seguintes.\nProcedimento com Introducao de Cortes\nPasso 1: Inicializar o conjunto de corte\nConsiderar os conjuntos S = 0 e Sc = V.\nPasso 2: Relaxac\u00e3o\n1)\tIntroduzir o corte\nxij > 1 S C V,S = 0, 0 G S.\n(i , j)6A(S, Sc)\n2)\tResolver uma relaxa\u00e7ca\u00e3o da Formula\u00e7c\u00e3ao FORM.\nPasso 3: Obter o corte\nPara cada i G V\\{0} obter fmax(0,i) considerando como capacidade dos arcos o valor da solu\u00e7c\u00e3ao obtida pela relaxa\u00e7ca\u00e3o no Passo 2.\n40\nSe fmax(0,i) &lt;1, entao\nSe fmax(0,i) = 0, ent\u00e3o\no conjunto S \u00e9 constitu\u00eddo pelos nodos i G V\\{0} para os quais foi poss\u00edvel enviar fluxo do nodo 0.\nCaso contr\u00edario,\nidentificar o conjunto S para obter o conjunto de corte A(S, Sc).\nVoltar para o Passo 2.\nEste processo termina quando o grafo estiver conectado e o fluxo m\u00edaximo entre 0 e cada nodo i G V\\{0} for 1.\nPasso 4: Introduzir as restri\u00e7\u00f5es de subcircuito\n1)\tIntroduzir as restri\u00e7\u00f5es Xij + Xji &lt;1, i, j G V, i = j.\n2)\tResolver uma relaxa\u00e7\u00e3o da Formula\u00e7\u00e3o FORM.\nNo Passo 1 come\u00e7camos por inicializar o conjunto de corte, onde S = 0 e Sc = V. No Passo 2 introduzimos o corte e resolvemos uma relaxac\u00e7\u00e3ao de uma formula\u00e7c\u00e3ao que designamos por FORM. Notamos que inicialmente (na primeira iterac\u00e7\u00e3ao) a relaxac\u00e7\u00e3ao na\u00e3o cont\u00edem qualquer corte, \u00ede apenas constitu\u00edda pelas restri\u00e7co\u00e3es do modelo FORM sem cortes. Enquanto o fluxo m\u00e1ximo entre 0 e cada nodo i G V\\{0} n\u00e3o for um temos de usar o Algoritmo Ford-Fulkerson [20] para obter o fluxo ma\u00edximo entre o nodo zero/raiz e cada um dos restantes nodos do grafo considerando como capacidade dos arcos o valor da solu\u00e7c\u00e3ao obtida pela relaxa\u00e7c\u00e3ao no Passo 2. Se o valor do fluxo m\u00edaximo for inferior a um, temos de considerar dois casos. Um dos casos ocorre quando n\u00e3o \u00ed poss\u00edvel obter um fluxo entre o nodo 0 e o nodo i G V\\{0}, ent\u00e3o vamos considerar o conjunto S constitu\u00eddo pelos nodos i G V\\{0}, para os quais foi poss\u00edvel enviar fluxo do nodo 0. O outro caso ocorre quando o fluxo m\u00edaximo \u00ede positivo, onde temos de identificar o conjunto de corte. Em qualquer um destes casos voltamos ao Passo 2 para introduzir um novo corte e resolver uma nova relaxa\u00e7c\u00e3ao. No Passo 4 s\u00e3ao introduzidas as restric\u00e7\u00e3oes de subcircuito e resolve-se uma nova relaxa\u00e7c\u00e3ao da Formulac\u00e7a\u00e3o FORM. Deste modo foi obtido um valor para o limite inferior para o custo, o qual \u00ed o valor obtido pela relaxac\u00e7ao linear deste procedimento com introdu\u00e7c\u00e3ao de cortes.\n41\nObserve-se que o procedimento com introdu\u00e7ao de cortes pode ser aplicado a um modelo que no Passo 2 denot\u00edmos por FORM. Nesta tese aplicamos este procedimento \u00e0s Formula\u00e7\u00f5es CS, MTZ e WMTZ. Deste modo, podemos definir os seguintes procedimentos:\n\u2022\tProcedimento P-CS\nNeste procedimento substitu\u00edmos o modelo FORM no Passo 2 pela Formula\u00e7\u00e3o CS. A relaxa\u00e7\u00e3o linear deste procedimento ser\u00ed designada por P-CSL.\n\u2022\tProcedimento P-MTZ+C\nNeste procedimento substitu\u00edmos o modelo FORM no Passo 2 pela Formula\u00e7\u00e3o MTZ. A relaxa\u00e7\u00e3o linear deste procedimento ser\u00ed designada por P-MTZ+CL.\n\u2022\tProcedimento P-WMTZ+C\nNeste procedimento substitu\u00edmos o modelo FORM no Passo 2 pela Formula\u00e7ao WMTZ. A relaxac\u00e3o linear deste procedimento ser\u00ed designada por P-WMTZ+CL.\nExemplo 3.3.\nPara exemplificar o funcionamento do procedimento com introdu\u00e7\u00e3o de cortes vamos considerar a inst\u00e2ncia E10-1 do grupo de inst\u00e2ncias Euclideanas.\nPasso 1:\nConsiderar os conjuntos S = 0 e Sc = V.\nPasso 2:\n42\nFigura 3.6: Representa\u00e7\u00e3o da solu\u00e7\u00e3o da relaxa\u00e7\u00e3o linear da Formula\u00e7\u00e3o WMTZ.\nPasso 3:\nComo podemos observar na Figura 3.6, n\u00e3o \u00e9 poss\u00e9vel enviar fluxo do nodo 0 para o nodo 9, isto \u00e9, do nodo origem para o nodo 9, fmax(0, 9) = 0. Deste modo, a solucao, neste caso, n\u00e3o \u00e9 conexa pelo que formamos o conjunto S = {0, 2, 3, 5,6, 8} e o conjunto Sc = {1, 4, 7, 9} e voltamos ao Passo 2.\nPasso 2:\n1) Introduzir o corte 1:\nXoi + X04 + X07 + X09 + X21 + X24 + X27 + X29 + X31 + X34 + X37 + X39 + X51 + X54 + X57 + X59 + X61 + X64 + X67 + X69 + X81 + X84 + X87 + X89 > 1-\n2) Os valores de cada vari\u00e9vel na solu\u00e7\u00e3o da relaxa\u00e7\u00e3o linear da Formula\u00e7\u00e3o WMTZ com a introducao do corte 1 s\u00e3o os seguintes: x03 = 1; x06 = 1; x17 = 1; x25 ~ 0,94; x52 ~ 0,06; x28 = 1; x32 ~ 0,94; x69 = 1; x85 = 0,06; x91 = 1; e x94 = 1 (restantes vari\u00e9veis com valor nulo). O valor do limite inferior obtido para o custo \u00e9 de 36416,2 com peso 24251 e na Figura 3.7 podemos encontrar a representa\u00e7ao da solu\u00e7\u00e3o atrav\u00e9s de um grafo.\n43\n0\nFigura 3.7: Representa\u00e7\u00e3o da solu\u00e7\u00e3o da relaxa\u00e7\u00e3o linear da Formula\u00e7\u00e3o WMTZ ap\u00f3s a introdu\u00e7\u00e3o do corte 1.\nPasso 3:\nO fluxo maximo entre o nodo 0 e o nodo 8 e aproximadamente igual a 0,94, isto \u00e9, fmax(0, 8) ~ 0,94. Deste modo, podemos dizer que ha um constrangimento na aresta {2, 3} que nos permite formar os conjuntos S = {0,1, 3, 4,6, 7, 9} e Sc = {2, 5, 8} e voltamos ao Passo 2.\nPasso 2:\n1)\tIntroduzir o corte 2:\nx02 + x05 + x08 + x12 + x15 + x18 + x32 + x35 +\tx38 + x42\t+\tx45 + x48\t+ x62 + x65\t+\nx68 + x72 + x75 + x78 + xg2 + xg5 + xg8 > 1.\n2)\tOs valores de cada variavel na solu\u00e7\u00e3o da relaxa\u00e7\u00e3o linear da Formula\u00e7\u00e3o WMTZ\ncom a introduc\u00e3o do corte 2 sao os seguintes: x03\t=\t1;\tx05\t0,08; x06\t= 1; xi7 =\t1;\nx25 ~ 0,92; x52 ~ 0,08; x28 = 1; x32 ~ 0,92; x6g\t=\t1;\txgi\t=\t1 e xg4 = 1 (restantes\nvariaveis com valor nulo). O valor do limite inferior obtido para o custo e de 36530,6 com peso 24251 e na Figura 3.8 podemos encontrar a representa\u00e7c\u00e3ao da solu\u00e7c\u00e3ao atraves de um grafo.\n44\nFigura 3.8: Representa\u00e7\u00e3o da solu\u00e7\u00e3o da relaxac\u00e1o linear da Formula\u00e7\u00e3o WMTZ apos a introdu\u00e7\u00e3o do corte 2.\nPasso 3:\nComo o fluxo maximo entre o nodo 0 e cada nodo i G V\\{0} \u00e9 igual a 1, n\u00e3o \u00e9 poss\u00e9vel inserir mais cortes e passamos ao Passo 4.\nPasso 4:\nNeste passo sao inseridas 72 restricoes do tipo xij + xji \u2014 1, i,j G V, i = j e resolve-se novamente a relaxa\u00e7c\u00e3ao linear da Formula\u00e7c\u00e3ao WMTZ. A solu\u00e7c\u00e3ao obtida encontra-se representada na Figura 3.8 e o valor da relaxa\u00e7\u00e3o linear \u00e9 $(P-WMTZ+CL) = 36530,6.\nComo a solu\u00e7\u00e3o otima desta inst\u00e2ncia tem custo 39983 e peso 23608, o gap do limite \u201e\t,\t,\t,\t,\t,\t, , 39983 - 36530,6\ninferior obtido com a aplicacao deste procedimento \u00e9 de\tx 100 = 8,63%.\n39983\n45\ne Resultados Computacionais\nAtendendo a que existem diferencas entre as v\u00edrias formula\u00e7\u00e3es apresentadas para\no Problema WMST \u00ed necess\u00edrio avaliar qual \u00ed a mais eficiente. Neste sentido pretendemos avaliar a qualidade do valor do limite inferior obtido pela relaxa\u00e7c\u00e3ao linear de\ncada formulac\u00e7\u00e3ao e os tempos de execu\u00e7c\u00e3ao. Para avaliar a qualidade do limite infe-\n,\t,\t,\t,\t, ,\t, ,\tOPT - ^(WMSTl)\nrior obtido em cada um dos modelos calculamos o qap = -----.---------- x 100,\ny\tOPT\nonde \u00ea(WMSTl) \u00ed o valor do limite inferior obtido pela relaxacao linear do modelo em causa e OPT \u00ed o valor \u00edtimo MST)) ou o melhor valor de uma solu\u00e7\u00e3o admiss\u00edvel obtida, e, portanto, um limite superior para o valor do custo.\nPara resolver os modelos de Programa\u00e7ao Linear Inteira apresentados ao longo deste cap\u00edtulo usamos o software Xpress 7.3 (Xpress-Optimizer 23.01.03 e Xpress-Mosel 3.4.0) [1] e todos os testes foram efetuados num Intel(R) Core(TM)2 Duo CPU (T7100) 2.00 GHz processador e 4Gb de RAM.\n3.4.1\tExemplo Comparativo das Formula\u00e7\u00f5es\nPara comparar as formulac\u00e7\u00e3oes vamos come\u00e7car por usar um exemplo de 10 nodos com W = 79, para o qual os valores obtidos nos va\u00edrios modelos se encontram na Tabela 3.3. Na primeira coluna da referida tabela, encontram-se as designa\u00e7co\u00e3es atribu\u00eddas a cada uma das formulac\u00e7\u00e3oes apresentadas ao longo deste cap\u00edtulo, as tr\u00e2es colunas seguintes cont\u00e2em os valores obtidos pela relaxa\u00e7c\u00e3ao linear, isto \u00ede, o valor do limite inferior para o custo, o valor do correspondente peso e o tempo de execu\u00e7ca\u00e3o (em segundos). As u\u00edltimas duas colunas cont\u00e2em o tempo de execu\u00e7c\u00e3ao (em segundos) e o nu\u00edmero de nodos na a\u00edrvore de pesquisa do Algoritmo Branch and Bound.\nPara este exemplo, a solu\u00e7ca\u00e3o \u00edotima corresponde a uma a\u00edrvore de suporte com custo 335 e peso 61.\n46\nFormula\u00e7\u00e3o\tCusto\tPeso\tTempo\tTempo\t#Nodos\nES\t279,435\t79\t0,063\t0,093\t1\nP-CS\t279,435\t79\t0,101\t0,143\t1\nMF\t279,435\t79\t0,047\t1,903\t3\nMTZ\t178,750\t79\t0,032\t0,078\t1\nMTZll\t279,435\t79\t0,032\t0,078\t9\nMTZl2\t180,594\t79\t0,031\t0,078\t1\nMTZl3\t184,728\t79\t0,015\t0,203\t3\nMTZl4\t275,330\t79\t0,015\t0,063\t3\nWMTZ\t169,632\t79\t0,031\t0,078\t1\nWMTZll\t174,397\t79\t0,032\t0,109\t13\nWMTZl2\t279,435\t79\t0,031\t0,078\t5\nWMTZl3\t174,653\t79\t0,015\t0,109\t1\nWMTZl4\t175,490\t79\t0,032\t0,234\t9\nWE\t279,435\t79\t0,655\t1,201\t9\nP-MTZ+C\t279,435\t79\t0,138\t0,206\t7\nP-MTZll+C\t279,435\t79\t0,031\t0,097\t6\nP-MTZl2+C\t279,435\t79\t0,141\t0,2\t3\nP-MTZl3+C\t279,435\t79\t0,142\t0,212\t5\nP-MTZl4+C\t279,435\t79\t0,048\t0,132\t9\nP-WMTZ+C\t279,435\t79\t0,102\t0,175\t17\nP-WMTZll+C\t279,435\t79\t0,133\t0,183\t1\nP-WMTZl2+C\t279,435\t79\t0,029\t0,157\t67\nP-WMTZl3+C\t279,435\t79\t0,13\t0,229\t5\nP-WMTZl4+C\t279,435\t79\t0,136\t0,26\t22\nTabela 3.3: Compara\u00e7\u00e3o das formula\u00e7\u00e3es usando um exemplo de 10 nodos.\nO melhor valor obtido pela relaxac\u00f5o linear das diferentes formula\u00e7\u00f5es foi 279,435, este valor est\u00e1 assinalado a negrito na Tabela 3.3. Para o exemplo de 10 nodos considerado obtemos os mesmos valores da relaxa\u00e7\u00f5o linear nas Formula\u00e7\u00f5es ES, MF, MTZl1, WMTZl2 e WE. Em todas as formulac\u00f5es onde se aplica o procedimento com introdu\u00e7\u00f5o de cortes tamb\u00e1m se obt\u00e1m o mesmo valor da relaxac\u00f5o linear 279,435. Notamos que comparando a qualidade do valor do limite inferior obtido pelas desigualdades levantadas podemos verificar que tanto no exemplo de 5 nodos (Exemplo 3.2) como neste exemplo de 10 nodos, as Desigualdades Levantadas 1 na Formula\u00e7ao MTZ (MTZl1) e as Desigualdades Levantadas 2 na Formulacao WMTZ (WMTZl2) s\u00f5o as que apresentam melhores resultados de entre as varias desigualdades levantadas\n47\nderivadas das Formula\u00e7co\u00e3es MTZ e WMTZ.\n3.4.2\tCompara\u00e7\u00f5o das Formula\u00e7\u00f5es MTZ e WMTZ\nPara cada uma das Formula\u00e7c\u00e3oes MTZ e WMTZ apresenta\u00edmos nas Sec\u00e7c\u00e3oes 3.2.2 e\n3.2.3\talgumas desigualdades denominadas de Desigualdades Levantadas. Nesta sec\u00e7\u00e3o come\u00e7camos por comparar, computacionalmente, os valores dos limites inferiores obtidos e dos tempos de execu\u00e7ca\u00e3o usando cada uma das desigualdades levantadas propostas na Formula\u00e7ca\u00e3o MTZ. De seguida, efetuamos o mesmo estudo para as desigualdades levantadas propostas para a Formula\u00e7c\u00e3ao WMTZ. Esta comparac\u00e7\u00e3ao \u00ede efetuada com o objetivo de averiguar qual das desigualdades levantadas, em cada uma das Formula\u00e7co\u00e3es MTZ e WMTZ, produz melhor valor do limite inferior da relaxac\u00e7a\u00e3o linear. Depois de escolhidas as desigualdades que quando introduzidas no modelo produzem melhor valor do limite inferior da relaxac\u00e7\u00e3ao linear de cada uma das Formula\u00e7co\u00e3es MTZ e WMTZ, pretendemos comparar, computacionalmente, as duas formula\u00e7c\u00e3oes.\nFormula\u00e7c\u00f5ao MTZ\nPara comparar, computacionalmente, os valores dos limites inferiores obtidos usando cada uma das desigualdades levantadas propostas para a Formulac\u00e7\u00e3ao MTZ elabora\u00edmos as Tabelas 3.4 e 3.5. A primeira coluna destas tabelas refere-se \u00e0 designa\u00e7\u00e3o da inst\u00eaancia e as restantes colunas cont\u00eaem os valores dos limites inferiores obtidos pelas Formulac\u00e3es MTZ, MTZl1, MTZl2, MTZl3 e MTZl4. A Tabela 3.4 cont\u00edm inst\u00eancias de 10 nodos e a Tabela 3.5 cont\u00edm inst\u00eancias de 20 nodos dos tr\u00eas grupos de inst\u00eancias em estudo. Notamos que no interior de ambas as tabelas se encontram duas linhas horizontais que separam os tr\u00eaes grupos de inst\u00eaancias, Quase Caminhos, Aleat\u00edorias e Euclideanas.\n48\nInst\u00e2ncia\tMTZl\tMTZl1L\tMTZl2L\tMTZl3L\tMTZl4L\nQC10-1\t70,850\t102,846\t71,354\t73,437\t101,750\nQC10-2\t180,558\t277,893\t181,160\t183,068\t276,205\nQC10-3\t101,189\t282,320\t102,561\t104,173\t269,248\nQC10-4\t148,118\t282,940\t149,592\t154,284\t276,805\nQC10-5\t295,290\t480,818\t298,061\t323,849\t480,818\nQC10-6\t88,687\t128,771\t88,998\t89,246\t128,771\nQC10-7\t269,666\t364,790\t270,000\t277,005\t364,065\nQC10-8\t267,364\t474,800\t268,739\t276,392\t473,219\nQC10-9\t122,943\t217,663\t124,044\t127,471\t211,672\nQC10-10\t413,217\t533,522\t413,654\t418,521\t531,433\nR10-1\t12589,3\t17066,5\t12661\t12746,6\t17066,5\nR10-2\t11856,2\t16824\t11932,1\t12808,6\t16824\nR10-3\t6402,33\t8796,34\t6429,56\t6558,05\t8796,34\nR10-4\t10659,3\t16627,4\t10755,4\t11256,4\t16627,4\nR10-5\t23911,9\t26048,3\t23976,6\t24559\t26012,6\nE10-1\t29161,7\t33619,7\t29202,2\t29427,5\t33619,7\nE10-2\t25480,6\t32734,9\t25621,2\t26213,4\t32290,9\nE10-3\t25501,9\t29698,6\t25532,3\t25648,3\t29698,6\nE10-4\t14870,3\t22379,5\t15046,1\t15612,9\t22223,1\nE10-5\t35837,3\t38040,1\t35898,7\t35977,8\t37998,6\nTabela 3.4: Compara\u00e7\u00e3o dos valores da relaxa\u00e7\u00e3o linear da Formula\u00e7\u00e3o MTZ com as v\u00e1rias desigualdades levantadas em inst\u00e2ncias de 10 nodos.\n49\nInstancia\tMTZl\tMTZl1L\tMTZl2L\tMTZl3L\tMTZl4L\nQC20-1\t1017,800\t1477,310\t1019,100\t1030,800\t1470,370\nQC20-2\t1028,600\t1345,330\t1029,520\t1034,930\t1343,920\nQC20-3\t844,136\t1293,780\t845,667\t853,500\t1290,690\nQC20-4\t400,352\t565,526\t400,581\t404,039\t565,269\nQC20-5\t168,315\t440,339\t168,484\t169,235\t438,258\nQC20-6\t607,602\t847,329\t608,394\t613,906\t847,329\nQC20-7\t519,714\t1022,540\t521,196\t529,368\t1022,540\nQC20-8\t211,335\t296,717\t211,638\t213,445\t296,543\nQC20-9\t176,805\t559,421\t177,886\t181,276\t554,623\nQC20-10\t774,781\t1300,880\t775,725\t785,813\t1293,250\nR20-1\t25308,900\t30518,100\t25330,500\t25516,300\t30412,500\nR20-2\t26211,500\t31057,400\t26227,100\t26754,800\t31012,300\nR20-3\t25357,100\t30826,400\t25377,800\t25748,700\t30826,400\nR20-4\t23844,000\t30596,300\t23879,200\t24126,400\t30555,100\nR20-5\t24327,700\t28647,700\t24333,400\t24686,500\t28576,800\nE20-1\t40368,600\t50041,500\t40404,300\t40560,200\t50041,500\nE20-2\t62689,600\t77740,400\t62727,500\t63072,200\t77740,400\nE20-3\t45953,400\t57072,100\t46004,100\t46289,000\t57063,300\nE20-4\t44808,000\t51277,900\t44812,600\t44845,700\t51274,500\nE20-5\t44445,400\t54287,900\t44481,700\t44922,600\t54287,900\nTabela 3.5: Compara\u00e7\u00e3o dos valores da relaxa\u00e7\u00e3o linear da Formula\u00e7\u00e3o MTZ com as v\u00e1rias desigualdades levantadas em instancias de 20 nodos.\n50\nOs valores a negrito nas Tabelas 3.4 e 3.5 correspondem ao melhor valor do limite inferior obtido. Podemos observar que se verifica a seguinte rela\u00e7\u00e3o entre os valores obtidos pela relaxacao linear nas diversas formula\u00e7\u00f5es para todas as inst\u00e2ncias consideradas.\nPara comparar, computacionalmente, os tempos de execu\u00e7\u00e3o obtidos usando cada uma das desigualdades levantadas propostas na Formula\u00e7\u00e3o MTZ elabor\u00e1mos o gr\u00e1fico da Figura 3.9, onde se apresentam os tempos m\u00e1dios, em segundos, necess\u00e1rios para a obten\u00e7ao do valor otimo em cada uma das Formulac\u00e3es MTZ, MTZll, MTZL2, MTZl3 e MTZl4 em inst\u00e2ncias de 10, 20 e 40 nodos.\nFigura 3.9: Tempos m\u00e9dios, em segundos, necess\u00e1rios para a obten\u00e7\u00e3o do valor \u00f3timo da Formula\u00e7\u00e3o\nMTZ com as v\u00e1rias desigualdades levantadas em inst\u00e2ncias de 10, 20 e 40 nodos.\nAtrav\u00e9s do gr\u00e1fico da Figura 3.9 \u00e9 poss\u00edvel observar que os tempos m\u00e9dios mais baixos s\u00e3o obtidos usando a Formula\u00e7\u00e3o MTZll e os tempos m\u00e9dios mais elevados s\u00e3o obtidos usando a Formula\u00e7ao MTZl3.\nAssim, verificamos que os melhores resultados s\u00e3o obtidos quando as Desigualdades Levantadas 1 (Formula\u00e7\u00e3o MTZll) sao incorporadas no modelo quer em termos de melhor valor do limite inferior quer em termos de melhores tempos m\u00e9dios de execu\u00e7\u00e3o necess\u00e1rios para a obtenc\u00e3o do valor \u00e9timo. Deste modo e daqui em diante consideramos a Formula\u00e7ao MTZ com as desigualdades (3.33) substitu\u00e9das por\n(n - 2)xji + nxij + Ui &lt;Uj + (n - 1),\t(i, j) G A.\n51\nFormula\u00e7\u00e3o WMTZ\nPara comparar, computacionalmente, os valores dos limites inferiores obtidos usando cada uma das desigualdades levantadas propostas na Formulac\u00e7\u00e3ao WMTZ elabor\u00e9amos as Tabelas 3.6 e 3.7. A primeira coluna destas tabelas refere-se \u00e0 designa\u00e7\u00e3o da inst\u00eancia e as restantes colunas cont\u00eaem os valores dos limites inferiores obtidos pelas Formulac\u00e7o\u00e3es WMTZ, WMTZl1, WMTZl2, WMTZl3 e WMTZl4. A Tabela 3.6 contem instancias de 10 nodos e a Tabela 3.7 cont\u00e9m inst\u00eancias de 20 nodos dos tr\u00eas grupos de inst\u00eancias em estudo. Notamos que no interior de ambas as tabelas se encontram duas linhas horizontais que separam os tr\u00eaes grupos de inst\u00eaancias, Quase Caminhos, Aleat\u00e9orias e Euclideanas.\nInstancia\tWMTZl\tWMTZl1L\tWMTZl2L\tWMTZl3L\tWMTZl4L\nQC10-1\t68,087\t69,272\t102,846\t69,457\t71,898\nQC10-2\t178,512\t180,943\t277,893\t181,397\t183,665\nQC10-3\t93,654\t96,854\t282,320\t97,740\t99,806\nQC10-4\t142,483\t148,007\t282,940\t149,518\t158,827\nQC10-5\t283,673\t292,998\t480,818\t295,012\t327,451\nQC10-6\t87,994\t89,096\t128,771\t89,886\t90,336\nQC10-7\t268,808\t270,369\t364,790\t270,711\t281,230\nQC10-8\t262,573\t268,037\t474,800\t271,337\t283,628\nQC10-9\t115,192\t118,295\t217,663\t119,823\t124,517\nQC10-10\t411,754\t413,537\t533,522\t413,868\t423,625\nR10-1\t12422,800\t12750,700\t17066,500\t12867,300\t12917,000\nR10-2\t11861,700\t12297,900\t16824,000\t12413,300\t13101,400\nR10-3\t6388,140\t6553,230\t8796,340\t6572,760\t6607,750\nR10-4\t10245,500\t10584,700\t16627,400\t10913,600\t12016,400\nR10-5\t23718,600\t24000,800\t26048,300\t24130,900\t25094,600\nE10-1\t29076,100\t29261,400\t33619,700\t29380,900\t29572,000\nE10-2\t25284,200\t26005,700\t32734,900\t26286,900\t27053,600\nE10-3\t25426,300\t25570,000\t29698,600\t25589,100\t25656,400\nE10-4\t14822,700\t15902,900\t22379,500\t16139,300\t16773,000\nE10-5\t35540,900\t35835,700\t38040,100\t35887,100\t35954,700\nTabela 3.6: Compara\u00e7ao dos valores da relaxa\u00e7\u00e3o linear da Formula\u00e7\u00e3o WMTZ com as varias desigualdades levantadas em inst\u00e2ncias de 10 nodos.\n52\nInstancia\tWMTZl\tWMTZl1L\tWMTZl2L\tWMTZl3L\tWMTZl4L\nQC20-1\t1004,530\t1014,120\t1477,310\t1014,680\t1036,750\nQC20-2\t1024,370\t1035,710\t1345,330\t1036,980\t1042,310\nQC20-3\t828,600\t839,914\t1293,780\t841,609\t846,907\nQC20-4\t399,060\t401,685\t565,526\t401,775\t406,760\nQC20-5\t166,906\t169,220\t440,339\t169,879\t170,985\nQC20-6\t600,583\t607,423\t847,329\t607,927\t616,592\nQC20-7\t503,581\t519,391\t1022,540\t521,910\t532,799\nQC20-8\t208,947\t211,816\t296,717\t212,757\t216,625\nQC20-9\t166,153\t180,256\t559,421\t181,285\t185,302\nQC20-10\t767,331\t779,376\t1300,880\t779,893\t791,667\nR20-1\t25226,500\t25506,700\t30518,100\t25586,600\t25812,600\nR20-2\t25957,000\t26133,800\t31057,400\t26134,200\t26645,600\nR20-3\t25199,800\t25400,000\t30826,400\t25424,000\t25933,200\nR20-4\t23735,000\t24212,000\t30596,300\t24275,800\t24599,600\nR20-5\t24156,300\t24254,800\t28647,700\t24261,500\t24534,200\nE20-1\t40383,700\t40966,700\t50041,500\t41065,700\t41170,000\nE20-2\t62536,800\t63020,600\t77740,400\t63083,100\t63547,700\nE20-3\t45546,500\t46001,400\t57072,100\t46068,100\t46691,700\nE20-4\t44812,100\t45239,800\t51277,900\t45243,500\t45256,000\nE20-5\t44326,000\t44801,000\t54287,900\t44881,200\t45349,100\nTabela 3.7: Compara\u00e7\u00e3o dos valores da relaxa\u00e7\u00e3o linear da Formula\u00e7\u00e3o WMTZ com as v\u00e1rias desigualdades levantadas em inst\u00e2ncias de 20 nodos.\nOs valores a negrito nas Tabelas 3.6 e 3.7 correspondem ao melhor valor do limite inferior obtido. Podemos observar que se verifica a seguinte rela\u00e7ca\u00e3o entre os valores obtidos pela relaxa\u00e7ca\u00e3o linear nas diversas formulac\u00e7\u00e3oes para todas as inst\u00eaancias consideradas.\n53\nPara comparar, computacionalmente, os tempos de execu\u00e7\u00e3o obtidos usando cada uma das desigualdades levantadas propostas na Formula\u00e7\u00e3o WMTZ elabor\u00e1mos o gr\u00e1fico da Figura 3.10, onde se apresentam os tempos m\u00e1dios, em segundos, necess\u00e1rios para a obtenc\u00e3o do valor \u00e1timo em cada uma das Formula\u00e7\u00e3es WMTZ, WMTZll, WMTZL2, WMTZl3 e WMTZl4 em inst\u00e2ncias de 10, 20 e 40 nodos.\nFigura 3.10: Tempos m\u00e9dios, em segundos, necess\u00e1rios para a obten\u00e7\u00e3o do valor \u00f3timo da Formula\u00e7\u00e3o WMTZ com as v\u00e1rias desigualdades levantadas em inst\u00e2ncias de 10, 20 e 40 nodos.\nAtrav\u00e9s do gr\u00e1fico da Figura 3.10 \u00e1 poss\u00edvel observar que os tempos m\u00e9dios mais baixos s\u00e3ao obtidos usando a Formula\u00e7c\u00e3ao WMTZl2 e os tempos m\u00e1edios mais elevados s\u00e3ao obtidos usando a Formula\u00e7ca\u00e3o WMTZl4.\nAssim, verificamos que os melhores resultados s\u00e3o obtidos quando as Desigualdades Levantadas 2 (Formula\u00e7\u00e3o WMTZl2) s\u00e3o incorporadas no modelo. Deste modo e daqui em diante consideramos a Formula\u00e7\u00e3o WMTZ com as desigualdades (3.33) substitu\u00eddas por\n(W - Wji)xji + WijXij + pi &lt;pj + W(1 - Xij), (i,j) G A.\n54\nCompara\u00e7\u00f5o entre as Formula\u00e7\u00f5es MTZ e WMTZ\nA partir deste momento vamos usar as Formula\u00e7\u00e3es MTZ e WMTZ para representar as Formulac\u00e3es MTZl1 e WMTZl2, respetivamente. Al\u00edm disso, podemos verificar que nas inst\u00eancias de 10 e 20 nodos nos tr\u00eas grupos de instancias (ver Tabelas 3.4, 3.5, 3.6 e 3.7) e de estudos computacionais realizados para as restantes inst\u00e2ncias verificamos a seguinte rela\u00e7\u00e3o\ntf(MTZL) = tf(WMTZL).\nPretendemos agora verificar qual, dentre estas duas formula\u00e7\u00e3es, a que apresenta melhores tempos computacionais na obten\u00e7\u00e3o do valor do limite inferior para o custo. Nas tabelas que se seguem apresentamos, para cada grupo de instancias em teste, os tempos m\u00eddios, em segundos, para obten\u00e7\u00e3o do valor da relaxa\u00e7\u00e3o linear acompanhados dos respetivos desvios padr\u00e3es em cada uma das Formula\u00e7\u00e3es MTZ e WMTZ para inst\u00eancias at\u00e9 1000 nodos.\n\tTemp<\t&lt;M\u00e9dio\tDesvie\t) Padr\u00e3o\nN\u00bb Nodos\tMTZl\tWMTZl\tMTZl\tWMTZl\n10\t0,003\t0,003\t0,007\t0,001\n20\t0,005\t0,008\t0,008\t0,001\n40\t0,022\t0,024\t0,008\t0,002\n60\t0,050\t0,056\t0,007\t0,002\n80\t0,106\t0,113\t0,014\t0,005\n100\t0,223\t0,200\t0,070\t0,014\n150\t0,721\t0,788\t0,119\t0,223\n200\t1,807\t1,679\t0,254\t0,125\n300\t6,101\t4,807\t2,842\t0,264\n400\t18,561\t11,538\t11,473\t0,407\n500\t26,068\t23,001\t1,132\t0,653\n1000\t195,298\t76,388\t36,262\t14,615\nTabela 3.8: Compara\u00e7\u00e3o dos tempos m\u00e9dios (em segundos) e dos desvios padr\u00e3es necess\u00e1rios para a obtencao do valor da relaxacao linear nas Formulac\u00e3es MTZ e WMTZ em instancias QC.\n55\nN\u00bb Nodos\tmtzl\tWMTZl\tMTZl\tWMTZl\n10\t0,000\t0,000\t0,000\t0,000\n20\t0,003\t0,009\t0,007\t0,008\n40\t0,025\t0,022\t0,008\t0,009\n60\t0,144\t0,069\t0,058\t0,014\n80\t0,219\t0,196\t0,037\t0,101\n100\t0,387\t0,331\t0,168\t0,152\n150\t1,105\t1,098\t0,318\t0,245\n200\t2,683\t2,271\t0,229\t0,550\n300\t8,250\t6,683\t0,446\t2,826\n400\t20,336\t10,446\t1,089\t1,786\n500\t60,651\t31,782\t7,682\t13,284\n1000\t154,099\t115,664\t48,808\t8,702\nTabela 3.9: Compara\u00e7\u00e3o dos tempos m\u00e9dios (em segundos) e dos desvios padr\u00f5es necess\u00e1rios para a obten\u00e7ao do valor da relaxa\u00e7ao linear nas Formula\u00e7\u00f5es MTZ e WMTZ em inst\u00e2ncias R.\nTempo M\u00e9dio\tDesvio Padr\u00e3o\nN\u00bb Nodos\tmtzl\tWMTZl\tMTZl\tWMTZl\n10\t0,003\t0,000\t0,007\t0,000\n20\t0,016\t0,006\t0,000\t0,008\n40\t0,031\t0,025\t0,016\t0,014\n60\t0,081\t0,050\t0,007\t0,007\n80\t0,147\t0,103\t0,023\t0,008\n100\t0,275\t0,212\t0,034\t0,060\n150\t0,839\t0,418\t0,138\t0,051\n200\t2,043\t0,933\t0,205\t0,160\n300\t7,506\t2,480\t1,751\t0,168\n400\t16,049\t6,318\t1,064\t0,478\n500\t39,225\t11,132\t6,477\t0,093\n1000\t172,568\t73,114\t62,173\t4,347\nTabela 3.10: Compara\u00e7ao dos tempos medios (em segundos) e dos desvios padr\u00f5es necess\u00e1rios para a obten\u00e7ao do valor da relaxa\u00e7ao linear nas Formula\u00e7\u00f5es MTZ e WMTZ em inst\u00e2ncias E.\n56\nNas inst\u00e2ncias Quase Caminhos, os tempos m\u00e1dios gastos na obten\u00e7\u00e3o do valor da relaxa\u00e7\u00e3o linear de ambas as Formula\u00e7\u00e3es MTZ e WMTZ s\u00e3o semelhantes. De notar apenas que para inst\u00e2ancias de 1000 nodos, os tempos m\u00e1edios usando a Formula\u00e7\u00e3o MTZL aumentam para mais do dobro dos tempos m\u00e1dios usando a Formulacao WMTZL. Em relacao as inst\u00e2ncias Aleat\u00f3rias para mais de 200 nodos usando a Formula\u00e7\u00e3o WMTZL obt\u00e2m-se menores tempos m\u00e1dios, sendo os tempos m\u00e1dios semelhantes para as restantes inst\u00e2ancias Aleat\u00e1orias. Nas insta\u00e2ncias Euclideanas at\u00e1e 100 nodos os tempos m\u00e1edios s\u00e3ao semelhantes, mas para inst\u00e2ancias com mais de 100 nodos usando a Formulac\u00e3o WMTZL obt\u00e2m-se menores tempos m\u00e1dios. Nos v\u00e1rios grupos de inst\u00e2ncias de entre as Formula\u00e7\u00e3es MTZL e WMTZL, em geral, usando a Formulacao WMTZL obt\u00eam-se tempos m\u00e1dios de execuc\u00e3o inferiores.\n3.4.3\tEstudo Comparativo das Formulac\u00e3es\nNesta sec\u00e7ca\u00e3o apresentamos e comparamos o tempo de execu\u00e7ca\u00e3o e a qualidade das solu\u00e7c\u00e3oes encontradas usando as formula\u00e7c\u00e3oes e os procedimentos apresentados ao longo do cap\u00e1tulo. Para cada grupo de inst\u00e2ancias apresentamos algumas tabelas, onde se reunem os gap (em percentagem) encontrados na obtenc\u00e7\u00e3ao de um limite inferior para o valor do custo e os tempos (em segundos) encontrados na obten\u00e7c\u00e3ao do valor o\u00e1timo ou de um limite superior para o valor do custo. Notamos que o gap = OPT-Op1MSTL) x 100, onde i9(WMSTl) \u00e1 o valor do limite inferior obtido para o valor do custo e OPT \u00e1 o valor \u00e1timo (d(WMST)) ou o melhor valor de uma soluc\u00e3o admiss\u00e1vel obtida, e, portanto, um limite superior para o valor do custo. Nas v\u00e1arias tabelas que vamos apresentar a designa\u00e7c\u00e3ao Mem representa falta de mem\u00e1oria. No Algoritmo Branch and Bound usando as Formula\u00e7\u00e3es ES, MF, WE, MTZ e WMTZ foi imposto um tempo de execuc\u00e7\u00e3ao de 5000 segundos e usando os procedimentos de introdu\u00e7ca\u00e3o de cortes um limite no tempo de execuc\u00e7\u00e3ao de 10800 segundos. Em rela\u00e7c\u00e3ao aos Procedimentos P-MTZ+C e P-WMTZ+C, apenas apresentamos os resultados computacionais relativos ao Procedimento P-WMTZ+C dado que na subsec\u00e7\u00e3o anterior, a relaxa\u00e7ao linear da Formula\u00e7c\u00e3ao WMTZ foi a que apresentou tempos m\u00e1edios de execu\u00e7c\u00e3ao inferiores.\nInst\u00e2ncias Quase Caminhos\nNeste grupo de inst\u00e2ancias n\u00e3ao foi poss\u00e1vel correr as inst\u00e2ancias com 40 ou mais nodos usando as Formula\u00e7c\u00e3oes ES e WE por falta de mem\u00e1oria, sendo assim apenas \u00e1e poss\u00e1vel\n57\ncomparar as v\u00e9arias formula\u00e7co\u00f5es e procedimentos com introduc\u00e7\u00f5ao de cortes para as inst\u00eancias de 10 e 20 nodos. Quanto a Formula\u00e7\u00f5o MF apresenta falta de mem\u00e9ria para inst\u00eancias com mais de 150 nodos. Usando as Formulacoes MTZ e WMTZ e os Procedimentos P-CS e P-WMTZ+C \u00e9 poss\u00edvel obter um valor para o limite inferior para instancias que tenham at\u00e9 1000 nodos.\nEm termos de qualidade do valor do limite inferior, as formula\u00e7c\u00f5oes apresentadas podem ser divididas em dois grupos como se pode observar na Tabela 3.11 atrav\u00e9s da exist\u00eancia de um risco vertical. Na Tabela 3.11 a primeira coluna refere-se \u00e0 designa\u00e7\u00f5o da inst\u00eancia, a segunda coluna cont\u00e9m o gap obtido usando as Formula\u00e7\u00f5es ESL, MFL e WEl e os Procedimentos P-CSL e P-WMTZ+CL. A coluna oito cont\u00e9m o gap obtido usando as Formulacoes MTZL e WMTZL. Nas restantes colunas podemos observar os tempos de execuc\u00f5o (em segundos) necess\u00e9rios para a obten\u00e7ao do valor \u00e9timo usando as Formulac\u00f5es ES, MF, WE, MTZ e WMTZ e os Procedimentos P-CS e P-WMTZ+C.\nGap\tTempos\tGap\tTempos\nInst\u00e2ncia\tES\t\tMF\tWE\tP-CS\tP-WMTZ+C\t\tMTZ\tWMTZ\nQC10-1\t38,78\t0,16\t0,28\t3,08\t0,06\t0,08\t38,78\t0,08\t0,11\nQC10-2\t23,66\t0,19\t0,84\t3,42\t0,12\t0,22\t23,66\t0,11\t0,05\nQC10-3\t24,71\t0,23\t0,28\t2,62\t0,05\t0,11\t24,71\t0,16\t0,10\nQC10-4\t22,27\t0,41\t1,51\t3,18\t0,11\t0,11\t22,27\t0,14\t0,17\nQC10-5\t17,00\t0,23\t0,56\t3,23\t0,03\t0,09\t17,24\t0,19\t0,14\nQC10-6\t28,06\t0,19\t0,98\t2,98\t0,23\t0,11\t28,06\t0,08\t0,12\nQC10-7\t16,90\t0,16\t0,56\t3,48\t0,14\t0,09\t16,90\t0,11\t0,14\nQC10-8\t17,51\t0,53\t1,50\t3,46\t0,09\t0,13\t17,71\t0,13\t0,15\nQC10-9\t17,24\t0,38\t1,28\t3,54\t0,08\t0,06\t17,24\t0,08\t0,06\nQC10-10\t16,79\t0,42\t0,70\t2,93\t0,16\t0,09\t18,79\t0,17\t0,28\nQC20-1\t6,56\t1179,24\t19,45\t43,16\t0,90\t0,95\t6,56\t0,89\t0,72\nQC20-2\t8,04\t4946,99\t14,47\t37,78\t0,64\t1,09\t8,04\t0,84\t1,12\nQC20-3\t5,15\t1192,27\t42,79\t58,82\t0,95\t1,12\t5,15\t1,25\t1,13\nQC20-4\t16,07\t1351,41\t7,78\t33,43\t0,67\t0,73\t16,09\t1,01\t0,95\nQC20-5\t19,12\t1379,94\t7,53\t34,74\t0,63\t0,62\t19,50\t0,94\t0,55\nQC20-6\t8,34\t1812,30\t33,77\t66,62\t1,23\t1,45\t8,89\t1,09\t1,60\nQC20-7\t8,33\t3073,37\t71,39\t61,98\t2,25\t3,61\t8,54\t2,17\t2,12\nQC20-8\t7,18\t1874,57\t12,06\t34,94\t0,66\t1,28\t7,28\t1,08\t0,90\nQC20-9\t9,91\t1010,29\t30,70\t57,78\t0,95\t1,81\t9,92\t2,09\t0,91\nQC20-10\t10,04\t4218,94\t11,68\t44,51\t1,00\t0,83\t10,04\t1,05\t1,35\nTabela 3.11: Compara\u00e7\u00e3o das formula\u00e7\u00f5es em inst\u00e2ncias QC de 10 e 20 nodos.\n58\nOs gaps obtidos usando as Formulac\u00e3es ESL, MFL e WEL e os Procedimentos P-CSL e P-WMTZ+Cl sao iguais. Estes gaps sao inferiores aos obtidos atrav\u00e9s do uso das Formula\u00e7\u00e3es MTZL e WMTZL em 40% das inst\u00e2ncias apresentadas na Tabela 3.11 (8 em 20 inst\u00e2ncias).\nOs tempos de execuc\u00e7\u00e3ao usando a Formula\u00e7c\u00e3ao ES come\u00e7cam a ser bastante elevados para inst\u00e2ancias de 20 nodos. O uso da Formula\u00e7ca\u00e3o MF torna-se mais r\u00edapido do que o uso da Formula\u00e7\u00e3o WE. Em geral, para instancias de 10 e 20 nodos os tempos de execu\u00e7c\u00e3ao sa\u00e3o inferiores usando o Procedimento P-CS.\nNa Tabela 3.12 tamb\u00edm podemos observar a exist\u00eancia de um risco vertical, o qual indica que as formula\u00e7c\u00e3oes apresentadas tamb\u00edem podem ser divididas, em termos de qualidade do valor do limite inferior, em dois grupos. Para insta\u00e2ncias com 40, 60 e 80 nodos s\u00edo \u00ede poss\u00edvel comparar as Formulac\u00e7\u00e3oes MF, MTZ e WMTZ e os Procedimentos P-CS e P-WMTZ+C dado que as Formula\u00e7c\u00e3oes ES e WE apresentam falta de memoria. Na Tabela 3.12 a primeira coluna refere-se \u00e0 designa\u00e7\u00e3o da inst\u00e2ncia, a segunda coluna cont\u00edem o gap obtido usando a Formula\u00e7ca\u00e3o MFL e os Procedimentos P-CSL e P-WMTZ+CL. A coluna seis cont\u00edem o gap obtido usando as Formula\u00e7co\u00e3es MTZL e WMTZL. Nas restantes colunas podemos observar os tempos de execu\u00e7ca\u00e3o (em segundos) necess\u00edarios para a obten\u00e7c\u00e3ao do valor \u00edotimo ou de um limite superior para o valor do custo usando as Formulac\u00e7\u00e3oes MF, MTZ e WMTZ e os Procedimentos P-CS e P-WMTZ+C.\nNote-se que nas inst\u00e2ancias com 40, 60 e 80 nodos usando a Formula\u00e7ca\u00e3o MF n\u00e3ao foi poss\u00edvel no tempo limite imposto (5000 segundos) provar a otimalidade em nenhuma das inta\u00e2ncias.\n59\n\tGap\t\tTempos\tGap\t\tTempos\t\nInst\u00e2ncia\t\tMF\tP-CS\tP-WMTZ+C\t\tMTZ\tWMTZ\nQC40-1\t5,83\t5012,23a\t61,43\t29,89\t5,92\t32,61\t67,98\nQC40-2\t7,18\t5010,42a\t55,87\t49,55\t7,18\t42,20\t28,68\nQC40-3\t5,60\t5012,01a\t27,69\t34,77\t5,77\t38,19\t5,51\nQC40-4\t5,38\t5007,71a\t164,14\t88,26\t5,70\t186,48\t148,97\nQC40-5\t6,40\t5009,16a\t37,21\t25,88\t6,42\t36,78\t24,81\nQC40-6\t5,95\t5010,74a\t45,20\t28,58\t5,95\t15,27\t24,16\nQC40-7\t8,15\t5010,32a\t45,44\t101,58\t8,15\t36,03\t54,28\nQC40-8\t6,73\t5030,13a\t28,14\t17,33\t6,77\t5,71\t21,07\nQC40-9\t6,60\t5011,85a\t25,08\t14,64\t6,66\t11,53\t28,88\nQC40-10\t5,81\t5009,64a\t62,62\t27,06\t5,81\t24,07\t30,00\nQC60-1\t4,54\t5328,16a\t345,54\t473,61\t4,58\t487,59\t857,77\nQC60-2\t4,56\t5145,07a\t418,85\t610,92\t4,56\t621,32\t456,46\nQC60-3\t2,87\t5137,45a\t304,87\t554,68\t2,87\t297,38\t584,50\nQC60-4\t4,36\t5151,68a\t1121,22\t1250,37\t4,36\t872,04\t2100,82\nQC60-5\t5,48\t5124,27a\t400,90\t214,55\t5,48\t234,70\t189,30\nQC60-6\t5,26\t5153,44a\t185,12\t201,32\t5,26\t227,57\t248,73\nQC60-7\t5,46\t5176,42a\t972,59\t783,62\t5,46\t2361,43\t1032,19\nQC60-8\t5,11\t5128,38a\t310,45\t414,94\t5,13\t394,41\t332,79\nQC60-9\t6,00\t5108,40a\t563,06\t603,84\t6,00\t752,00\t710,41\nQC60-10\t4,66\t8223,73a\t169,76\t66,36\t4,66\t1110,18\t107,88\nQC80-1\t3,29\t6159,59a\t700,68\t4605,85\t3,33\t2524,85\t1129,14\nQC80-2\t4,30\t5424,06a\t1726,52\t3618,82\t4,33\t1336,79\t1013,28\nQC80-3\t3,07\t5425,27a\t1592,13\t2102,90\t3,13\t4283,73\t992,12\nQC80-4\t3,28\t5660,65a\t3104,76\t732,30\t3,31\t2968,99\t4999,24a\nQC80-5\t4,92\t5777,09a\t1164,13\t1424,12\t4,96\t1860,88\t1288,65\nQC80-6\t2,88\t6238,23a\t9679,97\t7280,69\t3,02\t3888,80\t4999,48a\nQC80-7\t3,39\t5976,62a\t1731,47\t1916,47\t3,44\t853,57\t2951,94\nQC80-8\t3,04\t5944,65a\t480,45\t393,98\t3,04\t4897,01\t325,45\nQC80-9\t4,17\t5747,04a\t2363,90\t1255,64\t4,37\t2736,49\t4999,84a\nQC80-10\t5,45\t5508,36a\t1793,40\t2025,78\t5,59\t4883,93\t2541,65\nTabela 3.12: Compara\u00e7\u00e3o das formula\u00e7\u00e3es em inst\u00e2ncias QC de 40, 60 e 80 nodos. a N\u00e3o foi poss\u00edvel provar a otimalidade no tempo imposto.\n60\nNa Tabela 3.12 continuamos a observar que os gaps usando a Formulac\u00e3o MFL e os Procedimentos P-CSL e P-WMTZ+CL sao um pouco mais baixos em 56,67% das instancias apresentadas (17 em 30 inst\u00e2ncias). Pela observa\u00e7ao da Tabela 3.12 verificamos que em 15 inst\u00e2ncias usando o Procedimento P-CS obtem-se tempos de execu\u00e7\u00e3o inferiores e nas outras 15 instancias os tempos de execu\u00e7ao sao menores usando o Procedimento P-WMTZ+C.\nJ\u00e9 vimos que os dois procedimentos com introduc\u00e3o de cortes apresentam os mesmos gaps. Para averiguar qual dos procedimentos \u00e9 mais r\u00e9pido na obten\u00e7\u00e3o de um limite inferior elabor\u00e9mos a Tabela 3.13, onde se encontram os tempos m\u00e9dios (em segundos) e os respetivos desvios padr\u00e3es obtidos para inst\u00e2ncias de 10 a 80 nodos.\nTempos PL\tDesvio Padr\u00e3o\nN.Q Nodos\tP-CSL\tP-WMTZ+Cl\tP-CSL\tP-WMTZ+Cl\n10\t0,011\t0,003\t0,007\t0,006\n20\t0,233\t0,025\t0,061\t0,008\n40\t7,541\t0,086\t1,201\t0,015\n60\t49,439\t0,201\t9,570\t0,042\n80\t214,574\t0,587\t36,718\t0,188\nTabela 3.13: Compara\u00e7\u00e3o dos Procedimentos P-CS e P-WMTZ+C em termos de tempo medio de execu\u00e7\u00e3o (em segundos) da relaxa\u00e7\u00e3o linear em inst\u00e2ncias QC de 10, 20, 40, 60 e 80 nodos.\nNa Tabela 3.13 podemos observar que para a obten\u00e7\u00e3o de um limite inferior para o valor do custo, os tempos m\u00e9dios e correspondentes desvios padroes sao menores usando o Procedimento P-WMTZ+CL.\nInst\u00e2ncias Aleat\u00f3rias\nNas inst\u00e2ncias Aleat\u00e9rias usando a Formula\u00e7\u00e3o WE s\u00e9 \u00e9 poss\u00e9vel executar a instancia R10-1, n\u00e3o sendo poss\u00e9vel correr as restantes inst\u00e2ncias por falta de mem\u00e9ria, sendo assim apenas \u00e9 poss\u00e9vel comparar as v\u00e9rias formula\u00e7\u00e3es e procedimentos com introdu\u00e7\u00e3o de cortes para a inst\u00e2ncia R10-1. A Formulac\u00e3o ES apresenta falta de mem\u00e9ria nas instancias R20-1, R20-2, R20-3 e para inst\u00e2ncias com 40 ou mais nodos. Quanto \u00e0 Formulac\u00e3o MF apresenta falta de mem\u00e9ria para inst\u00e2ncias com mais de 200 nodos.\n61\nUsando as Formula\u00e7\u00e3es MTZ e WMTZ e os Procedimentos P-CS e P-WMTZ+C \u00e9 possrvel obter um valor para o limite inferior para instancias que tenham at\u00e9 1000 nodos.\nEm termos de qualidade do valor do limite inferior, as formula\u00e7\u00e3es apresentadas podem ser divididas em dois grupos como se pode observar na Tabela 3.14 atrav\u00e9s da exist\u00eancia de um risco vertical. Na Tabela 3.14 a primeira coluna refere-se \u00e0 designa\u00e7\u00e3o da instancia, a segunda coluna cont\u00e9m o gap obtido usando as Formula\u00e7\u00e3es ESL, MFL e WEl e os Procedimentos P-CSL e P-WMTZ+CL. A coluna oito cont\u00e9m o gap obtido usando as Formula\u00e7\u00f5es MTZL e WMTZL. Nas restantes colunas podemos observar os tempos de execuc\u00e7\u00e3ao (em segundos) necess\u00e9arios para a obten\u00e7ca\u00e3o do valor \u00e9otimo usando as Formulac\u00e3es ES, MF, WE, MTZ e WMTZ e os Procedimentos P-CS e P-WMTZ+C.\nGap\tTempos\tGap\tTempos\nInst\u00e2ncia\t\tES\tMF\tWE\tP-CS\tP-WMTZ+C\t\tMTZ\tWMTZ\nR10-1\t10,70\t0,14\t1,12\t109,75\t0,06\t0,06\t11,59\t0,13\t0,08\nR10-2\t18,96\t0,16\t0,55\tMem\t0,12\t0,23\t18,96\t0,05\t0,06\nR10-3\t19,25\t0,16\t0,66\tMem\t0,03\t0,05\t42,21\t0,16\t0,13\nR10-4\t14,96\t0,45\t1,31\tMem\t0,25\t0,22\t14,96\t0,06\t0,09\nR10-5\t11,42\t0,14\t0,28\tMem\t0,06\t0,37\t11,42\t0,03\t0,03\nR20-1\t3,96\tMem\t3,84\tMem\t0,27\t1,01\t4,79\t0,17\t0,27\nR20-2\t3,97\tMem\t2,36\tMem\t0,41\t1,92\t3,97\t0,12\t0,09\nR20-3\t3,94\tMem\t8,14\tMem\t0,45\t0,45\t7,61\t0,77\t0,33\nR20-4\t3,89\t2458,65\t1,42\tMem\t0,44\t0,66\t3,89\t0,64\t0,09\nR20-5\t4,63\t3183,96\t4,59\tMem\t0,50\t1,62\t4,63\t0,28\t0,16\nTabela 3.14: Compara\u00e7\u00e3o das formula\u00e7\u00e3es em instancias R de 10 nodos.\nOs gaps obtidos usando as Formula\u00e7\u00f5es ESL, MFL e WEL e os Procedimentos P-CSL e P-WMTZ+Cl s\u00e3o iguais. Estes gaps sao inferiores aos obtidos atrav\u00e9s do uso das Formula\u00e7\u00e3es MTZL e WMTZL em 40% das inst\u00e2ncias apresentadas na Tabela 3.14 (4 em 10 inst\u00eancias).\nNa inst\u00eaancia R10-1 obt\u00eaem-se os valores \u00e9otimos mais rapidamente usando os Procedimentos P-CS e P-WMTZ+C. Para a u\u00e9nica inst\u00eaancia que \u00e9e poss\u00e9vel resolver usando a Formula\u00e7c\u00e3ao WE obt\u00e9em-se o tempo mais elevado. Nas restantes inst\u00eaancias de 10 nodos e nas inst\u00eancias R20-1, R20-2 e R20-3, em geral, usando a Formula\u00e7ao MF obt\u00eam-se tempos mais elevados.\n62\nOs tempos de execuc\u00e3o usando a Formula\u00e7\u00e3o ES s\u00e3o bastante elevados para as inst\u00e2ncias R20-4 e R20-5, as unicas de 20 nodos que resolve. O Procedimento P-CS para inst\u00e2ncias de 10 e 20 nodos parece ser o que, em geral, apresenta tempos de execu\u00e7\u00e3o inferiores.\nNa Tabela 3.15 tamb\u00e9m podemos observar a exist\u00e2ncia de um risco vertical, o qual indica que as formula\u00e7c\u00e3oes apresentadas tamb\u00e1em podem ser divididas, em termos de qualidade do valor do limite inferior, em dois grupos. Para inst\u00e2ncias com 40, 60 e 80 nodos s\u00e1 \u00e9 poss\u00edvel comparar as Formula\u00e7\u00e3es MF, MTZ e WMTZ e os Procedimentos P-CS e P-WMTZ+C dado que as Formula\u00e7\u00e3es ES e WE apresentam falta de memoria. Na Tabela 3.15 a primeira coluna refere-se \u00e0 designac\u00e3o da inst\u00e2ncia, a segunda coluna cont\u00e1m o gap obtido usando a Formula\u00e7\u00e3o MFL e os Procedimentos P-CSL e P-WMTZ+Cl. A coluna seis cont\u00e1m o gap obtido usando as Formula\u00e7\u00e3es MTZl e WMTZl. Nas restantes colunas podemos observar os tempos de execu\u00e7\u00e3o (em segundos) necess\u00e1rios para a obten\u00e7ao do valor \u00e1timo ou de um limite superior para o valor do custo usando as Formula\u00e7co\u00e3es MF, MTZ e WMTZ e os Procedimentos P-CS e P-WMTZ+C.\n63\nInst\u00e2ncia\t\tMF\tP-CS\tP-WMTZ+C\t\tMTZ\tWMTZ\nR40-1\t1,84\t26,35\t3,68\t4,51\t1,84\t0,44\t0,28\nR40-2\t1,72\t34,93\t6,26\t3,68\t1,72\t0,67\t0,33\nR40-3\t1,74\t27,86\t9,50\t5,73\t5,32\t4,99\t11,22\nR40-4\t2,03\t35,32\t10,28\t2,57\t2,03\t0,41\t0,28\nR40-5\t1,53\t62,85\t16,44\t4,18\t1,53\t0,58\t0,50\nR60-1\t0,63\t91,82\t58,66\t4,51\t0,63\t1,36\t0,70\nR60-2\t0,56\t124,89\t54,24\t6,07\t0,56\t1,33\t0,98\nR60-3\t0,52\t369,99\t34,65\t6,93\t0,52\t1,30\t0,81\nR60-4\t0,70\t418,42\t44,15\t7,27\t1,59\t9,50\t6,30\nR60-5\t0,53\t318,72\t52,43\t5,03\t0,59\t2,17\t2,75\nR80-1\t0,34\t595,91\t153,36\t15,19\t0,34\t2,37\t1,33\nR80-2\t0,40\t973,80\t143,55\t16,18\t0,97\t24,26\t22,11\nR80-3\t0,44\t240,03\t164,03\t12,42\t0,78\t4,34\t2,59\nR80-4\t0,37\t346,58\t158,05\t11,17\t0,37\t1,86\t1,14\nR80-5\t0,38\t1127,72\t176,53\t16,29\t0,93\t5,46\t6,18\nR100-1\t0,10\t1172,18\t524,12\t12,90\t1,75\t1515,59\t1328,88\nR100-2\t0,13\t2934,95\t369,84\t28,80\t1,67\t2635,51\t4999,92a\nR100-3\t0,02\t651,38\t670,05\t23,10\t0,20\t3,92\t3,99\nR100-4\t0,06\t1273,22\t619,69\t16,80\t0,82\t18,43\t20,70\nR100-5\t0,04\t1788,42\t560,92\t21,81\t1,04\t19,86\t40,28\nTabela 3.15: Compara\u00e7\u00e3o das formula\u00e7\u00f5es em inst\u00e2ncias R de 40, 60, 80 e 100 nodos. a N\u00e3o foi poss\u00edvel provar a otimalidade no tempo imposto.\nOs gaps obtidos usando a Formulacao MFL e os Procedimentos P-CSL e P-WMTZ+CL sa\u00e3o inferiores aos gaps obtidos usando as Formula\u00e7co\u00e3es MTZL e WMTZL em 55% das instancias apresentadas na Tabela 3.15 (11 em 20 instancias). A medida que se aumenta a dimens\u00e3ao das inst\u00e2ancias, verificamos que o tempo de execu\u00e7c\u00e3ao \u00ede inferior usando o Procedimento P-WMTZ+C. Note-se que usando a Formula\u00e7c\u00e3ao MF obt\u00e2em-se tempos de execu\u00e7ca\u00e3o mais elevados.\nInstancias Euclideanas\nUsando a Formula\u00e7c\u00e3ao WE todas as insta\u00e2ncias Euclideanas apresentam falta de mem\u00edoria. A Formulac\u00e7\u00e3ao ES n\u00e3ao corre por falta de mem\u00edoria para inst\u00e2ancias de 20 ou mais nodos. Quanto a Formulacao MF apresenta falta de mem\u00edria para inst\u00e2ncias\n64\ncom mais de 200 nodos. Usando as Formula\u00e7c\u00e3oes MTZ e WMTZ e os Procedimentos P-CS e P-WMTZ+C \u00ed poss\u00edvel obter um valor para o limite inferior para inst\u00eancias que tenham at\u00ede 1000 nodos.\nEm termos de qualidade do valor do limite inferior, as formulac\u00e7\u00e3oes apresentadas podem ser divididas em dois grupos como se pode observar na Tabela 3.16 atrav\u00e9s da exist\u00eancia de um risco vertical. Na Tabela 3.16 a primeira coluna refere-se \u00e0 designac\u00e3o da inst\u00eancia, a segunda coluna contem o gap obtido usando as Formula\u00e7\u00e3es ESL e MFL e os Procedimentos P-CSL e P-WMTZ+CL. A coluna sete cont\u00edm o gap das Formula\u00e7\u00f5es MTZl e WMTZl. Nas restantes colunas podemos observar os tempos de execuc\u00e3o (em segundos) necess\u00edarios para a obten\u00e7c\u00e3ao do valor \u00edotimo usando as Formula\u00e7co\u00e3es ES, MF, MTZ e WMTZ e os Procedimentos P-CS e P-WMTZ+C.\nGap\tTempos\tGap\tTempos\nInst\u00e2ncia\t\tES\tMF\tP-CS\tP-WMTZ+C\t\tMTZ\tWMTZ\nE10-1\t8,63\t0,27\t0,90\t0,08\t0,09\t15,92\t0,17\t0,28\nE10-2\t10,42\t0,17\t0,22\t0,05\t0,03\t11,33\t0,36\t0,14\nE10-3\t8,85\t0,22\t1,16\t0,06\t0,09\t15,65\t0,33\t0,38\nE10-4\t9,51\t0,17\t0,05\t0,02\t0,17\t14,86\t0,30\t0,09\nE10-5\t7,76\t0,17\t0,19\t0,05\t0,16\t7,76\t0,05\t0,06\nE20-1\t3,92\tMem\t5,07\t0,36\t0,61\t6,39\t1,14\t1,64\nE20-2\t2,42\tMem\t0,53\t0,16\t0,17\t13,13\t1,50\t1,17\nE20-3\t2,61\tMem\t5,07\t0,78\t1,59\t4,91\t1,05\t0,67\nE20-4\t3,08\tMem\t2,92\t0,41\t0,81\t9,31\t1,20\t1,28\nE20-5\t2,40\tMem\t4,10\t0,53\t1,28\t10,16\t4,65\t3,76\nE40-1\t0,88\tMem\t56,24\t13,57\t6,41\t8,31\t100,09\t389,14\nE40-2\t1,05\tMem\t47,92\t11,79\t7,08\t7,08\t17,69\t41,36\nE40-3\t0,79\tMem\t37,88\t9,17\t4,74\t3,15\t6,65\t11,06\nE40-4\t0,95\tMem\t166,67\t6,01\t5,66\t7,09\t13,00\t34,45\nE40-5\t0,81\tMem\t56,24\t10,95\t4,09\t4,28\t6,55\t10,11\nTabela 3.16: Compara\u00e7\u00e3o das formulac\u00e3es em inst\u00e2ncias E de 10 nodos.\nOs gaps obtidos usando as Formula\u00e7\u00e3es ESL e MFL e os Procedimentos P-CSL e P-WMTZ+Cl sao inferiores aos gaps obtidos usando as Formula\u00e7\u00f5es MTZL e WMTZL em 93,33% das inst\u00eancias apresentadas na Tabela 3.16 (14 em 15 instancias).\nOs tempos de execuc\u00e7a\u00e3o mais elevados obt\u00eaem-se usando a Formula\u00e7c\u00e3ao MF. Nas insta\u00eancias de 10 e 20 nodos observamos tempos inferiores quando se utiliza o Proce-\n65\ndimento P-CS, mas para inst\u00e2ancias de 40 nodos os tempos de execu\u00e7c\u00e3ao sa\u00e3o inferiores usando o procedimento P-WMTZ+C.\nNa Tabela 3.17 tamb\u00e9m podemos observar a exist\u00e2ncia de um risco vertical, o qual indica que as formula\u00e7c\u00e3oes apresentadas tamb\u00e9em podem ser divididas, em termos de qualidade do valor do limite inferior, em dois grupos. Para inst\u00e2ancias com 60, 80 e 100 nodos s\u00f3 \u00e9 poss\u00edvel comparar as Formula\u00e7oes MF, MTZ e WMTZ e os Procedimentos P-CS e P-WMTZ+C dado que as Formula\u00e7\u00e3es ES e WE apresentam falta de mem\u00e9ria. Na Tabela 3.17 a primeira coluna refere-se \u00e0 designa\u00e7\u00e3o da inst\u00e2ncia, a segunda coluna cont\u00e9m o gap obtido usando a Formulac\u00e3o MFL e os Procedimentos P-CSL e P-WMTZ+Cl. A coluna seis cont\u00e9m o gap obtido usando as Formula\u00e7oes MTZl e WMTZl. Nas restantes colunas podemos observar os tempos de execucao (em segundos) necess\u00e9arios para a obten\u00e7c\u00e3ao do valor \u00e9otimo ou de um limite superior para o valor do custo usando as Formula\u00e7c\u00e3oes MF, MTZ e WMTZ e os Procedimentos P-CS e P-WMTZ+C.\nGap\tTempos\tGap\tTempos\nInst\u00e2ncia\t\tMF\tP-CS\tP-WMTZ+C\t\tMTZ\tWMTZ\nE60-1\t0,39\t464,96\t43,67\t11,75\t3,10\t76,66\t47,35\nE60-2\t0,49\t2545,94\t69,44\t11,36\t5,92\t579,28\t755,92\nE60-3\t0,34\t254,42\t35,68\t7,85\t4,35\t793,01\t532,07\nE60-4\t0,39\t322,67\t39,73\t10,62\t7,29\t710,44\t4768,68\nE60-5\t0,34\t902,43\t33,24\t20,22\t9,20\t5000,41a\t4999,99a\nE80-1\t0,22\t397,72\t175,42\t29,89\t7,18\t5000,32a\t5000,33a\nE80-2\t0,24\t408,71\t283,39\t29,27\t3,47\t161,85\t142,68\nE80-3\t0,23\t5068,13\t151,38\t61,28\t7,88\t4999,64a\t5000,23a\nE80-4\t0,25\t1659,03\t160,81\t42,79\t7,19\t5000,31a\t5000,48a\nE80-5\t0,21\t5967,62a\t224,94\t42,35\t8,28\t5000,47a\t5000,51a\nE100-1\t0,11\t6056,17a\t686,10\t78,61\t3,35\t2032,71\t2462,64\nE100-2\t0,06\t4376,29\t518,48\t98,70\t7,62\t4999,99a\t5000,17a\nE100-3\t0,09\t3827,08\t476,77\t166,30\t6,00\t4999,63a\t5000,31a\nE100-4\t0,10\t1384,07\t478,98\t102,98\t5,35\t5001,39a\t5000,79a\nE100-5\t0,10\t2665,98\t527,56\t135,39\t6,79\t5000,34a\t5000,96a\nTabela 3.17: Comparac\u00e3o das formula\u00e7oes em inst\u00e2ncias E de 20, 40, 60 e 80 nodos. a N\u00e3o foi poss\u00edvel provar a otimalidade no tempo imposto.\nOs gaps obtidos usando a Formulac\u00e3o MFL e os Procedimentos P-CSL e\n66\nP-WMTZ+Cl sao inferiores aos gaps obtidos usando as Formula\u00e7\u00f5es MTZL e WMTZL em todas as inst\u00e2ncias apresentadas na Tabela 3.17. Usando a Formula\u00e7ao MF obtem-se tempos de execu\u00e7\u00e3o mais elevados. Em inst\u00e2ncias de 60, 80 e 100 nodos, usando o Procedimento P-WMTZ+C obt\u00e1m-se tempos de execuc\u00e3o inferiores.\n3.4.4\tResultados Computacionais\nNa subsec\u00e7ao anterior verific\u00e1mos que, em geral, o Procedimento P-WMTZ+C \u00e1 o mais eficiente nos tr\u00e2s grupos de inst\u00e2ncias consideradas. Para este procedimento nas 215 instancias testadas, n\u00e3o foi poss\u00e1vel obter solu\u00e7ao inteira admiss\u00e1vel em 14 instancias, sendo 4 delas inst\u00e2ncias de 1000 nodos do grupo Quase Caminhos, 1 inst\u00e2ncia de 1000 nodos do grupo Aleat\u00f3rias e 9 inst\u00e2ncias de 500 e 1000 nodos do grupo Euclideanas.\nEm inst\u00e2ncias Quase Caminhos a partir de 100 nodos (exceto QC100-10) n\u00e3o \u00e1 poss\u00e1vel resolver as inst\u00e2ncias at\u00e1 provar a otimalidade, o que corresponde a 46,32% das inst\u00e2ncias (44 instancias em 95). Em relac\u00e3o \u00e0s instancias Aleatorias apenas n\u00e3o \u00e1 poss\u00e1vel provar a otimalidade em 3 inst\u00e2ncias de 1000 nodos (5% das inst\u00e2ncias) e por fim no grupo de insta\u00e2ncias Euclideanas na\u00e3o foi poss\u00e1vel provar a otimalidade em 25% das inst\u00e2ncias (15 instancias em 60), sendo elas inst\u00e2ncias com mais de 300 nodos.\nNa Tabela 3.18 apresentamos para os tr\u00eas grupos de inst\u00e2ncias os tempos m\u00e1dios, em segundos, e os respetivos desvios padr\u00e3oes obtidos com a aplica\u00e7c\u00e3ao do Procedimento P-WMTZ+C na obten\u00e7\u00e3o do valor \u00e1timo ou de um limite superior para o valor \u00e1timo. A primeira coluna cont\u00e1em o nu\u00e1mero de nodos das inst\u00e2ancias, as tr\u00e2es colunas seguintes apresentam os tempos m\u00e1edios, em segundos, necess\u00e1arios para a obten\u00e7c\u00e3ao do valor \u00e1otimo ou de um limite superior para o valor o\u00e1timo e as tr\u00e2es u\u00e1ltimas colunas cont\u00e2em os correspondentes desvios padro\u00e3es.\n67\n\tTempo Medio\t\tDesvio Padr\u00e3o\t\t\t\nN\u00bb Nodos\tQC\tR\tE\tQC\tR\tE\n10\t0,109\t0,187\t0,109\t0,042\t0,136\t0,211\n20\t1,350\t1,133\t0,893\t0,867\t0,625\t0,558\n40\t41,756\t4,134\t5,597\t29,749\t1,188\t1,213\n60\t517,422\t5,960\t12,358\t338,821\t1,188\t4,650\n80\t2535,656\t14,249\t41,115\t2095,439\t2,325\t13,012\n100\t10597,763\t20,683\t116,395\t646,021\t6,096\t34,540\n150\t10809,301\t95,072\t585,157\t3,413\t37,464\t181,108\n200\t10826,760\t310,588\t1905,269\t9,115\t222,722\t737,561\n300\t10931,065\t1566,215\t12368,562\t68,410\t866,040\t3070,597\n400\t11054,431\t2647,825\t23590,768\t159,831\t854,527\t5483,945\n500\t11307,302\t9225,342\t27611,014\t267,266\t2740,351\t7483,639\n1000\t13082,191\t17168,960\t31071,300\t823,942\t2724,852\t86,227\nTabela 3.18: Tempos m\u00e9dios, em segundos, e respetivos desvios padroes obtidos com a aplica\u00e7ao do Procedimento P-WMTZ+C na obtenc\u00e3o do valor otimo ou de um limite superior para o valor otimo em cada grupo de inst\u00e2ncias.\nNas inst\u00e2ncias de 10 e 20 nodos, os tempos m\u00e9dios de execu\u00e7\u00e3o obtidos com a aplica\u00e7\u00e3o do Procedimento P-WMTZ+C nos v\u00e9rios grupos de inst\u00e2ncias s\u00e3o semelhantes. Para inst\u00e2ncias com mais de 20 e menos de 300 nodos, verificamos que as inst\u00e2ncias Quase Caminhos s\u00e3o as que apresentam maior tempo m\u00e9dio na obten\u00e7\u00e3o do valor \u00e9timo ou de um limite superior para o valor \u00e9timo, depois temos as inst\u00e2ncias Euclideanas e por fim as inst\u00e2ncias Aleatorias. Nas inst\u00e2ncias de 300 ou mais nodos o comportamento dos tempos altera-se, sendo as inst\u00e2ncias Euclideanas as que que apresentam maior tempo m\u00e9dio de execuc\u00e3o.\nDado que atrav\u00e9s da observa\u00e7\u00e3o da Tabela 3.18 se verificou uma grande diferen\u00e7a nos tempos m\u00e9dios de execu\u00e7ao do Procedimento P-WMTZ+C (tempo de execuc\u00e3o da relaxa\u00e7ao linear + tempo de execu\u00e7\u00e3o do Algoritmo Branch and Bound) nos tr\u00eas grupos de inst\u00e2ncias em teste, decidimos analisar os tempos m\u00e9dios de execu\u00e7ao da relaxa\u00e7\u00e3o linear e os tempos m\u00e9dios de execu\u00e7ao do Algoritmo Branch and Bound nos v\u00e9rios grupos de inst\u00e2ncias. Com esta an\u00e9lise pretendemos averiguar se existem diferentes comportamentos a n\u00e9vel destes dois tempos m\u00e9dios. Para efetuar a an\u00e9lise elabor\u00e9mos os gr\u00e9ficos das Figuras 3.11, 3.12 e 3.13 para os grupos de inst\u00e2ncias Aleatorias, Euclideanas e Quase Caminhos para inst\u00e2ncias com mais de 40 nodos. Nestes gr\u00e9ficos encontram-se as percentagens de tempo m\u00e9dio obtidas com a execu\u00e7\u00e3o da relaxa\u00e7\u00e3o\n68\nlinear e as percentagens de tempo m\u00e9dio obtidas com a execu\u00e7\u00e3o do Algoritmo Branch and Bound. Estas duas percentagens distinguem-se nos gr\u00e9ficos por duas cores diferentes. Cada gr\u00e9fico cont\u00e9m ainda uma tabela onde se pode observar o tempo m\u00e9dio, em segundos, de execu\u00e7\u00e3o da relaxa\u00e7ao linear (Tempo PL) e o tempo m\u00e9dio, em segundos, de execu\u00e7\u00e3o do Algoritmo Branch and Bound (Tempo B&amp;B).\nInst\u00e2ncias R\n\u25a0\tTempo B&amp;B\t5.74\t13,68\t17,26\t67,63\t246,09\t1121,13\t2045,98\t5298,78\t5298,78\n\u25a0\tTempo PL\t0,22\t0,57\t3,42\t27,44\t64,50\t445,08\t601,85\t3926,57\t3926,57\nFigura 3.11: Compara\u00e7\u00e3o das percentagens de tempo m\u00e9dio de execu\u00e7\u00e3o (em segundos) da relaxa\u00e7\u00e3o linear e do Algoritmo Branch and Bound do Procedimento P-WMTZ+C em instancias R.\n69\nInst\u00e2ncias E\n\u25a0\tTempo B&amp;B\t10,10\t30,55\t77,59\t378,20\t1048,74\t6960,71\t17198,92 19212,04 20978,60\n\u25a0\tTempo PL\t2,26\t10,57\t38,81\t206,96\t856,53\t5407,86\t6391,85\t8398,97 10092,70\nFigura 3.12: Compara\u00e7\u00e3o das percentagens de tempo m\u00e9dio de execu\u00e7\u00e3o (em segundos) da relaxa\u00e7\u00e3o linear e do Algoritmo Branch and Bound do Procedimento P-WMTZ+C em inst\u00e2ncias E.\nInst\u00e2ncias QC\n\u25a0\tTempo B&amp;B 517,22\t2535,07 10596,60 10804,61 10813,50 10866,94 10929,46 11057,40 11988,70\n\u25a0\tTempoPL 0,20\t0,59\t1,16\t4,69\t13,26\t64,13\t124,97\t249,90 1093,49\nFigura 3.13: Compara\u00e7ao das percentagens de tempo m\u00e9dio de execu\u00e7\u00e3o (em segundos) da relaxa\u00e7\u00e3o linear e do Algoritmo Branch and Bound do Procedimento P-WMTZ+C em instancias QC.\n70\nPodemos observar que nos v\u00e9arios grupos de inst\u00eaancias existem dois comportamentos diferentes. Nas inst\u00eaancias Aleat\u00e9orias e Euclideanas os comportamentos dos tempos m\u00e9edios s\u00f5ao semelhantes. Em inst\u00eaancias de dimens\u00f5ao superior a 100 nodos, em m\u00e9edia, mais de 20% do tempo \u00e9 ocupado a resolver a relaxac\u00f5o linear e o restante do tempo na execuc\u00e7\u00f5ao do Algoritmo Branch and Bound para encontrar o valor otimo ou um limite superior para o valor otimo. Este comportamento n\u00f5ao se verifica no grupo de inst\u00eaancias Quase Caminhos, pois neste grupo de insta\u00eancias o valor da relaxa\u00e7c\u00f5ao linear e obtido rapidamente em compara\u00e7c\u00f5ao com o tempo de execu\u00e7c\u00f5ao do Algoritmo Branch and Bound para encontrar o valor otimo ou um limite superior para o valor otimo. Nas instancias Quase Caminhos mais de 90% do tempo medio de execu\u00e7\u00f5o e gasto no Algoritmo Branch and Bound. Notamos que a percentagem representada a azul nos graficos das Figuras 3.11 e 3.12 poderia ser maior, no caso de n\u00f5o ser introduzido um procedimento de interrupc\u00e7\u00f5ao da relaxac\u00e7\u00f5ao linear. Este procedimento consistiu em interromper a relaxa\u00e7c\u00f5ao linear quando o gap, em percentagem, entre duas soluc\u00e7\u00f5oes consecutivas for inferior a 0,000001, mais do que 20 vezes ou quando o limite de tempo na introdu\u00e7c\u00f5ao de cortes exceder 10000 segundos (limite imposto).\n3.4.5\tS \u00edntese dos Resultados Computacionais\nOs resultados computacionais mostram a seguinte rela\u00e7c\u00f5ao entre os valores obtidos na relaxa\u00e7ca\u00f5o linear\ntf(WMST)\nt\n<-WMTZ+Cl) = $(P-CSl) = ^(MFl) = tf(WEL) = ^(ESl)\nt\n$(MTZl) = ^(WMTZl )\nFigura 3.14: Rela\u00e7\u00e3o entre os valores obtidos pela relaxa\u00e7\u00e3o linear das diferentes formula\u00e7\u00f5es e procedimentos de introduc\u00e7\u00e3ao de cortes.\n71\nOs valores dos limites inferiores obtidos usando as Formulac\u00e3es MTZ e WMTZ encontram-se mais afastados do valor \u00e9otimo e os obtidos usando as Formulac\u00e7\u00e3oes ES, MF e WE e os Procedimentos P-CS e P-WMTZ+C encontram-se mais pr\u00e9ximos do valor \u00e9otimo.\nDe entre as duas Formula\u00e7c\u00e3oes MTZ e WMTZ a que, em geral, apresenta tempos m\u00e9edios de execu\u00e7ca\u00e3o da relaxa\u00e7c\u00e3ao linear inferiores \u00e9e a Formula\u00e7ca\u00e3o WMTZ.\nDe entre todas as formulac\u00e7\u00e3oes e procedimentos de introduc\u00e7\u00e3ao de cortes usando separa\u00e7ca\u00e3o, o Procedimento P-WMTZ+C \u00e9e o que apresenta os melhores resultados em termos de tempo de execu\u00e7c\u00e3ao da relaxa\u00e7c\u00e3ao linear e do Algoritmo Branch and Bound para todos os grupos de insta\u00e2ncias em teste.\nEm inst\u00e2ancias Aleat\u00e9orias e Euclideanas de maiores dimens\u00e3oes, a resoluc\u00e7\u00e3ao da re-laxa\u00e7c\u00e3ao linear torna-se lenta, enquanto que nas insta\u00e2ncias Quase Caminhos \u00e9e bastante r\u00e9apida.\n72\nCap\u00edtulo 4\nAlgoritmos Lagrangeanos\nNeste cap\u00edtulo vamos apresentar algoritmos baseados numa relaxa\u00e7\u00e3o Lagrangeana que determinam uma solu\u00e7c\u00e3ao aproximada para o Problema WMST. Este tipo de algoritmos sao muito comuns para o Problema do Caminho Mais Curto com Restri\u00e7\u00f5es de Peso (CSP - Constrained Shortest Path) [13, 33, 40, 41, 64, 65]. Notamos que a forma de resoluc\u00e7\u00e3ao atraves desta tecnica e muito semelhante para ambos os problemas CSP e WMST, de tal modo que e frequente nos artigos referentes ao CSP aparecer a observa\u00e7\u00e3o de que o mesmo pode ser aplicado ao Problema WMST. Neste cap\u00edtulo, para al\u00e1em de apresentarmos resultados computacionais para algoritmos adaptados do CSP para o WMST, apresentamos tr\u00eas novos algoritmos para o WMST e os respetivos resultados computacionais.\nO trabalho de Xue [65] descreve dois algoritmos: um para encontrar soluc\u00e3es aproximadas para o Problema CSP e outro para o Problema WMST. Os resultados computacionais para o primeiro algoritmo mostraram ser bastante bons, encontrando solu\u00e7\u00e3es \u00e1timas em mais de 80% dos casos e solu\u00e7\u00e3es pr\u00e1ximas das \u00e1timas nos restantes casos. N\u00e3ao s\u00e3ao apresentados quaisquer resultados computacionais para o algoritmo para o WMST. Os autores apenas manifestam o seu interesse em faz\u00eae-lo futuramente para grafos aleat\u00e1rios e comparar com solu\u00e7\u00e3es \u00f5timas obtidas usando o Algoritmo k Smallest Spanning Tree [16].\nNo artigo de Block e Gutin [13] podemos consultar um algoritmo aproximado bastante eficiente para problemas de Otimiza\u00e7\u00e3o Combinat\u00e1ria com dois par\u00eametros associados a elementos combinat\u00e1rios em geral. Embora o algoritmo n\u00e3o seja polinomial, o autor fornece algumas evid\u00eaencias te\u00e1oricas e pr\u00e1aticas que mostram que o algoritmo pode ser bastante r\u00e1apido em muitos casos.\nJuttner et al. [41] desenvolveram o Algoritmo LARAC (Lagrangean Relaxation\n73\nBased Agregated Cost) para resolver a relaxa\u00e7\u00e3o Lagrangeana proposta para o Problema CSP. Os autores aplicam uma aproximac\u00e3o alg\u00e1brica e estabelecem v\u00e1rios resultados relacionados com a estrutura de solu\u00e7c\u00e3oes \u00e1otimas da relaxac\u00e7\u00e3ao Lagrangeana. Juttner [40] provou a complexidade do Algoritmo LARAC. No artigo de Xiao et al. [64] foi apresentada a equival\u00e2ncia de certos algoritmos, simplesmente designados LARAC, os quais foram apresentados independentemente em alguns trabalhos anteriores [13, 33, 41]. Este artigo tamb\u00e1m apresenta um estudo alg\u00e1brico que estabelece diversas novas propriedades de solu\u00e7c\u00e3ao \u00e1otima e um novo algoritmo chamado LARAC-BIN baseado numa pesquisa bin\u00e1ria.\nYamada et al. [66] apresentam um algoritmo baseado numa relaxa\u00e7ao Lagrangeana para o Problema da Arvore de Suporte de Custo Maximo com Restri\u00e7\u00e3es de Peso, o qual \u00e1 semelhante ao Algoritmo LARAC-BIN descrito em [64] para o Problema CSP.\nAmado e Barcia [7] apresentam uma relaxa\u00e7\u00e3o para o Problema da Mochila Matroi-dal (Matroidal Knapsack), sendo casos especiais deste problema, o Problema Saco-mochila de Mu\u00e1ltipla Escolha e o Problema WMST, sendo este denominado pelos autores de Problema da Arvore de Suporte de um Grafo com uma Restri\u00e7\u00e3o de Capacidade.\nCom o objetivo de obter solucoes aproximadas para o Problema WMST, na Sec\u00e7\u00e3o 4.1 fazemos uma breve descri\u00e7\u00e3o da relaxa\u00e7\u00e3o Lagrangeana para o problema. Nas duas sec\u00e7c\u00e3oes seguintes (Sec\u00e7c\u00e3ao 4.2 e 4.3) descrevemos um algoritmo gen\u00e1erico baseado na relaxa\u00e7c\u00e3ao Lagrangeana, que denominamos de Algoritmo Lagrangeano Base para o Problema WMST, fazemos uma an\u00e1alise da complexidade e apresentamos a ideia geom\u00e1etrica do algoritmo. Este algoritmo descreve e uniformiza os passos comuns a todos os algoritmos e na Sec\u00e7ao 4.4 apresentamos v\u00e1rios algoritmos tendo todos como princ\u00e1pio o mesmo algoritmo base apresentado. Na Sec\u00e7\u00e3o 4.5 descrevemos algumas experi\u00e2encias computacionais realizadas e apresentamos os resultados computacionais, onde se efetua uma compara\u00e7c\u00e3ao entre os va\u00e1rios algoritmos, a n\u00e1vel de tempo e da qualidade das solu\u00e7c\u00e3oes aproximadas obtidas. Para finalizar o cap\u00e1tulo apresentamos uma s\u00e1ntese dos resultados computacionais obtidos.\n74\nNesta sec\u00e7\u00e3o, considera-se a aplica\u00e7\u00e3o da relaxa\u00e7\u00e3o Lagrangeana ao Problema WMST, sendo esta uma t\u00e9cnica cl\u00e1ssica usada como alternativa a relaxa\u00e7\u00e3o de Programa\u00e7\u00e3o Linear para calcular limites inferiores para o valor otimo e encontrar boas solu\u00e7\u00e3es para Problemas de Otimizac\u00e3o com Restric\u00e3es.\nPara obtermos a relaxac\u00e7\u00e3ao Lagrangeana da formula\u00e7c\u00e3ao gen\u00e9erica para o problema WMST que se encontra na parte introdut\u00e1ria do Cap\u00e9tulo 3, associamos um multiplicador de Lagrange A (A > 0) \u00e0 restri\u00e7ao de peso (3.3) e inclu\u00e9mos essa restric\u00e3o, a moda Lagrangeana, na funcao objetivo. Obtemos, deste modo o seguinte problema relaxado.\n(WMSTx) :\t\u2014 AW + min\t(cj + Awij')xij\ns.a. x G XT,\nonde x = (xj) G R|A| e XT descrevem o involucro convexo das solu\u00e7\u00f5es inteiras do Problema MST. Para todos os multiplicadores n\u00e3ao negativos A, as soluc\u00e7\u00e3oes com estrutura em \u00e1arvore para este problema relaxado da\u00e3o-nos limites inferiores para o valor o\u00e1timo, isto \u00e1e,\nV(WMSTX) &lt;\u00ea(WMST).\nO Problema relaxado WMSTx pode ser resolvido usando qualquer algoritmo polinomial conhecido para o Problema MST [6]. Se, para cada multiplicador A > 0, definirmos os valores ponderados pxj = Cj + Awij associados a cada arco (i,j) G A e Tpx for a correspondente \u00e1rvore de suporte ponderada m\u00e9nima com custo C(Tpx) e peso W(Tpx), entao a func\u00e3o Lagrangeana pode-se escrever do seguinte modo\nV(WMSTX) = \u2014 AW + P (Tpx),\nonde P(Tpx) = C(Tpx) + AW(Tpx). Seja Tx* a arvore correspondente \u00e0 soluc\u00e3o \u00e1tima do Problema WMST, com custo C(Tx*) e peso W(Tx*), ent\u00e3o consegue-se facilmente mostrar que o valor da relaxa\u00e7c\u00e3ao Lagrangeana \u00e1e um limite inferior para o valor \u00e1otimo, isto \u00e1e,\nti (WMSTx) = \u2014 AW + P (Tpx)\n&lt;\u2014 AW + P (Tx*)\n75\n= -AW + C (Ta* ) + AW (T\u00c0*)\n= C(T\u00c0*) + A(W(Ta*) - W)\n&lt;C (Ta* )\n= \u00ed(WMST ).\nPara obter o melhor limite inferior h\u00e1 que resolver o Problema Dual Lagrangeano, isto e, precisamos de maximizar a fun\u00e7ao $(WMSTa) para todo A > 0, ou seja,\ntf* := max tf (WMSTa)\ns.a. A > 0.\nSeja A* o valor de A que maximiza tf(WMSTA).\nDe seguida apresentam-se duas propriedades da funcao tf (WMSTa).\nLema 4.1.\nPara qualquer A > 0, dtf(WMSTA) = w(Ta)-W e um subgradiente de tf(WMSTA),\ndA\nonde a arvore de suporte Ta corresponde a solu\u00e7ao otima do problema relaxado WMSTa.\nLema 4.2.\nPara qualquer A > 0, tf(WMSTA) e\numa func\u00e3o linear por partes e concava.\nFigura 4.1: Representa\u00e7\u00e3o gr\u00e1fica de fi(WMSTx) em fun\u00e7\u00e3o do valor de A.\n76\nA cada \u00e1rvore de suporte T com custo C(T) e peso W(T), podemos fazer corresponder a fun\u00e7\u00e1o linear d(A) = C(T) + A(W(T) \u2014 W) com A > 0, a qual tem ordenada na origem C(T) e declive W(T) \u2014 W. Quando obtemos uma arvore n\u00e3o admiss\u00edvel, temos que W(T) > W, o que corresponde a um declive positivo. No caso da \u00e1rvore ser admiss\u00edvel, entao W(T) &lt;W, ou seja, W(T) \u2014 W &lt;0, o que corresponde a um declive negativo ou nulo. O gr\u00e1fico da Figura 4.1, representa o inv\u00e1lucro superior de todas as retas correspondentes a todas as \u00e1rvores de suporte do grafo G. Podemos observar que a func\u00e3o fi\u00c7WMSTx) \u00e1 linear por partes e concava.\nA relaxac\u00e3o Lagrangeana pode ser resolvida, na grande maioria das vezes, usando o M\u00e9todo do Subgradiente [59]. Este m\u00e9todo come\u00e7a por inicializar o multiplicador de Lagrange, Ao. Depois, iterativamente, resolve o Problema relaxado WMST\\k, atualiza, em cada iteracao o multiplicador de Lagrange para Ak+i = max{0, Ak + skdk} usando a dire\u00e7\u00e3o dk e o tamanho do passo sk e finalmente verifica se o crit\u00e1rio de paragem \u00e1 satisfeito.\nUma escolha apropriada para a dire\u00e7ao dk e para o tamanho do passo sk produz um m\u00e1etodo convergente.\nPara a dire\u00e7\u00e3o dk podemos usar as ideias de Held, Wolfe e Crowder [36]\ndk =\t\u2014 W.\n(w)eA\nComo \u00e0 soluc\u00e3o xk = (xj) do problema relaxado WMST\\k, corresponde a arvore de suporte Tpxk, temos que ^2(ij)eA wijxkj \u00e1 o peso dessa arvore. Assim, temos que\ndk = W A) \u2014 W.\nPodemos usar o tamanho do passo sk de acordo com [59]\n=\tC (Tw) \u2014 &amp;(WMSTXk)\nSk\tP (E(i,j)eA wijxkj \u2014 W)dk \u2019\n= C (Tw) \u2014 P (Tpxk) + Ak W\nSk = P\t(W (TpAk) \u2014 W )dk\t.\n77\nAssim, em cada iteracao atualiza-se o multiplicador Ak e definem-se os valores ponderados = Cij + AkWij associados a cada arco (i, j) G A e obt\u00edm-se uma arvore de\nsuporte ponderada m\u00ednima TPXk\ncom valor ponderado P (Tpxk) = C (Tpxk) + Ak W (Tpxk).\n4.2\tAlgoritmo Lagrangeano Base\nEsta abordagem algor\u00edtmica determina sucessivamente \u00e1rvores de suporte at\u00e9 encontrar o melhor valor da variavel dual Lagrangeana A. O objetivo do algoritmo \u00e9 procurar melhores solu\u00e7\u00f5es admiss\u00edveis do que a correspondente solu\u00e7ao da \u00e1rvore Tw usando combina\u00e7\u00f5es lineares do custo e do peso das solu\u00e7\u00f5es das \u00e1rvores Tc e Tw. As sucessivas \u00e1rvores de suporte obtidas podem ser admiss\u00edveis ou n\u00f5o admiss\u00edveis. No caso da \u00edrvore obtida ser admiss\u00edvel atualiza-se o valor do limite superior (LS) para o custo, caso contrario, atualiza-se o valor do limite inferior (LI) para o custo.\nApresentamos de seguida, em forma esquematizada, o Algoritmo Lagrangeano Base (ALagB) para o Problema WMST.\nAlgoritmo Lagrangeano Base (ALagB) para o Problema WMST\nPasso 1: Inicializa\u00e7\u00f5es\nPasso 1.1: Obter um limite inferi\u00f5r\nObter a \u00edrvore de suporte de custo m\u00ednimo Tc = (V, ATc).\nSe W(Tc) &lt;W, entao\nTc \u00ed a arvore correspondente a solucao \u00edtima. STOP.\nCaso contrario,\nT = Tc.\nCalcular C(Ts).\nPasso 1.2: Inicializar \u00f5 interval\u00f5 (quand\u00f5 aplicavel)\nInicializar o intervalo [l0,u0] e a \u00edrvore Tlo = Tc (obtida no Passo 1.1).\nCalcular os valores ponderados pij = u0 wij + cij para cada arco (i, j) G A.\n78\nObter a \u00e1rvore de suporte ponderada m\u00ednima Tuo = (V, At ).\nSe W(Tuo) > W, entao\nn\u00e3o existe soluc\u00e3o, STOP.\nCaso contr\u00e9ario,\nT = T\nCalcular C(Ta) e P(Ta) e ir para o Passo 2.\nPasso 1.3: Obter um limite superior\nObter a \u00e1rvore de suporte de peso m\u00ednimo Tw = (V, ATw).\nSe W(Tw) > W, entao\nn\u00e3ao existe solu\u00e7ca\u00e3o, STOP.\nCaso contra\u00e9rio,\nCalcular C(Ta) e P(Ta).\nPasso 2: Obter uma nova \u00e1rvore\nCalcular os valores ponderados pij = awij + bcj para cada arco (i, j) G A.\nObter a arvore de suporte ponderada m\u00ednima Tp = (V, ATp) e calcular C(Tp), W(Tp) e P(Tp).\nPasso 3: Atualiza\u00e7\u00e3o de limites\nSe W(Tp) &lt;W, entao\natualizar o LS, isto \u00e9, se C(Tp) &lt;C(Ta) substituir Ta por Tp.\nCaso contr\u00e9rio,\natualizar o LI, isto \u00e9, se C(Tp) > C(Tp) substituir Tp por Tp.\nPasso 4: Crit\u00e1rio de paragem\nSe |P(Ta) \u2014 P(Tp)| &lt;tol, entao\nTa \u00e9 a arvore correspondente \u00e0 soluc\u00e3o aproximada, STOP.\nCaso contr\u00e9ario,\nir para o Passo 2.\n79\nNo Passo 1.1 \u00e9 obtida a \u00e1rvore de suporte de custo m\u00ednimo Tc. Se esta n\u00e3o verificar a restri\u00e7c\u00e3ao de peso, ent\u00e3ao foi encontrado um limite inferior para o valor do custo e T/i = Tc. No caso de verifica\u00e7\u00e3o da restricao de peso significa que foi encontrada a solu\u00e7\u00e3o \u00e9tima e o algoritmo termina. No Passo 1.3 \u00e9 obtida a arvore de suporte de peso m\u00ednimo, Tw. Se esta n\u00e3o verificar a restricao de peso, entao n\u00e3o existe solucao e o algoritmo termina. Caso a restri\u00e7\u00e3o de peso seja verificada, ent\u00e3o foi encontrado um limite superior para o valor do custo e Ta = Tw.\nO Passo 1.2 s\u00e1 \u00e9 aplic\u00e1vel quando os limites inferior e superior forem inicializados tendo em conta o intervalo [l0,u0], onde a arvore correspondente a l0 \u00e9 a \u00e1rvore de suporte de custo m\u00e9nimo (Tlo = Tc) obtida no Passo 1.1 e para obter a \u00e9rvore de suporte correspondente a u0 \u00e9 necess\u00e9rio calcular os valores ponderados pij = u0 Wj + Cij, para cada arco (i,j) G A, o parametro u0 depende do algoritmo utilizado e sera definido na pr\u00e9xima seccao. Se a \u00e9rvore de suporte ponderada m\u00e9nima Tuo verificar a restricao de peso \u00e9 obtido um limite superior para o valor do custo e Ta = Tuo e neste caso vamos para o Passo 2. Caso contr\u00e9ario, n\u00e3ao existe solu\u00e7c\u00e3ao para o Problema WMST e o algoritmo termina.\nNo Passo 2 s\u00e3o determinados os valores ponderados pij = awij + bcj para cada arco (i,j) G A e \u00e9 obtida a arvore de suporte ponderada m\u00e9nima Tp. Os valores dos par\u00e1metros a e b que utilizamos para definir os valores ponderados pij vao depender do algoritmo utilizado e serao definidos na pr\u00e9xima sec\u00e7\u00e3o. No Passo 3 atualizam-se os limites, isto \u00e9, no caso da restri\u00e7\u00e3o de peso ser verificada e o custo da \u00e9rvore Tp nao ser superior ao custo da \u00e9rvore Ta, atualizamos o valor do limite superior e subtitu\u00e9mos Ta por Tp. Caso a restric\u00e3o de peso seja violada e o custo da \u00e9rvore Tp n\u00e3o seja inferior ao custo da \u00e9rvore Tp, atualizamos o valor do limite inferior e subtitu\u00e9mos Tp por Tp. Os Passos 2 e 3 s\u00e3o executados at\u00e9 que se verifique |P(Ta) \u2014 P(Tp)| &lt;tol, e quando tal acontece o algoritmo termina, sendo Ta a \u00e9rvore correspondente a solucao aproximada.\nA complexidade do Algoritmo ALagB depende do algoritmo utilizado para a ob-tenc\u00e7\u00e3ao das sucessivas \u00e9arvores de suporte e do nu\u00e9mero de \u00e9arvores que \u00e9e poss\u00e9vel determinar.\nQuanto ao algoritmo que determina as \u00e9rvores de suporte, a sua complexidade \u00e9 O(p(m,n)) [5], onde a fun\u00e7ao&lt;p(m,n) = mlog(n) depende de duas variaveis, sendo elas o numero de arestas m = |E| e o numero de nodos n = |V| do grafo G = (V, E). No Passo 1 do Algoritmo ALagB, s\u00e3ao obtidas duas \u00e9arvores e para a obten\u00e7ca\u00e3o de cada\n80\numa delas usamos um algoritmo que efetua O(^(m, n)) opera\u00e7\u00f5es.\nSe K for o numero total de arvores de suporte que se podem formar no grafo G, ent\u00f5o o algoritmo vai terminar ao fim de O(log(K)) itera\u00e7\u00f5es, pois o numero de arvores de suporte a determinar no pior dos casos e proporcional a K. Portanto, os Passos 2, 3 e 4 do algoritmo obt\u00eam-se fazendo O(log(K)) x O(^(m,n)) opera\u00e7\u00f5es. Logo, no Algoritmo ALagB para obter os valores dos limites inferior e superior sao necessarias O(log(K) p(m,n)) opera\u00e7\u00f5es.\n4.3\tComportamento Geom\u00e9trico do Algoritmo La-grangeano Base para o Problema WMST\nPara estudar o comportamento geometrico do algoritmo descrito na sec\u00e7c\u00f5ao anterior consideramos um sistema de coordenadas cartesianas, onde o eixo horizontal representa os pesos e o eixo vertical os custos. Os pesos e os custos das arvores Tc e Tw podem ser representados como pontos com coordenadas A = (W(Tc),C(Tc)) e B = (W(Tw), C(Tw)) (ver Figura 4.2). A equa\u00e7ao da reta AB \u00e9 da forma aW + bC = d, onde a = C(Tw) - C(Tc), b = W(Tc) - W(Tw) e d = W(Tc)C(Tw) - W(Tw)C(Tc).\nFigura 4.2: Representa\u00e7\u00e3o geom\u00e9trica dos pesos e dos custos das \u00e1rvores Tc e Tw.\nComo existe a restri\u00e7\u00f5o de peso, temos que introduzir na figura anterior a reta de equac\u00f5o w = W (apresentada a vermelho nas Figuras 4.3, 4.4 e 4.5). Dessa introdu\u00e7\u00f5o\n81\npodem ocorrer tr\u00eas situa\u00e7\u00f5es:\n\u2022 A primeira situa\u00e7\u00e3o ocorre quando a \u00e1rvore Tw n\u00e3o satisfaz a restri\u00e7\u00e3o de peso e ent\u00e3o nao ha solu\u00e7\u00e3o para o Problema WMST (Figura 4.3).\nFigura 4.3: Representa\u00e7\u00e3o geom\u00e9trica dos pesos e dos custos das \u00e1rvores Tc e Tw e da reta w = W com W (Tw) > W.\nNote-se que no caso de nao existir nenhuma \u00e1rvore com custo inferior a C(Tw) e W(Tw) = W, entao Tw \u00e1 a arvore correspondente \u00e0 solu\u00e7ao \u00e1tima.\n\u2022 A segunda situa\u00e7ao ocorre quando a \u00e1rvore Tc satisfaz a restri\u00e7ao de peso e entao conclu\u00edmos que Tc \u00e1 a \u00e1rvore correspondente \u00e0 solu\u00e7ao otima (Figura 4.4).\n82\nFigura 4.4: Representa\u00e7\u00e3o geom\u00e9trica dos pesos e dos custos das \u00e1rvores Tc e Tw e da reta w = W com W(Tc) &lt;W.\n\u2022 A terceira e Ultima situa\u00e7\u00e3o ocorre quando n\u00e3o se verificam as condi\u00e7\u00f5es anteriores (ver Figura 4.5). Nesta situa\u00e7\u00e3o pretendemos obter uma arvore de suporte cujo valor de custo se aproxime do valor otimo. Para a obter associamos novos valores Pij a cada arco (i,j) G A e obtemos uma \u00e1rvore de suporte ponderada m\u00ednima Tp = (V,ATp), onde W(Tw) &lt;W(Tp) &lt;W(Tc) e C(Tc) &lt;C(Tp) &lt;C(Tw).\nFigura 4.5: Representa\u00e7\u00e3o geom\u00e1trica dos pesos e dos custos das \u00e1rvores Tc e Tw e da reta w = W, onde W(Tw) &lt;W &lt;W(Tc).\n83\nSe o ponto (W(Tp), C(Tp)) correspondente a arvore Tp pertence \u00e0 reta AB, ent\u00f5o isso significa que encontr\u00e9mos a solu\u00e7ao aproximada, que corresponde \u00e0 \u00e9rvore Tp se esta for uma \u00e9rvore admiss\u00e9vel, isto \u00e9, W(Tp) &lt;W.\nSe o ponto (W(Tp),C(Tp)) correspondente a \u00e9rvore Tp n\u00f5o pertence a reta AB e a \u00e9rvore Tp for admiss\u00edvel, entao substitu\u00e9mos Tw por Tp e obtemos um novo valor para o limite superior, caso contrario substitu\u00e9mos Tc por Tp e atualizamos o valor do limite inferior. Ap\u00e9os termos atualizado um dos limites, repetimos o Passo 2 do Algoritmo ALagB, ou seja, voltamos a obter uma nova arvore de suporte ponderada m\u00e9nima Tp.\nSaliente-se que as sucessivas \u00e9arvores Tw que designamos no Algoritmo ALagB por Ta sao sempre arvores admiss\u00e9veis, enquanto que as arvores Tc, que designamos no Algoritmo ALagB por Tp, sao sempre arvores nao admiss\u00e9veis.\nRecordamos que o objetivo \u00e9 encontrar solu\u00e7\u00f5es admiss\u00e9veis com custo inferior ao da \u00e9rvore Tw.\n4.4\tDefini\u00e7c\u00e3ao dos Valores Ponderados Utilizados no Algoritmo Lagrangeano Base para o Problema WMST\nNo Algoritmo ALagB os valores ponderados definidos no Passo 2 s\u00f5o da seguinte forma:\nPij awij + bcij\npara cada arco (i, j) E A. Consoante os valores atribu\u00eddos aos par\u00e2metros a e b assim vamos obter diferentes algoritmos. De seguida, discutimos diferentes formas de obtenc\u00e7\u00f5ao dos valores ponderados.\n84\nAlgoritmo Lagrangeano 1 (Algl)\nNeste algoritmo consideramos que os valores ponderados pij ((i,j) G A) sao caracterizados por associar o parametro a =1 \u2014 Yk para os pesos e o parametro b = Yk para os custos segundo o artigo [65], ou seja,\npij\t(1\tYk )wij + Yk Cij\nonde, o parametro Yk G [0,1] \u00e9 obtido da seguinte forma:\nW (Tp) \u2014 W (Ta)\nC(Ta) \u2014 C(Tp) + W(Tp) \u2014 W(Ta) \u2019 Ya + Yb\nse a iteracao k for \u00e9mpar\nse a iteracao k for par.\nNeste algoritmo o Passo 1.2 n\u00e3o \u00e1 necess\u00e1rio. Os valores de Ya e Yb sao inicializados a 0 e 1 respetivamente. Estes valores sao atualizados no Passo 3. O valor de Ya \u00e1 atualizado para Yk quando a arvore Tp obtida verifica a restric\u00e3o de peso. O valor de Yb \u00e1 atualizado para Yk quando a \u00e1rvore Tp obtida n\u00e3o verifica a restri\u00e7ao de peso.\nDe seguida, apresenta-se uma descri\u00e7c\u00e3ao do Passo 3 para este algoritmo cuja al-tera\u00e7c\u00e3ao \u00e1e apenas a atualiza\u00e7c\u00e3ao dos valores Ya e Yb.\nPasso 3: Atualiza\u00e7\u00e3o de limites\nSe W(Tp) &lt;W, ent\u00e3o\natualizar Ya := Yk;\natualizar o LS, isto \u00e9, se C(Tp) &lt;C(Ta) substituir Ta por Tp.\nCaso contr\u00e9rio,\natualizar Yb := Yk;\natualizar o LI, isto \u00e9, se C(Tp) > C(Tp) substituir Tp por Tp.\nEm particular, quando Yk = 1, Tp corresponde a Tc da MST, e quando Yk = 0, Tp corresponde a Tw da MSTW. A ideia deste algoritmo \u00e9 encontrar um intervalo, o mais pequeno poss\u00edvel [Ya, Yb] C [0,1], tal que o peso da arvore Ta e menor ou igual a W e o custo da arvore correspondente \u00e0 solu\u00e7\u00e3o \u00e9tima esteja entre o custo da arvore Tp e\n85\no da arvore Ta. Os valores 7a e u, ser\u00e2o obtidos usando o M\u00e9todo da Bissec\u00e7\u00e3o nas itera\u00e7\u00f5es pares.\nTendo em conta que os valores de P(Ta) e P(Tg) se aproximam, ent\u00e3o temos,\n.C /\u25a0. + (1 - 7fc)W /\u25a0. = 7fcC(Tg) + (1 - 7fc)W(Tg)\no que \u00e9 equivalente a ter,\n1 - 7k \t C(Ta ) - C (Tg )\n.\tW(Tg) - W(Ta)'\nAssim, o valor de Ak obtido nas sucessivas relaxacoes Lagrangeanas \u00e9 dado por:\nAk \u2014\n1 - 7fe\n7k\nPara exemplificarmos os v\u00e9rios algoritmos propostos ao longo desta secc\u00e3o vamos considerar o Exemplo 2.1.\nExemplo 4.1.\nNa seguinte tabela sumariamos os resultados da aplica\u00e7\u00e3o do Algoritmo Alg1 para o Exemplo 2.1.\nc T)\tW (Tg )\tC (Ta)\tW (Ta)\tYa\tYb\tYk\tC (Tp)\tW (Tp)\tP (Ta)\tP (Tp)\ttf(Ak)\n17\t27\t70\t11\t0\t1\t0,5\t19\t24\t40,5\t21,5\t23\n19\t24\t70\t11\t0\t0,5\t0,203\t41\t13\t22,984\t18,688\t13,538\n19\t24\t41\t13\t0,203\t0,5\t0,352\t27\t19\t22,844\t21,813\t25,156\n19\t24\t27\t19\t0,352\t0,5\t0,385\t27\t19\t22,077\t22,077\t25,4\nTabela 4.1: Resultados da aplica\u00e7\u00e3o do Algoritmo Algl para o exemplo de 5 nodos.\nA primeira coluna d\u00e9a-nos os sucessivos valores dos limites inferiores obtidos para o valor do custo e a terceira coluna d\u00e9a-nos os sucessivos valores dos limites superiores obtidos para o valor do custo. Os custos e os pesos das \u00e9arvores de suporte que s\u00e3ao, sucessivamente, atualizadas encontram-se a negrito na tabela. O algoritmo usa 4\n86\nitera\u00e7\u00f5es do Passo 2 para obter a solu\u00e7ao otima com custo 27 e peso 19. A arvore Ta e atualizada duas vezes, enquanto que a arvore Tp e atualizada uma so vez. O valor obtido atraves da relaxa\u00e7\u00e3o Lagrangeana e de 25,4.\nAlgoritmo Lagrangeano 2 (Alg2)\nNos algoritmos descritos em [13, 64] aplicados ao problema do caminho mais curto com restricoes de peso, os valores ponderados de cada arco (i,j) E A s\u00f5o obtidos das seguintes formas:\nPij\tawij + bcij ou Pij\tAwij + cij\na\nonde a = C(Ta) \u2014 C(T,), b = W(T,) \u2014 W(Ta) e A =\t. Podemos ver em [64] que\nestes valores ponderados s\u00f5ao equivalentes. Nesta tese, para descrever um algoritmo aproximado para o Problema WMST vamos associar o par\u00e2metro a = Ak aos pesos e b =1 aos custos,\npij\tAkwij + cij,\nonde Ak =\nC (Ta) \u2014 cT ) W (T,) \u2014 W (Ta)\ne k designa o numero da iterac\u00f5o.\nExemplo 4.2.\nNa seguinte tabela sumariamos os resultados da aplica\u00e7\u00e3o do Algoritmo Alg2 para o Exemplo 2.1.\nc (Tp)\tW (Tp)\tC (Ta)\tW (Ta)\tr\u00e2\tC (Tp)\tW (Tp)\tP (Ta)\tP (Tp)\t\n17\t27\t70\t11\t3,313\t41\t13\t106,438\t84,063\t17,813\n17\t27\t41\t13\t1,714\t27\t19\t63,286\t59,571\t25,286\n17\t27\t27\t19\t1,25\t19\t24\t50,75\t49\t24\n19\t24\t27\t19\t1,6\t27\t19\t57,4\t57,4\t25,4\nTabela 4.2: Resultados da aplica\u00e7ao do Algoritmo Alg2 para o exemplo de 5 nodos.\n87\nA primeira coluna d\u00e9-nos os sucessivos valores dos limites inferiores obtidos para o valor do custo e a terceira coluna d\u00e9-nos os sucessivos valores dos limites superiores obtidos para o valor do custo. Os custos e os pesos das arvores de suporte que s\u00e3o, sucessivamente, atualizadas encontram-se a negrito na tabela. O algoritmo usa 4 itera\u00e7oes do Passo 2 para obter a solu\u00e7ao \u00e9tima com custo 27 e peso 19. A \u00e9rvore Ta \u00e9 atualizada duas vezes, enquanto que a arvore Tp \u00e9 atualizada uma s\u00e9 vez. O valor obtido atrav\u00e9s da relaxac\u00e3o Lagrangeana \u00e9 de 25,4.\nAlgoritmo Lagrangeano 3 (Alg3)\nNeste algoritmo os valores ponderados de cada arco (i,j) G A s\u00e3o obtidos como descritos na Seccao 4.1, ou seja, os par\u00e2metros a e b s\u00e3o obtidos como no algoritmo\nanterior, sendo\tpij\tAkwij + cij,\nonde o multiplicador Xk \u00e9 obtido tal como descrito no M\u00e9todo do Subgradiente.\nO Metodo do Subgradiente \u00e9 uma generaliza\u00e7\u00e3o do Metodo dos Gradientes, no qual o gradiente da fun\u00e7\u00e3o \u00e9 substitu\u00e9do por um subgradiente para obter uma nova dire\u00e7\u00e3o de busca.\nM\u00e9todo do Subgradiente\nPasso 1: Inicializar o multiplicador de Lagrange\nSeja Aq \u2014\nC(Ta) - CT) W T) - W\nPasso 2: Resolver iterativamente o problema relaxado WMSTxk\nObter a arvore de suporte Tpxk tal que d(WMSTxk) = \u2014 AkW + P(Tpxk), onde\nAk\n= max\n0, Ak-1 + P\nC(Ta) - P(TpX\u2014) + A-W W(TpXk-i) - W\n\u2022 Na dire\u00e7ao usar as ideias de Held, Wolfe e Crowder [36]\ndk \u2014 W (Tpxk) - W.\n88\nC(Ta) - P(Tpxk) + XkW\nSk = P--;---;---;-----;----- com\nk 1\t(W(TpXk) - W)dk\n0 &lt;p &lt;2.\nPasso 4: Crit\u00e9rio de paragem\nDefinido no Passo 4 do Algoritmo ALagB para o Problema WMST apresentado na Sec\u00e7\u00e3o 4.2.\nNo Cap\u00edtulo 3 us\u00e1mos varias formula\u00e7\u00e3es para encontrar o valor da relaxa\u00e7\u00e3o linear e para resolver o Problema WMST. A principal vantagem de utilizar o M\u00e9todo do Subgradiente para obter o valor da relaxa\u00e7ao Lagrangeana comparando com a relaxa\u00e7\u00e3o linear usando as formulacoes \u00e9 a rapidez em termos de tempo computacional. A grande desvantagem reside na escolha do valor de p, a qual pode tornar o metodo mais lento e tamb\u00e9m piorar a qualidade do limite inferior obtido.\nExemplo 4.3.\nNa seguinte tabela sumariamos os resultados da aplicac\u00e3o do Algoritmo Alg3 para o Exemplo 2.1 para diferentes valores de p.\np\tItera\u00e7\u00e3es\tN.Q Atualizac\u00e3es Tc\tN.Q Atualizacoes Tw\tA\ttf(A)\n0,9\t4\t1\t2\t3,086\t19,4\n0,8\t4\t1\t2\t2,743\t21,8\n0,7\t9\t4\t4\t1,700\t25,3\n0,6\t7\t3\t3\t2,649\t22,406\n0,5\t7\t3\t3\t1,679\t25,321\n0,49\t7\t3\t3\t1,662\t25,338\n0,48\t7\t3\t3\t1,645\t25,355\n0,47\t6\t2\t3\t2,258\t23,969\nTabela 4.3: Resultados da relaxa\u00e7\u00e3o Lagrangeana aplicando o Algoritmo Alg3 para diferentes valores de p.\nNo Algoritmo Alg3 foram utilizados varios valores de p (Tabela 4.3). Neste exemplo, para valores de p pr\u00e9ximos de 0,48 o valor da relaxa\u00e7\u00e3o Lagrangeana aproxima-se do\n89\nvalor da relaxac\u00e7\u00f5ao linear (25,355 &lt;25,4). Foram necess\u00e9arias seis iterac\u00e7\u00f5oes do Passo 2 para obter a soluc\u00f5o \u00e9tima com custo 27 e peso 19. As arvores Ta e Tp s\u00f5o atualizadas tr\u00eaes vezes cada uma.\nAlgoritmo Lagrangeano 4 (Alg4)\nNeste algoritmo para encontrar o valor do A \u00e9timo usamos a ideia da t\u00e9cnica de pesquisa bin\u00e9ria, apresentada em [64] para reduzir o intervalo [l0 ,u0]. Os valores ponderados s\u00f5ao obtidos da mesma forma que nos Algoritmos Alg2 e Alg3, isto \u00e9e,\nPij\t^kWij + Cij.\nonde Ak itera\u00e7\u00e3o.\nlk + uk\n2\nou seja, Ak \u00e9 o ponto m\u00e9dio entre lk e uk, sendo k o numero da\nC (T ) _ C(T ) No Passo 1.2 o intervalo [l0, u0] \u00e9 inicializado fazendo l0 = 0 e u0 = \u2014\u2014'\u2014TTr/rT, . .\nW _ W (Ta )\nO valor uk \u00e9 atualizado no Passo 3 quando a restri\u00e7ao de peso for verificada e lk \u00e9\natualizado caso a restri\u00e7\u00e3o de peso n\u00e3o seja verificada.\nDe seguida apresentamos a descri\u00e7\u00e3o do Passo 3 para este algoritmo cuja Unica alteracao \u00e9 na atualiza\u00e7ao dos limites inferior e superior do intervalo [lk\t].\nPasso 3: Atualiza\u00e7\u00e3o de limites\nSe W(Tp) &lt;W, entao\natualizar o limite superior do intervalo uk := Ak;\natualizar o LS, isto e, se C(Tp) &lt;C(Ta) substituir Ta por Tp.\nCaso contrario,\natualizar o limite inferior do intervalo lk := Ak;\natualizar o LI, isto e, se C(Tp) > C(Tp) subtituir Tp por Tp.\nNo artigo de Yamada et al. [66] e apresentado um algoritmo semelhante a este, mas para o Problema da Arvore de Suporte de Custo Maximo com Restric\u00e7\u00f5oes de Peso,\n90\nde paragem. Ao adaptar esse algoritmo para o Problema WMST ficamos com\ndtf(WMST\u00c3) dA\n\u2022 a inicializacao do limite superior do intervalo u0 = \u2014\n7\n\u2022 o criterio de paragem utilizado \u00e9 |uk \u2014 | &lt;tol em vez de |P(Ta) \u2014 P(Tp)| &lt;tol.\nExemplo 4.4.\nNa seguinte tabela sumariamos os resultados da aplica\u00e7ao do Algoritmo Alg4 para o Exemplo 2.1.\nc T)\tW T)\tC (Ta)\tW (Ta)\tlk\tuk\tAk\tC (Tp)\tW (Tp)\tP (Ta)\tP (Tp)\t^(Ak)\n17\t27\t70\t11\t0\t5,889\t2,944\t41\t13\t102,389\t79,278\t20,389\n17\t27\t41\t13\t0\t2,944\t1,472\t19\t24\t60,139\t54,333\t24,889\n19\t24\t41\t13\t1,472\t2,944\t2,208\t33\t16\t69,708\t68,333\t24,167\n19\t24\t33\t16\t1,472\t2,208\t1,84\t27\t19\t62,444\t61,965\t25,160\n19\t24\t27\t19\t1,472\t1,84\t1,655\t27\t19\t58,469\t58,469\t25,344\nTabela 4.4: Resultados da aplica\u00e7\u00e3o do Algoritmo Alg4 para o exemplo de 5 nodos.\nA primeira coluna da-nos os sucessivos valores dos limites inferiores obtidos para o valor do custo e a terceira coluna da-nos os sucessivos valores dos limites superiores obtidos para o valor do custo. Os custos e os pesos das arvores de suporte que s\u00e3o,\nsucessivamente, atualizadas encontram-se a negrito na tabela. Para este exemplo, o C (T ) \u2014 C (T)\nAlgoritmo Alg4 usando a inicializac\u00e3o l0 = 0 e u0 = W w(T ) ~ 5,8889 usa cinco iterac\u00e3es do Passo 2 para obter a solu\u00e7\u00e3o \u00f5tima com custo 27 e peso 19. A\narvore Ta e atualizada tr\u00eas vezes, enquanto que, a arvore T$ e atualizada uma s\u00f5 vez. O valor obtido pela relaxa\u00e7\u00e3o Lagrangeana esta pr\u00f5ximo do valor da relaxa\u00e7\u00e3o linear (25,344 &lt;25,4).\nSe usarmos a inicializa\u00e7\u00f5o proposta em [66] e adaptada para o Problema WMST,\ndtf(WMST\u00c3)\tM . , . ,\t,\nisto e, u0 =--------------= 9 e o criterio de paragem |uk\u2014lk | &lt;0,001, sao necessarias\ndA\ncatorze itera\u00e7\u00f5es do Passo 2 para obter a solu\u00e7ao otima com custo 27 e peso 19. A\narvore Ta e atualizada nove vezes, enquanto que, a arvore Ts e atualizada cinco vezes. O valor obtido pela relaxa\u00e7\u00e3o Lagrangeana esta muito pr\u00f5ximo do valor da relaxa\u00e7\u00e3o linear (25,3998 &lt;25,4).\n91\nAlgoritmo Lagrangeano 5 (Alg5)\nO algoritmo que apresentamos de seguida e baseado no artigo de Amado e Barcia [7]. Este algoritmo inicializa o intervalo [l0,u0] fazendo l0 = 0 e u0 = U, onde U := max(i,j)eA {cij,wij}, ou seja, o maximo valor entre os custos e os pesos associados a todos os arcos (i,j) G A do grafo G.\nIterativamente o intervalo [lk ,uk] e reduzido ate que uk \u2014 lk\te, consequente-\nu2 l mente, \u00e9 identificada a solu\u00e7ao otima no intervalo reduzido. Fazendo a = Ak = k\tUk\ne b = 1 o intervalo reduzido e obtido por comparac\u00e3o dos valores de \u00e3(WMSTlk), d(WMSTXk) e d(WMSTUk). Para simplificar a nota\u00e7ao iremos usar d(lk), d(Ak) e d(uk) em vez de \u00e3(WMST\u00edk), \u00e3(WMSTXk) e \u00e3(W M STUk), respetivamente.\nInicialmente d(l0) = C(Tlo) = C(Tc), que corresponde ao custo da \u00e1rvore de suporte de custo m\u00ednimo obtido no Passo 1.1 e o valor de d(u0) \u00e1 obtido usando a \u00e1rvore de suporte TU0 de valor ponderado m\u00ednimo P(TU0) (Passo 1.2). Comparando com o Algoritmo ALagB, o Passo 1.3 pode ser omitido e os Passos 3 e 4 ir\u00e3o sofrer modifica\u00e7\u00e3es que passamos a descrever de seguida.\nPasso 3: Atualiza\u00e7\u00e3o de limites\nSe d(Ak) > max {\u00e3(lk),\u00e3(uk)}, ent\u00e3o\ncalcular Ak :=\nlk + Ak\n2\ne Ak :=\nAk + uk\ne obter \u20220(Ak) e \u00e3(Abk).\n2\nSe \u00e3(A<k) > \u00e3(Ak), entao\natualizar o limite superior do intervalo uk := Ak e Ak := Ak;\natualizar o LS, isto \u00e1, se C(TXk) &lt;C(Tuk) substituir Tuk por TXk.\nCaso contrario,\nse \u00e3(Abk) > \u00e3(Ak), entao\natualizar o limite inferior do intervalo lk := Ak e Ak := Abk;\natualizar o LI, isto e, se C(Tlk) &lt;C(TXk) substituir Tlk por TXk.\nCaso contrario,\natualizar ambos os limites do intervalo lk := Ak e uk := Abk;\natualizar o LS, isto e, se C(TXk) &lt;C(Tuk) substituir Tuk por TXk;\n92\natualizar o LI, isto \u00e9, se C(Tlk) &lt;C(TXk) substituir Tlk por TXk.\nCaso contr\u00e9rio,\nse d(lk) &lt;d(Ak) &lt;$(uk), ent\u00e3o\natualizar o limite inferior do intervalo lk := Ak e Ak :=\nAfc + Uk;\n2 \u2019\natualizar o LI, isto \u00e9, se C(Tlk) &lt;C(TXk) substituir Tlk por TXk.\nCaso contr\u00e9ario,\natualizar o limite superior do intervalo Uk := Ak e Ak :=\nlk + Ak;\n2 \u2019\natualizar o LS, isto \u00e9, se C(TXk) &lt;C(Tuk) substituir Tuk por TXk.\nPasso 4: Crit\u00e9rio de paragem\nSe (Uk - lk) &lt;\u00c2, ent\u00e3o\nU 2\nSe (W(Tuk) - W)(W(T\u00edk) - W) > 0, entao\nseja T a arvore Tuk ou Tlk para a qual o max{d(lk),d(uk)} ocorre.\nCaso contra\u00e9rio,\n. m\tA\tC(Tuk) - C(Tik) , 1\t, .\t,\nseja TAk , com Ak = W(T ) - W(T ) de valor mlnimo P(TXk )\u2022 Se W(TXk) &lt;W, ent\u00e3o\nT = TXk.\nCaso contr\u00e9ario,\nT = Tuk.\nA solu\u00e7\u00e3o aproximada corresponde \u00e0 \u00e9rvore T, STOP.\nCaso contr\u00e9ario,\nir para o Passo 2.\n93\nC(Tik) &lt;^(WMST) &lt;C(Tuk).\nSe os declives de ambas as retas t\u00e2em o mesmo sinal, ent\u00e3ao o limite inferior para a solu\u00e7\u00e3o \u00edtima corresponde \u00e0 arvore cujo valor da relaxa\u00e7\u00e3o Lagrangeana \u00ed maior,\n$(A*) = max{d(\u00edk )-Muk)}.\nCaso os declives tenham sinais contrarios, (A*,$(A*)) corresponde ao ponto de interse\u00e7\u00e3o destas duas retas. Para o obtermos calculamos um novo Ak, dado por:\nAk =\nC (Tuk) \u2014 C T) W (T\u00edk) \u2014 W (TUk)\nque corresponde a abcissa do ponto de interse\u00e7ao das duas retas. De seguida com este ponto de interse\u00e7\u00e3o das duas retas obtem-se uma nova arvore de suporte T\\k. Se esta verificar a restric\u00e3o de peso, ent\u00e3o a solu\u00e7\u00e3o aproximada corresponde \u00e0 arvore T\\k, caso contrario, a solu\u00e7\u00e3o aproximada corresponde \u00e0 arvore Tuk, uma vez que, neste caso a arvore Tuk verifica a restric\u00e3o de peso.\nProposi\u00e7\u00e3o 4.1.\nO valor do multiplicador de Lagrange Ak e limitado\n0 &lt;Ak&lt;\nC (Tw) \u2014 C (Tc) W \u2014 W (Tw)\nDemonstra\u00e7ao.\nQualquer arvore de suporte admiss\u00e1vel T verifica\nC(Tc) &lt;C(T) &lt;C(Tw) e W(Tw) &lt;W(T) &lt;W &lt;W(Tc).\nA reta definida pelos pontos de coordenadas (W(Tw),C(Tw)) e (W(Tc),C(Tc)) tem declive m = W (y) - W^ &lt;0 e equac\u00e3o y = C (Tw) + m(x - W (Tw)).\nSe o declive \u00ed negativo, temos que > 0, dado que\t\u2014,, -.\nW(Tc) - W(Tw)\nPara a \u00edrvore ser admiss\u00edvel o seu peso tem de ser inferior ou igual a W, isto \u00ed, x &lt;W, assim y = C(Tw) + m(x - W(Tw)) > C(Tw) + m(W - W(Tw)). Al\u00edm disso, qualquer \u00edrvore admiss\u00edvel T deve ser tal que C(T) > C(Tw) + m(W - W(Tw)). Como a \u00edrvore Tc \u00ed nao admiss\u00edvel, temos C(Tc) &lt;C(Tw) + m(W - W(Tw)). Portanto,\n&lt;C(Tw) - C(Tc)\t.\t.\tc &lt;C(Tw) - C(Tc)\n-m &lt;W - W(Tw) \u2019 o que slgniflca' que &lt;W - W(T.) \u25a0\nLogo, 0 &lt;: &lt;C w > - C .\n6 \u2019 \u201c\tW - W (Tw)\n\u25a1\n94\nExemplo 4.5.\nNa seguinte tabela sumariamos os resultados da aplica\u00e7\u00e3o do Algoritmo Alg5 para o Exemplo 2.1.\nlk\tUk\tAk\tAk\tAk\t0(4)\t0(\u00abk)\t0(Ak)\t0(Ak)\t^(Ak)\n0\t5,889\t2,944\t1,472\t\u2014\t17\t-0, 222\t20,389\t24,889\t\u2014\n0\t2,944\t1,472\t0,736\t2,208\t17\t20,389\t24,889\t21,944\t24,167\n0,736\t2,208\t1,472\t1,104\t1,840\t21,944\t24,167\t24,889\t23,417\t25,160\n1,472\t2,208\t1,840\t1,656\t1,840\t24,889\t24,167\t25,160\t25,344\t25,160\n1.472\t1,840\t1,656\t1,564\t1,748\t24,889\t25,160\t25,344\t25,257\t25,252\n1,564\t1,748\t1,656\t1,610\t1,748\t25,257\t25,252\t25,344\t25,390\t25,252\n1,564\t1,656\t1,610\t1,587\t1,633\t25,257\t25,344\t25,390\t25,349\t25,367\n1,587\t1,633\t1,610\t1,599\t1,633\t25,349\t25,367\t25,390\t25,395\t25,367\n1,587\t1,610\t1,599\t1,593\t1,605\t25,349\t25,390\t25,395\t25,372\t25,396\n1,599\t1,611\t1,605\t1,602\t1,605\t25,395\t25,390\t25,396\t25,398\t25,396\n1,599\t1,605\t1,602\t1,600\t1,605\t25,395\t25,396\t25,398\t25,400\t25,400\n1,599\t1,602\t1,600\t1,600\t1,601\t25,395\t25,398\t25,400\t25,400\t25,400\n1,600\t1,601\t1,600\t1,600\t1,601\t25,398\t25,399\t25,400\t25,400\t25,400\n1,600 1,601\nTabela 4.5: Resultados da aplica\u00e7\u00e3o do Algoritmo Alg5 para obten\u00e7\u00e3o do intervalo [lk,uk].\nPara este exemplo de 5 nodos, o Algoritmo Alg5 usando a inicializa\u00e7\u00e3o l0 = 0 e u0 = U =\t{cij,wij} = 30 precisa de quinze iterac\u00e3es e e necessario determi-\nnar 38 arvores de suporte para obter a solu\u00e7\u00e3o otima no intervalo [1,6; 1,601].\n\nTendo em conta a Proposi\u00e7\u00e3o 4.1 verificamos que podemos utilizar para este exemplo uma nova inicializa\u00e7\u00e3o do intervalo [l0, u0], fazendo l0 = 0 e u0 = C () T,,c)\nW\tW (Tw )\n5,8889. Usando estes valores, sao precisas treze itera\u00e7\u00e3es e \u00e9 necessario determinar 36 arvores de suporte para a obtenc\u00e3o do intervalo [1,5998; 1,6005] o qual, contem A* = 1,6.\nOs limites inferior e superior para o valor otimo sao, respetivamente, C(Tlk) = 19 e C (TU,) = 27.\nO valor obtido atraves da relaxac\u00e3o Lagrangeana e igual ao valor da relaxa\u00e7\u00e3o linear 25,4 usando qualquer uma das inicializa\u00e7\u00e3es propostas.\n95\nAlgoritmo Lagrangeano 6 (Alg6)\nDevido \u00e0s propriedades da convexidade da fun\u00e7\u00e3o Lagrangeana, os limites do intervalo [lk ,uk] podem ser atualizados tendo em conta os declives das retas. Assim, podemos simplificar o Algoritmo Alg5.\nSe os declives das retas correspondentes a Xk e t\u00e1m o mesmo sinal, ent\u00e3o \u00e9 atualizado o limite inferior do intervalo . Caso contario, se os declives das retas correspondentes a Xk e uk t\u00e1m o mesmo sinal, ent\u00e3o \u00e9 atualizado o limite superior do intervalo uk. Caso um dos declives seja nulo, entao temos de atualizar ambos os limites inferior e superior do intervalo. De seguida apresenta-se o novo Passo 3 simplificado.\nPasso 3: Atualiza\u00e7\u00e3o de limites\nSe (W(TXk) \u2014 W)(W(Tik) \u2014 W) > 0, entao\natualizar o limite inferior do intervalo, := Xk e Xk := k ;\natualizar o LI, isto \u00e9, se C(TXk) > C(Tlk) substitui-se Tlk por TXk.\nCaso contr\u00e9ario,\nse (W(TXk) \u2014 W)(W(Tuk) \u2014 W) > 0, ent\u00e3o\natualizar o limite superior do intervalo, uk := Xk e Xk := ~~~2,\u2014~\u2019 atualizar o LS, isto \u00e9, se C(TXk) \u2014 C(Tuk) susbtitui-se Tuk por TXk.\nCaso contra\u00e9rio,\natualizar ambos os limites do intervalo\t:= \u2014+\u2014- e uk := k +\u2014-;\n22 atualizar o LS, isto \u00e9, se C(TXk) &lt;C(Tuk) substituir Tuk por TXk;\natualizar o LI, isto \u00e9, se C(Tlk) &lt;C(TXk) substituir Tlk por TXk.\nO crit\u00e9erio de paragem deste algoritmo ser\u00e9a efetuado de acordo com o Passo 4 do Algoritmo Alg5.\n96\nExemplo 4.6.\nNa seguinte tabela sumariamos os resultados da aplica\u00e7c\u00e3ao do Algoritmo Alg6 para o Exemplo 2.1.\nlk\tUk\tAk\tW (Tik) \u2014 W\tW (TUk) \u2014 W\tW (TXk) \u2014 W\t^(4)\t^(Uk)\t^(Ak)\n0\t5,8889\t2,9444\t7\t\u20147\t\u20147\t17\t\u20140, 2222\t20,3889\n0\t2,9444\t1,4722\t7\t\u20147\t4\t17\t20,3889\t24,8889\n1,4722\t2,9444\t2,2083\t4\t\u20147\t\u20144\t24,8889\t20,3889\t24,1667\n1,4722\t2,2083\t1,8403\t4\t\u20144\t\u20141\t24,8889\t24,1667\t25,1597\n1,4722\t1,8403\t1,6563\t4\t\u2014 1\t\u20141\t24,8889\t25,1597\t25,3438\n1,4722\t1,6563\t1,5642\t4\t\u20141\t4\t24,8889\t25,3438\t25,2569\n1,5642\t1,6563\t1,6102\t4\t\u20141\t\u20141\t25,2569\t25,3438\t25,3898\n1,5642\t1,6102\t1,5872\t4\t\u20141\t4\t25,2569\t25,3898\t25,3490\n1,5872\t1,6102\t1,5987\t4\t\u20141\t4\t25,3490\t25,3898\t25,3950\n1,5987\t1,6102\t1,6045\t4\t\u20141\t\u20141\t25,3950\t25,3898\t25,3955\n1,5987\t1,6045\t1,6016\t4\t\u20141\t\u20141\t25,3950\t25,3955\t25,3984\n1,5987\t1,6016\t1,6002\t4\t\u20141\t\u20141\t25,3950\t25,3984\t25,3998\n1,5987\t1,6002\t1,5995\t4\t\u20141\t4\t25,3950\t25,3998\t25,3978\n1,5995\t1,6002\t\t\t\t\t\t\t\nTabela 4.6: Resultados da aplica\u00e7\u00e3o do Algoritmo Alg6 para obten\u00e7\u00e3o do intervalo [lk, uk].\nNa tabela encontram-se a negrito os declives com o mesmo sinal. Para este exemplo, no Algoritmo Alg6 usando a inicializa\u00e7ao l0 = 0 e u0 = U = max^^ {cij,wij} = 30, s\u00e3ao necessarias quinze itera\u00e7c\u00e3oes e e necessario encontrar 18 arvores de suporte para obten\u00e7ca\u00e3o da solu\u00e7c\u00e3ao otima.\n\nTendo em conta a Proposi\u00e7\u00e3o 4.1 verificamos que podemos utilizar para este exemplo uma nova inicializa\u00e7ao do intervalo [l0, u0], fazendo l0 = 0 e u0 = , (.w) ___ . C\nW - W (Tw) 5,8889. Usando estes valores, s\u00e3o necessarias treze itera\u00e7\u00f5es e obtem-se 16 arvores de suporte para obten\u00e7\u00e3o do intervalo [1,5995; 1,6002] (Tabela 4.6) que contem o valor\nA* = 1,6. Os limites inferiores e superiores para o valor otimo sao, respetivamente, C(Tek) = 19 e C(Tuk) = 27. O valor obtido pela relaxa\u00e7ao Lagrangeana \u00e9 de 25,4 usando qualquer uma das inicializa\u00e7\u00e3es propostas.\n97\nAlgoritmo Lagrangeano 7 (Alg7)\nEste algoritmo tem por objetivo obter melhores limites inferiores. Portanto, em vez de considerar apenas a restric\u00e7a\u00e3o de peso,\nWij Xij &lt;W,\n(W)\u20acA\nvamos introduzir a seguinte desigualdade v\u00e9alida,\n&lt;|S| - 1,\t(4.1)\n(i,j)\u20acS\ndesignada de Desigualdade de Cobertura [4]. Observe-se que poder\u00e9 ser utilizada qualquer outra desigualdade v\u00e9lida. Adicionando a desigualdade (4.1) ao modelo gen\u00e9rico, obtemos a seguinte formula\u00e7c\u00e3ao:\n(WMST-C) :\tmin\tcjxj (\u00ed,j)eA\t\n\ts.a. x G\t\n\tWij xij &lt;W (\u00ed,j)eA\t(4.2)\n\txij &lt;|S 1 \u2014 1 (\u00ed,j)es\t(4.3)\nOnde x = (xj) G R|A| e descrevem o inv\u00f3lucro convexo das solu\u00e7\u00f5es inteiras do Problema MST. Associando \u00e0 restri\u00e7\u00e3o de peso (4.2) um multiplicador de Lagrange A e associando \u00e0 desigualdade v\u00e1lida (4.3) um outro multiplicador de Lagrange v, e incluindo na func\u00e3o objetivo uma penaliza\u00e7\u00e3o destas duas restric\u00e3es, podemos definir o seguinte problema relaxado:\n(WMST-Cav): \u2014 AW \u2014 v(|S| \u2014 1) + min ^2 (co + Awj)xij + min\tv xj\n(\u00ed,j)eA\t(\u00ed,j)es\ns.a. x G .\nPara todos os multiplicadores n\u00e3ao negativos A e v as solu\u00e7c\u00e3oes para este problema relaxado dao-nos limites inferiores para o valor \u00e1timo. A proposi\u00e7\u00e3o que se segue permite concluir que os limites inferiores obtidos atrav\u00e1s desta relaxac\u00e3o Lagrangeana s\u00e3o melhores do que os obtidos com a relaxac\u00e3o Lagrangeana descrita anteriormente.\n98\nProposi\u00e7\u00e3o 4.2.\nSeja A > 0 e v > 0, ent\u00e3o\nV(WMSTX) &lt;^(WMST-CAv) &lt;\u2019\u00e3(WMST).\nDemonstra\u00e7\u00e3o.\nPara demonstrar a primeira desigualdade consideramos a fun\u00e7ca\u00e3o dual Lagrangeana,\n$(WMST-CAv) = -AW - v(|S|- 1) + min iV (cj + Awj')xij + v Xj xEXr 1\ty\ty\n\\(i,f)&amp;A\t(i,3)eS\n= \u2014 AW \u2014 v|S| + v + P(Tx) + v min\txij\n(i,j)es\nComo minxeX^2(ij)es Xj > |S| \u2014 1, ent\u00e3o obtemos,\n^(WMST-Cav) > -AW - v|S| + v + P(Tx) + v(|S| - 1)\n= -AW + P (Ta)\n= \u25a0\u00e3(WMSTx).\nLogo, \u25a0\u00e3(WMSTx) &lt;^(WMST-Cav).\nPara provar a segunda desigualdade come\u00e7camos por notar que a desigualdade considerada \u00e9 uma desigualdade valida para o Problema WMST e, portanto, a Formula\u00e7\u00e3o WMST-C e uma formula\u00e7ao para o problema. Observamos agora que, sendo WMST-CAv uma relaxacao linear, pela Teoria da Dualidade Lagrangeana, obtemos um limite inferior para o valor otimo do problema.\n\u25a1\nO objetivo agora e o de maximizar a func\u00e3o dual Lagrangeana $(WMST-CAv), ou seja, encontrar os valores de A e v que a maximizam.\nPara obter o valor do par\u00e2metro A, vamos come\u00e7ar por assumir que v e uma constante e vamos reduzir o intervalo [lk,uk] ate que uk -\t~ \u2022 Para tal, ini-\nu2\t1\ncialmente considera-se um valor pequeno para v, que designamos por v\u00ed = g, com U := max(ij)eA {aj,wij}, e considera-se o intervalo [l0,u0] inicializado com l0 = 0 e u0 = (Tw) TTr.c). Depois desta inicializa\u00e7\u00e3o, vamos aplicar o Passo 3 do Algoritmo\nW - W (Tw)\n99\nAlg6 para reduzir o intervalo [lk, uk]. Durante o processo iterativo de redu\u00e7\u00e3o do intervalo [lk,uk], obt\u00e9m-se uma desigualdade do tipo (4.3) quando obtemos uma \u00e9rvore de suporte nao admissrvel Tlk. Para construir a desigualdade (4.3) \u00e9 necessario optar pela escolha de uma ordem de inclus\u00e3o do conjunto de arestas ETlk na desigualdade. Para escolher a ordenac\u00e7a\u00e3o utilizamos os seguintes procedimentos:\nProcedimento 1\nOrdenar as arestas do conjunto ET^ por ordem crescente de custo.\nProcedimento 2\nOrdenar as arestas do conjunto ET^ por ordem decrescente de peso.\nProcedimento 3\nCij\nOrdenar as arestas do conjunto ETl por ordem decrescente de valor \u2014.\nk\twij\nUtilizando os procedimentos anteriores forma-se um conjunto S C Et^ de arestas tal que a soma dos pesos das arestas contidas em S \u00e9 superior a W, ou seja, verifica-se a desigualdade e<=s we > W, onde e = {i,j}. Logo, S \u00e9 uma cobertura e tamb\u00e9m pode ser uma cobertura minimal, no caso de ao remover qualquer aresta da cobertura S, a soma dos pesos das restantes arestas contidas na cobertura for inferior ou igual a W, isto \u00e9, para toda a aresta f = {k,t} G S temos ^2e&amp;s-{f} we &lt;W.\nNote-se que quando introduzimos uma desigualdade v\u00e9alida ao Problema WMST, associamos \u00e0 desigualdade (4.3) um multiplicador de Lagrange v e desta forma as arestas contidas em S v\u00e3ao ser penalizadas na fun\u00e7ca\u00e3o objetivo.\nNo Cap\u00e9tulo 5 sa\u00e3o apresentadas desigualdades v\u00e9alidas para o Problema WMST.\n100\nExemplo 4.7.\nw01 = 6 &lt;20\nw01 + w12 = 6 + 6=12 &lt;20\nW01 + W12 + W04 = 12 + 7 = 19 &lt;20\nW01 + W12 + W04 + W03 = 19 + 8 = 27 > 20,\nobtemos a desigualdade v\u00e9lida x01 + x03 + x04 + x12 &lt;3.\nNo caso de se efetuar o Procedimento 2, ent\u00f5o ordenam-se as arestas por ordem decrescente de peso, ou seja, {0, 3}\t{0, 4}\t{0,1}\t{1,2}.\nComo,\nw03 = 8 &lt;20\nW03 + W04 = 8 + 7 = 15 &lt;20\nW03 + W04 + W01 = 15 + 6 = 21 > 20,\nobtemos a desigualdade valida x01 + x03 + x04 &lt;2.\nEsta desigualdade tamb\u00e9m \u00e9 obtida com a aplica\u00e7\u00f5o do Procedimento 3.\nObserve-se que a desigualdade obtida no Procedimento 2 e 3 \u00e9e mais forte do que a obtida no Procedimento 1.\nJ\u00e9 vimos como reduzir o intervalo do par\u00e2metro A e como obter uma desigualdade valida. Decorre ainda a necessidade de determinar o valor do multiplicador de Lagrange v que faz com que $(WMST-Cav) seja m\u00e9ximo.\nProposicao 4.3.\nDado um intervalo [lk ,uk], o multiplicador de Lagrange v \u00e9 dado por:\n(C(TUk) - C(Tik))(W - W(TUk)) Sik(W - W(Tuk)) - W(Tuk) + W(Tik) \u2019\n(4.4)\nC (Ti.) + lk W (Tik) + vSik = C (Tu.) + UkW (Tu.) + vSu.,\t(4.5)\n101\nonde Sik e Suk designam o n\u00famero de arestas contidas em S na \u00e1rvore Tlk e Tuk, respetivamente.\nQuando a arvore obtida \u00e9 admiss\u00edvel, nao \u00e9 poss\u00edvel obter-se uma desigualdade v\u00e1lida, neste caso Suk = 0. Substituindo Suk = 0 na equac\u00e3o (4.5) e tendo em conta que os valores de lk e uk se aproximam de Xk, obtemos\nC(Tk) - C(Tuk) + vSik = Xk(W(Tuk) - W(Tk))\u2022\nResolvendo a equa\u00e7\u00e3o anterior em ordem a v obt\u00e9m-se,\n.. = C(TUk) - C(T,\u201e) , X W u ) - W(Tk)\nv =------------------+ Xk\n(4.6)\nS k\nS k\nComo W ) - W) &lt;0, conclu\u00edmos que estas retas tem declive negativo. S k\nNecessitamos agora de encontrar retas cujo declive seja positivo para podermos fazer a respetiva interse\u00e7\u00e3o com as retas definidas pela equa\u00e7ao (4.6).\nSabemos que em cada itera\u00e7ao o valor do limite superior pode ser atualizado LS = C(Tuk), portanto\nWXk, v) &lt;C(Tuk)\tC(Tuk) + Xk (W(Tuk) - W) + v &lt;C(TUk)\nResolvendo a inequa\u00e7ao anterior em ordem a v obtemos,\nv &lt;Xk (W - W(Tuk))\n(4.7)\nonde W - W(Tuk) > 0, ou seja, o declive das retas v = Xk (W - W(Tuk)) \u00e9 positivo.\nEm cada itera\u00e7\u00e3o vamos obter os sucessivos valores das intersec\u00e3es das retas (4.6)\ne (4.7). Resolvendo as equac\u00e3es (4.6) e (4.7) em ordem a Xk, vem,\nXk =\nSek v - C (Tuk) + C(Tk) W (Tuk) - W (Tk)\n(4.8)\nXk =\nv\nW - W (Tuk).\n(4.9)\nIgualando (4.8) e (4.9) vem,\nS ik v - C(Tuk) + C (Tk) =\tv\nW (Tuk) - W (Tik)\tW - W (Tuk)\u2019\nResolvendo a equa\u00e7c\u00e3ao anterior em ordem a v obtemos,\n(C(Tu,) - C(Tlt)) (W - W(Tu,))\nS,t (W - W (T.t)) - W(T\u201e,) + W(Ti,,) \u2022\n(4.10)\n\u25a1\n102\nE no Passo 4 que a seguir se descreve que se obt\u00e9m o valor v do multiplicador de Lagrange e se calcula o maior valor das relaxac\u00e3es das \u00e9rvores TlkV e T\u201ek v.\nPasso 4: Crit\u00e9rio de paragem\nSe uk \u2014 4&lt;\t, ent\u00e3o\nU 2\nObter v =\n(C(T\u201ek) \u2014 C(Tik)) (W \u2014 W(T\u201ek))\nSik (W \u2014 W (T.k)) \u2014 W (T\u201et) + W (T,k) \u2022\nSeja T a \u00e9rvore T\u201ek,v ou Tlkv para o qual max{$(4, v),$(uk, v)} ocorre.\nA solu\u00e7\u00e3o aproximada corresponde a \u00e9rvore T, STOP.\nCaso contr\u00e9rio,\nvoltar ao Passo 2.\nExemplo 4.8.\nPara exemplificar o Algoritmo Alg7 utilizamos o Exemplo 2.1. Vamos aplicar o Procedimento 2 para obten\u00e7c\u00e3ao da desigualdade de cobertura.\nInicializac\u00e3o de valores:\nlo = 0,\n70 \u2014 17 Uo\t.\n53\ny - 5,89\nU = max{30,8} = 30\nvi =\n1\n30.\ne\nItera\u00e7\u00e3o 1: Inicializar Tlk e T\u201ek.\nTik : C(Tt\u201e) = 17, W(Tik) = 27 e Stk = 3.\nTu* : C t ) = 41 e W (T\u201e\u201e) = 13.\nDesigualdade valida: x03 + x04 + x01 &lt;2.\nIntervalo obtido: [0; 2,9(4)].\nItera\u00e7\u00e3o 2: Atualizar Tlk.\nT : C(7K) = 19, W(Ttk) = 24 e S,k = 4.\n103\nT\u201e. : C(T\u201e) = 41 e W (T\u201e) = 13.\nDesigualdade valida: x04 + x01 + x12 + x43 &lt;3.\nIntervalo obtido: [1,47(2); 2,9(4)].\nIterac\u00e3o 3: Atualizar Tuk.\nTi, : C(Tk) = 19, W(Ttk) = 24 e Si, = 4.\nTuk : C(Tu,) = 33 e W(Tu,) = 16.\nIntervalo obtido: [1,47(2); 2,208(3)].\nItera\u00e7\u00e3o 4: Atualizar Tuk.\nTi, : C(Ti.,) = 19, W(T,k) = 24 e Sik = 4.\nTuk : C(Tu, ) = 27 e W (Tu, ) = 19.\nIntervalo obtido: [1,47(2); 1,840278].\nNas restantes treze itera\u00e7\u00f5es obt\u00eam-se os mesmos resultados da Itera\u00e7\u00f5o 4 com excec\u00f5o do intervalo reduzido que e sucessivamente atualizado. Quando se atualiza e adicionada a desigualdade valida x01 + x04 + x12 + x43 &lt;3. O intervalo reduzido obtido e [1,594428; 1,595147].\nNo Passo 4 obtem-se v =\n(27 - 19) (20 - 19)\n4 x (20 - 19) - 19 + 24\n8\n9\tW9.\nAssim, ^(WMST-Cav) = max{26,266602; 26,293742} = 26,293742.\nO valor da relaxa\u00e7ao linear neste exemplo de 5 nodos e de 25,4 e o valor otimo \u00e9 de 27 - 25,4\n27, logo o gap e-27\u2014~ x 100 = 5,93%. Aplicando o Algoritmo Alg7 com qualquer\num dos tr\u00eas procedimentos o valor da relaxa\u00e7\u00f5o Lagrangeana e de 26,293742. O gap 27 - 26,293742\tq\npassa a ser------\u2014------ x 100 = 2,62% e obtemos assim uma redu\u00e7ao de 3,31%.\n27\n104\nLagrangeanos e Resultados Computacionais\nNesta sec\u00e7\u00e3o descrevemos algumas experi\u00eancias computacionais realizadas com o objetivo de definir par\u00eametros e estrat\u00e9gias a serem adotadas para a utiliza\u00e7\u00e3o dos algoritmos Lagrangeanos expostos. Apresentamos igualmente os resultados computacionais obtidos quando utilizamos os algoritmos descritos ao longo deste cap\u00e9tulo para resolver o conjunto de inst\u00eancias geradas e descritas na Seccao 2.3 e fazemos uma comparac\u00e7\u00e3ao entre os algoritmos em termos de tempo de execuc\u00e7\u00e3ao e de qualidade das soluc\u00e7\u00e3oes aproximadas obtidas. Pretendemos tamb\u00e9em averiguar se o valor obtido pela relaxa\u00e7c\u00e3ao Lagrangeana dos diversos algoritmos corresponde ao valor da relaxac\u00e7a\u00e3o linear do Procedimento P-WMTZ+C.\nOs algoritmos Lagrangeanos foram implementados em C++ e todos os testes foram efetuados num Intel(R) Core(TM)2 Duo CPU (T7100) 2.00 GHz processador e 4Gb de RAM.\n4.5.1\tExemplo Comparativo dos Algoritmos Lagrangeanos\nCom o objetivo de comparar os diferentes algoritmos Lagrangeanos descritos ao longo deste cap\u00e9tulo elabor\u00e9mos a Tabela 4.7, onde se resume a informa\u00e7ao j\u00e1 dada para o exemplo de 5 nodos que foi utilizado ao longo deste cap\u00e9tulo para exemplificar o comportamento de cada um dos algoritmos Lagrangeanos. Para este exemplo com 5 nodos, a soluc\u00e3o otima tem custo 27 e peso 19 e o valor de W = 20.\n\tC (Ta)\tW (Ta)\tIter.\tAk\tlk\tuk\t^(Ak)\tv\t^(Ak, v)\tGap\nAlg1\t27\t19\t4\t1,5970\t-\t-\t25,400\t-\t-\t5,93\nAlg2\t27\t19\t4\t1,6000\t-\t-\t25,400\t-\t-\t5,93\nAlg3\t27\t19\t7\t1,6450\t-\t-\t25,355\t-\t-\t6,09\nAlg4\t27\t19\t5\t1,6550\t1,4720\t1,8400\t25,344\t-\t-\t6,13\nAlg5\t27\t19\t13\t1,6000\t1,6000\t1,6010\t25,400\t-\t-\t5,93\nAlg6\t27\t19\t13\t1,6000\t1,5995\t1,6002\t25,400\t-\t-\t5,93\nAlg7\t27\t19\t13\t1,5948\t1,5944\t1,5951\t-\t0,89\t26,294\t2,62\nTabela 4.7: Compara\u00e7\u00e3o dos algoritmos Lagrangeanos no Exemplo 2.1.\n105\nPara o exemplo de 5 nodos considerado podemos observar que todos os algoritmos Lagrangeanos obtiveram a solu\u00e7\u00e3o aproximada correspondente a soluc\u00e3o otima, isto \u00e9, foi obtida a arvore de suporte com custo 27 e peso 19. Os Algoritmos Alg3 e Alg4 s\u00e3o os que apresentam um valor de gap mais elevado. Nos Algoritmos Alg1, Alg2, Alg5 e Alg6 o valor obtido pela relaxa\u00e7ca\u00e3o Lagrangeana e igual ao valor obtido pela relaxa\u00e7c\u00e3ao linear. Como ja tinha sido observado, o Algoritmo Alg7 melhora o valor da relaxa\u00e7\u00e3o Lagrangeana havendo uma reduc\u00e3o no gap de 3,31%.\n4.5.2\tDescri\u00e7\u00e3o dos Valores dos Par\u00e1metros Usados nas Experi\u00eancias Computacionais Realizadas\nUm par\u00e2metro comum a todos os algoritmos Lagrangeanos apresentados e a tolerancia tol usada no criterio de paragem. Apos efetuarmos algumas experi\u00eancias computacionais com varios valores de tol no intervalo [0,0001; 0,1] decidimos utilizar tol = 0,001.\nPara a execu\u00e7\u00e3o do Algoritmo Alg3 e necessario definir o par\u00eametro p e para tal, foram efetuadas diversas experi\u00eancias com varios valores de p no intervalo ]0, 2[, nos tr\u00eaes grupos de inst\u00eaancias em estudo.\nNas instancias Quase Caminhos, ao diminuirmos o valor de p, a qualidade das solu\u00e7\u00e3es obtidas melhora, isto \u00e9, os valores obtidos para o limite superior e para o valor da relaxac\u00e7a\u00e3o Lagrangeana aproximam-se cada vez mais dos correspondentes valores obtidos atraves dos Algoritmos Alg2, Alg5 e Alg6.\nNo grafico da Figura 4.6 podemos observar que nas inst\u00eancias Quase Caminhos quanto mais pequeno e o valor de p maior e o tempo de execuc\u00e7\u00e3ao do algoritmo.\nCom o objetivo de encontrar solu\u00e7c\u00e3oes de melhor qualidade e de forma rapida decidimos utilizar para as inst\u00eancias Quase Caminhos o valor p = 0,001.\n106\nFigura 4.6: Compara\u00e7\u00e3o dos tempos de execu\u00e7\u00e3o em inst\u00e2ncias QC para diferentes valores de p.\nNas instancias Aleat\u00f3rias e Euclideanas, verificamos que ao diminuirmos o valor de p para as inst\u00e2ncias de maiores dimens\u00f5es, as solu\u00e7\u00f5es s\u00e3o de pior qualidade.\nPara que o Algoritmo Alg3 seja convergente nos grupos de inst\u00e2ncias Aleatorias e Euclideanas \u00e9 necessario adotar diferentes valores de p para as diferentes dimens\u00e3es das inst\u00e2ncias. Apos diversas experi\u00e2ncias decidimos utilizar os valores de p que se encontram nas Tabelas 4.8 e 4.9.\nNA Nodos\t10\t20\t40\t60\t80\t100\nR\t0,001\t0,0065\t0,075\t0,25\t0,095\t0,125\nE\t0,0001\t0,0001\t0,0001\t0,0001\t0,0001\t0,04\nTabela 4.8: Valores de p utilizados no Algoritmo Alg3 nas instancias Aleat\u00f3rias e Euclideanas de\n10 a 100 nodos.\nNA Nodos\t150\t200\t300\t400\t500\t1000\nR\t0,085\t0,06\t0,045\t0,04\t0,04\t0,03\nE\t0,04\t0,04\t0,04\t0,04\t0,035\t0,015\nTabela 4.9: Valores de p utilizados no Algoritmo Alg3 nas instancias Aleat\u00f3rias e Euclideanas de\n150 a 1000 nodos.\n107\nNo Algoritmo Alg5 foram referidas, na Subsec\u00e7\u00e3o 4.4, as seguintes duas inicia-lizac\u00e3es para o extremo superior do intervalo [l0,u0]:\n\u2022 inicializacao proposta por [7] (Alg5IB): u0 = U = max^A {cj,wij};\n\nnova inicializacao proposta na Subseccao 4.4 (Alg5IN): u0 =\nC (Tw) \u2014 C (Tc) W \u2014 W (Tw)\nDas experi\u00eancias realizadas com ambas as inicializa\u00e7\u00e3es e a t\u00e9tulo de exemplo, cons-tru\u00e9mos a Tabela 4.10 indicando o numero m\u00e9dio de itera\u00e7oes, o numero m\u00e9dio de arvores de suporte obtidas e o tempo de execu\u00e7\u00e3o (em segundos) usando cada uma das inicializac\u00e3es nas diferentes dimens\u00e3es das inst\u00eancias Quase Caminhos (QC).\n\tAlg5IB\t\t\t\tAlg5IN\t\nNA Nodos\tNQ. Itera\u00e7\u00f5es\tNQ. Arvores\tTempo (s)\tNQ. Itera\u00e7oes\tNQ. Arvores\tTempo (s)\n10\t27,1\t66,6\t0,004\t18,7\t57,7\t0,002\n20\t26\t64,3\t0,008\t19\t56,4\t0,002\n40\t25\t61,9\t0,007\t19,2\t57,1\t0,006\n60\t24,8\t63,2\t0,018\t19,3\t57,2\t0,018\n80\t24\t60,9\t0,023\t19,1\t55,9\t0,024\n100\t24\t61,9\t0,037\t19,8\t58\t0,028\n150\t25\t63,3\t0,064\t20,5\t58,3\t0,066\n200\t23\t59,2\t0,102\t20,4\t57\t0,091\n300\t23\t57,8\t0,172\t20\t54,6\t0,165\n400\t23\t57,2\t0,279\t18,2\t50,6\t0,260\n500\t23\t59,4\t0,449\t20\t55,6\t0,429\n1000\t22,2\t61,4\t1,745\t21,6\t59,6\t1,708\nTabela 4.10: Compara\u00e7\u00e3o das duas estrat\u00e9gias de inicializa\u00e7\u00e3o do Algoritmo Alg5 em inst\u00e2ncias QC.\n108\nRelativamente ao Algoritmo Alg7 foram propostos tr\u00eas procedimentos de ordenac\u00e3o de arestas na Subsecc\u00e3o 4.4. Para todos os grupos de inst\u00eancias e usando todos os procedimentos de ordenac\u00e7\u00e3ao de arestas, o valor obtido atrav\u00e1es da relaxac\u00e7\u00e3ao Lagrangeana aumenta comparativamente ao valor obtido pela relaxac\u00e7\u00e3ao Lagrangeana dos outros algoritmos, sendo de real\u00e7car que os valores mais pr\u00e1oximos da solu\u00e7ca\u00e3o o\u00e1tima s\u00e3ao obtidos usando o Procedimento 2 em 85,26% das instancias Quase Caminhos (81 em 95 inst\u00eancias). No grupo de inst\u00eancias Aleat\u00e1rias, o Procedimento 2 \u00e1 melhor em 98,33% das inst\u00eancias (59 em 60 inst\u00eancias) e no grupo de inst\u00eancias Euclideanas, e melhor em 81,67% das inst\u00eancias (49 em 60 instancias). Os tempos de execu\u00e7\u00e3o dos tr\u00eas procedimentos s\u00e3ao muito semelhantes.\n4.5.3\tEstudo Comparativo dos Algoritmos Lagrangeanos e Resultados Computacionais\nNesta sec\u00e7c\u00e3ao apresentamos e comparamos os resultados computacionais obtidos atraves dos algoritmos Lagrangeanos descritos na Sec\u00e7\u00e3o 4.2 para as inst\u00eancias geradas e descritas na Sec\u00e7ao 2.3.\nPara avaliar a qualidade dos valores obtidos pelos algoritmos Lagrangeanos apresentados comparou-se o valor do limite superior obtido em cada algoritmo Lagrangeano com o valor otimo ou o melhor valor do limite superior obtido usando o Procedimento P-WMTZ+C descrito no Cap\u00e1tulo 3.\nSejam LS o valor do limite superior obtido para o valor do custo usando os algoritmos Lagrangeanos, '\u00e2(WMSTx) o valor obtido pela relaxacao Lagrangeana usando os algoritmos Lagrangeanos e OPT o valor otimo (P(W MST)) ou o melhor valor obtido at\u00e9 ao momento atrav\u00e9s do Procedimento P-WMTZ+C. Como todos estes algoritmos obtem um limite superior (LS) e um limite inferior (LI) (valor da relaxa\u00e7\u00e3o Lagrangeana), podemos considerar dois tipos de gap, o gap correspondente ao valor do limite superior que \u00e1e dado por\nLS \u2014 OPT GaPLS = ---OpT  x 100,\na este valor passaremos a designar de gap do limite superior (GapLS) e o gap correspondente ao valor do limite inferior obtido atrav\u00e1es da relaxa\u00e7ca\u00e3o Lagrangeana que \u00e1e\n109\ndado por\nGapR =\nOPT _ tf(WMST\u00c3) O PT\nx 100,\na este valor passaremos a designar de gap da relaxac\u00f5o Lagrangeana (GapR).\nOs testes desta subsec\u00e7c\u00f5ao consistem no uso de todos os algoritmos apresentados\nneste cap\u00e9tulo para obter solu\u00e7\u00f5es para as 215 instancias dos grupos Quase Caminhos, Aleat\u00e9rias e Euclideanas e cuja descri\u00e7\u00f5o foi efetuada na Sec\u00e7\u00f5o 2.3.\nVamos come\u00e7ar por efetuar uma analise geral aos algoritmos Lagrangeanos e em seguida passamos a estudar o comportamento em termos de qualidade e tempo de execu\u00e7c\u00f5ao dos v\u00e9arios algoritmos em cada grupo de inst\u00e2ancias em separado. Em forma de s\u00e9ntese, no final do cap\u00e9tulo s\u00f5ao apresentadas as principais concluso\u00f5es obtidas.\nNa Tabela 4.11 podemos observar em cada grupo de inst\u00e2ncias em estudo as percentagens de gaps nulos obtidas atrav\u00e9s do limite superior nos varios Algoritmos Lagrangeanos propostos. Na ultima linha da tabela encontram-se as percentagens de GapLS = 0 obtidas tendo em considerac\u00f5o todas as inst\u00e2ncias em estudo.\n\tAlgl\tAlg2\tAlg3\tAlg4\tAlg5\tAlg6\tAlg7\nQC\t6,32\t35,79\t16,84\t6,32\t35,79\t35,79\t37,89\nR\t5,00\t6,67\tl,67\t5,00\t6,67\t6,67\t5,00\nE\t25,00\t30,00\t11,67\t23,33\t30,00\t30,00\t28,33\n% GapLs = 0\tll,l6\t26,05\t11,16\t10,70\t26,05\t26,05\t26,05\nTabela 4.11: Percentagens de gaps nulos obtidas atrav\u00e9s do LS nos v\u00e1rios algoritmos por cada grupo de inst\u00e2ncias.\nEm geral, dos v\u00e9arios algoritmos em estudo, os Algoritmos Alg2, Alg5, Alg6 e Alg7 sao os que apresentam a maior percentagem de gaps nulos 26,05% (56 inst\u00e2ncias em 215). Nos grupos de inst\u00e2ncias Quase Caminhos e Euclideanas \u00e9 onde se obt\u00eam a maior percentagem de gaps nulos.\n110\nNa Tabela 4.12 podemos observar em cada grupo de inst\u00e2ancias em estudo, as percentagens de gap do limite superior que s\u00e3ao inferiores aos gap da relaxa\u00e7c\u00e3ao Lagrange-ana obtidos nos varios algoritmos Lagrangeanos propostos. Na ultima linha da tabela encontram-se as percentagens de gap do limite superior que s\u00e3ao inferiores aos gap da relaxa\u00e7ca\u00e3o Lagrangeana obtidas tendo em considerac\u00e7a\u00e3o todas as inst\u00e2ancias em estudo.\n\tAlgl\tAlg2\tAlg3\tAlg4\tAlg5\tAlg6\tAlg7\nQC\t54,74\t75,79\t67,37\t97,89\t75,79\t75,79\t76,84\nR\t16,67\t20,00\t11,67\t13,33\t20,00\t20,00\t18,33\nE\t38,33\t40,00\t25,00\t31,67\t40,00\t40,00\t35,00\n% GapLs &lt;GapR\t39,53\t50,23\t40,00\t55,81\t50,23\t50,23\t48,84\nTabela 4.12: Percentagens de GapLS que sao inferiores aos GapR nos v\u00e1rios algoritmos por cada grupo de inst\u00e2ncias.\nObservamos uma maior percentagem de GapLS inferior ao GapR nas inst\u00e2ncias Quase Caminhos, isto \u00e1, na maior parte destas inst\u00e2ncias o valor do limite superior obtido encontra-se mais pr\u00e1oximo do valor \u00e1otimo comparativamente ao valor do limite inferior. J\u00e1 nos outros dois grupos de inst\u00e2ncias verifica-se um comportamento diferente, o que significa que a relaxa\u00e7c\u00e3ao Lagrangeana nos grupos de inst\u00e2ancias Aleato\u00e1rias e Euclideanas apresenta solu\u00e7c\u00e3oes mais pr\u00e1oximas da solu\u00e7c\u00e3ao \u00e1otima. Portanto, no grupo de inst\u00e2ncias Quase Caminhos \u00e1 prefer\u00edvel encontrar um valor para o limite superior para o custo, pois este encontra-se mais pr\u00e1oximo do valor o\u00e1timo, enquanto que nos grupos de inst\u00e2ancias Aleat\u00e1orias e Euclideanas \u00e1e mais conveniente a escolha do valor do limite inferior para o custo dado pelo valor da relaxa\u00e7c\u00e3ao Lagrangeana.\nOs Algoritmos Alg2, Alg5 e Alg6 mostraram-se apropriados nos grupos de inst\u00e2ancias considerados para encontrar um valor muito pr\u00e1oximo do valor da relaxa\u00e7c\u00e3ao linear, pois os valores obtidos atrav\u00e1es da aplica\u00e7c\u00e3ao da relaxa\u00e7ca\u00e3o Lagrangeana aproximam-se dos valores da relaxa\u00e7ao linear obtidos atrav\u00e1s do Procedimento P-WMTZ+C descrito na Sec\u00e7ao 3.3.\nEm 11,67% das instancias do grupo Aleatorias (7 em 60 inst\u00e2ncias) e em 25% das instancias Euclideanas (15 em 60 instancias), mais precisamente as instancias com mais de 300 nodos, o valor obtido atrav\u00e1es da relaxa\u00e7c\u00e3ao Lagrangeana encontra-\n111\nse mais proximo do valor otimo do que o valor da relaxac\u00e7\u00e3ao linear do Procedimento P-WMTZ+C. Este facto ocorre, pois para inst\u00e2ncias do grupo Aleat\u00f3rias e Euclideanas com mais de 300 nodos, a relaxac\u00e3o linear do Procedimento P-WMTZ+C e interrompida quando o gap, em percentagem, entre duas solucoes consecutivas \u00e9 inferior a 0,000001, mais do que 20 vezes ou quando o limite de tempo na introdu\u00e7\u00e3o de cortes exceder 10000 segundos.\nDe seguida e para facilitar a analise, vamos comparar os algoritmos, em cada grupo de inst\u00e2ncias em estudo e para tal separamos as inst\u00e2ncias em 12 subgrupos (um por cada valor para o numero de nodos). Para analisar a qualidade das solu\u00e7co\u00e3es obtidas s\u00e3ao apresentados para cada algoritmo os gap medios, em percentagem, do valor do limite superior, Gap^s, e do valor da relaxa\u00e7ao Lagrangeana, GapR, e os respetivos desvios padr\u00e3es (ver Tabelas 4.13, 4.14, 4.17, 4.18, 4.21 e 4.22). Para se poder avaliar a rapidez dos algoritmos Lagrangeanos s\u00e3ao apresentados tambem para cada algoritmo, os valores dos tempos medios de execu\u00e7ao (em segundos) nos varios subgrupos de nodos com os respetivos desvios padroes (ver Tabelas 4.15, 4.16, 4.19, 4.20, 4.23 e 4.24).\n112\nInst\u00eancias Quase Caminhos\nAtraves da observa\u00e7\u00e3o das Tabelas 4.13 e 4.14 conclui-se que os Algoritmos Alg1 e Alg4 apresentam Gap^s e GapR muito elevados quando comparados com os correspondentes gaps dos restantes algoritmos. Os Algoritmos Alg2, Alg5 e Alg6 determinam as mesmas solu\u00e7\u00e3es. Em relac\u00e3o ao Algoritmo Alg3 podemos dizer que os GapR se aproximam dos GapR dos Algoritmos Alg2, Alg5 e Alg6 e os GapLS sao mais elevados do que os GapLS dos Algoritmos Alg2, Alg5 e Alg6 mas, apesar disso e, em geral, sao melhores do que os dos Algoritmos Alg1 e Alg4.\nNo grafico da Figura 4.7 podemos comparar os GapR do Algoritmo Alg7 com os do Algoritmo Alg6 (os Algoritmos Alg2 e Alg5 t\u00eam GapR igual ao Algoritmo Alg6).\n10\t20\t40\nNODOS\n\u25a0 Alg6 \u00abAlg7\nNODOS\n150\t200\t300\nNODOS\n400\t500\t1000\nNODOS\nFigura 4.7: Compara\u00e7ao dos GapR m\u00e9dios, em percentagem, entre os Algoritmos Alg6 e Alg7 nas inst\u00e2ncias QC.\nO Algoritmo Alg7 e o que apresenta gaps da relaxac\u00e3o Lagrangeana mais baixos em todas as inst\u00e2ncias. Em rela\u00e7\u00e3o ao GapLS, o Algoritmo Alg6 apresenta gaps mais baixos do que o Algoritmo Alg7, em 7,37% dos casos (7 instancias em 95) e o Algoritmo Alg7 apresenta menores gaps em 4,21% dos casos (4 inst\u00e2ncias em 95). Nas restantes 84 inst\u00e2ncias os GapLS s\u00e3o iguais nos dois algoritmos.\n113\n114\n\tAlg1\t\tAlg2\t\tAlg3\t\tAlg4\t\tAlg5\t\tAlg6\t\tAlg7\t\nN\u00bb Nodos\tGapR\tGapjRs\tGapR\tGapjRs\tGapR\tGapjRs\tGapR\tGapjRs\tGapR\tGapjRs\tGapR\tGapjRs\tGapR\tGapjRs\n10\t46,516\t45,433\t22,292\t7,138\t23,551\t37,666\t28,855\t28,688\t22,292\t7,138\t22,292\t7,138\t18,987\t7,138\n20\t26,899\t17,027\t9,874\t0,574\t10,732\t6,031\t31,769\t17,533\t9,874\t0,574\t9,874\t0,574\t9,145\t0,574\n40\t15,654\t18,451\t6,362\t0,579\t7,004\t9,332\t35,398\t23,925\t6,362\t0,579\t6,362\t0,579\t6,101\t1,545\n60\t11,061\t11,658\t4,831\t0,022\t5,277\t7,870\t40,532\t12,949\t4,831\t0,022\t4,831\t0,022\t4,729\t0,022\n80\t10,767\t9,798\t3,778\t0,058\t4,277\t7,888\t42,424\t9,798\t3,778\t0,058\t3,778\t0,058\t3,701\t0,058\n100\t7,406\t6,083\t3,192\t1,048\t3,417\t6,349\t43,984\t7,147\t3,192\t1,048\t3,192\t1,048\t3,141\t0,346\n150\t11,774\t8,559\t1,680\t0,773\t1,867\t3,893\t42,587\t9,439\t1,680\t0,773\t1,680\t0,773\t1,651\t0,445\n200\t4,618\t3,716\t0,771\t0,719\t0,831\t1,837\t42,050\t3,716\t0,771\t0,719\t0,771\t0,719\t0,739\t1,837\n300\t3,647\t3,050\t0,299\t1,628\t0,350\t2,399\t42,251\t3,050\t0,299\t1,628\t0,299\t1,628\t0,282\t1,628\n400\t10,074\t9,291\t0,232\t1,433\t0,675\t9,291\t40,651\t9,291\t0,232\t1,433\t0,232\t1,433\t0,219\t2,030\n500\t3,455\t3,314\t0,207\t1,265\t0,224\t2,351\t41,860\t3,894\t0,207\t1,265\t0,207\t1,265\t0,198\t1,771\n1000\t3,598\t0,292\t1,757\t0,292\t1,806\t0,292\t44,696\t0,292\t1,757\t0,292\t1,757\t0,292\t1,754\t0,292\nTabela 4.13: Gaps m\u00e9dios, em percentagem, obtidos pelos algoritmos Lagrangeanos nas instancias QC.\n115\n\tAlg1\t\tAlg2\t\tAlg3\t\tAlg4\t\tAlg5\t\tAlg6\t\tAlg7\t\nN\u00bb Nodos\tGapR\tGapjRs\tGapR\tGapjLs\tGapR\tGapjLs\tGapR\tGapjLs\tGapR\tGapjLs\tGapR\tGapjLs\tGapR\tGapjLs\n10\t26,556\t41,545\t7,061\t8,075\t7,058\t45,160\t11,237\t28,365\t7,061\t8,075\t7,061\t8,075\t6,756\t8,075\n20\t23,118\t8,109\t4,380\t0,610\t4,588\t9,238\t8,347\t7,768\t4,380\t0,610\t4,380\t0,610\t4,074\t0,610\n40\t9,213\t10,500\t0,840\t0,614\t1,230\t10,831\t3,919\t5,751\t0,840\t0,614\t0,840\t0,614\t0,762\t2,974\n60\t6,314\t4,918\t0,863\t0,029\t1,020\t5,937\t3,096\t2,721\t0,863\t0,029\t0,863\t0,029\t0,853\t0,029\n80\t5,351\t1,740\t0,884\t0,051\t1,155\t4,487\t1,198\t1,740\t0,884\t0,051\t0,884\t0,051\t0,883\t0,051\n100\t4,791\t2,538\t0,274\t1,690\t0,275\t1,444\t1,394\t0,602\t0,274\t1,690\t0,274\t1,690\t0,280\t1,087\n150\t8,054\t3,462\t0,360\t1,271\t0,582\t4,545\t1,589\t1,750\t0,360\t1,271\t0,360\t1,271\t0,361\t0,931\n200\t3,300\t0,911\t0,345\t0,679\t0,330\t1,500\t2,141\t0,911\t0,345\t0,679\t0,345\t0,679\t0,350\t1,500\n300\t1,597\t0,923\t0,214\t1,629\t0,194\t1,539\t1,966\t0,923\t0,214\t1,629\t0,214\t1,629\t0,218\t1,629\n400\t8,370\t10,450\t0,057\t1,867\t0,677\t10,450\t4,709\t10,450\t0,057\t1,867\t0,057\t1,867\t0,052\t1,966\n500\t3,565\t1,903\t0,082\t1,295\t0,083\t2,040\t1,856\t1,049\t0,082\t1,295\t0,082\t1,295\t0,079\t2,108\n1000\t1,704\t0,652\t1,115\t0,652\t1,157\t0,652\t3,638\t0,652\t1,115\t0,652\t1,115\t0,652\t1,116\t0,652\nTabela 4.14: Desvios Padr\u00f5es dos gap obtidos pelos algoritmos Lagrangeanos nas inst\u00e2ncias QC.\nNa Tabela 4.15 encontram-se representados os tempos m\u00e9dios, em segundos, de execu\u00e7\u00e3o dos varios algoritmos Lagrangeanos para as instancias Quase Caminhos e na Tabela 4.16 encontram-se os respetivos desvios padroes.\nDa observa\u00e7\u00e3o das tabelas referidas e do grafico da Figura 4.8 podemos constatar que de todos os algoritmos Lagrangeanos apresentados o mais lento e o Algoritmo Alg3.\nI nst\u00e2ncias QC de 10 a 150 nodos\n0,14\n\u25a0 Algl \u25a0 Alg2 B Alg3 B Alg4 B Alg5 \u25a0 Alg6 BAIg7\nInst\u00e2ncias QC de 200 a 1000 nodos\n200nodos 300nodos 400nodos 500nodos 1000 nodos\nBAIgl B Alg2 B Alg3 B Alg4 B Alg5 BAIg6 B Alg7\nFigura 4.8: Tempos m\u00e9dios, em segundos, obtidos pelos algoritmos Lagrangeanos (inst\u00e2ncias QC).\nN\u00bb Nodos\tAlg1\tAlg2\tAlg3\tAlg4\tAlg5\tAlg6\tAlg7\n10\t0,005\t0,005\t0,002\t0,002\t0,002\t0,000\t0,000\n20\t0,000\t0,000\t0,006\t0,002\t0,002\t0,003\t0,002\n40\t0,006\t0,005\t0,012\t0,006\t0,006\t0,008\t0,006\n60\t0,011\t0,014\t0,020\t0,011\t0,018\t0,014\t0,015\n80\t0,015\t0,015\t0,036\t0,015\t0,024\t0,015\t0,021\n100\t0,026\t0,021\t0,064\t0,026\t0,028\t0,021\t0,029\n150\t0,037\t0,043\t0,120\t0,042\t0,066\t0,046\t0,045\n200\t0,043\t0,056\t0,231\t0,056\t0,091\t0,065\t0,062\n300\t0,087\t0,087\t0,465\t0,081\t0,165\t0,112\t0,118\n400\t0,127\t0,130\t0,649\t0,115\t0,260\t0,171\t0,174\n500\t0,190\t0,212\t1,254\t0,184\t0,429\t0,271\t0,283\n1000\t0,742\t0,801\t5,622\t0,689\t1,708\t1,076\t1,232\nTabela 4.15: Tempos medios, em segundos, obtidos pelos algoritmos Lagrangeanos (instancias QC).\nNA Nodos\tAlg1\tAlg2\tAlg3\tAlg4\tAlg5\tAlg6\tAlg7\n10\t0,010\t0,015\t0,005\t0,005\t0,004\t0,000\t0,000\n20\t0,000\t0,000\t0,008\t0,005\t0,001\t0,006\t0,005\n40\t0,008\t0,007\t0,006\t0,008\t0,002\t0,008\t0,008\n60\t0,007\t0,005\t0,008\t0,007\t0,002\t0,009\t0,000\n80\t0,007\t0,007\t0,007\t0,007\t0,004\t0,010\t0,008\n100\t0,008\t0,013\t0,016\t0,008\t0,010\t0,011\t0,011\n150\t0,018\t0,022\t0,013\t0,023\t0,021\t0,024\t0,014\n200\t0,013\t0,024\t0,026\t0,009\t0,010\t0,013\t0,011\n300\t0,008\t0,014\t0,039\t0,007\t0,015\t0,013\t0,021\n400\t0,007\t0,009\t0,148\t0,014\t0,015\t0,011\t0,007\n500\t0,006\t0,008\t0,193\t0,012\t0,016\t0,007\t0,006\n1000\t0,028\t0,014\t0,100\t0,034\t0,079\t0,036\t0,047\nTabela 4.16: Desvios padr\u00f5es dos tempos obtidos pelos algoritmos Lagrangeanos (instancias QC).\nOs Algoritmos Alg3 e Alg5 sao os que, em geral, demoram mais tempo. Quanto ao Algoritmo Alg3, vimos na Subsec\u00e7\u00e3o 4.5.2 que \u00e9 necess\u00e1rio escolher um valor de p adequado, este facto pode aumentar o tempo de execuc\u00e3o. Para explicar o motivo que leva o Algoritmo Alg5 a demorar mais tempo elabor\u00e1mos o gr\u00e1fico da Figura 4.9 que compara o numero m\u00e9dio de \u00e1rvores de suporte obtidas usando cada um dos Algoritmos Alg5 e Alg6.\nFigura 4.9: N\u00famero m\u00e9dio de \u00e1rvores de suporte obtidas pelos Algoritmos Alg5 e Alg6 nas inst\u00e2ncias\nQC.\nEm geral, o tempo de execu\u00e7\u00e3o do Algoritmo Alg6 \u00e9 inferior ao tempo de execuc\u00e3o do Algoritmo Alg5, o que \u00e1e facilmente explicado pelo facto do nu\u00e1mero m\u00e1edio de \u00e1arvores formadas ao longo da execu\u00e7c\u00e3ao do algoritmo diminuir para mais do que metade no Algoritmo Alg6 (Figura 4.9).\nInstancias Aleatorias\nAtraves da observac\u00f5o das Tabelas 4.17 e 4.18 conclui-se que, ao contrario do que acontecia para as inst\u00eaancias Quase Caminhos, neste grupo de inst\u00eaancias os Algoritmos Alg1 e Alg4, em geral, nao apresentam gaps muito elevados quer do limite superior quer da relaxa\u00e7c\u00f5ao Lagrangeana, quando comparados com os restantes algoritmos.\nOs Algoritmos Alg2, Alg5 e Alg6 determinam as mesmas solu\u00e7\u00f5es. Em rela\u00e7\u00f5o ao Algoritmo Alg3 podemos dizer que os GapR se aproximam dos GapR dos Algoritmos Alg2, Alg5 e Alg6 e os Gap^s s\u00f5o os piores de todos os algoritmos.\nNo grafico da Figura 4.10 podemos comparar os GapR do Algoritmo Alg7 com os do Algoritmo Alg6 (os Algoritmos Alg2 e Alg5 t\u00eam GapR igual ao Algoritmo Alg6).\n\u25a0 Alg6 IAlg7\nm ca\nNODOS\n\u25a0 Alg6 \u00abAlg7 m\nkD\n150\t200\t300\t400\t500\t1000\nNODOS\nFigura 4.10: Compara\u00e7\u00e3o dos GapR medios, em percentagem, entre os Algoritmos Alg6 e Alg7 nas inst\u00e2ncias R.\nO Algoritmo Alg7 e o que apresenta GapR mais baixo em todas as inst\u00eaancias Aleat\u00f3rias. Os GapLS s\u00f5o iguais em todas as inst\u00e2ncias.\n120\n\tAlg1\t\tAlg2\t\tAlg3\t\tAlg4\t\tAlg5\t\tAlg6\t\tAlg7\t\nN\u00bb Nodos\tGapR\tGapjRs\tGapR\tGapjRs\tGapR\tGapjRs\tGapR\tGapjRs\tGapR\tGapjRs\tGapR\tGapjRs\tGapR\tGapjRs\n10\t15,055\t3,840\t15,055\t3,840\t15,612\t7,713\t16,780\t3,840\t15,055\t3,840\t15,055\t3,840\t12,542\t3,840\n20\t4,196\t6,208\t4,079\t5,285\t7,304\t22,292\t6,350\t14,955\t4,079\t5,285\t4,079\t5,285\t3,477\t5,285\n40\t1,788\t2,743\t1,769\t2,743\t3,549\t8,828\t1,889\t2,743\t1,769\t2,743\t1,769\t2,743\t1,556\t2,743\n60\t0,622\t1,312\t0,589\t1,312\t0,818\t2,775\t0,622\t1,312\t0,589\t1,312\t0,589\t1,312\t0,529\t1,312\n80\t0,401\t1,505\t0,387\t1,505\t1,255\t5,343\t0,447\t2,242\t0,387\t1,505\t0,387\t1,505\t0,328\t1,505\n100\t0,072\t0,547\t0,069\t0,547\t0,250\t3,581\t0,070\t0,547\t0,069\t0,547\t0,069\t0,547\t0,054\t0,547\n150\t0,064\t0,787\t0,063\t0,787\t0,132\t2,068\t0,065\t0,787\t0,063\t0,787\t0,063\t0,787\t0,055\t0,787\n200\t0,044\t0,533\t0,040\t0,533\t0,299\t4,111\t0,046\t0,704\t0,040\t0,533\t0,040\t0,533\t0,034\t0,533\n300\t0,016\t0,567\t0,016\t0,567\t0,057\t1,811\t0,020\t0,713\t0,016\t0,567\t0,016\t0,567\t0,013\t0,567\n400\t0,003\t0,145\t0,003\t0,145\t0,030\t0,930\t0,004\t0,145\t0,003\t0,145\t0,003\t0,145\t0,003\t0,145\n500\t0,003\t0,220\t0,003\t0,220\t0,060\t1,445\t0,004\t0,275\t0,003\t0,220\t0,003\t0,220\t0,002\t0,220\n1000\t0,036\t0,143\t0,036\t0,071\t0,038\t0,303\t0,036\t0,143\t0,036\t0,071\t0,036\t0,071\t0,036\t0,117\nTabela 4.17: Gap m\u00e9dios, em percentagem, obtidos pelos algoritmos Lagrangeanos nas inst\u00e2ncias R.\n121\n\tAlg1\t\tAlg2\t\tAlg3\t\tAlg4\t\tAlg5\t\tAlg6\t\tAlg7\t\nN\u00bb Nodos\tGapR\tGapLs\tGapR\tGapjLs\tGapR\tGapjLs\tGapR\tGapjLs\tGapR\tGapjLs\tGapR\tGapjLs\tGapR\tGapjLs\n10\t4,034\t3,430\t4,034\t3,430\t3,950\t8,592\t3,811\t3,430\t4,034\t3,430\t4,034\t3,430\t3,685\t3,430\n20\t0,365\t4,670\t0,312\t5,006\t3,816\t28,414\t3,873\t17,027\t0,312\t5,006\t0,312\t5,006\t0,142\t5,006\n40\t0,183\t1,676\t0,182\t1,676\t3,073\t12,972\t0,267\t1,676\t0,182\t1,676\t0,182\t1,676\t0,209\t1,676\n60\t0,117\t1,074\t0,077\t1,074\t0,205\t3,226\t0,090\t1,074\t0,077\t1,074\t0,077\t1,074\t0,066\t1,074\n80\t0,029\t1,320\t0,037\t1,320\t1,862\t8,213\t0,077\t1,645\t0,037\t1,320\t0,037\t1,320\t0,034\t1,320\n100\t0,047\t0,264\t0,045\t0,264\t0,294\t3,901\t0,046\t0,264\t0,045\t0,264\t0,045\t0,264\t0,042\t0,264\n150\t0,035\t0,684\t0,035\t0,684\t0,123\t1,619\t0,036\t0,684\t0,035\t0,684\t0,035\t0,684\t0,034\t0,684\n200\t0,019\t0,379\t0,019\t0,379\t0,418\t5,374\t0,025\t0,515\t0,019\t0,379\t0,019\t0,379\t0,018\t0,379\n300\t0,001\t0,621\t0,001\t0,621\t0,043\t1,256\t0,005\t0,692\t0,001\t0,621\t0,001\t0,621\t0,002\t0,621\n400\t0,003\t0,098\t0,003\t0,098\t0,054\t1,417\t0,003\t0,098\t0,003\t0,098\t0,003\t0,098\t0,003\t0,098\n500\t0,002\t0,136\t0,002\t0,136\t0,106\t1,861\t0,002\t0,223\t0,002\t0,136\t0,002\t0,136\t0,002\t0,136\n10000\t0,046\t0,120\t0,046\t0,081\t0,046\t0,183\t0,046\t0,120\t0,046\t0,081\t0,046\t0,081\t0,046\t0,085\nTabela 4.18: Desvios Padr\u00f5es dos gap obtidos pelos algoritmos Lagrangeanos nas inst\u00e2ncias R.\nNo gr\u00e1fico da Figura 4.11 encontram-se representados os tempos m\u00e9dios, em segundos, de execuc\u00e1o dos varios algoritmos Lagrangeanos para as inst\u00e2ncias Aleat\u00f3rias. Estes tempos medios encontram-se registados na Tabela 4.19 e os correspondentes desvios padr\u00f5es na Tabela 4.20.\nI nst\u00e2ndas R de 10 a 150 nodos\n0,12\nBAIgl BAIg2 BAIg3 BAIg4 BAIgS \u25a0 Alg6 BAIg7\nI nst\u00e2ncias R de 200 a 1000 nodos\ns\ni\n\u25a0 Algl BAIg2 \u00bbAlg3 \u25a0 Alg4 BAIg5 \u00bbAlg6 BAlg7\nFigura 4.11: Tempos m\u00e9dios, em segundos, obtidos pelos algoritmos Lagrangeanos (inst\u00e2ncias R).\nEm rela\u00e7\u00e3o ao algoritmo que demora mais tempo na obten\u00e7\u00e3o das solu\u00e7\u00f5es aproximadas podemos observar atraves do grafico da Figura 4.11 dois comportamentos diferentes. Em inst\u00e2ncias com um numero de nodos inferior ou igual a 300, o Algoritmo Alg5 e o que apresenta maiores tempos medios de execucao, enquanto que para as restantes inst\u00e2ancias e o Algoritmo Alg3 que apresenta tempos mais elevados.\nE de notar que todos os algoritmos com exce\u00e7c\u00e3ao do Algoritmo Alg3 correm em menos do que 5 segundos. Se considerarmos apenas inst\u00e2ncias com menos de 200 nodos, estas correm, em media, em menos de 0,12 segundos.\nN\u00bb Nodos\tAlg1\tAlg2\tAlg3\tAlg4\tAlg5\tAlg6\tAlg7\n10\t0,000\t0,000\t0,000\t0,000\t0,001\t0,001\t0,001\n20\t0,000\t0,000\t0,000\t0,000\t0,003\t0,002\t0,002\n40\t0,003\t0,015\t0,006\t0,003\t0,012\t0,008\t0,006\n60\t0,009\t0,006\t0,003\t0,006\t0,020\t0,015\t0,016\n80\t0,012\t0,012\t0,015\t0,009\t0,034\t0,028\t0,024\n100\t0,021\t0,015\t0,034\t0,018\t0,060\t0,045\t0,031\n150\t0,037\t0,046\t0,078\t0,052\t0,114\t0,062\t0,095\n200\t0,078\t0,081\t0,190\t0,075\t0,205\t0,149\t0,121\n300\t0,208\t0,162\t0,315\t0,215\t0,463\t0,275\t0,303\n400\t0,318\t0,302\t1,120\t0,309\t0,699\t0,446\t0,436\n500\t0,502\t0,480\t1,812\t0,477\t1,101\t0,661\t0,686\n1000\t1,853\t1,828\t6,686\t1,922\t4,034\t2,405\t2,477\nTabela 4.19: Tempos m\u00e9dios, em segundos, obtidos pelos algoritmos Lagrangeanos (inst\u00e2ncias R).\nNA Nodos\tAlg1\tAlg2\tAlg3\tAlg4\tAlg5\tAlg6\tAlg7\n10\t0,000\t0,000\t0,000\t0,000\t0,001\t0,000\t0,000\n20\t0,000\t0,000\t0,000\t0,000\t0,001\t0,001\t0,001\n40\t0,007\t0,000\t0,008\t0,007\t0,005\t0,004\t0,001\n60\t0,008\t0,008\t0,007\t0,008\t0,003\t0,004\t0,005\n80\t0,007\t0,007\t0,000\t0,008\t0,004\t0,016\t0,007\n100\t0,009\t0,000\t0,013\t0,007\t0,032\t0,027\t0,007\n150\t0,008\t0,011\t0,019\t0,009\t0,029\t0,015\t0,078\n200\t0,000\t0,007\t0,102\t0,007\t0,087\t0,067\t0,043\n300\t0,067\t0,008\t0,243\t0,124\t0,100\t0,043\t0,120\n400\t0,052\t0,018\t0,349\t0,007\t0,101\t0,064\t0,055\n500\t0,063\t0,047\t1,048\t0,067\t0,062\t0,075\t0,073\n1000\t0,035\t0,063\t1,931\t0,147\t0,423\t0,074\t0,142\nTabela 4.20: Desvios padr\u00f5es dos tempos obtidos pelos algoritmos Lagrangeanos (inst\u00e2ncias R).\nPara justificar o motivo que leva o Algoritmo Alg5 a demorar mais tempo elabor\u00e1mos o gr\u00e1fico da Figura 4.12 que compara o nUmero m\u00e9dio de \u00e1rvores de suporte obtidas usando cada um dos Algoritmos Alg5 e Alg6.\nN\u00daMERO M\u00c9DIO DE \u00c1RVORES\n\u25a0 Alg5 BAIg6\nFigura 4.12: N\u00famero m\u00e9dio de \u00e1rvores de suporte obtidas pelos Algoritmos Alg5 e Alg6 nas inst\u00e2ncias R.\nTal como vimos para o caso do grupo de inst\u00e2ncias Quase Caminhos, neste grupo de inst\u00e2ncias tamb\u00e9m, em geral, o tempo de execu\u00e7\u00e3o do Algoritmo Alg6 \u00e9 inferior ao tempo de execu\u00e7ao do Algoritmo Alg5, o que \u00e9 facilmente explicado pelo facto do numero medio de arvores formadas ao longo da execucao do algoritmo diminuir para metade no Algoritmo Alg6 (Figura 4.12).\nNotamos que nas 2 inst\u00e2ncias de 1000 nodos do grupo de instancias Aleat\u00f3rias em que nao tinha sido poss\u00edvel encontrar um valor para o limite superior atraves do Procedimento P-WMTZ+C, com a aplica\u00e7ao dos varios algoritmos Lagrangeanos foi poss\u00edvel obter um valor para o limite superior para o custo.\nInstancias Euclideanas\nAtrav\u00e9s da observa\u00e7ao das Tabelas 4.21 e 4.22 conclui-se que ao contrario do que acontecia para as inst\u00e2ancias Quase Caminhos, neste grupo de inst\u00e2ancias os Algoritmos Alg1 e Alg4, em geral, na\u00f5o apresentam gaps muito elevados quer do limite superior quer da relaxac\u00e7\u00f5ao Lagrangeana quando comparados com os restantes algoritmos tal como se verificou no grupo de instancias Aleat\u00f3rias.\nOs Algoritmos Alg2, Alg5 e Alg6 determinam as mesmas solu\u00e7oes. Em rela\u00e7\u00f5o ao Algoritmo Alg3 podemos dizer que os GapR e GapLS se aproximam dos GapR e GapLS dos Algoritmos Alg2, Alg5 e Alg6.\nFigura 4.13: Compara\u00e7\u00f5o dos GapR medios, em percentagem, entre os Algoritmos Alg6 e Alg7 nas inst\u00e2ancias E.\nO Algoritmo Alg7 \u00e9 o que apresenta GapR mais baixo em todas as instancias Euclideanas. Os GapLS s\u00f5o iguais exceto numa inst\u00e2ncia de 1000 nodos (E1000-4) onde o gap do Algoritmo Alg6 \u00e9 mais baixo.\n126\n\tAlg1\t\tAlg2\t\tAlg3\t\tAlg4\t\tAlg5\t\tAlg6\t\tAlg7\t\nN\u00bb Nodos\tGapR\tGapjRs\tGapR\tGapjRs\tGapR\tGapjRs\tGapR\tGapjRs\tGapR\tGapjRs\tGapR\tGapjRs\tGapR\tGapjRs\n10\t9,035\t5,274\t9,035\t5,274\t9,039\t5,274\t10,816\t5,274\t9,035\t5,274\t9,035\t5,274\t7,237\t5,274\n20\t2,938\t2,250\t2,888\t2,250\t2,888\t2,250\t6,058\t11,323\t2,888\t2,250\t2,888\t2,250\t2,425\t2,250\n40\t0,894\t1,959\t0,894\t1,959\t0,894\t1,959\t0,969\t1,959\t0,894\t1,959\t0,894\t1,959\t0,758\t1,959\n60\t0,399\t0,890\t0,390\t0,747\t0,394\t0,747\t0,428\t1,039\t0,390\t0,747\t0,390\t0,747\t0,357\t0,747\n80\t0,239\t0,576\t0,231\t0,576\t0,232\t0,576\t0,239\t0,576\t0,231\t0,576\t0,231\t0,576\t0,209\t0,576\n100\t0,104\t0,706\t0,091\t0,563\t0,120\t1,378\t0,127\t1,480\t0,091\t0,563\t0,091\t0,563\t0,078\t0,563\n150\t0,043\t0,284\t0,040\t0,284\t0,058\t0,628\t0,041\t0,284\t0,040\t0,284\t0,040\t0,284\t0,035\t0,284\n200\t0,013\t0,402\t0,012\t0,402\t0,064\t1,416\t0,012\t0,402\t0,012\t0,402\t0,012\t0,402\t0,009\t0,402\n300\t0,011\t0,280\t0,011\t0,219\t0,014\t0,280\t0,012\t0,280\t0,011\t0,219\t0,011\t0,219\t0,009\t0,219\n400\t0,103\t0,000\t0,103\t0,000\t0,115\t0,500\t0,103\t0,000\t0,103\t0,000\t0,103\t0,000\t0,102\t0,000\n500\t0,106\t0,034\t0,106\t0,000\t0,114\t0,572\t0,106\t0,108\t0,106\t0,000\t0,106\t0,000\t0,105\t0,000\n1000\t0,046\t0,007\t0,046\t0,000\t0,052\t0,496\t0,046\t0,030\t0,046\t0,000\t0,046\t0,000\t0,046\t0,007\nTabela 4.21: Gap m\u00e9dios, em percentagem, obtidos pelos algoritmos Lagrangeanos nas instancias E.\n127\n\tAlg1\t\tAlg2\t\tAlg3\t\tAlg4\t\tAlg5\t\tAlg6\t\tAlg7\t\nN\u00bb Nodos\tGapR\tGapjRs\tGapR\tGapjRs\tGapR\tGapjRs\tGapR\tGapjRs\tGapR\tGapjRs\tGapR\tGapjRs\tGapR\tGapjRs\n10\t0,993\t3,493\t0,993\t3,493\t0,994\t3,493\t2,833\t3,493\t0,993\t3,493\t0,993\t3,493\t0,915\t3,493\n20\t0,610\t2,685\t0,640\t2,685\t0,640\t2,685\t2,726\t11,121\t0,640\t2,685\t0,640\t2,685\t0,459\t2,685\n40\t0,106\t0,390\t0,106\t0,390\t0,106\t0,390\t0,126\t0,390\t0,106\t0,390\t0,106\t0,390\t0,099\t0,390\n60\t0,056\t0,793\t0,059\t0,708\t0,060\t0,708\t0,094\t1,336\t0,059\t0,708\t0,059\t0,708\t0,066\t0,708\n80\t0,026\t0,428\t0,016\t0,428\t0,015\t0,428\t0,013\t0,428\t0,016\t0,428\t0,016\t0,428\t0,016\t0,428\n100\t0,049\t0,675\t0,029\t0,665\t0,040\t0,890\t0,076\t1,526\t0,029\t0,665\t0,029\t0,665\t0,027\t0,665\n150\t0,018\t0,194\t0,016\t0,194\t0,025\t0,578\t0,017\t0,194\t0,016\t0,194\t0,016\t0,194\t0,015\t0,194\n200\t0,008\t0,195\t0,007\t0,195\t0,069\t1,585\t0,007\t0,195\t0,007\t0,195\t0,007\t0,195\t0,006\t0,195\n300\t0,040\t0,156\t0,040\t0,187\t0,042\t0,156\t0,040\t0,156\t0,040\t0,187\t0,040\t0,187\t0,040\t0,187\n400\t0,115\t0,000\t0,115\t0,000\t0,120\t0,687\t0,115\t0,000\t0,115\t0,000\t0,115\t0,000\t0,115\t0,000\n500\t0,057\t0,076\t0,056\t0,000\t0,064\t0,497\t0,056\t0,242\t0,056\t0,000\t0,056\t0,000\t0,056\t0,000\n1000\t0,041\t0,016\t0,041\t0,000\t0,040\t0,439\t0,041\t0,050\t0,041\t0,000\t0,041\t0,000\t0,041\t0,016\nTabela 4.22: Desvios Padr\u00f5es dos gap obtidos pelos algoritmos Lagrangeanos nas inst\u00e2ncias E.\nNo grafico da Figura 4.14 encontram-se representados os tempos m\u00e9dios, em segundos, de execu\u00e7\u00e3o dos v\u00e9rios algoritmos Lagrangeanos para as instancias Euclideanas. Estes tempos m\u00e9dios encontram-se registados na Tabela 4.23 e os correspondentes desvios padr\u00e3oes na Tabela 4.24.\nInst\u00e2ncias E de 10 a 150 nodos\n1,4\n1,2 \u201e 1,0 w un 0,8\no\n\u00a3 0,6\nCD\n0,4\n0,2\n0,0\n\t\n\t\n\t\n\t\n\t\n1\t\n. 1 1\t\t_\u25a0\t\t!\n10 nodos 20 nodos 40 nodos 60 nodos 80 nodos 100 nodos 150 nodos\n\u25a0 Algl \"Alg2 \u25a0 Alg3 BAlg4 BAlg5 \"Alg6 BAlg7\nInst\u00e2ncias Ede 200 a 1000 nodos\nB\n\u25a0 Algl \u00abAlg2 BAlgS BAlg4 \u00abAlg5 BAIg\u00f5 \u25a0 Alg7\nFigura 4.14: Tempos m\u00e9dios, em segundos, obtidos pelos algoritmos Lagrangeanos (instancias E).\nN\u00bb Nodos\tAlg1\tAlg2\tAlg3\tAlg4\tAlg5\tAlg6\tAlg7\n10\t0,003\t0,003\t0,003\t0,000\t0,008\t0,003\t0,000\n20\t0,009\t0,000\t0,084\t0,003\t0,006\t0,001\t0,003\n40\t0,003\t0,003\t0,149\t0,006\t0,015\t0,010\t0,004\n60\t0,009\t0,006\t0,427\t0,012\t0,022\t0,022\t0,013\n80\t0,015\t0,031\t1,332\t0,015\t0,062\t0,022\t0,025\n100\t0,021\t0,025\t0,046\t0,018\t0,064\t0,033\t0,043\n150\t0,043\t0,053\t0,100\t0,052\t0,118\t0,107\t0,076\n200\t0,090\t0,078\t0,174\t0,128\t0,318\t0,200\t0,125\n300\t0,174\t0,258\t0,792\t0,230\t0,572\t0,336\t0,297\n400\t0,449\t0,408\t1,213\t0,387\t0,723\t0,528\t0,471\n500\t0,539\t0,596\t1,307\t0,617\t1,253\t0,684\t0,739\n1000\t2,084\t2,130\t7,531\t2,187\t4,234\t2,669\t2,722\nTabela 4.23: Tempos m\u00e9dios, em segundos, obtidos pelos algoritmos Lagrangeanos (inst\u00e2ncias E).\nN\u00bb Nodos\tAlg1\tAlg2\tAlg3\tAlg4\tAlg5\tAlg6\tAlg7\n10\t0,007\t0,007\t0,007\t0,000\t0,015\t0,004\t0,000\n20\t0,008\t0,000\t0,171\t0,007\t0,004\t0,001\t0,004\n40\t0,007\t0,007\t0,032\t0,008\t0,007\t0,006\t0,004\n60\t0,008\t0,008\t0,107\t0,007\t0,005\t0,013\t0,004\n80\t0,011\t0,035\t0,271\t0,000\t0,038\t0,002\t0,004\n100\t0,009\t0,009\t0,025\t0,007\t0,024\t0,006\t0,019\n150\t0,007\t0,014\t0,045\t0,014\t0,024\t0,060\t0,016\n200\t0,030\t0,000\t0,058\t0,094\t0,094\t0,089\t0,031\n300\t0,007\t0,099\t0,500\t0,074\t0,118\t0,091\t0,076\n400\t0,072\t0,086\t0,790\t0,071\t0,052\t0,133\t0,051\n500\t0,101\t0,093\t0,800\t0,106\t0,117\t0,056\t0,101\n1000\t0,085\t0,094\t2,808\t0,072\t0,120\t0,086\t0,066\nTabela 4.24: Desvios padr\u00f5es dos tempos obtidos pelos algoritmos Lagrangeanos (inst\u00e2ncias E).\nPara justificar o motivo que leva o Algoritmo Alg5 a demorar mais tempo elabor\u00e1mos o gr\u00e1fico da Figura 4.15 que compara o nUmero m\u00e9dio de \u00e1rvores de suporte obtidas usando cada um dos Algoritmos Alg5 e Alg6.\nFigura 4.15: N\u00famero m\u00e9dio de \u00e1rvores de suporte obtidas pelos Algoritmos Alg5 e Alg6 nas inst\u00e2ncias E.\nO tempo de execu\u00e7ao do Algoritmo Alg6 \u00e9 inferior ao tempo de execu\u00e7\u00e3o do Algoritmo Alg5 tal como ocorreu nos outros dois grupos de inst\u00e2ncias, o que se explica pelo nu\u00e1mero m\u00e1edio de \u00e1arvores obtidas no Algoritmo Alg5 ser mais do que o dobro do Algoritmo Alg6 (Figura 4.15).\n4.5.4\tS\u00edntese dos Resultados Computacionais\nOs resultados computacionais mostram que todos os algoritmos Lagrangeanos apresentados demoram menos de 13 segundos. Pelo que se conclui serem bastante r\u00e9apidos na obtenc\u00e7\u00e3ao do valor da relaxa\u00e7c\u00e3ao Lagrangeana e de um limite superior para o Problema WMST.\nOs Algoritmos Alg2, Alg5, Alg6 e Alg7 revelaram ser bastante eficientes em todos os grupos de inst\u00eaancias, pois com a aplica\u00e7c\u00e3ao destes algoritmos foram obtidas algumas solu\u00e7co\u00e3es \u00e9otimas e outras muito pro\u00e9ximas das solu\u00e7co\u00e3es \u00e9otimas. Destes o Algoritmo Alg5 tem a desvantagem de demorar mais tempo.\nOs valores obtidos pela relaxac\u00e7\u00e3ao Lagrangeana dos Algoritmos Alg2, Alg5 e Alg6 s\u00e3ao iguais aos da relaxa\u00e7\u00e3o linear do Procedimento P-WMTZ+C apresentado no Cap\u00edtulo 3. O Algoritmo Alg7 obt\u00e9m melhores valores da relaxac\u00e3o Lagrangeana comparativamente \u00e0 relaxa\u00e7\u00e3o linear do Procedimento P-WMTZ+C.\nA relaxa\u00e7\u00e3o Lagrangeana nos grupos de inst\u00eancias Aleat\u00f3rias e Euclideanas apresenta solu\u00e7c\u00e3oes mais pro\u00e9ximas da solu\u00e7c\u00e3ao \u00e9otima, enquanto que no grupo de inst\u00eaancias Quase Caminhos \u00e9 prefer\u00edvel encontrar um valor para o limite superior para o custo, pois este encontra-se mais pr\u00e9oximo do valor \u00e9otimo.\n132\nCap\u00edtulo 5\nDesigualdades V\u00e1lidas\nCom o prop\u00f3sito de fortalecer as formula\u00e7\u00f5es apresentadas no Cap\u00edtulo 3, neste cap\u00edtulo discutimos classes de desigualdades v\u00f3lidas para o Problema WMST. As desigualdades v\u00f3lidas podem ser incorporadas no modelo usando um algoritmo de planos de corte. Assim sendo \u00ede de interesse desenvolver classes de desigualdades v\u00edalidas fortes de modo a tornarem o algoritmo de planos de corte eficiente.\nNeste cap\u00edtulo come\u00e7amos por apresentar uma pequena introduc\u00f5o sobre desigualdades v\u00f3lidas, particularizando ao caso das desigualdades de saco-mochila. Na Sec\u00e7\u00f5o\n5.1\tfazemos uma abordagem as conhecidas Desigualdades de Cobertura para o Problema Saco-mochila Bin\u00f3rio adaptando-as para o caso do Problema WMST. Na Sec\u00e7\u00f5o\n5.2\tapresentamos novas desigualdades va\u00f3lidas que consideram simultaneamente a estrutura de \u00f3arvore de suporte e a estrutura de saco-mochila. Design\u00f3amos estas novas desigualdades por Desigualdades de Cobertura Impl\u00edcita. Tendo por base o processo usado para obter as conhecidas Desigualdades de Cobertura Estendidas, propomos na Secc\u00f5o 5.3 estender as Desigualdades de Cobertura Impl\u00edcita, formando as Desigualdades de Cobertura Impl\u00edcita Estendida. Na Sec\u00e7\u00f5o 5.4 fortalecemos as desigualdades das sec\u00e7c\u00f5oes anteriores usando a t\u00f3ecnica de levantamento de vari\u00f3aveis e apresentamos as Desigualdades de Cobertura Impl\u00edcita Levantada. Por fim, na Sec\u00e7\u00f5o 5.5 propomos uma generalizac\u00e7\u00f5ao das desigualdades que podem fortalecer ainda mais as formula\u00e7c\u00f5oes, sendo estas baseadas na fixa\u00e7\u00f5o de conjuntos de variaveis.\nDada uma desigualdade\nnx &lt;n0,\t(5.1)\ndiz-se que e valida para um conjunto XWMST \u00c7 RA se ela for verificada por todos os pontos x G XWMst .\nPara o caso do Problema WMST, o conjunto das solu\u00e7\u00f5es admiss\u00edveis XWMST, pode ser visto como a intersecao de dois conjuntos conhecidos: XWMST = XT n XK, onde XT \u00e9 o conjunto formado pelas \u00e1rvores de suporte e XK \u00e9 o conjunto saco-mochila binario definido pelos pontos x G R|A| tais que\nWijXij &lt;W,\t(5.2)\ne,\nxij G {0,1},\t(i,j) G A.\t(5.3)\nAs desigualdades v\u00e9lidas para XT e para XK s\u00f5o tamb\u00e9m v\u00e9lidas para XWMST. Enquanto que a descric\u00f5o poli\u00e9drica do inv\u00e9lucro convexo de XT, PT = conv(XT), \u00e9 bem conhecida (ver, por exemplo [45]), para a caracteriza\u00e7\u00f5o poli\u00e9drica do inv\u00e9lucro convexo dos conjuntos saco-mochila PK = conv(XK), so sao conhecidas descric\u00f5es parciais. Este poliedro, \u00e9 provavelmente, um dos poliedros que ocorre na Otimiza\u00e7ao Combinatoria mais estudado.\nTeoricamente as desigualdades validas mais fortes s\u00f5ao aquelas que definem facetas de PK. Seja,\nF = &lt;x G Pk :\tKj Xij = no\n[\t(i,j)eA\nA desigualdade (5.1) diz-se que define face de PK se satisfaz a igualdade do conjunto F (F = 0) e diz-se que define uma faceta de PK se define uma face de PK e se dim(F) = dim(PK) \u2014 1, onde dim(PK) e a dimensao de PK.\n5.1\tDesigualdades de Cobertura (DC)\nAs Desigualdades de Cobertura foram introduzidas independentemente por Balas [10], Hammer et al. [32] e Wolsey [62] no contexto do Problema Saco-mochila Bin\u00e9rio, mas podem ser aplicadas a qualquer Problema Linear Bina\u00e9rio.\nPara escrever o que se segue usamos as refer\u00eancias [10, 32, 62, 63]. Dado o conjunto E, constitu\u00eddo por todas as arestas do grafo G = (V, E) define-se uma cobertura do seguinte modo.\nDefini\u00e7\u00e3o 5.1. Cobertura\nO conjunto S C E \u00e9 uma Cobertura, se a soma dos pesos das arestas contidas em S for superior a W, ou seja, se se verificar a seguinte desigualdade\n> W.\neeS\nDefini\u00e7\u00e3o 5.2. Cobertura Minimal\nO conjunto S C E \u00e9 uma Cobertura Minimal, se ao removermos qualquer aresta f da Cobertura S, a soma dos pesos das restantes arestas contidas na cobertura for inferior ou igual a W, ou seja,\n&lt;W.\nees\\{/}\nProposi\u00e7ao 5.1.\nSe o conjunto S C E \u00e9e uma Cobertura ent\u00e3ao, a seguinte desigualdade\nxe &lt;|S| \u2014 1,\t(5.4)\neeS\n\u00e9 valida para o conjunto de solu\u00e7\u00f5es admiss\u00e9veis XWMST e \u00e9 chamada de Desigualdade de Cobertura (DC).\nA prova da proposi\u00e7ca\u00e3o anterior pode ser consultada em [63].\nSe considerarmos duas Coberturas S1 e S2 com S1 C S2, em que S1 e uma Cobertura Minimal, as correspondentes desigualdades de cobertura s\u00f5o dadas por\nJ2 Xe&lt;|S1|_ 1 e\t52 Xe &lt;|S2| _ 1.\neSSi\teSS2\nDado que S1 C S2 tambem se verifica que |S1| &lt;|S2| e assim a primeira desigualdade e mais forte do que a segunda. Note-se que a desigualdade eSS2 xe &lt;|S2| _ 1 pode ser obtida como a soma de ^2eSS\u00ed xe &lt;|S1| _ 1 com as desigualdades xe &lt;1, para todo e G S2\\S1. Portanto, tal como observado em [10, 32, 62], as desigualdades de cobertura s\u00f5ao mais fortes quando a cobertura considerada for a cobertura minimal.\nPara qualquer subconjunto S C E, |S| = s, considera-se\nPs = Corojz G {0,1}s ^2 wexe &lt;W\nl\teSS\nSe o conjunto S e uma Cobertura Minimal, ent\u00f5ao a desigualdade (5.4) define uma faceta de PS (ver, por exemplo, [10, 11, 32, 62]).\nExemplo 5.1.\nConsidere-se o Exemplo 2.1 de 5 nodos definido no Cap\u00e9tulo 2 onde o conjunto E = {{0,1}, {0, 2}, {0, 3}, {0, 4}, {1, 2}, {1, 3}, {1,4}, {2, 3}, {2, 4}, {3, 4}}.\nConsiderando, por exemplo, os seguintes conjuntos S1 = {{0, 1}, {0, 3}, {0, 4}, {1, 2}}, S2 = {{0,1},{0,4},{1, 2}, {3, 4}} e S3 = {{0,1},{0,4},{1,2}, {2, 3}}.\nO conjunto S1 \u00e9e uma Cobertura, pois a soma dos pesos das arestas do conjunto S1 \u00e9 maior do que 20 (w01 + w03 + w04 + w12 = 6 + 8 + 7 + 6 = 27 > 20), mas n\u00f5o \u00e9e uma Cobertura Minimal dado que se removermos a aresta {1, 2} da Cobertura S1 a soma dos pesos das restantes arestas contidas na cobertura n\u00f5ao \u00e9e inferior ou igual a 20 (w01 + w03 + w04 = 6 + 8 + 7 = 21 > 20). Assim, x01 + x03 + x04 + x12 &lt;3 \u00e9 uma Desigualdade de Cobertura, onde a Cobertura S1 n\u00f5ao \u00e9e minimal.\nOs conjuntos S2 e S3 sa\u00f5o tamb\u00e9em Coberturas. A soma dos pesos das arestas do conjunto S2 \u00e9 w01 + w04 + w12 + w34 = 6 + 7 + 6 + 5 = 24 > 20 e para o conjunto S3 \u00e9 w01 + w04 + w12 + w23 = 6 + 7 + 6 + 4 = 23 > 20. Em ambas as Coberturas S2 e S3 se removermos qualquer aresta, a soma dos pesos das restantes arestas da cobertura sera\u00e9 menor do que 20, logo ambos os conjuntos S2 e S3 s\u00f5ao Coberturas Minimais.\nPor conseguinte, dado que S2 e S3 s\u00e3o Coberturas Minimais, podemos construir as seguintes Desigualdades de Cobertura\nXoi + X04 + Xi2 + X34 &lt;3 e\tX01 + X04 + X12 + X23 &lt;3,\t(5-5)\nque s\u00e3o v\u00e1lidas no conjunto das solu\u00e7\u00f5es admiss\u00edveis XWMST-\nAs coberturas podem assim incluir v\u00e1rias combinac\u00e3es de vari\u00e1veis, contudo algumas coberturas nao cortam a solu\u00e7\u00e3o fracion\u00e1ria- Por exemplo, as desigualdades formadas pelas Coberturas S1 e S3 n\u00e3o cortam a solucao da relaxac\u00e3o linear dada no Exemplo 3-2, isto \u00e1, se substituirmos nas desigualdades (5-5) o valor das variaveis da relaxacao linear obtemos 3 &lt;3 e 2,2 &lt;3, respetivamente, sendo 3 o valor do segundo membro das desigualdades, pelo que estas coberturas n\u00e3ao cortam a soluc\u00e7\u00e3ao da relaxa\u00e7c\u00e3ao linear-\nNote-se que, com as arestas de cada uma das tr\u00eas coberturas apresentadas no Exemplo 5-1, \u00e9 poss\u00e1vel formar tr\u00eas arvores de suporte diferentes, mas como se pode ver no Exemplo 5-2 a seguir, nem sempre \u00e1e poss\u00e1vel formar uma \u00e1arvore de suporte com as arestas de uma cobertura-\nExemplo 5.2.\nUsando novamente o Exemplo 2-1 de 5 nodos podemos considerar a Cobertura S4 = {{0,1}, {0, 3}, {0, 4}, {3, 4}} (para o qual w01 + w03 + w04 + w34 = 6 + 8 + 7 + 5 = 26 > 20)- Se representarmos num grafo estas arestas, podemos observar na Figura 5-1 que as arestas da Cobertura S4 na\u00e3o formam uma \u00e1arvore de suporte-\n\t\u00ed -\t1\t9\t8 -\t1\t15\t7 16\t\nC =\t\t- 30\t16\t\n\t\t-\t10\t\n\t1\t\t-\t\nFigura 5-1: Representa\u00e7\u00e3o das arestas da Cobertura S4 no grafo.\nCom o ob jetivo de tornar as desigualdades de cobertura mais fortes, vamos introduzir uma nova classe de desigualdades v\u00e9alidas que toma em considerac\u00e7\u00e3ao propriedades dos conjuntos PT e PK simultaneamente. Para obter a nova classe de desigualdades vamos associar as desigualdades de cobertura alguma informa\u00e7\u00e3o proveniente da estrutura em a\u00e9rvore.\nDeflni\u00e7\u00e3o 5.3. Cobertura Impl\u00edcita\nA um conjunto S C E, tal que as arestas de S n\u00e3o formam ciclos, chama-se Cobertura Impl\u00e9cita (CI) se para cada arvore de suporte T = (V, ET) tal que S C ET se verifica a seguinte desigualdade\nW (T) =\tWe >W.\nPara verificar se o conjunto S define uma CI, consideramos as arestas do conjunto S e, sucessivamente, adicionamos arestas de E\\S at\u00e9 formarmos uma \u00e9rvore de suporte de peso m\u00e9nimo, T. No caso da arvore de suporte T, que cont\u00e9m as arestas de S, n\u00e3o verificar a restri\u00e7ao de peso, ent\u00e3o o conjunto S \u00e9 uma CI. Note-se que usamos a \u00e9rvore T apenas para validar a Cobertura Impl\u00e9cita S.\nDefini\u00e7\u00e3o 5.4. Cobertura Impl\u00edcita Minimal\nO conjunto S C E, tal que as arestas de S n\u00e3o formam ciclos, \u00e9 uma Cobertura Impl\u00edcita Minimal, se ao removermos qualquer aresta f da Cobertura Impl\u00e9cita S, o peso da arvore de menor peso que cont\u00e9m as arestas de S \\ {f} for inferior ou igual a W, ou seja,\nWe &lt;W.\neeEr\\{f }\nAs Desigualdades de Cobertura Impl\u00edcita generalizam as conhecidas Desigualdades de Cobertura, nos casos em que as coberturas n\u00e3ao formam ciclos.\nProposicao 5.2.\nSe o conjunto S G E \u00e9 uma CI, entao a desigualdade\n&lt;|S| - 1,\t(5.6)\neeS\n\u00e9 valida para o conjunto de solu\u00e7\u00e3es admiss\u00e9veis Xwmst e \u00e9 chamada de Desigualdade de Cobertura Impl\u00e9cita (DCI).\nDemonstra\u00e7\u00e3o.\nSuponhamos que x* 6 Xwmst \u00e9 uma solu\u00e7ao que corresponde a uma arvore de suporte Tq (x* = 1 se j 6 Q e x* = 0 se j 6 Q) e nao satisfaz a DCI, ent\u00e3o temos de mostrar que x* / Xwmst.\nSe x* n\u00e3o satisfaz a DCI, ent\u00e3o VegSx* > |S|, logo |Q Gl S| = |S| e assim S G Q. Como S \u00e9e uma CI, ent\u00e3ao para validar a Cobertura Impl\u00e9cita S foi utilizada uma \u00e9arvore de suporte de peso m\u00e9nimo, T, tal que S G ET.\nComo\tegQ w*x* = 12eQ w*\te Et w* > W e assim x* / Xwmst.\n\u25a1\nQuando S \u00e9 uma CI com um unico elemento, S = {e}, a DCI correspondente \u00f3 simplesmente xe = 0. Estas desigualdades particulares podem ser usadas num procedimento inicial de preprocessamento para reduzir o tamanho do modelo.\nExemplo 5.3.\nNo Exemplo 2.1 podemos considerar o conjunto S = {{0,1}, {0, 4}, {1, 2}}, cuja \u00f3rvore correspondente est\u00f3 representada pelas arestas a vermelho na Figura 5.2, onde podemos observar que as arestas de S n\u00f5o formam ciclos. Podemos adicionar a \u00f3rvore a aresta de peso m\u00ednimo {1,3}. Desta forma completamos a \u00f3rvore, obtendo a \u00f3rvore de suporte T, onde ET = {{0,1}, {0, 4}, {1, 2}, {1, 3}} que corresponde a uma solucao n\u00f5o admiss\u00edvel com peso 21. Dado que o peso da arvore \u00f3 21 > 20, o conjunto S \u00f3\numa CI. Se removermos qualquer aresta de S, o peso da \u00e1rvore resultante \u00e9 inferior a W = 20 e portanto o conjunto S define uma Cobertura Impl\u00e9cita Minimal.\nC =\n-1\n8\t7\t\\\n15\t16\t\n30\t16\t\n-\t10\t\n\t-\t/\n( -\t1\t9\nFigura 5.2: Arvore de suporte com custo 24 e peso 21.\nAssim, usando as arestas do conjunto S podemos construir a seguinte DCI\nXoi + X04 + Xi2 &lt;2\t(5.7)\nv\u00e9lida para o conjunto XWMST das solucoes admiss\u00e9veis. Se considerarmos a solu\u00e7\u00e3o da relaxac\u00e3o linear dada no Exemplo 3.2 verificamos que esta desigualdade corta a solu\u00e7ao fracion\u00e9ria (2,2 > 2).\nCompara\u00e7\u00e3o entre DC e DCI\nDe seguida apresentamos um exemplo para mostrar as diferen\u00e7cas existentes entre a Desigualdade de Cobertura e a Desigualdade de Cobertura Impl\u00e9cita.\nDC:\nDCI:\nXoi + X04 + X12 + X34 &lt;3.\nX01 + X04 + X12 &lt;2.\nFigura 5.3: Desigualdade de Cobertura e Desigualdade de Cobertura Impl\u00edcita.\nNa Figura 5.3 podemos observar que nas DCIs apenas usamos a estrutura de \u00e9rvore para validar a cobertura, n\u00e3ao sendo o conjunto S constitu\u00e9do por todas as arestas da \u00e9arvore de suporte , enquanto que nas DCs o conjunto S pode ou na\u00e3o ser formado pelo conjunto de arestas da \u00e9rvore de suporte (no Exemplo 5.2 podemos ver que a cobertura a\u00e9 considerada nao era formada pelo conjunto de arestas da \u00e9rvore de suporte). Ambas as coberturas representadas s\u00e3o minimais, a DCI \u00e9 mais forte do que a DC, pois a desigualdade (5.7) e x34 &lt;1 implicam a desigualdade x01 + x04 + x12 + x34 &lt;3 obtida atrav\u00e9s da Cobertura S2 no Exemplo 5.1. Com este exemplo, constatamos que a estrutura em \u00e9arvore \u00e9e importante na constru\u00e7ca\u00e3o de desigualdades v\u00e9alidas, permitindo a obten\u00e7ca\u00e3o de desigualdades mais fortes que as desigualdades de cobertura.\n5.3\tDesigualdades de Cobertura Impl\u00edcita Estendida (DCIE)\nSegundo Balas [10] podemos obter desigualdades mais fortes se estendermos as desigualdades de cobertura. De modo semelhante podemos tamb\u00e9m obter desigualdades mais fortes se estendermos as desigualdades de cobertura impl\u00edcita.\nO seguinte resultado, pode ser consultado em [10, 62, 63], sendo a prova an\u00e9loga a da Proposic\u00e3o 5.1 (ver [63]).\nProposi\u00e7\u00e3o 5.3.\nSeja S C E uma Cobertura e seja\nS'\te G E \\ S : we > max{wf : f G S} j>.\nA seguinte desigualdade\ny^Xe +\tXe &lt;|S| - 1\neeS\teeS'\n\u00e9 valida para o conjunto de solu\u00e7\u00e3es admiss\u00e9veis XWmst e \u00e9 chamada de Desigualdade de Cobertura Estendida (DCE).\nO facto de estas desigualdades serem validas para XWMST e dominarem (se S1 = 0) as desigualdades de cobertura n\u00e3ao garante que definam facetas.\nHa que ter aten\u00e7\u00e3o \u00e0 forma de realizar a extens\u00e3o, pois uma extensao da DCI pode conduzir a desigualdades n\u00e3ao validas tal como podemos observar no seguinte exemplo.\nExemplo 5.4.\nNeste exemplo as matrizes de pesos e custos sa\u00e3o dadas por:\n\t( - 6\t7\t8\t7 A\t\t-\t1\t9\t8\t7\n\t- 6 2 2\t\t-\t1\t15 16\nH =\t- 4\t5\te\tC =\t- 30 16\n\t- 5\t\t- 10\n--\nO exemplo apresentado foi adaptado do Exemplo 2.1, com uma unica altera\u00e7\u00e3o na matriz de pesos, o peso da aresta {0, 2} alterou para w02 = 7. A solu\u00e7ao da relaxa\u00e7ao linear e a solu\u00e7\u00e3o otima n\u00e3o sofrem alterac\u00e3o (ver Exemplos 3.2 e 2.1, respetivamente).\nConsidere-se a DCI, x12+x24+x34 &lt;2. Seja 0 = max{w12, w24, w34} = max{6, 5,5} = 6 e como w01 = 6 > 0,w04 = 7 > 0, w02 = 7 > 0 e w03 = 8 > 0, o conjunto S1 = {{0,1}, {0, 2}, {0, 3}, {0, 4}}. Logo, a desigualdade obtida e dada por\nX12 + X24 + X34 + X01 + X02 + X03 + X04 &lt;2,\nque e uma desigualdade n\u00e3ao valida. Tal acontece pois, por exemplo, a solu\u00e7c\u00e3ao otima desta instencia do problema corresponde \u00e0 arvore de suporte da Figura 2.2. Esta arvore n\u00e3o verifica a desigualdade acima, pois para esta arvore teremos x12 + x24 + x34 + x01 + x02 + x03 + x04 =1+0+1+1+0+0+0=3 > 2, sendo 2 o valor do segundo membro da desigualdade.\nA extensao que \u00e9 efetuada das desigualdades de cobertura \u00e9 baseada apenas nos valores dos pesos das arestas. Para estender as desigualdades de cobertura impl\u00edcita, vamos ter de considerar na\u00e3o s\u00e9o os pesos das arestas mas, tamb\u00e9em, a informa\u00e7c\u00e3ao relativa \u00e0 estrutura de arvore. Notamos que, mais uma vez, \u00e9 necessario usar informac\u00e3o relativa \u00e0 estrutura da arvore para desenvolver desigualdades validas para este problema.\nProposi\u00e7ao 5.4.\nSeja S C E uma CI e seja\nS'\te G E \\ S : we > max{wf : f G S} e as arestas de S U {e} formam ciclo j>.\nA Desigualdade de Cobertura Impl\u00edcita Estendida (DCIE)\ny^Xe + Xe &lt;|S| \u2014 1\neeS\teeS'\n\u00e9 valida para o conjunto de soluc\u00f5es admiss\u00e9veis Xwmst.\nDemonstra\u00e7\u00e3o.\nSuponhamos que existem conjuntos S e S' nas condic\u00f5es dadas na Proposic\u00f5o 5.4. Seja x* G XWMST uma solu\u00e7\u00f5o que corresponde a uma arvore de suporte, T, e que nao satisfaz a DCIE, isto \u00e9,\ny^ Xe + y^ Xe > |S|.\neeS\teeS'\nSeja S = {j G S : x* = 1} e S' = {j G S' : x* = 1}. Entao V,. S S- x* = |\u00a3| + |S'|. Por constru\u00e7ao do conjunto S', na solucao x* a soma de vari\u00e1veis fixas a um (nos conjuntos S e S') nao pode exceder |S| e, portanto, |S + |S'| = |S|. Seja ainda Et = {j G E : x* = 1} o conjunto de arestas da arvore T que nao satisfaz a DCIE e R = Et\\(S U S'). Considere-se o grafo conexo S U T. Como S G S e os elementos de S formam ciclos com os elementos de S, a \u00e9rvore de suporte deste grafo que cont\u00e9m o conjunto S\u00e9 T' tal que ET/ = S U R e\n12 wjxj = H wj >22 wj > W\nj.E\tj.SuS^UR\tj.SuR\nonde a primeira desigualdade resulta de |S?| + |S' | = |S| e da definicao dos pesos de S' e a segunda desigualdade resulta da suposi\u00e7\u00f5o de que S e uma CI. Logo x* G XWMST, o que contradiz a suposic\u00e7\u00f5ao inicial.\n\u25a1\nVamos tentar estender a DCI x01 + x04 + x12 &lt;2 obtida no Exemplo 5.3. Se considerarmos as arestas que formam ciclo com as arestas da CI, ou seja, as arestas {1,4}, {0, 2} e {2,4} (ver Figura 5.4) nenhuma tem peso superior a 7 (sendo 7 = max{w01, w04, w12}) pelo que n\u00f5o e possiVel obter uma DCIE para este exemplo.\n6\nFigura 5.4: Ciclos formados com as arestas da Cobertura Impl\u00edcita S do Exemplo 5.3 .\nAssim, quando o conjunto S1 = 0, temos apenas uma DCI. De seguida apresentamos um exemplo em que S' = 0.\nExemplo 5.5.\nConsidere-se o Exemplo 5.4 e a DCI, x01 + x04 + x12 &lt;2. A aresta {0, 2} forma ciclo com as arestas da CI e w02 = max{w01, w04, w12} = 7, logo S' = {{0, 2}}. Incluindo esta vari\u00e1vel correspondente a esta aresta na DCI obtemos a DCIE\nX01 + X04 + X12 + Xo2 &lt;2,\nque \u00e1 v\u00e1lida para o conjunto XWMST das solu\u00e7\u00f5es admiss\u00e1veis.\n5.4\tDesigualdades de Cobertura Impl\u00edcita Levantada (DCIL)\nAs desigualdades discutidas nas tr\u00eas sec\u00e7\u00f5es anteriores podem ser fortalecidas atrav\u00e1s da aplicac\u00f5o de uma t\u00e1cnica designada por levantamento (lifting). Este processo \u00e1 efetuado por introduc\u00f5o de novas vari\u00e1veis na desigualdade ou pela modificacao de coeficientes existentes na desigualdade que permitam fortalecer a desigualdade. Gomory [22] foi o primeiro a utilizar a t\u00e1cnica de levantamento.\nAo adicionarmos vari\u00e1veis ao lado esquerdo da desigualdade de cobertura impl\u00edcita obtem-se a chamada Desigualdade de Cobertura Impl\u00e1cita Levantada.\nDefini\u00e7\u00e3o 5.5. Desigualdade de Cobertura Impl\u00edcita Levantada\nDada uma DCI egSXe &lt;|S| \u2014 1, a seguinte desigualdade v\u00e1lida\nXe +\tPeXe &lt;|S| \u2014 1,\negS\tegE\\S\ncom e > 0, para todas as arestas e G E \\ S, \u00e9 chamada de Desigualdade de Cobertura Impl\u00edcita Levantada (DCIL).\nAs Desigualdades de Cobertura Impl\u00edcita Estendida, abordadas na secc\u00e3o anterior, s\u00e3o casos particulares das Desigualdades de Cobertura Impl\u00edcita Levantada em que apenas efetuamos o levantamento de algumas vari\u00e9veis, tendo essas vari\u00e9veis coeficiente um.\nPara incluir outras variaveis na desigualdade v\u00e9lida com o objetivo de a fortalecer, podem ser encontradas na literatura duas t\u00e9cnicas: a t\u00e9cnica de levantamento sequencial de vari\u00e1veis e a t\u00e9cnica de levantamento simultaneo de variaveis. Nesta tese apenas se aborda a t\u00e9cnica de levantamento sequencial onde os coeficientes >, s\u00e3o introduzidos um a um de forma sequencial e sendo a sequ\u00eancia de levantamento das variaveis pr\u00e9e-estabelecida.\nVamos de seguida ver como determinar os coeficientes das vari\u00e1veis a efetuar levantamento.\nDada a DCI ^egSxe &lt;|S| \u2014 1 e a DCIL ^egSxe + ^egR fieXe &lt;|S| \u2014 1, onde R Q E \\ (S U {f}) \u00e9 o conjunto de vari\u00e9veis que j\u00e9 foram sujeitas a levantamento, podemos fazer o levantamento da variavel Xf, com f G E \\ (S U R), calculando o coeficiente fif tal que 0 &lt;fif &lt;g(S, R,fi), onde\ng(S, R, fi)\t= min &lt;|S|\t\u2014 1 \u2014 ^2 Xe\t22 ^Xe\t: x G Xwmst, Xf =\t1 > .\t(5.8)\nl\tegS\tegR\t)\nCaso o problema de minimiza\u00e7\u00e3o seja inadmiss\u00edvel atribuiremos a g(S, R, ) o valor zero.\nProposi\u00e7\u00e3o 5.5.\nDada a DCI ^2e&amp;s xe &lt;|S| \u2014 1 e a DCIL\tees xe + Px &lt;|SI - 1, onde\nR \u00c7 E \\ (SU{f}) e o conjunto de variaveis que ja foram sujeitas a levantamento, ent\u00e3o\n^Xe +\tfieXe + Pf Xf &lt;|S| \u2014 1,\t(5.9)\nees\teeR\ne valida para o conjunto das soluc\u00e3es admiss\u00e9veis Xwmst se Pf &lt;g(S, R,P). Demonstra\u00e7\u00e3o.\nSe Xf = 0, temos que a desigualdade (5.9) e a DCIL que \u00e9 valida para o conjunto das solu\u00e7oes admiss\u00e9veis XWMST. No caso em que Xf = 1 na desigualdade (5.9) ficamos com\nPf &lt;|S| \u2014 1 \u2014\tXe \u2014 ^2\nees\teeR\npelo que a sua validade para o conjunto das solu\u00e7\u00e3es admiss\u00e9veis Xwmst resulta da pr\u00e9pria defini\u00e7\u00e3o da fun\u00e7ao g(S, R,P).\n\u25a1\nExemplo 5.6.\nConsideremos a DCI x01 + x04 + x12 &lt;2 obtida no Exemplo 5.3. Para fazer o levantamento da vari\u00e9vel x03 calcula-se o seu coeficiente P03 da seguinte forma:\nP03 = min{2 \u2014 Xoi \u2014 X04 \u2014 X12 : X G Xwmst,Xo3 = 1} = 1.\nUsando o levantamento sequencial exato para o c\u00e9lculo dos restantes coeficientes verificamos que estes s\u00e3ao todos nulos. A Desigualdade de Cobertura Impl\u00e9cita Levantada \u00e9e dada por:\nX01 + X04 + X12 + x03 &lt;2.\nProposi\u00e7\u00e3o 5.6.\nSe Pe e inteiro para todo e G R, entao g(S, R, P) em 5.8 \u00e9 inteiro.\nDemonstra\u00e7\u00e3o.\nAdmitamos que o conjunto das solu\u00e7\u00e3es admiss\u00e1veis do problema de minimiza\u00e7\u00e3o considerado em 5-8 n\u00e3o \u00e1 vazio- Se as vari\u00e1veis desse problema s\u00e3o bin\u00e1rias (inteiras) e os coeficientes da fun\u00e7ao objetivo, os valores dos fie,e G R, sao inteiros, ent\u00e3o o seu valor o\u00e1timo tem de ser inteiro-\n\u25a1\nNote-se que diferentes sequ\u00eaencias de levantamento de vari\u00e1aveis podem produzir diferentes DCILs- Tal tamb\u00e1m se verifica com as Desigualdades de Cobertura Levantadas (ver Balas [10] e Wolsey [62])-\nExemplo 5.7.\nNeste exemplo as matrizes de pesos e custos s\u00e3ao dadas por:\n\t( -\t7\t7\t5\t5 A\t\t( - 1\t9\t8\t7 \\\n\t- 5\t8\t5\t\t-\t1\t15 16\nH =\t- 6\t7\te\tC =\t- 30 16\n\t- 5\t\t- 10\n\\ - / \\ - /\nConsideremos W = 20 e a DCI, x01 + x02 + x03 &lt;2- Se pretendermos efetuar o levantamento das vari\u00e1veis x04 e x12, o calculo dos seus coeficientes pode ser efetuado segundo duas sequ\u00eaencias diferentes- Podemos calcular primeiro o coeficiente da vari\u00e1avel x04 e depois o da variavel x12 e fazemos,\n^04 = min{2 - X01 - X02 - X03 : x G Xwmst, X04 = 1} = 1.\n^12 = min{2 - X01 - X02 - X03 - X04 : x G Xwmst, X12 = 1} = 0.\nDeste modo obt\u00e1em-se a seguinte DCIL\nx01 + x02 + x03 + x04 &lt;2-\nSe calcularmos primeiro o coeficiente da variavel x12 e depois o da vari\u00e1vel x04 fazemos,\n^12 = min{2 - xoi - X02 - X03 : x G Xwmst, X12 = 1} = 1.\nv, = min{2 - xoi - X02 - X03 - X12 : x G Xwmst, Xo4 = 1} = 0.\nUsando esta segunda sequ\u00eancia obtemos a DCIL\nx01 + x02 + x03 + x 12 &lt;2-\nVerificamos assim que utilizando diferentes sequ\u00eancias de levantamento de vari\u00e1veis \u00e1 poss\u00edvel obter diferentes Desigualdades de Cobertura Impl\u00edcita Levantada.\nGerar DCILs usando o levantamento sequencial exato envolve a resolu\u00e7\u00e3o de muitos subproblemas o que pode ser computacionalmente dispendioso. Entao, uma quest\u00e3o que surge \u00e9 como calcular os coeficientes >, de tal forma que nao se torne computacionalmente dispendioso, ou seja, procuram-se m\u00e9todos mais r\u00e1pidos e simples pois, o c\u00e9alculo de forma eficiente de coeficientes \u00e9e um elemento crucial para o uso com sucesso de DCILs.\nObservemos que em vez de obter o valor \u00e1timo de g(S,R,fi) podemos usar uma relaxa\u00e7\u00e3o de g(S, R, ^). Testamos duas relaxa\u00e7\u00e3es, a relaxa\u00e7\u00e3o linear e a relaxa\u00e7ao La-grangeana onde o conjunto Xwmst \u00e9 substitu\u00eddo pelo conjunto de solucoes admiss\u00edveis da sua relaxac\u00e3o linear, XL:\ngL(S, R,fi) = min &lt;|S| - 1 - y^ xe - y^ \u00a1xe : x G XL, xf = 1\nl\tegS\teSf\u00ed\nCaso o problema de minimiza\u00e7\u00e3o seja inadmiss\u00edvel atribuiremos a g(S, R, ) o valor zero.\nDe testes computacionais realizados com os grupos de instancias Quase Caminhos, Aleat\u00e1rias e Euclideanas verific\u00e1mos que o uso da relaxacao linear para determinar os coeficientes de forma sequencial torna-se bastante lento. Deste modo, no Cap\u00e1tulo 6 vamos apresentar um algoritmo heur\u00edstico para o c\u00e1lculo dos coeficientes de levantamento usual, down-lifting e up-lifting baseado em relaxa\u00e7\u00e3o Lagrangeana.\nExemplo 5.8.\nDada a DCI x01 + x04 + x12 &lt;2 obtida no Exemplo 5.3. Podemos efetuar o levantamento das variaveis usando o levantamento sequencial aproximado baseado na relaxa\u00e7\u00f5o linear ou na relaxa\u00e7\u00f5o Lagrangeana. O coeficiente ^03 e obtido da seguinte forma:\n^03 = min{2 _ x04 _ #01 _ ^12 : x G XL, x03 = 1} = 0,5\ne os restantes coeficientes s\u00f5o todos nulos. Assim, a DCIL \u00e9 dada por:\nx01 + x04 + x12 + 0,5x03 &lt;2.\nSe arredondarmos o valor do coeficiente da variavel x03 para 1, usando a Proposic\u00e7\u00f5ao 5.6, obtemos a mesma desigualdade que obtivemos usando o levantamento sequencial exato (ver Exemplo 5.6).\n5.5\tDesigualdades obtidas por Fixa\u00e7\u00e3o de Vari\u00e1veis\nQuando se introduzem desigualdades levantadas na\u00f5o existem conjuntos de variaveis fixas \u00e0 priori. Contudo, podem ser criadas novas classes de desigualdades de levantamento generalizadas derivadas do procedimento usual de levantamento, onde o levantamento das variaveis \u00e9 efetuado fixando \u00e0 priori o valor de conjuntos de variaveis. Nesta tese utilizamos tr\u00e2es estrategias diferentes de fixac\u00e7a\u00f5o de variaveis que originam tr\u00e2es tipos de desigualdades. Na primeira come\u00e7camos por fixar apenas um conjunto de variaveis a um, na segunda apenas um conjunto de variaveis a zero e por ultimo fixamos dois conjuntos de variaveis em simult\u00e2aneo, um conjunto de variaveis fixas a zero e um conjunto de variaveis fixas a um. Uma questao importante \u00e9 a escolha do conjunto ou conjuntos de variaveis a fixar \u00e0 priori.\n5.5.1\tDesigualdades de Cobertura Impl\u00edcita Levantada por Down-Lifting (DCILDL)\nPara obter Desigualdades de Cobertura Impl\u00edcita Levantada atrav\u00e9s do designado Down-Lifting \u00e9 necess\u00e9rio come\u00e7ar por fixar um conjunto de vari\u00e9veis a um. Designamos por Ei o conjunto de vari\u00e9veis a fixar a um e por XE1 o conjunto restrito definido da seguinte forma\nXEi = Xwmst n {x : Xf = 1, f G Ei} ,\nonde as variaveis f G Ei encontram-se fixas a um, Xf = 1. Notamos que o conjunto X E\n\u00e9 uma restricao do conjunto XWMST.\nDe seguida vamos definir uma cobertura impl\u00e9cita para o conjunto restrito XE1. Vamos assumir XE1 = 0.\nDefini\u00e7\u00e3o 5.6. Cobertura Impl\u00edcita para o conjunto restrito XE1\nO conjunto S G E\\E1, cujas arestas de SUE1 nao formam ciclos, \u00e9 uma Cobertura Impl\u00edcita para o conjunto restrito XE1, se para cada \u00e9rvore de suporte T = (V, ET) tal que S G Et e E1 G ET se verifica a seguinte desigualdade\nW (T) =\twe >W.\nPara verificar que S G E \\ E1 \u00e9 uma CI para o conjunto restrito XE1, constru\u00edmos uma sub-a\u00e9rvore com as arestas do conjunto S e com as arestas do conjunto E1, e sucessivamente, adicionamos arestas de Ef = E\\(S U E1) \u00e0 sub-\u00e9rvore at\u00e9 formarmos uma \u00e9rvore de suporte de peso m\u00ednimo, T, contendo as arestas dos conjuntos S e E1. No caso da a\u00e9rvore de suporte T, n\u00f5ao verificar a restric\u00e7\u00f5ao de peso, ent\u00f5ao S \u00e9e uma CI para o conjunto restrito XE1.\nProposi\u00e7\u00e3o 5.7.\nSe S C E \\ E1 \u00e9 uma CI para o conjunto restrito XE1, ent\u00e3o a Desigualdade de Cobertura Impl\u00edcita\nxe &lt;|S| - 1\neeS \u00e9 valida para o conjunto restrito XE1.\nDemonstra\u00e7\u00e3o.\nSeja E1 o conjunto de vari\u00e9veis fixas a 1 e x* G XE1 = XWMSTC{x : Xf = 1, f G E1} uma solucao que corresponde a uma \u00e9rvore de suporte, Tq (xe = 1 se e G Q e xe = 0 se e / Q), notamos que as arestas de E1 estao na arvore Tq .\nSuponhamos que a solucao x* correspondente \u00e0 \u00e9rvore Tq n\u00e3o satisfaz a DCI, entao J2egS xe > |S|, logo |Q CS| = |S| e assim S G Q. Contudo S \u00e9 uma CI para o conjunto restrito XE1, para validar a Cobertura Impl\u00e9cita S foi utilizada uma arvore de suporte de peso m\u00ednimo T, contendo arestas de S e de E1, ou seja, S U E1 C ET. Como\nWexe =\tWe >\tWe > W.\neeQ\teeQ\teeET\nAssim x* / XWMSt , logo x* / XE1.\n\u25a1\nObserva\u00e7\u00e3o 1.\nA DCI para o conjunto restrito XE1 n\u00e3o tem de ser necessariamente valida para Xwmst. A desigualdade v\u00e9lida \u00e9 obtida apenas quando se faz o levantamento das variaveis do conjunto E1 (xe, e G E1).\nExemplo 5.9.\nConsidere-se o Exemplo 2.1 de 5 nodos, onde os valores de cada vari\u00e9vel na soluc\u00e3o da relaxa\u00e7ao linear (ver Figura 3.5) sao os seguintes: x01 = 1; x04 = 0,2; x12 = 1; x13 = 0,8; x34 = 0,8 e x43 = 0,2 (restantes vari\u00e9veis com valor nulo).\nSeja EX = {{0,1}, {1, 2}} o conjunto de vari\u00e1veis fixas a um. As arestas de EX tomam o valor um na solu\u00e7\u00e3o da relaxa\u00e7\u00e3o linear e n\u00e3o pertencem \u00e0 \u00e1rvore de suporte de peso m\u00e1nimo (ver Figura 2.3).\nDe seguida, ordenam-se as restantes arestas n\u00e3o fixas a um, ou seja, as arestas de E\\EX. Considere-se, por exemplo, a seguinte ordenacao:\n{0, 4}\t{3, 4}\t{1,3}\t{0, 3}\t{2, 4}\t{2, 3}\t{0, 2}\t{1, 4}.\nPara formar a DCI para o conjunto restrito XE1 = XWMST C {xe : x0X = xX2 = 1} considere-se a aresta {0, 4} e com esta aresta forma-se uma arvore de suporte de peso m\u00e1nimo que contenha as arestas de EX, a qual se encontra representada na Figura 5.5.\n\t\u00ed -\t1\t9 - 1\t8 15\t7 > 16\t\nC =\t\t-\t30\t16\t\n\t\t\t-\t10\t\n\t\t\t\t-\t/\nFigura 5.5: Arvore de suporte com custo 24 e peso 21.\nComo W(T) = 21 > 20, obteve-se uma arvore de suporte n\u00e3o admiss\u00e1vel e S = {{0, 4}} \u00e1 uma CI para o conjunto restrito XE1, ent\u00e3o a DCI obtida \u00e1 x04 &lt;0, a qual \u00e1 valida para o conjunto restrito XE1. Notamos que as arestas {0, 2}, {0, 4}, {1,3} e {1,4}, formam uma arvore de suporte com peso 14 e custo 47, portanto uma soluc\u00e3o admiss\u00e1vel de Xwmst, e na qual x04 = 1 o que evidencia o facto da desigualdade x04 &lt;0 n\u00e3o ser valida para Xwmst.\nDe uma forma gen\u00e1rica, se considerarmos que Ef = E \\ (S U EX) e R \u00c7 EX U Ef \u00e1 o conjunto de vari\u00e1aveis que j\u00e1a foram sujeitas a levantamento, para calcular os coeficientes das vari\u00e1veis de (EX U Ef )\\R resolve-se o seguinte subproblema:\nPt = min &lt;|S |- 1 -\txe -\t\u00a13e xe -\tpe(1 - xe) : xGX (t), (5.10)\neES\te&amp;RQEf\te&amp;RQEt\nonde X(t) \u00e9 definido de uma das seguintes formas:\nX(t) = |x G XWMST : xe = 1,e G E1 \\ (R U {t}),xt = \u00fc},t G E1 \\ R. (5.11)\nX(t) = |x G XWMST : xe = 1,e G E1 \\ R,xt = 1} ,t G Ef \\ R.\t(5.12)\nNestes casos, se X(t) = 0 atribu\u00edmos ao coeficiente o valor zero (fit = 0). Para efetuar o chamado down-lifting, ou seja, o levantamento das variaveis fixas a um, usamos o conjunto definido em (5.11). Neste caso, estamos a atribuir o valor zero \u00e0 vari\u00e1vel xt,t G E1 \\ R da qual se esta a fazer o down-lifting e as restantes variaveis de E1 (E1 \\ (R U {t})) das quais ainda n\u00e3ao efetu\u00edamos o levantamento tomam o valor um.\nPara efetuar o levantamento das variaveis de Ef, ou seja, o chamado levantamento usual usamos o conjunto definido em (5.12). Neste caso, estamos a atribuir o valor um \u00e0 variavel xt, t G Ef \\ R, da qual se est\u00e9 a fazer o levantamento e atribu\u00edmos tamb\u00e9m o valor um as variaveis fixas a um das quais ainda nao efetu\u00e1mos o levantamento (E1 \\ R).\nAp\u00e9os o levantamento sequencial de todas as vari\u00e9aveis do conjunto R obtemos uma Desigualdade de Cobertura Impl\u00edcita Levantada por Down-Lifting.\nProposi\u00e7\u00e3o 5.8.\nDada a CI\te&amp;s xe &lt;|S| - 1 para o conjunto restrito XE1, Ef = E \\ (S U E1) e\nR G E1 U Ef, a seguinte desigualdade valida\n^xe +\tex, +\t^e(1 - xe)&lt;|S|- 1.\neES\teeRCiEf\ti:^Jl^'El\n\u00e9 chamada de Desigualdade de Cobertura Impl\u00edcita Levantada por Down-Lifting (DCILDL) e \u00e9 valida no conjunto das soluc\u00e3es admiss\u00edveis Xwmst, onde os coeficientes fie s\u00e3o obtidos sequencialmente resolvendo o subproblema (5.10).\nA prova desta proposi\u00e7ao \u00e9 an\u00edloga \u00e0 prova da Proposic\u00e3o 5.5.\nNo caso do conjunto E1 = 0, ou se todos os coeficientes correspontentes as vari\u00edveis fixas a um forem nulos, ent\u00e3ao a desigualdade anterior \u00e9e uma simples DCIL.\nExemplo 5.10.\nConsidere-se a DCI x04 &lt;0 valida para o conjunto restrito\nXE1 = XWMST n {xe : x01 = x12 = 1},\nobtida no Exemplo 5.9. Para efetuar o levantamento das vari\u00e1veis de E1 podemos comec\u00e7ar por calcular sequencialmente os coeficientes associados a cada uma das varia\u00e9veis fixas a um, isto \u00e9e,\nAn = min{-xo4 : x G Xwmst,xoi = 0,xi2 = 1} = -1;\n^12 = min{1 - xo1 - xo4 : x G Xwmst, #12 = 0} = -1.\nAp\u00e9os o c\u00e9alculo dos coeficientes das varia\u00e9veis fixas a um obt\u00e9em-se a seguinte desigualdade\nx04 + x01 + x 12 &lt;2.\nDe seguida para tornar mais forte a desigualdade anterior efetua-se o levantamento das variaveis de Ef = E \\ (S U E1) = {{0, 2}, {0, 3}, {1, 3}, {1, 4}, {2, 3}, {2, 4}, {3, 4}}, usando o levantamento sequencial usual, ou seja, calculam-se da seguinte forma os coeficientes das variaveis a efetuar o levantamento\n^14 = min{2 - x01 - x04 - x12 ^02 = min{2 - xo1 - xo4 - ^12 ^23 = min{2 - xo1 - xo4 - ^12\n/2i = min{2 - x01 - x04 - x12 ^03 = min{2 - xo1 - xo4 - ^12\nx G xwmst,x14 = 1} = 0; x G XWMST, x02 = 1} = 0;\nx G XWMST,x23 = 1} = 0; x G XWMST, x24 = 1} = 0;\nx G XWMST ,x03 = 1} = 1;\n^13 = min{2 - xo1 -\txo4\t- ^12 -\txo3\t: x G Xwmst, ^13 =\t1}\t= 0;\n&amp;4 = min{2 - xo1 -\txo4\t- ^12 -\txo3\t: x G Xwmst, x34 =\t1}\t= 0.\nA DCILDL e dada por\nx01 + x04 + x12 + x03 &lt;2,\nque e valida para o conjunto das solu\u00e7\u00f5es admiss\u00e9veis Xwmst, corta a solu\u00e7ao fra-cion\u00e9ria (2,2 > 2) e define uma faceta de PWMST (verificado atrav\u00e9s do software PORTA [14]).\nObserva\u00e7\u00e3o 2.\nComo se fixaram a um vari\u00e1veis cujas correspondentes arestas n\u00f5o pertencem \u00e0 \u00e1rvore de suporte de peso m\u00ednimo, os seus coeficientes obtidos usando down-lifting s\u00f5o inferiores ou iguais a zero &lt;0).\n5.5.2\tDesigualdades de Cobertura Impl\u00edcita Levantada por Up-Lifting (DCILUL)\nPara obter Desigualdades de Cobertura Impl\u00edcita Levantada atrav\u00e9s do designado Up-Lifting \u00e9 necessario comecar por fixar a zero um conjunto de vari\u00e9veis. Designamos por Eo o conjunto de variaveis fixas a zero e por XE\u00b0 o conjunto restrito definido da seguinte forma\nxEo = XWMST p : xj = 0, f E Eo} ,\nonde as variaveis f E Eo se encontram fixas a zero, xj = 0. Notamos que o conjunto X Eo\n\u00e9 uma restricao do conjunto XWMST.\nDe seguida vamos definir uma cobertura impl\u00edcita para o conjunto restrito XEo. Vamos assumir XEo = 0.\nDefini\u00e7\u00e3o 5.7. Cobertura Impl\u00edcita para o conjunto restrito XEo\nO conjunto S C E \\ Eo, cujas arestas de S nao formam ciclos, \u00e9 uma Cobertura Impl\u00edcita para o conjunto restrito XE\u00b0, se para cada \u00e1rvore de suporte T = (V, ET) tal que S C ET e Eo C ET se verifica a seguinte desigualdade\nW (T) =\tWe >W-\nProposi\u00e7\u00e3o 5.9.\nSe S C E \\ E0 \u00e1 uma CI para o conjunto restrito XE\u00b0, entao a Desigualdade de Cobertura Impl\u00e1cita\nxe &lt;|S| - 1\ne&amp;S \u00e1 valida para o conjunto restrito XE\u00b0 -\nA prova desta proposi\u00e7\u00e3o \u00e1 an\u00e1loga \u00e0 prova da Proposi\u00e7ao 5-7-\nObserva\u00e7\u00e3o 3.\nA DCI para o conjunto restrito XE\u00b0 n\u00e3o tem de ser necessariamente valida para XWMst- A desigualdade v\u00e1lida \u00e1 obtida apenas quando se faz o levantamento das vari\u00e1veis do conjunto E0 (xe, e G E0)-\nExemplo 5.11.\nConsidere-se o Exemplo 2-1 de 5 nodos, onde os valores de cada vari\u00e1avel na solu\u00e7c\u00e3ao da relaxa\u00e7\u00e3o linear (ver Figura 3-5) s\u00e3o os seguintes: x01 = 1; x04 = 0,2; x12 = 1; x13 = 0,8; x34 = 0,8 e x43 = 0,2 (restantes variaveis com valor nulo)-\nSeja E0 = {{0, 2}, {1, 3}, {1,4}, {2, 3}} o conjunto de vari\u00e1veis fixas a zero- As arestas de E0 pertencem \u00e0 arvore de suporte de peso m\u00e1nimo (ver Figura 2-3) e nao tomam o valor um na solu\u00e7ca\u00e3o da relaxac\u00e7\u00e3ao linear-\nDe seguida ordenam-se as restantes arestas n\u00e3ao fixas a zero, ou seja, as arestas de E \\ E0- Considere-se, por exemplo, a seguinte ordenacao:\n{0,1} {1,2} {3, 4} {0, 4} {0, 3} {2,4}-\n(\u2014 1\nC =\n9\t8\t7 >\n1\t15\t16\n\u2014\t30\t16\n\t\u2014\t10\n\u2014 /\nFigura 5.6: Arvore de suporte com custo 28 e peso 22.\nComo W(T) = 22 > 20, obteve-se uma \u00e9rvore de suporte n\u00e3o admiss\u00edvel e S = {{0,1}} \u00e9 uma CI para o conjunto restrito XEo, ent\u00e3o a DCI obtida \u00e9 x01 &lt;0, a qual \u00e9 valida para o conjunto restrito XEo. Notamos que as arestas {0,1}, {0, 2}, {1,3} e {1, 4}, formam uma \u00e9rvore com peso 13 e custo 41, portanto uma solu\u00e7\u00e3o admiss\u00edvel de Xwmst, e na qual x01 = 1 o que evidencia o facto da desigualdade x01 &lt;0 n\u00e3o ser v\u00edlida para Xwmst \u2022\nDe uma forma gen\u00e9rica, se considerarmos que Ef = E \\ (S U E0) e R \u00c7 E0 U Ef \u00e9 o conjunto de vari\u00e9aveis que j\u00e9a foram sujeitas a levantamento, para calcular os coeficientes das vari\u00e9veis de (E0 U Ef )\\R resolve-se o seguinte subproblema:\nPt = min &lt;|S | \u2014 1 \u2014 \u00fcXe \u2014 E\ne^S\teGRn(EoUEf)\nonde X(t) \u00e9 definido da seguinte forma:\nX (t) = {X G Xwmst : Xe = 0,e G E0 \\ (R U {t}),xt = 1} ,t G E0 \\ R.\t(5.14)\nX(t) = |X G XWMST : xe = 0,e G E0 \\ R,xt = 1},t G Ef \\ R.\t(5.15)\nNestes casos, se X(t) = 0 atribu\u00edmos ao coeficiente Pt o valor zero (Pt = 0). Para efetuar o chamado up-lifting, ou seja, o levantamento das vari\u00e9veis fixas a zero, usamos o conjunto definido em (5.14). Neste caso, estamos a atribuir o valor um \u00e0 vari\u00e9vel xt, t G E0\\R da qual se esta a fazer o up-lifting e as restantes variaveis de E0 (E0\\(RU{t})) das quais ainda na\u00e3o efetu\u00e9amos o levantamento tomam o valor zero.\nPara efetuar o levantamento das vari\u00e9veis de Ef, ou seja, o chamado levantamento usual usamos o conjunto definido em (5.15). Neste caso, estamos a atribuir o valor um \u00e0 variavel Xt, t G Ef \\ R, da qual se esta a fazer o levantamento e as vari\u00e9veis de Eo \\ R atribuimos o valor zero.\nAp\u00e9os o levantamento de todas as vari\u00e9aveis do conjunto R obtemos uma Desigualdade de Cobertura Impl\u00e9cita Levantada por Up-Lifting.\nProposi\u00e7\u00e3o 5.10.\nDada a DCI\tegC Xe &lt;|C| \u2014 1 para o conjunto restrito XE\u00b0, Ef = E \\ (S U Eo) e\nR Q Eo U Ef a seguinte desigualdade v\u00e9lida\ny^Xe +\tfieXe&lt;|S| \u2014 1,\negS\tegRn(Eo UEf)\n\u00e9e chamada de Desigualdade de Cobertura Impl\u00e9cita Levantada por Up-Lifting (DCILUL) e \u00e9 v\u00e9lida no conjunto das soluc\u00e3es admiss\u00e9veis XWmst, onde os coeficientes fie s\u00e3o obtidos sequencialmente resolvendo o subproblema (5.13).\nA prova desta proposic\u00e3o \u00e9 analoga \u00e0 prova da Proposi\u00e7\u00e3o 5.5.\nNo caso do conjunto Eo = 0, ou se todos os coeficientes fie correspondentes \u00e0s vari\u00e9veis fixas a zero forem nulos, ent\u00e3o a desigualdade anterior \u00e9 uma simples DCIL.\nExemplo 5.12.\nConsidere-se a DCI X01 &lt;0 valida para o conjunto restrito\nxEo = XWMST n {Xe : X02 = X13 = X14 = X23 = 0}\nobtida no Exemplo 5.11. Para efetuar o levantamento das vari\u00e9veis de Eo podemos come\u00e7car por calcular os coeficientes associados a cada uma das varia\u00e9veis fixas a zero e obtemos\n@13 =\tm\u00cdn{-X01 : x G XWMST ,x13 = 1,x02\t= x14\t= x23 = 0} =\t-1;\n@23 =\tmin{-X01 + X13 : x G Xwmst,X23 =\t1,xu\t= X02 = 0} =\t0;\n@02 =\tmin{-X01 + X13 : x G Xwmst,X02 =\t1,xu\t= 0} = -1;\n@14 =\tmin{-X01 + X13 + X02 : x G Xwmst,xu =\t1} = -1.\nApos o calculo dos coeficientes das variaveis fixas a zero obtem-se a seguinte desigualdade\nX01 - x02 - x 13 - x 14 &lt;0.\nDe seguida para tornar mais forte a desigualdade anterior efetua-se o levantamento das variaveis de Ef = E \\ (S U E0) = {{0, 3}, {0,4}, {1, 2}, {2, 4}, {3,4}}, usando o levantamento sequencial usual, ou seja, calculam-se da seguinte forma os coeficientes das variaveis a efetuar levantamento.\n@24 =\tmin{-X01 + X13 + X02\t+ X14\t: x\tG\tXwmst, X24\t=\t1}\t= 0;\n@03 =\tmin{-X01 + X13 + X02\t+ xu\t: x\tG\tXwmst, X03\t=\t1}\t= 0;\n@04 =\tmin{-X01 + X13 + X02\t+ X14\t: x\tG\tXwmst, X04\t=\t1}\t= 0;\n@34 =\tmin{-X01 + X13 + X02\t+ X14\t: x\tG\tXwmst, X34\t=\t1}\t= 0;\n@12 =\tmin{-X01 + X13 + X02\t+ X14\t: x\tG\tXwmst, X12\t=\t1}\t= 0.\nComo todos os coeficientes obtidos atraves do levantamento usual s\u00f5ao nulos ent\u00f5ao, a DCILUL e dada por\nX01 - X02 - X13 - X14 &lt;0,\nque e valida para o conjunto das solu\u00e7\u00f5es admiss\u00edveis XWMST e corta a solucao fracionaria (0,2 > 0).\nObservac\u00e3o 4.\nNote-se que no caso do Problema WMST podem ser obtidas desigualdades validas diferentes quando se deixam as variaveis livres ou quando se fixam variaveis a zero.\nExemplo 5.13.\nConsidere-se a DCI X01 + X04 + X12 &lt;2 obtida no Exemplo 5.3. Ao efetuar o levantamento das variaveis X34 e X13, obtemos os seguintes coeficientes\nMi = min{2 \u2014 xoi \u2014 xo4 \u2014 xi2 : x G Xwmst, x34 = 1} = 0;\nAi3 = min{2 \u2014 xoi \u2014 xo4 \u2014 xi2 : x G Xwmst, xn = 1} = 0.\nAp\u00e9s o calculo dos coeficientes das vari\u00e9veis x34 e xi3 obt\u00e9m-se a seguinte desigualdade\nx0i + x04 + xi2 &lt;2.\nNo caso de fixarmos a vari\u00e9vel xi3 = 0 obtemos a DCI x0i+x04+xi2 &lt;2 v\u00e9lida para o conjunto restrito XEo = XWmst n {xe : xi3 = 0}. Ao efetuarmos o levantamento das vari\u00e9aveis x34 e xi3, obtemos os seguintes coeficientes\nMi = min{2 \u2014 xoi \u2014 xo4 \u2014 xi2 : x G Xwmst, xi3 = 0, x34 = 1} = 1;\nAi3 = min{2 \u2014 xoi \u2014 xo4 \u2014 xi2 \u2014 x34 : x G Xwmst,xi3 = 1} = \u20141;\nAp\u00e9os o c\u00e9alculo dos coeficientes das vari\u00e9aveis a efetuar levantamento obtemos a desigualdade\nx0i + x04 + xi2 + x34 \u2014 xi3 &lt;2.\nAssim, verificamos que ao deixar a vari\u00e9avel xi3 livre ou ao fix\u00e9a-la a zero se obt\u00eaem diferentes desigualdades v\u00e9lidas para XWmst.\n5.5.3\tDesigualdades Generalizadas de Cobertura Impl\u00edcita Levantada (DGCIL)\nPara obter Desigualdades Generalizadas de Cobertura Impl\u00e9cita Levantada fixam-se \u00e0 priori dois conjuntos de vari\u00e9veis: um conjunto de vari\u00e9veis fixas a zero, que se designa por E0 e um conjunto de varia\u00e9veis fixas a um, que se designa por Ei. Seja XU o conjunto restrito definido da seguinte forma\nXU = Xwmst n {x : xe = 0, e G Eo, xe = 1, e G Ei},\nonde U = Eo U Ei e as vari\u00e9veis e G Eo encontram-se fixas a zero e as vari\u00e9veis e G Ei encontram-se fixas a um. Notamos que o conjunto XU \u00e9e uma restri\u00e7ca\u00f5o do conjunto xwmst .\nDe seguida vamos definir uma cobertura impl\u00e9cita para o conjunto restrito XU. Vamos assumir XU = 0.\nDefini\u00e7\u00e3o 5.8. Cobertura Impl\u00edcita para o conjunto restrito Xu\nO conjunto S C E \\ U em que U = E0 U E1, cujas arestas de S U E1 n\u00e3o formam ciclos, e uma Cobertura Impl\u00edcita para o conjunto restrito Xu, se para cada arvore de suporte T = (V, ET) tal que S C ET, E0 C ET e E1 C ET se verifica a seguinte desigualdade\nW (T) =^2 we > W.\nPara verificar que S C E \\ U \u00e9 uma CI para o conjunto restrito Xu, constru\u00edmos uma sub-arvore com as arestas do conjunto S e do conjunto E1 e, sucessivamente, adicionamos arestas de Ef = E\\(S U U) \u00e0 sub-arvore at\u00e9 formarmos uma arvore de suporte de peso m\u00ednimo, T, contendo as arestas dos conjuntos S e E1. No caso da \u00e9rvore de suporte T nao verificar a restri\u00e7\u00e3o de peso, ent\u00e3o S \u00e9 uma CI para o conjunto restrito Xu.\nProposi\u00e7\u00e3o 5.11.\nSeja S C E \\ U uma CI para o conjunto restrito Xu, ent\u00e3o a Desigualdade de Cobertura Impl\u00edcita\nxe &lt;|S| - 1\nees \u00e9e va\u00e9lida para o conjunto restrito Xu.\nA prova desta proposic\u00e3o \u00e9 an\u00e1loga \u00e0 prova da Proposi\u00e7\u00e3o 5.7.\nObserva\u00e7\u00e3o 5.\nExemplo 5.14.\nConsidere-se o Exemplo 2.1 de 5 nodos, onde os valores de cada vari\u00e1vel na solu\u00e7\u00e3o da relaxa\u00e7ao linear (ver Figura 3.5) s\u00e3o os seguintes: x01 = 1; x04 = 0,2; x12 = 1; x13 = 0,8; x34 = 0,8 e x43 = 0,2 (restantes vari\u00e1veis com valor nulo).\nSeja E0 = {{0, 2}, {2, 3}, {1,4}} o conjunto de variaveis fixas a zero, as arestas de E0 pertencem \u00e0 arvore de suporte de peso m\u00e1nimo (ver Figura 2.3) e tomam o valor zero na solucao da relaxac\u00e3o linear. Seja E1 = {{0,1}, {1, 2}} o conjunto de variaveis fixas a um. As arestas de E1 tomam o valor um na solu\u00e7ao da relaxac\u00e3o linear e nao pertencem a \u00e1rvore de suporte de peso m\u00ednimo (ver Figura 2.3).\nDe seguida, ordenam-se as restantes arestas n\u00e3o fixas, ou seja, as arestas de E \\ (E0 U E1). Considere-se, por exemplo, a seguinte ordenac\u00e3o:\n{0, 4}\t{3, 4}\t{1,3} {0, 3}\t{2,4}-\nPara formar a DCI para o conjunto restrito XU = XWMST C {xe : x01 = x12 = 1,x02 = x23 = x14 = 0} considere-se a aresta {0, 4} e com esta forma-se a arvore de suporte de peso m\u00ednimo da Figura 5.7, esta cont\u00e1m as arestas de E1 e n\u00e3o cont\u00e1m as arestas de E0.\n\t\u00ed -\t1\t9 - 1\t8 15\t7 > 16\t\nC =\t\t-\t30\t16\t\n\t\t\t-\t10\t\n\t\t\t\t-\t/\nFigura 5.7: Arvore de suporte com custo 24 e peso 21.\nComo W(T) = 21 > 20, obteve-se uma \u00e1rvore de suporte n\u00e3o admiss\u00edvel e S = {{0,4}} \u00e1 uma CI para o conjunto restrito XU, entao a DCI obtida \u00e1 x04 &lt;0, a qual \u00e1 valida para o conjunto restrito XU. Notamos que as arestas {0, 2}, {0, 4}, {1,3} e {1,4}, formam uma arvore de suporte com peso 14 e custo 47, portanto uma solu\u00e7\u00e3o admiss\u00e1vel de Xwmst, e na qual x04 = 1 o que evidencia o facto da desigualdade x04 &lt;0 n\u00e3o ser valida para XWMST.\nDe uma forma gen\u00e1erica para calcular, sequencialmente, os coeficientes das vari\u00e1aveis de (E0 U E1 U Ef) \\ R, onde Ef = E \\ (S U E0 U E1) e R \u00c7 E0 U E1 U Ef resolve-se o seguinte subproblema:\n= min &lt;|S| \u2014 1 \u2014 xe I\te&amp;S\ne xe\t^e(1 \u2014 xe) : x G X (t)(5.16)\neef\u00edn(E0uE/)\teef\u00ednEx\tJ\nonde\nX(t)\tx\nG XWMST : xe\n1,e G\nEi \\ (R U\t= 0,e G Eo \\ R,xt = 0 j*, (5.17)\nt G Ei \\ R;\nX(t)\tx\nG XWMST : xe\n1,e G\nE1 \\ R,xe = 0, e G\nEo \\ (R U{t}),xt = 1}, (5.18)\nt G Eo \\ R;\nX (t) =\n{x G XwMST : xe = 1,\ne G E1 \\ R,xe = 0,\ne G Eo \\ R,xt = 1 j*,\t(5.19)\nt G Ef \\ R.\nNestes casos, se X(t) = 0 atribu\u00e1mos ao coeficiente o valor zero (fit = 0)- Para efetuar o chamado down-lifting, ou seja, o levantamento das variaveis fixas a um, usamos o conjunto definido em (5-17)- Neste caso, estamos a atribuir o valor zero \u00e0 vari\u00e1vel xt,t G E1 \\ R da qual se esta a fazer o down-lifting- As vari\u00e1veis de E1 (E1 \\ (RU {t})) das quais ainda n\u00e3ao efetu\u00e1amos o levantamento tomam o valor um e as varia\u00e1veis fixas a zero das quais ainda nao efetuamos o levantamento (E0 \\ R) tomam o valor zero-\nPara efetuar o levantamento das vari\u00e1veis fixas a zero, isto \u00e1, o chamado up-lifting usamos o conjunto definido em (5-18)- Neste caso, estamos a atribuir o valor um a variavel xt,t G E0 \\ R da qual se esta a fazer o up-lifting. As restantes vari\u00e1veis fixas a zero das quais ainda n\u00e3o efetuamos o levantamento (E0 \\ (R U {t})) atribu\u00e1mos o valor zero e as variaveis fixas a um das quais ainda n\u00e3o efetuamos o levantamento (E1 \\ R) atribu\u00e1mos o valor um-\nPara efetuar o levantamento das vari\u00e1veis de Ef, usamos o conjunto definido em (5-19)- Neste caso, estamos a atribuir o valor um a vari\u00e1vel xt,t G Ef \\ R da qual se esta a fazer o levantamento- As vari\u00e1veis fixas a um das quais ainda n\u00e3o efetu\u00e1mos o levantamento (E1 \\ R) atribu\u00e1mos o valor um, e finalmente as variaveis fixas a zero das quais ainda nao efetuamos o levantamento (E0 \\ R) atribu\u00e1mos o valor zero-\nAp\u00e9s o levantamento de todas as vari\u00e9veis do conjunto R obtemos uma Desigualdade Generalizada de Cobertura Impl\u00edcita Levantada.\nProposicao 5.12.\nDada a DCI J2egSxe &lt;|S| - 1 para o conjunto restrito XU, Ef = E \\ (SU E0 U E1) e R \u00c7 E0 U E1 U Ef , a seguinte desigualdade valida\ny^xe +\tx, +\t&amp;(1 - xe)&lt;|S|- 1.\neES\teGf\u00edn(EoUEf)\te^R^E\u00b1\n\u00e9 chamada de Desigualdade Generalizada de Cobertura Impl\u00edcita Levantada (DGCIL) e \u00e9 v\u00e9lida no conjunto das soluc\u00f5es admiss\u00edveis XWmst, onde os coeficientes >, s\u00f5o obtidos sequencialmente resolvendo o subproblema (5.16).\nA prova desta proposi\u00e7\u00f5o \u00e9 an\u00e9loga a prova da Proposi\u00e7ao 5.5.\nAs Desigualdades de Cobertura Impl\u00edcita Levantada por Down-lifting e por Up-lifting s\u00f5o casos particulares das Desigualdades Generalizadas de Cobertura Impl\u00edcita Levantada.\n\u2022\tAs DCILs obt\u00e2m-se quando E0 U E1 = 0 ou se todos os coeficientes das vari\u00e9veis fixas a zero e a um forem nulos.\n\u2022\tAs DCILULs obt\u00e2m-se quando E0 = 0 ou quando todos os coeficientes das vari\u00e9veis fixas a zero forem nulos.\n\u2022\tE finalmente as DCILDLs obt\u00e2m-se quando E1 = 0 ou quando todos os coeficientes das vari\u00e9veis fixas a um forem nulos.\nExemplo 5.15.\nConsidere-se a DCI x04 &lt;0 valida para o conjunto restrito\nXU = XwMST n {xe : xo1 = x12 = 1, x02 = x23 = ^14 = 0},\nobtida no Exemplo 5.14. Para efetuar o levantamento das vari\u00e1veis de E1 podemos comecar por calcular os coeficientes associados a cada uma das vari\u00e1veis fixas a um e obtemos\n^01 = min{ \u2014 x04 : x G XWMST ,x01 = 0,x12 = 1,x02 = x23 = x14 = 0} = \u20141 ^12 = min{1 \u2014 x01 \u2014 x04 : x G Xwmst,x12 = 0 x02 = x23 = xu = 0} = \u20141.\nDe seguida efetua-se o levantamento das variaveis de E0, ou seja, calculam-se, sequencialmente, os coeficientes destas vari\u00e1veis da seguinte forma\n^23 = min{2\t\u2014\tx01\t\u2014\tx04\t\u2014\t#12\t:\tx\tG Xwmst, x23\t= 1, x02 = x04 = 0} =\t0\n^02 = min{2\t\u2014\tx01\t\u2014\tx04\t\u2014\t#12\t:\tx\tG Xwmst, x02\t= 1, xw = 0} = 0\n^14 = min{2\t\u2014\tx01\t\u2014\tx04\t\u2014\t#12\t:\tx\tG Xwmst, xw\t= 1} = 0\nAp\u00e1s o c\u00e1lculo\tdos\tcoeficientes\tdas\tvariaveis fixas\ta zero e a um obt\u00e9m-se a seguinte\ndesigualdade\nx01 + x04 + x 12 A 2.\nDe seguida para tornar mais forte a desigualdade anterior efetua-se o levantamento das variaveis de Ef = E \\ (S U E0 U E1) = {{0, 3}, {1, 3}, {2, 4}, {3, 4}} usando o levantamento sequencial usual e os coeficientes calculam-se da seguinte forma:\nA34 = min{2\t\u2014\tx01\t\u2014\tx04\t\u2014\t#12 : x G Xwmst, x34 = 1} = 0\nA13 = min{2\t\u2014\tx01\t\u2014\tx04\t\u2014\t#12 : x G Xwmst, x^ = 1} = 1\nA03 = min{2\t\u2014\tx01\t\u2014\tx04\t\u2014\t#12 \u2014 #13 : x G Xwmst, #03 = 1}\t=\t0\n>21 = min{2\t\u2014\tx01\t\u2014\tx04\t\u2014\t#12 \u2014 xi3 : x G Xwmst, x24 = 1}\t=\t0\nA DGCIL \u00e9 dada por\nX01 + x04 + x12 + x 13 A 2,\nque \u00e9 v\u00e9lida para o conjunto das solu\u00e7\u00f5es admiss\u00e9veis XWMST e corta a soluc\u00f5o fra-cion\u00e9ria (2,2 > 2).\nEm Anexo apresentam-se todas as facetas de PWMST para o Exemplo 2.1 obtidas atrav\u00e9s do software PORTA (POlyhedron Representation Transformation Algorithm) [14]. Para cada uma das facetas obtidas pelo software foi feita a respetiva caracte-rizac\u00e7\u00f5ao.\n166\nCap\u00edtulo 6\nAlgoritmos de Separa\u00e7\u00e3o\nCom o prop\u00e9osito de usar classes de desigualdades va\u00e9lidas como planos de corte e de tornar este processo eficiente necessitamos de algoritmos de separac\u00e7\u00e3ao, isto \u00e9e, precisamos de ter um conjunto de rotinas para gerar desigualdades va\u00e9lidas e detetar quando \u00e9e que elas sao violadas. Kaparis e Letchford [42, 43] apresentam um estudo muito completo sobre separa\u00e7\u00e3o de desigualdades validas para o Problema Saco-mochila Bin\u00e9rio.\nInfelizmente os problemas de separa\u00e7c\u00e3ao para Desigualdades de Cobertura, Desigualdades de Cobertura Levantada e Desigualdades Generalizadas de Cobertura Levantada s\u00e3o NP-dif\u00e9ceis (ver [17, 30, 44]).\nNeste cap\u00e9tulo com o intuito de fortalecer as formula\u00e7c\u00e3oes apresentadas no Cap\u00e9tulo 3, descrevemos algoritmos de separa\u00e7c\u00e3ao para as classes de desigualdades va\u00e9lidas abordadas no Cap\u00e9tulo 5.\nNa Sec\u00e7ao 6.1 comecamos por apresentar dois algoritmos heur\u00edsticos de separa\u00e7\u00e3o gen\u00e9ericos. Num dos algoritmos \u00e9e introduzida uma desigualdade v\u00e9alida, em cada iterac\u00e7\u00e3ao, enquanto que no outro podem ser introduzidas v\u00e9arias desigualdades v\u00e9alidas numa itera\u00e7c\u00e3ao. Em cada uma das subsec\u00e7co\u00e3es seguintes apresentamos as particularidades dos algoritmos de separa\u00e7c\u00e3ao que \u00e9e necessa\u00e9rio especificar para introduzir as desigualdades v\u00e9lidas descritas no Cap\u00e9tulo 5. Na Secc\u00e3o 6.1 apresentamos tamb\u00e9m um algoritmo heur\u00e9stico para determinac\u00e7\u00e3ao dos coeficientes das vari\u00e9aveis a efetuar levantamento. Na Secc\u00e7\u00e3ao 6.2 come\u00e7camos por apresentar as experi\u00eaencias computacionais realizadas com os algoritmos de separa\u00e7c\u00e3ao propostos, depois comparamos os v\u00e9arios algoritmos apresentados. De seguida apresentamos os resultados computacionais dos melhores algoritmos de separa\u00e7ca\u00e3o e por fim apresentamos uma s\u00e9ntese dos resultados computacionais obtidos neste cap\u00e9tulo.\n6.1\tAlgoritmos de Separa\u00e7\u00e3o Gen\u00e9ricos\nVamos come\u00e7ar por apresentar dois algoritmos de separa\u00e7\u00e3o gen\u00e9ricos, os quais v\u00e3o servir como base a todos os algoritmos de separa\u00e7ao propostos ao longo deste cap\u00e9tulo.\nAlgoritmo de Separa\u00e7\u00e3o Gen\u00e9rico 1 (Sepl)\nPasso 1: Resolver a relaxa\u00e7\u00e3o linear\nSeja x* a solu\u00e7\u00e3o da relaxa\u00e7\u00e3o linear de uma formulac\u00e3o para o Problema WMST.\nSe x* for inteira, ent\u00e3o STOP.\nSeja Erl = {e : x* > 0} o conjunto formado pelas arestas da soluc\u00e3o da relaxa\u00e7\u00e3o linear com valor positivo.\nSeja ORD = {O1,..., Onord} um conjunto de nord ordenacoes predefinidas. Considerar a primeira ordena\u00e7\u00e3o O1 e fazer k =1.\nPasso 2: Ordenar as arestas da relaxa\u00e7\u00e3o linear\nSeja ERLOrdk a lista ordenada de arestas da solucao da relaxa\u00e7\u00e3o linear de acordo com a ordena\u00e7c\u00e3ao de arestas k.\nPasso 3: Obter uma desigualdade valida\nConstruir, caso seja poss\u00e9vel, uma desigualdade v\u00e9lida (DV).\nPasso 4: Decis\u00e3o sobre a inser\u00e7\u00e3o da desigualdade valida\nSe a DV corta a solucao fracionaria x*, ent\u00e3o\ninserir a DV no modelo e voltar ao Passo 1.\nCaso contr\u00e9ario,\nFazer k = k + 1 (passar \u00e0 ordena\u00e7\u00e3o seguinte).\nSe k > nord, enta\u00e3o\nSTOP.\nCaso contr\u00e9ario,\nvoltar ao Passo 2.\nNo Passo 1 resolvemos a relaxa\u00e7\u00e3o linear do Procedimento P-WMTZ+C descrito na Seccao 3.3. Se a solucao x* n\u00e3o for inteira obtemos um conjunto que denominamos de Erl, constitu\u00eddo pelas arestas com xe > 0 na soluc\u00e3o da relaxacao linear, impomos um numero fixo de ordena\u00e7\u00e3es nord e estabelecemos a primeira ordena\u00e7ao de arestas (k = 1). Em seguida, no Passo 2 ordenamos as arestas desse conjunto de acordo com a ordenac\u00e3o indicada k, formando a lista de arestas ERLOrdk\u2022 No Passo 3 temos de construir uma desigualdade v\u00e1lida, caso seja poss\u00edvel. Finalmente, no Passo 4 \u00e1 avaliado se a desigualdade valida formada no Passo 3 corta a solucao fracionaria x* (solu\u00e7\u00e3o da relaxac\u00e3o linear obtida no Passo 1). Se a desigualdade v\u00e1lida cortar a solu\u00e7\u00e3o fracionaria x*, ser\u00e1 introduzida no modelo e voltamos ao Passo 1, onde resolvemos a nova relaxac\u00e7\u00e3ao linear. Caso a desigualdade va\u00edlida na\u00e3o corte a soluc\u00e7a\u00e3o fracion\u00edaria x*, ou n\u00e3o seja poss\u00edvel formar uma desigualdade valida no Passo 3, temos ainda de averiguar se j\u00e1 foram utilizadas todas as ordena\u00e7\u00e3es definidas inicialmente por nord. Em caso afirmativo, o algoritmo termina. No caso de existirem outras ordena\u00e7c\u00e3oes para efetuar, voltamos ao Passo 2 e ordenamos as arestas do conjunto Erl por outra ordenacao k. Observe-se que outros crit\u00e1rios de paragem podem ser impostos, por exemplo, podemos terminar o algoritmo quando se encontrarem um certo nu\u00e1mero de relaxa\u00e7co\u00e3es lineares seguidas com valor igual ou impor a introduc\u00e7\u00e3ao de um certo nu\u00e1mero de cortes.\nDe seguida propomos algumas formas de ordenar as arestas da relaxa\u00e7\u00e3o linear com xe > 0 para formar a lista de arestas ERLOrdk.\n1.\tOrdW: Ordenar por ordem decrescente de peso, we.\n2.\tOrdWX: Ordenar por ordem decrescente de valor de we x xe.\n3.\tOrdX: Ordenar por ordem decrescente de valor de xe.\n4.\nOrdKnap:\nOrdenar por ordem decrescente de valor de\n1 - Xe\nWe\n5.\tOrdFixW: Come\u00e7ar por ordenar por ordem decrescente de peso, we as arestas com xe = 1 e de seguida, ordenar as restantes arestas (0 &lt;xe &lt;1) tamb\u00e1m por ordem decrescente de peso, we.\n6.\tOrdFixWX: Comecar por ordenar por ordem decrescente de valor de we x xe as arestas com xe = 1 e de seguida, ordenar as restantes arestas (0 &lt;xe &lt;1) tamb\u00e1em por ordem decrescente de we x xe.\nNo Algoritmo Sepl, iterativamente, inserimos uma desigualdade v\u00e9lida no modelo e resolvemos uma nova relaxa\u00e7ao linear, mas podemos querer introduzir nao uma, mas v\u00e9rias desigualdades no modelo (se for poss\u00e9vel) e so depois resolver a relaxac\u00e3o linear. Assim no novo algoritmo proposto apenas alteramos os Passos 3 e 4.\nAlgoritmo de Separa\u00e7\u00e3o Gen\u00e9rico 2 (Sep2)\nPasso 3: Obter uma desigualdade v\u00e1lida\nConstruir, caso seja poss\u00e9vel, uma desigualdade v\u00e9lida (DV).\nFazer nDV = 0.\nPasso 4: Decis\u00e3o sobre a inser\u00e7\u00e3o da desigualdade valida\nFazer k = k + 1 (passar \u00e0 ordena\u00e7\u00e3o seguinte).\nSe a DV corta a solu\u00e7ao fracionaria x*, ent\u00e3o\ninserir a DV no modelo.\nudv = hdv + 1.\nSe k > nord, ent\u00e3o\nSe nDV > 0, entao\nvoltar ao Passo 1.\nCaso contra\u00e9rio,\nSTOP.\nCaso contr\u00e9ario,\nvoltar ao Passo 2.\nNo Passo 3 para al\u00e9em de construirmos, caso seja poss\u00e9vel, uma desigualdade v\u00e9alida, vamos inicializar o numero de desigualdades v\u00e9lidas (nDV = 0). No Passo 4 do Algoritmo Sep2 \u00e9 avaliado se a desigualdade valida formada no Passo 3 corta a solu\u00e7\u00e3o fracion\u00e9ria x* (solu\u00e7\u00e3o da relaxa\u00e7ao linear obtida no Passo 1). Se a desigualdade valida cortar a solucao fracionaria x*, sera introduzida no modelo e aumenta-se em uma unidade o numero de desigualdades v\u00e9lidas a introduzir no modelo. No caso de ainda n\u00e3o se terem testado todas as ordena\u00e7\u00e3es definidas inicialmente por nord, ent\u00e3o voltamos\nao Passo 2 e ordenamos as arestas do conjunto ERL por outra ordena\u00e7\u00e3o k. Caso n\u00e3o existam mais ordena\u00e7\u00f5es dispon\u00edveis e existam desigualdades validas a inserir no modelo\t> 0), ent\u00e3o volta-se ao Passo 1 para resolver a nova relaxa\u00e7\u00e3o linear.\nO algoritmo termina se n\u00e3o existirem mais ordena\u00e7\u00f5es dispon\u00edveis nem desigualdades v\u00e1lidas a inserir no modelo. Tal como referimos anteriormente para o Algoritmo Sepl podemos impor outros crit\u00e1rios de paragem. Por exemplo, terminar o algoritmo quando se encontrarem um certo numero de relaxa\u00e7\u00f5es lineares seguidas com valor igual ou quando um certo numero de cortes forem introduzidos no modelo.\nNas seccoes seguintes descrevemos para cada classe de desigualdades v\u00e1lidas apresentadas no Cap\u00edtulo 5 os procedimentos a adotar no Passo 3 para a forma\u00e7\u00e3o de uma desigualdade va\u00e1lida.\n6.1.1\tAlgoritmo de Separa\u00e7\u00e3o para as DC\nPara descrever um algoritmo de separac\u00e3o para as Desigualdades de Cobertura (DCs) precisamos de encontrar as sucessivas DCs que \u00e1 poss\u00edvel obter no Passo 3 dos Algoritmos Sepl e Sep2. Assim, para descrever os algoritmos para introduc\u00e3o de DCs ser\u00e1 necess\u00e1rio especificar o Passo 3.\nPasso 3: Obter uma Desigualdade de Cobertura\nSeja S = {}.\nFazer p =1 (inserir a primeira aresta de ERLOrdk no conjunto S).\nPasso 3.1: Construir o conjunto S\nAtualizar o conjunto S com as primeiras p arestas da lista ERLOrdk.\nPasso 3.2: Verificar se S e Cobertura\nCalcular WS\tV e&amp;s we-\nSe WS > W, entao\nS \u00e1e uma Cobertura.\nDC:\txe &lt;|S| - 1.\nCaso contr\u00e9ario,\nSe p &lt;#ERLOrdk, entao\np = p +1.\nVoltar ao Passo 3.1.\nCaso contr\u00e9ario,\nn\u00e3ao \u00e9e poss\u00e9vel formar uma cobertura.\nNo Passo 3, para formar uma DC, temos de formar uma Cobertura S, para tal, adicionamos, sucessivamente, uma aresta da lista ERLOrdk ao conjunto S, at\u00e9 que a soma dos pesos das arestas contidas em S seja superior a W.\nNote-se que no Passo 3.2, #ERLOrdk representa o numero de arestas da lista ERLOrdk.\nPara exemplificar os algoritmos de separa\u00e7c\u00e3ao propostos para as DCs usamos as seis ordenac\u00e3es propostas (nord = 6) e a inst\u00e2ncia de 5 nodos do Exemplo 2.1.\nExemplo 6.1.\nConsideremos o Exemplo 2.1. De seguida vamos descrever em detalhe a primeira itera\u00e7c\u00e3ao do Algoritmo Sep1 para o caso das DCs e os principais resultados das restantes itera\u00e7oes encontram-se na Tabela 6.1.\nItera\u00e7\u00e3o 1:\nPasso 1: O conjunto de arestas com xe > 0 na soluc\u00e3o da relaxacao linear do Procedimento P-WMTZ+C \u00e9 dado por ERL = {{0,1}, {0, 4}, {1, 2}, {1, 3}, {3,4}}, onde x01 = 1; x04 = 0,2; x12 = 1; x13 = 0,8; x34 = 0,8 e x43 = 0,2 (restantes variaveis com valor nulo).\nPasso 2: Ordenando as arestas do conjunto ERL, por exemplo, por ordem decrescente de peso (OrdW) obtemos a seguinte lista de arestas ordenadas\nERLOrdw = [{0, 4}, {0,1}, {1, 2}, {3, 4}, {1, 3}].\t(6.1)\nPasso 3: Para formar a Cobertura S vamos adicionar, sucessivamente, uma aresta de ERLOrdW ao conjunto S da seguinte forma,\nS = {{0, 4}} Ws =\two4 = 7;\nS = {{0,1}, {0, 4}}\tWs = wo4\t+\twoi = 7 + 6 = 13;\nS = {{0,1}, {0, 4}, {1,2}} Ws\t=\two4 + woi + W12 =\t13 +\t6\t=\t19;\nS = {{0, 1}, {0, 4}, {1,2}, {3, 4}}\tWs = w04 + w01 + w12 + w34 =\t19 + 5 = 24 > 20.\nComo Ws = 24 > 20 = W, S \u00e9 uma Cobertura e podemos construir a correspondente DC\nxoi + Xo4 + Xi2 + X34 &lt;3.\t(6.2)\nPasso 4: Como a DC obtida corta a solu\u00e7\u00e3o fracionaria (3,2 > 3), ent\u00e3o e introduzida no modelo e volta-se ao Passo 1.\nA informa\u00e7\u00e3o respeitante \u00e0s restantes iteracoes encontra-se resumida na Tabela 6.1.\nIter.\tSepl-DC\t\n2\tPasso 1\tx*: xoi = 1; xo4 = 0,5; X12 = 1; X13 = 1 e X34 = 0,5 Custo = 25,5 e peso = 20\n\tPasso 2, 3 e 4\tOrdenacao: OrdW DC: x01 + x04 + x12 + x34 &lt;3. N\u00e3o corta x* (3\t3).\n\tPasso 2, 3 e 4\tOrdena\u00e7\u00e3o: OrdWX DC: x01 + x04 + x12 + x34 &lt;3. Nao corta x* (3\t3).\n\tPasso 2, 3 e 4\tOrdenac\u00e3o: OrdX DC: x01 + x04 + x12 + x13 + x34 &lt;4. N\u00e3o corta x* (4\t4).\n\tPasso 2, 3 e 4\tOrdena\u00e7\u00e3o: OrdFixWX DC: x01 + x04 + x12 + x13 &lt;3 Inserir, corta x* (3, 5 > 3).\n3\tPasso 1\tx*: x01 = 1; x03 = 0,125; x04 = 0,125; #12 = 1; #13 = 0,875 e x34 = 0,875 Custo = 25,75 e peso = 20\n\tPasso 2, 3 e 4\tOrdena\u00e7ca\u00e3o: OrdW DC: x01 + x03 + x04 &lt;2. Nao corta x* (1,25\t2).\n\tPasso 2, 3 e 4\tOrdenac\u00e7\u00e3ao: OrdWX DC: x01 + x03 + x12 + x13 + x34 &lt;4. N\u00e3o corta x* (3,875\t4).\n\tPasso 2, 3 e 4\tOrdena\u00e7c\u00e3ao: OrdX DC: x01 + x03 + x12 + x13 + x34 &lt;4. Nao corta x* (3,875\t4).\n\tPasso 2, 3 e 4\tOrdenac\u00e7\u00e3ao: OrdFixWX DC: x01 + x03 + x12 + x13 + x34 &lt;4. N\u00e3o corta x* (3,875\t4).\n\tPasso 2, 3 e 4\tOrdenac\u00e7a\u00e3o: OrdFixW DC: x01 + x03 + x04 + x12 &lt;3. Nao corta x* (2,25\t3).\n\tPasso 2, 3 e 4\tOrdena\u00e7ao: OrdKnap DC: x03 + x04 + x13 + x34 &lt;3. Nao corta x* (2\t4).\nTabela 6.1: Principais resultados por itera\u00e7\u00e3o do Algoritmo Sepl para as DCs aplicado ao Exemplo\n2.1.\nNa Tabela 6.2 podemos observar as principais etapas do Algoritmo Sep2 para as DCs aplicado ao Exemplo 2.1. Na referida tabela apresentamos apenas as desigualdades que cortam a solucao x*.\nIter.\tSep2-DC\t\n1\tPasso 1\tx*: xoi = 1; xo4 = 0,2; X12 = 1; X13 = 0,8; X34 = 0,8 e X43 = 0,2 Custo = 25,4 e peso = 20\n\tPasso 2, 3 e 4\tOrdena\u00e7\u00e3o: OrdW e OrdFixW DC: xoi + x04 + X12 + x34 &lt;3 Inserir, corta x* (3,2 > 3).\n2\tPasso 1\tx*: xoi = 1; X04 = 0,5; X12 = 1; X13 = 1 e X34 = 0,5 Custo = 25,5 e peso = 20\n\tPasso 2, 3 e 4\tOrdena\u00e7\u00e3o: OrdFixW e OrdFixWX DC: x01 + x04 + x12 + x13 &lt;3 Inserir, corta x* (3,5 > 3).\n3\tPasso 1\tx*: x01 = 1; x03 = 0,125; x04 = 0,125; x12 = 1; x13 = 0,875 e x34 = 0,875 Custo = 25,75 e peso = 20\nTabela 6.2: Principais resultados por itera\u00e7\u00e3o do Algoritmo Sep2 para as DCs aplicado ao Exemplo\n2.1.\nNeste exemplo, com a aplicac\u00e7a\u00e3o do Algoritmo Sep2 s\u00e3ao adicionadas tamb\u00e9em duas DCs, sendo estas as introduzidas no Algoritmo Sep1. Nas Itera\u00e7ao 1 e 2 foram omitidos os passos correspondentes as ordenac\u00e3es que nao formam nenhuma DC.\nUma desvantagem da aplica\u00e7\u00e3o do Algoritmo Sep2 poder\u00ed ser o consumo de tempo em obter desigualdades j\u00ed obtidas, pois na Tabela 6.2 nas Itera\u00e7\u00e3es 1 e 2 sao obtidas a mesma DC por dois modos de ordena\u00e7ca\u00e3o de arestas diferentes.\nA solu\u00e7ao obtida neste algoritmo tem custo 25,75 e peso 20 e \u00e9 igual a obtida pelo Algoritmo Sep1.\nPodemos observar tamb\u00e9m que as coberturas correspondentes \u00e0s DCs obtidas nos Algoritmos Sep1 e Sep2 sao minimais.\nProposicao 6.1.\nSe S e uma Cobertura formada pelos Algoritmos Sep1 e Sep2 usando a ordena\u00e7c\u00f5ao OrdW, ent\u00f5o S \u00e9 Cobertura Minimal.\nDemonstra\u00e7\u00e3o.\nSeja S uma Cobertura, com |S| = s e EOrdW = [e1, e2,..., es-1, es,..., et] a lista de arestas ordenadas por ordem decrescente de peso (OrdW), onde t e o numero de arestas da relaxa\u00e7c\u00f5ao linear com solu\u00e7c\u00f5ao positiva. Os pesos das arestas de Eordw verificam,\nWe1 > We2 > ... > Wes-1 > We, > ... > Wet.\nSe considerarmos a sucessiva inclus\u00f5ao de arestas em S obtemos:\nS = {e1}\twei &lt;W\nS = {e1, e2}\tWe1 + We2 &lt;W\nS = {e1, e2,... es-1}\tWei + we2 + ... + w^ &lt;W.\nComo ainda n\u00f5o temos a cobertura formada, pois so temos s _ 1 arestas inclu\u00eddas na cobertura ent\u00f5ao adicionamos a pr\u00e9oxima aresta da lista Eordw e obtemos\nWe1 + We2 + ... + Wes-1 + We, > W,\no que \u00e9 equivalente a ter ^2eSS We > W, pelo que S \u00e9 uma Cobertura.\nSe removermos a aresta de menor peso, es, da cobertura ficamos com\nV We &lt;W,\t(6.3)\neSS-{es}\ne se removermos qualquer outra aresta e\u00bb, com i = {1, 2,..., s _ 1}, sabemos que Wei\tWes, logo a desigualdade (6.3) \u00e9 sempre verificada.\nAssim S \u00e9e Cobertura Minimal.\n\u25a1\nQuando se utiliza uma das outras cinco ordena\u00e7\u00f5es propostas a cobertura formada pode n\u00e3ao ser minimal.\nPor exemplo, com a ordena\u00e7\u00e3o de arestas OrdWX,\nERLOrdWX = [{0, 1}, {1, 2}, {3, 4}, {1,3}, {0, 4}],\nobtemos a cobertura S = {{0,1}, {1, 2}, {3,4}, {1,3}, {0, 4}}, a qual n\u00e3o \u00e9 uma cobertura minimal, pois se removermos a aresta {1,3} do conjunto S o peso das restantes arestas \u00e9 WS = 25 > 20.\nNote-se ainda que com diferentes sequ\u00eancias de ordena\u00e7\u00e3es ou utilizando um maior ou menor numero de ordena\u00e7\u00e3es podemos obter DCs diferentes e, consequentemente, levar \u00e0 obten\u00e7ao de diferentes limites inferiores para o valor \u00e9timo.\n6.1.2\tAlgoritmo de Separa\u00e7\u00e3o para as DCI\nPara aplicar os Algoritmos Sep1 e Sep2 ao caso particular das Desigualdades de Cobertura Impl\u00e9cita (DCIs), temos de efetuar algumas alterac\u00e7o\u00e3es ao Passo 3 descrito na Subsec\u00e7\u00e3o 6.1.1, pois as CI s\u00e3o baseadas numa estrutura em arvore.\nPasso 3: Obter uma Desigualdade de Cobertura Impl\u00edcita\nSeja S = {}.\nFazer p =1 (inserir a primeira aresta de ERLOrdk no conjunto S).\nPasso 3.1: Construir o conjunto S (sem ciclos)\nAtualizar o conjunto S com as primeiras p arestas da lista ERLOrdk, desde que na\u00e3o formem ciclos.\nPasso 3.2: Verificar se S \u00e9 Cobertura Impl\u00edcita\nObter a a\u00e9rvore de suporte de peso m\u00e9nimo T, que inclui as p primeiras arestas de S.\nSe W(T) > W, ent\u00f5o\nS e uma CI.\nDCI: Y.ees Xe&lt;|S|- 1.\nCaso contrario,\nSe p &lt;#ERLordk, entao\np = p +1.\nVoltar ao Passo 3.1.\nCaso contrario,\nn\u00f5o e possiVel formar uma CI.\nPara obter uma DCI, no Passo 3.1 atualizamos, sucessivamente, o conjunto S com as arestas de ERLOrdk , desde que na\u00f5o formem ciclos. Inicialmente o conjunto S comec\u00e7a com uma aresta (p =1). A forma\u00e7\u00f5o da DCI \u00e9 realizada no Passo 3.2, onde formamos uma arvore de suporte de peso m\u00ednimo com as arestas de S. Enquanto a \u00e1rvore obtida verificar a restric\u00e7\u00f5ao de peso e existirem arestas de ERLOrdk para inserir em S, voltamos ao Passo 3.1 e atualizamos o conjunto S adicionando mais uma aresta da lista ERLOrdk. No caso de na\u00f5o existirem mais arestas para inserir em S, ent\u00f5ao n\u00f5ao \u00e9e poss\u00e9vel formar uma CI. Caso a restri\u00e7ca\u00f5o de peso n\u00f5ao seja verificada, S \u00e9e uma CI e temos a correspondente DCI.\nDe seguida exemplificamos os Algoritmos Sep1 e Sep2 para as DCIs usando as seis ordenac\u00f5es propostas (nord = 6) e a inst\u00e2ncia de 5 nodos do Exemplo 2.1.\nExemplo 6.2.\nConsideremos o Exemplo 2.1. De seguida apresentamos a explica\u00e7\u00f5o detalhada da Iterac\u00f5o 1 do Algoritmo Sep1 para as DCIs e na Tabela 6.3 encontram-se os principais passos das restantes itera\u00e7co\u00f5es.\nItera\u00e7\u00e3o 1:\nPasso 1: O conjunto de arestas com Xe > 0 na soluc\u00e7\u00f5ao da relaxac\u00e7a\u00f5o linear do Procedimento P-WMTZ+C \u00e9 dado por ERL = {{0,1}, {0, 4}, {1, 2}, {1, 3}, {3,4}}, onde X01 = 1; X04 = 0,2; X12 = 1; X13 = 0,8; X34 = 0,8 e X43 = 0,2 (restantes varia\u00e9veis com valor nulo).\nPasso 2: De seguida ordenamos as arestas do conjunto ERL, por exemplo, por ordem decrescente de peso e obtemos a seguinte lista de arestas ordenadas\nERLOrdW = [{0, 4}, {0,1}, {1, 2}, {3, 4}, {1, 3}].\nPasso 3: Considerando a primeira aresta da lista ordenada ERLOrdW, formamos no Passo 3.1 o conjunto S = {{0,4}} (p = 1).\nNo Passo 3.2 constru\u00edmos a \u00e1rvore de suporte de peso m\u00ednimo que inclui esta aresta e obtemos a solu\u00e7\u00e3o admiss\u00edvel da Figura 6.1 com peso 14.\n\t-\t1\t9\t8 -\t1\t15\t7 16\t\nC =\t\t- 30\t16\t\n\t\t-\t10\t\n\t\t\t-\t/\nFigura 6.1: Arvore de suporte de peso m\u00ednimo incluindo a aresta {0,4} com custo 47 e peso 14.\nComo a restri\u00e7\u00e3o de peso da arvore da Figura 6.1 nao \u00e1 violada, voltamos ao Passo 3.1 e aumentamos parap = 2 o numero de arestas no conjunto S = {{0,1}, {0, 4}} e obtemos a seguinte \u00e1rvore admiss\u00edvel com peso 18.\n( -\t19\n- 1\nC =\n8\t7 \\\n15 16\n30\t16\n- 10\n-\nFigura 6.2: \u00c1rvore de suporte de peso m\u00ednimo incluindo as arestas {0,1} e {0,4} com custo 32 e peso 18.\nA restric\u00e3o de peso continua a ser verificada (ver Figura 6.2), o que nos leva a aumentar para p = 3 o numero de arestas em S. Desta forma, S = {{0,1}, {0, 4}, {1,2}} e obtemos uma solu\u00e7ao nao admiss\u00edvel com peso 21 que se encontra representada na figura seguinte.\n/- 1\nC =\nk\n9\t8\t7\t\\\n1\t15\t16\n- 30\t16\n- 10\n-\nFigura 6.3: Arvore de suporte de peso m\u00ednimo incluindo as arestas {0,1}, {0,4} e {1, 2} com custo 24 e peso 21.\nA restricao de peso nao \u00e9 verificada (W(T) = 21 > 20 = W), o que significa que foi encontrada a CI. Podemos assim construir a correspondente DCI,\nXoi + X04 + X12 &lt;2.\nPasso 4: Como a DCI obtida corta a soluc\u00e3o fracionaria x* (2,2 > 2) \u00e1 introduzida no modelo.\nA informac\u00e3o respeitante \u00e0s restantes itera\u00e7\u00f5es encontra-se resumida na Tabela 6.3.\nIter.\nSepl-DCI\n2\tPasso 1\tx*: xoi = 1; xo3 ~ 0,1667; X12 = 1; X13 ~ 0,8333 e X34 = 1 Custo = 25,8333 e peso = 20\n\tPasso 2, 3 e 4\tOrdena\u00e7ao: OrdW DCI: x01 + x03 + x12 &lt;2 Inserir, corta x* (2,1667 > 2).\n3\tPasso 1\tx*: x01 = 0,875; x02 = 0,125; x03 = 0,125; x04 = 0,125; x12 = 0,875; x13 = 0,75; x21 = 0,125; x34 = 0,875 e x43 = 0,125 Custo = 26,125 e peso = 20\n\tPasso 2, 3 e 4\tOrdena\u00e7\u00e3o: OrdW DCI: x01 + x03 + x04 + x12 &lt;3. N\u00e3o corta x* (2,125\t3).\n\tPasso 2, 3 e 4\tOrdenacao: OrdFixW DCI: x02 + x12 + x13 + x34 &lt;3. N\u00e3o corta x* (2,875 3).\nTabela 6.3: Principais resultados por iterac\u00e3o do Algoritmo Sepl para as DCIs aplicado ao Exemplo\n2.1.\nNeste algoritmo s\u00e3o introduzidas no modelo duas DCIs, uma na Itera\u00e7\u00e3o 1 e uma na Itera\u00e7\u00e3o 2 ambas utilizando a ordena\u00e7\u00e3o OrdW. Como n\u00e3o \u00e9 poss\u00edvel obter mais nenhuma DCI na Itera\u00e7\u00e3o 3, dado que se percorreram todas as ordena\u00e7\u00e3es, ent\u00e3o o algoritmo termina e a solu\u00e7ao obtida tem custo 26,125 e peso 20. Note-se que na Itera\u00e7ao 3 foram omitidos os passos correspondentes \u00e0s ordena\u00e7\u00e3es que n\u00e3o formam nenhuma DCI.\nNa Tabela 6.4 podemos observar as principais etapas do Algoritmo Sep2 para as DCIs aplicado ao Exemplo 2.1.\nIter.\nSep2-DCI\n1\tPasso 1\tx*: xoi = 1; xo4 = 0,2; X12 = 1; X13 = 0,8; X34 = 0,8 e X43 = 0,2 Custo = 25,4 e peso = 20\n\tPasso 2, 3 e 4\tOrdena\u00e7\u00e3o: OrdW e OrdFixW DCI: x01 + x04 + x12 &lt;2 Inserir, corta x* (2,2 > 2).\n2\tPasso 1\tx*: xoi = 1; X03 ~ 0,1667; X12 = 1; X13 \u00ab 0,8333 e X34 = 1 Custo = 25,8333 e peso = 20\n\tPasso 2, 3 e 4\tOrdena\u00e7ao: OrdW DCI: x01 + x03 + x12 &lt;2 Inserir, corta x* (2,1667 > 2).\n\tPasso 2, 3 e 4\tOrdena\u00e7\u00e3o: OrdFixW DCI: x01 + x03 + x12 + x34 &lt;3 Inserir, corta x* (3,1667 > 3).\n3\tPasso 1\tx*: x01 = 0,875; x02 = 0,125; x03 = 0,125; x04 = 0,125; x12 = 0,875; x13 = 0,75; x21 = 0,125; x34 = 0,875 e x43 = 0,125 Custo = 26,125 e peso = 20\nTabela 6.4: Principais resultados por itera\u00e7\u00e3o do Algoritmo Sep2 para as DCIs aplicado ao Exemplo\n2.1.\nNo Algoritmo Sep2 sao adicionadas tr\u00eas DCIs, sendo duas delas as introduzidas no Algoritmo Sep1.\nNote-se que nas Itera\u00e7\u00e3es 1 e 2 foram omitidos os passos correspondentes \u00e0s or-dena\u00e7\u00e3es que n\u00e3o formam nenhuma DCI.\nA solu\u00e7ao obtida no Algoritmo Sep2 tem custo 26,125 e peso 20, sendo a mesma da obtida no Algoritmo Sep1.\n6.1.3\tAlgoritmo de Separa\u00e7\u00e3o para as DCIE\nPasso 3: Obter uma Desigualdade de Cobertura Impl\u00edcita Estendida\nPasso 3.1: Obter uma DCI\nSeja S = {}.\nFazer p =1 (inserir a primeira aresta de ERLOrdk no conjunto S).\nPasso 3.1.1: Construir o conjunto S (sem ciclos)\nAtualizar o conjunto S com as primeiras p arestas da lista ERLOrdk, desde que na\u00e3o formem ciclos.\nPasso 3.1.2: Verificar se S e Cobertura Impl\u00edcita\nObter a arvore de suporte de peso m\u00ednimo T, que inclui as p primeiras arestas de S.\nSe W(T) > W, ent\u00e3o\nS \u00e9e uma CI.\nDCI: EeeSxe &lt;|S| \u2014 1. Ir para o Passo 3.2.\nCaso contr\u00e9ario,\nSe p &lt;#ERLOrdk, entao\np = p +1.\nVoltar ao Passo 3.1.1.\nCaso contr\u00e9ario,\nna\u00e3o \u00e9e poss\u00e9vel formar uma CI.\nPasso 3.2: Obter uma DCIE\nCalcular Wmax = max{Wf : f E S}.\nObter o conjunto S1 = {e E E \\ S : we > wmax e S U {e} forma ciclo}. DCIE: ZeeS Xe + E . Xe&lt;|S| \u2014 1.\nQuando no Passo 3.1 \u00e9 obtida uma DCI, no Passo 3.2 temos apenas de obter o conjunto S'. Uma aresta pertence ao conjunto S' se n\u00e3o pertencer a S, se o seu peso for superior ou igual ao peso ma\u00e9ximo das arestas do conjunto S e, ainda, se formar ciclo com as arestas do conjunto S. Desta forma obtemos uma DCIE.\nNo caso de aplicarmos os Algoritmos Sep1 e Sep2 para as DCIEs ao Exemplo 2.1 n\u00e3o \u00e9 poss\u00e9vel obter nenhuma DCIE. Assim para exemplificar estes algoritmos no caso das DCIEs temos de recorrer a um outro exemplo.\nNas Tabelas 6.5 e 6.6 podemos observar as principais etapas dos Algoritmos Sep1 e Sep2 para as DCIEs aplicado ao Exemplo 5.4.\nIter.\tSepl-DCIE\t\nl\tPasso l\tx*: xoi = 1; xo4 = 0,2; X12 = 1; X13 = 0,8; X34 = 0,8 e X43 = 0,2 Custo = 25,4 e peso = 20\n\tPasso 2, 3 e 4\tOrdena\u00e7\u00e3o: OrdW DCI: xoi + X04 + X12 &lt;2 DCIE: x01 + x04 + x12 + x02 &lt;2 Inserir, corta x* (2,2 > 2).\n2\tPasso l\tx*: x01 = 1; x03 ~ 0,1667; x12 = 1; x13 \u00ab 0,8333 e x34 = 1 Custo \u00ab 25,8333 e peso = 20\n\tPasso 2, 3 e 4\tOrdenac\u00e7\u00e3ao: OrdW DCI: x01 + x03 + x12 &lt;2 Inserir, corta x* (2,1667 > 2).\n3\tPasso 1\tx*: x01 ~ 0,8571; x03 ~ 0,1429; x04 ~ 0,1429; x12 = 1; x13 \u00ab 0,7143; x31 \u00ab 0,1429; x34 \u00ab 0,8571 e x43 \u00ab 0,1429 Custo \u00ab 26,8571 e peso = 20\n\tPasso 2, 3 e 4\tOrdena\u00e7ca\u00e3o: OrdW DCI: x03 + x04 &lt;1. Nao corta x* (0,2857\t1).\n\tPasso 2, 3 e 4\tOrdena\u00e7ao: OrdFixW DCI: x03 + x04 + x12 &lt;2. N\u00e3o corta x* (1,2857\t2).\n\tPasso 2, 3 e 4\tOrdena\u00e7ao: OrdKnap DCI: x03 + x04 + x13 + x34 &lt;3. N\u00e3o corta x* (2,1429 3).\nTabela 6.5: Principais resultados por itera\u00e7\u00e3o do Algoritmo Sepl para as DCIEs aplicado ao Exemplo\n5.4.\nNeste algoritmo s\u00e3ao introduzidas duas desigualdades v\u00e9alidas, uma DCIE na Itera\u00e7c\u00e3ao 1 e uma DCI na Iterac\u00e3o 2, ambas obtidas usando a ordena\u00e7\u00e3o OrdW. Para a DCI obtida na Iterac\u00e7\u00e3ao 2 na\u00e3o foi poss\u00e9vel obter uma DCIE. Como na\u00e3o \u00e9e poss\u00e9vel na Itera\u00e7c\u00e3ao 3 obter mais nenhuma DCI ou DCIE, dado que se percorreram todas as ordenac\u00e7\u00e3oes, entao o algoritmo termina e a solu\u00e7\u00e3o obtida tem custo 26,8571 e peso 20. Note-se que na Itera\u00e7\u00e3o 3 foram omitidos os passos correspondentes \u00e0s ordena\u00e7\u00e3es que nao formam\nnenhuma DCI e, consequentemente, nenhuma DCIE.\nIter.\tSep2-DCIE\t\n1\tPasso 1\tx*: xoi = 1; xo4 = 0,2; X12 = 1; X13 = 0,8; X34 = 0,8 e X43 = 0,2 Custo = 25,4 e peso = 20\n\tPasso 2, 3 e 4\tOrdenac\u00e3o: OrdW e OrdFixW DCI: xoi + X04 + X12 &lt;2 DCIE: x01 + x04 + x12 + x02 &lt;2 Inserir, corta x* (2,2 > 2).\n2\tPasso 1\tx*: x01 = 1; x03 ~ 0,1667; x12 = 1; x13 \u00ab 0,8333 e x34 = 1 Custo \u00ab 25,8333 e peso = 20\n\tPasso 2, 3 e 4\tOrdena\u00e7ao: OrdW DCI: x01 + x03 + x12 &lt;2 Inserir, corta x* (2,1667 > 2).\n\tPasso 2, 3 e 4\tOrdenac\u00e7a\u00e3o: OrdFixW DCI: x01 + x03 + x12 + x34 &lt;3 Inserir, corta x* (3,1667 > 3).\n\tPasso 2, 3 e 4\tOrdenacao: OrdKnap DCI: x03 + x12 + x13 + x34 &lt;3. Nao Inserir (3\t3).\n3\tPasso 1\tx*: x01 ~ 0,8571; x03 ~ 0,1429; x04 ~ 0,1429; x12 = 1; x13 \u00ab 0,7143; x31 \u00ab 0,1429; x34 \u00ab 0,8571 e x43 \u00ab 0,1429 Custo \u00ab 26,8571 e peso = 20\n\tPasso 2, 3 e 4\tOrdena\u00e7ca\u00e3o: OrdW DCI: x03 + x04 &lt;1. Nao Inserir (0,2857\t1).\n\tPasso 2, 3 e 4\tOrdena\u00e7ca\u00e3o: OrdFixW DCI: x03 + x04 + x12 &lt;2. Nao Inserir (1,2857\t2).\n\tPasso 2, 3 e 4\tOrdena\u00e7c\u00e3ao: OrdKnap DCI: x03 + x04 + x13 + x34 &lt;3. N\u00e3o Inserir (2,1429\t3).\nTabela 6.6: Principais resultados por iterac\u00e3o do Algoritmo Sep2 para as DCIEs aplicado ao Exemplo\n5.4.\nNo Algoritmo Sep2 s\u00e3o adicionadas tr\u00eas desigualdades v\u00e9lidas, sendo uma delas uma DCIE e duas delas DCIs. Note-se que nas Iterac\u00e3es 1, 2 e 3 foram omitidos os passos correspondentes \u00e0s ordena\u00e7\u00f5es que n\u00e3o formam nenhuma DCI e, consequentemente, nenhuma DCIE.\nA solu\u00e7ao obtida neste algoritmo tem custo 26,8571 e peso 20, sendo a mesma da obtida no Algoritmo Sep1.\n6.1.4\tAlgoritmos de Separa\u00e7\u00e3o para as DCIL\nPara obter Desigualdades de Cobertura Impl\u00edcita Levantada (DCILs) temos de especificar o Passo 3 de modo que depois de se obter uma DCI se venha a encontrar uma correspondente DCIL.\nPasso 3: Obter uma Desigualdade de Cobertura Impl\u00edcita Levantada\nPasso 3.1: Obter uma DCI\nEste passo \u00e9 igual ao Passo 3.1 do Algoritmo para as DCIEs.\nPasso 3.2: Obter uma DCIL\nCalcular os coeficientes fie, e G R G E\\S.\ne = min &lt;|S|- 1\txf ^^2 fifxf : x G XWmst, xe = 1 > .\nI\tf&amp;S\tf&amp;R\t)\nDCIL: EeeS xe + EeeR e x, &lt;|S| - 1\nNo Passo 3.1, se for poss\u00edvel obter uma \u00edrvore de suporte de peso m\u00ednimo que contenha as arestas de S e n\u00e3o verifique a restric\u00e3o de peso, obtemos uma DCI e no Passo 3.2 efetuamos o c\u00edlculo dos coeficientes para fazer o levantamento das vari\u00edveis do conjunto R de arestas que ainda n\u00e3o foram levantadas e que se pretendem levantar de modo a obter uma DCIL. Assim, para aplicar os algoritmos de separa\u00e7ao ao caso das DCILs temos que ter em conta apenas a ordem de determina\u00e7ao dos coeficientes para efetuar o levantamento das vari\u00edveis. Recorde-se que as variaveis com xe > 0, que estao na solu\u00e7\u00e3o da relaxa\u00e7\u00e3o linear encontram-se ordenadas pelas ordens propostas na Sec\u00e7ao 6.1. As restantes vari\u00edveis com xe = 0 na solu\u00e7ao da relaxacao linear encontram-se por uma ordem arbitr\u00edria.\nOrdem de Determina\u00e7\u00e3o dos Coeficientes no Levantamento das Vari\u00e1veis\n\u2022 Levantamento das Vari\u00e1veis 1 (LV1)\nEfetuar o levantamento apenas das vari\u00edveis com xe > 0, que est\u00e3o na solucao da relaxa\u00e7\u00e3o linear de acordo com as ordenac\u00e3es propostas na Secc\u00e3o 6.1.\n\u2022\tLevantamento das Variaveis 2 (LV2)\nEfetuar o levantamento de todas as vari\u00e9veis. Sendo as variaveis com xe > 0, que est\u00f5o na solu\u00e7ao da relaxac\u00f5o linear levantadas em primeiro lugar de acordo com as ordenac\u00f5es propostas na Sec\u00e7\u00f5o 6.1. As restantes vari\u00e9veis sao levantadas numa ordem arbitraria.\n\u2022\tLevantamento das Variaveis 3 (LV3)\nEfetuar o levantamento de todas as variaveis. Sendo as vari\u00e9veis com xe > 0, que estao na solu\u00e7ao da relaxa\u00e7ao linear levantadas em primeiro lugar de acordo com as ordenac\u00f5es propostas na Sec\u00e7\u00f5o 6.1. As restantes variaveis s\u00f5o levantadas por ordem decrescente de peso.\nObserve-se que de entre as n(n^\u2014variaveis, podemos efetuar o levantamento de todas as vari\u00e9veis que nao perten\u00e7am a Cobertura S, isto \u00e9, necessitamos de determinar no maximo n(n^\u2014_ |S| coeficientes de variaveis para efetuar o seu levantamento. Para o c\u00e9lculo de forma sequencial dos coeficientes existem\t) _ |S|^ ! maneiras\ndiferentes de efetuar o levantamento das vari\u00e9veis. No caso do Exemplo 2.1, em que temos 5 nodos e uma cobertura com |S| = 3 (Exemplo 6.2), existem 7! = 5040 modos diferentes de efetuar o levantamento das vari\u00e9veis, o que significa que dependendo da ordem de levantamento das vari\u00e9veis tamb\u00e9m podem ser obtidas diferentes DCILs.\nNote-se que no caso dos coeficientes de todas as vari\u00e9veis a efetuar o levantamento serem nulos, nao temos uma DCIL, mas temos uma DCI, a qual poder\u00e9 ser inserida no modelo, caso corte a solucao fracionaria, x*.\nCaso a DCI contenha apenas uma aresta, a DCI correspondente \u00e9 da forma xe &lt;0. Neste caso n\u00e3o faz sentido efetuar o levantamento das variaveis, uma vez que o c\u00e9lculo dos coeficientes fif sera efetuado resolvendo o seguinte problema,\n\u00a13f = min{\u2014xe : x G XWMST,Xf = 1}.\nOs poss\u00e9veis valores destes coeficientes s\u00e3o \u20141 ou 0, mas como fif > 0, ent\u00e3o neste caso n\u00e3o \u00e9 necessario determinar os coeficientes, pois estes s\u00e3o todos nulos.\nFigura 6.4: Esquemas de obten\u00e7\u00e3o de uma DCIL dada uma DCI.\nNa Figura 6.4 podemos observar duas estrat\u00e9gias para a forma\u00e7\u00e3o de DCILs. No Passo 3 do algoritmo de separa\u00e7\u00e3o proposto para as DCILs, gera-se uma DCIL sempre que no Passo 3.1 \u00e9 obtida uma DCI (Esquema 1 - DCIL-E1 da Figura 6.4). Evidenciamos no Esquema 2- DCIL-E2 da Figura 6.4 que podemos s\u00e9 gerar uma DCIL apenas no caso da DCI obtida no Passo 3.1 cortar a solu\u00e7ao fracionaria, x*. Caso esta n\u00e3o corte, nao \u00e9 obtida nenhuma DCIL. Este facto pode ser vantajoso reduzindo o tempo de execu\u00e7\u00e3o do algoritmo de separa\u00e7\u00e3o.\nSe o c\u00e1lculo dos v\u00e1rios coeficientes das vari\u00e1veis a fazer levantamento for efetuado usando um algoritmo exato pode demorar muito tempo, dado que \u00e1 necess\u00e1ria a resolu\u00e7ao de no m\u00e1ximo n(n +) \u2014 |S| subproblemas, no caso de se efetuar o levantamento de todas as variaveis.\nPara diminuir o numero de subproblemas, n\u00e3o vamos efetuar o levantamento usual de variaveis nos seguintes casos:\n\u2022\tQuando a aresta correspondente \u00e0 variavel a efetuar levantamento pertencer \u00e0 \u00e9rvore de suporte de peso m\u00ednimo que cont\u00e9m as arestas do conjunto S;\n\u2022\tQuando a variavel a efetuar levantamento n\u00e3o verificar a seguinte restri\u00e7ao,\nWij + (n - 2)pmin &lt;W,\t(6.4)\nonde pmin \u00e9 o peso m\u00e9nimo de entre todos os pesos dos arcos (i,j) G A.\nPara explicar a raz\u00e3o da condi\u00e7ao dada por (6.4), podemos pensar que nos varios subproblemas a solu\u00e7\u00e3o obtida corresponde a uma \u00e1rvore de suporte que verifica a restricao de peso, isto \u00e1, Z}eeET wexe &lt;W. Como no caso do levantamento usual a aresta {i, j} correspondente \u00e0 vari\u00e1vel que se pretende efetuar o levantamento tem de estar na \u00e1arvore, ent\u00e3ao a varia\u00e1vel xij toma o valor um, pelo que obtemos wij + Z}ee^\\ii-ij}} wexe &lt;W. Assim ficam a faltar introduzir na arvore n \u2014 2 arestas e admitindo que estas arestas a introduzir t\u00eam peso m\u00ednimo pmin obtemos a seguinte restri\u00e7ao wij + (n \u2014 2)pmin &lt;W.\nPara determinar os coeficientes Pe de forma sequencial vamos descrever um algoritmo aproximado, baseado em relaxa\u00e7c\u00e3ao Lagrangeana que \u00e1e adaptado do Algoritmo Alg2 descrito na Secc\u00e3o 4.4. Aproveitamos para descrever um algoritmo gen\u00e1rico que para al\u00e1em de efetuar o levantamento usual de vari\u00e1aveis tamb\u00e1em efetua os chamados down-lifting e up-lifting.\nCalculo dos coeficientes das vari\u00e1veis a efetuar levantamento\nVamos considerar que pretendemos efetuar o levantamento da vari\u00e1vel xt. Seja\nR \u00c7 E0 U Ei U Ef o conjunto de variaveis que j\u00e1 foram sujeitas a levantamento, onde Ei \u00e1 o conjunto de variaveis fixas a um, E0 \u00e1 o conjunto de variaveis fixas a zero e Ef = E \\ (E0 U Ei U S). Para calcular o coeficiente necessitamos de um algoritmo gen\u00e1rico aproximado que resolva o seguinte problema,\nPt = &lt;|S| \u2014 1 ^2 xe I\teeS\nPexe\ty2 Pe(1 \u2014 xe): x G X (t),\ne\u20ac\u00f1n(EoUEf)\teeROEi\tJ\nonde\nX (t) =\nx G XWMST : xe\n1,\ne G E1 \\ R,xe = 0, e G Eo \\ R,xt = 1\nt G Ef \\ R;\nX(t)\tx\nt G Ei \\ R;\nX(t)\tx\nt G Eo \\ R.\nG XWMST : xe = 1\nG XWMST : xe = 1\nE1 \\ (R u{t}),\nE1 \\ R,xe = 0,\nxe = 0, e G Eo \\ R,xt = 0 j>\ne G Eo \\ (R u {t}),xt = 1 }\n(6.5)\n(6.6)\n(6.7)\n(6.8)\ne\ne\nG\nG\nRecordamos que caso se utilize o conjunto definido por (6.6) estamos a efetuar o levantamento usual de variaveis, no caso de utilizarmos o conjunto definido por (6.7) estamos a efetuar o chamado down-lifting e no caso de utilizarmos o conjunto definido por (6.8) estamos a efetuar o chamado up-lifting. Para resolver o problema (6.5) temos que minimizar a fun\u00e7\u00e3o objetivo |S| \u2014 1 \u2014 Eees xe \u2014 J2eeRn(-EoUE) Pexe \u2014 J2egRnE1 Pe(1 \u2014 xe). Tendo por base esta fun\u00e7\u00e3o objetivo vamos considerar uma matriz de custos modificados. Denotamos os custos modificados de cada arco (i, j) G A por cij. Como os custos dos arcos (i, j) G A s\u00e3o iguais aos custos das arestas {i, j} G E, para simplificar a nota\u00e7ao, definimos apenas os custos modificados das arestas e = {i, j} do seguinte modo\n|S 1 \u2014\t2 \u2014 Sf eRn\u00ae! Pf,\tse\te\tG\tS;\n|S 1 \u2014\t1 \u2014 pe \u2014 SfeRn\u00ae! pf,\tse\te\tG\tR h\t(Eo u\tEf);\n|S| \u2014\t1 \u2014 Sfe(RnEi)\\{e} pf,\tse\te\tG\tR h\tE1.\nInicialmente quando todos os coeficientes Pe das variaveis a efetuar levantamento forem nulos, pretende-se que o maior numero de arestas de S esteja na solu\u00e7c\u00e3ao, pois queremos minimizar a fun\u00e7\u00e3o objetivo. Os custos modificados v\u00e3o sendo sucessivamente alterados uma vez que dependem dos valores dos coeficientes das variaveis ja levantadas. Sempre que se determina um novo coeficiente os custos s\u00e3o alterados e t\u00eam em conta o novo valor obtido.\nPara resolver o problema dado em (6.5) vamos usar a relaxa\u00e7\u00e3o Lagrangeana. Assim, associamos a restric\u00e3o de peso um multiplicador de Lagrange A (A > 0) e adicionando o produto do multiplicador pela restric\u00e3o de peso \u00e0 fun\u00e7\u00e3o objetivo do problema (6.5) e obtemos o seguinte problema relaxado\nPt = min {h(S, R, A, P) : x G XL(t)} ,\t(6.9)\nonde\nh(S,R,A,P) = \u2014AW + |S | \u2014 1 ^2 xe \u2014\tPexe\tPe(1 \u2014 xe) + J2 Awexe,\neeS\teeRn(EoUEf)\teeRnEi\teeE\ne o conjunto XL(t) \u00e9 definido por um dos tr\u00eas conjuntos (6.6), (6.7) ou (6.8) com apenas uma altera\u00e7\u00e3o, em vez de x G Xwmst = XT h XK, apenas se tem de verificar que as solucoes pertencem ao conjunto formado pelas arvores de suporte, isto e, x G XT.\nOs valores ponderados para cada arco (i, j)\tA podem ser definidos do seguinte\nmodo\npij\tcij + Awij,\nonde o multiplicador de Lagrange, A (A > 0) \u00e9 dado por\nA =\nCm (Ta) - Cm (Tm)\nW (Tm ) - W (Ta )\n(6.10)\nsendo Ta uma \u00e1rvore de suporte admiss\u00e1vel e 7\u201e uma arvore de suporte nao admiss\u00e1vel para o Problema WMST.\nAntes da apresenta\u00e7ao do algoritmo heur\u00edstico para calcular o coeficiente das va-riaveis a efetuar levantamento, temos de ter em conta que, dependendo do tipo de levantamento que se est\u00e1 a efetuar (levantamento usual, down-lifting ou up-lifting), \u00e1 necess\u00e1rio definir alguns crit\u00e9rios para a constru\u00e7\u00e3o das \u00e1rvores de suporte.\nCrit\u00e9rios para obter \u00e1rvores\n\u2022\tCrit\u00e9rio de levantamento usual\nA \u00e9rvore de suporte tem de conter a aresta t.\n\u2022\tCrit\u00e9rio de down-lifting\nA \u00e9rvore de suporte n\u00e3o pode conter a aresta t, mas tem de conter as arestas de E1\\R.\n\u2022\tCrit\u00e9rio de up-lifting\nA arvore de suporte tem de conter a aresta t e nao conter as arestas de E0\\R.\nDeste modo a seguir encontra-se, de forma resumida, um algoritmo heur\u00edstico para calcular os coeficientes das vari\u00e1veis a efetuar o levantamento. Notemos que de cada vez que a execu\u00e7\u00e3o deste algoritmo \u00e9 chamada encontramos o valor de um coeficiente A-\nAlgoritmo heur\u00edstico para o c\u00e1lculo dos coeficientes das vari\u00e1veis a efetuar levantamento (HCoef)\nPasso 1: Inicializa\u00e7\u00f5es\nPasso 1.1: Obter um limite superior para\nObter, se poss\u00edvel, a \u00e1rvore de suporte de peso m\u00e1nimo, TWI, que verifica uma das tr\u00eas condi\u00e7\u00f5es seguintes:\nSe t\tE\tEf,\tent\u00e3o TwI\tverifica o\tCrit\u00e9rio de levantamento usual.\nSe t\tE\tEi,\tent\u00e3o TWI\tverifica o\tCrit\u00e9rio de down-lifting.\nSe t\tE\tEo,\tent\u00e3o TWI\tverifica o\tCrit\u00e9rio de up-lifting.\nSe TWI existir, entao\nSe W(TWI) > W, entao\nf = 0, STOP.\nCaso contr\u00e9ario,\nT = T a \u2014 wi \u2022\nSe t E Ef e CM(Ta) &lt;0, entao\nf = 0, STOP.\nCaso contr\u00e9ario,\nf = 0, STOP.\nPasso 1.2: Obter um limite inferior para ft\nObter, se poss\u00edvel, a \u00e1rvore de suporte de custo modificado m\u00ednimo, TcI, que\nverifica uma das tr\u00eas condic\u00e3es seguintes:\nSe t E Ef, entao TcI verifica o Crit\u00e9rio de levantamento usual.\nSe t E Ei, ent\u00e3o TcI verifica o Crit\u00e9rio de down-lifting.\nSe t E Eo, ent\u00e3ao TcI verifica o Crit\u00e9erio de up-lifting.\nSe TcI existir, entao\nSe W(TcI) &lt;W, entao\nTcI, \u00e9 a arvore correspondente a solugao \u00f3tima.\nA = Cm(Ta), STOP.\nCaso contr\u00f3rio,\nCaso contr\u00e1rio,\nft = 0, STOP.\nPasso 2: Obter uma nova \u00e1rvore\nCalcular os valores ponderados pij = Cij + Xwij para cada arco (i, j) G A.\nObter, se poss\u00edvel, a arvore de suporte ponderada m\u00ednima, TPI, que verifica uma das tr\u00eas condic\u00f5es seguintes:\nSe t\tG\tEf,\tent\u00e3o\tTPI\tverifica o Crit\u00e9rio\tde\tlevantamento\tusual.\nSe t\tG\tEi,\tent\u00e3o\tTpI\tverifica o Crit\u00e9rio\tde\tdown-lifting.\nSe t\tG\tE0,\tent\u00e3o\tTPI\tverifica o Crit\u00e9rio\tde\tup-lifting.\nCalcular CM(TPI), W(TPI) e P(TPI).\nSe TPI nao existir, entao\nPt = 0, STOP.\nPasso 3: Atualiza\u00e7\u00e3o de limites\nSe W(TPI) &lt;W, ent\u00f5o\natualizar o LS, isto \u00e9, se CM(TPI) &lt;CM(Ta) substituir Ta por TPI.\nSe t G Ef e CM(Ta) &lt;0, entao\nPt = 0, STOP.\nCaso contr\u00edario,\natualizar o LI, isto \u00e9, se CM(TPI) > CM(Tp) substituir Tp por TPI.\nSe Cm (Ta) = Cm (Tp), ent\u00f5o\nPt = Cm (Ta), STOP.\nPasso 4: Crit\u00e9rio de paragem\nSe |P(Ta) \u2014 P(TPI)| &lt;tol, ent\u00f5o\nTa \u00e9 a arvore correspondente a solu\u00e7ao aproximada.\nCalcular Pt, usando a relaxacao Lagrangeana dada por (6.9), STOP.\nSe t G Ef e Pt &lt;0, ent\u00f5o Pt = 0.\nCaso contr\u00e9ario,\nir para o Passo 2.\nNotamos que inicialmente todos os coeficientes e sao nulos. No Passo 1.1 \u00e9 obtida a \u00e9arvore de suporte de peso m\u00e9nimo que verifica determinado crit\u00e9erio dependendo do procedimento de levantamento que se esta a efetuar (levantamento usual, down-lifting ou up-lifting), a qual se denota por TWI, onde CM(TWI) e W(TWI) s\u00e3o, respetivamente, o custo modificado e o peso da arvore TWI. Se esta arvore existir e se nao verificar a restri\u00e7ao de peso, entao nao existe solu\u00e7ao e o algoritmo termina, sendo = 0. Caso a restric\u00e3o de peso seja verificada, ent\u00e3o foi encontrado um limite superior (LS) para o custo modificado e Ta = TWI. Neste caso, se estivermos a efetuar o levantamento usual (t E Ej) e o custo modificado da arvore Ta for inferior ou igual a zero, entao = 0 e o algoritmo termina. No caso de na\u00e3o ser poss\u00e9vel formar uma \u00e9arvore TWI o algoritmo termina, sendo = 0.\nNo Passo 1.2 obt\u00e9m-se a \u00e9rvore de suporte de custo modificado m\u00ednimo que verifica determinado crit\u00e9erio dependendo do procedimento de levantamento que se est\u00e9a a efetuar (levantamento usual, down-lifting ou up-lifting), a qual \u00e9 designada por TCI, onde CM(TCI) e W(TCI) s\u00e3o, respetivamente, o custo modificado e o peso da \u00e9rvore TCI. Se esta \u00e9arvore n\u00e3ao verificar a restri\u00e7c\u00e3ao de peso, ent\u00e3ao foi encontrado um limite inferior (LI) para o custo modificado e Tp = TCI. No caso de verificac\u00e3o da restri\u00e7\u00e3o de peso significa que foi encontrada a solu\u00e7ao otima e o algoritmo termina, sendo = CM (TCI). No caso de n\u00e3o ser poss\u00edvel formar uma \u00e9rvore TCI o algoritmo termina, sendo = 0.\nNo Passo 2 calculam-se os valores ponderados pij para cada arco (i,j) E A. De seguida \u00e9e obtida a \u00e9arvore de suporte ponderada m\u00e9nima que verifica determinado crit\u00e9erio dependendo do procedimento de levantamento que se est\u00ed a efetuar (levantamento usual, down-lifting ou up-lifting), a qual \u00e9 denotada por TPI, onde CM(TPI) e W(TPI) s\u00e3o, respetivamente, o custo modificado e o peso da \u00e9rvore TPI. Assim podemos definir os valores ponderados P(TPI) = CM (TPI) + XW(TPI) para um A > 0. No caso de nao ser poss\u00edvel formar uma \u00e9rvore TPI o algoritmo termina, sendo = 0.\nA \u00e9arvore TPI \u00e9e atualizada no Passo 3. No caso da restri\u00e7ca\u00e3o de peso ser verificada e o custo modificado da \u00e9rvore TPI nao ser superior ao custo modificado da \u00e9rvore Ta, entao atualizamos o limite superior (LS) e subtitu\u00edmos Ta por TPI, nesta situa\u00e7ao temos ainda de averiguar no caso de estarmos a efetuar o levantamento usual (t E Ej) se o custo modificado que atualiz\u00e9amos \u00e9e inferior ou igual a zero e neste caso o algoritmo termina com = 0. Caso a restri\u00e7ao de peso seja violada e o custo modificado da \u00e9rvore TPI nao for inferior ao custo modificado da \u00e9rvore Tp, entao atualizamos o limite inferior (LI) e subtitu\u00edmos Tp por TPI. Apos se ter efetuado a atualizacao dos limites podemos verificar se as duas \u00e9rvores Ta e Tp t\u00eam os mesmos custos modificados e em\ncaso afirmativo o algoritmo termina com Pt = CM(Ta).\nOs Passos 2 e 3 s\u00e3o executados ate que se verifique (Ta) - P(TpI)| &lt;tol, e assim o algoritmo termina, sendo Ta a arvore correspondente a solu\u00e7ao aproximada e Pt e obtido usando a relaxacao Lagrangeana dada por (6.9). No caso do coeficiente Pt ser um numero fracionario arredonda-se o seu valor para o inteiro mais proximo. Se estivermos a efetuar o levantamento usual de variaveis e se o coeficiente Pt for negativo, entao considera-se Pt = 0.\nNo exemplo que se segue aplicamos o Algoritmo Sep1 para as DCILs ao Exemplo 2.1 e exemplificamos tambem como se efetua o calculo de alguns coeficientes das variaveis a efetuar levantamento usando o Algoritmo HCoef.\nExemplo 6.3.\nDada a DCI, x01 + x04 + x12 &lt;2 obtida na Itera\u00e7\u00e3o 1 do Exemplo 6.2. Podemos efetuar o levantamento das restantes variaveis recorrendo \u00e0 ordena\u00e7ao que esta a ser utilizada. Assim a lista de arestas da solu\u00e7ao da relaxac\u00e3o linear \u00e9 dada por ERLOrdW = [{0, 4}, {0,1}, {1, 2}, {3, 4}, {1, 3}]. Como as tr\u00eas primeiras arestas ja se encontram na DCI, ent\u00e3o vamos fazer o levantamento das restantes arestas de ERLOrdW utilizando o Algoritmo HCoef para o calculo dos coeficientes das variaveis a efetuar levantamento.\nPara exemplificar o funcionamento do Algoritmo HCoef vamos calcular, detalhadamente, e de forma sequencial dois coeficientes. No levantamento da variavel x34 calcula-se o coeficiente P34 do seguinte modo,\nP34 = min{2 - x01 - x04 - #12 : x G Xwmst,x34 = 1}-\nNo Passo 1 do Algoritmo HCoef s\u00e3ao obtidas as seguintes arvores,\nCm (Twi ) = 2 e W (TWI) = 14\nFigura 6.5: Arvores de suporte TcI e TwI obtidas no Passo 1 do Algoritmo HCoef no calculo do coeficiente de levantamento usual ^34.\nAmbas as arvores da Figura 6.5 cont\u00eam a aresta {3, 4} correspondente a variavel da qual se pretende efetuar o levantamento. A arvore TwI foi obtida no Passo 1.1 e como tem peso 14, verifica a restri\u00e7\u00e3o de peso, assim Ta = TWI. No Passo 1.2 e obtida a arvore TCI que nao verifica a restri\u00e7\u00e3o de peso, ent\u00e3o TM = TCI. Deste modo obtemos um limite inferior e um limite superior para o coeficiente ^34, ou seja,\n-1 &lt;\u00c34 &lt;2.\nNo Passo 2 e obtida a arvore de suporte ponderada m\u00e9nima que contem a aresta {3, 4} (ver Figura 6.6).\nCm (TPi ) = 0 e W (TP ) = 19\nFigura 6.6: Arvore de suporte Tpi obtida no Passo 2 do Algoritmo HCoef no calculo do coeficiente de levantamento usual ^34.\nNo Passo 3 e atualizado o LS, pois CM(TPI) = 0 &lt;2 = CM(Ta), mas como Cm(Ta) = 0, ent\u00e3o ^34 = 0.\nPara calcular o coeficiente ^13 resolve-se o seguinte problema\n^13 = min{2 _ xo1 _ xo4 _ \u00a312 : x G Xwmst,\u00a313 = 1}.\nComo a aresta {1,3} pertence a arvore de suporte de peso m\u00ednimo que contem as arestas de S (Figura 6.3), entao ^13 = 0.\nNote-se que, no caso de aplicarmos o Levantamento de Variaveis LV1, nao se consegue obter nenhuma DCIL.\nPara calcular os restantes coeficientes das variaveis que n\u00f5o pertencem a solu\u00e7\u00f5o da relaxac\u00e7\u00f5ao linear temos de as ordenar, por exemplo, por ordem decrescente de peso (Levantamento de Variaveis LV3). Assim, como W03 > w24 > w23 > W02 > w14 vamos come\u00e7car por determinar o coeficiente da variavel xo3 resolvendo o seguinte problema\n^03 = min{2 _ xo1 _ xo4 _ ^12 : x G Xwmst,xo3 = 1}.\nPara determinar o coeficiente ^o3, no Passo 1 do Algoritmo HCoef sao obtidas as seguintes arvores,\nCm (T'WI) = 2 e W (T'WI) = 15\nFigura 6.7: Arvores de suporte TcI e TwI obtidas no Passo 1 do Algoritmo HCoef no c\u00e1lculo do coeficiente de levantamento usual ,d03.\nAmbas as arvores da Figura 6.7 cont\u00eam a aresta {0, 3} correspondente a variavel da qual se pretende efetuar o levantamento. A arvore TWI foi obtida no Passo 1.1 e como tem peso 15, verifica a restri\u00e7\u00e3o de peso, assim Ta = TWI. No Passo 1.2 \u00e9 obtida\na \u00e9rvore TcI que nao verifica a restric\u00f5o de peso, entao T^ = TcI. Deste modo obtemos um limite inferior e um limite superior para o coeficiente @03, ou seja,\n-1 &lt;@03 &lt;2.\nNo Passo 2 \u00e9e obtida a \u00e9arvore de suporte ponderada m\u00e9nima que cont\u00e9em a aresta {0, 3} (ver Figura 6.8).\nCm (TpI) = 0 e W(TpI) = 22\nFigura 6.8: Primeira \u00e1rvore de suporte Tpi obtida no Passo 2 do Algoritmo HCoef no calculo do coeficiente de levantamento usual ^03.\nNo Passo 3 \u00e9e atualizado o LI, pois\nW(Tp,) = 22 > 20 = W e Cm(TpI) = 0 > -1 = Cm(TJ.\nAssim temos que\n0 &lt;&lt;2.\nVolta-se ao Passo 2, onde \u00e9e obtida a nova \u00e9arvore de suporte ponderada m\u00e9nima que contem a aresta {0, 3} e que se encontra representada na figura seguinte,\n2.\n8\nTpi:\nCm (TpI) = 1 e W (TPI) = 18\nFigura 6.9: Segunda \u00e1rvore de suporte TPI obtida no Passo 2 do Algoritmo HCoef no c\u00e1lculo do coeficiente de levantamento usual ^03.\nAgora no Passo 3 \u00e1 atualizado o LS, pois\nW(Tpi) = 18 &lt;20 = W e Cm(Tp,) = 1 &lt;2 = Cm(T\u00ab).\nAssim temos que\n0 &lt;@03 &lt;1.\nVoltando ao Passo 3 obt\u00e9m-se a mesma arvore de suporte da Figura 6.9. Como o crit\u00e1erio de paragem do algoritmo \u00e1e verificado, ent\u00e3ao\n@03 = 0,25 x 20 + 1 + 0,25 x 18 = 0,5.\nEfetuando o arredondamento para o inteiro mais pr\u00e1ximo obtemos\n@03 = 1.\nDe seguida calculam-se os restantes coeficientes de forma sequencial usando tamb\u00e1m o Algoritmo HCoef.\n@24 = min{2\t\u2014\tXoi \u2014 X04 \u2014 X03\t\u2014\tX12\t:\tx\tG Xwmst, X24\t=\t1}\t=\t0;\n@23 = min{2\t\u2014\tX01 \u2014 X04 \u2014 X03\t\u2014\tX12\t:\tx\tG Xwmst,X23\t=\t1}\t=\t0;\n@02 = min{2\t\u2014\tX01 \u2014 X04 \u2014 X03\t\u2014\tX12\t:\tx\tG Xwmst, X02\t=\t1}\t=\t0;\n@14 = min{2\t\u2014\tX01 \u2014 X04 \u2014 X03\t\u2014\tX12\t:\tx\tG Xwmst, X14\t=\t1}\t=\t0.\nLogo, a DCIL obtida \u00e1 dada por:\nX01 + X04 + X12 + x03 &lt;2.\nEsta desigualdade corta a solu\u00e7\u00e3o fracion\u00e1ria (2,2 > 2). Ap\u00f3s a introdu\u00e7\u00e3o da DCIL no modelo obt\u00f3m-se a nova solu\u00e7\u00e3o da relaxa\u00e7\u00e3o linear do Procedimento P-WMTZ+C x01 = 1; x12 = 1; x13 = 1 e x34 = 1, com custo de 27 e peso 20. Como esta solu\u00e7ao \u00f3 inteira obtivemos a solu\u00e7ao otima da inst\u00e2ncia com apenas a introduc\u00e3o de um corte.\nSe aplicarmos o Algoritmo Sep2 ao Exemplo de 5 nodos apenas se forma a DCIL obtida no Algoritmo Sep1.\nFigura 6.10: Esquemas de obten\u00e7\u00e3o de uma DCIL dada uma DCIE.\n6.1.5\tAlgoritmo de Separa\u00e7\u00e3o para as DCILDL\nPara obter Desigualdades de Cobertura Impl\u00edcita Levantada por Down-Lifting (DCILDLs) temos de alterar o Passo 3 de modo a obter uma CI v\u00e1lida para o conjunto restrito XE1 = XWMST C {x : Xf = 1, f E Ex} ea correspondente DCILDL.\nPasso 3: Obter uma Desigualdade de Cobertura Impl\u00edcita Levantada por Down-Lifting\nSeja Ei o conjunto de variaveis fixas a um.\nPasso 3.1: Obter uma DCI valida para o conjunto restrito X E\nSeja S = {}.\nFazer p =1 (inserir em S, a primeira aresta de ERLOrdk tal que e / Ey).\nPasso 3.1.1: Construir o conjunto S (sem ciclos)\nAtualizar o conjunto S com as primeiras p arestas de ERLOrdk, desde que n\u00e3o formem ciclos e que n\u00e3o perten\u00e7am ao conjunto Ey.\nPasso 3.1.2: Verificar se S e CI para o conjunto restrito X Ei\nObter a arvore de suporte de peso m\u00ednimo T, que inclui as p primeiras arestas de S e as arestas de Ey.\nSe W(T) > W, entao\nS \u00e1 uma CI para o conjunto restrito XE1. DCI:\txe &lt;|S| \u2014 1. Ir para o Passo 3.2.\nCaso contr\u00e1rio,\nSe p &lt;#ERLordk, ent\u00e3o\np = p +1.\nVoltar ao Passo 3.1.1.\nCaso contr\u00e1ario,\nna\u00e3o \u00e1e poss\u00e1vel formar uma CI.\nPasso 3.2: Obter uma DCILDL\nCalcular os coeficientes fie, e E R \u00c7 Ey U Ef.\n/3e = min &lt;|S| \u2014 1 \u2014 ^Xt \u2014\tfax \u2014\t&amp;(1 \u2014 Xt) : x E X(e),\nI\ttes\tteRnEf\tteRnEi\tI\n\u2022 e G Ef \\ R\nX(e) = {x G Xwmst : xt = 1,t G E1 \\ R,xe = 1J;\n\u2022 e G E1 \\ R\nX(e) = {x G Xwmst : xt = 1,t G E1 \\ (R U {e}),x = 0^.\nDCILDL: EeSS xe + ^2e&amp;RnEf @exe + E-cRmE, @e(1 xe) &lt;|S|\t1-\nInicialmente no Passo 3 consideramos um conjunto de variaveis fixas a um, que designamos por E1, depois no Passo 3.1 obtemos uma DCI valida para o conjunto restrito X E\ne no Passo 3.2 efetuamos o calculo dos coeficientes para fazer o levantamento das variaveis de E1 e de Ef = E \\ (S U E1) e obter a DCILDL. Assim, para aplicar os algoritmos de separa\u00e7\u00e3o ao caso das DCILDLs temos que ter em conta os tr\u00eas fatores que se seguem:\n\u2022\tA escolha do conjunto de variaveis a fixar a um (conjunto E1);\n\u2022\tA ordem dos procedimentos a adotar para efetuar o levantamento das variaveis;\n\u2022\tA ordem de determinac\u00e3o dos coeficientes para efetuar o levantamento das variaveis.\nEscolha do Conjunto de Vari\u00e1veis a Fixar a um, E1\nQuando fixamos variaveis a um estamos a fazer com que essas variaveis fa\u00e7am parte da solu\u00e7ao. Segundo Gu et. al. [29] devem-se selecionar as variaveis com valores mais elevados na soluc\u00e3o da relaxa\u00e7\u00e3o linear. Assim, propomos os seguintes modos de escolha do conjunto E1:\n\u2022\tFixa\u00e7ao de Vari\u00e1veis D1 (FVD1)\nFixar a um as variaveis que t\u00eam valor um na soluc\u00e3o da relaxac\u00e3o linear.\n\u2022\tFixa\u00e7ao de Vari\u00e1veis D2 (FVD2)\nFixar a um as variaveis que t\u00eam valor um na solu\u00e7ao da relaxac\u00e3o linear e que n\u00e3o pertencem a arvore de suporte de peso m\u00ednimo, Tw.\n\u2022\tFixa\u00e7\u00e3o de Vari\u00e1veis D3 (FVD3)\nFixar a um uma unica vari\u00e1vel, a vari\u00e1vel de menor peso com valor um na solu\u00e7ao da relaxa\u00e7\u00e3o linear e que nao pertence \u00e0 \u00e9rvore de suporte de peso m\u00e9nimo, Tw.\nOrdem de Determina\u00e7\u00e3o dos Coeficientes no Levantamento das Vari\u00e1veis\n\u2022\tProcedimento de Levantamento LD (PL-LD)\nPrimeiro efetuamos o levantamento sequencial usual e depois o down-lifting.\n\u2022\tProcedimento de Levantamento DL (PL-DL)\nPrimeiro efetuamos o down-lifting e depois o levantamento sequencial usual.\nOrdem de Determina\u00e7\u00e3o dos Coeficientes no Levantamento das Vari\u00e1veis\nPara efetuar o levantamento sequencial usual podemos usar as mesmas ordens propostas na Subsec\u00e7ao 6.1.4. No down-lifting ordenamos as vari\u00e9veis por ordem crescente de peso. Podemos efetuar primeiro o levantamento das vari\u00e9veis com menor peso ou com maior peso.\nNote-se que:\n\u2022\tQuando o numero de variaveis a fixar a um for nulo (E1 = 0), nao se aplica o procedimento down-lifting e aplica-se apenas o procedimento de levantamento sequencial usual, se a DCI v\u00e9lida para o conjunto restrito XE1 cortar a solucao fracionaria x*;\n\u2022\tNo caso da DCI v\u00e9lida para o conjunto restrito XE1 conter apenas uma vari\u00e9vel, ent\u00e3o faz-se apenas o down-lifting, uma vez que se efetuarmos o levantamento sequencial usual os coeficientes s\u00e3o todos nulos.\nPara exemplificar o Algoritmo HCoef vamos calcular um coeficiente down-lifting para o Exemplo 2.1.\nExemplo 6.4.\nDada a DCI, x04 &lt;0 v\u00e9lida para o conjunto restrito XE1 = XWMst A {xe : x01 = x12 = 1}. Para fazer o levantamento da vari\u00e9vel x12 e calcular o coeficiente \u00a312 temos de resolver o seguinte problema\n\u00a312 = min{-xo4 : x G Xwmst,xi2 = 0,xoi = !}\u2022\nPara determinar este coeficiente, no Passo 1 do Algoritmo HCoef sao obtidas duas \u00e9rvores, as quais cont\u00eam a aresta {0,1} e nao cont\u00eam a aresta {1, 2} (ver Figura 6.11).\nCm (Tci ) = \u2014 1 e W(TCI) = 24\nFigura 6.11: Arvores de suporte TcI e TwI obtidas no Passo 1 do Algoritmo HCoef no c\u00e1lculo do coeficiente down-lifting ^12 \u2022\nA \u00e9rvore TwI foi obtida no Passo 1.1 e como tem peso 13, verifica a restri\u00e7ao de peso, assim Ta = TWI. No Passo 1.2 \u00e9 obtida a arvore TCI que n\u00e3o verifica a restri\u00e7ao de peso, ent\u00e3o TM = TCI. Deste modo obtemos um limite inferior e um limite superior para o coeficiente \u00a312, ou seja,\n-1 &lt;\u00a312 &lt;0.\nNo Passo 2 \u00e9e obtida a \u00e9arvore de suporte ponderada m\u00e9nima que cont\u00e9em a aresta {0,1} e nao cont\u00e9m a aresta {1, 2} (ver Figura 6.12).\n6\n2\nTpi :\nCm (Tpi ) = -1e W (TPI) = 18\nFigura 6.12: Arvore de suporte TPI obtida no Passo 2 do Algoritmo HCoef no c\u00e1lculo do coeficiente down-lifting ^12-\nNo Passo 3 \u00e9 atualizado o LS, pois\nW(Tpi) = 18 N 20 = W e CM(TPI) = -1 = Cm(T\u00ab).\nAssim temos que\nP12 = Cm (Ta) = -1.\nDe seguida calculam-se os restantes coeficientes de forma sequencial usando tamb\u00e9m o Algoritmo HCoef.\nNas Tabelas 6.7 e 6.8 podemos observar as principais etapas do Algoritmo Sepl para as DCILDLs aplicado ao Exemplo 2.1, onde sao escolhidos dois conjuntos diferentes de fixac\u00e7\u00f5ao de varia\u00e9veis.\nIter.\tSepl-DCILDL, FVD3\t\n\tPasso 1\tx*: xoi = 1; xo4 = 0,2; x42 = 1; x43 = 0,8; x^ = 0,8 e x^^ = 0,2 Custo = 25,4 e peso = 20\n1\tPasso 2, 3 e 4\tOrdenac\u00e3o: OrdW E1 = {{1, 2}} DCI: x01 + x04 N 1 DCILDL: x01 + x03 + x04 + x12 N 2 Inserir, corta x* (2,2 > 2).\n2\tPasso 1\tx*: x0i = 1; xi2 = 1; x43 = 1 e x34 = 1 Custo = 27 e peso = 20\nTabela 6.7: Principais resultados por itera\u00e7\u00e3o do Algoritmo Sepl para as DCILDLs com fixa\u00e7\u00e3o de vari\u00e1veis FVD3 aplicado ao Exemplo 2.1.\nIter.\nSepl-DCILDL, FVD2\n1\tPasso 1\tx*: xoi = 1; xo4 = 0,2; X12 = 1; X13 = 0,8; X34 = 0,8 e X43 = 0,2 Custo = 25,4 e peso = 20\n\tPasso 2, 3 e 4\tOrdena\u00e7ao: OrdW Ei = {{0,1}; {1, 2}} DCI: X04 &lt;0 DCILDL: x0i + x04 + xi2 &lt;2 Inserir, corta x* (2,2 > 2).\n2\tPasso 1\tx*: xoi = 1; xo3 ~ 0,1667; xi2 = 1; xi3 \u00ab 0,8333 e x34 = 1 Custo = 25,8333 e peso = 20\n\tPasso 2, 3 e 4\tOrdenac\u00e3o: OrdW Ei = {{0,1}; {1, 2}; {3,4}} DCI: xo3 &lt;0 DCILDL: xoi + xo3 + xi2 &lt;2 Inserir, corta x* (2,1667 > 2).\n3\tPasso 1\tx*: xoi = 0,875; xo2 = 0,125; xo3 = 0,125 xo4 = 0,125; xi2 = 0,875; xi3 = 0,75; x2i = 0,125; x34 = 0,875 e x43 = 0,125 Custo = 26,125 e peso = 20\n\tPasso 2, 3 e 4\tOrdena\u00e7ao: OrdW Ei = {} DCI: xo1 + xo3 + xo4 &lt;2. N\u00e3o corta x* (1,125\t2).\nTabela 6.8: Principais resultados por iterac\u00e3o do Algoritmo Sepl para as DCILDLs com fixa\u00e7\u00e3o de vari\u00e1veis FVD2 aplicado ao Exemplo 2.1.\nDa observa\u00e7ao das Tabelas 6.7 e 6.8 podemos concluir que a utiliza\u00e7\u00e3o de diferentes formas de escolher o conjunto E1 podem levar \u00e0 obten\u00e7ao de diferentes DCILDLs. Nestes dois exemplos foi utilizado o mesmo procedimento de levantamento das variaveis, PL-LD. Utilizando a fixa\u00e7\u00e3o de variaveis FVD2 (Tabela 6.8) foram introduzidas no modelo duas DCILDLs e na\u00e3o foi obtida a solu\u00e7c\u00e3ao otima, enquanto que utilizando a fixa\u00e7\u00e3o de variaveis FVD3 (Tabela 6.7) so foi introduzida no modelo uma DCILDL, a qual levou a obten\u00e7\u00e3o da solu\u00e7\u00e3o otima com custo 27 e peso 19.\nCaso se utilize o procedimento de levantamento das variaveis PL-DL e as fixa\u00e7c\u00e3oes de variaveis FVD2 e FVD3 obt\u00eam-se os resultados dados na Tabela 6.7. Assim tambem se pode observar que a utilizac\u00e7\u00e3ao de diferentes procedimentos de levantamento de variaveis pode levar \u00e0 obten\u00e7\u00e3o de diferentes DCILDLs.\nSe aplicarmos o Algoritmo Sep2 ao Exemplo de 5 nodos apenas se forma a DCILDL obtida na Itera\u00e7\u00e3o 1 do Algoritmo Sep1 que se encontra na Tabela 6.7.\n6.1.6\tAlgoritmo de Separa\u00e7\u00e3o para as DCILUL\nNo caso de pretendermos obter Desigualdades de Cobertura Impl\u00e9cita Levantada por Up-Lifting (DCILULs) temos de alterar o Passo 3, da Secc\u00e3o 6.1.5 para agora obter uma CI valida para o conjunto restrito XE\u00b0 = Xwmst {x : Xj = 0, f E Eo} e a correspondente DCILUL. A principal diferen\u00e7a no Passo 3.1 deste algoritmo relativamente ao algoritmo para as DCILDLs \u00e9 a altera\u00e7\u00e3o do conjunto Ex para o conjunto Eo. Deste modo temos de obter uma DCI valida para o conjunto restrito XEo e no Passo 3.1.2 a \u00e9rvore de suporte de peso m\u00ednimo tem de conter as arestas de S, mas na\u00e3o pode conter as arestas do conjunto Eo.\nPasso 3: Obter uma Desigualdade de Cobertura Impl\u00edcita Levantada por Up-Lifting\nSeja Eo o conjunto de vari\u00e9aveis fixas a zero.\nPasso 3.1: Obter uma DCI valida para o conjunto restrito XE\u00b0\nSeja S = {}.\nFazer p =1 (inserir em S, a primeira aresta de ERLOrdk tal que e / Eo).\nPasso 3.1.1: Construir o conjunto S (sem ciclos)\nAtualizar o conjunto S com as primeiras p arestas de ERLOrdk, desde que n\u00e3ao formem ciclos e que na\u00e3o perten\u00e7cam ao conjunto Eo.\nPasso 3.1.2: Verificar se S \u00e9 CI para o conjunto restrito XE\u00b0\nObter a a\u00e9rvore de suporte de peso m\u00e9nimo T, que inclui as p primeiras arestas de S e cujas arestas de Eo nao pertencam \u00e0 arvore.\nSe W(T) > W, ent\u00e3o\nS \u00e9 uma CI para o conjunto restrito XEo.\nDCI: \u00a3eeSxe &lt;|S| \u2014 1. Ir para o Passo 3.2.\nCaso contra\u00e9rio,\nSe p &lt;#ERLOrdk, entao\np = p +1.\nVoltar ao Passo 3.1.1.\nCaso contra\u00e9rio,\nna\u00e3o \u00e9e poss\u00e9vel formar uma CI.\nPasso 3.2: Obter uma DCILUL\nCalcular os coeficientes fie, e G R \u00c7 E0 U Ef.\n>, = min &lt;|S| \u2014 1 \u2014 xt\tfitxt : x G X (e),\nt^S\ttGRn(EoUE f)\n\u2022\te G Ef \\ R\nX(e) = {x G Xwmst : xt = 0,t G Eo \\ R,Xe = 1\n\u2022\te G Eo \\ R\nX(e) = {x G Xwmst : Xt = 0,t G Eo \\ (R U {e}),xe = 1\nDCILUL: ^eeS xe + Segf\u00edn(E0UEf) Pexe &lt;|S 1 \u2014 1-\nInicialmente no Passo 3 consideramos um conjunto de vari\u00e1veis fixas a zero que designamos por Eo, depois no Passo 3.1 obtemos uma DCI v\u00e1lida para o conjunto restrito XE\u00b0 e no Passo 3.2 efetuamos o calculo dos coeficientes para fazer o levantamento das variaveis de Eo e de Ef = E\\(S U Eo) e obter a DCILUL. Assim, para aplicar os algoritmos de separa\u00e7\u00e3o ao caso das DCILULs temos que ter em conta os tr\u00eas fatores que se seguem:\n\u2022\tA escolha do conjunto de vari\u00e1veis a fixar a zero (conjunto Eo);\n\u2022\tA ordem dos procedimentos a adotar para efetuar o levantamento das vari\u00e1veis;\n\u2022\tA ordem de determinac\u00e3o dos coeficientes para efetuar o levantamento das vari\u00e1veis.\nEscolha do Conjunto das Vari\u00e1veis a Fixar a zero, Eo\nQuando fixamos variaveis a zero estamos a eliminar a possibilidade dessas vari\u00e1veis estarem na soluc\u00e3o.\n\u2022\tFixa\u00e7ao de Vari\u00e1veis U1 (FVU1)\nFixar a zero todas as vari\u00e1veis cujas correspondentes arestas pertencem \u00e0 \u00e1rvore de suporte de peso m\u00ednimo Tw, e n\u00e3o tomam o valor um (tomam um valor inferior a um) na solu\u00e7\u00e3o da relaxa\u00e7ao linear.\n\u2022\tFixa\u00e7\u00e3o de Vari\u00e1veis U2 (FVU2)\nFixar a zero as vari\u00e1veis cujas correspondentes arestas pertencem \u00e0 arvore de suporte de peso m\u00ednimo Tw, e t\u00eam valor zero na solucao da relaxacao linear.\n\u2022\tFixa\u00e7\u00e3o de Vari\u00e1veis U3 (FVU3)\nFixar a zero uma unica vari\u00e1vel, a de maior peso que tem valor inferior a um na solucao da relaxa\u00e7\u00e3o linear e cuja correspondente aresta pertence \u00e0 \u00e1rvore de suporte de peso m\u00ednimo Tw.\n\u2022\tFixa\u00e7ao de Variaveis U4 (FVU4)\nFixar a zero uma unica vari\u00e1vel, a de maior peso que tem valor zero na solu\u00e7\u00e3o da relaxacao linear e cuja correspondente aresta pertence \u00e0 \u00e1rvore de suporte de peso m\u00ednimo Tw.\nProcedimentos a adotar para levantamento das variaveis\n\u2022\tProcedimento de Levantamento LU (PL-LU)\nPrimeiro efetuamos o levantamento sequencial usual e depois o up-lifting.\n\u2022\tProcedimento de Levantamento UL (PL-UL)\nPrimeiro efetuamos o up-lifting e depois o levantamento sequencial usual.\nOrdem de Determina\u00e7\u00e3o dos Coeficientes no Levantamento das Variaveis\nPara efetuar o levantamento sequencial usual podemos usar as mesmas ordens propostas na Subsec\u00e7\u00e3o 6.1.4. No up-lifting ordenamos as variaveis por ordem crescente de peso. Podemos testar se efetuamos primeiro o levantamento das vari\u00e1veis com menor peso ou com maior peso.\nNote-se que:\n\u2022\tQuando o numero de vari\u00e1veis a fixar a zero for nulo, ou seja, E0 = 0 n\u00e3o se aplica o procedimento up-lifting e aplica-se apenas o procedimento de levantamento sequencial usual, se a DCI v\u00e1lida para o conjunto restrito XE\u00b0 cortar a solucao fracionaria x*.\n\u2022 No caso da DCI v\u00f3lida para o conjunto restrito XEo conter apenas uma vari\u00f3vel, ent\u00e3o faz-se apenas o up-lifting, uma vez que, se efetuarmos o levantamento sequencial usual os coeficientes s\u00e3o todos nulos.\nPara exemplificar o Algoritmo HCoef vamos calcular dois coeficientes up-lifting para o Exemplo 2.1.\nExemplo 6.5.\nDada a DCI, x04 &lt;0 valida para o conjunto restrito XEo = Xwmst A {xe : x02 = x13 = x14 = x23 = 0}. Para fazer o levantamento da vari\u00f3vel x23 e calcular o coeficiente ^23 temos de resolver o seguinte problema\n^23 = min{ \u2014 x04 : x \u00ea XWMST ,x23 = 1, x02 = x13 = x14 = 0}-\nPara determinar este coeficiente, no Passo 1.1 do Algoritmo HCoef \u00f3 obtida a \u00f3rvore de suporte de peso m\u00ednimo que cont\u00e9m a aresta {2, 3} e n\u00e3o cont\u00e9m as restantes arestas de E0 (ver Figura 6.13).\nCm (Twi ) \u2014 0 e W (TWI) \u2014 21\nFigura 6.13: Arvore de suporte TwI obtida no Passo 1.1 do Algoritmo HCoef no c\u00e1lculo do coeficiente up-lifting ^23 \u2022\nComo W(TWI) \u2014 21 > 20 \u2014 W, ent\u00e3o ^23 \u2014 0.\nPara calcular o coeficiente ^02 temos de resolver o seguinte problema\n^02 \u2014 mm{-X)4 : x\tXwmst,xo2 \u2014 1,xi3 \u2014 xi4 \u2014 0}.\nPara determinar este coeficiente, no Passo 1.1 do Algoritmo HCoef s\u00e3o obtidas duas \u00e1rvores de suporte que cont\u00eam a aresta {0, 2} e nao cont\u00eam as arestas {1,3} e {1,4} (ver Figura 6.14).\nFigura 6.14: Arvores de suporte TcI e TwI obtidas no Passo 1 do Algoritmo HCoef no c\u00e1lculo do coeficiente up-lifting do2.\nA \u00e1rvore TwI foi obtida no Passo 1.1 e como tem peso 18, verifica a restri\u00e7ao de peso, assim Ta = TwI. No Passo 1.2 \u00e1 obtida a \u00e1rvore TcI que n\u00e3o verifica a restri\u00e7\u00e3o de peso, ent\u00e3o T^ = TCI. Deste modo obtemos um limite inferior e um limite superior para o coeficiente ^02, ou seja,\n-1 &lt;P02 &lt;0.\nNo Passo 2 \u00e1e obtida a \u00e1arvore de suporte ponderada m\u00e1nima que cont\u00e1em a aresta {0, 2} e n\u00e3o cont\u00e1m as arestas {1, 3} e {1, 4} (ver Figura 6.15).\nFigura 6.15: Arvore de suporte TPI obtida no Passo 2 do Algoritmo HCoef no calculo do coeficiente up-lifting ^02.\nNo Passo 3 e atualizado o LS, pois\nW(Tpi) = 20 = W e Cm(Tpt) = \u20141 = Cm(Ta).\nAssim temos que\n@02 = Cm (Ta) = \u20141.\nOs restantes coeficientes s\u00e3o tambem calculados de forma sequencial atraves do Algoritmo HCoef.\nNas Tabelas 6.9 e 6.10 podemos observar as principais etapas do Algoritmo Sep1 para as DCILULs aplicado ao Exemplo 2.1, onde s\u00e3o escolhidos dois procedimentos diferentes de levantamento de variaveis.\nIter.\tSepl-DCILUL, PL-UL\t\n1\tPasso 1\tx*: xoi = 1; xo4 = 0,2; X12 = 1; X13 = 0,8; X34 = 0,8 e X43 = 0,2 Custo = 25,4 e peso = 20\n\tPasso 2, 3 e 4\tOrdena\u00e7\u00e3o: OrdW Eo = {{0, 2}; {1, 3}; {1,4}; {2, 3}} DCI: xoi + xo4 + xi2 &lt;2 DCILUL: xo1 + xo3 + xo4 + x12 &lt;2 Inserir, corta x* (2,2 > 2).\n2\tPasso 1\tx*: xoi = 1; X12 = 1; X13 = 1 e X34 = 1 Custo = 27 e peso = 20\nTabela 6.9: Principais resultados por itera\u00e7ao do Algoritmo Sepl para as DCILULs utilizando o procedimento de levantamento de vari\u00e1veis PL-UL aplicado ao Exemplo 2.1.\nDa observa\u00e7\u00e3o das Tabelas 6.9 e 6.10 podemos concluir que a utiliza\u00e7ao de diferentes procedimentos de levantamento das variaveis podem levar \u00e0 obten\u00e7\u00e3o de diferentes DCILULs. Nestes dois exemplos foram utilizadas as mesmas formas de escolher o conjunto E0. Utilizando o procedimento de levantamento das variaveis PL-LU (Tabela 6.10) foram introduzidas no modelo duas DCILULs e n\u00e3o foi obtida a solu\u00e7\u00e3o \u00f3tima, enquanto que utilizando o procedimento de levantamento das variaveis PL-UL (Tabela 6.9) so foi introduzida no modelo uma DCILUL, a qual levou \u00e0 obten\u00e7\u00e3o da solu\u00e7\u00e3o otima com custo 27 e peso 19. Note-se que tal como verificamos para o caso das DCILDLs, a utilizac\u00e3o de diferentes formas de escolher o conjunto E0 pode levar a obtenc\u00e7\u00e3ao de diferentes DCILULs.\nIter.\nSepl-DCILUL, PL-LU\nl\tPasso 1\tx*: xoi = 1; xo4 = 0,2; X12 = 1; X13 = 0,8; X34 = 0,8 e X43 = 0,2 Custo = 25,4 e peso = 20\n\tPasso 2, 3 e 4\tOrdena\u00e7ao: OrdW Eo = {{0, 2}; {1, 3}; {1,4}; {2, 3}} DCI: X04 &lt;0 DCILUL: _x02 + x04 _ x13 _ x14 &lt;0. Nao corta x* (_0,6 0).\n\tPasso 2, 3 e 4\tOrdena\u00e7\u00e3o: OrdWX E0 = {{0, 2}; {1, 3}; {1,4}; {2, 3}} DCI: x01 &lt;0 DCILUL: x01  x02  x13  x14 &lt;0 Inserir, corta x* (0,2 > 0).\n2\tPasso 1\tx*: x01 = 1; x04 = 0,5; x12 = 1; x13 = 1 e x34 = 0,5 Custo = 25,5 e peso = 20\n\tPasso 2, 3 e 4\tOrdenac\u00e7a\u00e3o: OrdW E0 = {{0,1}; {1, 2}; {2, 3}} DCI: x01 + x04 + x12 &lt;2 DCILUL: x01  x02 + x03 + x04 + x12  x14 &lt;2 Inserir, corta x* (2,5 > 2).\n3\tPasso 1\tx*: x01 \u00ab 0,8571; x02 \u00ab 0,1429; x04 \u00ab 0,2857 x12 \u00ab 0,8571; x13 \u00ab 0,7143; x21 \u00ab 0,1429; x34 \u00ab 0,7143; e x43 = 0,2857 Custo = 25,8571 e peso = 20\n\tPasso 2, 3 e 4\tOrdena\u00e7ca\u00e3o: OrdW E0 = {{0, 2}; {1, 3}; {1,4}; {2, 3}} DCI: x04 &lt;0 DCILUL: _x02 + x04 _ x13 _ x14 &lt;0. N\u00e3o corta x* (_0,5714\t0).\n\tPasso 2, 3 e 4\tOrdena\u00e7ao: OrdWX e OrdX E0 = {{0, 2}; {1, 3}; {1,4}; {2, 3}} DCI: x01 &lt;0 DCILUL: x01 _ x02 _ x13 _ x14 &lt;0. N\u00e3o corta x* (0\t0).\nTabela 6.10: Principais resultados por itera\u00e7ao do Algoritmo Sepl para as DCILULs utilizando o procedimento de levantamento de vari\u00e1veis PL-LU aplicado ao Exemplo 2.1.\nSe aplicarmos o Algoritmo Sep2 ao Exemplo de 5 nodos apenas se forma a DCILUL obtida na Itera\u00e7\u00e3o 1 do Algoritmo Sep1 que se encontra na Tabela 6.9.\n6.1.7\tAlgoritmo de Separa\u00e7\u00e3o para as DGCIL\nPara obter Desigualdades Generalizadas de Cobertura Impl\u00edcita Levantada (DGCILs) temos de alterar o Passo 3, dado nas Seccoes 6.1.5 e 6.1.6 de modo a usarmos dois conjuntos de vari\u00e1veis fixas e obter uma DCI v\u00e1lida para o conjunto restrito XU = XWMST G {x : xe = 0, e G E0,xe = 1,e G Ex}, onde U = Eo U Ex e a correspondente DGCIL. A principal diferenca no Passo 3.1 deste algoritmo relativamente aos algoritmos aplicados as DCILDLs e \u00e0s DCILULs \u00e1 a altera\u00e7\u00e3o do conjunto de variaveis fixas, que neste caso passamos a ter dois conjuntos de vari\u00e1veis fixas, o conjunto Eo de vari\u00e1veis fixas a zero e o conjunto Ex de vari\u00e1veis fixas a um. Deste modo temos que obter uma DCI valida para o conjunto restrito XU, onde no Passo 3.1.2 a arvore de suporte de peso m\u00e1nimo tem de conter as arestas de S e as arestas do conjunto Ex, mas n\u00e3o pode conter as arestas do conjunto Eo.\nPasso 3: Obter uma Desigualdade Generalizada de Cobertura Impl\u00edcita Levantada\nSeja Eo o conjunto de variaveis fixas a zero e Ex o conjunto de variaveis fixas a um.\nPasso 3.1: Obter uma DCI valida para o conjunto restrito XU\nSeja S = {}.\nFazer p = 1 (inserir em S, a primeira aresta de ERLOrdk tal que e G Eo U Ex).\nPasso 3.1.1: Construir o conjunto S (sem ciclos)\nAtualizar o conjunto S com as primeiras p arestas de ERLOrdk, desde que n\u00e3ao formem ciclos e que n\u00e3ao pertenc\u00e7am ao conjunto Eo nem ao conjunto Ex .\nPasso 3.1.2: Verificar se S e CI para o conjunto restrito XU\nObter a arvore de suporte de peso m\u00e1nimo T, que inclui as p primeiras arestas de S e as arestas de Ex, mas cujas arestas de Eo n\u00e3ao perten\u00e7cam \u00e0 \u00e1rvore.\nSe W(T) > W, ent\u00e3o\nS \u00e9 uma CI para o conjunto restrito XU.\nDCI: J2egSxe \u2014 |S| - 1- Ir para o Passo 3.2.\nCaso contr\u00e9rio,\nSe p &lt;#ERLordk, entao\np = p +1.\nVoltar ao Passo 3.1.1.\nCaso contr\u00e9rio,\nn\u00e3o \u00e9 poss\u00edvel formar uma CI.\nPasso 3.2: Obter uma DGCIL\nCalcular os coeficientes 0e, e E R \u00c7 Eo U Ei U Ef.\nfie = min |S| \u2014 1 \u2014 yxt \u2014 e E Ef \\ R\nX (e)\tx\ne E Eo \\ R\nX (e)\tx\ne E Ei \\ R\nX (e)\tx\n^txt -\t^t(1 - xt) : x E X(e)\ntes\tteRn(EoUEy)\nteRnEi\n\u2022>\nE XWMST : xt = 1\n\u2022>\nEi\n\\ R,xt = 0,t E Eo \\ R,xe = 1 j*;\nE XWMST : xt = 1\nE XWMST : xt = 1,\nEi\nEi\n\\ R,xt = 0,t E Eo \\ (R U {e}),Xe =\n\\ (R U {e}),xt = 0,t E Eo \\ R,Xe =\n\u2022)\n\n\n\n\nt\nt\nt\nE\nE\nE\nt\nDGCIL: EeSS xe + EeSRn(E0UEf) fiexe + EegRnEi fie(1 xe) \u2014 |S 1\t1.\nInicialmente no Passo 3 consideramos dois conjuntos: um conjunto de vari\u00e9veis fixas a zero que designamos por Eo, e outro de variaveis fixas a um que designamos por Ei. No Passo 3.1 obtemos uma DCI v\u00e9lida para o conjunto restrito XU e no Passo 3.2 efetuamos o c\u00e9lculo dos coeficientes para fazer o levantamento das vari\u00e9veis de Eo, de Ei e de Ef = E\\(S U Eo U Ei) e obter a DGCIL. Assim, para aplicar os algoritmos de separa\u00e7ao ao caso das DGCILs temos que ter em conta os tr\u00eas fatores que se seguem:\n\u2022 A escolha dos conjuntos de vari\u00e9veis a fixar a zero (conjunto Eo) e a fixar a um (conjunto Ei);\n\u2022\tA ordem dos procedimentos a adotar para efetuar o levantamento das variaveis;\n\u2022\tA ordem de determina\u00e7\u00e3o dos coeficientes para efetuar o levantamento das vari\u00e9veis.\nEscolha dos Conjuntos de Variaveis a Fixar a zero e a um, E0 e E1\nComo estamos a fixar, simultaneamente, dois conjuntos de vari\u00e9veis, estamos a fazer com que as vari\u00e9veis fixas a um fa\u00e7am parte da solu\u00e7\u00f5o e as vari\u00e9veis fixas a zero n\u00f5o fa\u00e7am parte da solucao.\nPara escolha dos conjuntos E0 e E1 propomos efetuar uma combina\u00e7\u00f5o das escolhas feitas nas duas subsec\u00e7\u00f5es anteriores.\nProcedimentos a adotar para levantamento das variaveis\n\u2022\tProcedimento de Levantamento DUL (PL-DUL)\nPrimeiro efetuamos o down-lifting, depois o up-lifting e por fim o levantamento sequencial usual.\n\u2022\tProcedimento de Levantamento UDL (PL-UDL)\nPrimeiro efetuamos o down-lifting, depois o o levantamento sequencial usual e por fim o up-lifting.\n\u2022\tProcedimento de Levantamento ULD (PL-ULD)\nPrimeiro efetuamos o up-lifting, depois o levantamento sequencial usual e por fim o down-lifting.\n\u2022\tProcedimento de Levantamento DLU (PL-DLU)\nPrimeiro efetuamos o up-lifting, depois o down-lifting e por fim o levantamento sequencial usual.\n\u2022\tProcedimento de Levantamento LDU (PL-LDU)\nPrimeiro efetuamos o levantamento sequencial usual, depois o down-lifting e por fim o up-lifting.\n\u2022\tProcedimento de Levantamento LUD (PL-LUD)\nPrimeiro efetuamos o levantamento sequencial usual, depois o up-lifting e por fim o down-lifting.\nOrdem de Determina\u00e7\u00e3o dos Coeficientes no Levantamento das Vari\u00e1veis\nPara efetuar o levantamento usual podemos usar as mesmas ordens propostas na Subseccao 6.1.4. No up-lifting e no down-lifting ordenamos as vari\u00e9veis de cada conjunto E0 e E1 por ordem crescente de peso. Podemos testar se efetuamos primeiro o levantamento das vari\u00e9veis com menor peso ou com maior peso em cada um dos conjuntos.\nNote-se que:\n\u2022\tQuando o numero de variaveis a fixar a zero for nulo, ou seja, E0 = 0 n\u00e3o se aplica o procedimento up-lifting e aplicam-se apenas os procedimentos de levantamento sequencial usual e de down-lifting. Se o numero de vari\u00e9veis a fixar a um for nulo (E1 = 0) aplicam-se apenas os procedimentos up-lifting e levantamento sequencial usual;\n\u2022\tCaso os dois conjuntos de vari\u00e9veis sejam nulos s\u00e9 se aplica o procedimento de levantamento sequencial usual;\n\u2022\tNo caso da DCI v\u00e9lida para o conjunto restrito XU conter apenas uma vari\u00e9vel, ent\u00e3o faz-se up-lifting e down-lifting, uma vez que, se efetuarmos o levantamento sequencial usual em primeiro lugar os coeficientes s\u00e3o todos nulos.\nPara calcular os coeficientes das vari\u00e9veis a efetuar levantamento usa-se o algoritmo aproximado HCoef, descrito na Subsec\u00e7\u00e3o 6.1.4.\nExemplo 6.6.\nNas Tabelas 6.11 e 6.12 podemos observar as principais etapas do Algoritmo Sep1 para as DGCILs aplicado ao Exemplo 2.1, onde s\u00f5o escolhidos dois procedimentos diferentes de levantamento de vari\u00e9aveis.\nIter.\tSepl-DGCIL, PL-DLU\t\n1\tPasso 1\tx*: xoi = 1; xo4 = 0,2; X12 = 1; X13 = 0,8; X34 = 0,8 e X43 = 0,2 Custo = 25,4 e peso = 20\n\tPasso 2, 3 e 4\tOrdenac\u00e3o: OrdW Eo = {{0, 2}; {1,4}; {2, 3}} Ei = {{0,1}; {1, 2}} DCI: X04 &lt;0 DGCIL: x01 \u2014 x02 + 2x03 + x04 + x12 \u2014 x14 &lt;2 Inserir, corta x* (0,2 > 0).\n2\tPasso 1\tx*: x01 = 1; x04 = 0,2; x12 = 1; x13 = 0,6; x14 = 0,2; x34 = 0,6 e x43 = 0,4 Custo = 25,6 e peso = 20\n\tPasso 2, 3 e 4\tOrdena\u00e7c\u00e3ao: OrdW E0 = {{0, 2}; {2, 3}} E1 = {{0,1}; {1, 2}} DCI: x04 &lt;0 DGCIL: x01 + x03 + x04 + x12 &lt;2 Inserir, corta x* (2,2 > 2).\n3\tPasso 1\tx*: x01 ~ 0,8333; x02 ~ 0,1667; x04 ~ 0,1667 x12 ~ 0,8333; #13 \u00ab 0,8333; x21 ~ 0,1667; x34 \u00ab 0,8333; e x43 = 0,1667 Custo = 27 e peso = 19,33\nTabela 6.11: Principais resultados por itera\u00e7\u00e3o do Algoritmo Sepl para as DGCILs utilizando o procedimento de levantamento de vari\u00e1veis PL-DLU aplicado ao Exemplo 2.1.\nIter.\nSep1-DGCIL, PL-DUL\n1\tPasso 1\tx*: xoi = 1; xo4 = 0,2; xi2 = 1; xi3 = 0,8; X34 = 0,8 e X43 = 0,2 Custo = 25,4 e peso = 20\n\tPasso 2, 3 e 4\tOrdena\u00e7\u00e3o: OrdW Eo = {{0, 2}; {1,4}; {2, 3}} Ei = {{0,1}; {1, 2}} DCI: X04 &lt;0 DGCIL: x01 + x03 + x04 + x12 &lt;2 Inserir, corta x* (2,2 > 2).\n2\tPasso 1\tx*: X01 = 1; X12 = 1; x43 = 1 e X34 = 1 Custo = 27 e peso = 20\nTabela 6.12: Principais resultados por itera\u00e7\u00e3o do Algoritmo Sepl para as DGCILs utilizando o procedimento de levantamento de vari\u00e1veis PL-DLU aplicado ao Exemplo 2.1.\nDa observa\u00e7\u00e3o das Tabelas 6.11 e 6.12 podemos concluir, tal como visto para as DCILDLs e para as DCILULs, que utilizando diferentes procedimentos de levantamento de vari\u00e1veis podemos encontrar diferentes DGCILs. Nestes dois exemplos foram utilizadas as mesmas formas de escolher os conjuntos E0 e Ei . Utilizando o procedimento de levantamento das vari\u00e1veis PL-DLU (Tabela 6.11) foram introduzidas no modelo duas DGCILs e na\u00e3o foi obtida a solu\u00e7ca\u00e3o \u00e1otima, enquanto que utilizando o procedimento de levantamento das vari\u00e1veis PL-DUL (Tabela 6.12) s\u00e1 foi introduzida no modelo uma DGCIL, a qual levou \u00e0 obten\u00e7\u00e3o da solu\u00e7\u00e3o otima com custo 27 e peso 19.\nNote-se que tal como verific\u00e1amos para o caso das DCILDLs e das DCILULs, utilizando diferentes formas de escolher os conjuntos Eo e Ei pode levar a obten\u00e7ao de diferentes DGCILs.\nSe aplicarmos o Algoritmo Sep2 ao Exemplo de 5 nodos apenas se forma a DGCIL obtida na Itera\u00e7\u00e3o 1 do Algoritmo Sep1 que se encontra na Tabela 6.12.\nNote-se que a desigualdade v\u00e1alida\nxoi + xo3 + xo4 + xi2 &lt;2\t(6.11)\nque corta a solu\u00e7c\u00e3ao da relaxa\u00e7c\u00e3ao linear e que com a sua introdu\u00e7c\u00e3ao no modelo se consegue obter a solu\u00e7c\u00e3ao \u00e1otima foi obtida em todas as desigualdades derivadas de levantamento de varia\u00e1veis.\nPara obter a desigualdade (6.11) como uma DCIL primeiro obteve-se a DCI, x0i + x04 + xi2 &lt;2 e o coeficiente fi03 = 1 foi obtido efetuando o levantamento usual.\nAo fixar o conjunto E1 = {{1,2}} obtemos tamb\u00e9m a desigualdade (6.11) como uma DCILDL, onde a DCI, x01 + x04 &lt;1 \u00e9 v\u00e9lida para o conjunto restrito XE1 e o coeficiente ^12 = \u2014 1 \u00e9 obtido efetuando o down-lifting e o coeficiente ^03 = 1 efetuando o levantamento usual.\nAo fixar o conjunto E0 = {{0, 2}; {1, 3}; {1,4}; {2, 3}} obtemos a mesma desigualdade (6.11) como uma DCILUL, onde a DCI, x01 + x04 + x12 &lt;2 e valida para o conjunto restrito XE\u00b0 e o coeficiente o3 = 1 e obtido efetuando o levantamento usual.\nNo caso das DGCILs podemos obter a desigualdade (6.11) fixando por exemplo os conjuntos E0 = {{0, 2}; {1,4}; {2, 3}} e E1 = {{0,1}; {1, 2}}, a DCI, x04 &lt;0 e valida para o conjunto restrito XEoUE1 e os coeficientes ^12 = \u2014 1 e ^01 = \u20141 s\u00e3o obtidos efetuando o down-lifting e o coeficiente o3 = 1 efetuando o levantamento usual.\n6.2\tExperiencias e Resultados Computacionais\nNesta secc\u00e7\u00e3ao descrevemos algumas experi\u00eaencias computacionais realizadas e apresentamos os resultados computacionais dos algoritmos heur\u00edsticos de separacao apresen\ntados ao longo deste cap\u00edtulo. Efetuamos tamb\u00e1m uma compara\u00e7ao entre os algoritmos de separac\u00e7\u00e3ao com o objetivo de avaliar qual o mais eficiente. Neste sentido pretendemos avaliar a qualidade do valor do limite inferior obtido pela respetiva relaxa\u00e7ca\u00e3o linear.\nAssim, para avaliar o limite inferior obtido em cada um dos algoritmos calculamos o\nO PT \u2014 LI\ngap = \u2014opt\u2014 x 100, onde LI \u00e9 o valor do limite inferior obtido para o valor do custo e OPT \u00e1 o valor \u00e1timo (d(WMST)) ou o melhor valor obtido pelo Procedimento\nP-WMTZ+C do Cap\u00edtulo 3.\nRelativamente aos tempos de execu\u00e7\u00e3o vamos analisar em termos m\u00e9dios os tempos usados para a obtencao do valor \u00e9timo ou de um limite superior para o valor do custo (tempos de execu\u00e7\u00e3o da relaxacao linear conjuntamente com os tempos de execu\u00e7\u00e3o do Algoritmo Branch and Bound).\n6.2.1\tExperi\u00eancias realizadas com as DCs e as DCIs\nNas experi\u00eancias computacionais realizadas com as DCs e com as DCIs foram utilizadas todas as ordena\u00e7\u00f5es propostas na Sec\u00e7\u00e3o 6.1. No caso de se obterem dois valores da relaxac\u00f5o linear iguais com a mesma ordena\u00e7\u00e3o de arestas mudamos de ordena\u00e7\u00e3o.\nNa Tabela 6.13 s\u00e3o apresentados os gaps m\u00e9dios, em percentagem, do limite inferior obtidos pelo Procedimento P-WMTZ+CL e por cada um dos Algoritmos Sepl e Sep2 para as DCs e para as DCIs e os respetivos desvios padr\u00f5es. Note-se que os referidos gaps correspondem aos valores obtidos pelas respetivas relaxa\u00e7\u00f5es lineares. Os tempos m\u00e9dios, em segundos, apresentados na Tabela 6.13, correspondem aos tempos de execu\u00e7\u00e3o at\u00e9 obter o valor \u00e9timo ou um limite superior para o valor do custo (tempo de execu\u00e7ao da relaxa\u00e7\u00e3o linear + tempo de execu\u00e7ao do Algoritmo Branch and Bound). Na mesma tabela encontram-se os desvios padro\u00e3es correspondentes aos tempos.\n\t\tP-WMTZ+Cl\tSep1-DCs\tSep2-DCs\tSep1-DCIs\tSep2-DCIs\n\t10\t22,292\t19,747\t19,747\t19,451\t19,467\nGap Medio (%)\t20\t9,874\t9,627\t9,627\t9,552\t9,562\n\t40\t6,362\t6,337\t6,337\t6,331\t6,332\n\t60\t4,830\t4,815\t4,815\t4,810\t4,812\n\t10\t7,061\t7,217\t7,217\t7,324\t7,335\n\t20\t4,380\t4,388\t4,388\t4,431\t4,427\nagap\t40\t0,840\t0,838\t0,838\t0,844\t0,843\n\t60\t0,863\t0,863\t0,863\t0,861\t0,861\n\t10\t0,109\t0,154\t0,148\t0,151\t0,169\nTempo M\u00e9dio (s)\t20\t1,350\t1,274\t1,287\t1,372\t1,956\n\t40\t41,756\t36,886\t42,449\t35,787\t40,408\n\t60\t517,422\t553,105\t932,913\t1513,102\t875,270\n\t10\t0,042\t0,034\t0,043\t0,045\t0,039\ntempo\t20\t0,867\t0,513\t0,372\t0,947\t1,488\n\t40\t29,749\t15,673\t23,380\t22,001\t24,511\n\t60\t338,821\t407,218\t1480,329\t2300,852\t992,761\nTabela 6.13: Compara\u00e7\u00e3o do Procedimento P-WMTZ+CL e dos Algoritmos Sepl e Sep2 nas DCs e nas DCIs nas instancias QC de 10 a 60 nodos.\nEm termos de tempos m\u00e9dios de execu\u00e7\u00e3o, o algoritmo de separa\u00e7\u00e3o mais r\u00e1pido\nparece ser o Algoritmo Sep1, nas DCs e nas DCIs. No caso das DCIs, apenas em insta\u00e2ncias de 60 nodos o tempo m\u00f3edio do Algoritmo Sep1 \u00f3e superior ao tempo m\u00f3edio do Algoritmo Sep2.\nTanto nas DCs como nas DCIs os gaps m\u00f3dios obtidos s\u00e3o muito identicos nos dois Algoritmos Sep1 e Sep2. Os gaps medios mais baixos s\u00e3o obtidos pelo Algoritmo Sep1 com as DCIs. Em qualquer um dos algoritmos os gaps m\u00f3dios s\u00e3o inferiores aos obtidos com o Procedimento P-WMTZ+CL. Os limites inferiores obtidos usando estes algoritmos de separa\u00e7ao aumentam em 39 das 40 inst\u00e2ncias (de 10 a 60 nodos). Apenas numa das instancias (QC60-9) o limite inferior obtido \u00f3 igual ao obtido com o Procedimento P-WMTZ+CL. Os algoritmos para as DCIs s\u00e3o os que obt\u00e2m melhores limites inferiores. Deste modo, podemos afirmar que faz sentido fazer o levantamento de uma DCI para obten\u00e7ca\u00e3o de desigualdades derivadas atrav\u00f3es de procedimentos de levantamento usual.\nEm termos m\u00f3edios, na\u00e3o se observa uma redu\u00e7c\u00e3ao do tempo quando se aplicam os algoritmos heur\u00edsticos de separa\u00e7\u00e3o comparativamente ao Procedimento P-WMTZ+CL. Podemos observar que h\u00f3 melhorias de tempo em 32,5% das instancias de 10 a 60 nodos (13 inst\u00e2ncias em 40) no Algoritmo Sep1 para as DCIs.\n6.2.2\tExperi\u00eancias Realizadas com as DCIEs\nNas experi\u00e2encias computacionais realizadas com as DCIEs tamb\u00f3em foram utilizadas todas as ordena\u00e7co\u00e3es propostas na Sec\u00e7ca\u00e3o 6.1. No caso de se obterem dois valores da relaxa\u00e7c\u00e3ao linear iguais com a mesma ordena\u00e7ca\u00e3o de arestas mudamos de ordena\u00e7c\u00e3ao.\nNa Tabela 6.14 s\u00e3ao apresentados os gaps m\u00f3edios, em percentagem, do limite inferior obtidos pelo Procedimento P-WMTZ+CL e por cada um dos Algoritmos Sep1 e Sep2 para as DCIEs e os respetivos desvios padro\u00e3es. Note-se que os referidos gaps correspondem aos valores obtidos pelas respetivas relaxa\u00e7co\u00e3es lineares. Os tempos m\u00f3edios, em segundos, apresentados na Tabela 6.14, correspondem aos tempos de execu\u00e7ca\u00e3o at\u00f3e obter o valor \u00f3otimo ou um limite superior para o valor do custo (tempo de execu\u00e7c\u00e3ao da relaxa\u00e7ao linear + tempo de execuc\u00e3o do Algoritmo Branch and Bound). Na mesma tabela encontram-se os desvios padr\u00e3oes correspondentes aos tempos.\n\t\tP-WMTZ+Cl\tSep1-DCIEs\tSep2-DCIEs\n\t10\t22,292\t17,885\t13,181\nGap M\u00e1dio(%)\t20\t9,874\t9,511\t8,995\n\t40\t6,362\t6,327\t6,249\n\t60\t4,830\t4,802\t4,782\n\t10\t7,061\t7,595\t3,667\n\t20\t4,380\t4,445\t4,001\nagap\t40\t0,840\t0,843\t0,864\n\t60\t0,863\t0,853\t0,845\n\t10\t0,109\t0,170\t0,205\nTempo Medio (s)\t20\t1,350\t1,601\t1,669\n\t40\t41,756\t36,206\t34,171\n\t60\t517,422\t897,147\t657,020\n\t10\t0,042\t0,056\t0,065\n\t20\t0,867\t1,090\t0,857\n^tempo\t40\t29,749\t21,568\t19,530\n\t60\t338,821\t1337,665\t584,175\nTabela 6.14: Compara\u00e7\u00e3o do Procedimento P-WMTZ+CL e dos Algoritmos Sep1 e Sep2 nas DCIEs nas inst\u00e2ncias QC de 10 a 60 nodos.\nEm termos de tempos medios, nas inst\u00e2ncias de 40 e 60 nodos o algoritmo de separa\u00e7\u00e3o mais r\u00e1pido para as DCIEs parece ser o Algoritmo Sep2, mas nas inst\u00e2ncias de 10 e 20 nodos o tempo medio do Algoritmo Sep2 e superior ao tempo medio do Algoritmo Sep1.\nQuanto aos gaps medios obtidos s\u00e3o inferiores no Algoritmo Sep2. Em qualquer um dos algoritmos os gaps medios s\u00e3o inferiores aos obtidos com o Procedimento P-WMTZ+Cl. Os limites inferiores obtidos usando estes algoritmos heur\u00edsticos de separa\u00e7ca\u00e3o aumentam em todas as inst\u00e2ancias (de 10 a 60 nodos).\n6.2.3\tExperi\u00eancias Realizadas com as DCILs\nDe experi\u00eaencias computacionais realizadas com as DCILs, verificamos que se utilizarmos todas as ordenacoes propostas na Sec\u00e7\u00e3o 6.1, pode-se tornar dispendioso do ponto vista computacional. Das v\u00e9arias experi\u00eaencias computacionais efetuadas com combina\u00e7c\u00e3oes das diferentes ordena\u00e7c\u00e3oes verificamos que com algumas delas, em geral, obtemos as mesmas desigualdades. Assim, decidimos utilizar apenas tr\u00eaes ordena\u00e7c\u00e3oes: OrdW, OrdWX e OrdFixW. Come\u00e7amos por obter uma desigualdade usando a ordena\u00e7\u00e3o de arestas OrdW, depois usamos a ordena\u00e7\u00e3o OrdWX e por fim a ordena\u00e7\u00e3o OrdFixW. No caso de se obterem dois valores da relaxa\u00e7\u00e3o linear iguais com a mesma ordena\u00e7c\u00e3ao de arestas mudamos de ordenac\u00e7a\u00e3o.\nQuando tentamos encontrar uma CI formam-se v\u00e9rias \u00e9rvores de suporte. Sempre que estas a\u00e9rvores verifiquem a restric\u00e7\u00e3ao de peso podemos atualizar o limite superior para o custo (LSC) do Problema WMST. Quando se aplica o Algoritmo HCoef para determinar os va\u00e9rios coeficientes das varia\u00e9veis a efetuar levantamento tamb\u00e9em se encontram v\u00e9arias \u00e9arvores de suporte que verificam a restric\u00e7\u00e3ao de peso, sendo assim tamb\u00e9em podemos atualizar o limite superior para o custo do Problema WMST, desde que o custo obtido seja inferior ou igual a LSC. Assim os Algoritmos Sep1 e Sep2 podem terminar no caso do valor obtido na relaxa\u00e7c\u00e3ao linear ser igual ao valor do LSC.\nOs resultados computacionais que se apresentam para as duas estrat\u00e9egias apresentadas na Secc\u00e3o 6.1.4 usam o levantamento das variaveis LV2, dado que apos a realiza\u00e7ao de va\u00e9rias experi\u00eaencias com as diferentes ordens de levantamento apresentadas na Sec\u00e7c\u00e3ao 6.1.6 este foi o que apresentou os melhores resultados.\nNa Tabela 6.15 s\u00e3ao apresentados os gaps m\u00e9edios (em percentagem) do limite inferior obtidos pelo Procedimento P-WMTZ+CL e por cada um dos Algoritmos Sep1 e Sep2 para as DCILs e os respetivos desvios padr\u00e3oes. Note-se que os referidos gaps correspondem aos valores obtidos pelas respetivas relaxa\u00e7c\u00e3oes lineares. Os tempos m\u00e9edios, em segundos, apresentados na Tabela 6.15, correspondem aos tempos de execu\u00e7\u00e3o at\u00e9 obter o valor \u00e9otimo ou um limite superior para o valor do custo (tempo de execu\u00e7c\u00e3ao da relaxa\u00e7\u00e3o linear + tempo de execu\u00e7\u00e3o do Algoritmo Branch and Bound). Na mesma tabela encontram-se os desvios padr\u00e3oes correspondentes aos tempos.\nOs resultados computacionais apresentados na Tabela 6.15 para o Algoritmo Sep2 foram obtidos usando apenas a Estrat\u00e9egia DCIL-E2, uma vez que esta estrat\u00e9egia foi a que apresentou tempos m\u00e9edios mais baixos para o Algoritmo Sep1.\nSepl\nSep2\n\t\tP-WMTZ+Cl\tDCIL-E1\tDCIL-E2\tDCIL-E2\n\t10\t22,292\t6,671\t9,632\t3,910\nGap M\u00e9dio (%)\t20\t9,874\t0,088\t0,096\t0,084\n\t40\t6,362\t1,515\t1,650\t2,141\n\t60\t4,830\t0,546\t0,596\t0,984\n\t10\t7,061\t5,210\t5,690\t4,376\n\t20\t4,380\t0,277\t0,276\t0,264\nagap\t40\t0,840\t2,541\t2,735\t2,825\n\t60\t0,863\t1,725\t1,715\t2,034\n\t10\t0,109\t0,228\t0,189\t0,220\nTempo Medio (s)\t20\t1,350\t1,579\t1,087\t2,000\n\t40\t41,756\t55,764\t29,259\t48,773\n\t60\t517,422\t209,591\t154,743\t375,455\n\t10\t0,042\t0,086\t0,057\t0,041\ntempo\t20\t0,867\t0,947\t0,824\t1,570\n\t40\t29,749\t50,803\t27,386\t37,153\n\t60\t338,821\t213,496\t293,342\t546,707\nTabela 6.15: Compara\u00e7\u00e3o do Procedimento P-WMTZ+CL e dos Algoritmos Sepl e Sep2 nas DCILs nas inst\u00e2ncias QC de 10 a 60 nodos.\nRelativamente ao Algoritmo Sepl, a Estrat\u00e9gia DCIL-E1 \u00e9 a que apresenta gap mais baixo, mas em rela\u00e7\u00e3o ao tempo de execu\u00e7\u00e3o este e superior ao da Estrategia DCIL-E2 (quase o dobro). Quando se forma uma DCI que n\u00e3o corta a solu\u00e7\u00e3o da relaxa\u00e7ca\u00e3o linear, obtemos na mesma a DCIL, logo estamos constantemente a resolver subproblemas para obter os coeficientes de levantamento e por vezes a DCIL encontrada n\u00e3o corta a solu\u00e7ao da relaxa\u00e7\u00e3o linear. Como podemos observar no Algoritmo Sep2, os gaps em inst\u00e2ncias de 10 e 20 nodos s\u00e3o melhores, mas depois em inst\u00e2ncias de 40 e 60 pioram comparativamente ao Algoritmo Sepl. Usando a Estrategia DCIL-E2, os tempos medios de execu\u00e7ca\u00e3o do Algoritmo Sep2 s\u00e3ao sempre mais elevados do que no Algoritmo Sep1.\nEm qualquer um dos algoritmos, os gaps medios s\u00e3o inferiores aos obtidos com o Procedimento P-WMTZ+CL. Os limites inferiores obtidos usando estes algoritmos heur\u00edsticos de separa\u00e7\u00e3o aumentam em todas as inst\u00e2ncias (de 10 a 60 nodos).\nEm termos de tempos m\u00e9edios verifica-se uma reduc\u00e7\u00e3ao em inst\u00e2ancias com 20 ou\nmais nodos no Algoritmo Sep1 usando a Estrat\u00e9egia DCIL-E2 quando comparado com o Procedimento P-WMTZ+CL. Podemos encontrar 60% das instancias de 10 a 60 nodos (24 inst\u00e2ncias em 40) em que os tempos de execu\u00e7\u00f5o do Algoritmo Sep1 usando a Estrat\u00e9egia DCIL-E2 s\u00f5ao inferiores aos tempos de execu\u00e7c\u00f5ao obtidos com o Procedimento P-WMTZ+Cl .\nAp\u00e9s a realizac\u00f5o de experi\u00e2ncias computacionais verific\u00e9mos que as estrat\u00e9gias propostas na Sec\u00e7\u00f5o 6.1.6 para levantamento de uma DCIE n\u00f5o v\u00e2m trazer melhorias nem nos gaps nem nos tempos m\u00e9dios de execuc\u00f5o.\n6.2.4\tExperi\u00eancias Realizadas com as DCILDLs\nSe pensarmos em fixar a um o conjunto de variaveis que t\u00e2m valor um na solu\u00e7\u00f5o da relaxa\u00e7ao linear do Procedimento P-WMTZ+C (fixa\u00e7\u00f5o de vari\u00e9veis FVD1 da Subsec\u00e7c\u00f5ao 6.1.5), em alguns exemplos, o nu\u00e9mero de vari\u00e9aveis a fixar a um pode ser muito grande (quase o mesmo nu\u00e9mero que o das arestas da \u00e9arvore). Por exemplo, em instancias de 10 nodos fixam-se a um cerca de 8 vari\u00e9veis, em instancias de 20 nodos cerca de 18 vari\u00e9veis, em inst\u00e2ncias de 40 nodos cerca de 38 variaveis e em inst\u00e2ncias de 60 nodos cerca de 56 vari\u00e9veis. Para evitar que o conjunto E1 seja demasiado grande vamos apresentar os resultados das quatro estrat\u00e9egias seguintes.\nEstrategia Down-Lifting 1 (DL-E1)\nEscolha do conjunto E1: FVD2\nProcedimento de levantamento das varia\u00e9veis: PL-LD\nEstrategia Down-Lifting 2 (DL-E2):\nEscolha do conjunto E1: FVD3.\nProcedimento de levantamento das vari\u00e9aveis: PL-LD.\nEstrategia Down-Lifting 3 (DL-E3)\nEscolha do conjunto E1: FVD2\nProcedimento de levantamento das vari\u00e9aveis: PL-DL\nEstrategia Down-Lifting 4 (DL-E4):\nEscolha do conjunto E1: FVD3\nProcedimento de levantamento das varia\u00e9veis: PL-DL\nAs estrat\u00e9gias apresentadas para o Algoritmo Sepl diferem na escolha do conjunto de variaveis a fixar a um e na ordem dos procedimentos para levantamento das vari\u00e9veis.\nNa Tabela 6.16 s\u00e3o apresentados os gaps m\u00e9dios (em percentagem) do limite inferior obtidos pelo Procedimento P-WMTZ+CL e por cada um dos Algoritmos Sepl e Sep2 para as DCILDLs e os respetivos desvios padr\u00e3es. Note-se que os referidos gaps correspondem aos valores obtidos pelas respetivas relaxa\u00e7\u00e3es lineares. Os tempos m\u00e9dios, em segundos, apresentados na Tabela 6.16, correspondem aos tempos de execu\u00e7\u00e3o at\u00e9 obter o valor otimo ou um limite superior para o valor do custo (tempo de execuc\u00e3o da relaxa\u00e7\u00e3o linear + tempo de execu\u00e7\u00e3o do Algoritmo Branch and Bound). Na mesma tabela encontram-se os desvios padr\u00e3oes correspondentes aos tempos.\nOs resultados computacionais apresentados na Tabela 6.16 para o Algoritmo Sep2 foram obtidos usando apenas a Estrat\u00e9gia DL-E3, uma vez que esta estrat\u00e9gia se mostrou a mais eficiente em termos de tempos m\u00e9edios e de gaps m\u00e9edios para o Algoritmo Sep1.\n\t\tS\u00e9p1\t\t\t\t\tSep2\n\t\tP-WMTZ+Cl\tDL-E1\tDL-E2\tDL-E3\tDL-E4\tDL-E3\n\t10\t22,292\t10,617\t10,699\t8,891\t8,891\t5,622\nGap M\u00e9dio (%)\t20\t9,874\t3,359\t2,524\t1,304\t1,300\t0,565\n\t40\t6,362\t5,713\t4,114\t0,940\t1,263\t1,035\n\t60\t4,830\t4,047\t2,859\t0,382\t0,409\t0,695\n\t10\t7,061\t6,964\t6,274\t6,151\t6,151\t5,773\n\t20\t4,380\t3,877\t3,111\t2,604\t2,602\t1,005\nagap\t40\t0,840\t1,480\t1,471\t2,217\t2,295\t2,254\n\t60\t0,863\t1,470\t1,039\t1,096\t1,097\t1,450\n\t10\t0,109\t0,208\t0,220\t0,195\t0,198\t0,251\nTempo M\u00e9dio (s)\t20\t1,350\t1,504\t1,467\t1,157\t1,148\t2,073\n\t40\t41,756\t51,654\t65,114\t27,474\t30,176\t40,378\n\t60\t517,422\t481,450\t193,296\t73,554\t78,639\t204,174\n\t10\t0,042\t0,078\t0,086\t0,070\t0,069\t0,055\n^tempo\t20\t0,867\t1,506\t1,469\t0,969\t1,073\t1,677\n\t40\t29,749\t36,275\t65,476\t34,029\t35,130\t45,521\n\t60\t338,821\t552,349\t388,098\t89,572\t93,186\t243,529\nTabela 6.16: Comparac\u00e3o do Procedimento P-WMTZ+CL e dos Algoritmos Sep1 e Sep2 nas DCIL-\nDLs nas inst\u00e2ncias QC de 10 a 60 nodos.\nNo Algoritmo Sep1 as Estrat\u00e9egias DL-E3 e DL-E4 s\u00e3ao as mais r\u00e9apidas e estas s\u00e3ao compar\u00edveis em termos de tempo m\u00e9dio de execu\u00e7ao. Quanto a qualidade das solu\u00e7\u00e3es obtidas \u00e9e prefer\u00e9vel utilizar a Estrat\u00e9egia DL-D3, pois para inst\u00eaancias de 40 e 60 nodos os gaps m\u00e9dios s\u00e3o inferiores aos obtidos atrav\u00e9s da Estrat\u00e9gia DL-E4. Os gaps m\u00e9dios obtidos pelo Algoritmo Sep2 para inst\u00eancias de 10 e 20 nodos s\u00e3o mais baixos que os obtidos pelo Algoritmo Sep1 usando a mesma estrat\u00e9gia, mas tendem a piorar em inst\u00eaancias de 40 e 60 nodos. Em termos de tempo de execuc\u00e7\u00e3ao a Estrat\u00e9egia DL-E3 do Algoritmo Sep1 apresenta melhores resultados quando comparada com a mesma estrat\u00e9egia do Algoritmo Sep2.\nEm qualquer um dos algoritmos os gaps m\u00e9dios s\u00e3o inferiores aos obtidos com o Procedimento P-WMTZ+CL. Os limites inferiores obtidos usando estes algoritmos heur\u00edsticos de separa\u00e7\u00e3o aumentam em todas as inst\u00eancias (de 10 a 60 nodos).\nEm termos de tempos m\u00e9edios verifica-se uma reduc\u00e7\u00e3ao em inst\u00eaancias com 20 ou mais nodos no Algoritmo Sep1 usando a Estrat\u00e9egia DL-E3 quando comparado com o Procedimento P-WMTZ+CL. Podemos encontrar 65% das instancias de 10 a 60 nodos (26 insta\u00eancias em 40) em que os tempos de execu\u00e7ca\u00e3o do Algoritmo Sep1 usando a Estrat\u00e9egia DL-E3 sa\u00e3o inferiores aos tempos de execuc\u00e7a\u00e3o obtidos com o Procedimento P-WMTZ+Cl .\n6.2.5\tExperi\u00eancias Realizadas com as DCILULs\nPara encontrar DCILULs realizaram-se v\u00e1rias experiencias efetuando combina\u00e7\u00e3es das diferentes formas de escolher o conjunto Eo com os v\u00e1rios procedimentos de levantamento das vari\u00e1veis propostos na Subsecc\u00e3o 6.1.6, das quais apresentamos as quatro melhores:\nEstrat\u00e1gia Up-Lifting 1 (UL-E1)\nEscolha do conjunto Eo: FVU3\nProcedimento de levantamento das variaveis: PL-LU\nEstrat\u00e9gia Up-Lifting 2 (UL-E2):\nEscolha do conjunto Eo: FVU4\nProcedimento de levantamento das variaveis: PL-LU\nEstrat\u00e9gia Up-Lifting 3 (UL-E3):\nEscolha do conjunto Eo: FVU2\nProcedimento de levantamento das variaveis: PL-UL\nEstrat\u00e9gia Up-Lifting 4 (UL-E4):\nEscolha do conjunto Eo: FVU4\nProcedimento de levantamento das variaveis: PL-UL\nAs estrat\u00e9gias apresentadas para o Algoritmo Sepl diferem na escolha do conjunto de vari\u00e9veis a fixar a zero e na ordem dos procedimentos de levantamento das vari\u00e9veis.\nNa Tabela 6.17 s\u00e3o apresentados os gaps m\u00e9dios (em percentagem) do limite inferior obtidos pelo Procedimento P-WMTZ+CL e por cada um dos Algoritmos Sepl e Sep2 para as DCILULs e os respetivos desvios padr\u00e3es. Note-se que os referidos gaps correspondem aos valores obtidos pelas respetivas relaxa\u00e7\u00e3es lineares. Os tempos m\u00e9dios, em segundos, apresentados na Tabela 6.17, correspondem aos tempos de execu\u00e7\u00e3o at\u00e9 obter o valor otimo ou um limite superior para o valor do custo (tempo de execu\u00e7\u00e3o da relaxa\u00e7ao linear + tempo de execu\u00e7ao do Algoritmo Branch and Bound). Na mesma tabela encontram-se os desvios padr\u00e3oes correspondentes aos tempos.\nOs resultados computacionais apresentados na Tabela 6.17 para o Algoritmo Sep2 foram obtidos usando apenas a Estrat\u00e9egia UL-E4, uma vez que esta estrat\u00e9egia se mostrou a mais eficiente em termos de tempos m\u00e9edios e de gaps m\u00e9edios para o Algoritmo Sep1.\n\t\tP-WMTZ+Cl\tUL-E1\tUL-E2\tUL-E3\tUL-E4\tUL-E4\n\t10\t22,292\t13,788\t7,694\t9,652\t9,280\t4,844\nGap Medio (%)\t20\t9,874\t6,791\t6,489\t0,902\t1,025\t0,978\n\t40\t6,362\t4,103\t3,701\t2,119\t2,101\t2,041\n\t60\t4,830\t2,691\t2,866\t1,453\t0,773\t1,267\n\t10\t7,061\t3,621\t4,400\t3,889\t4,275\t4,475\n\t20\t4,380\t5,685\t4,993\t2,098\t2,476\t2,331\nagap\t40\t0,840\t2,128\t1,885\t2,807\t2,782\t2,715\n\t60\t0,863\t1,556\t1,514\t2,359\t1,690\t2,097\n\t10\t0,109\t0,203\t0,229\t0,289\t0,262\t0,273\nTempo M\u00e9dio (s)\t20\t1,350\t2,231\t2,003\t2,511\t1,861\t2,984\n\t40\t41,756\t89,639\t114,625\t72,127\t54,137\t72,101\n\t60\t517,422\t659,180\t427,924\t248,016\t190,024\t351,448\n\t10\t0,042\t0,093\t0,053\t0,078\t0,091\t0,100\n&amp; tempo\t20\t0,867\t1,108\t1,418\t3,456\t1,483\t2,848\n\t40\t29,749\t88,168\t175,842\t86,058\t43,831\t55,188\n\t60\t338,821\t1093,039\t526,810\t254,598\t239,052\t330,918\nTabela 6.17: Compara\u00e7\u00e3o do Procedimento P-WMTZ+CL e dos Algoritmos Sepl e Sep2 nas DCI-\nLULs nas inst\u00e2ncias QC de 10 a 60 nodos.\nNo Algoritmo Sep1, as Estrat\u00f3gias UL-E3 e UL-E4, em geral, s\u00e3o as que apresentam gaps mais baixos e os menores tempos m\u00f3edios de execu\u00e7c\u00e3ao.\nNo Algoritmo Sep2, os gaps m\u00f3dios obtidos para inst\u00e2ncias at\u00f3 40 nodos sao menores do que os obtidos pelo Algoritmo Sep1 usando a mesma estrat\u00f3gia, mas tendem a piorar em inst\u00e2ancias de 60 nodos. A n\u00f3vel de tempo de execu\u00e7c\u00e3ao \u00f3e prefer\u00f3vel aplicar a Estrat\u00f3egia UL-E4 do Algoritmo Sep1.\nEm qualquer um dos algoritmos os gaps m\u00f3edios s\u00e3ao inferiores aos obtidos com o Procedimento P-WMTZ+CL. Os limites inferiores obtidos usando estes algoritmos heur\u00f3sticos de separa\u00e7c\u00e3ao aumentam em todas as inst\u00e2ancias (de 10 a 60 nodos).\nEm termos de tempos m\u00f3edios verifica-se uma reduc\u00e7\u00e3ao em inst\u00e2ancias com 20 ou mais nodos no Algoritmo Sep1 usando a Estrat\u00f3egia UL-E4 quando comparado com o Procedimento P-WMTZ+CL. Podemos encontrar 42,5% das instancias de 10 a 60 nodos (17 inst\u00e2ancias em 40) em que os tempos de execu\u00e7c\u00e3ao do Algoritmo Sep1 usando a Estrat\u00f3egia UL-E4 s\u00e3ao inferiores aos tempos de execu\u00e7ca\u00e3o obtidos com o Procedimento P-WMTZ+Cl .\n6.2.6\tExperi\u00eancias Realizadas com as DGCILs\nDepois de realizadas v\u00e1rias experi\u00eancias computacionais com as diferentes combina\u00e7\u00f5es poss\u00edveis entre as escolhas dos conjuntos Eo e Ex e os diferentes procedimentos de levantamento das variaveis escolheram-se as tr\u00eas que apresentam melhores resultados para as DGCILs, as quais se encontram descritas a seguir.\nEstrat\u00e9gia Generalizada 1 (GL-E1)\nEscolha do conjunto Ex: FVD2 Escolha do conjunto Eo: FVU3 Procedimento de levantamento das vari\u00e1veis: PL-DUL\nEstrat\u00e9gia Generalizada 2 (GL-E2):\nEscolha do conjunto Ex: FVD2 Escolha do conjunto Eo: FVU3 Procedimento de levantamento das vari\u00e1aveis: PL-UDL\nEstrat\u00e9gia Generalizada 3 (GL-E3)\nEscolha do conjunto Ex: FVD2 Escolha do conjunto Eo: FVU3 Procedimento de levantamento das varia\u00e1veis: PL-ULD\nAs estrat\u00e1gias apresentadas para o Algoritmo Sepl diferem na escolha dos conjuntos de vari\u00e1veis a fixar a zero e a um e na ordem dos procedimentos de levantamento de vari\u00e1aveis.\nNa Tabela 6.18 s\u00f5o apresentados os gaps m\u00e9dios (em percentagem) do limite inferior obtidos pelo Procedimento P-WMTZ+CL e por cada um dos Algoritmos Sepl e Sep2 para as DGCILs e os respetivos desvios padr\u00f5es. Note-se que os referidos gaps correspondem aos valores obtidos pelas respetivas relaxa\u00e7\u00f5es lineares. Os tempos m\u00e9dios, em segundos, apresentados na Tabela 6.18, correspondem aos tempos de execuc\u00f5o at\u00e9 obter o valor otimo ou um limite superior para o valor do custo (tempo de execu\u00e7\u00f5o da relaxa\u00e7\u00f5o linear + tempo de execu\u00e7\u00f5o do Algoritmo Branch and Bound). Na mesma tabela encontram-se os desvios padr\u00f5oes correspondentes aos tempos.\nOs resultados computacionais apresentados na Tabela 6.18 para o Algoritmo Sep2 foram obtidos usando apenas a Estrat\u00e9gia GL-E2, uma vez que esta estrat\u00e9gia se\nmostrou a mais eficiente em termos de tempos m\u00e1dios de execu\u00e7\u00e3o para o Algoritmo Sep1.\n\t\tSep1\t\t\tSep2\t\n\t\tP-WMTZ+Cl\tGL-E1\tGL-E2\tGL-E3\tGL-E2\n\t10\t22,292\t7,533\t9,477\t8,009\t6,493\nGap M\u00e1dio (%)\t20\t9,874\t1,130\t1,201\t1,595\t1,202\n\t40\t6,362\t1,940\t2,119\t3,570\t2,020\n\t60\t4,830\t0,846\t0,949\t1,649\t0,921\n\t10\t7,061\t5,907\t5,853\t4,665\t3,939\n\t20\t4,380\t2,134\t2,333\t2,479\t2,338\nagap\t40\t0,840\t2,713\t2,771\t1,730\t2,659\n\t60\t0,863\t1,872\t2,027\t1,984\t1,964\n\t10\t0,109\t0,374\t0,292\t0,389\t0,299\nTempo M\u00e1dio (s)\t20\t1,350\t2,178\t2,052\t2,086\t2,828\n\t40\t41,756\t76,569\t68,194\t137,023\t100,902\n\t60\t517,422\t456,713\t339,516\t445,974\t369,289\n\t10\t0,042\t0,133\t0,122\t0,174\t0,107\n&amp; tempo\t20\t0,867\t2,766\t3,211\t3,091\t2,650\n\t40\t29,749\t60,440\t81,144\t154,134\t111,226\n\t60\t338,821\t532,450\t473,387\t495,796\t410,294\nTabela 6.18: Compara\u00e7\u00e3o do Procedimento P-WMTZ+CL e dos Algoritmos Sep1 e Sep2 nas DG-\nCILs nas inst\u00e2ncias QC de 10 a 60 nodos.\nNo Algoritmo Sep1, a Estrat\u00e1gia GL-E2 \u00e1 a mais r\u00e1pida e a Estrat\u00e1gia GL-E1 \u00e1 a que obt\u00e1m gaps mais baixos.\nNo Algoritmo Sep2, os gaps m\u00e1dios obtidos para instancias de 10, 40 e 60 nodos s\u00e3o menores do que os obtidos pelo Algoritmo Sep1 usando a mesma estrat\u00e1gia. A n\u00edvel de tempo de execu\u00e7ao \u00e1 prefer\u00edvel aplicar a Estrat\u00e1gia GL-E2 do Algoritmo Sep1.\nEm qualquer um dos algoritmos os gaps m\u00e9dios s\u00e3o inferiores aos obtidos com o Procedimento P-WMTZ+CL. Os limites inferiores obtidos usando estes algoritmos heur\u00edsticos de separa\u00e7\u00e3o aumentam em todas as inst\u00e2ncias (de 10 a 60 nodos).\nEm termos de tempos m\u00e1edios verifica-se uma reduc\u00e7\u00e3ao apenas em insta\u00eancias de 60 nodos no Algoritmo Sep1 usando a Estrat\u00e1egia GL-E2 quando comparado com o Procedimento P-WMTZ+CL. Podemos encontrar 50% das instancias de 10 a 60 nodos (20 insta\u00eancias em 40) em que os tempos de execuc\u00e7a\u00e3o do Algoritmo Sep1 usando a\nEstrategia GL-E2 sao inferiores aos tempos de execuc\u00e3o obtidos com o Procedimento P-WMTZ+Cl .\n6.2.7\tCompara\u00e7\u00e3o dos Algoritmos de Separa\u00e7\u00e3o\nCom o objetivo de comparar as melhores estrat\u00e9gias de separa\u00e7\u00e3o obtidas nas subsec\u00e7\u00f5es anteriores elaboramos os gr\u00e1ficos das Figuras 6.16, 6.17 e 6.18. No grafico da Figura 6.16 comparamos os tempos de execu\u00e7\u00e3o na obten\u00e7\u00e3o do valor otimo ou de um limite superior para o valor do custo (tempo de execucao da relaxa\u00e7ao linear + tempo de execuc\u00e3o do Algoritmo Branch and Bound) entre o Procedimento P-WMTZ+C e as melhores estrategias heur\u00edsticas de separa\u00e7\u00e3o. No grafico da Figura 6.17 apresentam-se as percentagens de solu\u00e7co\u00e3es otimas obtidas com as melhores estrategias de separac\u00e7a\u00e3o. Finalmente, no grafico da Figura 6.18 comparamos o numero de nodos usado no Algoritmo Branch and Bound entre o Procedimento P-WMTZ+C e as melhores estrategias heur\u00edsticas de separac\u00e3o.\nFigura 6.16: Percentagem de inst\u00e2ncias, em cada uma das melhores estrat\u00e1gias heur\u00edsticas de separa\u00e7ao com tempo inferior ao tempo do Procedimento P-WMTZ+CL em instancias QC de 10 a 60 nodos.\nAs Estrat\u00e9egias DCIL-E2 e DL-E3 s\u00e3ao as que apresentam a maior percentagem de inst\u00eaancias com tempo inferior ao tempo obtido na execuc\u00e7a\u00e3o do Procedimento P-WMTZ+C.\nFigura 6.17: Percentagem de solu\u00e7\u00f5es \u00f3timas obtidas com as melhores estrat\u00e9gias heur\u00edsticas de separa\u00e7\u00e3o em inst\u00e2ncias QC de 10 a 60 nodos.\nEm todas as estrat\u00e9gias heur\u00edsticas de separa\u00e7\u00e3o apresentadas no gr\u00edfico da Figura 6.17, a percentagem de solu\u00e7c\u00e3oes \u00e9otimas \u00e9e superior ou igual a 50%.\nFigura 6.18: Percentagem de inst\u00e2ncias, em cada uma das melhores estrat\u00e9gias heur\u00edsticas de separa\u00e7\u00e3o com o nUmero de nodos no Branch and Bound inferior ao nUmero usado pelo Procedimento P-WMTZ+C em inst\u00e2ncias QC de 10 a 60 nodos.\nPodemos observar no gr\u00e1fico da Figura 6.18 que as estrat\u00e1gias heur\u00edsticas de se-para\u00e7ao apresentadas usam um numero de nodos no Branch and Bound inferior ao numero de nodos no Branch and Bound usado pelo Procedimento P-WMTZ+C. As Estrat\u00e1gias DL-E3, GL-E1 e GL-E2 s\u00e3o as que apresentam uma maior percentagem de inst\u00eaancias em que o nu\u00e1mero de nodos no Branch and Bound \u00e1e inferior ao nu\u00e1mero de nodos usados pelo Branch and Bound do Procedimento P-WMTZ+C.\nNa Tabela 6.19 resumem-se os resultados computacionais mais relevantes referentes ao Procedimento P-WMTZ+CL e aos melhores algoritmos heur\u00edsticos de separa\u00e7ao. Apresentam-se os gaps m\u00e1dios (em percentagem) do limite inferior e os respetivos desvios padr\u00e3es. Note-se que os referidos gaps correspondem aos valores obtidos pelas respetivas relaxa\u00e7co\u00e3es lineares.\nOs tempos m\u00e1dios, em segundos, apresentados na Tabela 6.19, correspondem aos tempos de execu\u00e7c\u00e3ao at\u00e1e obter o valor \u00e1otimo ou um limite superior para o valor do custo (tempo de execu\u00e7c\u00e3ao da relaxa\u00e7c\u00e3ao linear + tempo de execu\u00e7c\u00e3ao do Algoritmo Branch and Bound). Na mesma tabela encontram-se os desvios padroes correspondentes aos tempos.\n236\n\t\t\tDCILs\tDCILDLs\tDCILULs\t\tDGCILs\t\n\t\tP-WMTZ+Cl\tDCIL-E2\tDL-E3\tUL-E3\tUL-E4\tGL-E1\tGL-E2\n\t10\t22,292\t9,632\t8,891\t9,652\t9,280\t7,533\t9,477\nGap M\u00e9dio (%)\t20\t9,874\t0,096\t1,304\t0,902\t1,025\t1,130\t1,201\n\t40\t6,362\t1,650\t0,940\t2,119\t2,101\t1,940\t2,119\n\t60\t4,830\t0,596\t0,382\t1,453\t0,773\t0,846\t0,949\n\t10\t7,061\t5,690\t6,151\t3,889\t4,275\t5,907\t5,853\n\t20\t4,380\t0,276\t2,604\t2,098\t2,476\t2,134\t2,333\nagap\t40\t0,840\t2,735\t2,217\t2,807\t2,782\t2,713\t2,771\n\t60\t0,863\t1,715\t1,096\t2,359\t1,690\t1,872\t2,027\n\t10\t0,109\t0,189\t0,195\t0,289\t0,262\t0,374\t0,292\nTempo M\u00e9dio (s)\t20\t1,350\t1,087\t1,157\t2,511\t1,861\t2,178\t2,052\n\t40\t41,756\t29,259\t27,474\t72,127\t54,137\t76,569\t68,194\n\t60\t517,422\t154,743\t73,554\t248,016\t190,024\t456,713\t339,516\n\t10\t0,042\t0,057\t0,070\t0,078\t0,091\t0,133\t0,122\n&amp;tempo\t20\t0,867\t0,824\t0,969\t3,456\t1,483\t2,766\t3,211\n\t40\t29,749\t27,386\t34,029\t86,058\t43,831\t60,440\t81,144\n\t60\t338,821\t293,342\t89,572\t254,598\t239,052\t532,450\t473,387\n\t10\t60\t28\t21\t21\t15\t13\t18\nNA M\u00e9dio de Nodos no B&amp;B\t20\t1158\t8\t289\t595\t514\t136\t304\n\t40\t28775\t4828\t2603\t7874\t6396\t5763\t7439\n\t60\t171415\t32697\t2744\t23751\t7228\t12236\t14536\nTabela 6.19: Compara\u00e7\u00e3o do Procedimento P-WMTZ+CL e dos melhores algoritmos heur\u00e1sticos de separac\u00e3o nas instancias QC de 10 a 60 nodos.\nEm rela\u00e7\u00e3o ao gap m\u00e9dio mais baixo, podemos observar que nas inst\u00e2ncias de 10 nodos e obtido usando a Estrat\u00e9gia GL-E1, nas inst\u00e2ncias de 20 nodos e obtido usando a Estrategia DCIL-E2 e para 40 e 60 nodos usando a Estrategia DL-E3.\nAs Estrategias DCIL-E2 e DL-E3 s\u00e3o as mais r\u00e1pidas. Em relac\u00e3o \u00e0 Estrategia DCIL-E2 apresenta tempos medios inferiores em inst\u00e2ncias de 10 e 20 nodos. A medida que o numero de nodos aumenta a Estrategia DL-E3 torna-se mais r\u00e1pida (inst\u00e2ncias de 40 e 60 nodos).\nEm rela\u00e7\u00e3o ao numero de nodos no Branch and Bound tambem se obtem melhores resultados usando a Estrategia DL-E3.\n6.2.8\tResultados Computacionais\nNesta subsecc\u00e3o vamos apresentar os resultados computacionais das duas melhores estrategias heur\u00edsticas de separa\u00e7\u00e3o, isto \u00e9, das Estrategias DCIL-E2 e DL-E3 para inst\u00e2ncias Quase Caminhos de 80, 100 e 150 nodos. Para estas estrat\u00e9gias heur\u00edsticas de separa\u00e7\u00e3o e para o Procedimento P-WMTZ+CL apresentamos na Tabela 6.20 os gaps m\u00e9dios (em percentagem) do limite inferior e os respetivos desvios padr\u00e3es. Note-se que os referidos gaps correspondem aos valores obtidos pelas respetivas relaxacoes lineares.\nOs tempos m\u00e9dios, em segundos, apresentados na Tabela 6.20, correspondem aos tempos de execu\u00e7c\u00e3ao at\u00e9e obter o valor \u00e9otimo ou um limite superior para o valor do custo (tempo de execu\u00e7\u00e3o da relaxac\u00e3o linear + tempo de execuc\u00e3o do Algoritmo Branch and Bound). Na mesma tabela encontram-se os desvios padr\u00e3es correspondentes aos tempos.\n\t\tP-WMTZ+Cl\tDCIL-E2\tDL-E3\n\t80\t3,778\t0,643\t0\nGap M\u00e9dio (%)\t100\t3,192\t0,254\t0\n\t150\t1,680\t1,103\t0,737\n\t80\t0,884\t1,356\t0\nagap\t100\t0,274\t0,802\t0\n\t150\t0,360\t0,775\t0,994\n\t80\t2535,069\t422,553\t74,436\nTempo Medio (s)\t100\t10596,601\t1322,044\t234,924\n\t150\t10804,610\t7437,602\t4838,626\n\t80\t2095,415\t641,694\t25,973\nfyempo\t100\t645,980\t3333,550\t119,356\n\t150\t1,819\t4137,739\t4669,236\n\t80\t426456\t47044\t12\nN.Q M\u00e9dio de Nodos no B&amp;B\t100\t1020861\t35802\t1\n\t150\t322897\t201438\t116934\nTabela 6.20: Compara\u00e7\u00e3o do Procedimento P-WMTZ+CL e dos dois melhores algoritmos heur\u00edsticos de separa\u00e7\u00e3o nas instancias QC de 80 a 150 nodos.\nEm inst\u00e2ncias Quase Caminhos de 80 a 150 nodos, quando se aplica a Estrat\u00e9gia DCIL-E2 do Algoritmo Sep1 obt\u00e9m-se 66,7% de inst\u00e2ncias com solu\u00e7\u00e3o \u00f3tima (20 em 30 instancias). Com a aplicac\u00e3o da Estrat\u00e9gia DL-E3 do Algoritmo Sep1 obtemos 86,67% (26 em 30 instancias). Os gaps m\u00e9dios mais baixos e os tempos m\u00e9dios mais baixos s\u00e3o obtidos usando a Estrat\u00e9gia DL-E3. A Estrat\u00e9gia DL-E3 reduz significativamente o numero de nodos no Branch and Bound. Assim, a Estrat\u00e9gia DL-E3 parece ser a mais eficiente.\nInst\u00e2ncias Aleat\u00f3rias e Euclideanas\nPara inst\u00e2ncias do grupo Aleat\u00e9rias e Euclideanas, o Procedimento P-WMTZ+C \u00e9 relativamente r\u00e9pido na obten\u00e7\u00e3o do valor \u00e9timo para instancias com menos de 300 nodos no caso das instancias Aleat\u00e9rias e com menos de 200 nodos no caso das inst\u00e2ncias Euclideanas. Em instancias de maiores dimensoes a relaxac\u00e3o linear do Procedimento P-WMTZ+C \u00e9 mais demorada do que a obtenc\u00e3o do valor otimo depois de entrar em Branch and Bound. Deste modo, em termos de tempo nao temos\nvantagens em usar a introduc\u00e7a\u00e3o de desigualdades como planos de corte usando as estrat\u00e9gias heur\u00edsticas de separa\u00e7\u00e3o. Foram efetuadas algumas experi\u00eancias com algumas das inst\u00eancias Aleat\u00f3rias e Euclideanas e verifica-se que quando se aplica a Estrat\u00e9gia DL-E3 das DCILDLs, o numero de nodos no Branch and Bound, em geral, diminui comparativamente ao numero de nodos no Branch and Bound obtido pelo Procedimento P-WMTZ+C.\n6.2.9\tS\u00edntese dos Resultados Computacionais\nOs melhores resultados s\u00e3o obtidos usando o Algoritmo Sep1, onde em cada itera\u00e7\u00e3o \u00e1 introduzida apenas uma desigualdade v\u00e1lida.\nA percentagem de solu\u00e7\u00e3es \u00e1timas obtida em todas as int\u00eancias \u00e1 de 62,86% (44 em 70 inst\u00eancias) usando a Estrat\u00e9gia DCIL-E2 das DCILs e de 68,57% (48 em 70 instancias) usando a Estrat\u00e1gia DL-E3 das DCILDLs. Para inst\u00eancias Quase Caminhos de 10 a 60 nodos, de entre as v\u00e1rias estrat\u00e1gias usadas ao aplicar o Algoritmo Sep1, as duas melhores estrat\u00e1egias de separa\u00e7ca\u00e3o sa\u00e3o a Estrat\u00e1egia DCIL-E2 e a Estrat\u00e1egia DL-E3, as quais obt\u00eaem as solu\u00e7c\u00e3oes de melhor qualidade no menor tempo. Para inst\u00eancias de 80 a 150 nodos conclu\u00edmos que a Estrat\u00e1gia DL-E3 das DCILDLs \u00e1 a que apresenta os melhores resultados.\n240\nCap\u00edtulo 7\nM\u00e9todo Feasibility Pump\nA Heur\u00edstica Feasibility Pump (FP) \u00e9 uma sequencia de arredondamentos de solu\u00e7\u00f5es fracion\u00e9arias obtidas atrav\u00e9es da relaxa\u00e7ca\u00f5o linear que conduz, no caso do Problema WMST, a uma solu\u00e7ao inteira admiss\u00e9vel (caso exista alguma), em que o seu custo \u00e9e o valor \u00e9otimo ou um limite superior para o valor o\u00e9timo.\nQuando se usam formula\u00e7\u00f5es, os solvers dos v\u00e9rios pacotes de Otimizac\u00f5o tais como, o do software Xpress, em algumas instancias dif\u00e9ceis gastam muito tempo a determinar a primeira soluc\u00e7a\u00f5o admiss\u00e9vel. Por esse motivo, o desenvolvimento de m\u00e9etodos heur\u00e9sticos gen\u00e9ericos que interagem com pacotes de resolu\u00e7c\u00f5ao t\u00eaem mostrado grande im-porta\u00eancia, do ponto de vista pr\u00e9atico, para encontrar uma primeira solu\u00e7c\u00f5ao admiss\u00e9vel em problemas dif\u00e9ceis.\nO M\u00e9todo Feasibility Pump \u00e9 um esquema heur\u00edstico bastante utilizado devido \u00e0 sua rapidez e tamb\u00e9m \u00e0 qualidade da primeira solu\u00e7ao admiss\u00e9vel encontrada. Foi proposto por Fischetti, Glover e Lodi [18] com o objetivo de encontrar solu\u00e7\u00f5es admiss\u00e9veis (se existir alguma) para problemas gen\u00e9ericos de Programac\u00e7\u00f5ao Linear Inteira Mista (MIP - Mixe.d-Inte.ger Linear Programming). Posteriormente, o m\u00e9todo foi melhorado por Fischetti, Bertacco e Lodi [12] e por Achterberg e Berthold [2].\nNeste cap\u00e9tulo apresentamos alguns conceitos importantes para a aplicac\u00e7\u00f5ao do M\u00e9etodo Feasibility Pump e descrevemos uma Heur\u00e9stica Feasibility Pump ba\u00e9sica aplicada ao Problema WMST na Secc\u00f5o 7.1. Com o objetivo de melhorar a qualidade das solu\u00e7\u00f5es obtidas apresentamos, na Sec\u00e7\u00f5o 7.2, uma vers\u00f5o onde se altera a fun\u00e7\u00f5o objetivo na Heur\u00e9stica Feasibility Pump aplicada ao Problema WMST. Na Sec\u00e7c\u00f5ao 7.3 apresentamos algumas extenso\u00f5es do m\u00e9etodo com o objetivo de melhorar o seu desempenho quando aplicado ao Problema WMST. De seguida, na Sec\u00e7ao 7.4 apresentamos\no comportamento da Heur\u00edstica Feasibility Pump do ponto de vista geom\u00e1trico, no caso geral e no caso particular do problema em estudo. Na u\u00e1ltima sec\u00e7c\u00e3ao come\u00e7camos por descrever e discutir algumas experi\u00eancias computacionais realizadas. Posteriormente, apresentamos os resultados obtidos usando quatro estrat\u00e1gias Heur\u00edsticas Feasibility Pump e, por fim, comparamos as estrat\u00e1egias heur\u00e1sticas propostas, em termos de qualidade da solu\u00e7c\u00e3ao admiss\u00e1vel determinada e de tempo de execu\u00e7c\u00e3ao, com a Heur\u00e1stica do software Xpress aplicada ao nodo raiz utilizando a Formulacao WMTZ e tamb\u00e1m com a primeira solu\u00e7ca\u00e3o inteira admiss\u00e1vel obtida atrav\u00e1es da Formula\u00e7c\u00e3ao WMTZ quando usa o procedimento Branch and Bound. Para terminar o cap\u00e1tulo apresentamos uma s\u00e1ntese dos resultados computacionais obtidos.\n7.1 Heur\u00edstica Feasibility Pum Basica Aplicada ao\nProblema WMST\nPara aplicar a Heur\u00edstica Feasibility Pump B\u00e9sica ao Problema WMST, come\u00e7amos por obter a solu\u00e7\u00f5o \u00e9tima da relaxa\u00e7\u00f5o linear de uma formula\u00e7\u00f5o para o Problema WMST, a qual designamos por x* G XL. Denotamos por C(x*), o custo da solu\u00e7ao x* e por W(x*), o peso da solu\u00e7ao x*. Caso a solucao x* seja inteira, ent\u00f5o \u00e0 solu\u00e7ao x* G Xwmst corresponde a arvore de suporte Tx*.\nDesignamos por x o ponto que \u00e9 obtido por arredondamento do ponto x da seguinte forma: xij = [xj], para todo o arco (i, j) G A, sendo [.] o operador escalar de arredondamento. No caso do operador de arredondamento para o inteiro mais pr\u00edximo, o arredondamento de cada vari\u00e9avel seria efetuado da seguinte forma:\n_\t1, se xij > 0,5\nxij = S\n0, caso contr\u00e9ario\n, (b j) G A-\nDeste modo, todas as componentes xij, V(z, j) G A, de x sao inteiras e este ponto pode ser considerado uma solu\u00e7\u00f5o inteira. Denotamos por C(x), o custo da solucao x e por W(x), o peso da solu\u00e7ao x. Em geral, a referida soluc\u00f5o n\u00f5o \u00e9 admiss\u00edvel, embora em alguns casos possa ser uma solucao inteira admiss\u00edvel. Caso a solu\u00e7\u00f5o x corresponda a uma \u00e9rvore de suporte esta sera designada por Tx, e o custo ser\u00e9 denotado por C(Tx) e o peso por W (Tj).\nExemplo 7.1.\nConsideramos as vari\u00edveis com solu\u00e7\u00e3o positiva na solu\u00e7\u00e3o da relaxa\u00e7\u00e3o linear\n(Exemplo 3.2),\nx* : x01 = 1; x04 = 0,2; x12 = 1; x13 = 0,8; x34 = 0,8 e x43 = 0,2;\nrelativa a inst\u00e2ncia de 5 nodos obtida no Exemplo 2.1. Se efetuarmos o arredondamento para o inteiro mais proximo de todas as vari\u00edveis (com solu\u00e7\u00e3o positiva), obtemos a soluc\u00e7\u00e3ao,\nx = [x*] : x01 = 1; x04 = 0; x12 = 1; x13 = 1; x34 = 1 e x43 = 0.\nA esta solu\u00e7ao x corresponde a \u00edrvore de suporte Tx que se encontra representada na Figura 7.1.\n\t/ -\t1\t9 - 1\t8 15\t7 16\t\nC =\t\t-\t30\t16\t\n\t\t\t-\t10\t\n\t\\\t\t\t-\t/\nFigura 7.1: Arvore de suporte Tx com custo 27 e peso 19.\nO peso desta \u00edrvore \u00e9 W(Tx) = 19 &lt;20 e o custo \u00e9 C(T^) = 27. Logo, neste caso, a solu\u00e7\u00e3o x \u00e9 uma soluc\u00e3o inteira admiss\u00edvel e corresponde \u00e0 solucao \u00edtima desta inst\u00e2ancia de 5 nodos.\nSuponhamos que obtemos o seguinte arredondamento,\nx = [x*] : x01 = 1; x04 = 1; x12 = 1; x13 = 1; x34 = 0 e x43 = 0.\nA esta soluc\u00e3o x corresponde a \u00edrvore de suporte Tx que se encontra representada na Figura 7.2.\n\t\u00ed -\t1\t9 - 1\t8 15\t7 > 16\t\nC =\t\t-\t30\t16\t\n\t\t\t-\t10\t\n\t\t\t\t-\t/\nFigura 7.2: Arvore de suporte Tx com custo 24 e peso 21.\nO peso desta \u00e1rvore \u00e1 W(Tx) = 21 > 20 e o custo \u00e1 C(Tx) = 24. Logo, neste caso, x e uma solucao inteira nao admiss\u00edvel, pois n\u00e3o verifica a restri\u00e7ao de peso.\nNa primeira situacao do Exemplo 7.1 a solucao x e inteira admiss\u00e1vel (x G XWMST), pois \u00e1 uma arvore de suporte que verifica a restricao de peso, isto \u00e1, W(Tx) &lt;W. Na segunda situa\u00e7ao do mesmo exemplo, a solucao x \u00e1 inteira e corresponde a uma \u00e1rvore de suporte, no entanto esta arvore n\u00e3o verifica a restri\u00e7\u00e3o de peso, isto \u00e1, W(Tx) > W, pelo que nesta situa\u00e7\u00e3o dizemos que x \u00e1 uma soluc\u00e3o inteira nao admiss\u00e1vel. Al\u00e1m destes dois casos que observ\u00e1mos no Exemplo 7.1, tamb\u00e1m podem ocorrer mais dois casos, o caso em que a restric\u00e3o de peso \u00e1 verificada, mas a solu\u00e7\u00e3o x n\u00e3o corresponde a uma \u00e1rvore de suporte e o caso em que n\u00e3o se verifica a restric\u00e3o de peso e x nao corresponde a uma \u00e1rvore de suporte. Nestes dois ultimos casos a solucao x \u00e1 inteira n\u00e3o admiss\u00e1vel. Em resumo, a solu\u00e7\u00e3o x \u00e9 sempre inteira, e pode ou n\u00e3o ser admiss\u00e1vel dependendo se satisfaz ou nao as restantes restricoes (ser arvore de suporte e verificar a restri\u00e7ao de peso).\nA funcao distancia entre um ponto x G XL e um ponto inteiro x pode ser definida pela norma L1 tal que,\nX(x,x)=\t\\xij - xij|,\t(7.1)\ne pode ser reescrita da seguinte forma\nA(x,x)=\txij +\t(1 - xij).\t(7.2)\n(i,j)GA:xij =0\t(i,j)eA:xij = 1\nComo tal, a fun\u00e7ao n\u00e3o linear definida por (7.1) pode ser transformada na func\u00e3o linear definida por (7.2).\nDado um ponto inteiro x, o ponto x* G XL mais pr\u00f3ximo de x pode ser determinado atrav\u00e9s da minimizac\u00e3o de um novo problema, cujas restri\u00e7\u00e3es s\u00e3o as mesmas do Problema WMST e apenas a fun\u00e7\u00e3o objetivo \u00e9 alterada para\n\u00e3(x*) = min A(x*,x).\ns.a. x* G XL.\nSe a distancia for nula, isto e, se $(x*) = 0, entao x* e uma solu\u00e7ao inteira admiss\u00edvel obtida para o Problema WMST. Por outro lado, se $(x*) > 0 e for obtido um ponto x* G XL, ent\u00e3o o novo ponto inteiro x mais pr\u00e9ximo de x* \u00e9 facilmente obtido por arredondamento de x*. Assim, a Heur\u00edstica Feasibility Pump sugere que para encontrar uma solu\u00e7ca\u00e3o inteira admiss\u00e9vel para o Problema WMST se atualize, iterativamente, o par de pontos (x* ,x) com o objetivo de reduzir, tanto quanto poss\u00edvel, a sua dist\u00e2ncia X(x*,x).\nDe seguida apresentamos uma descri\u00e7\u00e3o resumida da Heur\u00edstica Feasibility Pump B\u00e9sica Aplicada ao Problema WMST, posteriormente, explicamos de forma mais detalhada o seu funcionamento. Denote-se por TL o tempo limite imposto para executar a heur\u00edstica e maxIter o numero m\u00e1ximo de itera\u00e7\u00e3es.\nHeur\u00edstica Feasibility Pump B\u00e1sica Aplicada ao Problema WMST\nPasso 1: Obter a solu\u00e7\u00e3o da relaxa\u00e7\u00e3o linear\nSeja x* a soluc\u00e7\u00e3ao da relaxa\u00e7ca\u00e3o linear de uma formulac\u00e7\u00e3ao para o Problema WMST.\nSe x* \u00e9e inteira, enta\u00e3o\nx* \u00e9 a solu\u00e7\u00e3o \u00e9tima. STOP.\nCaso contra\u00e9rio,\nir para o Passo 2.\nPasso 2: Arredondar os valores da solu\u00e7\u00e3o da relaxa\u00e7\u00e3o linear\nSeja x0 := [x*].\nPasso 3: Crit\u00e9rio de paragem e pumping cycle\nk := 0.\nEnquanto (tempo &lt;TL e k &lt;maxIter) fazer\nk := k + 1.\nDeterminar x* resolvendo a relaxac\u00f5o linear:\n$(x*) = min A(x*, xk-1)\ns.a. x* G XL.\nSe ^(x*) = 0, ent\u00f5o\nx* \u00e9 uma solu\u00e7\u00f5o inteira admiss\u00edvel, STOP.\nCaso contr\u00e9ario,\nSe 3(i, j) G A : [xj] = xij 1, ent\u00f5o\natualizar xk := [x*].\nCaso contr\u00e9ario,\naplicar Mecanismo de Perturba\u00e7ao1.\nA heur\u00edstica inicializa no Passo 1 com um ponto inicial x* que \u00e9, em geral, a solu\u00e7ao da relaxacao linear de uma formula\u00e7ao para o Problema WMST. Caso a solucao x* seja inteira (x* G XWMST), entao foi obtida a soluc\u00f5o \u00f3tima e a heur\u00edstica termina. Caso contr\u00e1rio, definimos no Passo 2 uma solu\u00e7\u00f5o inteira x obtida atrav\u00e9s do arredondamento da soluc\u00e7a\u00f5o x*.\nNo Passo 3, enquanto o tempo limite TL e o numero m\u00edximo de itera\u00e7\u00f5es maxIter n\u00f5o forem excedidos, executamos uma iterac\u00f5o do M\u00e9todo Feasibility Pump, chamada pumping cycle. Em cada pumping cycle consideramos a solu\u00e7\u00f5o corrente x e, atrav\u00e9s da relaxac\u00f5o linear, encontramos o ponto x* G XL que esta mais pr\u00f3ximo da solucao corrente x, minimizando assim a dist\u00e2ncia A(x*,x).\nSe $(x*) = 0, isso significa que x* \u00e9 uma solu\u00e7ao inteira admiss\u00edvel (x* G Xwmst) e a heur\u00edstica termina. Caso contrario, se pelo menos uma das componentes [xj] for diferente da respetiva componente xij obtida na iteracao anterior, substitu\u00edmos x pelo arredondamento de x* de modo a reduzir ainda mais a distancia A(x*,x).\n1Este Mecanismo de Perturba\u00e7\u00e3o ser\u00e1 explicado detalhadamente mais adiante.\nO principal problema na aplicac\u00e3o deste m\u00e9todo est\u00e9 na possibilidade de depois de um certo numero de itera\u00e7\u00e3es o m\u00e9todo poder entrar em ciclo. A ocorr\u00eancia de ciclo deve-se ao facto de se encontrarem v\u00e1rias vezes a mesma sequ\u00eancia de pontos x* e x, o que leva a que a dist\u00e2ncia A(x*,x) n\u00e3o seja reduzida. De modo a contornar este problema, introduzimos um simples mecanismo de perturbac\u00e7\u00e3ao (explicado mais adiante) na solu\u00e7c\u00e3ao corrente, fazendo com que o processo de busca e converg\u00eaencia seja reiniciado a partir de uma nova solu\u00e7c\u00e3ao x*.\nO processo termina quando uma solu\u00e7c\u00e3ao inteira for encontrada, ou quando o tempo limite ou o nu\u00e9mero m\u00e9aximo de iterac\u00e7\u00e3oes impostos forem excedidos.\nSe o tempo limite ou o nu\u00e9mero ma\u00e9ximo de itera\u00e7co\u00e3es forem excedidos e na\u00e3o houve sucesso em obter uma solu\u00e7ao inteira admiss\u00e9vel, a Heur\u00e9stica Fesibility Pump termina com falha.\n7.2\tAlteracao da Funcao Objetivo na Heur\u00edstica\nFeasibility Pump Aplicada ao Problema WMST\nCom o ob jetivo de obter soluc\u00e7\u00e3oes de melhor qualidade os autores Achterberg e Berthold [2] prop\u00e3em uma modifica\u00e7\u00e3o na Heur\u00edstica Feasibility Pump original para os Problemas MIP. Tendo por base as ideias de Achterberg e Berthold [2] podemos adaptar esta pequena modifica\u00e7\u00e3o para aplicar ao Problema WMST.\nNa Heur\u00edstica Feasibility Pump B\u00e9sica para o Problema WMST apresentada na Secc\u00e3o 7.1, apenas se utiliza a fun\u00e7ao objetivo do Problema WMST na obten\u00e7ao da primeira solu\u00e7ao admiss\u00e9vel x* E XL. Nas restantes itera\u00e7\u00e3es utiliza-se como funcao objetivo a func\u00e3o dada por (7.2). Nesta heur\u00edstica modificada a primeira solu\u00e7\u00e3o \u00e9 obtida como na heur\u00e9stica anterior e nas restantes itera\u00e7c\u00e3oes vamos usar uma fun\u00e7c\u00e3ao objetivo modificada que contenha tamb\u00e9em informa\u00e7c\u00e3ao da fun\u00e7c\u00e3ao objetivo do Problema WMST.\nAssim, a func\u00e7\u00e3ao objetivo (7.2) \u00e9e substitu\u00e9da por uma combina\u00e7c\u00e3ao linear convexa entre a func\u00e3o objetivo do Problema WMST ^2(i j)eA Cjxij = cTx e a funcao dist\u00e2ncia A(x,x), e passa a ser definida por,\nAa(x,x) := (1 \u2014 a)A(x,x) + a\nT\nc x,\n(7.3)\nonde ||c|| \u00e9 a norma Euclideana do vetor dos custos e a G [0,1]. Deste modo, \u00e0 medida que o numero de itera\u00e7\u00e3es aumenta, a influ\u00eancia da func\u00e3o objetivo do Problema WMST vai sendo, progressivamente, reduzida dando lugar \u00e0 fun\u00e7ao objetivo (7.2) quando o valor de a = 0 \u00e9 atingido. Deste modo, aumenta-se a probabilidade de converg\u00eancia para solu\u00e7oes inteiras admiss\u00e9veis de melhor qualidade.\nO Passo 3 da heur\u00edstica descrita na Sec\u00e7\u00e3o 7.1 \u00e9 alterado para:\nPasso 3: Crit\u00e9rio de paragem e pumping cycle\nk := 0.\nAtribuir um valor a ak e a ^.\nEnquanto (tempo &lt;TL e k &lt;maxIter) fazer\nk := k + 1.\nDeterminar x* resolvendo a relaxa\u00e7ao linear:\nb,l;(x*) = min Aafc(x*,xk-1)\ns.a. x* G XL.\nSe 'dak (x*) = 0, ent\u00e3o\nx* \u00e9e uma solu\u00e7c\u00e3ao inteira admiss\u00e9vel, STOP.\nCaso contr\u00e9ario,\nSe 3(i, j) G A : [x*] = xij 1, ent\u00e3o atualizar xk := [x*].\nCaso contra\u00e9rio,\nSe xk = xk-1 e ak - ak-1 &lt;\u00f5a, entao\naplicar Mecanismo de Perturbac\u00e7a\u00e3o1 .\nGuardar o par (xk, ak).\nAtualizar ak = ^ak-1.\nOs Passos 1 e 2 da heur\u00edstica apresentada na Sec\u00e7\u00e3o 7.1 mant\u00eam-se inalterados.\nNo Passo 3, o valor de a \u00e9 inicializado com a0 G [0,1] e \u00e9 atribu\u00e9do um valor fixo a G]0,1[. A solucao x* \u00e9 determinada usando a func\u00e3o objetivo (7.3) em vez da (7.2). xEste Mecanismo de Perturba\u00e7\u00e3o ser\u00e1 explicado detalhadamente mais adiante.\nO valor de a \u00e9 geometricamente reduzido em cada itera\u00e7ao segundo o par\u00e2metro fixo ou seja, ak = ^afc_i.\nNote-se que se ak = 0, ent\u00e3o Aafc (x,x) := A(x,x), o que corresponde a func\u00e3o objetivo utilizada na Heur\u00edstica Feasibility Pump Basica Aplicada ao Problema WMST.\nEm cada iterac\u00e3o, o par (xk,ak) \u00e9 guardado e o m\u00e9todo pode entrar em ciclo se existirem duas itera\u00e7\u00f5es seguidas k - 1 e k, tais que, os correspondentes pares (xk_1,ak_1) e (Xk,ak) satisfazem xk = xk-1 e ak - ak-1 &lt;\u00f5a, para um dado valor \u00f4a G [0,1]. No caso do m\u00e9todo entrar em ciclo tamb\u00e9m podemos aplicar os mecanismos de perturba\u00e7\u00e3o que ser\u00e2o descritos mais adiante na Sec\u00e7\u00e3o 7.3.\n7.3\tExtens\u00f5es da Heur\u00edstica Feasibility Pump para o Problema WMST\nO interesse ao aplicarmos a Heur\u00edstica Feasibility Pump ao Problema WMST \u00e9 o de obter solu\u00e7\u00e3es inteiras admiss\u00edveis de boa qualidade e de forma r\u00e1pida. Assim, temos de ter em conta o modo de obtenc\u00e3o das sucessivas soluc\u00e3es x* G XL, os crit\u00e9rios a adotar para efetuar o arredondamento das vari\u00e9aveis e os mecanismos de perturba\u00e7c\u00e3ao a aplicar.\n7.3.1\tModo de Obten\u00e7\u00e3o das Solu\u00e7\u00f5es x*\nA solu\u00e7c\u00e3ao inicial pode ser obtida atrav\u00e1es da solu\u00e7ca\u00e3o da relaxac\u00e7\u00e3ao linear do Procedimento P-WMTZ+C apresentado na Secc\u00e3o 3.3, pois foi aquele que apresentou os melhores resultados em termos de tempo de execuc\u00e7\u00e3ao para todos os grupos de inst\u00eaancias em teste.\nEm insta\u00eancias grandes Aleat\u00e1orias e Euclideanas a relaxa\u00e7c\u00e3ao linear do Procedimento P-WMTZ+C demora muito tempo na obten\u00e7\u00e3o de uma soluc\u00e3o admiss\u00edvel (ver resultados computacionais do Cap\u00edtulo 3), ent\u00e3o se utilizarmos este procedimento a Heur\u00edstica Feasibility Pump iria levar muito tempo para a obten\u00e7ca\u00e3o de uma solu\u00e7c\u00e3ao inteira ad-miss\u00e1vel. Assim, para contornar este problema e reduzir o tempo de execu\u00e7c\u00e3ao podemos\naplicar as seguintes estrat\u00e9egias:\n1.\tTodas as soluc\u00e3es x* E XL sao obtidas recorrendo \u00e0 relaxa\u00e7ao linear da For-mula\u00e7ca\u00e3o WMTZ.\n2.\tA primeira solu\u00e7ao x* E XL \u00e9 obtida atrav\u00e9s da relaxacao linear da Formulacao WMTZ e durante cada pumping cycle usamos a relaxa\u00e7\u00e3o linear do Procedimento P-WMTZ+C para obter as sucessivas solucoes x* E XL.\n3.\tA primeira solu\u00e7\u00e3o x* E XL \u00e9 obtida atrav\u00e9s da relaxacao linear do Procedimento P-WMTZ+C com um tempo limite na introdu\u00e7c\u00e3ao de cortes e durante cada pumping cycle usamos a relaxa\u00e7ca\u00e3o linear da Formulac\u00e7a\u00e3o WMTZ para obter as sucessivas solucoes x* E XL.\n4.\tTodas as soluc\u00e3es x* E XL s\u00e3o obtidas recorrendo a relaxacao linear do Procedimento P-WMTZ+C com um tempo limite na introdu\u00e7c\u00e3ao dos cortes.\nNa primeira estrat\u00e9gia obtemos uma soluc\u00e3o x* E XL de forma r\u00e9pida, mas fraca. Usando o Procedimento P-WMTZ+C a solu\u00e7\u00e3o x* E XL encontrada \u00e9 de melhor qualidade, mas \u00e9e obtida de forma mais lenta. Para tentar diminuir o tempo de execu\u00e7c\u00e3ao, na terceira estrat\u00e9egia usamos o Procedimento P-WMTZ+C com tempo limitado na introdu\u00e7ao dos cortes para obten\u00e7ao da solu\u00e7ao inicial x* E XL e em cada pumping cycle usamos a Formulacao WMTZ para obter as sucessivas solu\u00e7\u00f5es x* E XL. Na u\u00e9ltima estrat\u00e9egia usamos sempre o Procedimento P-WMTZ+C com limite de tempo na introdu\u00e7ca\u00e3o dos cortes.\n7.3.2\tCrit\u00e9rios de Arredondamento das Vari\u00e1veis\nObservamos que um dos aspetos a ter em conta, em rela\u00e7ca\u00e3o ao arredondamento das vari\u00e9aveis, \u00e9e o facto de que se n\u00e3ao efetuamos o arredondamento a algumas varia\u00e9veis, nem para zero nem para um, ficando elas com um valor fracion\u00e9ario, a heur\u00e9stica termina quando obtiver uma solu\u00e7ca\u00e3o admiss\u00e9vel (na\u00e3o necessariamente inteira). O que leva a concluir que para obter uma soluc\u00e7\u00e3ao inteira admiss\u00e9vel temos de efetuar o arredondamento a todas as vari\u00e9aveis. Notamos que se n\u00e3ao efetuarmos o arredondamento a todas\nas variaveis o valor obtido para o custo pode corresponder tanto a um limite superior como a um limite inferior.\nPara o arredondamento das variaveis podemos estabelecer diferentes crit\u00e9rios. De seguida apresentamos alguns crit\u00e9rios gerais que se podem utilizar para efetuar o arredondamento das vari\u00e9veis.\n,(i,j) e A,\n\u2022 Crit\u00e9rio de Arredondamento 1 (A1)\n_\t11, se Xij > a\nXij = S\n[ 0, caso contrario\nonde a constante a pode tomar valores no intervalo ]0,1[. Note-se que no caso de a = 0,5 temos o chamado arredondamento sim\u00e9trico.\n\u2022 Crit\u00e9rio de Arredondamento 2 (A2)\nse Xij > b\nse Xij &lt;a , (i,j) e A, caso contr\u00e1rio\nonde a constante a pode tomar valores no intervalo ]0; 0,5[ e a constante b no intervalo ]0,5; 1[. A constante p pode tomar apenas dois valores, isto \u00e9, p e {0,1}. Para obter o valor de p, geramos aleatoriamente um valor pij e [0,1]. Se pij > 0,5, ent\u00e3o p =1, caso contrario p = 0.\n\u2022 Crit\u00e9rio de Arredondamento 3 (A3)\n~ \u00ed 1, se xij > a ou ) e T\nXij =&lt;\t, , \u25a0\t, (i,j) e\n0, caso contrario\n7.3.3\tMecanismos de Perturba\u00e7\u00e3o\nOs mecanismos de perturba\u00e7\u00e3o s\u00e3o utilizados sempre que todas as componentes xj ((i,j) G A) do novo xk coincidam com as componentes de xk_1, isto \u00e9, se em duas itera\u00e7\u00e3es consecutivas as soluc\u00e3es arredondadas s\u00e3o iguais. No caso do valor de d(x*) ser o mesmo em tr\u00eas itera\u00e7\u00e3es seguidas, tambem e utilizado o mecanismo de perturba\u00e7\u00e3o. Nestas duas situa\u00e7\u00e3es temos de modificar algumas componentes xij ((i, j) G A), mesmo que aumente o valor da dist\u00e2ncia A(x*, x), de modo que o processo de busca e converg\u00e2ncia seja reiniciado a partir de uma nova solucao x*.\nNeste sentido, podemos utilizar os dois mecanismos que se seguem e que s\u00e3o id\u00e2nticos aos utilizados em [18]:\n\u2022\tMecanismo de Perturba\u00e7\u00e3o 1 (P1):\nModificar apenas as vari\u00e1veis x^ ((i, j) 6 A), tais que \\xij \u2014 x^| > a.\nNo caso de xij \u2014 Xj > a, ent\u00e3o modificar o valor de Xj = 0 para Xj = 1. Caso contrario, modificar para Xj = 0.\n\u2022\tMecanismo de Perturba\u00e7\u00e3o 2 (P2):\nPara cada (i, j) 6 A, gerar um valor aleatorio pij 6 [\u20140,3; 0,7] e modificar apenas as variaveis Xj ((i, j) 6 A), tais que \\xij \u2014 Xj| + maxfpj, 0} > \u00e3.\nNo caso de xij \u2014 xj + maxlpj, 0} > \u00e3, ent\u00e3o modificar o valor de xj = 0 para xjj = 1. Caso contrario, modificar para x^ = 0.\nO Mecanismo P1 pode ser considerado fraco pois, quando temos \\xij \u2014 xj| = 0 ((i, j) G A) essas variaveis n\u00e3o s\u00e3o modificadas. Quanto ao Mecanismo P2, este pode ser considerado forte, uma vez que da a possibilidade tambem \u00e0s variaveis tais que \\xij \u2014 xj | = 0 ((i,j) G A) de serem modificadas, desde que max{pij, 0} > \u00e3. Assim, o conjunto de variaveis que podem ser trocadas no Mecanismo P2 e maior do que no Mecanismo P1.\nCom a aplica\u00e7\u00e3o dos mecanismos de perturba\u00e7\u00e3o podem ser efetuadas muitas trocas e alterado o valor de todas as variaveis da soluc\u00e3o. Assim, para evitar que tal\naconte\u00e7a, \u00e9 necessario limitar tambem o nUmero de trocas. De acordo com\nmos efetuar um numero inteiro de trocas pertencente ao intervalo\n18], pode, onde M\nM 3M\n\u00e9 um par\u00e2metro fixo. Para encontrar este valor geramos um numero inteiro aleat\u00edrio no intervalo considerado.\n7.4\tComportamento da Heur\u00edstica Feasibility Pump\nDo ponto de vista geom\u00e9trico o comportamento da Heur\u00edstica Feasibility Pump gera duas trajet\u00f3rias de pontos x* e x, que se esperam ser convergentes. Uma trajet\u00f3ria satisfaz as restri\u00e7\u00e3es da relaxa\u00e7\u00e3o linear e pode ou n\u00e3o satisfazer as restric\u00e3es de in-tegralidade. A outra trajetoria satisfaz as restri\u00e7\u00e3es de integralidade, podendo ou nao satisfazer as restantes restri\u00e7\u00e3es dadas por (3.2) e/ou a restri\u00e7ao de peso, isto \u00e9, uma trajet\u00edria \u00e9 formada por uma sucessao de pontos x* G XL (que podem ser ou nao inteiros), enquanto que a outra trajetoria \u00e9 formada por uma sucess\u00e3o de pontos x inteiros (que podem ser ou nao admiss\u00edveis para o Problema WMST).\nA dist\u00e2ncia A(x*, x) pode ser interpretada como a diferen\u00e7a entre os pontos x* G XL e x que tentamos reduzir efetuando o pumping cycle.\nComo a cada ponto x* e x se faz corresponder um custo e um peso, tamb\u00e9m se pode interpretar a Heur\u00edstica Feasibility Pump como duas trajet\u00edrias de custos e duas trajet\u00edrias de pesos que se esperam convergentes para um mesmo custo e um mesmo peso,\nC(Tx*) = C(Tx) e W(Tx.) = W(Tx).\nA heur\u00edstica termina quando as duas sequ\u00e2ncias convergem ou quando o tempo ou o nu\u00e9mero de iterac\u00e7o\u00e3es imposto forem excedidos.\nNos tr\u00eas graficos que se seguem podemos observar geometricamente o comportamento da inst\u00e2ncia 80-7 do grupo de inst\u00e2ncias Quase Caminhos com valor W = 1000.\nTrajet\u00f3rias de Custos\nC(z*)\t\u2014 C(t)\nFigura 7.3: Representa\u00e7\u00e3o geom\u00e9trica das duas trajet\u00f3rias de custos (inst\u00e2ncia QC80-7).\nNa Figura 7.3 encontram-se representadas as sucessoes de pontos relativos aos custos das duas sequ\u00eancias de solucoes x* e x. Observamos que as duas trajetorias de custos convergem ap\u00e9s oito iteracoes para o mesmo custo 3759.\nTrajet\u00f3rias de Pesos\nH'(r\u2018)\t\u2014 IV(\u00cd)\nFigura 7.4: Representa\u00e7ao geometrica das duas trajet\u00f3rias de pesos (instancia QC80-7).\nNa Figura 7.4 encontram-se representadas as sucess\u00f5es de pontos relativos aos pesos das duas sequ\u00eancias de solu\u00e7\u00f5es x* e x. Observamos que as duas trajet\u00f3rias de pesos convergem apos 8 itera\u00e7\u00f5es para o mesmo peso 904.\nNote-se que na Iterac\u00f5o 1 apenas existe custo e peso para a solucao x*, pois e a primeira soluc\u00f5o obtida que corresponde \u00e0 solu\u00e7\u00f5o otima da relaxa\u00e7\u00f5o linear e ainda n\u00f5o foi efetuado o primeiro arredondamento para obter x.\nNeste grafico podemos observar ainda se as solu\u00e7oes x verificam a restricao de peso. Neste exemplo, o peso das sucessivas soluc\u00f5es x \u00e9 sempre inferior ou igual a 1000. Observe-se que em outros exemplos as solu\u00e7\u00f5es x podem n\u00f5o verificar a restri\u00e7ao de peso.\nNotemos tambem que na Itera\u00e7\u00f5o 5 observamos no grafico da Figura 7.3 que C(x*) = C(\u00f5), mas atraves da observacao do grafico da Figura 7.4 podemos verificar que as solucoes n\u00f5o sao as mesmas, dado que W(x*) = W(x).\nEntre cada um dos pontos x* e x esta associada uma dist\u00eancia A(x*,x), que se pretende minimizar, isto e, que se tenta reduzir a zero. No seguinte grafico podemos visualizar o comportamento da func\u00f5o distancia ao longo das oito itera\u00e7\u00f5es na instancia 80-7 do grupo de inst\u00eancias Quase Caminhos.\nFigura 7.5: Evolu\u00e7\u00e3o da dist\u00e2ncia A(x*,x) ao longo das itera\u00e7\u00f5es (inst\u00e2ncia QC80-7).\nNo gr\u00e1fico da Figura 7.5 observamos que a fungao distancia, iterativamente, se reduz\na zero, ao fim de oito itera\u00e7c\u00e3oes. Note-se que s\u00e9o a partir da Itera\u00e7c\u00e3ao 2 \u00e9e que se minimiza a dist\u00e2ncia. Neste exemplo, observamos a exist\u00eancia de tr\u00eas iteracoes seguidas com a mesma dist\u00e2ncia 6,00752 (Itera\u00e7\u00e3es 2, 3 e 4), o que leva a efetuarmos modifica\u00e7\u00e3es nas vari\u00e9aveis atrav\u00e9es da introdu\u00e7c\u00e3ao de um mecanismo de perturbac\u00e7\u00e3ao e, devido a este facto, existe um crescimento do valor da fun\u00e7\u00e3o dist\u00e2ncia para 9 (Iterac\u00e3o 5).\nNesta inst\u00eaancia, a solu\u00e7c\u00e3ao inteira admiss\u00e9vel obtida \u00e9e uma \u00e9arvore de suporte de custo 3759 e peso 904, que n\u00e3o corresponde \u00e0 solu\u00e7\u00e3o otima da inst\u00e2ncia considerada, mas apresenta um gap de 0,21%.\n7.5\tExperi\u00eancias e Resultados Computacionais\nNesta secc\u00e3o, comecamos por descrever e discutir algumas experi\u00eancias computacionais realizadas com as duas heur\u00edsticas propostas nas Sec\u00e7\u00e3es 7.1 e 7.2. De seguida, propomos quatro estrat\u00e9egias heur\u00e9sticas e apresentamos um exemplo comparativo entre as quatro estrat\u00e9egias heur\u00e9sticas propostas. Por fim, os resultados computacionais s\u00e3o comparados entre si, com a Heur\u00edstica do software Xpress aplicada ao nodo raiz utilizando a Formula\u00e7c\u00e3ao WMTZ e com a primeira soluc\u00e7\u00e3ao inteira admiss\u00e9vel obtida\npela Formula\u00e7\u00e3o WMTZ quando usa o procedimento de Branch and Bound.\nTodos os testes foram efetuados num Intel(R) Core(TM)2 Duo CPU (T7100) 2.00 GHz processador e 4Gb de RAM e usou-se o software Xpress 7.3 (Xpress-Optimizer 23.01.03 e Xpress-Mosel 3.4.0) [1] para implementar todas as estrat\u00e9gias heur\u00edsticas.\nEm todas as heur\u00edsticas \u00e9 obtido um limite superior para o valor docusto^que pode ou nao ser o valor \u00e9timo. O gap correspondente \u00e9 dado por gap = \u2014qpt\u2014 X 100, onde LS \u00e9 o valor do limite superior obtido para o valor do custo atrav\u00e9s da heur\u00edstica\nconsiderada e OPT \u00e9 o valor \u00e9timo (\u00fc(WMST)) ou o melhor valor encontrado at\u00e9 ao\nmomento.\n7.5.1\tDescri\u00e7\u00e3o das Experi\u00eancias Computacionais Realizadas\nDas experi\u00eancias computacionais realizadas verific\u00e1mos que as tr\u00eas primeiras estrat\u00e9gias de obtencao das solu\u00e7\u00f5es x* G XL (Subseccao 7.3.1) n\u00e3o apresentaram bons resultados nas inst\u00eancias Aleat\u00e9rias e Euclideanas, pois ocorreram muitos casos em que as Heur\u00edsticas Feasibility Pump terminaram com falhas devido ao tempo limite imposto ou ao numero maximo de iteracoes ter sido excedido. E de referir ainda que nas inst\u00eancias Quase Caminhos qualquer uma destas estrat\u00e9gias apresentou bons resultados.\nNo arredondamento das variaveis, em rela\u00e7\u00e3o ao Crit\u00e9rio Al foram efetuadas experi\u00eancias com v\u00e9rios valores de a (a = 0,5; a = 0,6; a = 0,75 e outros) e verific\u00e9mos que em todos os grupos de inst\u00e2ncias, os melhores resultados se obt\u00eam com um valor de a = 0,5, ou seja, efetuando o arredondamento para o inteiro mais pr\u00e9ximo. Com base nas experi\u00eancias efetuadas observ\u00e9mos que quanto mais pr\u00f3ximo do valor um estiver o valor de a, maior \u00e9 o tempo de execucao e o gap. Este facto pode ser devido a que com o aumento da constante a, o numero de vari\u00e9veis que se arredondam para o valor um diminui.\nApos experi\u00eancias com v\u00e9rios valores de a e de b (a g]0; 0,5[ e b g]0,5; 1[), o Crit\u00e9rio A2 apresentou bons resultados com a = 0,4 e b = 0,6 para instancias Quase Caminhos. Nos grupos de inst\u00eancias Aleatorias e Euclideanas ocorrem muitos casos em que as Heur\u00edsticas Feasibility Pump terminaram com falhas devido ao tempo limite imposto ou ao numero m\u00e9ximo de itera\u00e7oes ter sido excedido ou as solu\u00e7oes encontradas n\u00e3o serem de boa qualidade.\nEm rela\u00e7ao ao Crit\u00e9rio A3 verificamos que \u00e9 importante a escolha de uma arvore com custo proximo do custo da solu\u00e7\u00e3o \u00e9tima. Os melhores resultados obt\u00eam-se utilizando a \u00e9rvore de suporte que se designou por Tp, sendo esta arvore obtida atrav\u00e9s do Algoritmo Lagrangeano 2 da Subsec\u00e7ao 4.4.\nEm relacao \u00e0 aplica\u00e7ao dos mecanismos de perturbac\u00e3o foram testadas as seguintes estrat\u00e9gias:\n\u2022 utilizar apenas um mecanismo de perturba\u00e7\u00e3o, ou o Mecanismo P1 ou o Mecanismo P2;\n\u2022\tutilizar os dois mecanismos de perturba\u00e7ao de forma intercalada, isto \u00e9, em itera\u00e7\u00f5es \u00e9mpares utilizar o Mecanismo P1 e em itera\u00e7\u00e3es pares o Mecanismo P2;\n\u2022\tutilizar os dois mecanismos de perturbac\u00e3o de forma aleat\u00f3ria, isto \u00e9, gerar um numero aleatorio p, entre 0 e 1. Se p > 0,5, utilizar o Mecanismo P2, caso contrario, utilizar o Mecanismo P1.\nA aplica\u00e7\u00e3o de qualquer uma destas combina\u00e7\u00e3es dos mecanismos de perturba\u00e7\u00e3o leva \u00e0 obten\u00e7ao de resultados satisfat\u00f3rios, embora a utiliza\u00e7\u00e3o dos dois mecanismos P1 e P2 de forma aleat\u00f3ria seja melhor em termos de tempo de execu\u00e7\u00e3o. Para utilizarmos estes dois mecanismos temos de escolher valores para os par\u00e2metros a e 5. Das experi\u00eancias computacionais realizadas com a e 5 no intervalo [0; 0,5], os par\u00e2metros a = 0,01 e 5 = 0,4, apresentam os melhores resultados. Na Heur\u00edstica FP com a fun\u00e7ao objetivo alterada, depois de efetuadas experi\u00e2ncias com v\u00e9rios valores de ao, p e 5a (ao, 5a g]0, 1[ e p G [0,1]), decidimos utilizar a0 = p = 0,1 e 5a = 0,05, para evitar a ocorr\u00e2ncia de muitas falhas na heur\u00edstica e tentar que o tempo n\u00e3o aumente muito em rela\u00e7\u00e3o \u00e0 Heur\u00edstica FP B\u00e9sica.\nPara a obten\u00e7ao dos resultados computacionais em todas as heur\u00edsticas apresentadas, imposemos um limite de tempo TL = 10000 segundos e um numero m\u00e9ximo de itera\u00e7\u00e3es maxIter = 50. Para os restantes par\u00e2metros decidimos utilizar a = 0,01; 5 = 0,4; a0 = p = 0,1 e 5a = 0,05.\nTendo por base as experi\u00e2ncias computacionais descritas anteriormente, apresentamos de seguida quatro esquemas heur\u00edsticos cujos resultados computacionais ser\u00e3o apresentados na subsec\u00e7\u00e3o seguinte.\nHeur\u00edstica Feasibility Pump B\u00e1sica 1 (FPB1)\n\u2022\tA obtencao das soluc\u00f5es x* \u00e9 efetuada recorrendo \u00e0 relaxa\u00e7ao linear do Procedimento P-WMTZ+C com um limite de tempo igual a 100 segundos na introdu\u00e7\u00e3o dos cortes.\n\u2022\tO crit\u00e9rio de arredondamento utilizado \u00e9 o Crit\u00e9rio A1 com a = 0,5.\n\u2022 O mecanismo de perturba\u00e7\u00e3o utilizado \u00e9 o que combina os dois Mecanismos\nP1 e P2 de forma aleat\u00e1ria com os par\u00e2metros a = 0,01 e S = 0,4. S\u00e1 \u00e1 permitido\nefetuar um numero inteiro de trocas pertencente ao intervalo\nM 3M\n2' 2\ncom\nM = 20.\nHeur\u00edstica Feasibility Pump Basica 2 (FPB2)\n\u2022\tA obtencao das solu\u00e7\u00f5es x* \u00e9 efetuada recorrendo \u00e0 relaxa\u00e7\u00e3o linear da For-mula\u00e7ao WMTZ.\n\u2022\tO crit\u00e9rio de arredondamento utilizado \u00e9 o Crit\u00e9rio A3 com a = 0,9 e a utiliza\u00e7\u00e3o da \u00e9rvore de suporte T = Tp obtida atrav\u00e9s do Algoritmo Lagrangeano 2 da Subsec\u00e7\u00e3o 4.4.\n\u2022\tO mecanismo de perturba\u00e7ao utilizado \u00e9 o mesmo que na Heur\u00edstica FPB1.\nHeur\u00edstica Feasibility Pump com Altera\u00e7\u00f5o da Fun\u00e7\u00f5o Objetivo 1 (FPO1)\nAplicar a Heur\u00edstica FP com altera\u00e7\u00e3o da fun\u00e7\u00e3o objetivo proposta para o Problema WMST com os mesmos crit\u00e9rios adotados na Heur\u00edstica FPB1.\nHeur\u00edstica Feasibility Pump com Alterac\u00f5o da Fun\u00e7\u00f5o Objetivo 2 (FPO2)\nAplicar a Heur\u00edstica FP com altera\u00e7\u00e3o da fun\u00e7\u00e3o objetivo proposta para o Problema WMST com os mesmos crit\u00e9rios adotados na Heur\u00edstica FPB2.\n7.5.2\tExemplos Comparativos das Heur\u00edsticas Feasibility Pump\nDe seguida apresentamos alguns gr\u00e1ficos (Figuras 7.6, 7.7 e 7.8), onde podemos observar o comportamento da fun\u00e7\u00e3o dist\u00e2ncia ao longo das v\u00e1rias itera\u00e7\u00f5es usando as quatro estrat\u00e1gias heur\u00edsticas propostas anteriormente. O gr\u00e1fico da Figura 7.6 \u00e1 relativo a inst\u00e2ncia 80-7 do grupo de instancias Quase Caminhos (QC80-7), o da Figura 7.7 \u00e1 relativo a inst\u00e2ncia 80-5 do grupo de inst\u00e2ncias Aleat\u00e1rias (R80-5) e o gr\u00e1fico da Figura 7.8 refere-se \u00e0 inst\u00e2ncia 80-3 do grupo de inst\u00e2ncias Euclideanas (E80-3).\nFigura 7.6: Evolu\u00e7\u00e3o da dist\u00e2ncia A(x*,x) ao longo das itera\u00e7\u00f5es na inst\u00e2ncia QC80-7 nas quatro estrat\u00e9gias heur\u00edsticas propostas.\nFigura 7.7: Evolu\u00e7\u00e3o da dist\u00e2ncia A(x*,x) ao longo das iteracoes na inst\u00e2ncia R80-5 nas quatro estrat\u00e9gias heur\u00edsticas propostas.\nFigura 7.8: Evoluc\u00e3o da dist\u00e2ncia A(x* , x) ao longo das iteracoes na instancia E80-3 nas quatro estrat\u00e9gias heur\u00edsticas propostas.\nEm qualquer um dos tr\u00eas grupos de inst\u00e2ncias, Quase Caminhos, Aleat\u00e1rias e Eu-clideanas, as Heur\u00e1sticas FPO1 e FPO2 necessitam de mais itera\u00e7\u00e3es para obter uma soluc\u00e7a\u00e3o inteira admiss\u00e1vel.\nNa Tabela 7.1 podemos consultar os valores obtidos para o custo e peso para as inst\u00eancias QC80-7, R80-5 e E80-3 em cada uma das Heur\u00edsticas FP propostas e ainda o respetivo gap.\nQC80-7\tR80-5\tE80-3\n\tCusto\t3769\t34421\t271898\nFPB1\tPeso\t904\t96953\t70556\n\tGap\t0,48\t3,33\t3,59\n\tCusto\t3751\t33926\t265002\nFPB2\tPeso\t905\t98144\t70252\n\tGap\t0\t1,84\t0,96\n\tCusto\t3759\t34421\t271898\nFPO1\tPeso\t904\t96953\t70556\n\tGap\t0,21\t3,33\t3,59\n\tCusto\t3751\t33926\t265002\nFPO2\tPeso\t905\t98144\t70968\n\tGap\t0\t1,84\t0,96\nTabela 7.1: Compara\u00e7\u00e3o dos valores obtidos usando as quatro Heur\u00e9sticas FP propostas.\nComo podemos observar a negrito na Tabela 7.1, as Heur\u00edsticas FP onde se obt\u00eam as soluc\u00f5es de melhor qualidade s\u00f5o as Heur\u00edsticas FPB2 e FPO2.\nNa inst\u00eaancia QC80-7, com a aplica\u00e7c\u00f5ao das Heur\u00e9sticas FPB2 e FPO2 \u00e9e obtida a solu\u00e7c\u00f5ao \u00e9otima com custo 3751 e peso 905.\nQuanto \u00e0s inst\u00eancias R80-5 e E80-3, em nenhuma das Heur\u00edsticas FP se consegue obter a solu\u00e7c\u00f5ao o\u00e9tima. Na insta\u00eancia R80-5, a solu\u00e7ca\u00f5o mais pr\u00e9oxima da \u00e9otima \u00e9e obtida quando se aplicam as Heur\u00edsticas FPB2 e FPO2 com custo 33926 e peso 98144 e gap 1,84%. Na inst\u00eancia E80-3, o gap mais baixo (0,96%) tamb\u00e9m \u00e9 obtido atrav\u00e9s das Heur\u00e9sticas FPB2 e FPO2 com custo 265002 e peso 70968.\n7.5.3\tResultados Computacionais\nNesta sec\u00e7\u00e3o apresentamos os resultados computacionais das quatro estrat\u00e9gias Heur\u00edsticas Feasibility Pump descritas na sec\u00e7\u00e3o anterior.\nPara podermos efetuar uma compara\u00e7c\u00e3ao da qualidade da solu\u00e7c\u00e3ao obtida e do tempo de execu\u00e7\u00e3o, apresentamos tamb\u00e9m os resultados obtidos pela Heur\u00edstica do software Xpress aplicada ao nodo raiz utilizando a Formulacao WMTZ (HXNR) e da primeira soluc\u00e3o inteira admiss\u00e9vel obtida pelo solver do software Xpress atrav\u00e9s da Formula\u00e7ao WMTZ, quando usa o procedimento Branch and Bound (PSIABB).\nOs testes s\u00e3o realizados para as 215 inst\u00e2ncias geradas (ver Sec\u00e7\u00e3o 2.3).\nDe modo a facilitar a an\u00e1lise, em cada grupo de instancias, estas s\u00e3o separadas em 12 subgrupos, agrupadas por dimens\u00e3ao. Para estudar a qualidade das solu\u00e7c\u00e3oes obtidas sao apresentados os gaps m\u00e9dios (em percentagem) e os respetivos desvios padroes e para estudar a rapidez s\u00e3o apresentados os tempos m\u00e9dios de execu\u00e7\u00e3o (em segundos) e os respetivos desvios padr\u00e3oes.\nInst\u00e2ncias Quase Caminhos\nNas Heur\u00e9sticas FPB2, FPO2 e HXNR \u00e9e poss\u00e9vel encontrar solu\u00e7ca\u00e3o inteira ad-miss\u00e9vel em todas as inst\u00e2ncias Quase Caminhos (95 inst\u00e2ncias). No caso da Heur\u00e9stica HXNR, a referida solu\u00e7c\u00e3ao \u00e9e sempre encontrada no nodo raiz.\nUsando as Heur\u00edsticas FPB1 e FPO1 \u00e9 poss\u00e9vel encontrar soluc\u00e3o inteira admiss\u00e9vel em 93 das inst\u00e2ncias, o que corresponde a 97,89% dos casos. Estas heur\u00edsticas falham apenas em 2 inst\u00e2ncias (na Heur\u00e9stica FPB1 as instancias s\u00e3o de 150 nodos e na Heur\u00e9stica FPO1 uma inst\u00e2ancia \u00e9e de 60 e a outra de 300 nodos). As falhas referidas devem-se ao nu\u00e9mero m\u00e9aximo de itera\u00e7c\u00e3oes ter sido excedido.\nQuanto \u00e0 Heur\u00e9stica PSIABB, n\u00e3o foi poss\u00e9vel obter solu\u00e7\u00e3o inteira admiss\u00e9vel em 5 inst\u00e2ncias (uma de 500 nodos e 4 de 1000 nodos), dado que excedeu o tempo limite imposto (10000 segundos).\nNo gr\u00edfico da Figura 7.9 encontram-se representadas as percentagens de gaps nulos obtidas no grupo de insta\u00e2ncias Quase Caminhos para as va\u00e9rias estrat\u00e9egias heur\u00e9sticas propostas.\nFigura 7.9: Percentagem de gaps nulos nas diferentes heur\u00edsticas propostas nas inst\u00e2ncias QC.\nDas estrat\u00e9egias heur\u00e9sticas apresentadas, a que tem maior percentagem de gaps nulos \u00e9 a Heur\u00edstica FPO1 com 33,68% dos casos (32 em 95 instancias), depois temos as Heur\u00edsticas FPB2 e FPO2 com 32,63% dos casos (31 em 95 inst\u00e2ncias), a seguir com 20% dos casos (19 em 95 inst\u00e2ncias) temos a Heur\u00edstica FPB1, depois temos a Heur\u00edstica PSIABB onde \u00e9 poss\u00edvel encontrar 11,58% de gaps nulos (11 em 95 instancias) e por fim, atrav\u00e9s da Heur\u00edstica HXNR temos 2,11% dos casos (2 em 95 insta\u00e2ncias). Portanto, qualquer uma das estrat\u00e9egias Heur\u00e9sticas FP propostas apresenta maior percentagem de gaps nulos quando comparada com as Heur\u00e9sticas HXNR e PSIABB.\nNa Tabela 7.2 podemos observar os gaps m\u00e9dios, em percentagem, obtidos pelas Heur\u00edsticas HXNR, PSIABB, FPB1, FPB2, FPO1 e FPO2 e na Tabela 7.3 encontram-se os correspondentes desvios padroes.\nN\u00bb Nodos\tHXNR\tPSIABB\tFPB1\tFPB2\tFPO1\tFPO2\n10\t46,949\t15,080\t15,311\t7,138\t11,723\t7,138\n20\t23,121\t3,591\t1,293\t0,574\t1,293\t0,574\n40\t23,925\t3,479\t1,687\t0,579\t0,675\t0,579\n60\t12,949\t2,683\t0,135\t0,022\t0,150\t0,022\n80\t9,798\t1,491\t0,207\t0,058\t0,134\t0,058\n100\t7,147\t1,048\t0,117\t0,665\t0,077\t0,665\n150\t8,684\t1,574\t1,151\t0,773\t0,518\t0,773\n200\t3,777\t0,457\t0,564\t1,180\t0,076\t1,180\n300\t3,050\t0,185\t0,607\t1,204\t0\t1,204\n400\t8,974\t0,427\t0,663\t0,895\t0,143\t0,895\n500\t3,894\t0,343\t0,845\t1,063\t0,264\t1,063\n1000\t1,414\t0,004a\t0,459\t1,414\t0,030\t1,414\nTabela 7.2: Gaps m\u00e9dios, em percentagem, obtidos pelas heur\u00edsticas propostas nas inst\u00e2ncias QC.\nNA Nodos\tHXNR\tPSIABB\tFPB1\tFPB2\tFPO1\tFPO2\n10\t41,805\t30,180\t11,157\t8,075\t7,344\t8,075\n20\t13,448\t4,228\t1,539\t0,610\t1,539\t0,610\n40\t5,751\t3,036\t2,150\t0,614\t0,696\t0,614\n60\t2,721\t3,228\t0,247\t0,029\t0,257\t0,029\n80\t1,740\t1,344\t0,220\t0,051\t0,123\t0,051\n100\t0,602\t1,209\t0,252\t1,398\t0,159\t1,398\n150\t2,767\t1,200\t1,361\t1,271\t0,953\t1,271\n200\t0,833\t0,386\t0,570\t1,425\t0,151\t1,425\n300\t0,923\t0,341\t0,350\t0,884\t0\t0,884\n400\t10,702\t0,686\t0,699\t0,727\t0,199\t0,727\n500\t1,049\t0,642\t0,612\t1,325\t0,354\t1,325\n1000\t0,430\t_a\t0,208\t0,430\t0,068\t0,430\nTabela 7.3: Desvios Padr\u00f5es dos gap obtidos pelas heur\u00edsticas propostas nas instancias QC.\naGap apenas da inst\u00e2ncia QC1000-5, pelo que, n\u00e3o foi poss\u00edvel calcular desvio padr\u00e3o.\nA fim de comparar a qualidade das solu\u00e7\u00f5es obtidas entre as Heur\u00edsticas FP propostas e a Heur\u00edstica HXNR no grupo de inst\u00e2ncias Quase Caminhos, apresentamos o seguinte grafico.\nFigura 7.10: Compara\u00e7\u00e3o dos gaps m\u00e9dios, em percentagem, entre as Heur\u00edsticas FP propostas e a Heur\u00edstica HXNR nas inst\u00e2ncias QC.\nComo as Heur\u00edsticas FPB2 e FPO2 apresentam os mesmos gaps m\u00e9dios, no gr\u00e1fico acima apenas se apresentam os gaps m\u00e9dios correspondentes \u00e0 Heur\u00edstica FPB2. Atrav\u00e9s do gr\u00e1fico da Figura 7.10 e das Tabelas 7.2 e 7.3 podemos observar que qualquer das Heur\u00edsticas FP apresenta solu\u00e7\u00f5es de melhor qualidade quando comparada com a Heur\u00edstica HXNR. E poss\u00edvel vizualizar ainda, a formac\u00f5o de dois grupos: um formado pelas inst\u00e2ncias com menos de 100 nodos, onde as Heur\u00edsticas FPB2 e FPO1 encontram as solu\u00e7co\u00f5es de melhor qualidade e o outro formado pelas inst\u00e2ancias de 100 ou mais nodos, onde a Heur\u00edstica FPO1 apresenta solucoes de melhor qualidade. Estes dois grupos podem ser denominados por grupo de inst\u00e2ancias pequenas e por grupo de inst\u00e2ancias grandes. Assim, \u00e0 medida que aumenta a dimens\u00f5o do problema, a Heur\u00edstica FPO1 \u00ed a estrat\u00edegia que apresenta solu\u00e7c\u00f5oes de melhor qualidade nas inst\u00e2ancias Quase Caminhos.\nNa Tabela 7.4 podemos observar os tempos m\u00e9dios de execu\u00e7\u00f5o (em segundos) das v\u00edrias heur\u00edsticas propostas e na Tabela 7.5 encontram-se os respetivos desvios padroes.\nN\u00bb Nodos\tHXNR\tPSIABB\tFPB1\tFPB2\tFPO1\tFPO2\n10\t0,010\t0,090\t0,028\t0,011\t0,066\t0,019\n20\t0,018\t0,603\t0,138\t0,031\t0,329\t0,084\n40\t0,062\t3,623\t0,506\t0,117\t1,495\t0,291\n60\t0,145\t4,413\t1,165\t0,290\t6,114\t0,722\n80\t0,300\t13,504\t3,070\t0,554\t8,251\t1,505\n100\t0,629\t27,912\t5,936\t0,970\t14,475\t2,511\n150\t2,070\t68,741\t68,904\t3,008\t45,251\t7,520\n200\t10,331\t121,789\t53,847\t7,894\t104,922\t18,130\n300\t11,420\t388,644\t297,539\t40,857\t641,356\t69,166\n400\t50,293\t1340,455\t483,319\t90,462\t840,883\t173,079\n500\t51,274\t4594,168\t823,763\t268,782\t1656,248\t371,326\n1000\t498,721\t9434,064\t1707,616\t1014,109\t6244,978\t1712,898\nTabela 7.4: Tempos medios, em segundos, obtidos pelas heur\u00edsticas propostas nas inst\u00e2ncias QC.\nN\u00bb Nodos\tHXNR\tPSIBB\tFPB1\tFPB2\tFPO1\tFPO2\n10\t0,002\t0,017\t0,011\t0,011\t0,004\t0,001\n20\t0,002\t0,188\t0,029\t0\t0,013\t0,003\n40\t0,015\t0,990\t0,087\t0,020\t0,098\t0,014\n60\t0,003\t0,739\t0,456\t0,015\t7,285\t0,015\n80\t0,007\t6,638\t1,309\t0,023\t0,228\t0,076\n100\t0,201\t11,936\t3,779\t0,057\t0,415\t0,063\n150\t1,051\t58,716\t108,248\t0,151\t2,030\t0,702\n200\t12,701\t61,637\t12,845\t1,415\t9,759\t0,802\n300\t0,134\t135,503\t245,209\t7,360\t623,046\t2,122\n400\t53,274\t554,393\t536,410\t4,307\t25,410\t5,140\n500\t0,529\t3561,055\t401,203\t75,996\t45,706\t11,036\n1000\t29,572\t1952,226\t533,252\t88,882\t782,108\t369,810\nTabela 7.5: Desvios padr\u00e3es dos tempos obtidos pelas heur\u00edsticas propostas nas inst\u00e2ncias QC.\nEm termos de tempo de execu\u00e7\u00f5o, das quatro Heur\u00edsticas FP apresentadas a Heur\u00edstica FPB2 e a mais r\u00edpida, depois temos a Heur\u00edstica FPO2, a seguir a Heur\u00edstica FPB1 e a mais lenta \u00e9 a que apresenta solu\u00e7\u00f5es de melhor qualidade para inst\u00e2ncias de\n100 a 500 nodos. Nas inst\u00e2ncias de 400 e 500 nodos, o tempo de execuc\u00e3o da Heur\u00edstica FPO1 \u00e9 superior a quatro vezes o tempo de execuc\u00e3o das Heur\u00edsticas FPB2 e FPO2 e superior ao dobro do tempo de execu\u00e7\u00e3o da Heur\u00edstica FPB1.\nNeste grupo de instancias, a Heur\u00edstica HXNR \u00e9 a mais r\u00e9pida, embora apresente solu\u00e7c\u00e3oes de pior qualidade.\nAtendendo a que a Heur\u00e9stica FPB2 \u00e9e a mais ra\u00e9pida das quatro estrat\u00e9egias Heur\u00e9sticas FP propostas, vamos compara-la com a Heur\u00edstica HXNR (Figura 7.11) e com a Heur\u00e9stica PSIABB (Figura 7.12).\nDiferen\u00e7a de Gap entre HXNR e FPB2\nFigura 7.11: Diferen\u00e7as m\u00e9dias de gaps, em percentagem, entre as Heur\u00edsticas HXNR e FPB2 nas inst\u00e2ncias QC.\nDo gr\u00e9fico da Figura 7.11 podemos observar que a diferen\u00e7a m\u00e9dia de gap existente entre as Heur\u00e9sticas HXNR e FPB2 \u00e9e bastante significativa, o que leva a inferir que, apesar da Heur\u00e9stica FPB2 gastar mais tempo de execu\u00e7c\u00e3ao, consegue obter solu\u00e7c\u00e3oes de melhor qualidade quando comparada com a Heur\u00edstica HXNR. E de notar que apenas numa inst\u00e2ncia (QC10-8) a Heur\u00edstica HXNR encontra uma solu\u00e7\u00e3o de melhor\nqualidade comparativamente \u00e0 Heur\u00edstica FPB2.\nFigura 7.12: Compara\u00e7\u00e3o dos gaps m\u00e9dios, em percentagem, entre as Heur\u00edsticas FPB2 e a PSIABB nas instancias QC.\nDado que os resultados das Tabelas 7.4 e 7.5 provam que a Heur\u00edstica FPB2 \u00ed mais r\u00e1pida do que a Heur\u00edstica PSIABB e atendendo tamb\u00e9m a que, em termos de gap, se pode observar (Figura 7.12 e Tabelas 7.2 e 7.3) que, em instancias de 200 ou mais nodos, a qualidade das solu\u00e7\u00f5es da Heur\u00edstica FPB2 diminui, faz todo o sentido usar esta heur\u00edstica num esquema enumerativo para melhorar a solu\u00e7\u00e3o inteira admiss\u00edvel obtida. A Heur\u00edstica FPB2 apresenta melhores solu\u00e7\u00e3es do que a Heur\u00edstica PSIABB em 68,42% dos casos (65 em 95 inst\u00e2ncias) e tamb\u00edm apresenta uma maior percentagem de gaps nulos (32,63%>2,11%).\nE de notar que em relac\u00e3o \u00e0s inst\u00e2ncias de 1000 nodos, o gap m\u00eddio da Heur\u00edstica PSIABB \u00ed o mais baixo, mas esse valor s\u00ed corresponde \u00e0 solu\u00e7ao da inst\u00e2ncia QC1000-5, pois para as restantes inst\u00e2ncias de 1000 nodos e algumas inst\u00e2ncias de 500 nodos nao foi poss\u00edvel obter solu\u00e7\u00e3o admiss\u00edvel no tempo imposto (10000 segundos).\nInst\u00e2ncias Aleat\u00f3rias\nNas Heur\u00edsticas FPB2 e FPO2 \u00ed poss\u00edvel encontrar solu\u00e7\u00e3o inteira admiss\u00edvel em\ntodas as inst\u00e2ncias Aleat\u00e1rias (60 inst\u00e2ncias). No caso da Heur\u00e1stica HXNR, em 2 insta\u00eancias de 1000 nodos n\u00e3ao \u00e1e poss\u00e1vel, no tempo estabelecido, encontrar soluc\u00e7\u00e3ao inteira admiss\u00e1vel e em 56 inst\u00e2ncias (93,33%) a referida solu\u00e7ao inteira admiss\u00e1vel \u00e1 encontrada no nodo raiz. Apenas em 2 inst\u00e2ncias de 500 nodos \u00e1 obtida a solu\u00e7\u00e3o num nodo diferente do nodo raiz. Na Heur\u00e1stica FPO1 \u00e1 poss\u00e1vel encontrar soluc\u00e3o inteira admiss\u00e1vel em 52 das inst\u00e2ncias Aleat\u00e1rias em teste, o que corresponde a 86,67% dos casos. Por exemplo, em todas as inst\u00e2ncias de 1000 nodos ocorre falha e esta deve-se ao tempo limite ter excedido. Na Heur\u00e1stica FPB1 ocorrem 7 falhas, sendo assim, nesta heur\u00e1stica \u00e1 poss\u00e1vel encontrar solu\u00e7\u00e3o inteira admiss\u00e1vel em 88,33% dos casos (53 em 60 insta\u00e2ncias).\nQuanto \u00e0 Heur\u00e1stica PSIABB n\u00e3o foi poss\u00e1vel obter solu\u00e7\u00e3o inteira admiss\u00e1vel em 5 inst\u00e2ncias, sendo todas elas de 1000 nodos. O motivo da n\u00e3o obtenc\u00e3o de solu\u00e7\u00e3o inteira admiss\u00e1vel \u00e1 devido ao limite de tempo imposto exceder os 10000 segundos.\nNo gr\u00e1fico da Figura 7.13 encontram-se representadas as percentagens de gaps nulos obtidas no grupo de instancias Aleat\u00e1rias para as varias estrat\u00e1gias heur\u00edsticas propostas.\nFigura 7.13: Percentagem de gaps nulos nas diferentes heur\u00edsticas propostas nas inst\u00e2ncias R.\nDas quatro Heur\u00edsticas FP estudadas, a que apresenta a maior percentagem de gaps nulos \u00e9 a Heur\u00edstica PSIABB, com 13,33% (8 em 60 inst\u00e2ncias). Com a aplica\u00e7\u00e3o das Heur\u00edsticas FPB2 e FPO2 encontram-se 6,67% de gaps nulos (4 em 60 instancias). Atrav\u00e9s das Heur\u00edsticas FPB1 e FPO1 n\u00e3o foi poss\u00edvel obter gaps nulos em nenhuma inst\u00e2ncia do grupo de inst\u00e2ncias Aleatorias. Com a Heur\u00edstica HXNR apenas se encontram 1,67% de gaps nulos (1 em 60 inst\u00e2ncias).\nNa Tabela 7.6 podemos observar os gaps m\u00e1dios, em percentagem, obtidos pelas Heur\u00edsticas HXNR, PSIABB, FPB1, FPB2, FPO1 e FPO2 e na Tabela 7.7 encontram-se os correspondentes desvios padroes.\nN\u00bb Nodos\tHXNR\tPSIABB\tFPB1\tFPB2\tFPO1\tF\tPO2\n10\t86,769\t4,723\t10,798\t3,840\t10,798\t3\t840\n20\t51,009\t9,647\t15,113\t5,285\t15,113\t5\t285\n40\t324,918\t35,041\t12,448\t2,743\t12,448\t2\t743\n60\t537,160\t7,289\t10,238\t1,312\t10,238\t1\t312\n80\t522,234\t8,817\t1,802\t1,505\t1,802\t1\t505\n100\t639,715\t44,725\t10,514\t0,547\t5,119\t0\t547\n150\t1486,381\t16,399\t8,337\t0,787\t2,055\t0\t787\n200\t290,743\t19,828\t2,307\t0,533\t0,731\t0\t533\n300\t1061,546\t14,129\t10,043\t0,239\t6,512\t0\t239\n400\t759,847\t12,353\t5,747\t0,145\t2,751\t0\t145\n500\t261,209\t26,000\t15,072\t0,220\t14,056\t0\t220\n1000\t7235,841\t_b\t_b\t0,071\t_b\t0\t071\nTabela 7.6: Gaps m\u00e9dios, em percentagem, obtidos pelas heur\u00e9sticas propostas nas instancias R.\nNA Nodos\tHXNR\tPSIABB\tFPB1\tFPB2\tFPO1\tFPO2\t\n10\t83,293\t9,340\t7,596\t3,430\t7,596\t3\t430\n20\t90,885\t12,317\t5,720\t5,006\t5,720\t5\t006\n40\t504,830\t44,644\t9,647\t1,676\t9,647\t1\t676\n60\t751,221\t10,084\t11,366\t1,074\t11,366\t1\t074\n80\t938,157\t11,919\t1,560\t1,320\t1,560\t1\t320\n100\t1043,844\t34,460\t16,675\t0,264\t5,262\t0\t264\n150\t2766,229\t10,241\t14,132\t0,684\t1,782\t0\t684\n200\t286,631\t26,807\t3,576\t0,379\t0,809\t0\t379\n300\t770,713\t7,302\t7,541\t0,621\t0,499\t0\t,621\n400\t497,208\t4,803\t4,986\t0,098\t2,017\t0\t098\n500\t371,192\t52,175\t10,800\t0,136\t15,155\t0\t136\n1000\t11549,122\t_b\t_b\t0,081\t_b\t0\t081\nTabela 7.7: Desvios Padroes dos gaps obtidos pelas heur\u00e9sticas propostas nas instancias R.\nbN\u00e3o foi poss\u00e9vel calcular o gap medio nem o desvio padr\u00e3o dado que ocorreu falha para todas as instancias de 1000 nodos.\nO gr\u00e1fico da Figura 7.14 apresenta os gaps m\u00e9dios (em percentagem) obtidos pelas Heur\u00edsticas FP propostas.\nFigura 7.14: Compara\u00e7\u00e3o dos gaps m\u00e9dios, em percentagem, entre as Heur\u00edsticas FP propostas nas inst\u00e2ncias R.\nNotamos que no gr\u00e1fico acima nao foram apresentados os gaps m\u00e9dios obtidos atrav\u00e9s da Heur\u00edstica FPO2 dado que s\u00e3o iguais aos apresentados pela Heur\u00edstica FPB2. Atrav\u00e9s do gr\u00e1fico da Figura 7.14 e das Tabelas 7.6 e 7.7 podemos concluir que as solu\u00e7\u00e3es de melhor qualidade s\u00e3o obtidas utilizando as Heur\u00edsticas FPB2 e FPO2. Note-se ainda que para as inst\u00e2ncias de 1000 nodos apenas foi apresentada no gr\u00e1fico a barra correspondente \u00e0 Heur\u00edstica FPB2, pois devido \u00e0 ocorr\u00e2ncia de falha (exceder o tempo imposto) n\u00e3ao foi poss\u00e9vel obter um valor para o gap m\u00e9edio das Heur\u00e9sticas FPB1 e FPO1.\nOs tempos m\u00e9dios de execuc\u00e3o (em segundos), das v\u00e9rias heur\u00e9sticas propostas encontram-se registados na Tabela 7.8 e os respetivos desvios padroes na Tabela 7.9.\nN\u00bb Nodos\tHXNR\tPSIABB\tFPB1\tFPB2\tFPO1\tFPO2\n10\t0,025\t0,265\t0,118\t0,009\t0,228\t0,025\n20\t0,075\t0,484\t0,184\t0,031\t0,390\t0,059\n40\t0,177\t3,054\t0,515\t0,115\t1,872\t0,249\n60\t0,556\t3,888\t1,370\t0,274\t4,493\t0,624\n80\t1,389\t8,867\t1,735\t0,543\t9,246\t1,186\n100\t2,868\t19,438\t6,253\t1,211\t19,741\t2,649\n150\t10,592\t59,744\t41,051\t4,979\t132,372\t10,034\n200\t18,483\t127,362\t87,119\t12,521\t194,213\t23,432\n300\t62,829\t310,566\t809,338\t39,647\t1108,573\t72,916\n400\t151,223\t1181,846\t633,165\t92,527\t1450,826\t155,788\n500\t1313,775\t1952,868\t2965,244\t311,440\t3913,382\t532,116\n1000\t5427,520\t10042,940\t10618,800\t1724,168\t11771,360\t1463,854\nTabela 7.8: Tempos m\u00e1dios, em segundos, obtidos pelas heur\u00e1sticas propostas nas inst\u00e2ncias R.\nNA Nodos\tHXNR\tPSIABB\tFPB1\tFPB2\tFPO1\tFPO2\n10\t0,021\t0,091\t0,187\t0,009\t0,214\t0,008\n20\t0,089\t0,094\t0,169\t0,001\t0,076\t0,007\n40\t0,181\t0,818\t0,178\t0,008\t0,191\t0,011\n60\t0,233\t1,328\t0,982\t0,014\t0,167\t0,025\n80\t1,042\t3,352\t0,954\t0,045\t0,340\t0,047\n100\t1,152\t11,567\t2,284\t0,352\t2,305\t0,904\n150\t4,695\t30,560\t20,621\t1,175\t119,473\t2,670\n200\t5,497\t92,635\t51,493\t2,555\t55,060\t6,311\n300\t19,978\t166,714\t1012,314\t15,762\t939,541\t32,523\n400\t51,623\t459,940\t192,898\t45,278\t454,522\t98,084\n500\t1482,344\t1810,176\t1083,116\t31,912\t1581,267\t30,537\n1000\t4214,302\t20,804\t525,087\t264,514\t1056,622\t159,162\nTabela 7.9: Desvios padr\u00e3es dos tempos obtidos pelas heur\u00edsticas propostas nas instancias R.\nEm termos de tempo m\u00e9dio de execu\u00e7\u00e3o podemos afirmar que das quatro Heur\u00e9sticas FP apresentadas, a Heur\u00e9stica FPB2 \u00e9 a mais r\u00e9pida, depois temos a Heur\u00e9stica FPO2, a seguir a Heur\u00e9stica FPB1 e a mais lenta \u00e9 a Heur\u00e9stica FPO1.\nAo compararmos os tempos de execuc\u00e3o da Heur\u00edstica FPB2 com os tempos de execu\u00e7\u00e3o da Heur\u00edstica HXNR (Tabelas 7.8 e 7.9) observamos que a Heur\u00edstica FPB2 apresenta tempos de execuc\u00e3o inferiores.\nNas insta\u00e2ncias Aleat\u00e9orias a Heur\u00e9stica FP que \u00e9e mais r\u00e9apida e obt\u00e9em solu\u00e7c\u00e3oes de melhor qualidade \u00e9, sem duvida, a Heur\u00edstica FPB2.\nAo compararmos a Heur\u00e9stica FPB2 com a Heur\u00e9stica PSIABB, verificamos que esta apresenta solu\u00e7co\u00e3es de melhor qualidade em menor tempo, o que leva a concluir que a Heur\u00e9stica FPB2 pode ser usada num esquema enumerativo de modo a melhorar a solu\u00e7ca\u00e3o obtida.\nInst\u00e2ncias Euclideanas\nNa Heur\u00edstica HXNR \u00e9 poss\u00edvel encontrar soluc\u00e3o inteira admiss\u00edvel no nodo raiz em 60% dos casos (36 em 60 inst\u00e2ncias), nos restantes casos, em 3 inst\u00e2ncias de 1000 nodos n\u00e3ao \u00e9e poss\u00e9vel, no tempo estabelecido, encontrar solu\u00e7c\u00e3ao inteira admiss\u00e9vel e em 21 inst\u00e2ancias obt\u00e9em-se uma solu\u00e7c\u00e3ao inteira admiss\u00e9vel num outro nodo diferente do nodo raiz.\nNas Heur\u00e9sticas FPB2 e FPO2 \u00e9e poss\u00e9vel encontrar soluc\u00e7\u00e3ao inteira admiss\u00e9vel em todas as 60 inst\u00e2ncias Euclideanas, mas nas Heur\u00edsticas, FPB1 e FPO1, isso n\u00e3o \u00e9 poss\u00e9vel em algumas inst\u00e2ancias, sendo de real\u00e7car que em nenhuma delas se encontram solu\u00e7co\u00e3es inteiras admiss\u00e9veis para as insta\u00e2ncias de 500 e 1000 nodos, devido a exceder o tempo limite imposto. A Heur\u00e9stica FPB1 apresenta 80% de solu\u00e7c\u00e3oes inteiras admiss\u00e9veis (48 em 60 inst\u00e2ancias) e a Heur\u00e9stica FPO1 75% (45 em 60 inst\u00e2ancias).\nQuanto \u00e0 Heur\u00edstica PSIABB foi poss\u00edvel obter solu\u00e7\u00e3o inteira admiss\u00edvel em 55 das 60 inst\u00e2ncias, isto \u00e9, em 91,67% dos casos. Ocorrem falhas em todas as inst\u00e2ncias de 1000 nodos devido ao limite de tempo imposto execeder os 10000 segundos.\nNo gr\u00e1fico da Figura 7.15 encontram-se representadas as percentagens de gaps nulos obtidas no grupo de instancias Euclideanas para as varias estrat\u00e1gias heur\u00edsticas propostas.\nFigura 7.15: Percentagem de gaps nulos nas diferentes heur\u00e9sticas propostas nas inst\u00e2ncias E.\nAtrav\u00f3s do gr\u00f3fico da Figura 7.15 podemos observar que das varias heur\u00edsticas propostas, as que apresentam a maior percentagem de gaps nulos s\u00e3ao as Heur\u00f3sticas FPB2 e FPO2, com 28,33% dos casos (17 em 60 inst\u00e2ncias), depois temos as Heur\u00edsticas PSIABB, FPB1 e FPO1 com 3,33% dos casos (2 em 60 inst\u00e2ncias) e por fim, temos a Heur\u00edstica HXNR, onde apenas se encontra 1,67% de gaps nulos (1 em 60 inst\u00e2ncias).\nNas Tabelas 7.10 e 7.11 encontram-se os gaps m\u00eddios, em percentagem, e os respetivos desvios padr\u00f5es das Heur\u00edsticas HXNR, PSIABB, FPB1, FPB2, FPO1 e FPO2.\nN\u00bb Nodos\tHXNR\tPSIABB\tFPB1\tFPB2\tFPO1\tF\tPO2\n10\t8,403\t7,812\t5,805\t5,274\t5,805\t5\t274\n20\t10,604\t17,306\t4,095\t2,250\t4,095\t2\t250\n40\t35,935\t24,242\t3,629\t1,959\t3,629\t1\t959\n60\t34,519\t38,492\t2,612\t0,747\t2,612\t0\t747\n80\t24,208\t24,109\t1,382\t0,576\t1,382\t0\t576\n100\t61,786\t23,687\t0,964\t0,563\t0,964\t0\t563\n150\t233,198\t30,507\t25,211\t0,284\t2,897\t0\t284\n200\t305,504\t34,327\t41,024\t0,402\t5,910\t0\t402\n300\t704,702\t19,144\t62,551\t0,219\t39,983\t0\t219\n400\t525,941\t16,987\t98,556\t0\t133,266\t\t0\n500\t573,380\t25,729\t_c\t0\t_c\t\t0\n1000\t1960,172\t_c\t_c\t0\t_c\t\t0\nTabela 7.10: Gaps medios, em percentagem, obtidos pelas heur\u00edsticas propostas nas instancias E.\nNA Nodos\tHXNR\tPSIABB\tFPB1\tFPB2\tFPO1\tFPO2\t\n10\t8,221\t9,465\t3,329\t3,493\t3,329\t3\t493\n20\t14,241\t19,424\t4,028\t2,685\t4,028\t2\t685\n40\t45,006\t14,753\t2,539\t0,390\t2,539\t0\t390\n60\t15,882\t13,610\t2,256\t0,708\t2,256\t0\t708\n80\t12,182\t12,210\t1,394\t0,428\t1,394\t0\t428\n100\t86,493\t11,118\t1,062\t0,662\t1,062\t0\t662\n150\t279,136\t16,628\t17,206\t0,194\t2,266\t0\t194\n200\t315,907\t27,172\t18,747\t0,195\t1,867\t0\t195\n300\t483,672\t4,060\t22,101\t0,163\t25,940\t0\t163\n400\t466,805\t5,088\t11,418\t0\t12,070\t\t0\n500\t745,813\t16,562\t_c\t0\t_c\t\t0\n1000\t14,540\t_c\t_c\t0\t_c\t\t0\nTabela 7.11: Desvios Padroes dos gaps obtidos pelas heur\u00edsticas propostas nas inst\u00e2ncias E.\ncN\u00e3o foi poss\u00edvel calcular o gap m\u00e9dio nem o desvio padr\u00e8o dado que ocorreu falha para todas as inst\u00e2ncias.\nO gr\u00e1fico da Figura 7.16 apresenta os gaps m\u00e9dios (em percentagem) obtidos pelas Heur\u00edsticas FP propostas.\nFigura 7.16: Compara\u00e7\u00e3o dos gaps m\u00e9dios, em percentagem, entre as Heur\u00edsticas FP propostas nas inst\u00e2ncias E.\nAtrav\u00e9s do gr\u00e1fico da Figura 7.16 e das Tabelas 7.10 e 7.11 podemos verificar que as solu\u00e7\u00f5es de melhor qualidade s\u00e3o obtidas utilizando as Heur\u00edsticas FPB2 e FPO2. Observamos tamb\u00e9m que como os gaps medios obtidos atrav\u00e9s das Heur\u00edsticas FPB2 e FPO2 sao iguais, apenas apresentamos no gr\u00e1fico acima uma destas heur\u00edsticas.\nQualquer uma das Heur\u00edsticas FP propostas apresenta gaps de melhor qualidade quando comparada com a Heur\u00edstica HXNR. As soluc\u00e3es obtidas atrav\u00e9s da Heur\u00edstica HXNR apresentam gaps extremamente elevados.\nOs tempos m\u00e9dios de execu\u00e7ao (em segundos) das varias heur\u00edsticas propostas encontram-se registados na Tabela 7.12 e os desvios padroes na Tabela 7.13.\nN\u00bb Nodos\tHXNR\tPSIABB\tFPB1\tFPB2\tFPO1\tFPO2\n10\t0,081\t0,889\t0,037\t0,013\t0,078\t0,016\n20\t1,086\t3,014\t0,119\t0,031\t0,452\t0,072\n40\t5,213\t9,083\t0,880\t0,115\t2,746\t0,281\n60\t10,611\t12,982\t3,320\t0,287\t7,604\t0,664\n80\t152,247\t156,859\t12,439\t0,540\t21,497\t1,283\n100\t74,225\t104,205\t42,819\t1,102\t59,754\t2,695\n150\t11,260\t110,573\t240,824\t2,299\t246,808\t5,370\n200\t77,320\t252,359\t444,323\t4,945\t507,809\t11,707\n300\t151,588\t1064,143\t1480,574\t18,866\t1991,436\t33,212\n400\t384,974\t3403,522\t6608,878\t39,502\t6556,432\t77,788\n500\t1237,238\t6089,540\t10701,340\t98,892\t10422,740\t150,658\n1000\t6556,780\t10049,880\t11551,760\t1171,194\t11315,420\t1249,820\nTabela 7.12: Tempos m\u00e1dios, em segundos, obtidos pelas heur\u00edsticas propostas nas inst\u00e2ncias E.\nN\u00bb Nodos\tHXNR\tPSIABB\tFPB1\tFPB2\tFPO1\tFPO2\n10\t0,069\t0,213\t0,018\t0,007\t0,011\t0\n20\t0,844\t0,898\t0,067\t0,011\t0,065\t0,008\n40\t3,805\t5,176\t0,501\t0,008\t0,572\t0,011\n60\t8,182\t6,948\t1,347\t0,009\t1,503\t0,028\n80\t169,931\t167,887\t4,064\t0,050\t3,427\t0,049\n100\t128,850\t123,519\t14,519\t0,265\t14,035\t0,735\n150\t3,916\t33,553\t129,518\t0,109\t130,900\t0,474\n200\t118,815\t87,049\t71,833\t0,406\t149,765\t0,646\n300\t239,359\t420,261\t334,313\t3,469\t884,028\t1,793\n400\t512,596\t1663,865\t2307,711\t1,545\t3520,799\t8,077\n500\t1839,296\t2653,828\t293,686\t20,967\t326,293\t7,509\n1000\t4868,197\t48,077\t674,723\t136,915\t991,950\t145,128\nTabela 7.13: Desvios padr\u00f5es dos tempos obtidos pelas heur\u00edsticas propostas nas inst\u00e2ncias E.\nEm termos de tempo m\u00e9edio de execu\u00e7c\u00e3ao podemos afirmar que das quatro Heur\u00e9sticas FP apresentadas, a FPB2 \u00e9e a mais r\u00e9apida, depois temos a Heur\u00e9stica FPO2 e as Heur\u00e9sticas FPB1 e FPO1 s\u00e3ao as mais lentas.\nAo compararmos os tempos de execuc\u00e7\u00e3ao das Heur\u00e9stica FPB2 e HXNR (Tabelas 7.12 e 7.13) observamos que estes sa\u00e3o inferiores na Heur\u00e9stica FPB2. E\u00e9 de notar que o tempo de execuc\u00e7\u00e3ao da Heur\u00e9stica HXNR \u00e9e superior ao dobro do tempo de execu\u00e7c\u00e3ao da Heur\u00e9stica FPB2.\nNo grupo de inst\u00e2ancias Euclideanas as Heur\u00e9sticas FP que apresentam solu\u00e7co\u00e3es de melhor qualidade sa\u00e3o sem du\u00e9vida as Heur\u00e9sticas FPB2 e FPO2, sendo a Heur\u00e9stica FPB2 a que apresenta menores tempos de execuc\u00e7a\u00e3o.\nCompararando a Heur\u00e9stica FPB2 com a Heur\u00e9stica PSIABB, esta apresenta solu\u00e7c\u00e3oes de melhor qualidade em menor tempo (a Heur\u00e9stica PSIABB apresenta tempos superiores a mais de 8 vezes o tempo de execu\u00e7c\u00e3ao da Heur\u00e9stica FPB2), o que leva a concluir que a Heur\u00e9stica FPB2 pode ser usada num esquema enumerativo de modo a melhorar a soluc\u00e7a\u00e3o obtida.\n7.5.4\tS\u00edntese dos Resultados Computacionais\nEm todos os grupos de insta\u00e2ncias verific\u00e9amos que a Heur\u00e9stica FPB2 encontra soluc\u00e7\u00e3oes admiss\u00e9veis de boa qualidade quando comparada com as restantes Heur\u00e9sticas Feasibility Pump propostas. Esta tamb\u00e9em apresenta uma boa qualidade quando comparada com a Heur\u00e9stica HXNR e com a Heur\u00e9stica PSIABB. Em termos de tempo computacional, nas insta\u00e2ncias Aleat\u00e9orias e Euclideanas a Heur\u00e9stica FPB2 \u00e9e relativamente ra\u00e9pida quando comparada com qualquer heur\u00e9stica testada. No caso das inst\u00e2ancias Quase Caminhos, a mais r\u00e9apida \u00e9e a Heur\u00e9stica HXNR, mas em termos de qualidade das solu\u00e7c\u00e3oes encontradas, esta n\u00e3ao apresenta bons resultados quando comparada com qualquer uma das Heur\u00e9sticas FP.\n280\nCap\u00edtulo 8\nM\u00e9todo Local Branching\nNo caso do Problema WMST, o M\u00e9todo Local Branching \u00e9 um esquema enumerativo que constr\u00edi uma sequ\u00eancia de solu\u00e7\u00e3es inteiras admiss\u00edveis com valor decrescente de custos. O custo da ultima solu\u00e7ao inteira admiss\u00edvel da sequ\u00e2ncia corresponde ao valor \u00edtimo ou a um limite superior para o valor \u00edtimo.\nO m\u00e9todo come\u00e7a com uma solu\u00e7\u00e3o inicial inteira admiss\u00edvel, depois \u00e9 definida uma vizinhan\u00e7ca dessa soluc\u00e7\u00e3ao atrav\u00edes da introdu\u00e7c\u00e3ao no modelo de uma inequac\u00e7\u00e3ao linear chamada de restric\u00e3o local branching. A explora\u00e7ao da vizinhan\u00e7a \u00e9 feita atrav\u00e9s da utiliza\u00e7\u00e3o do solver de um software de Otimizac\u00e3o, como por exemplo, o Mosel do software Xpress. Caso a nova solu\u00e7ao obtida tenha menor custo, ent\u00e3o \u00e9 atualizada a soluc\u00e7\u00e3ao e o procedimento de defini\u00e7c\u00e3ao e explorac\u00e7\u00e3ao \u00e9e executado novamente at\u00e9e que n\u00e3ao existam melhoramentos no valor do custo das solu\u00e7c\u00e3oes obtidas.\nO M\u00e9todo Local Branching foi proposto por Fischetti e Lodi [19] para resolver Problemas de Programa\u00e7\u00e3o Linear Inteira Mista (MIP - Mixed-Integer Linear Program) e \u00e9 considerado um m\u00e9etodo de melhoramento bastante eficiente na resolu\u00e7c\u00e3ao de problemas de grande dimensa\u00e3o.\nSegundo Hassen et al. [34], o Local Branching \u00e9 uma t\u00e9cnica MIP que foi planeada para ser um m\u00e9todo exato, mas que atua como um m\u00e9todo heur\u00edstico se um limite de tempo for definido e atingido antes que a solu\u00e7ao otima do problema seja encontrada.\nAssim, o Local Branching pode ser considerado tamb\u00e9em um m\u00e9etodo heur\u00e9stico que permite encontrar solu\u00e7c\u00e3oes inteiras admiss\u00e9veis de boa qualidade e de forma r\u00e9apida, mas com a desvantagem de n\u00e3ao garantir a obten\u00e7c\u00e3ao da solu\u00e7c\u00e3ao \u00e9otima.\nNeste cap\u00e9tulo mostramos a aplica\u00e7c\u00e3ao do M\u00e9etodo Local Branching ao Problema WMST. Na Sec\u00e7\u00e3o 8.1 comecamos por introduzir alguns conceitos importantes para aplica\u00e7ca\u00e3o do M\u00e9etodo Local Branching e apresentamos um Algoritmo Local Branching\nCl\u00edssico para o Problema WMST. Na Sec\u00e7\u00e3o 8.2 apresentamos algumas extens\u00e3es do m\u00edtodo com o objetivo de melhorar o seu desempenho quando aplicado ao problema em estudo.\nNa Sec\u00e7ao 8.3 referimos as diferen\u00e7as existentes entre o M\u00edtodo Feasibility Pump e o M\u00edtodo Local Branching e fazemos uma abordagem geom\u00edtrica do comportamento do M\u00edtodo Local Branching. Na Sec\u00e7\u00e3o 8.4 descrevemos v\u00edrios algoritmos derivados do Algoritmo Local Branching Cl\u00e1ssico descrito na Secc\u00e3o 8.1. Por fim, na Sec\u00e7\u00e3o 8.5, apresentamos e discutimos os resultados computacionais obtidos atrav\u00eds da aplica\u00e7\u00e3o dos v\u00edrios algoritmos de Local Branching propostos e efetuamos um estudo comparativo entre o algoritmo Local Branching que apresentou os melhores resultados, para um grupo de inst\u00e2ncias teste e o Algoritmo Branch and Bound do Procedimento P-WMTZ+C. Para finalizar o cap\u00edtulo apresentamos uma s\u00edntese dos resultados computacionais obtidos.\n8.1 Local Branching Aplicado ao Problema WMST\nPara aplicar o M\u00e9todo Local Branching ao Problema WMST, come\u00e7amos por obter uma primeira solu\u00e7\u00e3o inteira admiss\u00e9vel que se denomina de solu\u00e7ao de refer\u00eancia e que designamos por x G Xwmst, a qual pode ser obtida usando o solver de um software de Otimiza\u00e7ao ou utilizando um m\u00e9todo heur\u00e9stico. A solu\u00e7\u00e3o inteira admiss\u00e9vel x G XWMST corresponde uma arvore de suporte, com custo C(Tx) e peso W (Tx).\nTendo por base a solu\u00e7\u00e3o de refer\u00eancia x e o facto das variaveis serem bin\u00e9rias, definem-se dois conjuntos de variaveis S = {(i,j) G A : Xj = 1}, designado de suporte binario de x, o qual \u00e9 constitu\u00e9do pelas variaveis que tomam o valor um na solu\u00e7\u00e3o de\n__C\nN(x, k) = &lt;x E Xwmst : A(x, x) =\t(1 - xj) +\txj &lt;k,\nL\t(i>j)6s\t(i,j)^sG\t)\nisto \u00e9, N(x, k) \u00e9 o conjunto de solu\u00e7\u00f5es inteiras admiss\u00edveis (x G XWMST) que satisfazem a restri\u00e7\u00e3o adicional de local branching\nA(x,x) :=\t(1 - xij) + xij &lt;k.\n(i,j)\u20acS\t(i,j)^sC\n(8.1)\nNesta restri\u00e7c\u00e3ao linear, os dois termos do lado esquerdo contam o numero de variaveis binarias que trocam de valores (relativamente a x), do valor um para o valor zero e do valor zero para o valor um, respetivamente, esse numero total de trocas define uma vizinhan\u00e7a de tamanho k.\nNo Problema WMST, a cardinalidade do suporte binario S de qualquer solu\u00e7\u00e3o inteira admiss\u00edvel e sempre constante e igual ao numero de variaveis unitarias da solu\u00e7\u00e3o x, isto \u00e1, igual ao numero de arestas da correspondente arvore de suporte Tx.\nSempre que se efetua uma troca podemos, por exemplo, atribuir o valor zero a uma variavel que antes tinha valor um, mas para que o |S| seja constante \u00e1 necessario tamb\u00e1em atribuir o valor um a uma vari\u00e1avel que antes tinha valor zero, o que resulta numa contabiliza\u00e7c\u00e3ao dupla.\nPara simplificar a restri\u00e7\u00e3o (8.1), podemos pensar em contabilizar apenas metade das trocas efetuadas, isto \u00e1e, contabilizar apenas as vari\u00e1aveis com valor um na solu\u00e7c\u00e3ao de refer\u00eancia. Deste modo a restric\u00e3o (8.1) pode ser escrita da seguite forma,\nA(x,x) :\ty2 (1 \u2014 xij) &lt;k'\n(i,j)eS\nD-\n(8.2)\nUm outro problema conhecido da literatura onde a cardinalidade do suporte bin\u00e9rio \u00e9 constante \u00e9 o Problema do Caixeiro Viajante (TSP - Traveling Salesman Problem), onde a restricao (8.2) permite que no maximo k' arestas sejam trocadas de rota de refer\u00eancia x.\nComo o pro\u00f3prio nome sugere, a restri\u00e7ca\u00e3o local branching pode ser usada como um crit\u00f3erio de ramifica\u00e7c\u00e3ao num esquema de enumera\u00e7c\u00e3ao do tipo Branch and Bound.\nDada uma solu\u00e7ao de refer\u00eancia x, o espa\u00e7o de soluc\u00e3es associado ao no corrente pode ser particionado em duas ramifica\u00e7c\u00e3oes:\n(i) A(x,x) &lt;k (ramo esquerdo) ou (ii) A(x,x) > k + 1 (ramo direito).\nA escolha do tamanho das vizinhan\u00e7as, dado pelo par\u00e2metro k, torna-se dif\u00edcil, pois pode depender do tamanho e da estrutura das inst\u00e2ancias utilizadas. O valor de\nk dever\u00ed ser suficientemente grande para que a vizinhanca N(x, k) contenha solu\u00e7\u00e3es melhores que x mas, por outro lado, dever\u00ed ser pequeno o suficiente de forma a garantir que a vizinhanca N(x, k) seja explorada rapidamente. Em [19] s\u00e3o utilizados valores de k no intervalo [10, 20], os quais t\u00eam mostrado ser eficientes para Problemas MIP.\nNo esquema que se segue apresentamos de forma resumida as principais etapas da implementa\u00e7\u00e3o do M\u00edtodo Local Branching Cl\u00edssico aplicado ao Problema WMST.\nAlgoritmo Local Branching Cl\u00e1ssico (ALBC) Aplicado ao Problema WMST\nPasso 1: Obter uma soluc\u00e3o inteira admiss\u00edvel inicial\nFazer t := 1. Seja x = xl a solu\u00e7\u00e3o de refer\u00eancia obtida atraves de um solver.\nPasso 2: Introduzir a restri\u00e7\u00e3o local branching\nt := t + 1.\nDefinir S = {(i,j) G A : xij = 1} e um valor de k inteiro e positivo.\nIntroduzir a restri\u00e7ao local branching A(x,x) &lt;k.\nObter a solu\u00e7ao \u00edtima x* da vizinhanca N(x, k) utilizando um solver.\nPasso 3: Crit\u00e9rio de paragem e obten\u00e7\u00e3o de novas solu\u00e7\u00e3es inteiras admiss\u00edveis\nSe status de N(x,k) = \u201cOptimum found\u201d, ent\u00e3o\nSe C(Txt) &lt;C(Tx), entao\natualizar x = x* e voltar a efetuar o Passo 2.\nCaso contr\u00edario,\nintroduzir A(x,x) > k + 1 e utilizar um solver para obter xk\nSe C(Txt) &lt;C(Tx), entao\natualizar x = xk\nSTOP.\nNo Passo 1, o solver de um software de Otimiza\u00e7\u00e3o \u00e9 chamado e a execu\u00e7\u00e3o do Algoritmo Branch and Bound de uma formula\u00e7\u00e3o para o Problema WMST \u00e9 interrompida assim que seja encontrada uma primeira solu\u00e7ao inteira admiss\u00edvel X G Xwmst, a qual \u00ed tomada como soluc\u00e3o de refer\u00e2ncia X = xt.\nNo Passo 2, e inserida uma nova restric\u00e3o, A(X,Xt) &lt;k, para reduzir o espa\u00e7o de soluc\u00e3es XWMST e assim formar o novo espa\u00e7o de solu\u00e7\u00f5es Xt = XWMST n N(Xt, k). O solver \u00e9 entao chamado para encontrar a soluc\u00e3o otima da vizinhan\u00e7a N(Xt,k). No Passo 3, se a nova soluc\u00e3o encontrada Xt+1 for melhor do que a solucao Xt, isto e, se C(Txt+i) &lt;C(Txt), ent\u00e3o volta-se ao Passo 2, onde \u00e9 inserida a nova restricao A(x,Xt+1) &lt;k tendo como base a nova soluc\u00e3o de refer\u00e2ncia Xt+1. O novo espa\u00e7o de solu\u00e7\u00e3es para este subproblema passa a ser Xt+1 = (XWMST\\Xt) N(xt+1, k) e o solver e chamado novamente para encontrar a solucao otima da vizinhan\u00e7a N(xt+1, k).\nNo caso de continuar a existir melhoria no custo das solu\u00e7c\u00e3oes obtidas, o procedimento de ramifica\u00e7\u00e3o continua a ser executado. Apos l iterac\u00e3es foram inseridas l restri\u00e7\u00e3es local branching, sendo o novo espa\u00e7o de solu\u00e7oes para o subproblema em quest\u00e3o Xi = (Xwmst\\X1\\X2\\ ... \\X1_1) n N(xl, k).\nSe n\u00e3o for encontrada uma soluc\u00e3o de custo inferior ao custo da soluc\u00e3o de refer\u00e2ncia, ent\u00e3o n\u00e3o e poss\u00edvel aplicar mais o metodo, sendo o solver chamado para explorar o restante espaco de pesquisa correspondente a ramificacao direita A(x, X) > k + 1. Se o custo da soluc\u00e7\u00e3ao encontrada nesta explora\u00e7c\u00e3ao local for inferior ao custo da solu\u00e7c\u00e3ao de refer\u00e2encia, ent\u00e3ao \u00ede atualizada a soluc\u00e7a\u00e3o de refer\u00e2encia e conclui-se a enumerac\u00e7\u00e3ao.\nExemplo 8.1.\nComo exemplo de aplica\u00e7\u00e3o do Algoritmo ALBC ao Problema WMST apresentamos um esquema em \u00edrvore na Figura 8.1, onde \u00ed usado o Algoritmo ALBC na inst\u00e2ncia 10-8 do grupo de instancias Quase Caminhos com W = 1000. Para a restri\u00e7\u00e3o local branching considerou-se a desigualdade (8.2) com k' = 5 e utilizou-se a Formulac\u00e3o WMTZ.\nNo nodo 1 e obtida atraves do solver do software Xpress, a solu\u00e7c\u00e3ao de refer\u00e2encia X = X1, com custo 659 e peso 991. Apos a introdu\u00e7\u00e3o da restri\u00e7\u00e3o local branching, A(x,X1) &lt;5, obteve-se no nodo 2 a solu\u00e7ao X2. Como C(Tx2) = 605 &lt;659 = C(Txi), ent\u00e3o a solucao de refer\u00e2ncia X e atualizada para X2. No nodo 3 \u00e9 adicionada a ramifica\u00e7\u00e3o esquerda correspondente a introducao da restric\u00e3o A(x,X2) &lt;5 e obtida\nno nodo 4 a mesma solu\u00e7\u00e3o obtida no nodo 2. Como esta solu\u00e7\u00e3o n\u00e3o tem custo inferior ao da solu\u00e7ao de refer\u00eancia, ent\u00e3o voltamos ao nodo 3 e inserimos a ramifica\u00e7\u00e3o direita correspondente \u00e0 restri\u00e7\u00e3o A(x,x2) > 6 para explorar o restante espa\u00e7o de pesquisa e assim concluir a enumera\u00e7\u00e3o no nodo 5 com uma solu\u00e7\u00e3o que \u00e9 atualizada, pois C(Tx4) = 577 &lt;605.\nFigura 8.1: Esquema de ramifica\u00e7\u00e3o obtido usando o Algoritmo ALBC na inst\u00e2ncia QC10-8.\nAssim, x = x4 \u00e9 a soluc\u00e3o obtida e corresponde a uma \u00e9rvore de suporte Tx que cont\u00e9m as arestas {0,1}; {0, 7}; {1, 2}; {2, 3}; {2,5}; {4, 6}; {6, 7}; {7, 8} e {8, 9}. A \u00e1rvore Tx tem custo C(Tx) = 577 e peso W(Tx) = 999 e corresponde \u00e0 solucao otima desta inst\u00eaancia.\n8.2\tExtens\u00f5es do M\u00e9todo Local Branching\nCom os m\u00e9todos exatos h\u00e1 a garantia de encontrar a solu\u00e7\u00e3o \u00f3tima global. No entanto, \u00e0 medida que a dimens\u00e3o dos problemas aumenta, os tempos de execu\u00e7\u00e3o tamb\u00e9m aumentam, revelando-se necess\u00e1rio o uso de m\u00e9todos heur\u00e9sticos.\nUma vantagem do uso de m\u00e1todos heur\u00edsticos comparativamente ao uso de m\u00e1todos exatos, reside no facto de ser poss\u00e1vel obter soluc\u00f5es admiss\u00e1veis muito rapidamente, mas por outro lado apesar de se obterem soluc\u00f5es de forma r\u00e1pida existe a desvantagem de nao ser garantida a obten\u00e7\u00f5o da solu\u00e7\u00f5o \u00e1tima.\nAo usarmos o M\u00e1todo Local Branching como um m\u00e1todo exato, existe uma maior integrac\u00f5o com o solver de um software de Otimizac\u00f5o, mas temos a desvantagem de desperdicar muito tempo computacional, particularmente, quando nenhuma solu\u00e7ao melhor do que a solu\u00e7\u00f5o de refer\u00eancia \u00e1 encontrada. Se for imposto um limite de tempo no Algoritmo Local Branching Cl\u00e1ssico aplicado ao Problema WMST este passa a comportar-se como um m\u00e1etodo heur\u00e1stico.\nApresentamos, de seguida, algumas formas de melhorar o desempenho da Heur\u00e1stica Local Branching.\n8.2.1\tSolu\u00e7\u00e3o de Refer\u00eancia Inicial\nA escolha da solu\u00e7ao de refer\u00eancia inicial \u00e9 muito importante. E usual considerar uma solu\u00e7\u00f5o inteira admiss\u00edvel inicial fornecida pelo solver. Contudo, em algumas insta\u00eancias, obter uma solu\u00e7c\u00f5ao inteira admiss\u00e9vel inicial pode demorar muito tempo, pelo que podemos usar como solu\u00e7c\u00f5ao de refer\u00eaencia:\n1.\tA solu\u00e7ao correspondente \u00e0 arvore de suporte de peso m\u00ednimo Tw;\n2.\tA soluc\u00f5o obtida atrav\u00e9s de um esquema Heur\u00edstico Feasibility Pump;\n3.\tA solu\u00e7\u00f5o correspondente a uma \u00edrvore de suporte que verifique a restri\u00e7\u00f5o de peso.\n8.2.2\tMecanismos de Intensifica\u00e7\u00e3o e de Diversifica\u00e7\u00e3o\nEstes dois mecanismos de intensifica\u00e7\u00e3o e de diversifica\u00e7\u00e3o utilizam-se quando a solucao nao melhora. No que segue, convem referir, que |_pJ converte o numero p no maior numero inteiro menor ou igual a p e [p1 converte o numero p no menor numero inteiro maior ou igual a p.\n\u2022\tMecanismo de Intensifica\u00e7\u00e3o\nEste mecanismo tem por objetivo reduzir o tamanho da vizinhan\u00e7a a ser explorada e, consequentemente, o tempo de pesquisa.\nO lado direito da restric\u00e3o A(x,x) &lt;k e reduzido para [|J, ou seja, introduz-se a restri\u00e7\u00e3o A(x,x) &lt;[2J e utiliza-se novamente o solver para encontrar uma nova solu\u00e7\u00e3o.\n\u2022\tMecanismos de Diversifica\u00e7\u00e3o\nEstes mecanismos t\u00eam por objetivo aumentar o tamanho da vizinhan\u00e7a a ser explorada e, consequentemente, o tempo de pesquisa.\nCome\u00e7amos por aplicar um mecanismo de diversifica\u00e7\u00e3o fraca e caso nenhuma solu\u00e7ao melhor seja encontrada, aplicamos um mecanismo de diversifica\u00e7\u00e3o mais forte.\n\u2014 Mecanismo de Diversifica\u00e7ao Fraca\nO lado direito da restric\u00e3o A(x,x) &lt;k e aumentado em [11, ou seja, e introduzida a restric\u00e3o A(x,x) &lt;k + [11 e utilizamos novamente o solver para encontrar uma nova solu\u00e7ao.\n\u2014 Mecanismo de Diversifica\u00e7ao Forte\nO lado direito da restri\u00e7ao A(x,x) &lt;k e aumentado em 2 x [21, isto \u00e9, e introduzida a restric\u00e3o A(x,x) &lt;k + 2[11 e utilizamos novamente o solver para encontrar uma nova solu\u00e7ao. Este mecanismo de diversifica\u00e7\u00e3o e inspirado na tecnica Variable Neighborhood Search [47].\nAo aplicar este ultimo mecanismo, geralmente encontra-se uma solu\u00e7\u00e3o pior que a melhor soluc\u00e3o conhecida, mas n\u00e3o muito distante dela.\nNote-se que o mecanismo de diversifica\u00e7\u00e3o forte s\u00ed \u00e9 executado se o mecanismo de diversificac\u00e3o fraca foi executado sem sucesso na itera\u00e7\u00e3o anterior.\n8.2.3\tCrit\u00e9rios de Paragem\nEm alguns casos, e dependendo do valor do par\u00e2metro k, o tempo de processamento do ramo esquerdo at\u00e9 encontrar a solucao \u00edtima na vizinhanca N(x, k) \u00e9 muito elevado. Assim, do ponto de vista heur\u00edstico \u00e9 razo\u00edvel impor \u00e0 partida um crit\u00e9rio de paragem no solver. Pode-se optar, por exemplo, pelos dois crit\u00e9rios seguintes:\n\u2022\texplorar as vizinhan\u00e7as at\u00e9 que a primeira solu\u00e7\u00e3o inteira seja obtida;\n\u2022\timpor um limite de tempo na explora\u00e7ao das vizinhan\u00e7as.\nComo s\u00e3o impostos crit\u00e9rios de paragem no solver quando se explora uma dada vizinhan\u00e7a pode acontecer uma das seguintes situac\u00e3es:\n1. A solucao obtida \u00e9 otima\nO solver resolveu o subproblema at\u00e9 encontrar a solu\u00e7\u00e3o otima da vizinhan\u00e7a N(x, k). Nesta situa\u00e7\u00e3o podem ocorrer os seguintes casos:\n\u2022\tA soluc\u00e3o otima obtida \u00e9 melhor do que a solu\u00e7ao de refer\u00eancia\nO solver conseguiu encontrar a solu\u00e7\u00e3o otima x da vizinhan\u00e7a N(x, k), tal que, C(Txt) &lt;C(Tx), ent\u00e3o atualizamos a soluc\u00e3o de refer\u00eancia para a nova solu\u00e7ao encontrada. Sem alterar o valor do par\u00e2metro k, introduzimos a restricao A(x,x) &lt;k.\n\u2022\tA solu\u00e7ao otima obtida nao e melhor do que a solu\u00e7ao de refer\u00eancia O solver conseguiu encontrar a soluc\u00e3o otima xtj da vizinhanca N(x,k), tal que, C(Txt) > C(Tx). Neste caso, o solver \u00e9 chamado para explorar o restante espaco de pesquisa (introdu\u00e7ao da restricao A(x,x) > k + 1 correspondente \u00e0 ramificac\u00e3o direita) e assim concluir a enumera\u00e7\u00e3o.\n2.\tA solucao obtida n\u00e3o \u00e9 admiss\u00edvel\nO solver n\u00f5o conseguiu encontrar uma solu\u00e7\u00f5o inteira admiss\u00edvel para o subproblema na vizinhan\u00e7a N(x, k).\n3.\tA solucao obtida \u00e9 admiss \u00edvel\nO solver resolveu o subproblema e encontrou uma solu\u00e7\u00f5o inteira admiss\u00edvel, mas nao corresponde a solucao otima da vizinhanca N(x, k). Nesta situac\u00f5o podem ainda ocorrer dois casos:\n\u2022\tA soluc\u00e3o obtida \u00e9 melhor do que a solucao de refer\u00eancia\nO solver conseguiu encontrar na vizinhan\u00e7a N(x, k) uma solu\u00e7\u00f5o inteira admiss\u00edvel x\u00fa, tal que, C(Txt) &lt;C(Tx), entao atualizamos a solu\u00e7ao de referencia para a nova soluc\u00f5o encontrada. Sem alterar o valor do par\u00e2metro k, introduzimos a restri\u00e7ao A(x,x) &lt;k.\n\u2022\tA soluc\u00e3o obtida nao e melhor do que a solucao de refer\u00eancia\nO solver conseguiu encontrar na vizinhanca N(x, k) uma solu\u00e7\u00f5o inteira admiss\u00edvel x\u00fa, tal que, C(Txt) > C(Tx). Neste caso podemos aplicar os mecanismos de intensifica\u00e7\u00f5o ou diversifica\u00e7\u00f5o de modo a reduzir ou a aumentar a vizinhan\u00e7a.\n8.3\tLocal Branching versus Feasibility Pump\nNa Heur\u00edstica Feasibility Pump (FP), para a obtenc\u00f5o da soluc\u00f5o inicial \u00e9 necessario recorrer ao solver de um software de Otimizac\u00f5o para obter x*, a solu\u00e7\u00f5o \u00edtima da relaxa\u00e7\u00f5o linear de uma formula\u00e7ao para o Problema WMST, sendo esta depois arredondada de acordo com determinado crit\u00e9rio e obtida assim uma solu\u00e7\u00f5o inteira x, que pode ou n\u00f5o ser admiss\u00edvel. Na Heur\u00edstica Local Branching (LB) podemos recorrer inicialmente ao solver para resolver o Algoritmo Branch and Bound de uma formulac\u00f5o para o Problema WMST at\u00e9 que seja obtida uma primeira solu\u00e7\u00f5o inteira admiss\u00edvel, x, ou optar por uma das solu\u00e7oes de refer\u00e2ncia proposta na Subsec\u00e7\u00f5o 8.2.1. Enquanto que na Heur\u00edstica LB a solu\u00e7\u00f5o inicial x \u00e9 inteira e admiss\u00edvel, na Heur\u00edstica FP a solu\u00e7ao inicial x \u00e9 inteira, mas pode ou nao ser admiss\u00edvel.\nEm ambos os m\u00e9todos utilizamos a fun\u00e7\u00e3o dist\u00e2ncia A(x,x) e pretendemos que esta seja pequena, isto \u00e9, na Heur\u00e9stica FP a fun\u00e7ao dist\u00e2ncia \u00e9 utilizada como fun\u00e7\u00e3o objetivo que se pretende minimizar, enquanto que na Heur\u00edstica LB \u00e9 usada como restri\u00e7ao, onde se pretende explorar uma vizinhan\u00e7a pequena (n\u00e3o permitindo que se efetuem muitas trocas) de tal forma que a vizinhan\u00e7a seja explorada rapidamente.\nQuando em duas iteracoes consecutivas as soluc\u00e3es forem iguais, isto \u00e9, n\u00e3o houver melhoramento no custo das solu\u00e7\u00e3es, na Heur\u00e9stica FP aplicam-se mecanismos de perturbac\u00e3o e na Heur\u00e9stica LB aplicam-se mecanismos de intensifica\u00e7\u00e3o e de diversi-ficacao.\nGeometricamente, a Heur\u00e9stica FP define duas trajet\u00f3rias de pontos que se esperam convergentes (ver Sec\u00e7ao 7.4), enquanto que a Heur\u00e9stica LB define apenas uma trajet\u00f3ria de pontos inteiros e admiss\u00e9veis que se espera convergente para um ponto. A Heur\u00e9stica LB tamb\u00e9m se pode interpretar como uma trajet\u00f3ria de custos e uma trajet\u00f3ria de pesos que convergem para um custo C(Tx) e um peso W(Tx).\nNos gr\u00e9ficos das Figuras 8.2 e 8.3 podemos observar as trajet\u00f3rias de custos e de pesos da inst\u00e2ncia 10-8 do grupo de inst\u00e2ncias Quase Caminhos.\nFigura 8.2: Representa\u00e7\u00e3o da trajet\u00f3ria de custos da inst\u00e2ncia QC10-8.\nFigura 8.3: Representa\u00e7\u00e3o da trajet\u00f3ria de pesos da inst\u00e2ncia QC10-8.\nA trajet\u00f3ria de custos converge para o custo 577 e a trajet\u00f3ria de pesos converge para o peso 999. Assim \u00f3 obtida a solu\u00e7ao otima que corresponde a uma \u00f3rvore de suporte com custo C(Tx) = 577 e peso W(Tx) = 999.\nNote-se que no caso da Heur\u00edstica LB a sequ\u00eancia de custos obtida \u00f3 decrescente, pois s\u00f3 s\u00e3o atualizadas as soluc\u00f5es no caso de existir melhoramento. Na Heur\u00edstica FP as duas sequ\u00eancias de custos podem n\u00e3o ter qualquer monotonia.\n8.4\tDescri\u00e7\u00e3o dos Algoritmos Local Branching para o WMST\nTendo por base o Algoritmo ALBC aplicado ao Problema WMST apresentado e\ndescrito detalhadamente na Sec\u00e7\u00e3o 8.1, propomos cinco vers\u00f5es para testar e comparar.\nAlgoritmo Local Branching 1 (ALB1)\nEste algoritmo \u00e9 o apresentado na Sec\u00e7ao 8.1 com ligeiras modifica\u00e7\u00f5es. Atendendo a que \u00e0 medida que a dimens\u00e3o do problema aumenta, o tempo de execu\u00e7ao tamb\u00e9m\naumenta, ha\u00e9 a necessidade de impor um limite de tempo para a execu\u00e7c\u00f5ao do algoritmo (TL). O facto de impor um limite de tempo, leva a que o Passo 3 do Algoritmo ALBC aplicado ao Problema WMST seja modificado, tomando a seguinte forma:\nPasso 3: Crit\u00e9rio de paragem e obten\u00e7\u00e3o de novas solu\u00e7\u00f5es inteiras admiss\u00edveis\nSe status de N(x, k) = \u201cOptimum found\u201d, ent\u00f5o\nSe C(Txt) &lt;C(Tx), ent\u00f5o\natualizar x = x\u00fa e voltar a efetuar o Passo 2.\nCaso contr\u00e9ario,\nintroduzir A(x,x) > k + 1 e utilizar um solver para obter x\u00ed\nSe C(Txt) &lt;C(Tx), entao\natualizar x = x\u00ed\nSTOP.\nCaso contra\u00e9rio,\nSe status de N(x, k) = \u201cUnfeasible\u201d, ent\u00f5o\nSTOP.\nCaso contr\u00e9ario,\nSe status de N(x, k) = \u201cUnfinished\u201d, ent\u00f5o\nSe C(Txt) &lt;C(Tx), entao\natualizar x = x\u00fa e voltar a efetuar o Passo 2.\nCaso contr\u00e9ario,\nintroduzir A(x,x) > k + 1 e utilizar um solver para obter x\u00ed\nSe C(Txt) &lt;C(Tx), entao\natualizar x = x\u00ed\nSTOP.\nSe um limite total de tempo \u00e9e imposto para a execuc\u00e7\u00f5ao do algoritmo, significa que na u\u00e9ltima vizinhan\u00e7ca a ser explorada pode acontecer que o solver tenha de parar\nantes que uma soluc\u00e3o inteira admiss\u00e1vel seja encontrada ou antes de ser provada a otimalidade na vizinhan\u00e7ca explorada. Estes casos que podem ocorrer encontram-se descritos na Subsec\u00e7\u00e3o 8.2.3.\nAlgoritmo Local Branching 2 (ALB2)\nNeste algoritmo \u00e1 tamb\u00e1m imposto um limite de tempo (igual ao do Algoritmo ALB1). S\u00e3o introduzidos mecanismos de intensifica\u00e7\u00e3o e de diversifica\u00e7\u00e3o e o solver \u00e1 interrompido assim que se obtenha uma solu\u00e7\u00e3o inteira admiss\u00e1vel no Algoritmo Branch and Bound de uma formula\u00e7\u00e3o para o Problema WMST. Assim, \u00e1 necess\u00e1rio modificar os Passo 2 e 3 do Algoritmo ALBC descrito na Secc\u00e3o 8.1 que passam a ter a seguinte forma:\nPasso 2: Introduzir a restri\u00e7\u00e3o local branching\nt := t + 1.\nDefinir S = {(i,j) G A : xij = 1} e um valor de k inteiro e positivo.\nIntroduzir a restri\u00e7\u00e3o local branching A(x,x) &lt;k.\nObter uma soluc\u00e3o inteira admiss\u00e1vel x* da vizinhan\u00e7a N(x, k) utilizando o solver.\nPasso 3: Crit\u00e9rio de paragem e obten\u00e7\u00e3o de novas solu\u00e7\u00e3es inteiras admiss\u00edveis\nSe status de N(x,k) = \u201cOptimum found\u201d, ent\u00e3o\nSe C(Txt) &lt;C(Tx), entao\natualizar x = x* e voltar a efetuar o Passo 2.\nCaso contr\u00e1ario,\nintroduzir A(x,x) > k + 1 e utilizar um solver para obter x*.\nSe C(Txt) &lt;C(Tx), ent\u00e3o\natualizar x = x*.\nSTOP.\nCaso contra\u00e1rio,\nSe status de N(x,k) = \u201cUnfeasible\u201d, ent\u00e3o\naumentar k := k + 1 e aplicar o Mecanismo de Diversifica\u00e7\u00e3o Forte.\nCaso contr\u00e9ario,\nSe status de N(x, k) = \u201cUnfinished\u201d, ent\u00e3o\nSe C(Txt) &lt;C(Tx), entao\natualizar x = x1 e voltar a efetuar o Passo 2.\nCaso contr\u00e9ario,\naplicar os Mecanismos de Intensifica\u00e7\u00e3o e de Diversificac\u00e3o.\nEnquanto que no Passo 2 do Algoritmo ALBC procuramos obter a solucao \u00e1tima da vizinhan\u00e7a, no Passo 2 deste algoritmo apenas procuramos encontrar a primeira solucao inteira admiss\u00edvel da vizinhan\u00e7a.\nOs mecanismos de intensifica\u00e7ao e de diversifica\u00e7\u00e3o sao introduzidos quando nao \u00e9 encontrada uma solu\u00e7\u00e3o inteira admiss\u00edvel ou quando a solu\u00e7\u00e3o obtida \u00e9 inteira admiss\u00edvel e n\u00e3o e melhor do que a solu\u00e7ao de refer\u00eancia. Os mecanismos de intensifica\u00e7\u00e3o e de diversifica\u00e7\u00e3o s\u00e3o aplicados como descrito na Subsecc\u00e3o 8.2.2. Primeiro tentamos aplicar o mecanismo de intensificacao, para reduzir o tempo de pesquisa. Se n\u00e3o se conseguir uma solu\u00e7ca\u00e3o melhor, ent\u00e3ao aplicamos a diversifica\u00e7c\u00e3ao fraca. O mecanismo de diversifica\u00e7\u00e3o forte s\u00e9 \u00e9 aplicado no caso de na iterac\u00e3o anterior se ter aplicado sem sucesso um mecanismo de diversifica\u00e7c\u00e3ao fraca.\nAlgoritmo Local Branching 3 (ALB3)\nOs Passos 2 e 3 foram implementados da mesma forma que os Passos 2 e 3 do Algoritmo ALB2. A solu\u00e7\u00e3o de refer\u00eancia obtida no Passo 1 corresponde a primeira solu\u00e7\u00e3o inteira admiss\u00e9vel obtida pelo solver quando usa o procedimento Branch and Bound. Na obtenc\u00e3o das restantes solu\u00e7\u00e3es inteiras admiss\u00edveis \u00e9 imposto um limite de tempo na explorac\u00e3o das vizinhan\u00e7as (nodos de ramifica\u00e7\u00e3o esquerdos).\nUma vantagem deste algoritmo em rela\u00e7ao ao anterior \u00e9 o facto de durante o tempo imposto para a explorac\u00e3o ser poss\u00e9vel encontrar solu\u00e7\u00f5es inteiras admiss\u00edveis de melhor qualidade, dado que cada vez que se chama o solver este n\u00e3o \u00e9 interrompido assim que se obt\u00e9em a primeira solu\u00e7c\u00e3ao inteira admiss\u00e9vel, mas sim quando exceder o limite de\ntempo imposto na explora\u00e7\u00e3o da vizinhan\u00e7a. Tal como nos Algoritmos ALB1 e ALB2 e ainda imposto um tempo limite total para a execu\u00e7ao do algoritmo (TL).\nExemplo 8.2.\nPara exemplificar a introdu\u00e7c\u00e3ao dos mecanismos de intensifica\u00e7c\u00e3ao e de diversifica\u00e7c\u00e3ao vamos aplicar o Algoritmo ALB3 \u00e0 inst\u00e2ncia 10-10 do grupo de instancias Quase Caminhos com W = 1000. Para a restri\u00e7\u00e3o local branching considerou-se a desigualdade (8.2) com k' = 5 e utilizou-se a Formula\u00e7\u00e3o WMTZ.\nNo esquema em arvore da Figura 8.4 podemos observar que no nodo 1 e obtida a solucao de refer\u00e2ncia x = x1, com custo 782 e peso 872. Apos se ter introduzido a restricao A(x,x1) &lt;5, obteve-se no nodo 2 a solucao x2. Como o custo desta solu\u00e7ao e inferior ao custo da solu\u00e7ao de refer\u00e2ncia (C(Tx2) = 662 &lt;782 = C(Txi)), entao atualiza-se x = x2. No nodo 3 e adicionada a ramifica\u00e7\u00e3o esquerda A(x,x2) &lt;5 e a soluc\u00e7a\u00e3o obtida no nodo 4 na\u00e3o melhora, o que leva a introduzir um mecanismo de intensifica\u00e7ca\u00e3o. Ent\u00e3ao volta-se ao nodo 3 e adiciona-se a ramifica\u00e7c\u00e3ao correspondente a A(x,x2) &lt;2. Como a soluc\u00e3o obtida no nodo 5 continua a nao melhorar, ent\u00e3o aplica-se um mecanismo de diversificac\u00e7a\u00e3o fraca que corresponde a voltar ao nodo 3 e introduzir mais uma ramifica\u00e7\u00e3o com a restric\u00e3o A(x,x2) &lt;7. Como a soluc\u00e3o obtida no nodo 6 tem custo inferior a C(Tx) = 662, ent\u00e3o atualiza-se a solu\u00e7ao de refer\u00e2ncia para x5. No ramo que liga o nodo 7 ao nodo 9 volta-se a aplicar o mecanismo de intensificac\u00e7a\u00e3o dado que a restri\u00e7c\u00e3ao que foi introduzida na ramificac\u00e7\u00e3ao do nodo 7 para o nodo 8 n\u00e3ao originou melhorias. Finalmente, a liga\u00e7ca\u00e3o do nodo 7 ao nodo 10 explora o restante espac\u00e7o de pesquisa. A soluc\u00e7\u00e3ao tem custo 657 e peso 930.\nFigura 8.4: Esquema de ramifica\u00e7\u00e3o obtido usando o Algoritmo ALB3 na inst\u00e2ncia QC10-10.\nOs pr\u00f3ximos algoritmos que vamos apresentar apenas diferem do Algoritmo ALB3 no Passo 1, onde \u00f3 obtida uma solu\u00e7\u00e3o de refer\u00eancia inicial sem recorrer ao solver.\nAlgoritmo Local Branching 4 (ALB4)\nPara a obten\u00e7c\u00e3ao da soluc\u00e7\u00e3ao de refer\u00eaencia inicial usamos a solu\u00e7ca\u00e3o inteira admiss\u00f3vel obtida atrav\u00f3s da Heur\u00edstica FPB2 apresentada no Cap\u00edtulo 7. A escolha desta heur\u00edstica deve-se ao facto de, em geral, ter apresentado solu\u00e7\u00e3es de melhor qualidade num menor tempo (ver resultados computacionais do Cap\u00edtulo 7). Com a aplica\u00e7ao deste algoritmo pretendemos melhorar a solu\u00e7\u00e3o obtida atrav\u00f3s da Heur\u00edstica FPB2. Em caso de falha da Heur\u00edstica Feasibility Pump na obten\u00e7ao de uma solu\u00e7\u00e3o inteira admiss\u00edvel, usa-se\no solver para obter a primeira soluc\u00e3o de refer\u00eancia.\nAlgoritmo Local Branching 5 (ALB5)\nA primeira solu\u00e7\u00e3o de refer\u00eancia corresponde \u00e0 arvore de suporte de peso m\u00ednimo Tw, a qual pode ser obtida atrav\u00e9s da aplicacao do Algoritmo de Prim [51].\n8.5\tExperiencias para Comparac\u00e3o dos Algoritmos\nLocal Branching e Resultados Computacionais\nNesta sec\u00e7\u00e3o apresentamos os resultados computacionais dos v\u00e1rios algoritmos Local Branching propostos para o Problema WMST. Come\u00e7amos por efetuar um estudo comparativo entre os v\u00e1rios algoritmos Local Branching propostos com o objetivo de escolher o mais eficiente para o comparar com o algoritmo Branch and Bound do Procedimento P-WMTZ+C.\nTodos os testes foram efetuados num Intel(R) Core(TM)2 Duo CPU (T7100) 2.00 GHz processador e 4Gb de RAM e usou-se o software Xpress 7.3 (Xpress-Optimizer 23.01.03 e Xpress-Mosel 3.4.0) [1] para implementar todos os algoritmos Local Branching.\nComo em todos estes algoritmos \u00e1 obtido um limite superior para o valor do custo, que pode ou n\u00e3o ser o valor \u00e1timo, o gap correspondente \u00e1 dado por\nLS - O PT gap = OPT\nx 100,\nonde LS \u00e9 o valor do limite superior obtido para o valor do custo atrav\u00e9s da aplica\u00e7\u00e3o de um dos algoritmos Local Branching e OPT \u00e9 o valor \u00edtimo (\u00e2(W M ST)) ou o melhor valor encontrado at\u00e9e ao momento.\n8.5.1\tExemplo Comparativo dos Algoritmos Local Branching\nCom o objetivo de comparar os diferentes algoritmos Local Branching descritos ao longo da Sec\u00e7\u00e3o 8.4 elabor\u00e1mos a Tabela 8.1, onde se apresentam os sucessivos custos e pesos obtidos em cada um dos algoritmos para a inst\u00e2ncia 10-8 do grupo de inst\u00e2ncias Quase Caminhos.\n\tALB1\t\tALB2\t\tALB3\t\tALB4\t\tALB5\t\nIter\tCusto\tPeso\tCusto\tPeso\tCusto\tPeso\tCusto\tPeso\tCusto\tPeso\n0\t659\t991\t659\t991\t659\t991\t637\t821\t793\t650\n1\t605\t985\t665\t985\t605\t985\t629\t872\t577\t999\n2\t605\t985\t609\t981\t605\t985\t605\t985\t577\t999\n3\t577\t999\t653\t875\t577\t999\t605\t985\t577\t999\n4\t\t\t605\t985\t\t\t577\t999\t\t\n5\t\t\t673\t861\t\t\t\t\t\t\n6\t\t\t605\t985\t\t\t\t\t\t\n7\t\t\t577\t999\t\t\t\t\t\t\nTabela 8.1: Compara\u00e7\u00e3o dos algoritmos Local Branching na inst\u00e2ncia QC10-8.\nOs valores a negrito na Tabela 8.1 indicam que foi atualizada a solu\u00e7\u00e3o de refer\u00e2ncia.\nNa inst\u00e2ncia QC10-8 o valor do custo e do peso da solu\u00e7ao de refer\u00e2ncia inicial \u00ede igual nos Algoritmos ALB1, ALB2 e ALB3, pois nestes tr\u00e2es algoritmos a solu\u00e7c\u00e3ao inicial corresponde a primeira solu\u00e7ao inteira admiss\u00edvel obtida pelo solver atrav\u00eds da Formula\u00e7c\u00e3ao WMTZ quando usa o procedimento de Branch and Bound.\nNo Algoritmo ALB4 o valor do custo da solu\u00e7ca\u00e3o de refer\u00e2encia inicial \u00ede melhor do que o obtido nos restantes algoritmos, dado que \u00ede obtido atrav\u00edes da Heur\u00edstica FPB2 apresentada no Cap\u00edtulo 7, enquanto que o valor do custo da solu\u00e7\u00e3o de refer\u00eancia inicial usada no Algoritmo ALB5 \u00ede o de pior qualidade, pois corresponde ao valor do custo da \u00edarvore de suporte de peso m\u00ednimo, mas logo na itera\u00e7c\u00e3ao seguinte consegue-se obter o valor \u00edotimo. Nesta insta\u00e2ncia todos os algoritmos convergem para o mesmo valor de custo e de peso, sendo o custo 577 e o peso 999 que corresponde a solu\u00e7\u00e3o \u00edtima da inst\u00e2ancia. Neste exemplo, o algoritmo que realiza um maior nu\u00edmero de itera\u00e7co\u00e3es \u00ede o Algoritmo ALB2.\n8.5.2\tEstudo Comparativo dos Algoritmos Local Branching\nNesta subsec\u00e7\u00e3o, para comparar os diferentes algoritmos Local Branching propostos apenas apresentamos os resultados computacionais de inst\u00e2ncias at\u00e9 100 nodos dos grupos de inst\u00e2ncias Quase Caminhos, Aleat\u00f3rias e Euclideanas (ver Secc\u00e3o 2.3).\nPara come\u00e7ar vamos descrever os par\u00e2metros utilizados nos algoritmos. Em todos os algoritmos Local Branching propostos foi imposto um limite de tempo global na execu\u00e7ao do algoritmo que corresponde a TL = 10800 segundos. Ap\u00e9s se efetuarem algumas experi\u00e2ncias computacionais decidimos utilizar a restri\u00e7\u00e3o local branching dada pela express\u00e3o (8.2). Quanto aos valores de k testaram-se alguns valores no intervalo [10, 20]. No seguinte gr\u00e9fico encontram-se os tempos m\u00e9dios de execu\u00e7ao (em segundos) para instancias at\u00e9 100 nodos de tr\u00e2s valores de k'.\nFigura 8.5: Tempos m\u00e9dios de execu\u00e7\u00e3o, em segundos, obtidos usando o Algoritmo ALB4 para diferentes valores de k'.\nAtrav\u00e9s do gr\u00e1fico da Figura 8.5 podemos observar que a medida que o valor de k' aumenta, os tempos m\u00e9dios tamb\u00e9m aumentam para inst\u00e2ncias maiores ou iguais a 40 nodos. Realca-se ainda que se encontram solucoes de melhor qualidade quando k' = 5. Assim, em todos os Algoritmos LB com exce\u00e7ao do Algoritmo ALB5 vamos utilizar o valor do par\u00e2metro k =10 (k' = 5). No Algoritmo ALB5 foi escolhido inicialmente\nn \u2014 1\n2\num k' =\nA escolha deste valor deve-se ao facto do custo da correspondente\n\u00edrvore de suporte de peso m\u00ednimo estar bastante afastada do valor \u00e9timo e ao serem\nefetuadas poucas trocas pode n\u00f5o ser poss\u00edvel encontrar uma solu\u00e7ao na vizinhanca considerada N(x, k).\nDepois de realizadas algumas experi\u00eancias, nos algoritmos onde se aplicam os me\ncanismos de intensifica\u00e7\u00e3o e de diversificac\u00e3o o numero de intensificac\u00e3es ou diversi-\nfica\u00e7oes foi limitado a 5.\nNos Algoritmos ALB3, ALB4 e ALB5 foram impostos tempos (em segundos) para explorar as vizinhan\u00e7as, os quais se encontram na seguinte tabela.\n\tN.\u00b0 Nodos\t10\t20\t40\t60\t80\t100\nALB3\tQC e R\t1\t2\t5\t10\t20\t40\n\tE\t1\t2\t10\t30\t200\t350\nALB4 e ALB5\tQC e R\t1\t2\t5\t10\t20\t40\n\tE\t1\t2\t10\t15\t20\t50\nTabela 8.2: Tempo, em segundos, imposto na explora\u00e7ao das vizinhan\u00e7as.\nDe seguida comparamos os algoritmos Local Branching propostos em cada um dos grupos de inst\u00e2ncias em separado para averiguar qual dos algoritmos \u00e9 o mais eficiente.\nInst\u00e2ncias Quase Caminhos\nNo gr\u00e1fico da Figura 8.6 podemos observar a percentagem de solu\u00e7\u00f5es \u00f3timas obtidas no grupo de inst\u00e2ncias Quase Caminhos em cada um dos algoritmos Local Branching propostos para inst\u00e2ncias ate 100 nodos.\nFigura 8.6: Percentagem de solu\u00e7\u00f5es \u00f3timas obtidos pelos algoritmos Local Branching nas inst\u00e2ncias\nQC.\nEm todos os algoritmos com exce\u00e7\u00e3o do Algoritmo ALB2 obt\u00eam-se percentagens elevadas de soluc\u00e3es otimas. Com a aplicacao do Algoritmo ALB1 as 60 inst\u00eancias testadas apresentam gap nulo. O Algoritmo ALB4 \u00e9 o segundo a ter maior percentagem de solu\u00e7\u00e3es otimas (95% que corresponde a 57 em 60 inst\u00eancias). Depois, temos o Algoritmo ALB3 com soluc\u00e3es otimas em 76,67% dos casos (46 em 60 inst\u00eancias). O Algoritmo ALB5 tambem apresenta uma boa percentagem de solu\u00e7\u00f5es otimas, 73,33%, que corresponde a 44 inst\u00eaancias. O algoritmo com menor percentagem de solu\u00e7c\u00e3oes otimas e o Algoritmo ALB2 com apenas 38,33% dos casos (23 em 60 instancias).\nNa Tabela 8.3 podemos visualizar os gaps medios, em percentagem, e os correspondentes desvios padr\u00e3oes e tambem os tempos medios de execu\u00e7c\u00e3ao, em segundos, e os respetivos desvios padroes obtidos para os cinco algoritmos Local Branching propostos.\nN\u00bb Nodos\t\tALB1\tALB2\tALB3\tALB4\tALB5\n\t10\t0\t0,338\t0\t0\t0\n\t20\t0\t1,546\t0,097\t0\t0\nGap Medio (%)\t40\t0\t1,063\t0,222\t0,174\t0,181\n\t60\t0\t0,761\t0,043\t0\t0\n\t80\t0\t0,156\t0,037\t0\t0,015\n\t100\t0\t0,424\t0,160\t0\t0\n\t10\t0\t0,765\t0\t0\t0\n\t20\t0\t3,752\t0,306\t0\t0\n\t40\t0\t0,994\t0,366\t0,438\t0,475\nagap\t60\t0\t0,640\t0,092\t0\t0\n\t80\t0\t0,226\t0,118\t0\t0,032\n\t100\t0\t0,551\t0,280\t0\t0\n\t10\t0,421\t0,582\t0,403\t0,398\t0,394\n\t20\t3,750\t4,663\t3,491\t2,368\t3,035\nTempos Medio (s)\t40\t64,057\t29,265\t24,322\t20,005\t36,845\n\t60\t2273,078\t17,854\t34,097\t23,998\t76,875\n\t80\t3443,434\t41,932\t61,954\t51,046\t159,832\n\t100\t9999,254\t67,038\t123,663\t98,633\t287,813\n\t10\t0,092\t0,212\t0,053\t0,143\t0,191\n\t20\t1,143\t1,676\t1,021\t0,688\t1,053\ntempo\t40\t35,763\t6,668\t5,040\t5,844\t3,450\n\t60\t3554,363\t3,349\t14,049\t5,315\t6,752\n\t80\t3593,114\t8,988\t17,306\t10,495\t24,908\n\t100\t0,418\t16,523\t19,429\t19,435\t25,297\nTabela 8.3: Compara\u00e7\u00e3o dos algoritmos Local Branching em termos de gaps m\u00e9dios (em percentagem) e de tempo medio de execu\u00e7\u00e3o (em segundos) nas inst\u00e2ncias QC.\nOs Algoritmos ALB1, ALB4 e ALB5 s\u00e3o os que apresentam gaps de melhor qualidade. Quanto aos Algoritmos ALB2 e ALB3 s\u00e3o os que apresentam os gaps de pior qualidade, embora relativamente baixos.\nQuanto ao tempo de execu\u00e7ao podemos observar que os Algoritmo ALB2 e ALB4 s\u00e3o os mais r\u00f3pidos. O Algoritmo ALB1 apesar de ter gap nulo para todas as int\u00eancias apresenta tempos m\u00e9dios bastante elevados quando comparado com os restantes algoritmos.\nInst\u00e2ncias Aleat\u00f3rias\nNo gr\u00e1fico da Figura 8.7 podemos observar a percentagem de solu\u00e7\u00f5es \u00f3timas obtidas no grupo de instancias Aleat\u00e1rias em cada um dos algoritmos Local Branching propostos para instancias at\u00e1 100 nodos.\nFigura 8.7: Percentagem de solu\u00e7\u00f5es \u00f3timas obtidas pelos Algoritmos Local Branching nas inst\u00e2ncias\nR.\nDa observa\u00e7\u00e3o do gr\u00e1fico, verifica-se que neste grupo de inst\u00e2ncias se encontram muitos gaps nulos. Com a aplica\u00e7\u00e3o do Algoritmo ALB1 as 30 instancias testadas apresentam gap nulo. O Algoritmo ALB4 \u00e1 o segundo a ter maior percentagem de solu\u00e7\u00e3es \u00e1timas, 93,33% que corresponde a 28 instancias. A seguir, temos o Algoritmo ALB3 com solu\u00e7\u00e3es otimas em 86,67% das instancias (26 em 30 instancias). O Algoritmo ALB5 tamb\u00e1m apresenta uma boa percentagem de solu\u00e7\u00e3es \u00e1timas, 76,67% que corresponde a 23 instancias. O algoritmo com menor percentagem de solu\u00e7co\u00e3es o\u00e1timas \u00e1 o ALB2 com apenas 33,33% dos casos (10 em 30 instancias).\nNa Tabela 8.4 podemos observar os gaps m\u00e9dios, em percentagem obtidos para cada um dos algoritmos Local Branching e os respetivos desvios padr\u00e3es. Na mesma tabela sao tamb\u00e1m apresentados os tempos m\u00e1dios de execu\u00e7\u00e3o, em segundos, e os correspondentes desvios padr\u00e3oes.\nN\u00bb Nodos\t\tALB1\tALB2\tALB3\tALB4\tALB5\n\t10\t0\t0\t0\t0,501\t0\n\t20\t0\t2,280\t0,039\t0\t0\nGap M\u00e9dio\t40\t0\t1,705\t0,369\t0\t24,433\n\t60\t0\t0,525\t0\t0\t2,817\n\t80\t0\t1,137\t0,007\t0\t0,021\n\t100\t0\t11,614\t1,255\t0,010\t37,293\n\t10\t0\t0\t0\t1,119\t0\n\t20\t0\t3,535\t0,087\t0\t0\n\t40\t0\t2,668\t0,577\t0\t54,524\nagap\t60\t0\t0,637\t0\t0\t6,300\n\t80\t0\t1,325\t0,015\t0\t0,046\n\t100\t0\t12,036\t1,225\t0,023\t74,585\n\t10\t0,405\t0,549\t0,605\t0,375\t0,222\n\t20\t2,683\t4,733\t2,818\t2,346\t2,209\nTempos Medio (s)\t40\t17,257\t26,271\t13,670\t10,062\t12,103\n\t60\t18,891\t20,321\t20,037\t13,473\t15,001\n\t80\t64,020\t48,808\t49,259\t30,499\t39,717\n\t100\t1942,807\t90,721\t238,077\t75,494\t89,788\n\t10\t0,164\t0,373\t0,343\t0,166\t0,089\n\t20\t0,822\t0,350\t0,756\t0,269\t0,907\ntempo\t40\t8,272\t6,820\t4,726\t2,595\t10,435\n\t60\t6,074\t4,764\t10,700\t3,962\t11,722\n\t80\t54,930\t10,903\t54,326\t12,240\t32,372\n\t100\t2690,993\t45,009\t189,743\t40,712\t122,236\nTabela 8.4: Compara\u00e7\u00e3o dos algoritmos Local Branching em termos de gaps m\u00e9dios (em percentagem) e de tempo medio de execu\u00e7\u00e3o (em segundos) nas inst\u00e2ncias R.\nOs Algoritmos ALB1, ALB3 e ALB4 al\u00e9m de apresentarem as maiores percentagens de solu\u00e7\u00f5es \u00e9timas, tamb\u00e9m s\u00e3o os que apresentam os gaps de melhor qualidade. Quanto aos Algoritmos ALB2 e ALB5 s\u00e3o os que apresentam os gaps de pior qualidade.\nO Algoritmo ALB4 apresenta tempos m\u00e9dios inferiores para inst\u00e2ncias com mais de 40 nodos e os Algoritmos ALB1 e ALB3 apresentam tempos m\u00e9dios mais elevados quando comparados com o Algoritmo ALB4.\nInst\u00e2ncias Euclideanas\nNo gr\u00e1fico da Figura 8.8 apresentam-se as percentagens de solu\u00e7\u00f5es \u00f3timas obtidas em cada um dos algoritmos Local Branching no grupo de inst\u00e2ncias Euclideanas para inst\u00e2ncias at\u00e1 100 nodos.\nFigura 8.8: Percentagem de solu\u00e7\u00f5es \u00f3timas obtidas pelos algoritmos Local Branching nas inst\u00e2ncias\nE.\nOs algoritmos que apresentam maior percentagem de solu\u00e7\u00f5es \u00f3timas s\u00e3o o Algoritmo ALB1 com 83,33% das instancias (25 em 30 inst\u00e2ncias) e o Algoritmo ALB4 com 50% dos casos (16 em 30 inst\u00e2ncias). O Algoritmo ALB3 apresenta 40% de solu\u00e7\u00f5es \u00f3timas que corresponde a 14 inst\u00e2ncias. No Algoritmo ALB5 obt\u00f3m-se 30% de solu\u00e7\u00f5es otimas, mas estas ocorrem apenas em instancias de 10 e 20 nodos (9 em 30 inst\u00e2ncias) e no Algoritmo ALB2 apenas se consegue obter a soluc\u00e7\u00f5ao \u00f3otima em 3 inst\u00e2ancias.\nNa Tabela 8.5 s\u00f5o apresentados os gaps m\u00f3dios, em percentagem, obtidos para cada um dos algoritmos Local Branching propostos e os respetivos desvios padr\u00f5es. Nesta tabela s\u00f5o tamb\u00f3m apresentados os tempos m\u00f3dios de execu\u00e7\u00f5o, em segundos, acompanhados dos correspondentes desvios padroes.\nN\u00bb Nodos\t\tALB1\tALB2\tALB3\tALB4\tALB5\n\t10\t0\t2,180\t0,489\t0\t0\n\t20\t0\t2,875\t1,451\t0,103\t1,705\nGap M\u00e9dio (%)\t40\t0\t4,416\t1,975\t0,121\t2,234\n\t60\t0\t9,303\t0,031\t0,076\t11,600\n\t80\t0,281\t9,154\t0,460\t0,085\t34,397\n\t100\t0,151\t15,792\t0,307\t0,064\t22,105\n\t10\t0\t3,356\t0,547\t0\t0\n\t20\t0\t3,191\t3,045\t0,230\t3,813\n\t40\t0\t3,194\t1,976\t0,268\t3,485\nagap\t60\t0\t6,355\t0,059\t0,126\t8,665\n\t80\t0,409\t3,426\t0,655\t0,153\t29,054\n\t100\t0,207\t3,422\t0,330\t0,069\t26,790\n\t10\t0,885\t2,278\t2,686\t2,689\t0,705\n\t20\t6,520\t14,917\t13,407\t6,845\t6,739\nTempos M\u00e9dio (s)\t40\t88,598\t63,845\t75,011\t29,515\t43,164\n\t60\t3802,020\t62,197\t241,641\t28,979\t75,451\n\t80\t8084,062\t476,787\t1927,288\t44,585\t123,633\n\t100\t9102,888\t319,507\t3471,078\t132,123\t232,832\n\t10\t0,396\t1,204\t1,770\t1,782\t0,478\n\t20\t2,841\t2,271\t3,942\t3,258\t3,214\n^tempo\t40\t71,630\t10,628\t23,181\t7,639\t36,337\n\t60\t4238,789\t28,713\t116,432\t6,311\t41,659\n\t80\t4285,257\t384,109\t1396,524\t6,020\t8,949\n\t100\t2006,389\t272,925\t1169,519\t48,589\t118,691\nTabela 8.5: Compara\u00e7ao dos algoritmos Local Branching em termos de gaps m\u00e9dios (em percentagem) e de tempo medio de execu\u00e7\u00e3o (em segundos) nas inst\u00e2ncias E.\nOs gaps de melhor qualidade s\u00e3o obtidos nos Algoritmos ALB1, ALB3 e ALB4. Sendo os Algoritmos ALB2 e ALB5 os que apresentam os gaps de pior qualidade. A medida que o numero de nodos aumenta, os gaps obtidos nos Algoritmos ALB2 e ALB5 parecem ser de pior qualidade.\nO Algoritmo ALB4 e o mais r\u00e1pido, pois apresenta tempos medios de execu\u00e7\u00e3o inferiores a qualquer um dos outros algoritmos Local Branching para inst\u00e2ncias maiores do que 20 nodos. Os Algoritmos ALB1 e ALB3 apesar de terem gaps medios baixos apresentam tempos medios de execu\u00e7\u00e3o bastante elevados quando comparados com os\ntempos m\u00e9edios de execu\u00e7c\u00e3ao do Algoritmo ALB4.\nS \u00edntese da Compara\u00e7\u00e3o dos v\u00e1rios Algoritmos Local Branching\nDos cinco algoritmos Local Branching apresentados podemos verificar que em todos os grupos de inst\u00e2ncias, o Algoritmo ALB4 se mostrou o mais eficiente, apresentando uma percentagem de soluc\u00f5es \u00e9timas em 83,33% das inst\u00e2ncias testadas (100 em 120 inst\u00e2ncias) e solu\u00e7\u00f5es muito pr\u00e9ximas das \u00e9timas nos restantes casos. Este algoritmo foi tamb\u00e9m considerado o mais r\u00e9pido.\n8.5.3\tResultados Computacionais\nPara avaliar o desempenho da Heur\u00edstica Local Branching vamos comparar, em todas as inst\u00e2ancias, os resultados obtidos pelo Algoritmo ALB4 com os obtidos pelo Algoritmo Branch and Bound do procedimento de introdu\u00e7ao de cortes P-WMTZ+C (Sec\u00e7ao 3.3), o qual ser\u00ed designado por ABB-P-WMTZ+C.\nNas Tabelas 8.6, 8.7, 8.8, 8.9, 8.10, 8.11 e 8.12, a primeira coluna refere-se \u00e0 de-signa\u00e7\u00f5o da inst\u00e2ncia, as tr\u00eas colunas seguintes cont\u00eam o tempo de execu\u00e7\u00f5o (tABB, em segundos), o valor \u00edotimo ou o melhor valor do limite superior obtido (LS ABB) e o gap (em percentagem) e s\u00f5ao referentes ao Algoritmo ABB-P-WMTZ+C. As cinco colunas seguintes cont\u00e2m informa\u00e7\u00f5o sobre o Algoritmo ALB4, uma refere-se \u00e0 solu\u00e7\u00f5o de refer\u00e2ncia obtida inicialmente pela Heur\u00edstica FPB2 apresentada no Cap\u00edtulo 7 (LS Inic.), a seguir temos a solu\u00e7\u00f5o obtida ap\u00eds a aplica\u00e7\u00f5o do Algoritmo ALB4 (LS LB), depois temos o tempo de execuc\u00f5o (tLB, em segundos), a seguir o gap e para finalizar os dados referentes ao Algoritmo ALB4 temos o nu\u00edmero de itera\u00e7c\u00f5oes (Iter.). Por fim, a u\u00edltima coluna apresenta a raz\u00f5ao entre os tempos de execu\u00e7c\u00f5ao do Algoritmo ABB-P-WMTZ+C e do Algoritmo ALB4. Em todas as tabelas, a sigla NFA significa que o limite superior nunca foi atualizado, e neste caso n\u00f5ao foi obtida uma solu\u00e7c\u00f5ao inteira admiss\u00edvel.\n\tABB-P-WMTZ+C\t\t\t\tALB4\t\t\t\t\nInstancia\ttABB\tLS ABB\tGap\tLS Inic.\tLS LB\ttLB\tGap\tIter.\ttABB/tLB\nQC10-1\t0,08\t168\t0\t173\t168\t0,48\t0\t4\t0,16\nQC10-2\t0,22\t364\t0\t385\t364\t0,37\t0\t3\t0,58\nQC10-3\t0,09\t375\t0\t426\t375\t0,41\t0\t3\t0,23\nQC10-4\t0,11\t364\t0\t366\t364\t0,31\t0\t3\t0,35\nQC10-5\t0,09\t581\t0\t641\t581\t0,27\t0\t3\t0,35\nQC10-6\t0,11\t179\t0\t179\t179\t0,30\t0\t2\t0,37\nQC10-7\t0,08\t439\t0\t439\t439\t0,23\t0\t2\t0,33\nQC10-8\t0,13\t577\t0\t637\t577\t0,44\t0\t3\t0,29\nQC10-9\t0,06\t263\t0\t330\t263\t0,73\t0\t5\t0,09\nQC10-10\t0,09\t657\t0\t672\t657\t0,44\t0\t3\t0,21\nQC20-1\t0,92\t1581\t0\t1584\t1581\t1,98\t0\t2\t0,46\nQC20-2\t1,08\t1463\t0\t1473\t1463\t2,86\t0\t3\t0,38\nQC20-3\t1,11\t1364\t0\t1376\t1364\t2,90\t0\t3\t0,38\nQC20-4\t0,70\t674\t0\t678\t674\t1,92\t0\t3\t0,37\nQC20-5\t0,61\t547\t0\t547\t547\t1,59\t0\t2\t0,38\nQC20-6\t1,42\t930\t0\t936\t930\t2,18\t0\t2\t0,65\nQC20-7\t3,57\t1118\t0\t1118\t1118\t1,93\t0\t2\t1,85\nQC20-8\t1,25\t320\t0\t321\t320\t1,75\t0\t2\t0,71\nQC20-9\t1,80\t621\t0\t634\t621\t3,79\t0\t4\t0,47\nQC20-10\t0,80\t1446\t0\t1451\t1446\t2,78\t0\t3\t0,29\nQC40-1\t29,78\t1909\t0\t1940\t1909\t17,24\t0\t4\t1,73\nQC40-2\t49,46\t913\t0\t914\t913\t16,86\t0\t4\t2,93\nQC40-3\t34,68\t1155\t0\t1158\t1156\t29,89\t0,09\t6\t1,16\nQC40-4\t88,17\t776\t0\t778\t778\t13,93\t0,26\t3\t6,33\nQC40-5\t25,79\t2008\t0\t2009\t2008\t16,84\t0\t4\t1,53\nQC40-6\t28,50\t1436\t0\t1446\t1436\t17,90\t0\t4\t1,59\nQC40-7\t101,52\t1728\t0\t1731\t1728\t22,90\t0\t5\t4,43\nQC40-8\t17,24\t1922\t0\t1922\t1922\t13,88\t0\t3\t1,24\nQC40-9\t14,57\t1642\t0\t1662\t1642\t20,89\t0\t5\t0,70\nQC40-10\t27,00\t786\t0\t797\t797\t29,71\t1,40\t6\t0,91\nTabela 8.6: Compara\u00e7\u00e3o entre os Algoritmos ALB4 e ABB-P-WMTZ+C nas inst\u00e2ncias QC de 10 a 40 nodos.\nInstancia\t\u00cdABB\tLS ABB\tGap\tLS Inic.\tLS LB\t\u00cdLB\tGap\tIter.\ttABB /\u00cdLB\nQC60-1\t473,32\t1619\t0\t1620\t1619\t30,91\t0\t4\t15,31\nQC60-2\t610,76\t2944\t0\t2944\t2944\t16,89\t0\t2\t36,17\nQC60-3\t554,47\t3462\t0\t3462\t3462\t20,89\t0\t3\t26,54\nQC60-4\t1250,20\t2144\t0\t2144\t2144\t20,84\t0\t3\t59,98\nQC60-5\t214,40\t2994\t0\t2994\t2994\t20,88\t0\t3\t10,27\nQC60-6\t201,09\t1785\t0\t1785\t1785\t19,95\t0\t3\t10,08\nQC60-7\t783,40\t2092\t0\t2093\t2092\t30,83\t0\t4\t25,41\nQC60-8\t414,74\t1486\t0\t1487\t1486\t26,99\t0\t3\t15,37\nQC60-9\t603,67\t2442\t0\t2443\t2442\t30,77\t0\t4\t19,62\nQC60-10\t66,16\t2138\t0\t2138\t2138\t21,04\t0\t3\t3,14\nQC80-1\t4605,26\t1769\t0\t1769\t1769\t36,71\t0\t2\t125,44\nQC80-2\t3618,29\t3318\t0\t3320\t3318\t51,92\t0\t3\t69,69\nQC80-3\t2102,42\t1661\t0\t1662\t1661\t54,86\t0\t4\t38,32\nQC80-4\t731,77\t4759\t0\t4759\t4759\t43,82\t0\t3\t16,70\nQC80-5\t1423,68\t1283\t0\t1284\t1283\t55,87\t0\t3\t25,48\nQC80-6\t7280,10\t2686\t0\t2690\t2686\t62,86\t0\t4\t115,82\nQC80-7\t1915,78\t3751\t0\t3751\t3751\t31,81\t0\t2\t60,23\nQC80-8\t393,61\t1959\t0\t1960\t1959\t53,18\t0\t3\t7,40\nQC80-9\t1255,06\t2382\t0\t2385\t2382\t63,62\t0\t4\t19,73\nQC80-10\t2024,72\t1962\t0\t1963\t1962\t55,81\t0\t3\t36,28\nQC100-1\t10801,10\t5410\t0\t5596\t5410\t126,88\t0\t4\t85,13\nQC100-2\t10800,90\t4539\t0\t4539\t4539\t86,74\t0\t3\t124,52\nQC100-3\t10800,80\t2840\t0\t2840\t2840\t86,13\t0\t3\t125,40\nQC100-4\t10800,60\t4153\t0\t4153\t4153\t89,20\t0\t3\t121,08\nQC100-5\t10801,00\t3723\t0\t3723\t3723\t86,24\t0\t3\t125,25\nQC100-6\t10800,80\t4666\t0\t4815\t4666\t126,72\t0\t4\t85,23\nQC100-7\t10800,70\t4981\t0\t4981\t4981\t85,87\t0\t3\t125,78\nQC100-8\t10801,10\t5213\t0\t5214\t5213\t126,69\t0\t4\t85,26\nQC100-9\t10800,90\t4240\t0\t4240\t4240\t85,91\t0\t3\t125,73\nQC100-10\t8758,11\t2086\t0\t2086\t2086\t85,95\t0\t3\t101,90\nTabela 8.7: Compara\u00e7\u00e3o entre os Algoritmos ALB4 e ABB-P-WMTZ+C nas instancias QC de 60 a 100 nodos.\nInstancia\t\u00cdABB\tLS ABB\tGap\tLS Inic.\tLS LB\ttLB\tGap\tIter.\ttABB/tLB\nQC150-1\t10802,40\t9251\t0\t9251\t9251\t141,78\t0\t3\t76,19\nQC150-2\t10802,60\t5365\t0\t5366\t5365\t223,62\t0\t5\t48,31\nQC150-3\t10806,30\t1987\t0\t2026\t1987\t211,99\t0\t4\t50,98\nQC150-4\t10806,40\t8173\t0\t8372\t8173\t212,55\t0\t4\t50,84\nQC150-5\t10803,30\t5768\t0\t5957\t5768\t202,20\t0\t4\t53,43\nQC150-6\t10805,80\t5616\t0\t5616\t5616\t138,78\t0\t3\t77,87\nQC150-7\t10805,80\t5138\t0\t5138\t5138\t141,19\t0\t3\t76,53\nQC150-8\t10802,60\t7146\t0\t7146\t7146\t138,82\t0\t3\t77,82\nQC150-9\t10807,00\t5801\t0\t5803\t5801\t204,03\t0\t4\t52,97\nQC150-10\t10803,90\t8094\t0\t8094\t8094\t146,13\t0\t3\t73,94\nQC200-1\t10811,00\t8949\t0\t8949\t8949\t197,84\t0\t3\t54,64\nQC200-2\t10816,90\t10462\t0\t10564\t10462\t292,60\t0\t4\t36,97\nQC200-3\t10818,00\t14814\t0\t15327\t14814\t481,79\t0\t7\t22,45\nQC200-4\t10815,10\t12639\t0\t12824\t12639\t597,70\t0\t7\t18,09\nQC200-5\t10806,50\t10437\t0\t10437\t10437\t208,33\t0\t3\t51,87\nQC300-1\t10864,10\t5562\t0\t5680\t5562\t442,19\t0\t4\t24,57\nQC300-2\t10825,50\t26842\t0\t27006\t26842\t944,77\t0\t9\t11,46\nQC300-3\t10857,70\t28018\t0,02\t28012\t28012\t679,32\t0\t6\t15,98\nQC300-4\t10866,30\t6602\t0\t6696\t6602\t686,95\t0\t6\t15,82\nQC300-5\t10921,10\t11383\t0\t11595\t11595\t689,94\t1,86\t6\t15,83\nQC400-1\t10860,00\t7138\t0\t7282\t7138\t1796,03\t0\t8\t6,05\nQC400-2\t10938,60\t16336\t0\t16475\t16336\t1398,10\t0\t6\t7,82\nQC400-3\t10915,90\t6623\t0\t6685\t6623\t1606,16\t0\t7\t6,80\nQC400-4\t10873,30\t7168\t0\t7216\t7168\t1409,06\t0\t6\t7,72\nQC400-5\t11059,50\t22095\t0\t22095\t22095\t1418,17\t0\t6\t7,80\nQC500-1\t10924,50\t14513\t0\t14667\t14513\t3429,02\t0\t6\t3,19\nQC500-2\t11079,30\t32723\t0,45\t32575\t32575\t4204,46\t0\t6\t2,64\nQC500-3\t11270,60\t25041\t0\t25876\t25041\t3501,10\t0\t7\t3,22\nQC500-4\t11033,50\t37829\t0\t38020\t37829\t3535,20\t0\t6\t3,12\nQC500-5\t10979,10\t29198\t0,01\t29315\t29194\t3451,37\t0\t6\t3,18\nQC1000-1\t11690,10\tNFA\t\u2014\t77132\t75948\t9883,74\t0\t9\t1,18\nQC1000-2\t12766,60\tNFA\t\u2014\t33224\t32704\t10002,10\t0\t9\t1,28\nQC1000-3\t11872,10\tNFA\t\u2014\t51310\t50127\t9909,95\t0\t8\t1,20\nQC1000-4\t12109,60\tNFA\t\u2014\t57844\t57844\t7963,73\t0\t6\t1,52\nQC1000-5\t11505,10\t96038\t0\t97438\t96213\t9509,04\t0,18\t8\t1,21\nTabela 8.8: Compara\u00e7\u00e3o entre os Algoritmos ALB4 e ABB-P-WMTZ+C nas inst\u00e2ncias QC de 150 a 1000 nodos.\nInstancia\t\u00cdABB\tLS ABB\tGap\tLS Inic.\tLS LB\t\u00cdLB\tGap\tIter.\t\u00cdABB /\u00cdLB\nR10-1\t0,062\t19304\t0\t19949\t19304\t0,219\t0\t3\t0,28\nR10-2\t0,234\t20759\t0\t20759\t20759\t0,171\t0\t2\t1,37\nR10-3\t0,046\t15222\t0\t15603\t15603\t0,499\t2,503\t3\t0,09\nR10-4\t0,219\t19552\t0\t21378\t19552\t0,515\t0\t3\t0,43\nR10-5\t0,374\t29405\t0\t30586\t29405\t0,469\t0\t3\t0,80\nR20-1\t1,014\t32055\t0\t32705\t32055\t2,216\t0\t3\t0,46\nR20-2\t1,919\t32340\t0\t32655\t32340\t2,558\t0\t3\t0,75\nR20-3\t0,452\t33366\t0\t34872\t33366\t2,465\t0\t3\t0,18\nR20-4\t0,657\t31835\t0\t33500\t31835\t2,558\t0\t4\t0,26\nR20-5\t1,623\t30040\t0\t34149\t30040\t1,935\t0\t3\t0,84\nR40-1\t4,509\t27601\t0\t28230\t27601\t9,766\t0\t3\t0,46\nR40-2\t3,681\t39903\t0\t41165\t39903\t13,277\t0\t3\t0,28\nR40-3\t5,725\t28096\t0\t29522\t28096\t11,762\t0\t3\t0,49\nR40-4\t2,573\t28469\t0\t28588\t28469\t8,970\t0\t3\t0,29\nR40-5\t4,18\t32022\t0\t32912\t32022\t6,536\t0\t3\t0,64\nR60-1\t4,509\t39507\t0\t40078\t39507\t10,390\t0\t3\t0,43\nR60-2\t6,069\t30675\t0\t30956\t30675\t12,262\t0\t3\t0,49\nR60-3\t6,928\t31328\t0\t31399\t31328\t13,356\t0\t3\t0,52\nR60-4\t7,27\t44299\t0\t45659\t44299\t20,265\t0\t4\t0,36\nR60-5\t5,026\t33088\t0\t33387\t33088\t11,092\t0\t3\t0,45\nR80-1\t15,194\t33196\t0\t33571\t33196\t22,277\t0\t3\t0,68\nR80-2\t16,177\t45697\t0\t46030\t45697\t52,089\t0\t3\t0,31\nR80-3\t12,416\t39223\t0\t40640\t39223\t24,087\t0\t3\t0,52\nR80-4\t11,169\t49269\t0\t49374\t49269\t27,316\t0\t3\t0,41\nR80-5\t16,288\t33313\t0\t33926\t33313\t26,724\t0\t3\t0,61\nR100-1\t12,9\t26575\t0\t26742\t26575\t110,965\t0\t4\t0,12\nR100-2\t28,799\t1939\t0\t1951\t1940\t101,438\t0,052\t3\t0,28\nR100-3\t23,103\t2257\t0\t2273\t2257\t21,138\t0\t3\t1,09\nR100-4\t16,803\t10300\t0\t10372\t10300\t66,115\t0\t3\t0,25\nR100-5\t21,812\t3763\t0\t3766\t3763\t77,816\t0\t3\t0,28\nR150-1\t120,09\t2265\t0\t2281\t2265\t205,487\t0\t5\t0,58\nR150-2\t97,233\t32853\t0\t33070\t32864\t119,189\t0,033\t3\t0,82\nR150-3\t49,048\t32838\t0\t32873\t32838\t126,974\t0\t3\t0,39\nR150-4\t67,835\t29144\t0\t29708\t29708\t311,634\t1,935\t6\t0,22\nR150-5\t141,153\t13103\t0\t13172\t13103\t113,324\t0\t3\t1,25\nTabela 8.9: Compara\u00e7\u00e3o entre os Algoritmos ALB4 e ABB-P-WMTZ+C nas inst\u00e2ncias R de 10 a\n150 nodos.\n\tABB-P-WMTZ+C\t\t\t\t\tALB4\t\t\t\nInstancia\t\u00cdABB\tLS ABB\tGap\tLS Inic.\tLS LB\t\u00cdLB\tGap\tIter.\t\u00cdABB /\u00cdLB\nR200-1\t162,058\t38935\t0\t39358\t38935\t190,902\t0\t3\t0,85\nR200-2\t133,637\t39161\t0\t39237\t39190\t335,644\t0,074\t5\t0,40\nR200-3\t618,244\t4216\t0\t4236\t4217\t322,948\t0,024\t5\t1,91\nR200-4\t477,987\t13503\t0\t13600\t13503\t355,444\t0\t5\t1,34\nR200-5\t161,012\t14638\t0\t14666\t14638\t291,675\t0\t4\t0,55\nR300-1\t2696,66\t40936\t0\t41062\t40956\t821,275\t0,049\t7\t3,28\nR300-2\t2280,974\t44684\t0\t44748\t44748\t714,641\t0,143\t6\t3,19\nR300-3\t733,738\t41486\t0\t41704\t41704\t705,510\t0,525\t6\t1,04\nR300-4\t1007,47\t14795\t0\t14826\t14804\t744,381\t0,061\t7\t1,35\nR300-5\t1112,231\t13656\t0\t13881\t13661\t651,648\t0,037\t6\t1,71\nR400-1\t2607,21\t100652\t0\t100754\t100754\t1496,020\t0,101\t6\t1,74\nR400-2\t3506,99\t14449\t0\t14486\t14486\t1367,210\t0,256\t6\t2,57\nR400-3\t2249,23\t16428\t0\t16457\t16457\t1350,430\t0,177\t6\t1,67\nR400-4\t2231,39\t14915\t0\t14915\t14915\t1305,650\t0\t6\t1,71\nR400-5\t2547,54\t42765\t0\t42846\t42846\t1512,790\t0,189\t6\t1,68\nR500-1\t5425,43\t46254\t0\t46421\t46421\t2969,630\t0,361\t6\t1,83\nR500-2\t12598,78\t48269\t0\t48385\t48273\t2004,380\t0,008\t4\t6,29\nR500-3\t10318,92\t53763\t0\t53944\t53944\t2998,650\t0,337\t6\t3,44\nR500-4\t10075,06\t46892\t0\t46942\t46892\t1583,560\t0\t3\t6,36\nR500-5\t7708,52\t47654\t0\t47681\t47654\t2232,740\t0\t5\t3,45\nR1000-1\t20451,42\tNFA\t\u2014\t4812\t4812\t10999,400\t0\t5\t1,86\nR1000-2\t13308,52\t105880\t0,150\t105721\t105721\t10991,700\t0\t5\t1,21\nR1000-3\t19643,35\t29176\t0\t29191\t29191\t10075,100\t0,051\t3\t1,95\nR1000-4\t18787,51\t57917\t0\t57987\t57987\t10851,500\t0,121\t5\t1,73\nR1000-5\t15992,69\t101608\t0\t101796\t101796\t11125,800\t0,185\t5\t1,44\nTabela 8.10: Compara\u00e7\u00e3o entre os Algoritmos ALB4 e ABB-P-WMTZ+C nas inst\u00e2ncias R de 200 a 1000 nodos.\nInst\u00e2ancia\ttABB\tLS ABB\tGap\tLS Inic.\tLS LB\ttLB\tGap\tIter.\ttABB/tLB\nE10-1\t0,09\t39983\t0\t43179\t39983\t2,64\t0\t4\t0,04\nE10-2\t0,03\t36919\t0\t39701\t36919\t1,00\t0\t4\t0,03\nE10-3\t0,09\t35208\t0\t35208\t35208\t5,66\t0\t6\t0,02\nE10-4\t0,17\t26287\t0\t28252\t26287\t1,73\t0\t4\t0,10\nE10-5\t0,16\t41242\t0\t42631\t41242\t2,42\t0\t3\t0,06\nE20-1\t0,61\t53456\t0\t56494\t53456\t7,89\t0\t5\t0,08\nE20-2\t0,17\t89486\t0\t89486\t89486\t12,04\t0\t6\t0,01\nE20-3\t1,59\t60017\t0\t62793\t60017\t5,29\t0\t4\t0,30\nE20-4\t0,81\t56543\t0\t56784\t56543\t5,18\t0\t5\t0,16\nE20-5\t1,28\t60426\t0\t60737\t60737\t3,82\t0,515\t3\t0,33\nE40-1\t6,41\t98041\t0\t99458\t98041\t22,23\t0\t4\t0,29\nE40-2\t7,08\t109750\t0\t111660\t109750\t29,22\t0\t3\t0,24\nE40-3\t4,74\t129062\t0\t131866\t129068\t22,90\t0,005\t3\t0,21\nE40-4\t5,66\t125203\t0\t128282\t125955\t32,39\t0,601\t5\t0,17\nE40-5\t4,09\t116579\t0\t118884\t116579\t40,84\t0\t6\t0,10\nE60-1\t11,75\t171935\t0\t175244\t171944\t34,45\t0,005\t4\t0,34\nE60-2\t11,36\t175895\t0\t176782\t175895\t36,21\t0\t3\t0,31\nE60-3\t7,85\t158736\t0\t158869\t158869\t20,81\t0,084\t3\t0,38\nE60-4\t10,62\t181475\t0\t182212\t181475\t27,02\t0\t4\t0,39\nE60-5\t20,22\t160581\t0\t161895\t161052\t26,41\t0,293\t4\t0,77\nE80-1\t29,89\t253121\t0\t255889\t253187\t36,71\t0,026\t4\t0,81\nE80-2\t29,27\t289283\t0\t289563\t289312\t50,36\t0,010\t4\t0,58\nE80-3\t61,28\t262485\t0\t265002\t262531\t48,03\t0,018\t4\t1,28\nE80-4\t42,79\t257653\t0\t258593\t258575\t48,20\t0,358\t4\t0,89\nE80-5\t42,35\t271514\t0\t272509\t271549\t39,62\t0,013\t4\t1,07\nE100-1\t78,61\t13353\t0\t13421\t13361\t113,07\t0,060\t4\t0,70\nE100-2\t98,70\t30933\t0\t30969\t30933\t93,96\t0\t4\t1,05\nE100-3\t166,30\t14035\t0\t14054\t14044\t85,66\t0,064\t4\t1,94\nE100-4\t102,98\t34434\t0\t34551\t34495\t190,69\t0,177\t6\t0,54\nE100-5\t135,39\t24768\t0\t25192\t24773\t177,23\t0,020\t5\t0,76\nE150-1\t340,16\t16386\t0\t16418\t16388\t145,13\t0,012\t4\t2,34\nE150-2\t502,74\t16589\t0\t16604\t16590\t168,75\t0,006\t4\t2,98\nE150-3\t791,48\t17313\t0\t17341\t17313\t178,85\t0\t4\t4,43\nE150-4\t560,61\t16725\t0\t16795\t16734\t207,46\t0,054\t5\t2,70\nE150-5\t730,79\t15709\t0\t15796\t15710\t205,33\t0,006\t5\t3,56\nTabela 8.11: Comparac\u00e3o entre os Algoritmos ALB4 e ABB-P-WMTZ+C nas instancias E de 10 a\n150 nodos.\nInstancia\t\u00cdABB\tLS ABB\tGap\tLS Inic.\tLS LB\t\u00cdLB\tGap\tIter.\t\u00cdABB /\u00cdLB\nE200-1\t1529,04\t20425\t0\t20472\t20439\t402,12\t0,069\t6\t3,80\nE200-2\t2801,89\t18888\t0\t19027\t18890\t241,72\t0,011\t4\t11,59\nE200-3\t1558,63\t20911\t0\t20978\t20925\t288,27\t0,067\t5\t5,41\nE200-4\t1078,38\t20177\t0\t20245\t20177\t235,56\t0\t4\t4,58\nE200-5\t2558,41\t19592\t0\t19668\t19593\t402,56\t0,005\t6\t6,36\nE300-1\t10040,98\t24996\t0\t25077\t24996\t875,38\t0\t4\t11,47\nE300-2\t16316,11\t26276\t0\t26303\t26290\t1358,79\t0,053\t6\t12,01\nE300-3\t9070,20\t24802\t0\t24840\t24812\t1139,88\t0,040\t5\t7,96\nE300-4\t14695,34\t25781\t0\t25897\t25784\t1160,76\t0,012\t5\t12,66\nE300-5\t11720,18\t25241\t0\t25257\t25244\t1490,32\t0,012\t6\t7,86\nE400-1\t27871,23\t32985\t11,128\t29723\t29682\t1447,26\t0\t5\t19,26\nE400-2\t68388,10\t32577\t13,933\t28536\t28536\t2513,43\t0,126\t6\t27,21\nE400-3\t21454,16\t37056\t21,094\t30601\t30601\t2510,20\t0\t6\t8,55\nE400-4\t19547,89\t33652\t12,196\t29994\t29994\t2560,37\t0\t6\t7,63\nE400-5\t18255,85\t33376\t9,530\t30472\t30472\t2520,09\t0\t6\t7,24\nE500-1\t30927,90\t41192\t24,681\t33048\t33038\t4523,01\t0\t7\t6,84\nE500-2\t30892,30\tNFA\t\u2014\t33619\t33558\t3872,91\t0\t6\t7,98\nE500-3\t31087,70\tNFA\t\u2014\t33823\t33823\t4706,75\t0\t6\t6,60\nE500-4\t14224,57\tNFA\t\u2014\t32382\t32382\t4765,20\t0\t6\t2,99\nE500-5\t30922,60\tNFA\t\u2014\t34509\t34509\t4785,43\t0\t6\t6,46\nE1000-1\t31034,00\tNFA\t\u2014\t49045\t49045\t10825,90\t0\t4\t2,87\nE1000-2\t31048,30\tNFA\t\u2014\t47061\t47061\t10818,20\t0\t4\t2,87\nE1000-3\t30967,00\tNFA\t\u2014\t48947\t48947\t10852,80\t0\t4\t2,85\nE1000-4\t31112,40\tNFA\t\u2014\t48981\t48981\t10830,30\t0\t4\t2,87\nE1000-5\t31194,80\tNFA\t\u2014\t48172\t48172\t10838,10\t0\t4\t2,88\nTabela 8.12: Compara\u00e7\u00e3o entre os Algoritmos ALB4 e ABB-P-WMTZ+C nas inst\u00e2ncias E de 200 a 1000 nodos.\nInst\u00e2ncias Quase Caminhos\nNas inst\u00e2ncias Quase Caminhos com o Algoritmo ALB4 s\u00e3o obtidos 94,74% de gaps nulos, o que corresponde a 90 instancias em 95 testadas. Em 7 inst\u00e2ncias, o valor do custo da solu\u00e7\u00e3o obtida atrav\u00e9s do Algoritmo ALB4 \u00e9 de melhor qualidade comparativamente ao valor do custo da solu\u00e7\u00e3o obtida atrav\u00e9s do Algoritmo ABB-P-WMTZ+C (os custos dessas inst\u00e2ncias encontram-se a negrito na Tabela 8.8).\nCom o Algoritmo ALB4 foi sempre poss\u00edvel encontrar um limite superior para o valor do custo, enquanto que atrav\u00e9s do Algoritmo ABB-P-WMTZ+C n\u00e3o foi poss\u00edvel, no tempo imposto, obter um limite superior para o valor do custo em quatro inst\u00e2ancias de 1000 nodos (QC1000-1, QC1000-2, QC1000-3 e QC1000-4).\nEm 63,16% das inst\u00e2ncias (60 em 95 inst\u00e2ncias) atraves da aplicac\u00e3o do Algoritmo ALB4 \u00e9 obtida uma solu\u00e7\u00e3o de melhor qualidade do que a obtida atrav\u00e9s da Heur\u00edstica FPB2. Das 35 inst\u00e2ncias onde n\u00e3o h\u00e1 melhoramento ao aplicar o Algoritmo ALB4, em 32 inst\u00e2ncias usando a Heur\u00edstica FPB2 j\u00e9 era poss\u00e9vel obter a solu\u00e7ao \u00e9tima.\nOs tempos de execu\u00e7\u00e3o do Algoritmo ALB4 s\u00e3o inferiores aos tempos de execu\u00e7ao do Algoritmo ABB-P-WMTZ+C em 77,89% das inst\u00e2ncias (74 inst\u00e2ncias em 95). Os tempos de execu\u00e7c\u00e3ao do Algoritmo ALB4 s\u00e3ao inferiores na inst\u00e2ancia QC20-7, em quase todas as insta\u00e2ncias de 40 nodos e em todas as inst\u00e2ancias com mais de 40 nodos.\nInst\u00e2ncias Aleatorias\nNas instancias Aleat\u00e9rias com o Algoritmo ALB4 s\u00e3o obtidos 65% de gaps nulos, o que corresponde a 39 inst\u00e2ancias em 60 testadas. Em apenas 2 inst\u00e2ancias, o valor do custo da soluc\u00e7\u00e3ao obtida atrav\u00e9es do Algoritmo ALB4 \u00e9e de melhor qualidade comparativamente ao valor do custo da soluc\u00e7\u00e3ao obtida atrav\u00e9es do Algoritmo ABB-P-WMTZ+C (os custos dessas inst\u00e2ncias encontram-se a negrito na Tabela 8.10).\nCom o Algoritmo ALB4 foi sempre poss\u00e9vel encontrar um limite superior para o valor do custo, enquanto que atrav\u00e9es do Algoritmo ABB-P-WMTZ+C n\u00e3ao foi poss\u00e9vel, no tempo imposto, obter um limite superior para o valor do custo numa inst\u00e2ancia de 1000 nodos (R1000-1).\nAs solu\u00e7c\u00e3oes obtidas atrav\u00e9es da aplica\u00e7c\u00e3ao do Algoritmo ALB4 s\u00e3ao de melhor qualidade comparativamente \u00e0s solu\u00e7\u00e3es obtidas atrav\u00e9s da Heur\u00edstica FPB2 em 73,33% das inst\u00e2ancias (44 em 60 inst\u00e2ancias). Nas insta\u00e2ncias onde n\u00e3ao h\u00e9a melhoramento (17 inst\u00e2ancias) ao aplicar o Algoritmo ALB4, em 4 delas usando a Heur\u00e9stica FPB2 j\u00e9a era\nposs\u00f3vel obter a solu\u00e7ao \u00f3tima (R10-2, R400-4, R1000-1 e R1000-2).\nOs tempos de execu\u00e7\u00e3o do Algoritmo ALB4 s\u00e3o inferiores aos tempos de execu\u00e7\u00e3o do Algoritmo ABB-P-WMTZ+C em 41,67% das inst\u00eancias (25 em 60 inst\u00eancias). Os tempos de execu\u00e7ao do Algoritmo ALB4 s\u00e3o inferiores nas inst\u00eancias R10-2, R100-3, R150-5, R200-3 e R200-4 e em todas as inst\u00eaancias com mais de 200 nodos.\nInst\u00e2ncias Euclideanas\nNas inst\u00eancias Euclideanas com o Algoritmo ALB4 s\u00e3o obtidos 53,33% de gaps nulos, o que corresponde a 32 inst\u00eaancias em 60 testadas. Podemos observar que em 15 insta\u00eancias, o valor do custo da solu\u00e7ca\u00e3o obtida atrav\u00f3es do Algoritmo ALB4 \u00f3e de melhor qualidade comparativamente ao valor do custo da solu\u00e7ca\u00e3o obtida atrav\u00f3es do Algoritmo ABB-P-WMTZ+C (os custos dessas instancias encontram-se a negrito na Tabela 8.12).\nCom o Algoritmo ALB4 foi sempre poss\u00f3vel encontrar um limite superior para o valor do custo, enquanto que atrav\u00f3es do Algoritmo ABB-P-WMTZ+C na\u00e3o foi poss\u00f3vel, no tempo imposto, obter um limite superior para o valor do custo em 9 inst\u00eaancias, sendo estas de 500 e 1000 nodos. Em todas as inst\u00eancias de 400 nodos e numa de 500 nodos os limites superiores obtidos atrav\u00f3es do Algoritmo ABB-P-WMTZ+C na\u00e3o s\u00e3ao de boa qualidade dado que os gaps obtidos s\u00e3o bastante elevados.\nAs solu\u00e7c\u00e3oes obtidas atrav\u00f3es da aplica\u00e7c\u00e3ao do Algoritmo ALB4 sa\u00e3o de melhor qualidade comparativamente as soluc\u00e3es obtidas atrav\u00e9s da Heur\u00edstica FPB2 em 71,67% das inst\u00eaancias (43 em 60 inst\u00eaancias). Nas insta\u00eancias onde n\u00e3ao ha\u00f3 melhoramento (17 inst\u00eaancias), ao aplicar o Algoritmo ALB4, em 12 delas usando a Heur\u00f3stica FPB2 j\u00f3a era poss\u00f3vel obter a soluc\u00e7\u00e3ao \u00f3otima.\nOs tempos de execu\u00e7c\u00e3ao do Algoritmo ALB4 s\u00e3ao inferiores aos tempos de execu\u00e7c\u00e3ao do Algoritmo ABB-P-WMTZ+C em 56,67% das inst\u00eancias (34 em 60 inst\u00eancias). Os tempos de execuc\u00e7\u00e3ao do Algoritmo ALB4 s\u00e3ao inferiores nas insta\u00eancias E80-3, R80-5, R100-2 e R100-3 e em todas as inst\u00eaancias com mais de 100 nodos.\n8.5.4\tS\u00edntese dos Resultados Computacionais\nDe todos os algoritmos Local Branching propostos verific\u00e9mos atrav\u00e9s da Subsecc\u00e3o 8.5.2 que em todos os grupos de inst\u00e2ncias at\u00e9 100 nodos, o Algoritmo ALB4 se mostrou\no mais eficiente.\nEm 61,86% das inst\u00e2ncias (133 em 215 instancias), os tempos obtidos atrav\u00e9s da utiliza\u00e7\u00e3o do Algoritmo ALB4 sao inferiores aos tempos obtidos atrav\u00e9s do Algoritmo ABB-P-WMTZ+C. Verificamos tamb\u00e9m que para inst\u00e2ncias Quase Caminhos com mais do que 40 nodos, inst\u00e2ncias Aleat\u00f3rias com mais do que 200 nodos e inst\u00e2ncias Euclideanas com mais do que 100 nodos, o Algoritmo ALB4 \u00e9 mais r\u00e1pido do que o Algoritmo ABB-P-WMTZ+C e as soluc\u00e3es encontradas s\u00e3o de boa qualidade, pois s\u00e3o obtidos 75,34% de gaps nulos (162 em 215 inst\u00e2ncias). Com a aplica\u00e7\u00e3o do Algoritmo ALB4 obt\u00eam-se melhoramentos em 68,37% das inst\u00e2ncias (147 em 215 inst\u00e2ncias) comparativamente a aplica\u00e7\u00e3o da Heur\u00edstica FPB2.\nCap\u00edtulo 9\nConsidera\u00e7\u00f5es Finais\nAo longo desta tese abord\u00e1amos v\u00e1arios m\u00e1etodos para resolver o Problema WMST, entre os quais o m\u00e1todo Branch and Bound e Branch and Cut atrav\u00e1s do uso de formula\u00e7c\u00e3oes e procedimentos de introdu\u00e7c\u00e3ao de cortes usando separa\u00e7c\u00e3ao, os m\u00e1etodos de relaxac\u00e7\u00e3ao linear e Lagrangeana, m\u00e1etodos de gera\u00e7ca\u00e3o e introdu\u00e7c\u00e3ao de desigualdades v\u00e1lidas nas formula\u00e7\u00f5es usando separac\u00e3o e por fim os m\u00e1todos Feasibility Pump e Local Branching.\nNo Cap\u00e1tulo 3 come\u00e7\u00e1mos por apresentar e comparar do ponto vista computacional va\u00e1rias formulac\u00e7\u00e3oes para o Problema WMST. Das va\u00e1rias compara\u00e7co\u00e3es efetuadas resulta que, para os tr\u00e2es grupos de insta\u00e2ncias em estudo: Quase Caminhos, Aleat\u00e1orias e Euclideanas, o procedimento com introdu\u00e7\u00e3o de cortes, que se aplica para fortalecer a formulac\u00e3o baseada nas desigualdades WMTZ (Procedimento P-WMTZ+C), \u00e1 o que apresenta melhores resultados na obten\u00e7c\u00e3ao da solu\u00e7c\u00e3ao o\u00e1tima ou de uma solu\u00e7c\u00e3ao admiss\u00e1vel para o valor o\u00e1timo. Para todas as formula\u00e7c\u00e3oes apresentadas no Cap\u00e1tulo 3, obtiveram-se tamb\u00e1em os valores da relaxa\u00e7c\u00e3ao linear. Os limites inferiores de melhor qualidade sao os obtidos atrav\u00e1s da relaxa\u00e7ao linear do Procedimento P-WMTZ+C.\nUma outra forma de encontrar limites inferiores e superiores para o valor \u00e1timo do Problema WMST, foi apresentada no Cap\u00e1tulo 4 com a implementa\u00e7c\u00e3ao de algoritmos baseados em relaxa\u00e7ca\u00e3o Lagrangeana. Os Algoritmos Alg2, Alg5, Alg6 e Alg7 mostraram-se bastante eficientes em todos os grupos de inst\u00e2ancias, pois com a aplica\u00e7c\u00e3ao destes algoritmos foi poss\u00e1vel obter, rapidamente, algumas soluc\u00e7\u00e3oes \u00e1otimas e outras muito pro\u00e1ximas das o\u00e1timas. Podemos dizer que os valores obtidos pela relaxa\u00e7c\u00e3ao La-grangeana dos Algoritmos Alg2, Alg5 e Alg6, em geral, s\u00e3ao iguais aos valores obtidos\npela relaxa\u00e7\u00e3o linear do Procedimento P-WMTZ+C apresentado no Cap\u00edtulo 3. O Algoritmo Alg7, onde s\u00e3o inclu\u00eddas desigualdades v\u00e1lidas \u00ed o que apresenta melhores limites inferiores.\nNo Cap\u00edtulo 5 foram apresentadas apenas classes de desigualdades validas e no Cap\u00edtulo 6 foram apresentados algoritmos heur\u00edsticos de separa\u00e7ao para gerar e introduzir as desigualdades v\u00edlidas do Cap\u00edtulo 5 nas formula\u00e7\u00e3es apresentadas no Cap\u00edtulo 3 de modo a fortalec\u00ea-las. De experi\u00eancias computacionais realizadas com os v\u00edrios algoritmos heur\u00edsticos de separa\u00e7ao, num grupo de inst\u00eancias teste, resulta que os algoritmos que utilizam a introdu\u00e7\u00e3o das Desigualdades Impl\u00edcita Levantada e das Desigualdades Impl\u00edcita Levantada por Down-Lifting sao os que apresentam os melhores resultados. Verificou-se ainda que ao testar inst\u00eancias de maior dimensao o procedimento de gera\u00e7ao e introdu\u00e7\u00e3o de Desigualdades Impl\u00edcita Levantada por Down-Lifting \u00ede o melhor para utilizac\u00e7\u00e3ao na pra\u00edtica.\nCom o objetivo de obter solu\u00e7\u00e3es inteiras admiss\u00edveis para o Problema WMST apresent\u00edmos no Cap\u00edtulos 7 heur\u00edsticas Feasibility Pump. Nas inst\u00eancias Aleat\u00edrias e Euclideanas, a Heur\u00edstica FPB2 \u00ed a que encontra solu\u00e7\u00e3es admiss\u00edveis de melhor qualidade e mais rapidamente quando comparada com as restantes Heur\u00edsticas Fesibility Pump propostas e tamb\u00edm quando comparada com a Heur\u00edstica do Xpress aplicada ao nodo raiz utilizando a Formula\u00e7\u00e3o WMTZ (HXNR) e com a primeira solu\u00e7\u00e3o inteira admiss\u00edvel obtida pelo solver do software Xpress atrav\u00eds da Formulac\u00e3o WMTZ, quando usa o procedimento Branch and Bound (PSIABB). No caso das inst\u00eancias Quase Caminhos, a mais r\u00e1pida \u00ed a Heur\u00edstica HXNR, mas em termos de qualidade das solu\u00e7c\u00e3oes encontradas, esta na\u00e3o apresenta bons resultados quando comparada com a Heur\u00edstica FPB2.\nUm outro m\u00edtodo heur\u00edstico tratado no Cap\u00edtulo 8 e bastante eficiente para ins-t\u00eaancias de maiores dimenso\u00e3es \u00ede baseado no M\u00edetodo Local Branching. De todos os algoritmos Local Branching propostos verifica\u00edmos que em todos os grupos de inst\u00eaancias, o Algoritmo que se mostrou o mais eficiente foi o ALB4. Este algoritmo utiliza como soluc\u00e7\u00e3ao de refer\u00eaencia inicial a solu\u00e7ca\u00e3o inteira admiss\u00edvel obtida atrav\u00edes da Heur\u00edstica FPB2. Quando comparamos o Algoritmo ALB4 com o Algoritmo Branch and Bound do procedimento de introdu\u00e7\u00e3o de cortes P-WMTZ+C verificamos que em mais de metade das instancias (133 em 215 instancias) os tempos obtidos atrav\u00eds da utiliza\u00e7\u00e3o\ndo Algoritmo ALB4 s\u00e3o inferiores aos tempos obtidos atrav\u00e9s do Algoritmo Branch and Bound do procedimento de introdu\u00e7\u00e3o de cortes P-WMTZ+C. Como a Heur\u00edstica Local Branching \u00e9 uma heur\u00edstica de melhoramento, podemos observar que com a aplica\u00e7\u00e3o do Algoritmo ALB4 ocorrem melhoramentos em mais de metade das inst\u00e2ncias (147 em 215 inst\u00e2ncias) comparativamente \u00e0 aplica\u00e7\u00e3o da Heur\u00edstica FPB2.\nE de observar que os m\u00e9todos Feasibility Pump e Local Branching e os algoritmos Lagrangeanos s\u00e3ao normalmente mais ra\u00e9pidos do que o uso de m\u00e9etodos Branch and Bound atrav\u00e9es das formula\u00e7c\u00e3oes e os m\u00e9etodos de planos de corte e da\u00e9 mais adequados para resolver problemas de inst\u00e2ancias maiores, no entanto n\u00e3ao garantem a obten\u00e7ca\u00e3o da solu\u00e7ca\u00e3o \u00e9otima e a qualidade das solu\u00e7c\u00e3oes, em geral, n\u00e3ao \u00e9e t\u00e3ao boa.\nEm trabalhos futuros tencionamos desenvolver algoritmos heur\u00e9sticos para obten\u00e7c\u00e3ao dos coeficientes de levantamento usual, down-lifting e up-lifting mais r\u00e1pidos, de modo a tornar os algoritmos heur\u00edsticos de separac\u00e3o mais r\u00e1pidos. Muitos outros m\u00e9todos de resolu\u00e7\u00e3o do Problema WMST ficaram por aplicar e poder\u00e3o ser aplicados futuramente.\n322\nAnexos\nFacetas do conjunto PWmst para uma inst\u00e2ncia de 5 nodos\nNeste anexo apresentamos todas as facetas de Pwmst obtidas atrav\u00e9s do software PORTA para a instancia de 5 nodos dada no Exemplo 2.1. Para cada uma das desigualdades tamb\u00e9m indicamos uma poss\u00e9vel forma de obten\u00e7\u00e3o.\n(1)\tXoi +X02\t+X03\t+X04\t+X12\t+X13\t+X14\t+^23\t+^24\t+X34\t= 4\nRestri\u00e7c\u00e3ao de cardinalidade.\n(2)\t-2X02\t-X04\t-X12\t-2X13\t-2X14\t-2X23\t~^24\t-X34\t&lt;-4\nDCILUL (Fixa\u00e7\u00e3o a zero).\nEquivalente a: x01 - x02 + x03 - x13 - x14 - x23 &lt;0.\nEscolha das vari\u00e9veis a fixar: x02 = x13 = x14 = x23 = 0.\nEstas arestas formam a \u00e9arvore de suporte de peso m\u00e9nimo.\nDCI: x01 &lt;0.\nCorta o PL. Valor de PL = 25.5.\n(3)\t-2x02 +x03\t- 3x13 - 3x14 - 2x23 -x24 -x34 &lt;-4\nDGCIL (Fixa\u00e7ao a zero e a um).\nEscolha das vari\u00e9aveis a fixar: x14 = x24 = 1 e x02 = x13 = x23 = x34 = 0. DCI: x03 &lt;0.\nCorta o PL. Valor de PL = 27 = OPT.\n(4)\t-x02\t-x03\t-x04\t-x12\t-x13\t-x14\t-x23\t-x24\t-x34\t&lt;-3\nEquivalente a: x01 &lt;1.\n(5)\t\u2014 X02\t\u2014 X04\t\u2014 X12\t- X13\t\u20142X14\t\u2014 X23\t\u2014 X24\t\u2014 X34\t<\t\u20143\nDCILUL (Fixa\u00e7\u00f5o a zero).\nEquivalente a: x0i + x03 \u2014 xi4 &lt;1.\nEscolha das variaveis a fixar: xi4 = 0.\nEsta aresta pertence a \u00f3rvore de suporte de peso m\u00ednimo.\nDCI: X01 + X03 &lt;1.\n(6)\t\u2014X02\t\u2014X04\t\u20142xi3\t\u20142xi4\t\u2014 X23\t\u2014 X24\t\u2014X34\t<\t\u20143\nDCILUL (Fixa\u00e7\u00f5o a zero).\nEquivalente a: x01 + x03 + x12 \u2014 x13 \u2014 x14 &lt;1.\nEscolha das vari\u00f3aveis a fixar: X13 = X14 = 0.\nEstas arestas pertencem \u00e0 arvore de suporte de peso m\u00ednimo.\nDCI: xw + x03 &lt;1.\nCorta o PL. Valor de PL = 25.5.\n(7)\t\u20142x02\t\u2014x04\t\u2014 xi2\t\u2014 xi3\t\u2014 xi4\t\u20142x23\t\u2014x24\t\u2014x34\t&lt;\u20143\nDCILUL (Fixa\u00e7ao a zero).\nEquivalente a: x01 \u2014 x02 + x03 \u2014 x23 &lt;1.\nEscolha das vari\u00f3aveis a fixar: x02 = x23 = 0.\nEstas arestas pertencem \u00e0 \u00f3rvore de suporte de peso m\u00ednimo.\nDCI: x0i + x03 &lt;1.\n(8)\t\u2014x02\t\u2014 2xi3 \u2014 2xi4 \u20142x23 \u2014x24 \u2014x34 &lt;\u20143\nDCILUL (Fixa\u00e7\u00f5o a zero).\nEquivalente a: x01 + x03 + x04 + x12 \u2014 x13 \u2014 x14 \u2014 x23 &lt;1.\nEscolha das vari\u00f3aveis a fixar: x13 = x14 = x23 = 0.\nEstas arestas pertencem todas \u00e0 arvore de suporte de peso m\u00f3nimo.\nDCI: x0i + x03 &lt;1.\nCorta o PL. O valor do PL = 27 = OPT.\n(9)\t\u20142x02 +x03\t\u2014 2xi3 \u2014 2xi4 \u20142x23 \u2014x24 \u2014x34 &lt;\u20143\nDGCIL (Fixa\u00e7ao a zero e a um).\nEscolha das vari\u00f3aveis a fixar: xi4 = x24 = 1 e x02 = xi3 = x23 = x34 = 0.\nDCI: x03 &lt;0.\nCorta o PL. Valor de PL = 27 = OPT.\nNote-se que nas desigualdades (2) e (8) se escolhem as mesmas vari\u00f3veis para\nse fixar a zero e a um, mas a ordem do calculo dos coeficientes e feita de forma diferente.\n(10)\t-X02\t+X03\t-X04\t-2X13\t-3X14\t-^23\t-^24\t-X34\t&lt;-3\nDGCIL (Fixa\u00e7\u00e3o a zero a um).\nEquivalente a: x01 + 2x03 + x12 - x13 - 2x14 &lt;1.\nEscolha das variaveis a fixar: x12 = 1 e x03 = x13 = x14 = 0. DCI: x01 &lt;0.\nCorta o PL. Valor de PL = 25.5.\n(11)\t-2x02 +x03\t-2x13 -3x14 -x23 -x24 -x34 &lt;-3\nDGCIL (Fixa\u00e7c\u00e3ao a zero e a um).\nEscolha das variaveis a fixar: x13 = x34 = 1 e x02 = x14 = x23 = x24 = 0. DCI: x03 &lt;0.\nCorta o PL. Valor de PL = 25.8.\n(12)\t-x02\t-x12 -x13 -x14 -x23 -x24\t&lt;-2\nDCIE.\nEquivalente a: x01 + x03 + x04 + x34 &lt;2.\nDCI: x01 + x04 + x34 &lt;2.\nCorta o PL. Valor de PL = 25.5.\n(13)\t-x02\t-x13 -x14 -x23 -x24 -x34 &lt;-2\nDCIL.\nEquivalente a: x01 + x03 + x04 + x12 &lt;2.\nDCI: x01 + x04 + x12 &lt;2.\nCorta o PL. Valor de PL = 27 = OPT.\n(14)\t-x02\t-x03\t-x12\t-x13\t-x23\t-x24\t-x34\t<\t-2\nRestri\u00e7\u00e3o de eliminacao de subcircuito / Clique.\nEquivalente a: x01 + x04 + x14 &lt;2.\n(15)\t-x02\t-x04\t-x12\t-x13\t-x44\t-x23\t-x34\t<\t-2\nDCI.\nEquivalente a: x01 + x03 + x24 &lt;2.\n(16)\t\u2014 X02\t\u2014 X04 \u2014 X12\t- X14 \u2014 X23 \u2014 X24 \u2014 X34 &lt;\u20142\nRestri\u00e7\u00e3o de eliminacao de subcircuito / Clique.\nEquivalente a: x01 + x03 + x13 &lt;2.\n(17)\t\u2014X03 \u2014X04\t\u2014X13 \u2014X14 \u2014 X23 \u2014X24 \u2014X34 &lt;\u20142\nRestri\u00e7c\u00e3ao de eliminac\u00e7a\u00e3o de subcircuito / Clique.\nEquivalente a: x01 + x02 + x12 &lt;2.\n(18)\t\u2014X02\t\u20142X13 \u2014 X14 \u2014X23\t\u2014X34 &lt;\u20142\nDCILUL (Fixa\u00e7\u00e3o a zero).\nEquivalente a: x01 + x03 + x04 + x12 \u2014 x13 + x24 &lt;2. Escolha das vari\u00e9veis a fixar: x13 = 0.\nDCI: X01 + X03 + X04 &lt;2.\n(19)\t\u2014X04\t\u2014X13 \u20142xi4 \u2014X23 \u2014X24 \u2014X34 &lt;\u20142\nDGCIL (Fixa\u00e7ao a zero e a um).\nEquivalente a: x01 + x02 + x03 + x12 \u2014 x14 &lt;2. Escolha das vari\u00e9aveis a fixar: X12 = X02 = 1 e X14 = 0.\nDCI: x03 &lt;0.\n(20)\t\u2014x02 +x03 \u2014x04\t\u2014 xi3 \u20142xM \u2014x23 \u2014x24 \u2014x34 &lt;\u20142\nDGCIL (Fixa\u00e7ao a zero e a um).\nEscolha das varia\u00e9veis a fixar: x14 = 1 e x02 = x04 = x13 = x23 = x24 = x34 = 0. DCI: x03 &lt;0.\n(21)\t\u2014x02 +x03\t\u2014 2xi3 \u2014 2xi4 \u2014x23 \u2014x24\t&lt;\u20142\nDGCIL (Fixa\u00e7ca\u00e3o a zero e a um).\nEscolha das vari\u00e9aveis a fixar: x14 = 1 e x02 = x13 = x23 = x24 = 0. DCI: x03 &lt;0.\nCorta o PL. Valor de PL = 25.5.\n(22)\t\u2014 x02 +x03\t\u2014 2x13 \u2014 2x14 \u2014 x23\t\u2014x34 &lt;\u20142\nDCILDL (Fixa\u00e7c\u00e3ao a zero e a um).\nEscolha das vari\u00e9aveis a fixar: x14 = 1 e x02 = x13 = x23 = x34 = 0. DCI: x03 &lt;0.\n(23)\t\u2014 2x02\t+x03\t\u2014 x13\t\u2014 2x14\t\u2014x23\t\u2014 x24\t\u2014x34\t<\t\u2014 2\nDCILUL (Fixa\u00e7\u00e3o a zero).\nEquivalente a: x01 \u2014 x02 + 2x03 + x04 + x12 \u2014 x14 &lt;2. Escolha das variaveis a fixar: x02 = x03 = x14 = 0.\nApenas as arestas {0, 2} e {1,4} pertencem a \u00e1rvore de suporte de peso m\u00ednimo, a aresta {0, 3} nao pertence, mas pertence \u00e0 solu\u00e7ao admiss\u00edvel considerada inicialmente.\nDCI: X01 + X04 + X12 &lt;2.\nCorta PL. O valor do PL = 25.6.\n(24)\t\u2014X02\t\u2014 X13 \u2014X14\t&lt;\u2014 1\nDCE.\nEquivalente a: x01 + x03 + x04 + x12 + x23 + x24 + x34 &lt;3.\nDC: X01 + X12 + X23 + X34 &lt;3.\nCorta PL. Valor de PL = 25.5.\n(25)\t\u2014X02\t\u2014 X12\t\u2014X23 \u2014X24\t&lt;\u2014 1\nRestri\u00e7ao de eliminac\u00e3o de subcircuito / Corte do 2 / Clique. Equivalente a: x01 + x03 + x04 + x13 + x14 + x34 &lt;3.\n(26)\t\u2014X02\t\u2014 X13\t\u2014X23\t\u2014X34 &lt;\u2014 1\nDCE.\nEquivalente a: x01 + x03 + x04 + x12 + x14 + x24 &lt;3. DC: X01 + X03 + X14 + X24 &lt;3.\n(27)\t\u2014X03\t\u2014 X13\t\u2014X23\t\u2014X34 &lt;\u2014 1\nRestri\u00e7c\u00e3ao de eliminac\u00e7\u00e3ao de subcircuito / Corte do 3 / Clique. Equivalente a: x01 + x02 + x04 + x12 + x14 + x24 &lt;3.\n(28)\t\u2014x04\t\u2014x14\t\u2014x24 \u2014x34 &lt;\u2014 1\nRestri\u00e7c\u00e3ao de eliminac\u00e7\u00e3ao de subcircuito / Corte do 4 / Clique. Equivalente a: x01 + x02 + x03 + x12 + x13 + x23 &lt;3.\n(29)\t\u2014 X13 \u2014 X14 \u2014X23 \u2014X24\t&lt;\u2014 1\nDCE.\nEquivalente a: x01 + x02 + x03 + x04 + x12 + x34 &lt;3.\nDC: xoi + x02 + x04 + x34 &lt;3.\nCorta PL. Valor de PL = 25.5.\n(30)\t-xi3 -xi4 -x23\t-x34 &lt;-1\nDCE.\nEquivalente a: x0i + x02 + x03 + x04 + xi2 + x24 &lt;3.\nDC: x0i + x02 + x03 + x24 &lt;3.\n(31)\t-xo2 +xo3\t-xi3 -xi4 -x23 -x24\t&lt;-1\nDesigualdade de Cobertura Levantada.\nEquivalente a: x0i + 2x03 + x04 + xi2 + x34 &lt;3.\nDC: x0i + x04 + xi2 + x34 &lt;3.\nCorta PL. Valor de PL = 25.5.\n(32)\t-x02 +x03\t-xi3 -xi4 -x23\t-x34 &lt;-1\nDGCIL (Fixa\u00e7ao a zero e a um).\nEscolha das vari\u00e1aveis a fixar: xi4 = 1 e x02 = xi3 = x23 = x34 = 0. DCI: x03 &lt;0.\n(33)\t-x02 +x03 +x04\t-2xi3 -2xi4 -x23\t&lt;-1\nDGCIL (Fixa\u00e7ca\u00e3o a zero e a um).\nEscolha das va\tri\u00e1av\teis\ta fixar\t: xi3 = x04 = 1 e x02 = xi4 = x23 = 0\nDCI: x03 &lt;0.\t\t\t\t\n(34)\t-x02\t\t\t<\t0\nEquivalente a:\tx02\t>\t0.\t\n(35)\t-x03\t\t\t<\t0\nEquivalente a:\tx03\t>\t0.\t\n(36)\t-x04\t\t\t<\t0\nEquivalente a:\tx04\t>\t0.\t\n(37)\t-xi2\t\t\t<\t0\nEquivalente a:\txi2\t>\t0.\t\n(38)\t-x\ti3\t\t<\t0\nEquivalente a: x13 > 0.\n(39)\t\u2014 x14\t&lt;0\nEquivalente a: x14 > 0.\n(40)\t\u2014X23\t&lt;0\nEquivalente a: x23 > 0.\n(41)\t\u2014X24\t&lt;0\nEquivalente a: x24 > 0.\n(42)\t\u2014X34 &lt;0 Equivalente a: x34 > 0.\n(43)\t+X03\t\u2014X13 \u2014X14\t&lt;0\nDCILUL (Fixa\u00e7\u00e3o a zero).\nEscolha das variaveis a fixar: x13 = x14 = 0.\nEstas arestas pertencem \u00e0 \u00e1rvore de suporte de peso m\u00e1nimo. DCI: x03 &lt;0.\n(44)\t+X04\t\u2014 X13 \u2014 X14 \u2014X23\t&lt;0\nDCILUL (Fixa\u00e7\u00e3o a zero).\nEscolha das variaveis a fixar: x13 = x14 = x23 = 0. Estas arestas pertencem \u00e0 \u00e1rvore de suporte de peso m\u00e1nimo. DCI: x04 &lt;0.\n(45)\t\u2014X02 +X03 +X04\t\u2014 X13 \u2014 X14\t&lt;0\nDCILUL (Fixa\u00e7\u00e3o a zero).\nEscolha das vari\u00e1veis a fixar: x02 = x13 = x14 = 0. Estas arestas pertencem \u00e0 \u00e1rvore de suporte de peso m\u00e1nimo. DCI: x04 &lt;0.\n(46)\t\u2014X02 +X03\t+X12 \u2014 X13 \u2014 X14 \u2014^23\t&lt;0\nDCILUL (Fixa\u00e7\u00e3o a zero).\nEscolha das vari\u00e1veis a fixar: x02 = x13 = x14 = x23 = 0. Estas arestas pertencem \u00e0 \u00e1rvore de suporte de peso m\u00e1nimo. DCI: x12 &lt;0.\nCorta PL. Valor de PL = 25.5.\n(47)\t-X02 +X03\t+X12\t-2X14\t-X24 -X34 &lt;0\nDCILUL (Fixa\u00e7\u00e3o a zero).\nEscolha das vari\u00edveis a fixar: x02 = x14 = x24 = x34 = 0.\nAs arestas {0, 2} e {1, 4} pertencem a arvore de suporte de peso m\u00ednimo, mas as arestas {2, 4} e {3, 4} n\u00e3o pertencem.\nDCI: X12 &lt;0.\n(48)\t+X34 &lt;1\n(49)\t+X24\t&lt;1\n(50)\t+X23\t&lt;1\n(51)\t+X14\t&lt;1\n(52)\t+X13\t&lt;1\n(53)\t+X12\t&lt;1\n(54)\t+X04\t&lt;1\n(55)\t+X03\t&lt;1\n(56)\t+X02\t&lt;1\n(57)\t-X02 +X03 +X04\t&lt;1\nDCILUL (Fixa\u00e7c\u00e3ao a zero).\nEscolha das vari\u00edaveis a fixar: X02 = 0.\nEsta aresta pertence a \u00edrvore de suporte de peso m\u00ednimo. DCI: X03 + X04 &lt;1.\n(58)\t+X03\t+X12\t-X14\t&lt;1\nDCILUL (Fixa\u00e7\u00e3o a zero).\nEscolha das vari\u00edaveis a fixar: X14 = 0.\nEsta aresta pertence a arvore de suporte de peso m\u00ednimo. DCI: X03 + X12 &lt;1.\n(59)\t+Xo3 +X04\t\u2014 X13 \u2014 X14\t+X34 &lt;\u20143\nDCILUL (Fixa\u00e7\u00e3o a zero).\nEscolha das vari\u00e1veis a fixar: x13 = x14 = x34 = 0.\nAs arestas {1,3} e {2, 4} pertencem a arvore de suporte de peso m\u00e1nimo.\nDCI: x04 + x24 &lt;1.\n(60)\t+X03 +X04\t\u2014X13 \u2014 X14\t+X24\t&lt;1\nDCILUL (Fixa\u00e7\u00e3o a zero).\nEscolha das variaveis a fixar: x13 = x14 = 0.\nEstas duas arestas pertencem \u00e0 arvore de suporte de peso m\u00e1nimo. DCI: X04 + X24 &lt;1.\n(61)\t+X23 +X24 +X34 &lt;2 Restri\u00e7ao de eliminacao de subcircuito / Clique.\n(62)\t+X13 +X14\t+X34 &lt;2\nRestri\u00e7c\u00e3ao de eliminac\u00e7a\u00e3o de subcircuito / Clique.\n(63)\t+X12\t+X14\t+X24\t&lt;2\nRestri\u00e7c\u00e3ao de eliminac\u00e7a\u00e3o de subcircuito / Clique.\n(64)\t+X12 +X13\t+X23\t&lt;2\nRestri\u00e7c\u00e3ao de eliminac\u00e7\u00e3ao de subcircuito / Clique.\n(65)\n+x03\t+x12\n+x34 &lt;2\nDCI.\n(66)\t+X03\t+X12\t+X24\t&lt;2\nDCI.\n(67)\t+X03 +X04\t+X24\t&lt;2\nDCI.\n(68)\t+X03 +X04\t+X23\t&lt;2\nDCI.\n(69)\t+X02\t+X04\n+X24\t&lt;2\nRestric\u00e3o de eliminacao de subcircuito / Clique.\n(70)\t+x02 +x03\t+x23\t&lt;2\nRestric\u00e7\u00e3ao de eliminac\u00e7a\u00e3o de subcircuito / Clique.\n(71)\t+x03 +x04 +x12 +x13\t+x23\t&lt;3\nDCE.\nDC: x03 + x04 + xi3 + x23 &lt;3.\n(72)\t+xi2 +xi3 +xi4 +x23 +x24 +x34 &lt;3 Restric\u00e7\u00e3ao de eliminac\u00e7\u00e3ao de subcircuito / Corte do nodo 0 / Clique.\n(73)\t+x02 +x03 +x04\t+x23 +x24 +x34 &lt;3\nRestri\u00e7c\u00e3ao de eliminac\u00e7\u00e3ao de subcircuito / Corte do nodo 1 / Clique.\n(74)\t+x02\t+x03\t+x04\t+xi2\t+xi3\t+xi4\t+x23\t+x24\t+x34\t&lt;4\nEsta desigualdade \u00e9 equivalente a seguinte: x0i > 0.\nNota\u00e7\u00e3o Utilizada\nG = (V, E)\tGrafo completo nao orientado.\nV\tConjunto de nodos do grafo nao orientado G, V = {0,1,..., n \u2014 1}.\nE\tConjunto de arestas do grafo nao orientado G, E = {e = {i, j}, i, j G V, i = j}.\nce\tCusto associado \u00e0 aresta e G E.\nwe\tPeso associado a aresta e G E.\nEt\tConjunto de arestas de T = (V, ET) \u00edrvore de suporte no grafo G.\nC(T)\tCusto da arvore de suporte T.\nW(T)\tPeso da arvore de suporte T.\nW Valor estabelecido para o limite de peso da restricao saco-mochila. tf(WMST)\tValor otimo do Problema WMST.\nH\tMatriz de pesos.\nC\tMatriz de custos.\nTc\tArvore de suporte\tde\tcusto\tm\u00ednimo.\nTw\tArvore de suporte\tde\tpeso\tm\u00ednimo.\nTp\tArvore de suporte ponderada m\u00ednima.\nG = (V, A) Grafo completo orientado.\nA Conjunto de arcos do grafo orientado G, A = {(i, j), i G V, j G V\\{0}, i = j}. Cij\tCusto associado ao arco (i, j) G A.\nWij\tPeso associado ao arco (i, j) G A.\npij\tValor ponderado associado ao arco (i, j) G A, sendo combina\u00e7ao linear de cij\ne wij .\nP(T)\tValor ponderado da arvore de suporte T.\nA(SbS2)\tConjunto de arcos com um extremo em S1 e outro extremo em S2.\nXwmst\tConjunto das solucoes admiss\u00edveis do Problema WMST.\nXL\tConjunto das solu\u00e7\u00e3es admiss\u00edveis da relaxa\u00e7\u00e3o linear do Problema WMST.\nXT\tConjunto das soluc\u00e3es admiss\u00edveis do Problema MST.\nXK\tConjunto das solucoes admiss\u00edveis do problema saco-mochila binario.\ndk\tDirec\u00e3o na itera\u00e7\u00e3o k.\nsk Tamanho do passo na iterac\u00e3o k.\nA e v Multiplicadores de Lagrange.\ntol Toler\u00e2ncia usada no crit\u00e9rio de paragem dos algoritmos Lagrangeanos.\nLI\tLimite inferior.\nLS\tLimite superior.\nPWMST\tInv\u00e9lucro convexo do conjunto XWMST.\nE0\tConjunto de variaveis\tfixas\ta\tzero.\nE1\tConjunto de vari\u00e9veis\tfixas\ta\tum.\nce\tCusto modificado associado \u00e0 aresta e G E.\nTL Tempo limite imposto.\nmaxIter Numero maximo de iteracoes a realizar na Heur\u00edstica Feasibility Pump.\nx Solucao obtida por arredondamento.\nA(x,x)\tDist\u00e2ncia entre os pontos x e x.\nx\tSolu\u00e7ao de refer\u00e2ncia.\nS\tSuporte binario de x.\nN(x, k)\tVizinhanca k-OPT de x, onde k \u00e9 o numero de variaveis binarias que\npodem trocar de valor.\nA(x,x) &lt;k Restricao Local Branching, onde k eo numero de variaveis binarias que podem trocar de valor.\nLpJ\tConverte o numero p no maior numero inteiro menor ou igual a p.\nTp!\tConverte o numero p no menor numero inteiro maior ou igual a p.\n[p]\tConverte o numero p no valor inteiro mais pr\u00f3ximo de p.\n&amp;gap, &amp; tempo\tDesvio padrao do gap e do tempo, respetivamente.\nOPT Valor otimo ($(WMST)) ou um valor do limite superior para o valor do custo.\n336\nSiglas Utilizadas\nSiglas em Geral\nE Grupo de instancias Euclideanas. Pag. 15.\nMIP Programacao Linear Inteira Mista. Pag. 241.\nMST Arvore de Suporte de Custo M\u00ednimo. Pag. 7.\nMSTP\tArvore de Suporte Ponderada M\u00ednima. Pag. 13.\nMSTw\tArvore de Suporte de Peso M\u00ednimo. Pag. 11.\nNFA Limite superior nunca foi atualizado. Pag. 308.\nPLI Programa\u00e7ao Linear Inteira. Pag. 19.\nQC Grupo de inst\u00e2ncias Quase Caminhos. Pag. 16.\nR Grupo de instancias Aleatorias. Pag. 16.\nTSP Problema do Caixeiro Viajante. Pag. 27.\nWMST Problema da Arvore de Suporte de Custo M\u00ednimo com Restricoes de\nPeso. Pag. 1.\nFormula\u00e7\u00f5es para o Problema WMST\nCS Formula\u00e7ao de Cortes. Pag. 23.\nCSL\tRelaxacao linear da Formula\u00e7\u00e3o de Cortes. Pag. 23.\nES Formulacao de Eliminacao de subcircuitos. Pag. 22.\nESl Relaxa\u00e7ao linear da Formula\u00e7ao de Eliminac\u00f5o de subcircuitos. Pag. 23.\nMF Formula\u00e7ao de Fluxos. Pag. 24.\nMFL Relaxa\u00e7ao linear da Formula\u00e7ao de Fluxos. Pag. 26.\nMTZ Formula\u00e7\u00f5o Miller-Tucker-Zemlin. Pag. 27.\nmtzl Relaxa\u00e7ao linear da Formula\u00e7\u00f5o Miller-Tucker-Zemlin. Pag. 28.\nMTZli Formulacao derivada da MTZ com a restricao (3.22) substitu\u00f3da pela Desigualdade Levantada i, i = 1,2, 3, 4. Pag. 29.\nMTZliL\tRelaxac\u00f5o linear da Formula\u00e7ao derivada da MTZ com a restri\u00e7\u00f5o\n(3.22) substitu\u00edda pela Desigualdade Levantada i, i = 1, 2, 3, 4. Pag. 31.\nP-CS Procedimento de Introducao de Cortes usando a Formulac\u00f5o CS. Pag. 42.\nP-CSl Relaxac\u00f5o linear do Procedimento de Introduc\u00f5o de Cortes usando a Formula\u00e7c\u00f5ao CS. Pag. 42.\nP-MTZ+C Procedimento de Introducao de Cortes usando a Formulac\u00f5o MTZ. Pag. 42.\nP-MTZ+Cl Relaxac\u00e7a\u00f5o linear do Procedimento de Introdu\u00e7ca\u00f5o de Cortes usando a Formula\u00e7c\u00f5ao MTZ. Pag. 42.\nP-WMTZ+C Procedimento de Introducao de Cortes usando a Formula\u00e7ao WMTZ. Pag. 42.\nP-WMTZ+Cl\tRelaxa\u00e7\u00f5o linear do Procedimento de Introdu\u00e7ao de Cortes\nusando a Formulac\u00f5o WMTZ. Pag. 42.\nWE\tFormulacao de Fluxo com Especificacao de Pesos. Pag. 36.\nWEl Relaxacao linear da Formula\u00e7\u00f5o de Fluxo com Especifica\u00e7ao de Pesos. Pag. 38.\nWMSTa\tFormula\u00e7ao gen\u00e9rica do Problema WMST com a restricao de peso\nrelaxada. Pag. 75.\nWMST-Cav\tFormulac\u00f5o gen\u00f3rica do Problema WMST com a restri\u00e7ao de peso\ne uma desigualdade v\u00f3alida relaxadas. Pag. 98.\nWMTZ Formula\u00e7ao de Peso Miller-Tucker-Zemlin. Pag. 31.\nwmtzl\tRelaxa\u00e7\u00e3o linear da Formula\u00e7ao de Peso Miller-Tucker-Zemlin. Pag.\n33.\nWMTZli Formulacao derivada da WMTZ com a restri\u00e7ao (3.33) substitu\u00edda pela Desigualdade Levantada i, i = 1, 2, 3, 4. Pag. 34.\nWMTZliL Relaxacao linear da Formulac\u00e3o derivada da WMTZ com a restric\u00e3o (3.33) substitu\u00edda pela Desigualdade Levantada i, i =1,2, 3, 4. Pag. 35.\nDesigualdades para o Problema WMST\nCI Cobertura Impl\u00edcita. Pag. 138.\nDC Desigualdade de Cobertura. Pag. 135.\nDCE Desigualdade de Cobertura Estendida. Pag. 141.\nDCI Desigualdade de Cobertura Impl\u00edcita. Pag. 139.\nDCIE\tDesigualdade de Cobertura Impl\u00edcita Estendida. Pag. 143.\nDCIL\tDesigualdade de Cobertura Impl\u00edcita Levantada. Pag. 145.\nDCILDL Desigualdade de Cobertura Impl\u00edcita Levantada por Down-Lifting.\nPag. 153.\nDCILUL Desigualdade de Cobertura Impl\u00edcita Levantada por Up-Lifting. Pag.\n158.\nDGCIL Desigualdade Generalizada de Cobertura Impl\u00edcita Levantada. Pag.\n164.\nAlgoritmos e Heur\u00edsticas para o Problema WMST\nABB-P-WMTZ+C Algoritmo Branch and Bound do procedimento de introdu\u00e7\u00e3o de cortes P-WMTZ+C. Pag. 308.\nALagB Algoritmo Lagrangeano Base para o Problema WMST. Pag. 78.\nALBC\tAlgoritmo Local Branching Cl\u00e1ssico para o Problema WMST. Pag. 284.\nALB1\tAlgoritmo Local Branching 1 (ALBC com limite de tempo). Pag. 292.\nALB2\tAlgoritmo Local Branching 2 (ALB1 com mecanismos de Intensifica\u00e7ao\ne de Diversificac\u00e3o e interrupc\u00e3o do solver assim que se obtenha uma solu\u00e7\u00e3o inteira admiss\u00edvel no Algoritmo Branch and Bound usando a Formula\u00e7ao WMTZ). Pag. 294.\nALB3 Algoritmo Local Branching 3 (ALB2 com limite de tempo na exploracao das vizinhancas). Pag. 295.\nALB4 Algoritmo Local Branching 4 (solucao de refer\u00eancia inicial \u00e9 obtida pela Heur\u00edstica FPB2). Pag. 297.\nALB5 Algoritmo Local Branching 5 (soluc\u00e3o de refer\u00eancia inicial \u00e9 a solucao da correspondente \u00e9rvore ). Pag. 298.\nAlgl Algoritmo Lagrangeano 1 (baseado no calculo dos valores ponderados da forma pij = (1 - Yk)wij + YkCj). Pag. 85.\nAlg2 Algoritmo Lagrangeano 2 (baseado no calculo dos valores ponderados da forma pij = Akwij + cj). Pag. 87.\nAlg3\tAlgoritmo Lagrangeano 3 (baseado no M\u00e9todo do subgradiente). Pag. 88.\nAlg4\tAlgoritmo Lagrangeano 4 (baseado na t\u00e9cnica de pesquisa binaria). Pag.\n90.\nAlg5 Algoritmo Lagrangeano 5 (baseado na compara\u00e7ao de valores da fun\u00e7ao Lagrangeana). Pag. 92.\nAlg6 Algoritmo Lagrangeano 6 (baseado na convexidade da funcao\nLagrangeana). Pag. 96.\nAlg7 Algoritmo Lagrangeano 7 (baseado na introdu\u00e7ao de desigualdades validas). Pag. 98.\nDCIL-E1\tEstrat\u00e9gia que a partir de uma DCI obt\u00e9m uma DCIL. Pag. 188.\nDCIL-E2\tEstrat\u00e9gia que s\u00f3 obt\u00e9m a DCIL se a DCI cortar a solucao da\nrelaxac\u00e7\u00e3ao linear. Pag. 188.\nDL-Ei Estrat\u00e9gia Down-Lifting i, i = 1, 2, 3, 4 (usada nos algoritmos de separac\u00e3o para o caso das DCILDLs). Pag. 226.\nFP Heur\u00edstica Feasibility Pump. Pag. 241.\nFPB1\tHeur\u00edstica Feasibility\tPump\tB\u00e1sica 1. Pag.\t258.\nFPB2\tHeur\u00edstica Feasibility\tPump\tB\u00e1sica 2. Pag.\t259.\nFPO1\tHeur\u00edstica Feasibility\tPump\tcom Altera\u00e7ao\tda Func\u00e3o\tObjetivo 1. Pag.\n259.\nFPO2 Heur\u00edstica Feasibility Pump com Altera\u00e7ao da Func\u00e3o Objetivo 2. Pag. 259.\nGL-Ei Estrat\u00edgia Generalizada i, i =1, 2, 3 (usada nos algoritmos de separa\u00e7ao para o caso das DGCIL). Pag. 231.\nHcoef Algoritmo heur\u00edstico baseado em relaxa\u00e7ao Lagrangeana para o calculo dos coeficientes das vari\u00edveis a efetuar levantamento. Pag. 191.\nHXNR Heur\u00edstica do Xpress Aplicada ao nodo raiz utilizando a Formula\u00e7ao WMTZ. Pag. 263.\nLB Heur\u00edstica Local Branching. Pag. 290.\nOrdFixW Ordenac\u00e3o de arestas (ordem decrescente de peso, we, primeiro as arestas com xe = 1 e depois as restantes arestas (0 &lt;xe &lt;1)). Pag. 169.\nOrdFixWX Ordena\u00e7\u00e3o de arestas (ordem decrescente de valor de we x xe, primeiro as arestas com xe = 1 e depois as restantes arestas (0 &lt;xe &lt;1)). Pag. 169.\nOrdKnap Ordena\u00e7\u00e3o de arestas (ordem decrescente de valor de (1 \u2014 xe)/we). Pag. 169.\nOrdW Ordenacao de arestas (ordem decrescente de peso, we). Pag. 169.\nOrdWX Ordena\u00e7ao de arestas (ordem decrescente de valor de we x xe). Pag. 169.\nOrdX Ordenacao de arestas (ordem decrescente de valor de xe). Pag. 169.\nPSIABB Primeira solucao inteira admiss\u00edvel obtida pelo solver do Xpress atrav\u00eds da Formula\u00e7ao WMTZ, quando usa o procedimento Branch and Bound. Pag. 263.\nSepl Algoritmo de Separac\u00e3o Gen\u00edrico 1 (Inser\u00e7ao de uma desigualdade v\u00edlida\nno modelo por itera\u00e7ao). Pag. 168.\nSep2 Algoritmo de Separac\u00e3o Gen\u00e1rico 2 (Inser\u00e7\u00e3o de varias desigualdades v\u00e1lidas no modelo por itera\u00e7\u00e3o). Pag. 170.\nUL-Ei Estrat\u00e9gia Up-Lifting i, i =1, 2, 3, 4 (usada nos algoritmos de separa\u00e7ao para o caso das DCILULs). Pag. 228.\nOutras Siglas\nAi Crit\u00e1rio de Arredondamento i, i = 1, 2, 3 (Heur\u00edstica FP). Pag. 251.\nFVDi\tFixa\u00e7ao de Variaveis Di, i = 1, 2, 3 (nas DCILDLs). Pag. 202.\nFVUi\tFixacao de Variaveis Ui, i = 1,2, 3, 4 (nas DCILULs). Pag. 208.\nLVi Levantamento das Variaveis i, i =1, 2, 3 (nas DCILs). Pag. 186.\nPi Mecanismo de Perturbacao i, i = 1,2 (Heur\u00edstica FP). Pag. 252.\nPL-DL Procedimento de Levantamento DL (primeiro efetua-se o down-lifting e depois o levantamento usual). Pag. 203.\nPL-DLU Procedimento de Levantamento DLU (primeiro efetua-se o down-lifting, depois o levantamento usual e por fim o up-lifting). Pag. 216.\nPL-DUL Procedimento de Levantamento DUL (primeiro efetua-se o down-lifting, depois o up-lifting e por fim o levantamento usual). Pag. 216.\nPL-LD Procedimento de Levantamento LD (primeiro efetua-se o levantamento usual e depois o down-lifting). Pag. 203.\nPL-LDU Procedimento de Levantamento LDU (primeiro efetua-se o levantamento usual, depois o down-lifting e por fim o up-lifting). Pag. 216.\nPL-LU Procedimento de Levantamento LU (primeiro efetua-se o levantamento usual e depois o up-lifting). Pag. 209.\nPL-LUD Procedimento de Levantamento LUD (primeiro efetua-se o\nlevantamento usual, depois o up-lifting e por fim o down-lifting). Pag. 217.\nPL-UDL Procedimento de Levantamento UDL (primeiro efetua-se o up-lifting, depois o down-lifting e por fim o levantamento usual). Pag. 216.\nPL-UL Procedimento de Levantamento LU (primeiro efetua-se o up-lifting e depois o levantamento usual). Pag. 209.\nPL-ULD Procedimento de Levantamento ULD (primeiro efetua-se o up-lifting, depois o levantamento usual e por fim o down-lifting). Pag. 216.\n344\nLista de Figuras\n2.1\tArvore de suporte de custo m\u00e9nimo........................................... 10\n2.2\t\u00c1rvore de suporte com custo 27 e peso 19.................................... 10\n2.3\t\u00c1rvore de suporte de peso m\u00e9nimo............................................ 13\n2.4\t\u00c1rvore de suporte ponderada m\u00ednima (pj = 0,5wj + 0,5cj para\ttodos\tos\t(i,\tj)\tG\tA).\t14\n2.5\t\u00c1rvore de suporte ponderada m\u00ednima (pj = Wj + 0,2cj para todos os\t(i,\tj)\tG\tA).\t.\t15\n3.1\tExemplo com o valor das vari\u00e9veis de fluxo na Formula\u00e7\u00e3o MF................. 26\n3.2\tExemplo do calculo das posi\u00e7\u00e3es dos nodos na \u00e9rvore......................... 28\n3.3\tExemplo do calculo dos estados dos pesos dos nodos na arvore................ 32\n3.4\tExemplo com o valor das variaveis de fluxo na Formula\u00e7ao WE................. 37\n3.5\tSolu\u00e7\u00e3o otima da relaxa\u00e7ao linear obtida pelas Formula\u00e7\u00e3es ES, MF, WE, MTZll e\nWMTZl2............................................................................. 39\n3.6\tRepresenta\u00e7ca\u00e3o da solu\u00e7c\u00e3ao da relaxac\u00e7a\u00e3o linear da Formula\u00e7ca\u00e3o WMTZ............ 43\n3.7\tRepresenta\u00e7c\u00e3ao da solu\u00e7ca\u00e3o da relaxa\u00e7c\u00e3ao linear da Formula\u00e7c\u00e3ao WMTZ ap\u00e9os a in-\ntrodu\u00e7ao do corte 1................................................................ 44\n3.8\tRepresenta\u00e7c\u00e3ao da solu\u00e7c\u00e3ao da relaxa\u00e7c\u00e3ao linear da Formula\u00e7c\u00e3ao WMTZ ap\u00e9os a in-\ntrodu\u00e7ao do corte 2................................................................ 45\n3.9\tTempos m\u00e9dios, em segundos, necessarios para a obtenc\u00e3o do valor \u00e9timo da For-\nmula\u00e7\u00e3o MTZ com as varias desigualdades levantadas em inst\u00e2ncias de 10, 20 e 40 nodos.............................................................................. 51\n3.10\tTempos m\u00e9dios, em segundos, necessarios para a obten\u00e7ao do valor \u00f3timo da For-mula\u00e7c\u00e3ao WMTZ com as v\u00e9arias desigualdades levantadas em inst\u00e2ancias de 10, 20 e\n40 nodos. ......................................................................... 54\n3.11\tCompara\u00e7\u00e3o das percentagens de tempo m\u00e9dio de execu\u00e7\u00e3o (em segundos) da re-\nlaxac\u00e3o linear e do Algoritmo Branch and Bound do Procedimento P-WMTZ+C em instancias R....................................................................... 69\n3.12\tCompara\u00e7c\u00e3ao das percentagens de tempo m\u00e9edio de execu\u00e7ca\u00e3o (em segundos) da re-\nlaxac\u00e3o linear e do Algoritmo Branch and Bound do Procedimento P-WMTZ+C em instancias E.................................................................... 70\n3.13\tCompara\u00e7ao das percentagens de tempo m\u00e9dio de execu\u00e7\u00e3o (em segundos) da re-\nlaxac\u00e3o linear e do Algoritmo Branch and Bound do Procedimento P-WMTZ+C em inst\u00e2ancias QC.................................................................. 70\n3.14\tRela\u00e7\u00e3o entre os valores obtidos pela relaxa\u00e7ao linear das diferentes formula\u00e7\u00e3es e\nprocedimentos de introdu\u00e7c\u00e3ao de cortes. ....................................... 71\n4.1\tRepresenta\u00e7\u00e3o grafica de $(WMSI\\) em func\u00e3o do valor de A....................... 76\n4.2\tRepresentac\u00e3o geom\u00e9trica dos pesos e dos custos das arvores Tc e Tw............. 81\n4.3\tRepresenta\u00e7\u00e3o geom\u00e9trica dos pesos e dos custos das \u00e9rvores Tc e Tw e da reta w = W\ncom W(Tw) > W................................................................... 82\n4.4\tRepresenta\u00e7\u00e3o geom\u00e9trica dos pesos e dos custos das \u00e9rvores Tc e Tw e da reta w = W\ncom W(Tc) &lt;W................................................................... 83\n4.5\tRepresenta\u00e7\u00e3o geometrica dos pesos e dos custos das arvores Tc e Tw e da reta\nw = W, onde W (Tw)&lt;W<W (Tc).................................................... 83\n4.6\tComparac\u00e3o dos tempos de execu\u00e7\u00e3o em instancias QC para diferentes valores de p.\t107\n4.7\tCompara\u00e7\u00e3o dos GapR m\u00e9dios, em percentagem, entre os Algoritmos Alg6 e Alg7\nnas insta\u00e2ncias QC............................................................. 113\n4.8\tTempos m\u00e9dios, em segundos, obtidos pelos algoritmos Lagrangeanos (instancias QC). 116\n4.9\tNumero m\u00e9dio de arvores de suporte obtidas pelos Algoritmos Alg5 e Alg6 nas\ninsta\u00e2ncias QC................................................................. 118\n4.10\tCompara\u00e7\u00e3o dos GapR m\u00e9dios, em percentagem, entre os Algoritmos Alg6 e Alg7\nnas instancias R............................................................... 119\n4.11\tTempos m\u00e9edios, em segundos, obtidos pelos algoritmos Lagrangeanos (inst\u00e2ancias R). 122\n4.12\tNu\u00e9mero m\u00e9edio de a\u00e9rvores de suporte obtidas pelos Algoritmos Alg5 e Alg6 nas\ninstancias R................................................................... 124\n4.13\tCompara\u00e7ao dos GapR m\u00e9dios, em percentagem, entre os Algoritmos Alg6 e Alg7\nnas instancias E............................................................... 125\n4.14\tTempos m\u00e9dios, em segundos, obtidos pelos algoritmos Lagrangeanos (inst\u00e2ncias E). 128\n4.15\tNu\u00e9mero m\u00e9edio de \u00e9arvores de suporte obtidas pelos Algoritmos Alg5 e Alg6 nas\ninst\u00e2ncias E................................................................... 130\n5.1\tRepresentacao das arestas da Cobertura S4 no grafo..............................137\n5.2\tArvore de suporte com custo 24 e peso 21........................................140\n5.3\tDesigualdade de Cobertura e Desigualdade de Cobertura Impl\u00edcita........................140\n5.4\tCiclos formados com as arestas da Cobertura Impl\u00edcita S do Exemplo 5.3.................144\n5.5\tArvore de\tsuporte\tcom custo 24 e peso 21.........................................152\n5.6\tArvore de\tsuporte\tcom custo 28 e peso 22.........................................157\n5.7\tArvore de\tsuporte\tcom custo 24 e peso 21.........................................162\n6.1\tArvore de\tsuporte\tde peso m\u00ednimo incluindo\ta aresta {0,4}\tcom custo\t47 e\tpeso\t14.\t179\n6.2\tArvore de\tsuporte\tde peso m\u00ednimo incluindo\tas arestas\t{0,1}\te\t{0,4}\tcom\tcusto\t32\ne peso 18............................................................................. 179\n6.3\tArvore de suporte de peso m\u00ednimo incluindo as arestas {0,1}, {0,4} e {1, 2} com\ncusto 24 e peso 21.................................................................... 180\n6.4\tEsquemas de obtenc\u00e3o de uma DCIL dada uma DCI..........................................188\n6.5\tArvores de suporte TcI e TwI obtidas no Passo 1 do Algoritmo HCoef no calculo do\ncoeficiente de levantamento usual ^34..................................................196\n6.6\tArvore de suporte TPI obtida no Passo 2 do Algoritmo HCoef no c\u00e1lculo do coeficiente\nde levantamento usual J34............................................................. 196\n6.7\tArvores de suporte TcI e TwI obtidas no Passo 1 do Algoritmo HCoef no c\u00e1lculo do\ncoeficiente de levantamento usual ft03.................................................197\n6.8\tPrimeira \u00e1rvore de suporte TPI obtida no Passo 2 do Algoritmo HCoef no c\u00e1lculo do\ncoeficiente de levantamento usual ft03.................................................198\n6.9\tSegunda arvore de suporte TPI obtida no Passo 2 do Algoritmo HCoef no calculo do\ncoeficiente de levantamento usual ft03.................................................199\n6.10\tEsquemas de obten\u00e7ao de uma DCIL dada uma DCIE........................................200\n6.11\tArvores de suporte TCI e TWI obtidas no Passo 1 do Algoritmo HCoef no calculo do\ncoeficiente down-lifting fi12..........................................................204\n6.12\tArvore de suporte TPI obtida no Passo 2 do Algoritmo HCoef no calculo do coeficiente\ndown-lifting ^12.......................................................................205\n6.13\tArvore de suporte TWI obtida no Passo 1.1 do Algoritmo HCoef no calculo do coefi-\nciente up-lifting /323.................................................................210\n6.14\tArvores de suporte TCI e TWI obtidas no Passo 1 do Algoritmo HCoef no c\u00e1lculo do\ncoeficiente up-lifting ^02.............................................................211\n6.15\tArvore de suporte TPI obtida no Passo 2 do Algoritmo HCoef no calculo do coeficiente\nup-lifting JO2.........................................................................211\n6.16\tPercentagem de inst\u00e2ncias, em cada uma das melhores estrat\u00e9gias heur\u00edsticas de se-parac\u00e3o com tempo inferior ao tempo do Procedimento P-WMTZ+CL em instancias\nQC de 10 a 60 nodos...............................................................233\n6.17\tPercentagem de solu\u00e7\u00e3es \u00e9timas obtidas com as melhores estrat\u00e9gias heur\u00edsticas de\nseparac\u00e3o em instancias QC de 10 a 60 nodos.......................................234\n6.18\tPercentagem de instancias, em cada uma das melhores estrategias heur\u00edsticas de separa\u00e7ca\u00e3o com o nu\u00e9mero de nodos no Branch and Bound inferior ao nu\u00e9mero usado\npelo Procedimento P-WMTZ+C em instancias QC de 10 a 60 nodos......................234\n7.1\tArvore de suporte Tx com custo 27 e peso 19.......................................243\n7.2\tArvore de suporte Tx com custo 24 e peso 21.......................................244\n7.3\tRepresentac\u00e3o geom\u00e9trica das duas trajet\u00e9rias\tde custos\t(instancia\tQC80-7).\t. . .\t254\n7.4\tRepresenta\u00e7\u00e3o geom\u00e9trica das duas trajet\u00f3rias\tde pesos\t(inst\u00e2ncia\tQC80-7)........ 254\n7.5\tEvolu\u00e7ao da dist\u00e2ncia A(x*,x) ao longo das iterac\u00e3es (inst\u00e2ncia QC80-7).......... 255\n7.6\tEvolucao da dist\u00e2ncia A(x*, x) ao longo das iteracoes na instancia QC80-7 nas quatro\nestrategias heur\u00edsticas propostas.................................................260\n7.7\tEvoluc\u00e3o da distancia A(x*, x) ao longo das iteracoes na instancia R80-5 nas quatro\nestrategias heur\u00edsticas propostas.................................................261\n7.8\tEvoluc\u00e3o da distancia A(x*, x) ao longo das iteracoes na instancia E80-3 nas quatro\nestrategias heur\u00edsticas propostas.................................................261\n7.9\tPercentagem de gaps nulos nas diferentes heur\u00e9sticas propostas nas inst\u00e2ancias QC. .\t264\n7.10\tComparac\u00e3o dos gaps m\u00e9dios, em percentagem, entre as Heur\u00edsticas FP propostas e\na Heur\u00edstica HXNR nas instancias QC...............................................266\n7.11\tDiferen\u00e7as medias de gaps, em percentagem, entre as Heur\u00edsticas HXNR e FPB2 nas\ninst\u00e2ancias QC................................................................... 268\n7.12\tComparac\u00e3o dos gaps m\u00e9dios, em percentagem, entre as Heur\u00edsticas FPB2 e a PSI-\nABB nas inst\u00e2ncias QC.............................................................269\n7.13\tPercentagem de gaps nulos nas diferentes heur\u00e9sticas propostas nas insta\u00e2ncias R. . .\t270\n7.14\tComparac\u00e7\u00e3ao dos gaps m\u00e9edios, em percentagem, entre as Heur\u00e9sticas FP propostas\nnas inst\u00e2ncias R..................................................................272\n7.15\tPercentagem de gaps nulos nas diferentes heur\u00e9sticas propostas nas insta\u00e2ncias E. . .\t275\n7.16\tComparac\u00e7\u00e3ao dos gaps m\u00e9edios, em percentagem, entre as Heur\u00e9sticas FP propostas\nnas inst\u00e2ncias E..................................................................277\n8.1\tEsquema de ramificac\u00e3o obtido usando o Algoritmo ALBC na instancia QC10-8. . .\t286\n8.2\tRepresentac\u00e3o da trajetoria de custos da inst\u00e2ncia QC10-8.........................291\n8.3\tRepresenta\u00e7ao da trajet\u00f3ria de pesos da inst\u00e2ncia QC10-8......................292\n8.4\tEsquema de ramifica\u00e7\u00e3o obtido usando o Algoritmo ALB3 na inst\u00e2ncia QC10-10.\t.\t297\n8.5\tTempos m\u00e9dios de execucao, em segundos, obtidos usando o Algoritmo ALB4 para\ndiferentes valores de k'......................................................300\n8.6\tPercentagem de solu\u00e7\u00f5es \u00e9timas obtidos pelos algoritmos Local Branching nas instancias\nQC........................................................................... 302\n8.7\tPercentagem de soluc\u00e3es otimas obtidas pelos Algoritmos Local Branching nas inst\u00e2ncias\nR.............................................................................304\n8.8\tPercentagem de soluc\u00e3es \u00e9timas obtidas pelos algoritmos Local Branching nas inst\u00e2ncias\nE.............................................................................306\n350\nLista de Tabelas\n3.1\tCompara\u00e7\u00e3o\tdos\tvalores obtidos usando as Formula\u00e7\u00f5es MTZL\te WMTZL............... 33\n3.2\tCompara\u00e7ao\tdas\tformula\u00e7\u00f2es usando um exemplo de 5 nodos......................... 39\n3.3\tCompara\u00e7ao\tdas\tformula\u00e7\u00e3es usando um exemplo de 10 nodos........................ 47\n3.4\tCompara\u00e7\u00e3o\tdos\tvalores da relaxa\u00e7\u00e3o linear da Formula\u00e7\u00e3o MTZ com\tas\tv\u00e1rias de-\nsigualdades levantadas em instancias de 10 nodos................................... 49\n3.5\tCompara\u00e7\u00e3o dos valores da relaxa\u00e7\u00e3o linear da Formula\u00e7\u00e3o MTZ com as v\u00e1rias desigualdades levantadas em inst\u00e2ncias de 20 nodos.................................... 50\n3.6\tCompara\u00e7\u00e3o dos valores da relaxa\u00e7\u00e3o linear da Formula\u00e7ao WMTZ com as v\u00e1rias\ndesigualdades levantadas em instancias de 10 nodos................................. 52\n3.7\tComparac\u00e3o dos valores da relaxac\u00e3o linear da Formula\u00e7ao WMTZ com as v\u00e1rias\ndesigualdades levantadas em inst\u00e2ncias de 20 nodos................................. 53\n3.8\tComparac\u00e3o dos tempos m\u00e1dios (em segundos) e dos desvios padr\u00f5es necess\u00e1rios\npara a obten\u00e7c\u00e3ao do valor da relaxac\u00e7a\u00e3o linear nas Formula\u00e7c\u00e3oes MTZ e WMTZ em inst\u00e2ncias QC...................................................................... 55\n3.9\tCompara\u00e7\u00e3o dos tempos m\u00e1dios (em segundos) e dos desvios padr\u00e3es necess\u00e1rios\npara a obten\u00e7c\u00e3ao do valor da relaxa\u00e7c\u00e3ao linear nas Formula\u00e7c\u00e3oes MTZ e WMTZ em instancias R....................................................................... 56\n3.10\tCompara\u00e7\u00e3o dos tempos m\u00e9dios (em segundos) e dos desvios padr\u00e3es necess\u00e1rios\npara a obtenc\u00e7\u00e3ao do valor da relaxa\u00e7ca\u00e3o linear nas Formula\u00e7c\u00e3oes MTZ e WMTZ em instancias E....................................................................... 56\n3.11\tComparac\u00e3o das formula\u00e7\u00e3es em instancias QC de 10 e 20 nodos...................... 58\n3.12\tCompara\u00e7ao das formulacoes em instancias QC de 40, 60 e 80 nodos.................. 60\n3.13\tCompara\u00e7ao dos Procedimentos P-CS e P-WMTZ+C em termos de tempo medio de\nexecu\u00e7c\u00e3ao (em segundos) da relaxa\u00e7c\u00e3ao linear em inst\u00e2ancias QC de 10, 20, 40, 60 e 80 nodos.............................................................................. 61\n3.14\tComparac\u00e3o das formula\u00e7oes em instancias R de 10 nodos............................ 62\n3.15\tComparac\u00e3o das formula\u00e7oes em instancias R de 40, 60, 80 e 100 nodos.............. 64\n3.16\tCompara\u00e7\u00e3o das formula\u00e7\u00f5es em inst\u00e2ncias E de 10 nodos....................................... 65\n3.17\tCompara\u00e7\u00e3o das formula\u00e7\u00f5es em instancias E de 20, 40, 60 e 80 nodos......................... 66\n3.18\tTempos m\u00e9dios, em segundos, e respetivos desvios padr\u00f5es obtidos com a aplica\u00e7ao do Procedimento P-WMTZ+C na obten\u00e7ao do valor otimo ou de um limite superior\npara o valor otimo em cada grupo de instancias............................................... 68\n4.1\tResultados\tda\taplicac\u00e3o do Algoritmo Algl para o\texemplo\tde 5\tnodos.. 86\n4.2\tResultados\tda\taplica\u00e7\u00e3o do Algoritmo Alg2 para o\texemplo\tde 5\tnodos.. 87\n4.3\tResultados\tda\trelaxa\u00e7\u00e3o Lagrangeana aplicando o\tAlgoritmo Alg3 para diferentes\nvalores de p................................................................................. 89\n4.4\tResultados\tda\taplicacao do\tAlgoritmo Alg4\tpara o exemplo de 5 nodos........... 91\n4.5\tResultados\tda\taplica\u00e7ao do\tAlgoritmo Alg5\tpara obten\u00e7ao\tdo intervalo\t[lk,uk].\t.\t.\t95\n4.6\tResultados\tda\taplica\u00e7ao do\tAlgoritmo Alg6\tpara obten\u00e7\u00e3o\tdo intervalo\t[lk,uk].\t.\t.\t97\n4.7\tComparac\u00e3o dos algoritmos\tLagrangeanos no Exemplo 2.1..................................... 105\n4.8\tValores de p utilizados no Algoritmo Alg3 nas inst\u00e2ncias Aleat\u00f3rias e Euclideanas de\n10 a 100 nodos. ............................................................................ 107\n4.9\tValores de p utilizados no Algoritmo Alg3 nas inst\u00e2ancias Aleato\u00e9rias e Euclideanas de\n150 a 1000 nodos. .......................................................................... 107\n4.10\tCompara\u00e7c\u00e3ao das duas estrat\u00e9egias de inicializa\u00e7c\u00e3ao do Algoritmo Alg5 em insta\u00e2ncias\nQC.......................................................................................... 108\n4.11\tPercentagens de gaps nulos obtidas atrav\u00e9s do LS nos varios algoritmos por cada\ngrupo de insta\u00e2ncias. ...................................................................... 110\n4.12\tPercentagens de GapLS que sao inferiores aos GapR nos varios algoritmos por cada\ngrupo de insta\u00e2ncias. ...................................................................... 111\n4.13\tGaps m\u00e9dios, em percentagem, obtidos pelos algoritmos Lagrangeanos nas inst\u00e2ncias\nQC.......................................................................................... 114\n4.14\tDesvios Padr\u00e3es dos gap obtidos pelos algoritmos Lagrangeanos nas inst\u00e2ncias QC. 115\n4.15\tTempos m\u00e9dios, em segundos, obtidos pelos algoritmos Lagrangeanos (instancias QC). 117\n4.16\tDesvios padr\u00e3es dos tempos obtidos pelos algoritmos Lagrangeanos (instancias QC). 117\n4.17\tGap m\u00e9edios, em percentagem, obtidos pelos algoritmos Lagrangeanos nas inst\u00e2ancias R.120\n4.18\tDesvios Padr\u00e3es dos gap obtidos pelos algoritmos Lagrangeanos nas inst\u00e2ncias R. .\t121\n4.19\tTempos m\u00e9dios, em segundos, obtidos pelos algoritmos Lagrangeanos (instancias R). 123\n4.20\tDesvios padr\u00e3es dos tempos obtidos pelos algoritmos Lagrangeanos (inst\u00e2ncias R). .\t123\n4.21\tGap medios, em percentagem, obtidos pelos algoritmos Lagrangeanos nas inst\u00e2ncias E. 126\n4.22\tDesvios Padroes dos gap obtidos pelos algoritmos Lagrangeanos nas instancias E. .\t127\n4.23\tTempos m\u00e9dios, em segundos, obtidos pelos algoritmos Lagrangeanos (inst\u00e2ncias E). 129\n4.24\tDesvios padr\u00f5es dos tempos obtidos pelos algoritmos Lagrangeanos (instancias E). .\t129\n6.1\tPrincipais resultados por itera\u00e7\u00f5o do Algoritmo Sepl para as DCs aplicado ao Exem-\nplo 2.1........................................................................... 174\n6.2\tPrincipais resultados por itera\u00e7\u00f5o do Algoritmo Sep2 para as DCs aplicado ao Exem-\nplo 2.1........................................................................... 175\n6.3\tPrincipais resultados por itera\u00e7\u00f5o do Algoritmo Sepl para as DCIs aplicado ao Exem-\nplo 2.1. ........................................................................ 181\n6.4\tPrincipais resultados por itera\u00e7ao do Algoritmo Sep2 para as DCIs aplicado ao Exem-\nplo 2.1. ........................................................................ 182\n6.5\tPrincipais resultados por itera\u00e7\u00f5o do Algoritmo Sepl para as DCIEs aplicado ao\nExemplo 5.4....................................................................... 184\n6.6\tPrincipais resultados por itera\u00e7\u00f5o do Algoritmo Sep2 para as DCIEs aplicado ao\nExemplo 5.4....................................................................... 185\n6.7\tPrincipais resultados por itera\u00e7ao do Algoritmo Sepl para as DCILDLs com fixac\u00f5o\nde variaveis FVD3 aplicado\tao Exemplo 2.1........................................205\n6.8\tPrincipais resultados por itera\u00e7\u00f5o do Algoritmo Sepl para as DCILDLs com fixa\u00e7\u00f5o\nde variaveis FVD2 aplicado ao Exemplo 2.l..........................................206\n6.9\tPrincipais resultados por itera\u00e7\u00f5o do Algoritmo Sepl para as DCILULs utilizando o\nprocedimento de levantamento de variaveis PL-UL aplicado ao Exemplo 2.l............212\n6.10\tPrincipais resultados por itera\u00e7ao do Algoritmo Sepl para as DCILULs utilizando o\nprocedimento de levantamento de vari\u00e9veis PL-LU aplicado ao Exemplo 2.l............213\n6.11\tPrincipais resultados por itera\u00e7ao do Algoritmo Sepl para as DGCILs utilizando o\nprocedimento de levantamento de varia\u00e9veis PL-DLU aplicado ao Exemplo 2.l. . . .\t218\n6.12\tPrincipais resultados por itera\u00e7\u00f5o do Algoritmo Sepl para as DGCILs utilizando o\nprocedimento de levantamento de varia\u00e9veis PL-DLU aplicado ao Exemplo 2.l. . . .\t219\n6.13\tCompara\u00e7\u00f5o do Procedimento P-WMTZ+CL e dos Algoritmos Sepl e Sep2 nas DCs\ne nas DCIs nas inst\u00e2ncias QC de l0 a 60 nodos......................................221\n6.14\tCompara\u00e7\u00f5o do Procedimento P-WMTZ+CL e dos Algoritmos Sepl e Sep2 nas\nDCIEs nas inst\u00e2ncias QC de l0 a 60 nodos...........................................223\n6.15\tCompara\u00e7\u00f5o do Procedimento P-WMTZ+CL e dos Algoritmos Sepl e Sep2 nas\nDCILs nas instancias QC de l0 a 60 nodos...........................................225\n6.16\tCompara\u00e7\u00f5o do Procedimento P-WMTZ+CL e dos Algoritmos Sepl e Sep2 nas\nDCILDLs nas inst\u00e2ncias QC de l0 a 60 nodos.........................................227\n6.17\tCompara\u00e7\u00e3o do Procedimento P-WMTZ+CL e dos Algoritmos Sep1 e Sep2 nas DCI-\nLULs nas inst\u00e2ncias QC de 10 a 60 nodos................................................230\n6.18\tComparac\u00e3o do Procedimento P-WMTZ+CL e dos Algoritmos Sep1 e Sep2 nas DG-\nCILs nas instancias QC de 10 a 60 nodos................................................232\n6.19\tCompara\u00e7ao do Procedimento P-WMTZ+CL e dos melhores algoritmos heur\u00edsticos\nde separacao nas inst\u00e2ncias QC de 10 a 60 nodos........................................236\n6.20\tCompara\u00e7ao do Procedimento P-WMTZ+CL e dos dois melhores algoritmos heur\u00edsticos\nde separacao nas inst\u00e2ncias QC de 80 a 150 nodos.......................................238\n7.1\tComparacao dos valores obtidos usando as quatro Heur\u00edsticas FP propostas...............262\n7.2\tGaps m\u00e9dios, em percentagem, obtidos pelas heur\u00edsticas propostas nas inst\u00e2ncias QC. 265\n7.3\tDesvios Padroes dos gap obtidos pelas heur\u00edsticas propostas nas inst\u00e2ncias QC. . .\t265\n7.4\tTempos m\u00e9edios, em segundos, obtidos pelas heur\u00e9sticas propostas nas inst\u00e2ancias QC. 267\n7.5\tDesvios padr\u00e3oes dos tempos obtidos pelas heur\u00edsticas propostas nas insta\u00e2ncias QC. .\t267\n7.6\tGaps m\u00eddios, em percentagem, obtidos pelas heur\u00edsticas propostas nas instancias R. 271\n7.7\tDesvios Padr\u00e3es dos gaps obtidos pelas heur\u00edsticas propostas nas inst\u00e2ncias R. . .\t271\n7.8\tTempos m\u00ededios, em segundos, obtidos pelas heur\u00edsticas propostas nas inst\u00e2ancias R. 273\n7.9\tDesvios padro\u00e3es dos tempos obtidos pelas heur\u00edsticas propostas nas inst\u00e2ancias R. .\t273\n7.10\tGaps m\u00ededios, em percentagem, obtidos pelas heur\u00edsticas propostas nas insta\u00e2ncias E. 276\n7.11\tDesvios Padr\u00e3oes dos gaps obtidos pelas heur\u00edsticas propostas nas inst\u00e2ancias E. . . .\t276\n7.12\tTempos m\u00ededios, em segundos, obtidos pelas heur\u00edsticas propostas nas inst\u00e2ancias E. 278\n7.13\tDesvios padr\u00e3oes dos tempos obtidos pelas heur\u00edsticas propostas nas insta\u00e2ncias E. .\t278\n8.1\tCompara\u00e7ao dos algoritmos Local Branching na instancia QC10-8..........................299\n8.2\tTempo, em segundos, imposto na exploracao das vizinhan\u00e7as..............................301\n8.3\tCompara\u00e7ao dos algoritmos Local Branching em termos de gaps m\u00eddios (em percentagem) e de tempo m\u00eddio de execu\u00e7\u00e3o (em segundos) nas inst\u00e2ncias QC.............303\n8.4\tCompara\u00e7\u00e3o dos algoritmos Local Branching em termos de gaps m\u00eddios (em percentagem) e de tempo m\u00eddio de execucao (em segundos) nas instancias R..............305\n8.5\tCompara\u00e7\u00e3o dos algoritmos Local Branching em termos de gaps m\u00eddios (em percentagem) e de tempo m\u00ededio de execu\u00e7c\u00e3ao (em segundos) nas insta\u00e2ncias E. ....... 307\n8.6\tCompara\u00e7\u00e3o entre os Algoritmos ALB4 e ABB-P-WMTZ+C nas instancias QC de\n10 a 40 nodos......................................................................... 309\n8.7\tCompara\u00e7\u00e3o entre os Algoritmos ALB4 e ABB-P-WMTZ+C nas inst\u00e2ncias QC de\n60 a 100 nodos. ...................................................................... 310\n8.8\tCompara\u00e7\u00e3o entre os Algoritmos ALB4 e ABB-P-WMTZ+C nas inst\u00e2ncias QC de\n150 a 1000 nodos...........................................311\n8.9\tCompara\u00e7\u00e3o entre os Algoritmos ALB4 e ABB-P-WMTZ+C nas inst\u00e2ncias R de 10\na 150 nodos................................................312\n8.10\tCompara\u00e7\u00e3o entre os Algoritmos ALB4 e ABB-P-WMTZ+C nas inst\u00e2ncias R de 200\na 1000 nodos...............................................313\n8.11\tCompara\u00e7\u00e3o entre os Algoritmos ALB4 e ABB-P-WMTZ+C nas inst\u00e2ncias E de 10\na 150 nodos................................................314\n8.12\tCompara\u00e7\u00e3o entre os Algoritmos ALB4 e ABB-P-WMTZ+C nas inst\u00e2ncias E de 200\na 1000 nodos...............................................315\n356\nBibliografia\n[1]\tFICO Xpress Optimization Suite. www.fico.com/xpress.\n[2]\tT. Achterberg and T. Berthold. Improving the feasibility pump. Discrete Optimization, 4(1):77-86, 2007.\n[3]\tV. Aggarwal, Y.P. Aneja, and K.P. Nair. Minimal spanning tree subject to a side constraint. Computers and Operations Research, 9(4):287-296, 1982.\n[4]\tA. Agra, A. Cerveira, C. Requejo, and E. Santos. On the weight-constrained minimum spanning tree problem. In Proceedings of the International Network Optimization Conference, volume 6701 of Lecture Notes in Computer Science, pages 156-161, 2011.\n[5]\tR.K. Ahuja, T.L. Magnanti, and J.B. Orlin. Network flows. In G.L. Nemhauser, A.H.G. Rinnooy Kan, and M.J. Todd, editors, Optimization, Handbooks in Operations Research and Management Science, Vol. 1. Elsevier Science Publishers, North-Holland, Amsterdam, The Netherlands, 1989.\n[6]\tR.K. Ahuja, T.L. Magnanti, and J.B. Orlin. Network Flows: Theory, Algorithms, and Applications. Prentice-Hall, New York, 1993.\n[7]\tL. Amado and P. Barcia. New polynomial bounds for matroidal knapsacks. European Journal of Operations Research, 95(1):201-210, 1996.\n[8]\tK.A. Andersen, K. Jornsten, and M. Lind. On bicriterion minimal spanning trees: An approximation. Computers and Operations Research, 23(12):1171-1182, 1996.\n[9]\tR. Andrade, A. Lucena, and N. Maculan. Using lagrangian dual information to generate degree constrained spanning trees. Discrete Applied Mathematics, 154(5):703-717, 2006.\n[10]\tE. Balas. Facets of knapsack polytope. Mathematical Programming, 8(1):146\u2014164, 1975.\n[11]\tE. Balas and E. Zemel. Facets of knapsack polytope from minimal covers. SIAM Jounal on Applied Mathematics, 34(1):119\u2014148, 1978.\n[12]\tL. Bertacco, M. Fischetti, and A. Lodi. A feasibility pump heuristic for general mixed-integer problems. Discrete Optimization, 4(1):63-76, 2007.\n[13]\tD. Blokh and G. Gutin. An approximation algorithm for combinatorial optimization problems with two parameters. Australasian Journal of Combinatorics, 14:157-164, 1996.\n[14]\tT. Christof and G. Reinelt. PORTA POlyhedron Representation Transformation Algorithm. http://typo.zib.de/opt-long_projects/Software/Porta/.\n[15]\tM. Desrochers and G. Laporte. Improvements and extensions to the Miller-Tucker-Zemlin subtour elimination constraints. Operations Research, 10(1):27-36, 1991.\n[16]\tD. Eppstein. Finding the k smallest spanning trees. BIT Numerical Mathematics, 32(2):237-248, 1992.\n[17]\tC. E. Ferreira, A. Martin, and R. Weismantel. Solving multiple knapsack problems by cutting planes. SIAM Journal Optimization, 6(3):858-877, 1996.\n[18]\tM. Fischetti, F. Glover, and A. Lodi. The feasibility pump. Mathematical Programming, 104(1):91-104, 2005.\n[19]\tM. Fischetti and A. Lodi. Local branching. Mathematical Programming, 98(1-3):23-47, 2003.\n[20]\tL.R. Ford and D.R. Fulkerson. Flows in Networks. Princeton University Press, 1962.\n[21]\tM.R. Garey and D.S. Johnson. Computers and Intractability: A Guide to the Theory of NP-Completeness. W.H. Freeman, New York, 1979.\n[22]\tR.E. Gomory. Some polyhedra related to combinatorial problems. Linear Algebra and its Applications, 2(4):451-558, 1969.\n[23]\tL. Gouveia. A 2n constraint formulation for the capacitated minimal spanning tree problem. Operations Research, 43(1):130\u2014141, 1995.\n[24]\tL. Gouveia. Using the Miller-Tucker-Zemlin constraints to formulate a minimal spanning tree problem with hop constraints. Computers and Operations Research, 22(9):959-970, 1995.\n[25]\tL. Gouveia. Multicommodity flow models for spanning trees with hop constraints. European Journal of Operational Research, 95(1):178-190, 1996.\n[26]\tL. Gouveia and T. Magnanti. Network flow models for designing diameter-constrained minimum-spanning and Steiner trees. Networks, 41(3):159-173, 2003.\n[27]\tL. Gouveia and P. Martins. The capacitated minimum spanning tree problem: revisiting hop-indexed formulations. Computers and Operations Research, 32(9):2435-2452, 2005.\n[28]\tL. Gouveia and C. Requejo. A new lagrangean relaxation approach for the hop-constrained minimum spanning tree problem. European Journal of Operational Research, 132(3):539-552, 2001.\n[29]\tZ. Gu, G.L. Nemhauser, and M.W.P. Savelsbergh. Lifted cover inequalities for 0-1 integer programs: Computation. INFORMS Journal on Computing, 10(4):427-437, 1998.\n[30]\tZ. Gu, G.L. Nemhauser, and M.W.P. Savelsbergh. Lifted cover inequalities for 0-1 integer programs: Complexity. INFORMS Journal on Computing, 11(1):117-123, 1999.\n[31]\tH.W. Hamacher and G. Ruhe. On spanning tree problems with multiple objectives. Annals of Operations Research, 52(4):209-230, 1994.\n[32]\tP.L. Hammer, E.L. Johnson, and U.N. Peled. Facets of regular 0-1 polytopes. Mathematical Programming, 8(1):179-206, 1975.\n[33]\tG. Handler and I. Zang. A dual algorithm for the constrained shortest path problem. Networks, 10(4):293-309, 1980.\n[34]\tP. Hansen, N. Mladenovic, and D. Urosevic. Variable neighborhood search and local branching. Computers and Operations Research, 33(10):3034-3045, 2006.\n[35]\tR. Hassin and A. Levin. An efficient polynomial time approximation scheme for the constrained minimum spanning tree problem using matroid intersection. SIAM Journal on Computing, 33(2):261-268, 2004.\n[36]\tM. Held, P. Wolfe, and H.P. Crowder. Validation of subgradient optimization. Mathematical Programming, 6(1):62-88, 1974.\n[37]\tS.T. Henn. Weight-constrained minimum spanning tree problem. Master\u2019s thesis, Department of Mathematics, University of Kaiserslautern, Kaiserslautern, Germany, 2007.\n[38]\tS.P. Hong, S.J. Chung, and B.H. Park. A fully polynomial bicriteria approximation scheme for the constrained spanning tree problem. Operations Research Letters, 32(3):233-239, 2004.\n[39]\tB.A. Julstrom and G.R. Raidl. Edges sets: an effective evolutionary coding of spanning trees. IEEE Transactions on Evolutionary Computation, 7(3):225-239, 2003.\n[40]\tA. Juttner. On resource constrained optimization problems. In fth Japonese-Hungarian Symposium on Discrete Mathematics and its Applications, pages 3-6, 2005.\n[41]\tA. Juttner, B. Szviatovszki, I. Mecs, and Z. Rajko. Lagrange relaxation based method for the QoS routing problem. In Proceedings of the IEEE INFOCOM -The conference on Computer Communications, volume 2, pages 859-868. IEEE Computer and communications Societies, 2001.\n[42]\tK. Kaparis and A.N. Letchford. Local and global lifted cover inequalities for the 01 multidimensional knapsack problem. European Journal of Operational Research, 186(1):91-103, 2008.\n[43]\tK. Kaparis and A.N. Letchford. Separation algorithms for 0-1 knapsack polytopes. Mathematical Programming, 124(1-2):69-91, 2010.\n[44]\tD. Klabjan, G.L. Nemhauser, and C. Tovey. The complexity of cover inequality separation. Operations Research Letters, 23(1-2):35 - 40, 1998.\n[45]\tT. Magnanti and L. Wolsey. Optimal trees. In M.O. Ball, T.L. Magnanti, C.L. Monma, and G.L. Nemhauser, editors, Network Models, Handbooks in Operations\nResearch and Management Science, Vol. 7. Elsevier Science Publishers, North-Holland, 1995.\n[46]\tC.E. Miller, A.W. Tucker, and R.A. Zemlin. Integer programming formulation and travelling salesman problems. Journal of the Association for Computing Machinery, 7(4):326-329, 1960.\n[47]\tN. Mladenovic and P. Hansen. Variable neighborhood search. Computers and Operations Research, 24(11):1097-1100, 1997.\n[48]\tS.C. Narula and C.A. Ho. Degree-constrained minimum spanning tree. Computers and Operations Research, 7(4):239-249, 1980.\n[49]\tG.L. Nemhauser and L.A. Wolsey. Integer and Combinatorial Optimization. John Wiley &amp; Sons, New York, 1988.\n[50]\tD. Pisinger. Where are the hard knapsack problems? Computers and Operations Research, 32(9):2271-2284, 2005.\n[51]\tR.C. Prim. Shortest connection networks and some generalizations. Bell Systems Technical Journal, 36(6):1389-1401, 1957.\n[52]\tG.R. Raidl, S. Pirkwieser, and J. Puchinger. A Lagrangean decomposi-tion/evolutionary algorithm hybrid for the knapsack constrained maximum spanning tree problem. Studies in Computational Intelligence, 153:69-85, 2008.\n[53]\tR.M. Ramos, S. Alonso, J. Sicilia, and C. Gonzalez. The problem of the optimal biobjective spanning tree. European Journal of Operational Research, 111(3):617-628, 1998.\n[54]\tR. Ravi and M.X. Goemans. The constrained minimum spanning tree problem. In Proceedings of the Scandinavian Workshop on Algorithm Theory, volume 1097 of Lecture Notes in Computer Science, pages 66-75, 1996.\n[55]\tC. Requejo, A. Agra, A. Cerveira, and E. Santos. Formulations for the weight-constrained minimum spanning tree problem. In Proceedings of the International Conference on Numerical Analysis and Applied Mathematics, volume 1281 of AIP Conference Proceedings, pages 2166-2169, 2010.\n[56]\tC. Requejo and E. Santos. Greedy heuristics for the diameter-constrained minimum spanning tree problem. Journal of Mathematical Sciences, 161(6):930-943, 2009.\n[57]\tC. Requejo and E. Santos. Lagrangean based algorithms for the weight constrained minimum spanning tree problem. In Proceedings of the VII ALIO-EURO -Workshop on Combinatorial Optimization, pages 38-41, 2011.\n[58]\tA.W. Shogan. Constructing a minimal-cost spanning tree subject to resource constraints and flow requirements. Networks, 13(2):169-190, 1983.\n[59]\tN.Z. Shor. Minimization Methods for Non-Differentiable Functions. SpringerVerlag, Berlin, 1985.\n[60]\tF. Sourd and O. Spanjaard. A multiobjective branch-and-bound framework: application to the biobjective spanning tree problem. INFORMS Journal on Computing, 20(3):472-484, 2008.\n[61]\tS. Steiner and T. Radzik. Computing all efficient solutions of the biobjective minimum spanning tree problem. Computers and Operations Research, 35(1):198-211, 2008.\n[62]\tL.A. Wolsey. Faces for linear inequalities in 0-1 variables. Mathematical Programming, 8(1):165-178, 1975.\n[63]\tL.A. Wolsey. Integer Programming. John Wiley &amp; Sons, 1998.\n[64]\tY. Xiao, K. Thulasiraman, G. Xue, and A. Juttner. The constrained shortest path problem: Algorithmic approaches and an algebraic study with generalization. AKCE International Journal of Graphs and Combinatorics, 2(2):63-86, 2005.\n[65]\tG. Xue. Primal-dual algorithms for computing weight-constrained shortest paths and weight-constrained minimum spanning trees. In Proceedings of the IEEE International Performance, Computing, and Communications Conference, pages 271 -277. IEEE Communications Society, 2000.\n[66]\tT. Yamada, K. Watanabe, and S. Kataoka. Algorithms to solve the knapsack constrained maximum spanning tree problem. International Journal of Computer Mathematics, 82(1):23-34, 2005."}]}}}