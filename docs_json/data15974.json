{"add": {"doc": {"field": [{"@name": "docid", "#text": "BR-TU.19339"}, {"@name": "filename", "#text": "2662_244608.pdf"}, {"@name": "filetype", "#text": "PDF"}, {"@name": "text", "#text": "PAULO HIROAQUI RUIZ NAKASHIMA\n\nALOCA\u00c7\u00c3O DE G\u00c1S DE ELEVA\u00c7\u00c3O\n\nEM CAMPOS DE PETR\u00d3LEO:\n\nMODELOS E ALGORITMOS\n\nFLORIAN\u00d3POLIS\n2007\n\n\n\nUNIVERSIDADE FEDERAL DE SANTA CATARINA\n\nPROGRAMA DE P\u00d3S-GRADUA\u00c7\u00c3O\nEM ENGENHARIA EL\u00c9TRICA\n\nALOCA\u00c7\u00c3O DE G\u00c1S DE ELEVA\u00c7\u00c3O\n\nEM CAMPOS DE PETR\u00d3LEO:\n\nMODELOS E ALGORITMOS\n\nTese submetida \u00e0\nUniversidade Federal de Santa Catarina\n\ncomo parte dos requisitos para a obten\u00e7\u00e3o\ndo grau de Doutor em Engenharia El\u00e9trica.\n\nPaulo Hiroaqui Ruiz Nakashima\n\nFlorian\u00f3polis, Outubro de 2007.\n\n\n\nAloca\u00e7\u00e3o de G\u00e1s de Eleva\u00e7\u00e3o em Campos de Petr\u00f3leo:\nModelos e Algoritmos\n\nPaulo Hiroaqui Ruiz Nakashima\n\n\u2018Esta Tese foi julgada adequada para a obten\u00e7\u00e3o do t\u00edtulo de Doutor em Engenharia\nEl\u00e9trica, \u00c1rea de Concentra\u00e7\u00e3o em Automa\u00e7\u00e3o e Sistemas, e aprovada em sua forma final\n\npelo Programa de P\u00f3s-Gradua\u00e7\u00e3o em Engenharia El\u00e9trica da Universidade Federal de Santa\nCatarina.\u2019\n\nEduardo Camponogara, Ph.D.\nOrientador\n\nKatia Campos de Almeida, Ph.D.\nCoordenadora do Programa de P\u00f3s-Gradua\u00e7\u00e3o em Engenharia El\u00e9trica\n\nBanca Examinadora:\n\nEduardo Camponogara, Ph.D.\nPresidente\n\nMarcus Vinicius Soledade Poggi de Arag\u00e3o, Ph.D. PUC-RJ\n\nMario Cesar Mello Massa de Campos, Dr. CENPES\n\nJulio Elias Normey Rico, Dr. UFSC\n\nUbirajara Franco Moreno, Dr. UFSC\n\nii\n\n\n\nDedico este trabalho a meus pais, Hiroaqui e Ivone, e a minha tia Alice, pela educa\u00e7\u00e3o e o apoio\n\nque me permitiram chegar at\u00e9 aqui.\n\niii\n\n\n\nAGRADECIMENTOS\n\nAo Professor Eduardo Camponogara, pela orienta\u00e7\u00e3o, amizade, paci\u00eancia, apoio, e pela confian\u00e7a\n\ndepositada em mim para a realiza\u00e7\u00e3o deste trabalho.\n\nAo jovem camarada Agustinho Pluc\u00eanio, pela amizade e por sua grande experi\u00eancia compartilhada\n\ncom todos, originando valiosas id\u00e9ias utilizadas aqui.\n\nAos Professores Augusto, Daniel e Julio, coordenadores do PRH-34 durante o per\u00edodo deste doutorado,\n\npelo total apoio a esta pesquisa.\n\nA todos os meus amigos (sem citar nomes pra n\u00e3o correr o risco de esquecer algu\u00e9m) que estiveram\n\ncomigo durante esta minha \u00f3tima fase em Florian\u00f3polis.\n\nA toda minha fam\u00edlia, que soube compreender minha aus\u00eancia e me apoiou nos momentos dif\u00edceis.\n\nA Ag\u00eancia Nacional de Petr\u00f3leo, que financiou parte desta pesquisa.\n\niv\n\n\n\nResumo da Tese apresentada \u00e0 UFSC como parte dos requisitos necess\u00e1rios para obten\u00e7\u00e3o\ndo grau de Doutor em Engenharia El\u00e9trica.\n\nAloca\u00e7\u00e3o de G\u00e1s de Eleva\u00e7\u00e3o em Campos de Petr\u00f3leo\nModelos e Algoritmos\n\nPaulo Hiroaqui Ruiz Nakashima\n\nOutubro/2007\n\nOrientador: Prof. Dr. Eduardo Camponogara\nCo-Orientador: Prof. Dr. Daniel Pagano\n\u00c1rea de Concentra\u00e7\u00e3o: Automa\u00e7\u00e3o e Sistemas\nPalavras-chave: Algoritmos, Ind\u00fastria de Petr\u00f3leo, M\u00e9todos de Otimiza\u00e7\u00e3o, Pesquisa Op-\neracional\nN\u00famero de P\u00e1ginas: xiii + 110\n\nO sistema de eleva\u00e7\u00e3o artificial de petr\u00f3leo por inje\u00e7\u00e3o cont\u00ednua de g\u00e1s, conhecido como\n\ncontinuous gas-lift ou simplesmente gas-lift \u00e9 um dos mais utilizados no Brasil e no mundo,\n\ndevido ao seu baixo custo relativo e efici\u00eancia satisfat\u00f3ria em uma vasta gama de condi\u00e7\u00f5es\n\nde opera\u00e7\u00e3o. Neste sistema de produ\u00e7\u00e3o, a aloca\u00e7\u00e3o da taxa dispon\u00edvel de inje\u00e7\u00e3o de g\u00e1s\n\npara um grupo de po\u00e7os \u00e9 um problema de grande relev\u00e2ncia. A decis\u00e3o da taxa de inje\u00e7\u00e3o\n\nde g\u00e1s para cada po\u00e7o normalmente n\u00e3o \u00e9 \u00f3tima, pois \u00e9 baseada em regras ad hoc. Sendo\n\nassim, ganhos substanciais podem ser alcan\u00e7ados se estas decis\u00f5es forem substitu\u00eddas por\n\nsolu\u00e7\u00f5es \u00f3timas.\n\nNeste trabalho, apresentamos algumas abordagens para a solu\u00e7\u00e3o do problema de max-\n\nimizar o lucro obtido com a venda de hidrocarbonetos extra\u00eddos de um campo com po\u00e7os\n\noperando via gas-lift. As solu\u00e7\u00f5es desenvolvidas utilizam Programa\u00e7\u00e3o Din\u00e2mica, Progra-\n\nma\u00e7\u00e3o Linear Inteira Mista aliada \u00e0 Teoria de Desigualdades V\u00e1lidas e algoritmos Branch-\n\nand-Bound e Branch-and-Cut e fornecem a taxa de inje\u00e7\u00e3o de g\u00e1s \u00f3tima para cada po\u00e7o\n\nsatisfazendo restri\u00e7\u00f5es como por exemplo a taxa de inje\u00e7\u00e3o dispon\u00edvel e os limites de pro-\n\ncessamento de fluidos produzidos.\n\nAs abordagens desenvolvidas se mostram eficientes para a aplica\u00e7\u00e3o em quest\u00e3o. As\n\nsolu\u00e7\u00f5es encontradas possuem alta qualidade (pr\u00f3ximas das solu\u00e7\u00f5es \u00f3timas), e o custo\n\ncomputacional para a obten\u00e7\u00e3o das mesmas \u00e9 baixo. As t\u00e9cnicas de solu\u00e7\u00e3o propostas aqui\n\nconstituem excelentes ferramentas de suporte \u00e0 decis\u00e3o, podendo substituir as decis\u00f5es sub-\n\n\u00f3timas normalmente fornecidas por pacotes de otimiza\u00e7\u00e3o comerciais.\n\nv\n\n\n\nAbstract of Thesis presented to UFSC as a partial fulfillment of the requirements for the\ndegree of Doctor in Electrical Engineering.\n\nLift-Gas Allocation for Oil Fields\nModels and Algorithms\n\nPaulo Hiroaqui Ruiz Nakashima\n\nOctober/2007\n\nAdvisor: Prof. Dr. Eduardo Camponogara\nCo-Advisor: Prof. Dr. Daniel Pagano\nResearch Area: Systems and Automation\nKeywords: Algorithms, Oil Industry, Optimization Methods, Operational Research\nPages: xiii + 110\n\nThe artificial lifting method known as continuous gas-lift, or gas-lift for short, is one of\n\nthe most used in Brazil and in the world, due to its relatively low cost and good efficiency\n\non a wide range of operational conditions. For this production system, the available lift-gas\n\ninjection rate allocation for a cluster of wells is an important problem. The injection rate for\n\neach well is normally bellow the optimal point, because it is based on ad-hoc rules. Thus,\n\nsubstantial improvements may be reached if these decisions were substituted by the optimal\n\nsolution.\n\nIn this work, we show some approaches to solve the problem of maximize the profit\n\nobtained with hydrocarbons extracted from an oilfield with wells producing via gas-lift. The\n\ndeveloped solutions use Dynamic Programming, Mixed Integer Linear Programming allied\n\nto Valid Inequalities Theory, Branch-and-Bound and Branch-and-Cut algorithms, providing\n\nthe optimal injection rate for each well, satisfying constraints such as the available lift-gas\n\ninjection rate and produced fluid handling capacities.\n\nThe developed approaches are very efficient for this particular application. The solutions\n\nshown here have high quality (close to the optimal ones), and the computational cost to obtain\n\nthem is low. The solution techniques proposed here are excellent tools to support decisions,\n\nand can substitute the sub-optimal solutions normally provided by commercial optimization\n\nsoftware.\n\nvi\n\n\n\nSum\u00e1rio\n\n1 Introdu\u00e7\u00e3o 1\n\n1.1 O M\u00e9todo de Gas-Lift . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 2\n\n1.2 Revis\u00e3o Bibliogr\u00e1fica . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 4\n\n1.3 Objetivos . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 6\n\n1.4 Organiza\u00e7\u00e3o do Documento . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 8\n\n2 Fundamentos 10\n\n2.1 Otimiza\u00e7\u00e3o . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 10\n\n2.2 Programa\u00e7\u00e3o Din\u00e2mica . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 11\n\n2.2.1 Programa\u00e7\u00e3o Din\u00e2mica para o Problema da Mochila . . . . . . . . . . . . . 12\n\n2.3 Lineariza\u00e7\u00e3o por Partes . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 14\n\n2.3.1 Modelo com pesos por ponto (Modelo I) . . . . . . . . . . . . . . . . . . . 15\n\n2.3.2 Modelo com pesos sequencial (Modelo II) . . . . . . . . . . . . . . . . . . . 16\n\n2.3.3 Modelo de Sherali (Modelo III) . . . . . . . . . . . . . . . . . . . . . . . . 18\n\n2.4 Defini\u00e7\u00f5es de Poliedro e Dimens\u00e3o . . . . . . . . . . . . . . . . . . . . . . . . . . . 19\n\n2.5 Descri\u00e7\u00e3o de Poliedros atrav\u00e9s de Facetas . . . . . . . . . . . . . . . . . . . . . . . 20\n\n2.5.1 Caracteriza\u00e7\u00e3o de Facetas . . . . . . . . . . . . . . . . . . . . . . . . . . . 21\n\n2.6 Desigualdades V\u00e1lidas para o Problema da Mochila . . . . . . . . . . . . . . . . . . 22\n\n2.7 Sum\u00e1rio . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 24\n\nvii\n\n\n\n3 Solu\u00e7\u00e3o de P( /0) Utilizando Programa\u00e7\u00e3o Din\u00e2mica 25\n\n3.1 Formula\u00e7\u00e3o do Problema . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 25\n\n3.2 Solu\u00e7\u00e3o de P( /0) . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 28\n\n3.2.1 Recorr\u00eancias . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 29\n\n3.2.2 Algoritmo PD para P( /0) . . . . . . . . . . . . . . . . . . . . . . . . . . . . 29\n\n3.3 Resultados Num\u00e9ricos . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 31\n\n3.3.1 Compara\u00e7\u00f5es com Resultados Publicados . . . . . . . . . . . . . . . . . . . 33\n\n3.4 Generaliza\u00e7\u00f5es do Problema . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 36\n\n3.4.1 Solu\u00e7\u00e3o de PW ( /0) . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 37\n\n3.4.2 Incertezas nas W PCs . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 38\n\n3.5 Desigualdades v\u00e1lidas para P( /0) . . . . . . . . . . . . . . . . . . . . . . . . . . . . 40\n\n3.6 Sum\u00e1rio . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 42\n\n4 Solu\u00e7\u00e3o Recursiva de P(G) 44\n\n4.1 Formula\u00e7\u00e3o do Problema . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 44\n\n4.2 Solu\u00e7\u00e3o de P(F) . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 46\n\n4.2.1 Recurs\u00f5es . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 47\n\n4.2.2 Algoritmo PD para P(F) . . . . . . . . . . . . . . . . . . . . . . . . . . . . 48\n\n4.2.3 Resultados Num\u00e9ricos . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 51\n\n4.3 Solu\u00e7\u00e3o de P(G) . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 52\n\n4.3.1 Recurs\u00f5es . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 53\n\n4.3.2 Algoritmo Recursivo para P(G) . . . . . . . . . . . . . . . . . . . . . . . . 54\n\n4.3.3 Resultados Num\u00e9ricos . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 57\n\n4.4 Extens\u00f5es . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 58\n\n4.5 Sum\u00e1rio . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 59\n\nviii\n\n\n\n5 Solu\u00e7\u00e3o de P( /0) Utilizando Programa\u00e7\u00e3o Linear Inteira Mista 60\n\n5.1 Lineariza\u00e7\u00e3o por Partes Aplicada a P . . . . . . . . . . . . . . . . . . . . . . . . . . 60\n\n5.2 Desigualdades V\u00e1lidas . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 63\n\n5.3 Lifting de Coberturas M\u00ednimas . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 73\n\n5.4 Sobre os Fatores de Lifting . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 76\n\n5.5 Resultados Num\u00e9ricos . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 78\n\n5.6 Sum\u00e1rio . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 80\n\n6 Solu\u00e7\u00e3o de P5( /0) Utilizando Programa\u00e7\u00e3o Linear Inteira Mista 81\n\n6.1 Formula\u00e7\u00e3o do Problema . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 81\n\n6.2 Desigualdades V\u00e1lidas para P5( /0) . . . . . . . . . . . . . . . . . . . . . . . . . . . 88\n\n6.3 Resultados Num\u00e9ricos . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 94\n\n6.4 Sum\u00e1rio . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 96\n\n7 Conclus\u00f5es 97\n\n7.1 Pesquisa Futura . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 98\n\nA Ajuste de Curvas 100\n\nB Desigualdades V\u00e1lidas para P(G) 102\n\nix\n\n\n\nLista de Figuras\n\n1.1 Elementos que comp\u00f5e um conjunto de po\u00e7os de petr\u00f3leo que produzem via gas-lift. 3\n\n1.2 Esquema de po\u00e7o operado via inje\u00e7\u00e3o cont\u00ednua de g\u00e1s [14]. . . . . . . . . . . . . . . 4\n\n1.3 T\u00edpica curva de desempenho de eleva\u00e7\u00e3o para um po\u00e7o operado via inje\u00e7\u00e3o cont\u00ednua\n\nde g\u00e1s. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 5\n\n1.4 Curvas de desempenho de gas-lift para po\u00e7os dos tipos A, B, C e D. . . . . . . . . . 6\n\n2.1 Lineariza\u00e7\u00e3o por partes para o modelo por pesos . . . . . . . . . . . . . . . . . . . . 16\n\n2.2 Lineariza\u00e7\u00e3o por partes para o modelo sequencial . . . . . . . . . . . . . . . . . . . 17\n\n2.3 Lineariza\u00e7\u00e3o por partes para o modelo de Sherali . . . . . . . . . . . . . . . . . . . 18\n\n4.1 Ilustra\u00e7\u00e3o do algoritmo PD para P(F). O grafo da esquerda define as restri\u00e7\u00f5es de\n\npreced\u00eancia de ativa\u00e7\u00e3o dos po\u00e7os. Para uma ordem topol\u00f3gica T = ?1, 2, 3, 4, 5, 6?,\n\nos conjuntos de sub-problemas resolvidos e as tabelas geradas pelo algoritmo s\u00e3o\n\nmostrados na \u00e1rvore da direita, que indica a ordem na qual os problemas s\u00e3o resolvi-\n\ndos. Por exemplo, 5 : P{5,6}? J{5,6} significa que o conjunto de sub-problemas P\ny\n{5,6}\n\nfoi o quinto a ser resolvido para obter J\ny\n{5,6}, para y ?{0, 1}. . . . . . . . . . . . . . 50\n\n4.2 Ilustra\u00e7\u00e3o dos algoritmos recursivos que resolvem P(G). O grafo de restri\u00e7\u00f5es de pre-\n\nced\u00eancia G possui 5 n\u00f3s como ilustrado na ra\u00edz da \u00e1rvore de sub-problemas. A ordem\n\ntopol\u00f3gica de G usada para guiar a solu\u00e7\u00e3o \u00e9 T = ?3, 1, 2, 4, 5?. Cada n\u00f3 indica um\n\nconjunto de sub-problemas resolvido pelo algoritmo: P (1, 2, 4) representa o conjunto\n\nde sub-problemas P (G[{1, 2, 4}]). . . . . . . . . . . . . . . . . . . . . . . . . . . . 56\n\n5.1 Ilustra\u00e7\u00e3o da lineariza\u00e7\u00e3o por partes da fun\u00e7\u00e3o do fluxo de sa\u00edda de um po\u00e7o n uti-\n\nlizando o modelo de Sherali (Se\u00e7\u00e3o 2.3.3). . . . . . . . . . . . . . . . . . . . . . . . 62\n\nx\n\n\n\n6.1 Ilustra\u00e7\u00e3o da lineariza\u00e7\u00e3o por partes da fun\u00e7\u00e3o do fluxo de sa\u00edda de um po\u00e7o n uti-\n\nlizando o modelo de pesos por ponto (Se\u00e7\u00e3o 2.3.1). . . . . . . . . . . . . . . . . . . 85\n\nxi\n\n\n\nLista de Tabelas\n\n2.1 Valores de fk(?) e de pk(?) para uma inst\u00e2ncia do problema da mochila . . . . . . . 14\n\n3.1 Par\u00e2metros de uma inst\u00e2ncia de P( /0) com 6 po\u00e7os. . . . . . . . . . . . . . . . . . . 30\n\n3.2 Tabela Jm,n, com destaque para a solu\u00e7\u00e3o \u00f3tima JM,1 = J10,1. . . . . . . . . . . . . . 31\n\n3.3 Tabela auxiliar Im,n, com destaque para a aloca\u00e7\u00e3o \u00f3tima de g\u00e1s qi = (7, 4251; 7, 6954; 7, 4406; 4, 0000; 4, 0000; 7, 03\n\n3.4 Qualidade m\u00e9dia da solu\u00e7\u00e3o e tempo m\u00e9dio de execu\u00e7\u00e3o do algoritmo com rela\u00e7\u00e3o\n\nao n\u00edvel de discretiza\u00e7\u00e3o M. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 32\n\n3.5 Resultados da aloca\u00e7\u00e3o de g\u00e1s de eleva\u00e7\u00e3o, Economic Slope [18] e PD . . . . . . . . 33\n\n3.6 Resultados da aloca\u00e7\u00e3o de g\u00e1s de eleva\u00e7\u00e3o, Equal Slope, Ex-In [6] e PD . . . . . . . 34\n\n3.7 Resultados da aloca\u00e7\u00e3o de g\u00e1s de eleva\u00e7\u00e3o, Separable Programming [40] e PD . . . 34\n\n3.8 Aloca\u00e7\u00e3o de g\u00e1s de eleva\u00e7\u00e3o, cen\u00e1rio sem taxas de partida: compara\u00e7\u00e3o entre SQP\n\n[1] e PD . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 35\n\n3.9 Aloca\u00e7\u00e3o de g\u00e1s de eleva\u00e7\u00e3o, cen\u00e1rio com taxas de partida: compara\u00e7\u00e3o entre SQP\n\n[1] e PD . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 35\n\n3.10 Resultados de aloca\u00e7\u00e3o de g\u00e1s de eleva\u00e7\u00e3o: compara\u00e7\u00e3o entre GOAL [36] e PD . . . 36\n\n3.11 Compara\u00e7\u00e3o entre desempenho do pior caso e caso m\u00e9dio . . . . . . . . . . . . . . . 39\n\n4.1 Solu\u00e7\u00f5es de P(F) para uma inst\u00e2ncia de 6 po\u00e7os, com qmaxi vari\u00e1vel e M = 200. . . . 51\n\n4.2 Qualidade de aproxima\u00e7\u00e3o e tempo de execu\u00e7\u00e3o para PM(F) . . . . . . . . . . . . . 52\n\n4.3 Qualidade de aproxima\u00e7\u00e3o e tempo de execu\u00e7\u00e3o para PM(G) . . . . . . . . . . . . . 58\n\n5.1 N\u00edveis de inje\u00e7\u00e3o para uma inst\u00e2ncia de 6 po\u00e7os, qmaxi = 6, 5. . . . . . . . . . . . . . 64\n\nxii\n\n\n\n5.2 Limites inferiores para os fatores de lifting, ?n,k. . . . . . . . . . . . . . . . . . . . . 72\n\n5.3 Fatores de lifting exatos, ?n,k. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 74\n\n5.4 Limites superiores para os fatores de lifting, ??n,k. . . . . . . . . . . . . . . . . . . . 76\n\n5.5 Experimentos com ILOG CPLEX . . . . . . . . . . . . . . . . . . . . . . . . . . . 79\n\n5.6 Experimentos com GNU MILP solver . . . . . . . . . . . . . . . . . . . . . . . . . 80\n\n6.1 Po\u00e7o 1 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 89\n\n6.2 Po\u00e7o 2 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 89\n\n6.3 Po\u00e7o 3 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 89\n\n6.4 Impacto das coberturas-y na velocidade de solu\u00e7\u00e3o para inst\u00e2ncias com 32 po\u00e7os. . . 95\n\n6.5 Impacto das coberturas-y na velocidade de solu\u00e7\u00e3o para inst\u00e2ncias com 64 po\u00e7os. . . 95\n\nxiii\n\n\n\nCap\u00edtulo 1\n\nIntrodu\u00e7\u00e3o\n\nA produ\u00e7\u00e3o de hidrocarbonetos \u00e9 realizada atrav\u00e9s da perfura\u00e7\u00e3o de po\u00e7os em locais que apresen-\n\ntam forma\u00e7\u00f5es geol\u00f3gicas ricas em \u00f3leo e g\u00e1s, chamadas de reservat\u00f3rios. Quando a press\u00e3o de um\n\nreservat\u00f3rio \u00e9 suficientemente elevada para superar a press\u00e3o hidrost\u00e1tica e a perda de carga na co-\n\nluna de produ\u00e7\u00e3o, somados \u00e0 perda de carga nas instala\u00e7\u00f5es de superf\u00edcie, os fluidos nele contidos s\u00e3o\n\ncapazes de alcan\u00e7ar a superf\u00edcie naturalmente. Os po\u00e7os que produzem desta forma s\u00e3o denominados\n\npo\u00e7os surgentes. Quando a press\u00e3o de um reservat\u00f3rio \u00e9 relativamente baixa, ou quando a vaz\u00e3o de\n\num po\u00e7o est\u00e1 muito abaixo da ideal, h\u00e1 a necessidade de uma suplementa\u00e7\u00e3o da energia natural do\n\nreservat\u00f3rio atrav\u00e9s de eleva\u00e7\u00e3o artificial. Utilizando equipamentos espec\u00edficos reduz-se a press\u00e3o\n\nhidrost\u00e1tica no fundo do po\u00e7o, resultando em um diferencial maior de press\u00e3o entre o reservat\u00f3rio\n\ne o interior do po\u00e7o, com um consequente aumento de vaz\u00e3o. A eleva\u00e7\u00e3o artificial \u00e9 amplamente\n\nutilizada em po\u00e7os submarinos, especialmente em \u00e1guas profundas. Os m\u00e9todos de eleva\u00e7\u00e3o artificial\n\nmais comuns na ind\u00fastria de petr\u00f3leo s\u00e3o:\n\n\u2022 gas-lift cont\u00ednuo e intermitente;\n\n\u2022 bombeio centr\u00edfugo submerso;\n\n\u2022 bombeio mec\u00e2nico com hastes; e\n\n\u2022 bombeio por cavidades progressivas.\n\nA sele\u00e7\u00e3o do melhor m\u00e9todo de eleva\u00e7\u00e3o artificial para um determinado po\u00e7o ou campo sempre\n\nvisa a maximiza\u00e7\u00e3o do uso da energia de produ\u00e7\u00e3o naturalmente dispon\u00edvel em um reservat\u00f3rio.\n\nEsta sele\u00e7\u00e3o depende de v\u00e1rios fatores, como n\u00famero de po\u00e7os, quantidade de areia trazida pelos\n\nfluidos produzidos, raz\u00e3o g\u00e1s-l\u00edquido, capacidade de vaz\u00e3o dispon\u00edvel, profundidade do reservat\u00f3rio,\n\nviscosidade dos fluidos, disponibilidade de energia, investimento e custo operacional.\n\n\n\n1. Introdu\u00e7\u00e3o 2\n\nA eleva\u00e7\u00e3o artificial por inje\u00e7\u00e3o cont\u00ednua de g\u00e1s, mais conhecida como continuous gas-lift ou sim-\n\nplesmente gas-lift, \u00e9 uma das formas mais utilizadas de eleva\u00e7\u00e3o artificial para produ\u00e7\u00e3o de petr\u00f3leo\n\n[24], [32], devido ao seu amplo campo de aplica\u00e7\u00e3o, al\u00e9m de ser o m\u00e9todo que mais se assemelha\n\nao processo de fluxo natural. Seu \u00fanico requisito b\u00e1sico \u00e9 que exista uma quantidade de g\u00e1s de ele-\n\nva\u00e7\u00e3o dispon\u00edvel que seja economicamente vi\u00e1vel. O sistema de gas-lift \u00e9 eficiente em uma vasta\n\ngama de condi\u00e7\u00f5es de opera\u00e7\u00e3o: \u00e9 muito vers\u00e1til em termos de vaz\u00e3o e profundidade, prop\u00edcio para\n\npo\u00e7os que produzem fluidos com alto teor de areia e elevada raz\u00e3o g\u00e1s-l\u00edquido, exige investimentos\n\nrelativamente baixos para po\u00e7os profundos, e seus custos de instala\u00e7\u00e3o e manuten\u00e7\u00e3o s\u00e3o mais baixos\n\nque os dos demais m\u00e9todos de eleva\u00e7\u00e3o artificial [39]. A seguir, descrevemos os princ\u00edpios b\u00e1sicos\n\ndo m\u00e9todo de eleva\u00e7\u00e3o artificial por inje\u00e7\u00e3o cont\u00ednua de g\u00e1s.\n\n1.1 O M\u00e9todo de Gas-Lift\n\nA Figura 1.1 ilustra esquematicamente um conjunto de po\u00e7os equipados para produzir por gas-lift.\n\nO sistema \u00e9 composto por:\n\n\u2022 fonte de g\u00e1s a alta press\u00e3o (compressores);\n\n\u2022 controlador de inje\u00e7\u00e3o de g\u00e1s na superf\u00edcie (choke);\n\n\u2022 controlador de inje\u00e7\u00e3o de g\u00e1s de subsuperf\u00edcie (v\u00e1lvulas de gas-lift, Figura 1.2);\n\n\u2022 equipamentos para separa\u00e7\u00e3o e armazenamento dos fluidos produzidos (separadores e tanques).\n\nA Figura 1.2 mostra o esquema t\u00edpico de um po\u00e7o operado via inje\u00e7\u00e3o cont\u00ednua de g\u00e1s. O sistema\n\nde gas-lift funciona da seguinte maneira. G\u00e1s a alta press\u00e3o \u00e9 injetado no espa\u00e7o anular entre o\n\nrevestimento do po\u00e7o e o tubo de produ\u00e7\u00e3o, de forma controlada e cont\u00ednua. O g\u00e1s entra no tubo de\n\nprodu\u00e7\u00e3o atrav\u00e9s de uma v\u00e1lvula de gas-lift em um ponto pr\u00f3ximo ao fundo do po\u00e7o, e mistura-se\n\nao fluido existente na coluna diminuindo sua densidade m\u00e9dia. Assim, a componente gravitacional\n\nda press\u00e3o no fundo do po\u00e7o diminui, at\u00e9 que esta diminui\u00e7\u00e3o cause um diferencial de press\u00e3o entre\n\na forma\u00e7\u00e3o e a face dos canhoneados (perforated zone) que seja suficiente para atingir a taxa de\n\nprodu\u00e7\u00e3o desejada. O controle da inje\u00e7\u00e3o de g\u00e1s no po\u00e7o \u00e9 feito na superf\u00edcie atrav\u00e9s de um regulador\n\nde fluxo (choke).\n\nA Figura 1.3, denominada curva de desempenho de gas-lift, ou WPC (Well Performance Curve),\n\nilustra o comportamento da vaz\u00e3o de sa\u00edda de acordo com a taxa de inje\u00e7\u00e3o de g\u00e1s em um po\u00e7o\n\nque produz via gas-lift. At\u00e9 certo limite, aumentando-se a quantidade de g\u00e1s na coluna de produ\u00e7\u00e3o\n\ndiminiui-se o gradiente m\u00e9dio de press\u00e3o, com consequente diminui\u00e7\u00e3o da press\u00e3o de fluxo no fundo\n\ne aumento de vaz\u00e3o. Entretanto, a taxa de inje\u00e7\u00e3o de g\u00e1s n\u00e3o pode ser aumentada indefinidamente,\n\npois a altas taxas de inje\u00e7\u00e3o a perda de carga no tubo de produ\u00e7\u00e3o devido ao atrito se torna dominante,\n\n\n\n1. Introdu\u00e7\u00e3o 3\n\nGas a\nalta\n\npressao\n\nChoke de\ninje\u00e7ao\n\nChoke de\nprodu\u00e7ao\n\nCompressores\n\nPo\u00e7o 1\n\nPo\u00e7o 2\n\n~\u00b4 Gas a baixa pressao\n\nSeparador\n\u00b4 Agua para tratamento e descarga\n\u00b4 Oleo\n\nGas para venda\u00b4 \n\nOleo + Gas + Agua\n\nPo\u00e7o N\n\n\u00b4 \u00b4 \u00b4 \n\n\u00b4 \n\n~~\n\n~\n\nFigura 1.1: Elementos que comp\u00f5e um conjunto de po\u00e7os de petr\u00f3leo que produzem via gas-lift.\n\no que tende a reduzir as taxas de produ\u00e7\u00e3o, al\u00e9m de poder causar danos como eros\u00e3o na tubula\u00e7\u00e3o.\n\nTipicamente, po\u00e7os que operam via inje\u00e7\u00e3o cont\u00ednua de g\u00e1s possuem um comportamento est\u00e1vel a\n\ntaxas elevadas de inje\u00e7\u00e3o e comportamento inst\u00e1vel a baixas taxas. As condi\u00e7\u00f5es inst\u00e1veis de opera-\n\n\u00e7\u00e3o a baixas taxas de inje\u00e7\u00e3o fazem com que um po\u00e7o n\u00e3o produza a m\u00e1xima quantidade poss\u00edvel de\n\n\u00f3leo. Operar um po\u00e7o via inje\u00e7\u00e3o cont\u00ednua de g\u00e1s sob condi\u00e7\u00f5es inst\u00e1veis torna o controle e aloca\u00e7\u00e3o\n\nda produ\u00e7\u00e3o muito dif\u00edcil, e os picos de surg\u00eancia (golfadas) representam condi\u00e7\u00f5es de opera\u00e7\u00e3o bas-\n\ntante severas para as instala\u00e7\u00f5es de produ\u00e7\u00e3o. Outra vari\u00e1vel importante que deve ser controlada \u00e9 o\n\ndiferencial de press\u00e3o entre o reservat\u00f3rio e o fundo do po\u00e7o (drawdown). Este diferencial, que est\u00e1\n\ndiretamente relacionado \u00e0 taxa de inje\u00e7\u00e3o de g\u00e1s, pode causar danos \u00e0 forma\u00e7\u00e3o atrav\u00e9s de efeitos\n\nindesej\u00e1veis como o aumento da produ\u00e7\u00e3o de areia e eleva\u00e7\u00e3o do contato \u00e1gua-\u00f3leo (conifica\u00e7\u00e3o),\n\ndiminuindo a vida \u00fatil e o fator de recupera\u00e7\u00e3o do reservat\u00f3rio. Portanto, existe um limite m\u00ednimo\n\npara a taxa de inje\u00e7\u00e3o de g\u00e1s, para que a opera\u00e7\u00e3o inst\u00e1vel do po\u00e7o seja evitada, e tamb\u00e9m um limite\n\nm\u00e1ximo, al\u00e9m da qual podem ser causados danos \u00e0 tubula\u00e7\u00e3o e ao reservat\u00f3rio.\n\nExistem 4 tipos b\u00e1sicos de W PC, como mostra a Figura 1.4 [1]. Os po\u00e7os do tipo A s\u00e3o os\n\nchamados surgentes, aqueles que produzem fluidos mesmo sem inje\u00e7\u00e3o de g\u00e1s. Os po\u00e7os do tipo B\n\ns\u00e3o aqueles que respondem imediatamente \u00e0 inje\u00e7\u00e3o de g\u00e1s, ou seja, se qp = 0 para qi = 0 e qp > 0\n\npara qi > 0. Os po\u00e7os do tipo C possuem taxa de partida (kick-off rate), ou seja, s\u00f3 come\u00e7am a\n\nproduzir a partir de uma determinada taxa de inje\u00e7\u00e3o de g\u00e1s. Os po\u00e7os do tipo D tamb\u00e9m possuem\n\ntaxa de partida, por\u00e9m come\u00e7am a produzir a uma taxa maior que zero.\n\nA produ\u00e7\u00e3o dos po\u00e7os \u00e9 normalmente otimizada com base em restri\u00e7\u00f5es t\u00e9cnicas e objetivos\n\necon\u00f4micos e estrat\u00e9gicos, enquanto leva em conta regras de seguran\u00e7a e de produ\u00e7\u00e3o, pol\u00edtica de\n\nexplota\u00e7\u00e3o do reservat\u00f3rio (m\u00e1ximo escoamento por po\u00e7o, quotas de produ\u00e7\u00e3o), cuidados na inter-\n\n\n\n1. Introdu\u00e7\u00e3o 4\n\n????\n????\n????\n????\n????\n????\n????\n????\n????\n????\n????\n????\n????\n????\n????\n????\n????\n????\n????\n????\n\n????\n????\n????\n????\n????\n????\n????\n????\n????\n????\n????\n????\n????\n????\n????\n????\n????\n????\n????\n????\n\n?????\n?????\n?????\n?????\n?????\n?????\n?????\n?????\n?????\n?????\n?????\n?????\n\n?????\n?????\n?????\n?????\n?????\n?????\n?????\n?????\n?????\n?????\n?????\n?????\n\nTubo de Produ\u00e7\u00e3o\n\nEspa\u00e7o Anular\n\n\u00d3leo, G\u00e1s, e\n\u00c1gua Produzidos\n\nReservat\u00f3rio\n\nG\u00e1s de Eleva\u00e7\u00e3o\n\nV\u00e1lvula de Gas-Lift\n\nFigura 1.2: Esquema de po\u00e7o operado via inje\u00e7\u00e3o cont\u00ednua de g\u00e1s [14].\n\nface entre a parede do po\u00e7o e a forma\u00e7\u00e3o (controle de areia) e capacidade das instala\u00e7\u00f5es. Neste\n\ntrabalho, a fun\u00e7\u00e3o objetivo do problema de otimiza\u00e7\u00e3o \u00e9 definida pelo benef\u00edcio econ\u00f4mico do uso do\n\ng\u00e1s de eleva\u00e7\u00e3o (maximizar a quantidade de petr\u00f3leo recuperado por quantidade de g\u00e1s injetado), e as\n\nrestri\u00e7\u00f5es do problema s\u00e3o impostas pela taxa de inje\u00e7\u00e3o de g\u00e1s dispon\u00edvel, pelos limites de inje\u00e7\u00e3o\n\nde g\u00e1s m\u00ednimo (estabilidade da produ\u00e7\u00e3o) e m\u00e1ximo (seguran\u00e7a da tubula\u00e7\u00e3o, preserva\u00e7\u00e3o do reser-\n\nvat\u00f3rio e aproveitamento do potencial de eleva\u00e7\u00e3o do g\u00e1s), e pelos limites impostos pelas instala\u00e7\u00f5es\n\nde superf\u00edcie, como capacidade de separa\u00e7\u00e3o, armazenamento e tratamento dos fluidos produzidos.\n\nNa se\u00e7\u00e3o seguinte apresentamos a revis\u00e3o bibliogr\u00e1fica dos trabalhos relacionados ao problema\n\nde aloca\u00e7\u00e3o de g\u00e1s de eleva\u00e7\u00e3o encontrados na literatura, onde s\u00e3o apontadas algumas lacunas que\n\neste trabalho pretende preencher.\n\n1.2 Revis\u00e3o Bibliogr\u00e1fica\n\nO problema de aloca\u00e7\u00e3o \u00f3tima da taxa dispon\u00edvel de inje\u00e7\u00e3o de g\u00e1s de eleva\u00e7\u00e3o vem sendo estu-\n\ndado desde a d\u00e9cada de 70, quando um procedimento anal\u00edtico ad hoc foi apresentado em [35], para\n\ndeterminar a distribui\u00e7\u00e3o de g\u00e1s mais lucrativa entre os po\u00e7os. Em [18], \u00e9 apresentado um m\u00e9todo\n\nde otimiza\u00e7\u00e3o denominado equal-slope que se utiliza de uma express\u00e3o matem\u00e1tica para encontrar a\n\ntaxa \u00f3tima de inje\u00e7\u00e3o de g\u00e1s, baseando-se na inclina\u00e7\u00e3o da curva que relaciona taxa de inje\u00e7\u00e3o com\n\no lucro obtido para cada po\u00e7o, conhecida como curva de desempenho de gas-lift. Em ess\u00eancia, este\n\nm\u00e9todo consiste na solu\u00e7\u00e3o das equa\u00e7\u00f5es que caracterizam as condi\u00e7\u00f5es de primeira ordem (Karush-\n\n\n\n1. Introdu\u00e7\u00e3o 5\n\nRegiao de~ \n\nutiliza\u00e7ao otima~ \u00b4 \n\nTaxa de inje\u00e7ao de gas~ \u00b4\n\nT\nax\n\na \nd\n\ne \np\n\nro\nd\n\nu\n\u00e7a\n\no\n d\n\ne \nO\n\nle\no\n\n\u00b4\n~\n\nEstavel\u00b4Instavel\u00b4\n\nFigura 1.3: T\u00edpica curva de desempenho de eleva\u00e7\u00e3o para um po\u00e7o operado via inje\u00e7\u00e3o cont\u00ednua de\ng\u00e1s.\n\nKuhn-Tucker) para \u00f3timo local de um problema de maximiza\u00e7\u00e3o c\u00f4ncavo. Apesar de estes m\u00e9todos\n\nfornecerem a solu\u00e7\u00e3o \u00f3tima quando existe g\u00e1s suficiente para atender todos os po\u00e7os, eles n\u00e3o podem\n\nser aplicados quando h\u00e1 po\u00e7os dos tipos C e D (po\u00e7os com taxa de partida), pois suas curvas de de-\n\nsempenho s\u00e3o n\u00e3o-c\u00f4ncavas. Al\u00e9m disso, estes m\u00e9todos n\u00e3o s\u00e3o capazes de tratar outras restri\u00e7\u00f5es\n\nal\u00e9m da quantidade limitada de g\u00e1s de eleva\u00e7\u00e3o.\n\nAbordagens mais flex\u00edveis e formais foram propostas em [32] e [1], baseadas em t\u00e9cnicas n\u00e3o-\n\nlineares de otimiza\u00e7\u00e3o quasi-Newton e programa\u00e7\u00e3o quadr\u00e1tica sequencial (ou SQP - Sequential\n\nQuadratic Programming), respectivamente. Estas abordagens s\u00e3o capazes de lidar com limites nas\n\ntaxas de inje\u00e7\u00e3o de g\u00e1s e a restri\u00e7\u00e3o da quantidade dispon\u00edvel de g\u00e1s de eleva\u00e7\u00e3o, mas n\u00e3o admitem a\n\nexist\u00eancia de po\u00e7os dos tipos C e D.\n\nM\u00e9todos heur\u00edsticos foram utilizados para resolver o problema da aloca\u00e7\u00e3o de g\u00e1s em [23] e [6],\n\nsendo que o primeiro baseia-se em um algoritmo gen\u00e9tico e o segundo combina uma explora\u00e7\u00e3o\n\nestoc\u00e1stica do dom\u00ednio de solu\u00e7\u00f5es, aliada a um c\u00e1lculo heur\u00edstico de uma dire\u00e7\u00e3o de descenso.\n\nM\u00e9todos heur\u00edsticos n\u00e3o s\u00e3o m\u00e9todos de otimiza\u00e7\u00e3o global, ou seja, as solu\u00e7\u00f5es obtidas podem ser\n\n\u00f3timos locais. Al\u00e9m disso, o custo computacional para a explora\u00e7\u00e3o do espa\u00e7o de solu\u00e7\u00f5es pode ser\n\nbastante alto.\n\nO problema de maximiza\u00e7\u00e3o da produ\u00e7\u00e3o de \u00f3leo sob m\u00faltiplas restri\u00e7\u00f5es nas instala\u00e7\u00f5es (facility\n\nconstraints) \u00e9 considerado em [15] e [40]. Em [15], as curvas de desempenho dos po\u00e7os s\u00e3o aproxi-\n\nmadas por fun\u00e7\u00f5es lineares por partes (piecewise linear functions), e o problema linear resultante \u00e9\n\nresolvido pelo m\u00e9todo Simplex. Por\u00e9m, para que o m\u00e9todo Simplex pudesse ser utilizado, as vari\u00e1veis\n\ninteiras foram consideradas cont\u00ednuas, e as solu\u00e7\u00f5es encontradas podem ser infact\u00edveis (n\u00e3o inteiras),\n\nnecessitando ser tratadas a posteriori. Em [40], vari\u00e1veis bin\u00e1rias s\u00e3o adicionadas \u00e0 formula\u00e7\u00e3o para\n\n\n\n1. Introdu\u00e7\u00e3o 6\n\nA\n\nB\n\nC\n\nD\n\nTaxa de inje\u00e7\u00e3o de g\u00e1s, qi\n\nT\nax\n\na\nd\n\ne\np\n\nro\nd\n\nu\n\u00e7\u00e3\n\no\n,q\n\np\n\nFigura 1.4: Curvas de desempenho de gas-lift para po\u00e7os dos tipos A, B, C e D.\n\ncada W PC n\u00e3o c\u00f4ncava e uma busca branch-and-bound \u00e9 realizada at\u00e9 que a solu\u00e7\u00e3o \u00f3tima seja en-\n\ncontrada. A desvantagem desta abordagem \u00e9 que algoritmos de branch-and-bound puros podem ter\n\ntempo de execu\u00e7\u00e3o e consumo de mem\u00f3ria muito altos para inst\u00e2ncias complexas, especialmente em\n\nproblemas NP-dif\u00edceis1 .\n\nEm suma, os modelos existentes n\u00e3o contemplam aspectos importantes do problema, como a\n\nexist\u00eancia de taxas de partida, m\u00faltiplas restri\u00e7\u00f5es nas facilidades de processamento e restri\u00e7\u00f5es de\n\npreced\u00eancia de ativa\u00e7\u00e3o. Al\u00e9m disso, nenhum dos trabalhos apresenta algoritmos eficazes no sentido\n\nde tempo computacional e qualidade da solu\u00e7\u00e3o (aproximar ou encontrar o \u00f3timo global). A seguir,\n\ns\u00e3o apresentados os objetivos deste trabalho.\n\n1.3 Objetivos\n\nNo sistema de produ\u00e7\u00e3o de petr\u00f3leo via gas-lift, o problema de aloca\u00e7\u00e3o de g\u00e1s de eleva\u00e7\u00e3o \u00e9 de\n\nbastante relev\u00e2ncia. As instala\u00e7\u00f5es de compress\u00e3o de g\u00e1s representam uma parcela significativa do\n\ncusto de opera\u00e7\u00e3o de um campo de petr\u00f3leo [6], sendo assim \u00e9 importante que o g\u00e1s seja utilizado\n\nda maneira mais eficiente poss\u00edvel [24]. Normalmente, esta aloca\u00e7\u00e3o \u00e9 realizada com base em regras\n\n1Um problema pertence \u00e0 classe P (problema polinomial) se pode ser resolvido em tempo polinomial no seu tamanho\n(e.g., problemas de ordena\u00e7\u00e3o, caminhos m\u00ednimos em grafos, fluxo m\u00e1ximo em redes, Programa\u00e7\u00e3o Linear). Um problema\npertence \u00e0 classe NP (problema polinomial n\u00e3o-determin\u00edstico) se uma suposta solu\u00e7\u00e3o para este problema pode ser verifi-\ncada em tempo polinomial no seu tamanho. Dizemos que um problema \u00e9 NP-dif\u00edcil se ele \u00e9 pelo menos t\u00e3o dif\u00edcil quanto\nqualquer problema em NP. Um problema \u00e9 NP-completo se qualquer problema em NP pode ser reduzido a este problema\nem tempo polinomial (e.g., caminho Hamiltoniano, clique m\u00e1xima em grafos) [38],[42].\n\n\n\n1. Introdu\u00e7\u00e3o 7\n\nad-hoc [40]. Substituir estas regras por algoritmos de otimiza\u00e7\u00e3o rigorosos pode trazer grandes bene-\n\nf\u00edcios. No Brasil, 90% da produ\u00e7\u00e3o de petr\u00f3leo prov\u00e9m de po\u00e7os submarinos, e estima-se que 60%\n\ndestes po\u00e7os operam via gas-lift. Visto que a necessidade de melhoria do desempenho da tecnologia\n\natual \u00e9 um fato [2], o aumento, mesmo que pequeno, na efici\u00eancia dos processos de produ\u00e7\u00e3o de\n\npetr\u00f3leo pode resultar em substanciais ganhos econ\u00f4micos e ambientais.\n\nOs objetivos deste trabalho s\u00e3o a concep\u00e7\u00e3o de modelos formais e o projeto, implementa\u00e7\u00e3o e\n\nan\u00e1lise de algoritmos eficientes para resolver o problema de aloca\u00e7\u00e3o de g\u00e1s de eleva\u00e7\u00e3o para um\n\nconjunto de po\u00e7os de petr\u00f3leo que produzem via gas-lift, de modo a maximizar o lucro obtido com\n\na venda de hidrocarbonetos extra\u00eddos. Neste documento apresentamos algoritmos de Programa\u00e7\u00e3o\n\nDin\u00e2mica que resolvem este problema, e tamb\u00e9m formula\u00e7\u00f5es de Programa\u00e7\u00e3o Linear Inteira Mista\n\n(ou MILP - Mixed Integer Linear Programming) para o problema de aloca\u00e7\u00e3o de g\u00e1s de eleva\u00e7\u00e3o\n\nsujeito a outras restri\u00e7\u00f5es al\u00e9m da taxa de inje\u00e7\u00e3o dispon\u00edvel. Para estas formula\u00e7\u00f5es s\u00e3o obtidas\n\nfam\u00edlias de desigualdades v\u00e1lidas que s\u00e3o utilizadas para auxiliar a solu\u00e7\u00e3o atrav\u00e9s de algoritmos de\n\notimiza\u00e7\u00e3o comerciais e n\u00e3o-comerciais.\n\nOs algoritmos de Programa\u00e7\u00e3o Din\u00e2mica (doravante chamados algoritmos PD) desenvolvidos\n\nneste trabalho possuem as seguintes caracter\u00edsticas, que se tornar\u00e3o expl\u00edcitas ao longo do documento:\n\n\u2022 resolvem o problema de otimiza\u00e7\u00e3o mesmo quando cada po\u00e7o possui m\u00faltiplas curvas de de-\n\nsempenho de gas-lift (W PCs), e tamb\u00e9m sob restri\u00e7\u00f5es de preced\u00eancia de ativa\u00e7\u00e3o/desativa\u00e7\u00e3o\n\nde po\u00e7os;\n\n\u2022 po\u00e7os que que possuem taxa de partida, ou seja, po\u00e7os dos tipos C e D (Figura 1.4), que\n\npossuem curvas de desempenho n\u00e3o-c\u00f4ncavas, s\u00e3o tratados com naturalidade;\n\n\u2022 uma fam\u00edlia de problemas \u00e9 resolvida, ou seja, problemas para v\u00e1rias taxas dispon\u00edveis de\n\ninje\u00e7\u00e3o de g\u00e1s, entre 0 e qmaxi (taxa m\u00e1xima de inje\u00e7\u00e3o dispon\u00edvel);\n\n\u2022 a solu\u00e7\u00e3o encontrada \u00e9 muito pr\u00f3xima da solu\u00e7\u00e3o \u00f3tima, e o tempo gasto para o c\u00e1lculo da\n\nsolu\u00e7\u00e3o \u00e9 pequeno (considerando aplica\u00e7\u00f5es para o setor de extra\u00e7\u00e3o de petr\u00f3leo); e\n\n\u2022 \u00e9 uma ferramenta de suporte \u00e0 decis\u00e3o para o engenheiro de produ\u00e7\u00e3o de petr\u00f3leo, de baixo\n\ncusto e extremamente port\u00e1vel.\n\nA outra abordagem utilizada neste trabalho \u00e9 a lineariza\u00e7\u00e3o por partes das W PCs e utiliza\u00e7\u00e3o\n\nde MILP para a obten\u00e7\u00e3o das taxas de inje\u00e7\u00e3o \u00f3timas. As vantagens desta abordagem s\u00e3o citadas a\n\nseguir, sendo que algumas delas assemelham-se \u00e0s vantagens mencionadas para o algoritmo PD:\n\n\u2022 a transforma\u00e7\u00e3o do problema n\u00e3o-linear em um problema linear inteiro misto torna mais f\u00e1cil\n\na introdu\u00e7\u00e3o e modifica\u00e7\u00e3o de restri\u00e7\u00f5es, al\u00e9m de tornar poss\u00edvel o uso de algoritmos eficientes\n\nde Programa\u00e7\u00e3o Inteira para a busca de uma solu\u00e7\u00e3o \u00f3tima global, ou poss\u00edveis solu\u00e7\u00f5es de boa\n\nqualidade;\n\n\n\n1. Introdu\u00e7\u00e3o 8\n\n\u2022 s\u00e3o obtidas fam\u00edlias de desigualdades v\u00e1lidas que se mostram bastante eficientes na acelera\u00e7\u00e3o\n\ndo tempo de resposta de algoritmos de Branch-and-Bound e Branch-and-Cut, tornando pos-\n\ns\u00edvel a utiliza\u00e7\u00e3o de software de baixo custo para a solu\u00e7\u00e3o do problema de otimiza\u00e7\u00e3o, como\n\nalgoritmos de Programa\u00e7\u00e3o Linear e de Branch-and-Bound em plataformas de software livre;\n\n\u2022 po\u00e7os com taxa de partida podem ser considerados;\n\n\u2022 a solu\u00e7\u00e3o encontrada \u00e9 quase-\u00f3tima e em tempo razoavelmente baixo;\n\n\u2022 seu custo de implementa\u00e7\u00e3o \u00e9 baixo e possui grande capacidade de portabilidade e suporte \u00e0\n\ndecis\u00e3o; e\n\n\u2022 os modelos podem ser facilmente estendidos para incorporar outras restri\u00e7\u00f5es al\u00e9m das j\u00e1 con-\n\nsideradas.\n\n1.4 Organiza\u00e7\u00e3o do Documento\n\nO Cap\u00edtulo 2 apresenta o paradigma da Programa\u00e7\u00e3o Din\u00e2mica, conceitos de fun\u00e7\u00f5es lineares por\n\npartes e de teoria poliedral. O leitor familiarizado com estes t\u00f3picos pode dirigir a leitura ao pr\u00f3ximo\n\ncap\u00edtulo.\n\nOs cap\u00edtulos seguintes est\u00e3o organizados seguindo a cronologia da evolu\u00e7\u00e3o da pesquisa. No\n\nCap\u00edtulo 3 \u00e9 formulada a inst\u00e2ncia mais b\u00e1sica do problema, denominada P( /0), onde as restri\u00e7\u00f5es\ns\u00e3o a taxa m\u00e1xima dispon\u00edvel para inje\u00e7\u00e3o de g\u00e1s a ser alocada entre os po\u00e7os e os limites inferior\n\ne superior de taxa de inje\u00e7\u00e3o para cada po\u00e7o. Uma solu\u00e7\u00e3o baseada em Programa\u00e7\u00e3o Din\u00e2mica \u00e9\n\napresentada, bem como resultados num\u00e9ricos que comprovam a efici\u00eancia dos algoritmos e algumas\n\ncompara\u00e7\u00f5es de desempenho das solu\u00e7\u00f5es desenvolvidas neste trabalho com as solu\u00e7\u00f5es encontradas\n\nna literatura.\n\nO Cap\u00edtulo 4 cont\u00e9m um algoritmo de Programa\u00e7\u00e3o Din\u00e2mica e uma solu\u00e7\u00e3o recursiva, respecti-\n\nvamente para as formula\u00e7\u00f5es chamadas de P(F) e P(G), onde al\u00e9m das restri\u00e7\u00f5es definidas em P( /0)\nexistem tamb\u00e9m restri\u00e7\u00f5es de preced\u00eancia de opera\u00e7\u00e3o entre po\u00e7os, representando cen\u00e1rios de cam-\n\npos de petr\u00f3leo onde exista alguma hierarquia de po\u00e7os produtores. Novamente, resultados num\u00e9ricos\n\nmostram que os algoritmos s\u00e3o bastante eficientes e produzem solu\u00e7\u00f5es de boa qualidade.\n\nNeste momento da pesquisa foi percebido que o algoritmo de Programa\u00e7\u00e3o Din\u00e2mica desen-\n\nvolvido n\u00e3o era facilmente adapt\u00e1vel quando novas restri\u00e7\u00f5es eram inclu\u00eddas na formula\u00e7\u00e3o b\u00e1sica, e\n\ndesde ent\u00e3o passamos a buscar uma solu\u00e7\u00e3o para P( /0) utilizando Programa\u00e7\u00e3o Linear Inteira Mista\n(ou MILP - Mixed Integer Linear Programming), mostrada no Cap\u00edtulo 5. O problema original \u00e9\n\ntransformado em um problema linear por partes e desigualdades v\u00e1lidas s\u00e3o produzidas e inclu\u00eddas\n\nna formula\u00e7\u00e3o, de modo a torn\u00e1-la mais \u201capertada\u201d e acelerar o processo de solu\u00e7\u00e3o. A efici\u00eancia\n\ndeste m\u00e9todo \u00e9 comprovada atrav\u00e9s de experimentos num\u00e9ricos.\n\n\n\n1. Introdu\u00e7\u00e3o 9\n\nVisto que na abordagem MILP a inclus\u00e3o de restri\u00e7\u00f5es \u00e9 tratada com naturalidade, passamos a\n\nestudar a solu\u00e7\u00e3o de um problema mais completo, cuja formula\u00e7\u00e3o foi denominada P5( /0), onde s\u00e3o\nacrescentadas restri\u00e7\u00f5es impostas por limites nas instala\u00e7\u00f5es de superf\u00edcie. No Cap\u00edtulo 6 s\u00e3o apre-\n\nsentados os resultados obtidos. Mais uma vez, s\u00e3o apresentadas fam\u00edlias de desigualdades v\u00e1lidas que\n\ns\u00e3o capazes de acelerar o processo de solu\u00e7\u00e3o quando introduzidas na formula\u00e7\u00e3o, o que \u00e9 mostrado\n\natrav\u00e9s de experimentos num\u00e9ricos.\n\nO Cap\u00edtulo 7 se refere \u00e0s considera\u00e7\u00f5es finais do trabalho, e algumas dire\u00e7\u00f5es para pesquisas\n\nfuturas s\u00e3o apresentadas.\n\n\n\nCap\u00edtulo 2\n\nFundamentos\n\nNeste cap\u00edtulo, apresentamos alguns conceitos b\u00e1sicos do dom\u00ednio da otimiza\u00e7\u00e3o, bem como o\n\nparadigma da Programa\u00e7\u00e3o Din\u00e2mica, conceitos de fun\u00e7\u00f5es lineares por partes e de teoria poliedral.\n\nO leitor familiarizado com estes t\u00f3picos pode proceder diretamente ao Cap\u00edtulo 3.\n\n2.1 Otimiza\u00e7\u00e3o\n\nA Otimiza\u00e7\u00e3o \u00e9 a \u00e1rea da Matem\u00e1tica Aplicada que se concentra em calcular valores \u00f3timos para\n\nvari\u00e1veis de decis\u00e3o de acordo com algum crit\u00e9rio de avalia\u00e7\u00e3o, ao mesmo tempo que satisfazem\n\nrestri\u00e7\u00f5es de um modelo matem\u00e1tico. A solu\u00e7\u00e3o de um problema de otimiza\u00e7\u00e3o normalmente pos-\n\nsui duas fases: a primeira consiste em transformar o problema em um modelo, e posteriormente\n\nimplementar um algoritmo capaz de encontrar uma solu\u00e7\u00e3o adequada para este modelo. A lin-\n\nguagem utilizada para expressar os problemas de maneira declarativa \u00e9 conhecida como Programa\u00e7\u00e3o\n\nMatem\u00e1tica [41]. Os elementos de um modelo em Programa\u00e7\u00e3o Matem\u00e1tica s\u00e3o:\n\nVari\u00e1veis de decis\u00e3o : elementos cujos valores definem uma solu\u00e7\u00e3o para o problema, e.g., quanti-\n\ndades produzidas ou recursos utilizados.\n\nFun\u00e7\u00e3o objetivo : uma fun\u00e7\u00e3o das vari\u00e1veis de decis\u00e3o, que deve ser maximizada ou minimizada,\n\ne.g., minimizar custos, reduzir n\u00famero de homens/hora, maximizar lucros.\n\nRestri\u00e7\u00f5es : um conjunto de fun\u00e7\u00f5es que define o espa\u00e7o fact\u00edvel de solu\u00e7\u00f5es, e.g., limites para\n\nrecursos, restri\u00e7\u00f5es operacionais de um processo de produ\u00e7\u00e3o, limita\u00e7\u00f5es f\u00edsicas e t\u00e9cnicas.\n\n\n\n2. Fundamentos 11\n\nUm problema geral de otimiza\u00e7\u00e3o pode ser escrito em Programa\u00e7\u00e3o Matem\u00e1tica como:\n\nMinimize f (x)\n\nSujeito a: g(x) ? 0\n\nh(x) = 0\n\nx ? Rn\n\nonde f : Rn ? R \u00e9 a fun\u00e7\u00e3o objetivo, g : Rn ? Rp e h : Rn ? Rq s\u00e3o restri\u00e7\u00f5es que limitam o espa\u00e7o\n\nde solu\u00e7\u00f5es fact\u00edveis, e x \u00e9 o vetor das vari\u00e1veis de decis\u00e3o.\n\nFormulado o problema, o pr\u00f3ximo passo \u00e9 encontrar um algoritmo eficiente para o c\u00e1lculo da\n\nsolu\u00e7\u00e3o \u00f3tima. Alguns tipos de problema de otimiza\u00e7\u00e3o, como por exemplo os problemas de Progra-\n\nma\u00e7\u00e3o Linear, possuem algoritmos bastante eficientes para sua solu\u00e7\u00e3o (m\u00e9todo Simplex e m\u00e9todo de\n\nponto interior). Por\u00e9m, existem problemas para os quais n\u00e3o existem algoritmos capazes de encontrar\n\numa solu\u00e7\u00e3o \u00f3tima com a mesma efici\u00eancia, como \u00e9 o caso de alguns problemas de Programa\u00e7\u00e3o In-\n\nteira pertencentes \u00e0 classe NP-dif\u00edcil. A seguir apresentamos o paradigma da Programa\u00e7\u00e3o Din\u00e2mica,\n\nbastante utilizado para a cria\u00e7\u00e3o de algoritmos que resolvem problemas desta classe.\n\n2.2 Programa\u00e7\u00e3o Din\u00e2mica\n\nUma das t\u00e9cnicas mais poderosas para a solu\u00e7\u00e3o de problemas de otimiza\u00e7\u00e3o \u00e9 quebr\u00e1-los em\n\npartes menores e mais f\u00e1ceis de resolver, e posteriormente compor a solu\u00e7\u00e3o do problema original a\n\npartir da solu\u00e7\u00e3o destes subproblemas. Sempre que \u00e9 poss\u00edvel quebrar um problema em inst\u00e2ncias\n\nmenores do mesmo problema, o uso de um algoritmo recursivo se torna aparente. A Programa\u00e7\u00e3o\n\nDin\u00e2mica (PD) \u00e9 um dos paradigmas de projeto de algoritmos que se baseia em quebrar problemas\n\nem problemas menores. Tipicamente remove-se um elemento do problema, resolve-se o problema\n\nmenor, e ent\u00e3o utiliza-se a solu\u00e7\u00e3o deste problema menor para adicionar o elemento novamente de\n\nmaneira apropriada.\n\nAlgoritmos gulosos, que tomam a melhor decis\u00e3o local a cada passo, ocasionalmente encontram\n\n\u00f3timos globais para certos problemas. Algoritmos de busca exaustiva, que enumeram todas as possi-\n\nbilidades e selecionam a melhor, por defini\u00e7\u00e3o encontram sempre o \u00f3timo global, por\u00e9m normalmente\n\na um custo muito alto. A Programa\u00e7\u00e3o Din\u00e2mica combina as duas t\u00e9cnicas, sistematicamente con-\n\nsiderando todas as poss\u00edveis decis\u00f5es e selecionando aquela que prova ser a melhor. Armazenando\n\nas consequ\u00eancias de todas as poss\u00edveis decis\u00f5es at\u00e9 o momento, a quantidade de trabalho total \u00e9 mi-\n\nnimizada. A maior limita\u00e7\u00e3o da Programa\u00e7\u00e3o Din\u00e2mica \u00e9 o n\u00famero de solu\u00e7\u00f5es parciais que devem\n\nser armazenadas. A ordem dos elementos do problema tamb\u00e9m \u00e9 importante. Alterar esta ordem\n\nsignifica mudar o problema. Por\u00e9m, uma vez que esta ordem seja fixada, algoritmos PD s\u00e3o bastante\n\neficientes.\n\n\n\n2. Fundamentos 12\n\nA seguir mostramos um pequeno exemplo, com o objetivo de tornar mais claro o princ\u00edpio de\n\nfuncionamento deste tipo de algoritmo. A Programa\u00e7\u00e3o Din\u00e2mica \u00e9 uma ferramenta que tem sido\n\naplicada com sucesso a um tipo de problema de otimiza\u00e7\u00e3o chamado de \u201cproblema da mochila\u201d\n\n(knapsack problem) [22]. Diversos problemas de import\u00e2ncia estrat\u00e9gica t\u00eam uma \u201cmochila\u201d como\n\nsubproblema, como por exemplo o procedimento de gera\u00e7\u00e3o de colunas em problemas de corte e\n\nempacotamento. Outras vantagens do algoritmo PD ser\u00e3o explicitadas mais adiante.\n\n2.2.1 Programa\u00e7\u00e3o Din\u00e2mica para o Problema da Mochila\n\nImagine um alpinista que deve organizar sua mochila com v\u00e1rios itens de seu interesse ao escalar\n\numa montanha, sendo que cada item possui um peso e um valor, e a mochila possui uma capacidade\n\nlimitada. O desejo do alpinista \u00e9 maximizar a utilidade (ou valor) dos itens colocados em sua mochila,\n\nsem ultrapassar a capacidade de peso suportada por ela. Este problema \u00e9 conhecido como o problema\n\nda mochila (knapsack problem, KP), e pode ser formulado da seguinte maneira:\n\nKP : z = Maximizar\nn\n?\nj=1\n\nc j x j\n\nSujeito a:\nn\n?\nj=1\n\na j x j ? b\n\nx j ?{0, 1}, j = 1, . . . , n\n\n(2.1)\n\nonde x j assume valor 1 se o item j vai para a mochila, e 0 caso contr\u00e1rio, c j \u00e9 o valor do item j, e\n\nos coeficientes {a j}\nn\nj=1 e b s\u00e3o inteiros positivos representando respectivamente o peso do item j e a\n\ncapacidade da mochila, com a j ? b, j = 1, . . . , n.\n\nSeja KPk(?) o subproblema correspondente ao problema original KP restrito aos k primeiros itens\n( j = 1, . . . , k), para uma mochila de capacidade ?:\n\nKPk(?) : fk(?) = Maximizar\nk\n?\nj=1\n\nc jx j\n\nSujeito a :\nk\n?\nj=1\n\na jx j ? ?\n\nx j ?{0, 1}, j = 1, . . . , k .\n\n(2.2)\n\nResolver o problema original KP significa obter a solu\u00e7\u00e3o \u00f3tima para KPn(b), ou seja, o valor z =\n\nfn(b).\n\nO problema KPk(?) possui 2 casos base, de solu\u00e7\u00e3o trivial:\n\n\u2022 KPk(0) para k = 1, . . . , n, pois se a capacidade \u00e9 zero nenhum item vai para a mochila e, por-\n\ntanto, fk(0) = 0 para k = 1, . . . , n;\n\n\n\n2. Fundamentos 13\n\n\u2022 KP0(?) para ? = 0, . . . , b, pois se temos 0 itens a considerar, nenhum item vai para a mochila, e\nportanto f0(?) = 0 para ? = 0, . . . , b.\n\nConsideremos agora a solu\u00e7\u00e3o do conjunto de subproblemas que consideram apenas o primeiro\n\nitem, variando a capacidade da mochila (?) de 0 at\u00e9 b. Claramente, cada um destes subproblemas\npossui apenas 2 possibilidades de solu\u00e7\u00f5es \u00f3timas, x?1 = 0 ou x\n\n?\n1 = 1, ou seja, o item 1 fica fora da\n\nmochila ou dentro dela. Considerando cada caso, temos:\n\n\u2022 Se x?1 = 0, ent\u00e3o conclu\u00edmos que a solu\u00e7\u00e3o \u00f3tima satisfaz f1(?) = f0(?), ou seja, o item 1 n\u00e3o\nagrega valor \u00e0 fun\u00e7\u00e3o objetivo e n\u00e3o ocupa espa\u00e7o na mochila, portanto a solu\u00e7\u00e3o do problema\n\n\u00e9 a solu\u00e7\u00e3o correspondente ao problema que considera 0 itens e espa\u00e7o ?, que j\u00e1 est\u00e1 resolvido;\n\n\u2022 Se x?1 = 1, ent\u00e3o conclu\u00edmos que a solu\u00e7\u00e3o \u00f3tima satisfaz f1(?) = c1 + f0(??a1), ou seja,\ncolocamos o item 1 na mochila ocupando espa\u00e7o a1 e agregando valor c1 \u00e0 fun\u00e7\u00e3o objetivo, e\n\nsomamos o valor \u00f3timo do problema com 0 itens e capacidade ??a1, que j\u00e1 foi resolvido.\n\nIsto nos leva a uma recurs\u00e3o que permite calcular fk(?) em termos dos subproblemas j\u00e1 resolvidos,\nou seja, os valores de fs(u) com s &lt;k e u ? ?. Generalizando o caso acima:\n\n1) Se x?k = 0, ent\u00e3o conclu\u00edmos que a solu\u00e7\u00e3o \u00f3tima satisfaz fk(?) = fk?1(?);\n\n2) Se x?k = 1, ent\u00e3o conclu\u00edmos que a solu\u00e7\u00e3o \u00f3tima satisfaz fk(?) = ck + fk?1(??ak), para ak ??.\n\nCombinando os casos (1) e (2), obtemos a seguinte recorr\u00eancia:\n\nfk(?) = max{ fk?1(?), ck + fk?1(??ak)} . (2.3)\n\nDefinindo-se os valores iniciais como f0(?) = 0 para ? ? 0 e fk(0) = 0 para k = 1, . . . , n, pode-\nse utilizar a recorr\u00eancia (2.3) para calcular sucessivamente os valores de f1, f2, . . . , fn para todos os\n\nvalores inteiros de ? = 1, . . . , b.\n\nA quest\u00e3o que resta \u00e9 como encontrar a solu\u00e7\u00e3o \u00f3tima (ou seja, quais itens v\u00e3o para a mochila)\n\nassociada ao valor \u00f3timo fn(b). Podemos manter um indicador pk(?) que assume valor 0 se fk(?) =\nfk?1(?), e valor 1 caso contr\u00e1rio. Portanto para definir qual item vai para a mochila, basta observar\nos valores de pk(?) da seguinte maneira:\n\n\u2022 se pn(b) = 0, ent\u00e3o como fn(b) = fn?1(b), definimos x\n?\nn = 0 e continuamos o processo com o\n\nvalor fn?1(b);\n\n\u2022 se pn(b) = 1, ent\u00e3o fn(b) = cn + fn?1(b?an), definimos x\n?\nn = 1 e repetimos este procedimento\n\npara fn?1(b?an);\n\n\n\n2. Fundamentos 14\n\nTabela 2.1: Valores de fk(?) e de pk(?) para uma inst\u00e2ncia do problema da mochila\n\nf0 f1 f2 f3 f4 p1 p2 p3 p4\n? = 0 0 0 0 0 0 0 0 0 0\n\n1 0 0 7 7 7 0 1 0 0\n2 0 10 10 10 10 1 0 0 0\n3 0 10 17 17 17 1 1 0 0\n4 0 10 17 17 17 1 1 0 0\n5 0 10 17 17 24 1 1 0 1\n6 0 10 10 25 31 1 1 1 1\n7 0 10 17 32 34 1 1 1 1\n\n\u2022 ap\u00f3s n itera\u00e7\u00f5es, obteremos a solu\u00e7\u00e3o \u00f3tima.\n\nCalculando o n\u00famero de opera\u00e7\u00f5es necess\u00e1rias para obtermos z = fn(b), verificamos que o c\u00e1lculo de\n\nfk(?) para ? = 0, 1, . . . , b e k = 1, . . . , n necessita de um n\u00famero constante de opera\u00e7\u00f5es. O algoritmo\npossui tempo de execu\u00e7\u00e3o ?(nb), sendo portanto pseudo-polinomial.\n\nReproduzimos agora um exemplo num\u00e9rico extra\u00eddo de [42], com o objetivo de tornar mais claros\n\nos conceitos apresentados nesta se\u00e7\u00e3o. Considere a inst\u00e2ncia de KP:\n\nz = Maximizar 10x1 + 7x2 + 25x3 + 24x4\nSujeito a: 2x1 + x2 + 6x3 + 5x4 ? 7\n\nx1, x2, x3, x4 ?{0, 1}\n\nOs valores de fk(?) e pk(?) s\u00e3o mostrados na Tabela 2.1. Os valores de f0(?) e de fk(0) s\u00e3o obtidos\nde imediato, enquanto que as outras colunas s\u00e3o preenchidas de cima para baixo utilizando a re-\n\ncurs\u00e3o fk(?) = max{ fk?1(?), ck + fk?1(??ak)}. Por exemplo, f2(7) = max{ f1(7), 7 + f1(7?1)} =\nmax{10, 7 + 10} = 17, e como o valor de f2(7) \u00e9 dado pelo segundo termo da maximiza\u00e7\u00e3o, fazemos\n\np2(7) = 1. O valor \u00f3timo \u00e9 z\n? = f4(7) = 34.\n\nPara obter a solu\u00e7\u00e3o \u00f3tima x?, basta percorrer a tabela P, iniciando em p4(7). Como p4(7) = 1,\n\nx?4 = 1. p3(7?5) = p3(2) = p2(2) = 0 e portanto x\n?\n3 = x\n\n?\n2 = 0. p1(2) = 1, e portanto x\n\n?\n1 = 1. Sendo\n\nassim, a solu\u00e7\u00e3o \u00f3tima \u00e9 x? = (1, 0, 0, 1).\n\n2.3 Lineariza\u00e7\u00e3o por Partes\n\nSeja uma fun\u00e7\u00e3o cont\u00ednua f (y) e pi = (ai, f (ai)) para i = 0, . . . , k um conjunto de pontos conhe-\n\ncidos desta fun\u00e7\u00e3o, com ai &lt;ai+1, i = 0, . . . , k?1. Podemos aproximar f (y) por um conjunto de\n\n\n\n2. Fundamentos 15\n\nsegmentos lineares, passando pelos pontos pi, conforme ilustra a Figura 2.1. Qualquer fun\u00e7\u00e3o con-\n\nt\u00ednua de uma vari\u00e1vel pode ser aproximada por uma fun\u00e7\u00e3o linear por partes, sendo a qualidade da\n\naproxima\u00e7\u00e3o dependente do tamanho dos segmentos lineares.\n\nSeja f? (y) a aproxima\u00e7\u00e3o linear de f (y). A seguir, apresentamos tr\u00eas modelos que podem ser\n\nutilizados para representar f? (y) [13].\n\n2.3.1 Modelo com pesos por ponto (Modelo I)\n\nNesta primeira abordagem, ilustrada pela Figura 2.1 s\u00e3o utilizadas vari\u00e1veis reais (ou pesos) ?i.\nQualquer a0 ? y ? ak pode ser escrito como:\n\ny =\nk\n\n?\ni=0\n\n?iai ,\nk\n\n?\ni=0\n\n?i = 1 , ? = (?0, . . . , ?k) ? Rk+1+ .\n\nOs ?i n\u00e3o s\u00e3o \u00fanicos, mas se ai ?y?ai+1 e ?i + ?i+1 = 1 para algum i?{0, . . . , k?1}, ent\u00e3o obtemos\nf? (y) = ?i f (ai) + ?i+1 f (ai+1). Em outras palavras,\n\nf? (y) =\nk\n\n?\ni=0\n\n?i f (ai),\nk\n\n?\ni=0\n\n?i = 1, ? ? Rk+1+ .\n\nSe pelo menos dois dos ?i\u2019s s\u00e3o positivos, e se ? j e ?k s\u00e3o positivos, ent\u00e3o k = j?1 ou k = j + 1.\nEsta condi\u00e7\u00e3o pode ser modelada utilizando-se vari\u00e1veis bin\u00e1rias xi para i = 1, . . . , k (com xi = 1 se\n\nai?1 ? y ? ai e xi = 0 caso contr\u00e1rio), e as restri\u00e7\u00f5es\n\n?0 ? x1\n?i ? xi + xi+1 i = 1, . . . , k?1\n\n?k ? xk\nk\n\n?\ni=1\n\nxi = 1\n\nx ? Bk .\n\nNote que se x j = 1, ent\u00e3o ?i = 0 para ?i /?{ j?1, j}.\n\nFun\u00e7\u00f5es lineares por partes que s\u00e3o convexas (c\u00f4ncavas) podem ser minimizadas (maximizadas)\n\nutilizando Programa\u00e7\u00e3o Linear, pois as inclina\u00e7\u00f5es dos segmentos s\u00e3o crescentes (decrescentes).\n\nPor\u00e9m, se a fun\u00e7\u00e3o n\u00e3o \u00e9 c\u00f4ncava nem convexa, vari\u00e1veis bin\u00e1rias s\u00e3o necess\u00e1rias para selecionar\n\no segmento correto para um dado valor de y [31].\n\n\n\n2. Fundamentos 16\n\na0 a1 a2 a3 a4\n\n?0\n\n?1\n\n?2\n\n?3\n\n?4\n\nx1 x2 x3 x4\n\ny\n\nf / f?\n\nf (y)\n\nf? (y)\n\nFigura 2.1: Lineariza\u00e7\u00e3o por partes para o modelo por pesos\n\n2.3.2 Modelo com pesos sequencial (Modelo II)\n\nNeste modelo, escrevemos y como:\n\ny = a0 + ?1 + . . . + ?k\n\nonde 0 ? ?i ? ai ?ai?1, i = 1, . . . , k.\n\nDesejamos representar um dado y que pertence a uma regi\u00e3o r da fun\u00e7\u00e3o. Ent\u00e3o ?i assume os\nvalores:\n\n?i =\n\n?\n\n?\n\n?\n\n?\n\n?\n\nai ?ai?1 se i &lt;r\n\ny?ai se i = r\n\n0 se i > r\n\nVari\u00e1veis inteiras xi s\u00e3o utilizadas para selecionar as regi\u00f5es anteriores a y. Assim, se considerar-\n\nmos que y pertence a uma regi\u00e3o r:\n\nxi =\n\n{\n\n1 se i &lt;r\n\n0 se i ? r\n\nPortanto, a formula\u00e7\u00e3o deste modelo pode ser escrita como:\n\ny =a0 +\nk\n\n?\ni=1\n\n?i (2.4a)\n\nf? (y) = f (a0) +\nk\n\n?\ni=1\n\nf (ai)? f (ai?1)\nai ?ai?1\n\n?i (2.4b)\n\n\n\n2. Fundamentos 17\n\na0 a1 a2 a3 a4\n\n?1\n\n?2\n\n?3\n\n?4\n\nx1 x2 x4\n\ny\n\nf / f?\n\nf (y)\n\nf? (y)\n\nFigura 2.2: Lineariza\u00e7\u00e3o por partes para o modelo sequencial\n\ncom as seguintes restri\u00e7\u00f5es:\n\n?1 ? a1 ?a0 (2.5a)\n\n?i ? (ai ?ai?1)xi?1 i = 2, . . . , k (2.5b)\n\n?i ? (ai ?ai?1)xi i = 1, . . . , k?1 (2.5c)\n\n?k ? 0 (2.5d)\n\n?i ? R i = 1, . . . , k (2.5e)\n\nxi ? B i = 1, . . . , k?1 (2.5f)\n\nNote que em (2.5c) est\u00e1 impl\u00edcita a condi\u00e7\u00e3o ?i ? 0, pois ?i ? (ai ?ai?1)xi ? 0, onde xi ?{0, 1}\ne ai > ai?1. Observe tamb\u00e9m que em (2.5f) n\u00e3o \u00e9 necess\u00e1rio definir xk, pois se x pertencer \u00e0 \u00faltima\n\nregi\u00e3o (k), xi = 1, ?i ?{1, . . . , k?1}.\n\nEm [33] uma compara\u00e7\u00e3o entre os Modelos I e II \u00e9 apresentada. Uma transforma\u00e7\u00e3o do Modelo I\n\npara o espa\u00e7o de vari\u00e1veis de decis\u00e3o do Modelo II \u00e9 realizada, e prova-se que o Modelo II est\u00e1 estri-\n\ntamente contido nesta transforma\u00e7\u00e3o. Al\u00e9m disso, este trabalho mostra que nos v\u00e9rtices do poliedro\n\ncorrespondente \u00e0 relaxa\u00e7\u00e3o linear do Modelo II as vari\u00e1veis x s\u00e3o sempre inteiras. Ou seja, um pro-\n\nblema de otimiza\u00e7\u00e3o cuja fun\u00e7\u00e3o objetivo seja linearizada utilizando o Modelo II pode ser resolvido\n\npor meio de programa\u00e7\u00e3o linear. Neste aspecto, o Modelo II \u00e9 considerado muito melhor que o Mo-\n\ndelo I. Entretanto, sob o aspecto did\u00e1tico, o Modelo I \u00e9 mais intuitivo que o II, devido ao significado\n\nde suas vari\u00e1veis de decis\u00e3o e simplicidade das restri\u00e7\u00f5es. Em [33], uma formula\u00e7\u00e3o que transforma\n\no Modelo II no espa\u00e7o de vari\u00e1veis de decis\u00e3o de I \u00e9 proposta, mas suas restri\u00e7\u00f5es continuam pouco\n\nintuitivas. Ent\u00e3o surge em [37] uma formula\u00e7\u00e3o simples com vari\u00e1veis de decis\u00e3o semelhantes \u00e0s do\n\nModelo I e com as caracter\u00edsticas poliedrais do Modelo II, mostrada a seguir.\n\n\n\n2. Fundamentos 18\n\na0 = 0 a1 = 1 a2 = 2 a3 = 3 a4 = 4\n\n?L1\n\n?R1 ?\nL\n2\n\n?R2 ?\nL\n3\n\n?R3 ?\nL\n4\n\n?R4\n\nx1 x2 x3 x4\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\ny\n\nf / f?\n\nf (y)\n\nf? (y)\n\nFigura 2.3: Lineariza\u00e7\u00e3o por partes para o modelo de Sherali\n\n2.3.3 Modelo de Sherali (Modelo III)\n\nNa formula\u00e7\u00e3o proposta em [37], s\u00e3o utilizadas duas vari\u00e1veis de peso para cada regi\u00e3o da li-\n\nneariza\u00e7\u00e3o: ?Li \u00e9 o peso do ponto \u00e0 esquerda da regi\u00e3o e ?\nR\ni \u00e9 o peso do ponto \u00e0 direita. Tamb\u00e9m\n\ns\u00e3o empregadas vari\u00e1veis xi inteiras que selecionam a regi\u00e3o. Esta formula\u00e7\u00e3o \u00e9 mais geral que as\n\nanteriores, pois permite tamb\u00e9m linearizar fun\u00e7\u00f5es descont\u00ednuas1 .\n\ny =\nk\n\n?\ni=1\n\n[ai?1?Li + ai?\nR\ni ] (2.6a)\n\nf? (y) =\nk\n\n?\ni=1\n\n[ f (ai?1)?Li + f (ai)?\nR\ni ] (2.6b)\n\ncom restri\u00e7\u00f5es\n\n?Li + ?\nR\ni = xi i = 1, . . . , k (2.7a)\n\nk\n\n?\ni=1\n\nxi = 1 (2.7b)\n\n?Li , ?\nR\ni ? 0 i = 1, . . . , k (2.7c)\n\n?Li , ?\nR\ni ? R i = 1, . . . , k (2.7d)\n\nxi ? B i = 1, . . . , k (2.7e)\n\nNa Figura 2.3 vemos uma ilustra\u00e7\u00e3o deste modelo. Para exemplificar, tomemos y = 2, 7, que\n\nimplica i = 3. De (2.7b) e (2.7e), x3 = 1 e x1 = x2 = x4 = 0. De (2.6a), (2.7a), (2.7c) e (2.7d),\n\n?Li = ?\nR\ni = 0 para i = 1, 2, 4, ?\n\nL\n3 = 0, 3 e ?\n\nR\n3 = 0, 7.\n\n1Em [37] \u00e9 mostrado que quando f (y) \u00e9 cont\u00ednua, este modelo \u00e9 equivalente ao modelo anterior.\n\n\n\n2. Fundamentos 19\n\nPara calcular f? (y) utilizamos (2.6b): f? (y) = f (a2)?L3 + f (a3)?\nR\n3 = 2\u00b70, 3 + 6\u00b70, 7 = 4, 8.\n\nDo exemplo apresentado, (2.7a) e (2.7b) s\u00e3o escritas matricialmente como A?z = b?,\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n1 1 ?1 0 0 0 0 0 0 0 0 0\n\n0 0 0 1 1 ?1 0 0 0 0 0 0\n\n0 0 0 0 0 0 1 1 ?1 0 0 0\n\n0 0 0 0 0 0 0 0 0 1 1 ?1\n\n0 0 1 0 0 1 0 0 1 0 0 1\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\nz =\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n0\n\n0\n\n0\n\n0\n\n1\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\nzT =\n[\n\n?L1 ?\nR\n1 x1 ?\n\nL\n2 ?\n\nR\n2 x2 ?\n\nL\n3 ?\n\nR\n3 x3 ?\n\nL\n4 ?\n\nR\n4 x4\n\n]\n\nDesejamos mostrar que A? \u00e9 totalmente unimodular. Podemos desconsiderar as colunas correspon-\n\ndentes \u00e0s vari\u00e1veis ?, pois estas possuem apenas uma linha diferente de zero [31]. A matriz resultante\n(colunas de x) corresponde a uma matriz de incid\u00eancia [42], que \u00e9 totalmente unimodular. Assim, a\n\nmatriz A? tamb\u00e9m \u00e9 totalmente unimodular.\n\nAs restri\u00e7\u00f5es (2.7c) a (2.7e), na forma xi ? 0 e xi ? 1 para todo i = 1, . . . , k, implicam em iden-\n\ntidades que s\u00e3o concatenadas \u00e0 matriz A?, e n\u00e3o afetam sua unimodularidade. Note tamb\u00e9m que\n\nas restri\u00e7\u00f5es de igualdade podem ser transformadas em desigualdades (?T z = ?0 =? ?T z ? ?0 e\n?T z ? ?0). Assim, a matriz de restri\u00e7\u00f5es para esta formula\u00e7\u00e3o \u00e9 totalmente unimodular.\n\nA conseq\u00fc\u00eancia \u00e9 que o poliedro desta formula\u00e7\u00e3o \u00e9 m\u00ednimo, ou seja, ele corresponde ao fecho\n\nconvexo das solu\u00e7\u00f5es, e em todos os seus v\u00e9rtices as vari\u00e1veis x s\u00e3o inteiras. Assim, problemas de\n\notimiza\u00e7\u00e3o formulados de acordo com o Modelo III podem ser resolvidos utilizando programa\u00e7\u00e3o\n\nlinear.\n\n2.4 Defini\u00e7\u00f5es de Poliedro e Dimens\u00e3o\n\nApresentamos aqui alguns resultados sobre Teoria Poliedral [20], [31], com o objetivo de fami-\n\nliarizar o leitor com este assunto.\n\nDefini\u00e7\u00e3o 2.1 Um conjunto de pontos x1, x2, . . . , xk ? Rn \u00e9 linearmente independente se a \u00fanica\n\nsolu\u00e7\u00e3o para ?ki=1 ?ixi = 0 \u00e9 ?i = 0 para i = 1, 2, . . . , k.\n\nDefini\u00e7\u00e3o 2.2 Um conjunto de pontos x1, x2, . . . , xk ?Rn \u00e9 afim independente se a \u00fanica solu\u00e7\u00e3o para\n\n?ki=1 ?ixi = 0 e ?\nk\ni=1 ?i = 0 \u00e9 ?i = 0 para i = 1, 2, . . . , k.\n\nDefini\u00e7\u00e3o 2.3 Seja S = {x1, x2, . . . , xk} um conjunto de pontos em Rn. O fecho convexo de S \u00e9 o\n\nconjunto de pontos conv(S) = {?ki=1 ?ixi : ?\nk\ni=1 ?i = 1, xi ? S, ?i ? R e ?i ? 0, para i = 1, 2, . . . , k}.\n\n\n\n2. Fundamentos 20\n\nDefini\u00e7\u00e3o 2.4 Um poliedro P ? Rn \u00e9 um conjunto de pontos que satisfaz um n\u00famero finito de de-\n\nsigualdades lineares, ou seja, P = {x ? Rn : Ax ? b}, onde (A, b) \u00e9 uma matriz m\u00d7(n + 1).\n\nProposi\u00e7\u00e3o 2.1 O fecho convexo dos elementos inteiros de P = {x ? Rn : Ax ? b} \u00e9 tamb\u00e9m um\n\npoliedro, ou seja, conv(P?Zn) = {x ? Rn : A?x ? b?} para alguma matriz A? e algum vetor b?.\n\nDefini\u00e7\u00e3o 2.5 Um poliedro P ? Rn \u00e9 limitado se existe ? ? R1+ tal que P ?{x ? R\nn : ?? ? x j ?\n\n? para j = 1, . . . , n}. Um poliedro limitado \u00e9 denominado politopo.\n\nDefini\u00e7\u00e3o 2.6 Um poliedro P tem dimens\u00e3o n, denotado por dim(P) = n, se o n\u00famero m\u00e1ximo de\n\npontos afim independentes em P \u00e9 n + 1.\n\nDefini\u00e7\u00e3o 2.7 Um poliedro P ? Rn possui dimens\u00e3o cheia se dim(P) = n.\n\nSe P n\u00e3o possui dimens\u00e3o cheia, ent\u00e3o pelo menos uma de suas desigualdades aix ? bi \u00e9 satisfeita\n\nna igualdade por todos os pontos de P, onde ai corresponde \u00e0 linha i da matriz A. Sejam M =\n\n{1, 2, . . . , m}, M= ={i ? M : aix = bi para todo x ? P}, e M\n? ={i ? M : aix &lt;bi para algum x ? P}=\n\nM\\M=. Sejam (A=, b=), (A?, b?) as linhas correspondentes de (A, b), formando os conjuntos de\n\nigualdades e desigualdades da representa\u00e7\u00e3o (A, b) de P, ou seja, P ={x ?Rn : A=x = b=, A?x? b?}.\n\nNote que se i?M?, ent\u00e3o (ai, bi) n\u00e3o pode ser escrito como combina\u00e7\u00e3o linear das linhas de (A\n=, b=).\n\n2.5 Descri\u00e7\u00e3o de Poliedros atrav\u00e9s de Facetas\n\nDado um poliedro P ={x ?Rn : Ax?b}, analisamos nesta se\u00e7\u00e3o quais das desigualdades aix ?bi\ns\u00e3o necess\u00e1rias para descrever P e quais podem ser descartadas.\n\nDefini\u00e7\u00e3o 2.8 A desigualdade ?T x ? ?0 ou (?, ?0) \u00e9 denominada uma desigualdade v\u00e1lida para P se\nfor satisfeita por todos os pontos de P.\n\nDefini\u00e7\u00e3o 2.9 Se (?, ?0) \u00e9 uma desigualdade v\u00e1lida para P e F? = {x ? P : ?T x = ?0}, F? \u00e9 denom-\ninada uma face de P, e dizemos que (?, ?0) representa ou induz F?. Uma face F? \u00e9 dita pr\u00f3pria se\nF? 6= /0 e F? 6= P.\n\nA face F? representada por (?, ?0) \u00e9 n\u00e3o-vazia se e somente se max{?T x : x ? P} = ?0. Quando\nF? \u00e9 n\u00e3o-vazia, dizemos que (?, ?0) suporta P.\n\nDefini\u00e7\u00e3o 2.10 Uma face F de P \u00e9 uma faceta de P se dim(F ) = dim(P)?1.\n\nTeorema 2.1 Seja P um poliedro descrito por {x ? Rn : Ax ? b e Cx = d}, onde Ax ? b n\u00e3o pos-\n\nsui nenhuma igualdade impl\u00edcita e C possui posto completo. Esta descri\u00e7\u00e3o do poliedro \u00e9 n\u00e3o-\n\nredundante, ou seja, a remo\u00e7\u00e3o de uma desigualdade ou igualdade resulta em um poliedro diferente\n\nde P, se e somente se toda desigualdade Ax ? b define uma faceta para P.\n\n\n\n2. Fundamentos 21\n\nDefini\u00e7\u00e3o 2.11 Dizemos que uma desigualdade ?T x ? ?0 domina outra desigualdade ?T x ? ?0, ou\nseja, ?T x ? ?0 \u00e9 mais forte que ?T x ? ?0, se existir ? > 0 tal que ? ? ?? e ?0 ? ??0.\n\nAlgumas vezes \u00e9 poss\u00edvel obter desigualdades mais fortes, ou at\u00e9 mesmo facetas, a partir de faces\n\nde um poliedro P. Um processo bastante utilizado para este fim \u00e9 o li f ting. Considere a desigualdade\n\nv\u00e1lida ?T x??0 para P?Rn, e F? a face definida por esta desigualdade. Considere outra desigualdade\nv\u00e1lida para P, ?T x ? ?0, que define a face F?. A desigualdade ?T x ? ?0 \u00e9 um li f ting da desigualdade\n?T x ? ?0 se:\n\n1. F? ? F?;\n\n2. dim(F?) &lt;dim(F?) ? dim(P)?1 .\n\n2.5.1 Caracteriza\u00e7\u00e3o de Facetas\n\nDescrevemos agora duas t\u00e9cnicas utilizadas para provar que desigualdades v\u00e1lidas definem facetas\n\npara um dado poliedro: constru\u00e7\u00e3o direta e verifica\u00e7\u00e3o da maximalidade. Suponha que o poliedro\n\nP = {x ? Rn : Ax ? b}? Rn possui dimens\u00e3o cheia, e que a desigualdade ?T x ? ?0 pertence ao\nconjunto de desigualdades que definem P (portanto uma desigualdade v\u00e1lida).\n\nConstru\u00e7\u00e3o direta\n\nPara provar que a desigualdade v\u00e1lida ?T x ? ?0 define uma faceta para P utilizando a t\u00e9cnica\nda constru\u00e7\u00e3o direta, \u00e9 necess\u00e1rio encontrar um conjunto de vetores S ? P afim independentes com\n\ncardinalidade igual a dim(P), tal que cada elemento de S satisfaz a desigualdade ?T x ? ?0 na igual-\ndade. Assim, a face F definida por ?T x = ?0 teria dimens\u00e3o igual a dim(P)?1 e portanto (?, ?0)\ndefiniria uma faceta para P. Caso o poliedro n\u00e3o possua dimens\u00e3o cheia, primeiro deve-se verificar\n\nque ?T x ? ?0 n\u00e3o \u00e9 uma igualdade impl\u00edcita. Isto pode ser feito encontrando-se um vetor x? ? P tal\nque ?T x? &lt;?0.\n\nVerifica\u00e7\u00e3o da maximalidade\n\nEsta t\u00e9cnica consiste em provar que a face F? de P ? R\nn induzida por (?, ?0) n\u00e3o est\u00e1 contida em\n\nnenhuma outra face de P, ou seja, provar que F? \u00e9 m\u00e1xima. Seja ?T x ? ?0 uma desigualdade v\u00e1lida\npara P, tal que F? ? F?. Se ?T x ? ?0 pode ser expressa como um m\u00faltiplo escalar n\u00e3o negativo de\n?T x ? ?0, ent\u00e3o (?, ?0) define uma faceta para P. Caso P n\u00e3o possua dimens\u00e3o cheia, deve-se provar\nque (?, ?0) n\u00e3o \u00e9 uma igualdade impl\u00edcita, e tamb\u00e9m garantir que (?, ?0) e (?, ?0) diferem n\u00e3o apenas\nde um m\u00faltiplo escalar positivo, mas tamb\u00e9m de uma combina\u00e7\u00e3o linear das equa\u00e7\u00f5es impl\u00edcitas para\n\nP.\n\n\n\n2. Fundamentos 22\n\n2.6 Desigualdades V\u00e1lidas para o Problema da Mochila\n\nUtilizaremos aqui a mesma inst\u00e2ncia do problema da mochila apresentada na Se\u00e7\u00e3o 2.2. A rela-\n\nxa\u00e7\u00e3o linear de KP \u00e9 apresentada abaixo:\n\nLKP : z = Maximizar 10x1 + 7x2 + 25x3 + 24x4\nSujeito a: 2x1 + x2 + 6x3 + 5x4 ? 7\n\n0 ? x ? 1\n\nResolvendo LKP, obtemos a solu\u00e7\u00e3o \u00f3tima x = (1, 1, 0, 0.8), com valor objetivo z = 36.2. A\n\ndesigualdade x1 + x2 + x4 ? 2 \u00e9 v\u00e1lida para KP, pois somente 2 itens do conjunto {1, 2, 4} cabem na\n\nmochila ao mesmo tempo (a mochila possui capacidade 7, e os pesos dos itens 1, 2 e 4 s\u00e3o 2, 1 e 5\n\nrespectivamente). Ao introduzir esta desigualdade na formula\u00e7\u00e3o, a solu\u00e7\u00e3o \u00f3tima encontrada para\n\nLKP \u00e9 cortada, pois x1 + x2 + x3 = 2.8 > 2. Sendo assim, obtemos um novo problema:\n\nLKP1 : z = Maximizar 10x1 + 7x2 + 25x3 + 24x4\nSujeito a: 2x1 + x2 + 6x3 + 5x4 ? 7\n\nx1 + x2 + x4 ? 2\n\n0 ? x ? 1\n\nA solu\u00e7\u00e3o de LKP1 \u00e9 x = (0, 1, 0.1667, 1), com valor objetivo z = 35.1667. Seguindo o mesmo\n\nracioc\u00ednio anterior, obtemos a desigualdade x2 + x3 + x4 ? 2, que corta a solu\u00e7\u00e3o fracion\u00e1ria obtida,\n\npois x2 + x3 + x4 = 2.1667 > 2. Introduzimos esta desigualdade v\u00e1lida em KP e obtemos a nova\n\nrelaxa\u00e7\u00e3o linear:\n\nLKP2 : z = Maximizar 10x1 + 7x2 + 25x3 + 24x4\nSujeito a: 2x1 + x2 + 6x3 + 5x4 ? 7\n\nx1 + x2 + x4 ? 2\n\nx2 + x3 + x4 ? 2\n\n0 ? x ? 1\n\ncuja solu\u00e7\u00e3o \u00e9 x = (0.1429, 0.8571, 0.1429, 1), com valor objetivo z = 35. A desigualdade x1 + x2 +\n\nx3 + x4 ? 2 \u00e9 v\u00e1lida\n2 para KP e corta a solu\u00e7\u00e3o obtida, pois x1 + x2 + x3 + x4 = 2.1429 > 2. Introdu-\n\n2Note que esta desigualdade domina as desigualdades inseridas em LKP1 e LKP2.\n\n\n\n2. Fundamentos 23\n\nzimos esta desigualdade em KP e obtemos uma nova relaxa\u00e7\u00e3o linear:\n\nLKP3 : z = Maximizar 10x1 + 7x2 + 25x3 + 24x4\nSujeito a: 2x1 + x2 + 6x3 + 5x4 ? 7\n\nx1 + x2 + x4 ? 2\n\nx2 + x3 + x4 ? 2\n\nx1 + x2 + x3 + x4 ? 2\n\n0 ? x ? 1\n\nA solu\u00e7\u00e3o obtida \u00e9 x = (0, 0.8, 0.2, 1), com valor objetivo z = 34.6. A desigualdade x3 + x4 ? 1 \u00e9\n\nv\u00e1lida para KP e corta a solu\u00e7\u00e3o obtida, pois x3 + x4 = 1.2 > 1. Introduzimos esta desigualdade em\n\nKP e obtemos a nova relaxa\u00e7\u00e3o linear:\n\nLKP4 : z = Maximizar 10x1 + 7x2 + 25x3 + 24x4\nSujeito a: 2x1 + x2 + 6x3 + 5x4 ? 7\n\nx1 + x2 + x4 ? 2\n\nx2 + x3 + x4 ? 2\n\nx1 + x2 + x3 + x4 ? 2\n\nx3 + x4 ? 1\n\n0 ? x ? 1\n\ncuja solu\u00e7\u00e3o \u00e9 x = (1, 0, 0, 1), com valor objetivo z = 34. Como a solu\u00e7\u00e3o obtida \u00e9 inteira, conclui-se\n\nque \u00e9 a solu\u00e7\u00e3o \u00f3tima para KP, ou seja, x? = (1, 0, 0, 1) e z? = 34 (a mesma solu\u00e7\u00e3o obtida no Cap\u00edtulo\n\n2.2).\n\nA introdu\u00e7\u00e3o de desigualdades v\u00e1lidas \u00e9 bastante utilizada nos programas comerciais de otimiza-\n\n\u00e7\u00e3o, al\u00e9m do pr\u00e9-processamento da formula\u00e7\u00e3o (eliminar vari\u00e1veis e restri\u00e7\u00f5es redundantes, de modo\n\na obter uma formula\u00e7\u00e3o mais compacta, que tipicamente pode ser resolvida mais rapidamente). A\n\nid\u00e9ia \u00e9 examinar a formula\u00e7\u00e3o inicial P = {x : Ax ? b, x ? 0} com X = P?Zn, encontrar um conjunto\n\nde desigualdades v\u00e1lidas Qx ? q para X , adicionar estas desigualdades na formula\u00e7\u00e3o original e obter\n\na nova formula\u00e7\u00e3o P? = {x : Ax ? b, Qx ? q, x ? 0} com X = P??Zn. Caso a relaxa\u00e7\u00e3o linear de P?\n\nn\u00e3o forne\u00e7a uma solu\u00e7\u00e3o inteira, podemos tentar encontrar a solu\u00e7\u00e3o \u00f3tima atrav\u00e9s de um algoritmo\n\nde otimiza\u00e7\u00e3o para P?, que \u00e9 uma formula\u00e7\u00e3o mais \u201capertada\u201d.\n\nUm algoritmo exato bastante utilizado para este fim \u00e9 chamado de Branch-and-Bound (B&amp;B). Um\n\nalgoritmo B&amp;B pode ser entendido como uma estrat\u00e9gia de divis\u00e3o de um problema P em um con-\n\njunto de subproblemas {SPk} de forma que a solu\u00e7\u00e3o de P possa ser obtida atrav\u00e9s da combina\u00e7\u00e3o das\n\nsolu\u00e7\u00f5es dos subproblemas. De acordo com o algoritmo B&amp;B, as divis\u00f5es s\u00e3o feitas iterativamente,\n\nsempre observando que os subproblemas devem ser mais f\u00e1ceis de serem resolvidos do que o pro-\n\nblema original, al\u00e9m de descartar subproblemas por meio de enumera\u00e7\u00e3o impl\u00edcita, ou seja, garantir\n\nde alguma forma que a solu\u00e7\u00e3o \u00f3tima n\u00e3o \u00e9 solu\u00e7\u00e3o de um certo subproblema, e que portanto pode-\n\n\n\n2. Fundamentos 24\n\nmos descart\u00e1-lo. Na t\u00e9cnica conhecida como Cut-and-Branch, cortes s\u00e3o inseridos iterativamente na\n\nrelaxa\u00e7\u00e3o at\u00e9 que novos cortes n\u00e3o possam ser gerados, e ent\u00e3o \u00e9 realizada uma nova busca B&amp;B na\n\nformula\u00e7\u00e3o resultante. Quando a gera\u00e7\u00e3o de cortes \u00e9 executada em algum n\u00f3 da \u00e1rvore de B&amp;B, o\n\nm\u00e9todo recebe o nome de Branch-and-Cut.\n\n2.7 Sum\u00e1rio\n\nNeste cap\u00edtulo foram apresentados conceitos b\u00e1sicos da \u00e1rea de otimiza\u00e7\u00e3o e o paradigma de Pro-\n\ngrama\u00e7\u00e3o Din\u00e2mica (PD), cujo funcionamento foi ilustrado atrav\u00e9s de sua aplica\u00e7\u00e3o para a solu\u00e7\u00e3o de\n\numa inst\u00e2ncia de um problema cl\u00e1ssico de otimiza\u00e7\u00e3o conhecido como \u201cproblema da mochila\u201d [22].\n\nForam apresentados tamb\u00e9m conceitos de fun\u00e7\u00f5es lineares por partes e teoria poliedral. Apresenta-\n\nmos um exemplo num\u00e9rico de como as desigualdades v\u00e1lidas de um problema podem ser utilizadas\n\npara facilitar (e em alguns casos encontrar) a solu\u00e7\u00e3o do mesmo.\n\n\n\nCap\u00edtulo 3\n\nSolu\u00e7\u00e3o de P( /0) Utilizando Programa\u00e7\u00e3o\nDin\u00e2mica\n\nNeste cap\u00edtulo, apresentamos um modelo do problema de aloca\u00e7\u00e3o de g\u00e1s de eleva\u00e7\u00e3o em lin-\n\nguagem formal, e um algoritmo de Programa\u00e7\u00e3o Din\u00e2mica que resolve este problema. Apresentamos\n\ntamb\u00e9m resultados de experimentos num\u00e9ricos que comprovam a efici\u00eancia do algoritmo em termos\n\nde tempo computacional e de qualidade da solu\u00e7\u00e3o encontrada. Algumas compara\u00e7\u00f5es com exem-\n\nplos publicados na literatura mostram que o desempenho de nosso algoritmo supera o desempenho\n\ndas solu\u00e7\u00f5es propostas at\u00e9 o momento.\n\n3.1 Formula\u00e7\u00e3o do Problema\n\nO problema estudado aqui visa encontrar a aloca\u00e7\u00e3o \u00f3tima de uma taxa dispon\u00edvel de inje\u00e7\u00e3o\n\nde g\u00e1s de eleva\u00e7\u00e3o para um grupo de po\u00e7os, visando maximizar o lucro obtido com a venda dos\n\nhidrocarbonetos extra\u00eddos. Este problema pode ser escrito da seguinte maneira:\n\nP( /0) : J = Maximizar f =\nN\n?\n\nn=1\n\n(\n\npo?no + pg?\nn\ng ? pw?\n\nn\nw\n\n)\n\nqnp ?\nN\n?\n\nn=1\npiq\n\nn\ni\n\nSujeito a:\n\nqnp = q?\nn\np(q\n\nn\ni ) n = 1, . . . , N\n\nN\n?\n\nn=1\nqni ? q\n\nmax\ni\n\nlnyn ? q\nn\ni ? unyn n = 1, . . . , N\n\nyn ?{0, 1} n = 1, . . . , N\n\n(3.1)\n\nonde:\n\n\n\n3. Solu\u00e7\u00e3o de P( /0) Utilizando Programa\u00e7\u00e3o Din\u00e2mica 26\n\n\u2022 N \u00e9 o n\u00famero de po\u00e7os que produzem via gas-lift;\n\n\u2022 qni \u00e9 a taxa de inje\u00e7\u00e3o de g\u00e1s alocada para o po\u00e7o n;\n\n\u2022 yn assume valor 1 se o po\u00e7o n est\u00e1 ativo, e 0 caso contr\u00e1rio;\n\n\u2022 qnp \u00e9 a taxa de produ\u00e7\u00e3o de fluidos do po\u00e7o n, em fun\u00e7\u00e3o de q\nn\ni ;\n\n\u2022 qmaxi \u00e9 a taxa de inje\u00e7\u00e3o de g\u00e1s dispon\u00edvel, sendo que a soma das taxas de inje\u00e7\u00e3o de g\u00e1s dos N\n\npo\u00e7os n\u00e3o deve ultrapassar esta taxa;\n\n\u2022 ln e un s\u00e3o as taxas de inje\u00e7\u00e3o m\u00ednima e m\u00e1xima para o po\u00e7o n, respectivamente;\n\n\u2022 po e pg representam o lucro (pre\u00e7o de venda menos custos de processamento) obtido por vo-\n\nlume de \u00f3leo e g\u00e1s vendido, respectivamente;\n\n\u2022 pw \u00e9 o custo de tratamento da \u00e1gua\n1;\n\n\u2022 pi representa os custos de compress\u00e3o, tratamento e inje\u00e7\u00e3o do g\u00e1s;\n\n\u2022 ?no, ?\nn\ng e ?\n\nn\nw s\u00e3o respectivamente as fra\u00e7\u00f5es de \u00f3leo, g\u00e1s e \u00e1gua\n\n2 que comp\u00f5e o fluxo de sa\u00edda do\n\npo\u00e7o n, sendo ?no + ?\nn\ng + ?\n\nn\nw = 1.\n\nO problema P( /0) pode ser facilmente adaptado para capturar algumas varia\u00e7\u00f5es:\n\n\u2022 A n\u00e3o-concavidade introduzida por um po\u00e7o n que n\u00e3o responde imediatamente \u00e0 inje\u00e7\u00e3o de\n\ng\u00e1s (qnp(q\nn\ni ) = 0 para algum q\n\nn\ni > 0, po\u00e7os dos tipos C e D, Figura 1.4) \u00e9 automaticamente\n\neliminada devido \u00e0 exist\u00eancia do limite inferior de inje\u00e7\u00e3o ln;\n\n\u2022 Neste trabalho assumimos que qnp(0) = 0 para n = 1, . . . , N. No caso de existir um po\u00e7o sur-\n\ngente, ou seja, um po\u00e7o para o qual qnp(0) 6= 0 (po\u00e7os do tipo A, Figura 1.4), basta adicionar \u00e0\n\nfun\u00e7\u00e3o objetivo sua contribui\u00e7\u00e3o Jns = (po?\nn\no + pg?\n\nn\ng ? pw?\n\nn\nw)q\n\nn\np(0), e substituir a fun\u00e7\u00e3o q\n\nn\np(q\n\nn\ni )\n\npor q?no(q\nn\ni ) = q\n\nn\np(q\n\nn\ni )?q\n\nn\np(0); a solu\u00e7\u00e3o \u00f3tima q\n\nn\ni para n = 1, . . . , N n\u00e3o se altera com a adi\u00e7\u00e3o da\n\nconstante Jns no valor de J e com a utiliza\u00e7\u00e3o de q?\nn\no(q\n\nn\ni ), e portanto os algoritmos desenvolvidos\n\naqui s\u00e3o capazes de levar estes po\u00e7os em considera\u00e7\u00e3o;\n\n\u2022 Caso o problema de interesse seja a maximiza\u00e7\u00e3o da taxa de produ\u00e7\u00e3o de \u00f3leo ao inv\u00e9s do lucro\n\nobtido, basta fazer po = 1, e pg = pw = pi = 0.\n\n1O descarte da \u00e1gua s\u00f3 pode ser feito dentro de determinadas especifica\u00e7\u00f5es, regulamentadas por \u00f3rg\u00e3os de controle do\nmeio ambiente, limitando a quantidade de poluentes como o teor de \u00f3leo e H2S nos efluentes aquosos [39].\n\n2Se considerarmos que a press\u00e3o e a temperatura no separador forem constantes, podemos considerar estas fra\u00e7\u00f5es\ntamb\u00e9m constantes para um determinado po\u00e7o.\n\n\n\n3. Solu\u00e7\u00e3o de P( /0) Utilizando Programa\u00e7\u00e3o Din\u00e2mica 27\n\nPara completar a descri\u00e7\u00e3o do problema de otimiza\u00e7\u00e3o em Programa\u00e7\u00e3o Matem\u00e1tica, \u00e9 necess\u00e1rio\n\ndefinir a rela\u00e7\u00e3o entre qnp e q\nn\ni . O problema de maximiza\u00e7\u00e3o n\u00e3o pode ser resolvido se os da-\n\ndos que caracterizam a produ\u00e7\u00e3o dos po\u00e7os via gas-lift, ou seja, as fun\u00e7\u00f5es qnp = q\nn\np(q\n\nn\ni ) n\u00e3o es-\n\ntiverem dispon\u00edveis [15], [18], [19], [26]. Estes dados recebem o nome de curvas de desempenho\n\n(Well Performance Curves, ou W PCs), e tipicamente possuem a forma mostrada na Figura 1.3.\n\nOs dados para a constru\u00e7\u00e3o das W PCs s\u00e3o obtidos atrav\u00e9s de simula\u00e7\u00f5es e testes de produ\u00e7\u00e3o:\n\naplica-se um determinado n\u00famero de taxas de inje\u00e7\u00e3o de g\u00e1s em um determinado po\u00e7o n, e o seu\n\nfluxo de sa\u00edda \u00e9 direcionado a um separador de testes, obtendo assim um conjunto de k pontos\n\nQn = {(q\nn,1\ni , q\n\nn,1\np ), (q\n\nn,2\ni , q\n\nn,2\np ), . . . , (q\n\nn,k\ni , q\n\nn,k\np )}, bem como as porcentagens de \u00f3leo, g\u00e1s e \u00e1gua pro-\n\nduzidas pelo po\u00e7o, ?no, ?\nn\ng e ?\n\nn\nw. Dado um conjunto Q\n\nn de pontos de desempenho de gas-lift, com\n\nq\nn, j\ni &lt;q\n\nn, j+1\ni para j = 1, . . . , k?1, foram utilizados tr\u00eas modelos de curvas\n\n3 para representar as W PCs:\n\n1) Uma fun\u00e7\u00e3o polinomial da forma q?np(q\nn\ni ) = ?\n\nn\n0yn + ?\n\nn\n1q\n\nn\ni + ?\n\nn\n2(q\n\nn\ni )\n\n2 + ?n3(q\nn\ni )\n\n3, definida pelas\n\nconstantes ?n0, ?\nn\n1, ?\n\nn\n2 e ?\n\nn\n3. A vantagem deste modelo \u00e9 que o problema de ajuste de curvas\n\ngerado \u00e9 um problema de f\u00e1cil solu\u00e7\u00e3o. Sua desvantagem \u00e9 a m\u00e1 qualidade de extrapola\u00e7\u00e3o\n\npara pontos fora do intervalo [qn,1i , q\nn,k\ni ];\n\n2) Uma fun\u00e7\u00e3o exponencial da forma q?np(q\nn\ni ) = An(2?e\n\n?Bnq\nn\ni )?Cne\n\nDn q\nn\ni + Fn(1?yn), definida\n\npelas constantes An, Bn, Cn, Dn e Fn = Cn ?An. Esta fun\u00e7\u00e3o exponencial \u00e9 uma boa aproxi-\n\nma\u00e7\u00e3o para o comportamento t\u00edpico de uma W PC, fornece bons dados de extrapola\u00e7\u00e3o, e sua\n\nconcavidade \u00e9 garantida satisfazendo condi\u00e7\u00f5es simples. Basta garantir que as constantes An\ne Cn sejam positivas, pois sob estas condi\u00e7\u00f5es sua derivada segunda assume valores negativos\n\npara qualquer valor de qni ;\n\n3) Uma fun\u00e7\u00e3o logar\u00edtmica da forma qnp(q\nn\ni ) = c\n\nn\n1yn + c\n\nn\n2q\n\nn\ni + c\n\nn\n3(q\n\nn\ni )\n\n2 + cn4 ln(q\nn\ni + 1), definida pelas\n\nconstantes cn1, c\nn\n2, c\n\nn\n3 e c\n\nn\n4. Este modelo foi utilizado para comparar os resultados obtidos com o\n\nalgoritmo PD e os obtidos com o m\u00e9todo de SQP proposto em [1].\n\nHip\u00f3tese 3.1 Cada fun\u00e7\u00e3o qnp(q\nn\ni ) \u00e9 uma fun\u00e7\u00e3o c\u00f4ncava tal que q\n\nn\np(q\n\nn\ni ) ? 0 para q\n\nn\ni ? [ln, un].\n\nHip\u00f3tese 3.2 po?no + pg?\nn\ng > pw?\n\nn\nw para todo po\u00e7o n, o que implica em ?n = po?\n\nn\no + pg?\n\nn\ng ? pw?\n\nn\nw > 0.\n\nA Hip\u00f3tese 3.1 \u00e9 v\u00e1lida pois normalmente o comportamento do fluxo de sa\u00edda de um po\u00e7o em\n\nfun\u00e7\u00e3o de sua taxa de inje\u00e7\u00e3o de g\u00e1s possui o aspecto mostrado na Figura 1.3, ou seja, a fun\u00e7\u00e3o qp(qi)\n\n\u00e9 crescente at\u00e9 uma determinada taxa de satura\u00e7\u00e3o, quando os efeitos friccionais passam a ditar o\n\ncomportamento do fluxo, e qp(qi) passa a ser decrescente. A Hip\u00f3tese 3.2 reflete o aspecto da viabi-\n\nlidade econ\u00f4mica da explota\u00e7\u00e3o de um po\u00e7o de petr\u00f3leo, ou seja, caso o custo de tratamento da \u00e1gua\n\nextra\u00edda supere os dividendos provenientes da venda dos hidrocarbonetos, o po\u00e7o \u00e9 economicamente\n\ninvi\u00e1vel, e portanto a hip\u00f3tese \u00e9 v\u00e1lida.\n\n3Os m\u00e9todos de ajuste de curvas utilizados para ajustar os modelos aos pontos em Qn encontram-se no Ap\u00eandice A.\n\n\n\n3. Solu\u00e7\u00e3o de P( /0) Utilizando Programa\u00e7\u00e3o Din\u00e2mica 28\n\nOs valores de ?no, ?\nn\ng e ?\n\nn\nw podem ser escritos em termos da raz\u00e3o \u00e1gua-\u00f3leo (ou Water Cut, WC) e\n\nda raz\u00e3o g\u00e1s-l\u00edquido (ou Gas-Liquid Ratio, GLR), termos mais comuns na literatura. Definindo WC e\n\nGLR como:\n\nGLR =\n?g\n\n?o+?w\n, WC = ?w?o\n\ne sabendo que ?no + ?\nn\ng + ?\n\nn\nw = 1, obtemos as seguintes rela\u00e7\u00f5es:\n\n?o = 1(1+WC)(1+GLR) , ?w =\nWC\n\n(1+WC)(1+GLR) , ?g =\nGLR\n\n1+GLR .\n\nCorol\u00e1rio 3.1 f \u00e9 uma fun\u00e7\u00e3o c\u00f4ncava de qi = [q1i , . . . , q\nN\ni ] na regi\u00e3o fact\u00edvel de P( /0).\n\nProva Como qnp \u00e9 uma fun\u00e7\u00e3o c\u00f4ncava (Hip\u00f3tese 3.1) e ?n \u00e9 uma constante positiva para cada n\n(Hip\u00f3tese 3.2), fn = ?nqnp ? piq\n\nn\ni \u00e9 uma fun\u00e7\u00e3o c\u00f4ncava e portanto f = f1 + . . . + fn \u00e9 uma fun\u00e7\u00e3o\n\nc\u00f4ncava de qi. ?\n\nProposi\u00e7\u00e3o 3.1 P( /0) \u00e9 NP-dif\u00edcil.\n\nProva: O problema da mochila (knapsack problem, KP) \u00e9 um problema NP-dif\u00edcil e pode ser re-\n\nduzido a P( /0). Seja IKP uma inst\u00e2ncia de KP consistindo de N itens, onde cn \u00e9 o valor do n-\u00e9simo item\ne wn \u00e9 o seu peso, e b \u00e9 a capacidade da mochila. Gerando uma inst\u00e2ncia I de P( /0) com qmaxi = b,\nln = un = wn para todo n, ?no = 1, ?\n\nn\ng = ?\n\nn\nw = 0, po = 1 e pg = pw = pi = 0, q\n\nn\np = yncn para cada\n\nn (para a fun\u00e7\u00e3o polinomial, basta fazer ?n0 = cn e ?\nn\n1 = ?\n\nn\n2 = ?\n\nn\n3 = 0; para a fun\u00e7\u00e3o exponencial,\n\nAn = cn e Bn = Cn = Dn = 0; para a fun\u00e7\u00e3o logar\u00edtmica, c1 = cn e c2 = c3 = c4 = 0), uma solu\u00e7\u00e3o\n\n\u00f3tima z = {yn, q\nn\ni , q\n\nn\np} para I \u00e9 tamb\u00e9m uma solu\u00e7\u00e3o \u00f3tima para IKP, ou seja, o n-\u00e9simo item vai para\n\na mochila se e somente se yn = 1. ?\n\n3.2 Solu\u00e7\u00e3o de P( /0)\n\nApresentamos aqui um algoritmo para resolver P( /0). Nesta se\u00e7\u00e3o, refere-se a P( /0) como P, por\nsimplicidade. Como mostrado na Proposi\u00e7\u00e3o 3.1, o problema P pertence \u00e0 classe de problemas NP-\n\ndif\u00edceis, o que significa que at\u00e9 hoje n\u00e3o existe e as evid\u00eancias s\u00e3o de que n\u00e3o existir\u00e1 algoritmo capaz\n\nde fornecer uma solu\u00e7\u00e3o para P em tempo polinomial no n\u00famero de po\u00e7os. Portanto, \u00e9 necess\u00e1rio\n\ndesenvolver um algoritmo que seja capaz de fornecer uma solu\u00e7\u00e3o aproximada, pr\u00f3xima da solu\u00e7\u00e3o\n\n\u00f3tima, e que o tempo exigido para o c\u00e1lculo desta solu\u00e7\u00e3o seja relativamente pequeno.\n\nPara resolver P atrav\u00e9s de PD seria necess\u00e1rio resolver um n\u00famero infinito de problemas, pois\n\nqi \u00e9 uma vari\u00e1vel cont\u00ednua [11]. Aqui, apresentamos um algoritmo PD que resolve PM, uma vers\u00e3o\n\naproximada de P, onde para cada po\u00e7o n s\u00e3o alocadas wn unidades padr\u00e3o de inje\u00e7\u00e3o de g\u00e1s. Seja\n\n? = qmaxi /M uma unidade padr\u00e3o de taxa de inje\u00e7\u00e3o de g\u00e1s, onde M \u00e9 o n\u00famero total de unidades\n\n\n\n3. Solu\u00e7\u00e3o de P( /0) Utilizando Programa\u00e7\u00e3o Din\u00e2mica 29\n\npadr\u00e3o dispon\u00edveis. O problema PM maximiza o lucro obtido, e \u00e9 definido como:\n\nPM : JM = Maximizar\nN\n?\n\nn=1\n\n[\n\n(po?no + pg?\nn\ng ? pw?\n\nn\nw)q?\n\nn\np ? piq\n\nn\ni\n\n]\n\nSujeito a :\n\nlnyn ? q\nn\ni ? min{un, wn?}yn n = 1, . . . , N\n\nN\n?\n\nn=1\nwn ? M\n\nyn ?{0, 1} n = 1, . . . , N\n\nwn ?{0, . . . , M} n = 1, . . . , N\n\n(3.2)\n\nonde a fun\u00e7\u00e3o q?np \u00e9 a fun\u00e7\u00e3o que aproxima o comportamento da produ\u00e7\u00e3o de fluidos do po\u00e7o n em\n\nfun\u00e7\u00e3o de qni e wn \u00e9 o n\u00famero de unidades padr\u00e3o de taxa de inje\u00e7\u00e3o de g\u00e1s alocado para o po\u00e7o n.\n\nA seguir desenvolvemos as recorr\u00eancias para a solu\u00e7\u00e3o de PM via PD, apresentamos o algoritmo\n\npara a solu\u00e7\u00e3o do problema e os resultados num\u00e9ricos obtidos.\n\n3.2.1 Recorr\u00eancias\n\nLimitando a taxa de inje\u00e7\u00e3o de g\u00e1s dispon\u00edvel em m ?{0, . . . , M} unidades padr\u00e3o, o problema\n\nassume a seguinte formula\u00e7\u00e3o recursiva:\n\nP?m,n : Fm,n = Maximizar (po?no + pg?\nn\ng ? pw?\n\nn\nw)q?\n\nn\np ? piq\n\nn\ni\n\nSujeito a :\n\nlnyn ? q\nn\ni ? min{un, m?}yn\n\nyn ?{0, 1}\n\n(3.3)\n\nPm,N : Jm,N = Fm,N\n\nPm,n : Jm,n = Maximizar (po?no + pg?\nn\ng ? pw?\n\nn\nw)q?\n\nn\np ? piq\n\nn\ni + Jm?wn,n+1\n\nSujeito a :\n\nlnyn ? q\nn\ni ? min{un, wn?}yn\n\nyn ?{0, 1}\n\nwn ?{0, ..., m}\n\n(3.4)\n\n3.2.2 Algoritmo PD para P( /0)\n\nDas recorr\u00eancias (3.3) e (3.4), conclui-se que PM ? PM,1 e consequentemente JM ? JM,1. A\n\ndefini\u00e7\u00e3o destas recorr\u00eancias torna poss\u00edvel a constru\u00e7\u00e3o de um algoritmo PD:\n\nAlgoritmo PD para PM\n\n\n\n3. Solu\u00e7\u00e3o de P( /0) Utilizando Programa\u00e7\u00e3o Din\u00e2mica 30\n\nTabela 3.1: Par\u00e2metros de uma inst\u00e2ncia de P( /0) com 6 po\u00e7os.\n\nn\n1 2 3 4 5 6\n\n?n0 0 0 0 0 0 0\n?n1 42,2210 47,1210 45,7210 38,9210 37,7210 39,4210\n?n2 0 0 0 0 0 0\n?n3 -0,2549 -0,2649 -0,2749 -0,2449 -0,2549 -0,2649\n?no 0,70 0,75 0,65 0,65 0,60 0,80\n?ng 0,20 0,17 0,25 0,20 0,30 0,12\n?nw 0,10 0,08 0,10 0,15 0,10 0,08\nln 3,65 3,65 3,65 3,65 3,65 3,65\nun 10,00 10,00 10,00 10,00 10,00 10,00\n\nInicializa\u00e7\u00e3o\n\nPara m = 0, . . . , M\n\nCalcule Jm,N\nRecorr\u00eancia\n\nPara n = N ?1, . . . , 1\n\nPara m = 0, . . . , M\n\nCalcule Jm,n = max{Fwn,n + Jm?wn,n+1 : wn = 0, 1, . . . , m}\n\nO algoritmo resolve PM em tempo ?(NM2) e demanda ?(NM) unidades de mem\u00f3ria para ar-\nmazenar a tabela de valores Jm,n. Esta tabela cont\u00e9m as solu\u00e7\u00f5es \u00f3timas para uma fam\u00edlia de proble-\n\nmas, para q\ndis p\ni = 0, ?, 2? . . . , q\n\nmax\ni , onde q\n\ndis p\ni \u00e9 a taxa de inje\u00e7\u00e3o de g\u00e1s dispon\u00edvel. Esta caracter\u00edstica\n\ndo algoritmo possui grande apelo pr\u00e1tico, pois uma situa\u00e7\u00e3o comum em campos de produ\u00e7\u00e3o de\n\npetr\u00f3leo s\u00e3o os casos de falha de um ou mais compressores de g\u00e1s [23], o que faz com que a taxa\n\nde inje\u00e7\u00e3o dispon\u00edvel diminua. Neste caso, uma solu\u00e7\u00e3o quase-\u00f3tima para esta nova situa\u00e7\u00e3o est\u00e1\n\nprontamente dispon\u00edvel. O algoritmo tamb\u00e9m pode armazenar uma tabela auxiliar Im,n para registrar\n\nos valores \u00f3timos de qni , semelhante ao indicador pk(?) do exemplo da Se\u00e7\u00e3o 2.2.1.\n\nPara ilustrar o funcionamento do algoritmo, mostraremos a solu\u00e7\u00e3o de um exemplo num\u00e9rico sim-\n\nples. A Tabela 3.1 mostra os par\u00e2metros utilizados. A inst\u00e2ncia consiste de 6 po\u00e7os e utilizamos o mo-\n\ndelo polinomial q?np(q\nn\ni ) = ?\n\nn\n0 + ?\n\nn\n1q\n\nn\ni + ?\n\nn\n2(q\n\nn\ni )\n\n2 + ?n3(q\nn\ni )\n\n3 para ajustar as W PCs (modelo 1, Ap\u00eandice\n\nA). Utilizamos tamb\u00e9m qmaxi = 40, po = 1, pg = 0, 6, pw = 0, 1 e pi = 0, 05. A Tabela 3.2 cont\u00e9m os\n\nvalores da fun\u00e7\u00e3o objetivo, e a Tabela 3.3 cont\u00e9m os valores \u00f3timos de taxa de inje\u00e7\u00e3o de g\u00e1s. Note\n\nque a solu\u00e7\u00e3o \u00f3tima \u00e9 dada por JM,1.\n\n\n\n3. Solu\u00e7\u00e3o de P( /0) Utilizando Programa\u00e7\u00e3o Din\u00e2mica 31\n\nTabela 3.2: Tabela Jm,n, com destaque para a solu\u00e7\u00e3o \u00f3tima JM,1 = J10,1.\n\nn\nm m? 1 2 3 4 5 6\n0 0 0 0 0 0 0 0\n1 4 144,5716 144,5716 130,3794 121,3910 121,3910 121,3910\n2 8 274,9510 274,9510 251,7704 226,8989 224,8102 159,5714\n3 12 398,3330 396,3421 357,2783 330,3181 262,9907 159,5714\n4 16 519,7241 501,8499 460,6975 368,4985 295,2172 159,5714\n5 20 625,2320 605,2691 509,2381 405,2128 295,2172 159,5714\n6 24 728,6512 664,4729 547,4186 437,4394 295,2172 159,5714\n7 28 787,8549 713,0135 584,1329 437,4394 295,2172 159,5714\n8 32 836,3956 751,1940 616,3594 437,4394 295,2172 159,5714\n9 36 882,0529 787,9083 616,3594 437,4394 295,2172 159,5714\n\n10 40 920,2333 820,1349 616,3594 437,4394 295,2172 159,5714\n\n3.3 Resultados Num\u00e9ricos\n\nDeseja-se agora verificar qu\u00e3o bem PM aproxima P e mostrar que o algoritmo \u00e9 suficientemente\n\nr\u00e1pido para a aplica\u00e7\u00e3o em quest\u00e3o. Foram realizados 60 experimentos, variando o n\u00famero de po\u00e7os\n\n(N = 6, 12, 24 e 48), o n\u00edvel de discretiza\u00e7\u00e3o (M=10, 50, 100, 200, 500), e a taxa de inje\u00e7\u00e3o dispon\u00edvel\n\n(tr\u00eas valores distintos de qmaxi ). Os valores objetivo JM encontrados pelo algoritmo em cada teste\n\nforam comparados a um limite superior U B encontrado atrav\u00e9s de relaxa\u00e7\u00e3o cont\u00ednua e programa\u00e7\u00e3o\n\nc\u00f4ncava 4 (MINOS solver version 5.51 [27]).\n\nA Tabela 3.4 mostra os resultados dos testes de qualidade de aproxima\u00e7\u00e3o, onde a primeira coluna\n\ncont\u00e9m os n\u00edveis de discretiza\u00e7\u00e3o, a segunda coluna representa a porcentagem m\u00e9dia5 do limite supe-\n\nrior U B alcan\u00e7ada pela solu\u00e7\u00e3o JM (JM \u00d7100/U B), e a terceira coluna mostra o tempo de execu\u00e7\u00e3o\n\nm\u00e9dio do algoritmo. Observa-se que a solu\u00e7\u00e3o encontrada se aproxima bastante do limite superior\n\nU B, a n\u00e3o ser quando o n\u00edvel de discretiza\u00e7\u00e3o \u00e9 muito pequeno (M = 10), e que o tempo de exe-\n\ncu\u00e7\u00e3o do algoritmo \u00e9 relativamente baixo, alcan\u00e7ando a marca de 2 minutos para M = 500. Por\u00e9m,\n\nutilizando um n\u00edvel de discretiza\u00e7\u00e3o M = 100, o tempo de execu\u00e7\u00e3o cai para 5 segundos, enquanto a\n\nqualidade da solu\u00e7\u00e3o permanece praticamente a mesma. Em m\u00e9dia, a solu\u00e7\u00e3o levou 29,87s para ser\n\nencontrada, e ficou a 5,94% do limite superior. Se desconsiderarmos o n\u00edvel de discretiza\u00e7\u00e3o mais\n\ngrosseiro (M = 10), o tempo de solu\u00e7\u00e3o m\u00e9dio sobe para 37,32s e a dist\u00e2ncia m\u00e9dia da solu\u00e7\u00e3o para o\n\nlimite superior cai para apenas 0,72%. O algoritmo foi implementado nas linguagens de programa\u00e7\u00e3o\n\n4A fun\u00e7\u00e3o que relaciona o fluxo de sa\u00edda do po\u00e7o e sua taxa de inje\u00e7\u00e3o de g\u00e1s \u00e9 uma fun\u00e7\u00e3o c\u00f4ncava no intervalo [0, un],\nn = 1, . . . , N, garantindo assim a concavidade do problema quando a integralidade das vari\u00e1veis y \u00e9 relaxada. Isto permite\nencontrar a solu\u00e7\u00e3o \u00f3tima global da relaxa\u00e7\u00e3o cont\u00ednua, ou seja, um limite superior.\n\n5M\u00e9dia das solu\u00e7\u00f5es das inst\u00e2ncias de mesmo M e diferentes N e qmaxi .\n\n\n\n3. Solu\u00e7\u00e3o de P( /0) Utilizando Programa\u00e7\u00e3o Din\u00e2mica 32\n\nTabela 3.3: Tabela auxiliar Im,n, com destaque para a aloca\u00e7\u00e3o \u00f3tima de g\u00e1s qi =\n(7, 4251; 7, 6954; 7, 4406; 4, 0000; 4, 0000; 7, 0379).\n\nm? q1i q\n2\ni q\n\n3\ni q\n\n4\ni q\n\n5\ni q\n\n6\ni\n\n0 0,0000 0,0000 0,0000 0,0000 0,0000 0,0000\n4 0,0000 4,0000 4,0000 0,0000 0,0000 4,0000\n8 0,0000 4,0000 4,0000 4,0000 4,0000 7,0379\n\n12 4,0000 4,0000 4,0000 4,0000 4,0000 7,0379\n16 4,0000 4,0000 4,0000 4,0000 7,0173 7,0379\n20 4,0000 4,0000 7,4406 7,2722 7,0173 7,0379\n24 4,0000 7,6954 7,4406 7,2722 7,0173 7,0379\n28 4,0000 7,6954 7,4406 7,2722 7,0173 7,0379\n32 4,0000 7,6954 7,4406 7,2722 7,0173 7,0379\n36 7,4251 7,6954 7,4406 7,2722 7,0173 7,0379\n40 7,4251 7,6954 7,4406 7,2722 7,0173 7,0379\n\nTabela 3.4: Qualidade m\u00e9dia da solu\u00e7\u00e3o e tempo m\u00e9dio de execu\u00e7\u00e3o do algoritmo com rela\u00e7\u00e3o ao\nn\u00edvel de discretiza\u00e7\u00e3o M.\n\nM JM /U B (%) Tempo de execu\u00e7\u00e3o (s)\n10 73,14 0,10\n50 98,80 1,32\n\n100 99,35 4,66\n200 99,47 21,57\n500 99,52 121,72\n\nM\u00e9dia 94,06 29,87\n\nC/C++, em uma esta\u00e7\u00e3o de trabalho equipada com processador Intel Pentium III 800MHz, 196MB\n\nde mem\u00f3ria RAM, e sistema operacional GNU Linux.\n\nPortanto, conclui-se que o algoritmo PD \u00e9 capaz de fornecer solu\u00e7\u00f5es para o problema de alo-\n\nca\u00e7\u00e3o bem pr\u00f3ximas da solu\u00e7\u00e3o \u00f3tima te\u00f3rica, e que o seu tempo de execu\u00e7\u00e3o \u00e9 baixo. Uma carac-\n\nter\u00edstica importante do algoritmo \u00e9 que o seu tempo de execu\u00e7\u00e3o cresce linearmente com o n\u00famero\n\nde po\u00e7os N. Uma poss\u00edvel defici\u00eancia seria o comportamento quadr\u00e1tico em M, que pode ser re-\n\nsolvido distribuindo a execu\u00e7\u00e3o do algoritmo entre v\u00e1rios computadores. A Programa\u00e7\u00e3o Din\u00e2mica\n\n\u00e9 uma t\u00e9cnica naturalmente paraleliz\u00e1vel, sendo que se a execu\u00e7\u00e3o do algoritmo for distribu\u00edda entre\n\nT unidades de processamento, seu tempo de execu\u00e7\u00e3o diminuir\u00e1 T vezes. Mesmo quando n\u00e3o se\n\ndisp\u00f5e de v\u00e1rias unidades de processamento, os experimentos mostraram que M n\u00e3o necessita ser\n\naumentado indefinidamente. Os resultados mostram que existe uma rela\u00e7\u00e3o de compromisso entre a\n\nqualidade da solu\u00e7\u00e3o (que est\u00e1 intimamente relacionada ao n\u00edvel de discretiza\u00e7\u00e3o M) e o tempo de\n\nexecu\u00e7\u00e3o do algoritmo. Para as inst\u00e2ncias consideradas nos experimentos num\u00e9ricos realizados, foi\n\n\n\n3. Solu\u00e7\u00e3o de P( /0) Utilizando Programa\u00e7\u00e3o Din\u00e2mica 33\n\nTabela 3.5: Resultados da aloca\u00e7\u00e3o de g\u00e1s de eleva\u00e7\u00e3o, Economic Slope [18] e PD\n\nqp (B/D) q\nmax\ni (MMSCF/D) Ganho com PD (%)\n\nIndividual Economic Slope 10.004 3,33\nPD 11.081 3,33 +10,77\n\nAverage Economic Slope 10.350 3,58\nPD 11.134 3,58 +7,57\n\nEconomic Slope (g\u00e1s limitado) 9.335 2,50\nPD 10.782 2,50 +15,50\n\nposs\u00edvel encontrar solu\u00e7\u00f5es muito pr\u00f3ximas (menos de 1%) da solu\u00e7\u00e3o \u00f3tima te\u00f3rica com um n\u00edvel\n\nde discretiza\u00e7\u00e3o M=100 em um tempo bastante baixo, considerando os tempos altos (da ordem de\n\nhoras ou dias) normalmente envolvidos no ramo de extra\u00e7\u00e3o de petr\u00f3leo.\n\n3.3.1 Compara\u00e7\u00f5es com Resultados Publicados\n\nO desempenho do algoritmo PD \u00e9 agora comparado a quatro exemplos publicados [18], [6], [40],\n\n[1] e um software comercial [36]. Utilizamos os dados de W PCs fornecidos nestes trabalhos, e\n\naplicamos o algoritmo PD desenvolvido aqui para encontrar a aloca\u00e7\u00e3o \u00f3tima das taxas de inje\u00e7\u00e3o de\n\ng\u00e1s. Nesta se\u00e7\u00e3o, MSCF/D \u00e9 uma abrevia\u00e7\u00e3o para mil p\u00e9s c\u00fabicos padr\u00e3o por dia, e MMSCF/D \u00e9\n\numa abrevia\u00e7\u00e3o para milh\u00f5es de p\u00e9s c\u00fabicos padr\u00e3o por dia, medidas comuns para volume de g\u00e1s\n\ninjetado (as condi\u00e7\u00f5es padr\u00e3o s\u00e3o normalmente 60?F e 14.7 psia), e B/D significa barris por dia.\n\nEm [18], o problema da aloca\u00e7\u00e3o de g\u00e1s de eleva\u00e7\u00e3o foi resolvido utilizando as t\u00e9cnicas de \u201cin-\n\ndividual economic slope\u201d e \u201caverage economic slope\u201d, para situa\u00e7\u00f5es de taxa de inje\u00e7\u00e3o de g\u00e1s\n\ndispon\u00edvel ilimitada e limitada, considerando 6 po\u00e7os. A Tabela 3.5 mostra a compara\u00e7\u00e3o das solu\u00e7\u00f5es\n\nobtidas atrav\u00e9s de PD com as solu\u00e7\u00f5es de [18]. Os resultados mostram que o algoritmo PD possui\n\nmelhor desempenho em todos os tr\u00eas cen\u00e1rios.\n\nEm [6], o problema de aloca\u00e7\u00e3o foi resolvido utilizando os m\u00e9todos \u201cequal-slope\u201d e \u201cEx-In\u201d,\n\npara conjuntos de 5, 6 e 56 po\u00e7os. A Tabela 3.6 mostra os resultados obtidos em [6] e utilizando PD.\n\nAnalisando estes resultados, observa-se que o algoritmo PD possui um melhor desempenho em todos\n\nos testes.\n\nEm [40] foram utilizados os dados fornecidos em [6], e um algoritmo de Programa\u00e7\u00e3o Separ\u00e1vel\n\n(Separable Programming, ou SP) foi aplicado para otimizar a produ\u00e7\u00e3o de \u00f3leo de um conjunto de 56\n\npo\u00e7os, com 22.500 MMSCF/D de taxa de inje\u00e7\u00e3o de g\u00e1s dispon\u00edvel. Os resultados obtidos em [40]\n\ns\u00e3o comparados aos obtidos atrav\u00e9s de PD (Tabela 3.7), e novamente o algoritmo desenvolvido no\n\npresente trabalho mostra um melhor desempenho.\n\n\n\n3. Solu\u00e7\u00e3o de P( /0) Utilizando Programa\u00e7\u00e3o Din\u00e2mica 34\n\nTabela 3.6: Resultados da aloca\u00e7\u00e3o de g\u00e1s de eleva\u00e7\u00e3o, Equal Slope, Ex-In [6] e PD\n\nPo\u00e7os qp (B/D) q\nmax\ni (MSCF/D) Ganho com PD (%)\n\nEx-In 5 3.369,5 2.995,3\nPD 5 3.396,0 2.995,3 +0,79\n\nEqual Slope 5 3.400,3 3.000,0\nPD 5 3.405,0 3.000,0 +0,16\n\nEx-In 6 3.629,0 4.427,7\nPD 6 3.634,6 4.427,7 +0,15\n\nEqual Slope 6 3.510,2 4.373,7\nPD 6 3.628,3 4.373,7 +3,36\n\nEx-In 56 21.789,9 20.453,9\nPD 56 23.325,7 20.453,9 +7,05\n\nEqual Slope 56 21.265,0 22.508,0\nPD 56 23.600,7 22.508,0 +10,99\n\nTabela 3.7: Resultados da aloca\u00e7\u00e3o de g\u00e1s de eleva\u00e7\u00e3o, Separable Programming [40] e PD\n\nqp (B/D) q\nmax\ni (MSCF/D) Ganho com PD (%)\n\nSP 22.632 22.500\nPD 23.378 22.500 +3,30\n\nPara comparar os algoritmo PD e o m\u00e9todo de SQP proposto em [1], o ajuste das curvas W PCs\n\nforam realizados com fun\u00e7\u00f5es da forma qnp(q\nn\ni ) = c\n\nn\n1yn + c\n\nn\n2q\n\nn\ni + c\n\nn\n3(q\n\nn\ni )\n\n2 + cn4 ln(q\nn\ni + 1). Adaptar o\n\nalgoritmo PD para trabalhar com estas fun\u00e7\u00f5es \u00e9 relativamente f\u00e1cil, o que mostra que o algoritmo\n\npode ser modificado para tratar diferentes m\u00e9todos de ajuste de curvas. Utilizando o m\u00e9todo de\n\nm\u00ednimos quadrados, as curvas logar\u00edtmicas foram ajustadas aos dados de desempenho contidos em [6]\n\ne [18], obtendo assim as inst\u00e2ncias do problema utilizadas nesta compara\u00e7\u00e3o. Os resultados obtidos\n\ncom SQP e PD para os cen\u00e1rios onde n\u00e3o h\u00e1 po\u00e7os com taxa de partida s\u00e3o mostrados na Tabela 3.8,\n\ne a Tabela 3.9 cont\u00e9m os resultados para os cen\u00e1rios com po\u00e7os que possuem taxa de partida. Estes\n\nresultados mostram a for\u00e7a do algoritmo PD ao lidar com cen\u00e1rios onde decis\u00f5es sobre ativa\u00e7\u00e3o e\n\ndesativa\u00e7\u00e3o de po\u00e7os devem ser tomadas. As regras ad hoc propostas em [1] requerem interven\u00e7\u00e3o\n\nhumana para decidir quais po\u00e7os n\u00e3o surgentes ser\u00e3o ativados, e sendo assim podem resultar em\n\naloca\u00e7\u00f5es sub-\u00f3timas. Estas regras ad hoc consistem em retirar do problema de otimiza\u00e7\u00e3o (desativar)\n\npo\u00e7os para os quais foram alocados a m\u00ednima taxa de inje\u00e7\u00e3o poss\u00edvel, e ent\u00e3o resolver o problema\n\nnovamente para os po\u00e7os restantes. Por\u00e9m, se existem m po\u00e7os para os quais foram alocados a taxa\n\nm\u00ednima, existem 2m possibilidades de ativa\u00e7\u00e3o/desativa\u00e7\u00e3o, tornando esta decis\u00e3o bastante dif\u00edcil. Em\n\nnossa abordagem estas decis\u00f5es s\u00e3o tomadas pelo pr\u00f3prio algoritmo, produzindo a solu\u00e7\u00e3o \u00f3tima.\n\nO desempenho do algoritmo PD foi tamb\u00e9m comparado ao do software GOAL, em um cen\u00e1rio\n\n\n\n3. Solu\u00e7\u00e3o de P( /0) Utilizando Programa\u00e7\u00e3o Din\u00e2mica 35\n\nTabela 3.8: Aloca\u00e7\u00e3o de g\u00e1s de eleva\u00e7\u00e3o, cen\u00e1rio sem taxas de partida: compara\u00e7\u00e3o entre SQP [1] e\nPD\n\nPo\u00e7os qp (B/D) q\nmax\ni (MSCF/D) Ganho com PD (%)\n\nSQP 5 537,21 84.950 -0,000\nPD 537,21 84.950\n\nSQP 13 7.708,03 22.484 -0,0008\nPD 7.707,97 22.484\n\nSQP 25 16.872,89 54.425 -0,009\nPD 16.871,39 54.425\n\nSQP 37 21.212,79 72.497 -0,005\nPD 21.211,67 72.497\n\nTabela 3.9: Aloca\u00e7\u00e3o de g\u00e1s de eleva\u00e7\u00e3o, cen\u00e1rio com taxas de partida: compara\u00e7\u00e3o entre SQP [1] e\nPD\n\nPo\u00e7os qp (B/D) q\nmax\ni (MSCF/D) Ganho com PD (%)\n\nSQP 12 4.559,44 36.325 +68,36\nPD 7.676,35 36.325\n\nSQP 24 7.877,72 57.138 +39,74\nPD 11.008,63 57.138\n\nSQP 36 15.395,04 75.199 +20,24\nPD 18.510,45 75.199\n\nSQP 48 23.944,50 110.085 +12,66\nPD 26.975,18 110.085\n\nSQP 56 27.929,89 120.087 +10,54\nPD 30.874,25 120.087\n\nde 16 po\u00e7os contido em [36]. Foram realizados quatro experimentos, os dois primeiros sob condi\u00e7\u00f5es\n\nde suprimento alto de g\u00e1s de eleva\u00e7\u00e3o, e os dois \u00faltimos sob condi\u00e7\u00f5es de baixo suprimento. O\n\nobjetivo \u00e9 a maximiza\u00e7\u00e3o do lucro obtido com a venda dos hidrocarbonetos extra\u00eddos. A Tabela 3.10\n\ncont\u00e9m os resultados destes experimentos. O desempenho do algoritmo PD \u00e9 levemente inferior ao\n\ndo GOAL para os cen\u00e1rios com grande disponibilidade de g\u00e1s de eleva\u00e7\u00e3o, enquanto sob condi\u00e7\u00f5es\n\nde baixa disponibilidade o algoritmo PD supera o desempenho do GOAL. O ganho com PD foi muito\n\nmenos pronunciado que o ganho mostrado na Tabela 3.9 pois naqueles cen\u00e1rios haviam po\u00e7os com\n\ntaxa de partida, o que aumenta a natureza combinat\u00f3ria do problema e faz com que o algoritmo PD\n\nproporcione melhores resultados. Em outras palavras, quanto maior o n\u00famero de possibilidades de\n\nativa\u00e7\u00e3o/desativa\u00e7\u00e3o de po\u00e7os, maior a necessidade de tratar o problema de maneira formal.\n\n\n\n3. Solu\u00e7\u00e3o de P( /0) Utilizando Programa\u00e7\u00e3o Din\u00e2mica 36\n\nTabela 3.10: Resultados de aloca\u00e7\u00e3o de g\u00e1s de eleva\u00e7\u00e3o: compara\u00e7\u00e3o entre GOAL [36] e PD\n\nG\u00e1s de eleva\u00e7\u00e3o Lucro ($/D) qmaxi (MSCF/D) Ganho com PD (%)\nGOAL Suprimento 87.135,34 7,5 -0,003\n\nPD alto 87.133,06 7,5\nGOAL Suprimento 80.842,29 5,0 -0,001\n\nPD alto 80.841,42 5,0\nGOAL Suprimento 70.563,58 1,6 +1,257\n\nPD baixo 71.443,46 1,6\nGOAL Suprimento 62.278,88 1,0 +0,998\n\nPD baixo 62.900,72 1,0\n\n3.4 Generaliza\u00e7\u00f5es do Problema\n\nNesta se\u00e7\u00e3o, acrescentamos algumas caracter\u00edsticas ao problema inicial P( /0) de modo a torn\u00e1-lo\nmais geral e representativo.\n\nQuando o n\u00edvel de confian\u00e7a das medi\u00e7\u00f5es obtidas nos testes de produ\u00e7\u00e3o \u00e9 conhecido, podemos\n\nassociar probabilidades aos coeficientes da fun\u00e7\u00e3o de aproxima\u00e7\u00e3o, e a otimiza\u00e7\u00e3o de P( /0) seria\nrealizada sobre os valores esperados destes coeficientes. Este problema pode ser formulado como:\n\nPE ( /0) : JE = Maximizar\nN\n?\n\nn=1\n(po?no + pg?\n\nn\ng ? pw?\n\nn\nw)q?\n\nn\np ?\n\nN\n?\n\nn=1\npiq\n\nn\ni\n\nSujeito a :\n\nq?np = f (q\nn\ni ) n = 1, . . . , N\n\nN\n?\n\nn=1\nqni ? q\n\nmax\ni\n\nlnyn ? q\nn\ni ? unyn n = 1, . . . , N\n\nyn ?{0, 1} n = 1, . . . , N\n\n(3.5)\n\nonde os coeficientes da fun\u00e7\u00e3o q?np que representa o comportamento do po\u00e7o n s\u00e3o valores esperados\n\ndos coeficientes das curvas definidos no Ap\u00eandice A.\n\nNa aus\u00eancia de dados sobre a confiabilidade dos testes, a otimiza\u00e7\u00e3o pode ser realizada levando\n\nem conta todas as ?(n) curvas obtidas com os testes de produ\u00e7\u00e3o dispon\u00edveis para o po\u00e7o n, e fornecer\nas taxas de inje\u00e7\u00e3o de g\u00e1s que maximizam o lucro no pior caso (baseado nas curvas de menor produ-\n\n\n\n3. Solu\u00e7\u00e3o de P( /0) Utilizando Programa\u00e7\u00e3o Din\u00e2mica 37\n\ntividade), resultando no seguinte problema:\n\nPW ( /0) : JW = Maximizar\nN\n?\n\nn=1\nmin{(po?no + pg?\n\nn\ng ? pw?\n\nn\nw)q\n\nn,k\np ? piq\n\nn\ni : k = 1, . . . , ?(n)}\n\nSujeito a :\n\nqn,kp ? Qn n = 1, . . . , N , k = 1, . . . , ?(n)\nN\n?\n\nn=1\nqni ? q\n\nmax\ni\n\nlnyn ? q\nn\ni ? unyn n = 1, . . . , N\n\nyn ?{0, 1} n = 1, . . . , N\n\n(3.6)\n\nonde Qn = {q\nn,k\np (qni ) : k = 1, . . . , ?(n)} \u00e9 um conjunto de fun\u00e7\u00f5es q\n\nn\np obtidas em ?(n) testes para o\n\npo\u00e7o n.\n\nCorol\u00e1rio 3.2 PW ( /0) \u00e9 NP-dif\u00edcil.\n\n\u00c9 f\u00e1cil ver que um algoritmo que resolve PW ( /0) resolve tamb\u00e9m PE ( /0). Fornecendo ?(n) = 1\ncurvas de desempenho para todos os n po\u00e7os (ou seja, uma W PC por po\u00e7o) ao algoritmo que resolve\n\nPW (G), onde cada W PC representa o comportamento esperado do po\u00e7o correspondente, o algoritmo\n\nproduzir\u00e1 uma solu\u00e7\u00e3o para PE (G).\n\n3.4.1 Solu\u00e7\u00e3o de PW ( /0)\n\nA formula\u00e7\u00e3o de PW ( /0) \u00e9 bastante similar \u00e0 de P( /0), bastando considerar as curvas de menor\nprodutividade no c\u00e1lculo da fun\u00e7\u00e3o objetivo. Da mesma forma que em P( /0), \u00e9 necess\u00e1rio discretizar\na vari\u00e1vel qni para que o problema possa ser resolvido atrav\u00e9s de Programa\u00e7\u00e3o Din\u00e2mica. Sendo\n\nassim, o problema resultante PW M \u00e9 formulado da seguinte maneira:\n\nPW M : JW M = Maximizar\nN\n?\n\nn=1\nmin{(po?no + pg?\n\nn\ng ? pw?\n\nn\nw)q?\n\nn,k\np ? piq\n\nn\ni : k = 1, . . . , ?(n)}\n\nSujeito a :\n\nq?n,kp = f (qni ) n = 1, . . . , N\n\nk = 1, . . . , ?(n)\nlnyn ? q\n\nn\ni ? min{un, wn?}yn n = 1, . . . , N\n\nN\n?\n\nn=1\nwn ? M\n\nyn ?{0, 1} n = 1, . . . , N\n\nwn ?{0, . . . , M} n = 1, . . . , N\n\n(3.7)\n\nonde as curvas q?n,kp s\u00e3o aproximadas seguindo um dos tr\u00eas modelos apresentados no Ap\u00eandice A.\n\n\n\n3. Solu\u00e7\u00e3o de P( /0) Utilizando Programa\u00e7\u00e3o Din\u00e2mica 38\n\nLimitando a taxa de inje\u00e7\u00e3o de g\u00e1s dispon\u00edvel em m?{0, . . . , M} unidades padr\u00e3o, as recorr\u00eancias\n\npara a solu\u00e7\u00e3o de PW M via PD s\u00e3o dadas por:\n\nP?m,nW : F\nm,n\n\nW = Maximizar min {(po?\nn\no + pg?\n\nn\ng ? pw?\n\nn\nw)q?\n\nk,n\np ? piq\n\nn\ni : k = 1, . . . , ?(n)}\n\nSujeito a :\n\nq?\nn,k\np = f (qni ) k = 1, . . . , ?(n)\n\nlnyn ? q\nn\ni ? min{un, m?}yn\n\nyn ?{0, 1}\n\n(3.8)\n\nPm,NW : J\nm,N\nW = F\n\nm,N\nW\n\nPm,nW : J\nm,n\nW = Maximizar min{(po?\n\nn\no + pg?\n\nn\ng ? pw?\n\nn\nw)q?\n\nn,k\np ? piq\n\nn\ni : k = 1, . . . , ?(n)}+ J\n\nm?wn,n+1\nW\n\nSujeito a :\n\nq?n,kp = f (qni ) k = 1, . . . , ?(n)\nlnyn ? q\n\nn\ni ? min{un, wn?}yn\n\nyn ?{0, 1}\n\nwn ?{0, ..., m}\n(3.9)\n\nDefinidas estas recorr\u00eancias, o algoritmo PD que resolve P( /0) apresentado na Se\u00e7\u00e3o 3.2.2 pode ser\nutilizado para resolver PW ( /0). A solu\u00e7\u00e3o de PW M \u00e9 obtida em tempo ?(KNM2), onde K = max{?(n) :\nn = 1, . . . , N} e demanda ?(MN) unidades de mem\u00f3ria para armazenar a tabela de valores Jm,nW . Para\nverificar o desempenho do algoritmo quando o n\u00famero de W PCs \u00e9 maior que 1, foram realizados\n\n36 experimentos, variando o n\u00famero de po\u00e7os (N = 6, 12, 24 e 48), taxa de inje\u00e7\u00e3o dispon\u00edvel (tr\u00eas\n\nvalores de qmaxi ), e a vari\u00e2ncia das W PCs em torno de uma W PC m\u00e9dia (10%, 50% e 100%). O n\u00edvel\n\nde discretiza\u00e7\u00e3o utilizado foi M = 100 e o n\u00famero de curvas para todos os po\u00e7os foi ?(n) = 10. Em\nm\u00e9dia o algoritmo levou 47,42s para encontrar a solu\u00e7\u00e3o, e ficou a 0,49% do limite superior calculado\n\nutilizando relaxa\u00e7\u00e3o cont\u00ednua e programa\u00e7\u00e3o c\u00f4ncava [27].\n\n3.4.2 Incertezas nas W PCs\n\nQuando o n\u00edvel de incerteza sobre as W PCs \u00e9 muito alto, ou seja, quando o hist\u00f3rico de testes de\n\num po\u00e7o mostra W PCs muito diferentes, o engenheiro de produ\u00e7\u00e3o de petr\u00f3leo pode desejar assumir\n\numa posi\u00e7\u00e3o mais conservadora e basear a decis\u00e3o sobre a quantidade de g\u00e1s injetada em cada po\u00e7o\n\nnas curvas que representam o pior caso (menor produtividade).\n\nApesar de esta abordagem ser intuitivamente menos lucrativa, existem casos onde o algoritmo de\n\npior caso fornece melhores solu\u00e7\u00f5es do que as obtidas utilizando a m\u00e9dia das curvas. Isto acontece\n\n\n\n3. Solu\u00e7\u00e3o de P( /0) Utilizando Programa\u00e7\u00e3o Din\u00e2mica 39\n\nTabela 3.11: Compara\u00e7\u00e3o entre desempenho do pior caso e caso m\u00e9dio\nTeste 1 Teste 2\n\nqmaxi Jw/Jr Jm/Jr Jw/Jr Jm/Jr\n0,1 1,00 0,68 0,45 1,00\n0,6 1,00 0,67 0,45 1,00\n1,1 1,00 0,67 0,45 1,00\n1,6 1,00 0,67 0,45 1,00\n2,1 0,99 0,85 0,70 0,93\n2,6 0,99 0,75 0,57 0,99\n3,1 1,00 0,84 0,71 1,00\n3,6 1,00 0,84 0,71 1,00\n4,1 1,00 1,00 1,00 1,00\n\nM\u00e9dia 1,00 0,77 0,61 0,99\n\nquando \u00e9 maior a probabilidade do comportamento real do po\u00e7o ser representado pelas curvas de\n\nmenor produtividade.\n\nForam realizados alguns testes num\u00e9ricos para ilustrar situa\u00e7\u00f5es onde cada caso possui melhor\n\ndesempenho, de acordo com os seguintes passos: 1) 10 W PCs foram fornecidas para cada po\u00e7o; 2) o\n\nalgoritmo foi executado para ?(n) = 10, encontrando as taxas de inje\u00e7\u00e3o \u00f3timas qiw para o pior caso;\n3) o algoritmo foi executado para as W PCs m\u00e9dias de cada po\u00e7o, ou seja, ?(n) = 1, encontrando\nas taxas de inje\u00e7\u00e3o \u00f3timas qim; 4) uma das 10 W PCs \u00e9 tomada aleatoriamente para representar o\n\ncomportamento real de cada po\u00e7o, e o algoritmo \u00e9 executado novamente para ?(n) = 1, obtendo a\nsolu\u00e7\u00e3o \u00f3tima \u201creal\u201d Jr ; 5) utilizando qiw, qim, e as curvas que representam o comportamento real,\n\nencontramos os valores objetivo \u201creais\u201d que seriam obtidos com as taxas de inje\u00e7\u00e3o obtidas para o\n\npior caso (Jw) e para o caso m\u00e9dio (Jm); 6) as rela\u00e7\u00f5es Jw/Jr e Jm/Jr s\u00e3o comparadas; 7) a taxa de\n\ninje\u00e7\u00e3o dispon\u00edvel qmaxi \u00e9 variada, e os passos 2 a 6 s\u00e3o repetidos.\n\nOs testes foram realizados para valores de qmaxi variando de 0,1 a 4,1, e o sorteio das curvas do\n\npasso 4 seguiram uma tend\u00eancia para as curvas de pior desempenho no Teste 1, e uma tend\u00eancia para\n\no caso m\u00e9dio no Teste 2. Os resultados obtidos s\u00e3o mostrados na Tabela 3.11. Como esperado, o\n\ndesempenho do pior caso \u00e9 melhor no Teste 1, pois a probabilidade do comportamento real do po\u00e7o\n\nser representado pelas piores curvas \u00e9 maior, e o desempenho do caso m\u00e9dio \u00e9 melhor no Teste 2,\n\npois a probabilidade do po\u00e7o se comportar de acordo com as m\u00e9dias hist\u00f3ricas das W PCs \u00e9 maior.\n\nEsta probabilidade pode ser inferida pelo engenheiro de produ\u00e7\u00e3o, baseada nos hist\u00f3ricos de testes,\n\ncabendo a ele a decis\u00e3o de quando fornecer uma ou m\u00faltiplas W PCs ao algoritmo. Nos experimentos\n\naqui realizados, observou-se que quanto maior a taxa de g\u00e1s dispon\u00edvel, mais os desempenhos se\n\naproximam, pois o aspecto combinat\u00f3rio do problema torna-se menos relevante. No caso extremo,\n\nonde existe g\u00e1s dispon\u00edvel para operar todos os po\u00e7os (qmaxi = 4, 1), os desempenhos se igualam.\n\n\n\n3. Solu\u00e7\u00e3o de P( /0) Utilizando Programa\u00e7\u00e3o Din\u00e2mica 40\n\n3.5 Desigualdades v\u00e1lidas para P( /0)\n\nAs similaridades entre P( /0) e o problema da mochila permite que as propriedades combinat\u00f3rias\ndeste \u00faltimo (em particular, fam\u00edlias de desigualdades v\u00e1lidas que induzem facetas) sejam estendidas\n\nao dom\u00ednio de P( /0). A seguir, estendemos as desigualdades de cobertura para o problema da mochila\ne seu processo de lifting para P( /0) [31], [42].\n\nSeja X = {(qi, y) ? R\nN \u00d7BN : (qi, y) satisfaz as restri\u00e7\u00f5es de (3.1)} o conjunto de solu\u00e7\u00f5es fac-\n\nt\u00edveis para P( /0) e seja P = conv(X ) o poliedro correspondente ao fecho convexo de X . Seja ainda\nN = {1, . . . , N} o conjunto de \u00edndices dos po\u00e7os.\n\nProposi\u00e7\u00e3o 3.2 Se ln &lt;un ? qmaxi para cada n, ent\u00e3o dim(P ) = 2N.\n\nProva:. Seja sn(q?ni , y?n) o elemento de P obtido quando yn = y?n, yk = 0 para todo k 6= n, q\nn\ni = q?\n\nn\ni , e\n\nqki = 0 para todo k 6= n. Seja S = {sn(ln, 1), sn(un, 1) : n = 1, . . . , N}. Claramente, S \u00e9 um conjunto\n\nde 2N elementos linearmente independentes de P . Como 0 ? P , P possui 2N + 1 solu\u00e7\u00f5es afim\n\nindependentes e, portanto, dim(P ) = 2N. ?\n\nNo restante da se\u00e7\u00e3o, assumimos que as condi\u00e7\u00f5es da Proposi\u00e7\u00e3o 3.2 s\u00e3o satisfeitas.\n\nDefini\u00e7\u00e3o 3.1 Um conjunto C ? {1, . . . , N} \u00e9 uma cobertura se ?\nn?C\n\nln > q\nmax\ni e para cada n ? C,\n\n?\nk?C?{n}\n\nlk &lt;q\nmax\ni .\n\nCorol\u00e1rio 3.3 O poliedro PC = {(qi, y) ? P : yn = 0,?n ? N ?C} induzido por uma cobertura C\n\ntem dimens\u00e3o dim(PC) = 2|C|.\n\nProposi\u00e7\u00e3o 3.3 Se C \u00e9 uma cobertura, ent\u00e3o\n\n?\nn?C\n\nyn ?|C|?1 (3.10)\n\n\u00e9 uma desigualdade v\u00e1lida para PC. Al\u00e9m disso, a face FC ={(qi, y) ? PC : ?\nn?C\n\nyn = |C|?1} induzida\n\npela desigualdade de cobertura possui dimens\u00e3o dim(FC) = 2|C|?1.\n\nProva: (Validade) Se ?\nn?C\n\nyn = |C| para alguma solu\u00e7\u00e3o (qi, y) ? PC, ent\u00e3o ?\nn?C\n\nqni ? ?\nn?C\n\nln > q\nmax\ni , o\n\nque significa que a solu\u00e7\u00e3o \u00e9 infact\u00edvel, contradizendo a hip\u00f3tese.\n\n(Dimensionalidade) Seja ?\nn?C\n\n(?nyn + \u00b5nqni ) ? ?o uma desigualdade v\u00e1lida para P induzindo uma\n\nface m\u00e1xima F? ={(q\nn\ni , yn)?PC : ?\n\nn?C\n(?nyn + \u00b5nqni ) = ?o} de PC tal que FC ?F?. O desenvolvimento a\n\nseguir mostra que a desigualdade que induz FC difere da desigualdade que induz F? por uma constante\n\nmultiplicativa positiva.\n\n\n\n3. Solu\u00e7\u00e3o de P( /0) Utilizando Programa\u00e7\u00e3o Din\u00e2mica 41\n\nPrimeiro, mostramos que \u00b5n = 0 para todo n ?C. Para cada n ?C execute as seguintes opera\u00e7\u00f5es:\n\nseja (q?i, y?) = (0, 0) um elemento de PC; defina Cn = C?{ j} para algum j ? C, j 6= n; e fa\u00e7a y?k = 1\n\ne q?ki = lk para todo k ? Cn. Claramente a solu\u00e7\u00e3o resultante (q?i, y?) ? FC. Seja (q?i, y?) = (q?i, y?) por\u00e9m\n\ncom q?ni = min{un, q\nmax\ni ? ?\n\nk?Cn?{n}\nlk}. Como (q?i, y?), (q?i, y?) ? FC, as seguintes equa\u00e7\u00f5es devem ser\n\nsatisfeitas para que (q?i, y?) e (q?i, y?) perten\u00e7am a F?:\n\n?\nk?Cn\n\n?ky?k + ?\nk?Cn\n\n\u00b5k q?\nk\ni = ?o\n\n?\nk?Cn\n\n?ky?k + ?\nk?Cn\n\n\u00b5k q?\nk\ni = ?o\n\nSubtraindo a primeira equa\u00e7\u00e3o da segunda, obtemos \u00b5n(q?\nn\ni ? q?\n\nn\ni ) = 0. Como ?\n\nk?Cn\nlk &lt;q\n\nmax\ni e ln &lt;un,\n\n(q?ni ? q?\nn\ni ) > 0 e portanto \u00b5n = 0. Aplicando este racioc\u00ednio para cada elemento de C, conclui-se que\n\n\u00b5n = 0 para cada n ?C.\n\nAgora, mostramos que ?n = ?k para cada par n, k ? C. Seja Cn = C?{k} e defina (q?i, y?) como:\nq?\n\nj\ni = l j e y? j = 1 para cada j ? Cn. Seja Ck = C ?{n} e (q?i, y?) definido como: q?\n\nj\ni = l j e y? j = 1 para\n\ncada j ?Ck. Claramente, (q?i, y?), (q?i, y?) ? FC e portanto as equa\u00e7\u00f5es a seguir devem ser satisfeitas se\n\n(q?i, y?), (q?i, y?) ? F?:\n\n?\nj?Cn\n\n? j y? j = ?o\n\n?\nj?Ck\n\n? j y? j = ?o\n\nSubtraindo a segunda igualdade da primeira, obtemos ?ny?n ??ky?k = 0 ? ?n = ?k. Segue da solu\u00e7\u00e3o\n(q?i, y?) que ?\n\nj?Cn\n? jy? j = ?o ? ?\n\nj?Cn\n? j = ?o ?(|C|?1)?n = ?o. Fazendo ?o = |C|?1, deduz-se que ? j =\n\n1 para todo j ? C. Portanto, ?\nn?C\n\nyn ?|C|?1 induz uma face m\u00e1xima FC de PC, ou seja, dim(FC) =\n\n2|C|?1. ?\n\nDe acordo com a Proposi\u00e7\u00e3o 3.3, a desigualdade v\u00e1lida induzida por uma cobertura C definiria\n\numa faceta se a cobertura englobasse todos os po\u00e7os, i.e., C = N . Uma maneira de fortalecer a\n\ndesigualdade de cobertura \u00e9 aument\u00e1-la com os po\u00e7os cujos limites inferiores de inje\u00e7\u00e3o de g\u00e1s s\u00e3o\n\nmaiores ou iguais ao limite inferior de cada po\u00e7o em C. Mais precisamente, a cobertura estendida\n\nE(C) = C?{n ? N ?C : ln ? lk para todo k ?C} induz a desigualdade de cobertura estendida:\n\n?\nn?E(C)\n\nyn ?|C|?1 (3.11)\n\nque \u00e9 v\u00e1lida para P . A desigualdade de cobertura estendida (3.11) \u00e9 v\u00e1lida pois qualquer elemento\n\ni de E(C)?C pode substituir qualquer elemento j de C, ou seja, ?n?(C?{ j})?{i} ln ? ?n?C ln > qmaxi .\nA desigualdade de cobertura estendida domina a desigualdade de cobertura pois qualquer ponto que\n\nviola (3.10) tamb\u00e9m viola (3.11), mas um ponto que viola (3.11) pode n\u00e3o violar (3.10).\n\n\n\n3. Solu\u00e7\u00e3o de P( /0) Utilizando Programa\u00e7\u00e3o Din\u00e2mica 42\n\nOutra maneira de fortalecer desigualdades v\u00e1lidas \u00e9 o princ\u00edpio chamado de lifting [31], [42],\n\nonde uma desigualdade v\u00e1lida de PC = P ?{(qi, y) ? R\nN \u00d7BN : yn = 0, n ? N ?C} pode ser es-\n\ntendida para se tornar v\u00e1lida para P . Iniciando com uma sequ\u00eancia ordenada s = ? j1, . . . , jL? dos\n\nitens de N ?C, o procedimento de lifting adiciona \u00e0 desigualdade, uma a uma, as vari\u00e1veis cor-\n\nrespondentes aos elementos de s. Para adicionar a vari\u00e1vel do primeiro po\u00e7o, por exemplo, o pro-\n\ncedimento produz a desigualdade ?\nn?C\n\nyn + ? j1 y j1 ? |C|? 1 que \u00e9 v\u00e1lida para PC?{ j1}, onde ? j1 =\n\n|C|?1?max{ ?\nn?C\n\nyn : (qi, y) ? PC?{ j1}, y j1 = 1}. A desigualdade resultante induz uma face FC?{ j1}\n\nde PC?{ j1} tal que dim(FC?{ j1}) ? dim(FC) + 1. Se a solu\u00e7\u00e3o do problema que calcula ? j1 atinge seu\nm\u00e1ximo em q\n\nj1\ni > l j1 , ent\u00e3o pode-se mostrar que dim(FC?{ j1}) = dim(FC) + 2. Os passos descritos\n\nacima podem ser aplicados sistematicamente aos elementos restantes de s at\u00e9 que a desigualdade\n\nv\u00e1lida de lifting:\n\n?\nn?C\n\nyn +\nL\n\n?\nk=1\n\n? jk y jk ?|C|?1 (3.12)\n\nseja obtida. A desigualdade resultante \u00e9 v\u00e1lida para P e pode induzir uma de suas facetas sob as\n\ncondi\u00e7\u00f5es expostas acima.\n\nH\u00e1 uma maneira simples para calcular limites inferiores ?n para os fatores de lifting ?n dos\nelementos n ? N ?C. Para k ?{0, . . . ,|C|}, seja C(k) ? C um subconjunto tal que |C(k)| = k e\n\nmin{ln : n ? C(k)}? max{ln : n ?C?C(k)} se k > 0, em outras palavras, C(k) \u00e9 o subconjunto de\n\nC com os k elementos que requerem as taxas de inje\u00e7\u00e3o mais altas para sua opera\u00e7\u00e3o. Seja tamb\u00e9m\n\nq(C?) = ?n?C? ln para qualquer C? ?C. Para n ? N ?C, podemos definir o limite inferior ?n como:\n\n?n = Maximizar k ?{0, . . . ,|C|}\nSujeito a : ln ? q(C(k))\n\nAssim, substituindo os fatores de lifting ?n em (3.12) por seus limites inferiores ?n, obtemos a de-\nsigualdade de cobertura fortalecida estendida:\n\n?\nn?C\n\nyn + ?\nn?E(C)?C\n\n?nyn ?|C|?1 (3.13)\n\nque tamb\u00e9m \u00e9 v\u00e1lida para P . Note que (3.13) pode ser mais forte que (3.11) por\u00e9m mais fraca que\n\n(3.12).\n\n3.6 Sum\u00e1rio\n\nNeste cap\u00edtulo, foram desenvolvidos algoritmos de Programa\u00e7\u00e3o Din\u00e2mica para a solu\u00e7\u00e3o do pro-\n\nblema de aloca\u00e7\u00e3o \u00f3tima de g\u00e1s de eleva\u00e7\u00e3o para uma determinada taxa dispon\u00edvel de inje\u00e7\u00e3o de g\u00e1s,\n\nconsiderando po\u00e7os com taxa de partida e m\u00faltiplas curvas de desempenho de gas-lift (W PCs). O\n\n\n\n3. Solu\u00e7\u00e3o de P( /0) Utilizando Programa\u00e7\u00e3o Din\u00e2mica 43\n\ndesempenho destes algoritmos mostrou-se bastante satisfat\u00f3rio quando avaliado atrav\u00e9s de experi-\n\nmentos num\u00e9ricos e compara\u00e7\u00f5es com exemplos da literatura, onde foi constatado que s\u00e3o capazes\n\nde fornecer solu\u00e7\u00f5es quase-\u00f3timas em tempo relativamente baixo. Os resultados desta se\u00e7\u00e3o foram\n\npublicados em [11], [28], [9], [29].\n\n\n\nCap\u00edtulo 4\n\nSolu\u00e7\u00e3o Recursiva de P(G)\n\nNeste cap\u00edtulo acrescentamos uma restri\u00e7\u00e3o ao problema estudado no cap\u00edtulo anterior, e de-\n\nnominamos P(G) o problema resultante. Suponhamos que por algum motivo t\u00e9cnico ou estrat\u00e9gico\n\nexistam restri\u00e7\u00f5es de preced\u00eancia de ativa\u00e7\u00e3o/desativa\u00e7\u00e3o entre os po\u00e7os, e.g., se o po\u00e7o i estiver ativo\n\nent\u00e3o um certo po\u00e7o j tamb\u00e9m deve estar ativo. Estas restri\u00e7\u00f5es de preced\u00eancia podem ser represen-\n\ntadas por um grafo ac\u00edclico G, onde o conjunto dos v\u00e9rtices V (G) representa os po\u00e7os e o conjunto\n\ndas arestas E(G) representa as restri\u00e7\u00f5es de preced\u00eancia. Quando este grafo forma uma floresta,\n\nchamamos o problema de otimiza\u00e7\u00e3o resultante de P(F) (Se\u00e7\u00e3o 4.2), e quando G \u00e9 um grafo ac\u00edclico\n\ngeral, denotamos o problema por P(G) (Se\u00e7\u00e3o 4.3).\n\n4.1 Formula\u00e7\u00e3o do Problema\n\nO problema PW (G) de aloca\u00e7\u00e3o de uma taxa de inje\u00e7\u00e3o de g\u00e1s de eleva\u00e7\u00e3o dispon\u00edvel q\nmax\ni com\n\nrestri\u00e7\u00f5es de preced\u00eancia de ativa\u00e7\u00e3o e considerando a curva de menor produtividade no caso de\n\nm\u00faltiplas W PCs, pode ser escrito da seguinte maneira:\n\nPW (G) : JW = Maximizar\nN\n?\n\nn=1\nmin{(po?no + pg?\n\nn\ng ? pw?\n\nn\nw)q\n\nn,k\np ? piq\n\nn\ni : k = 1, . . . , ?(n)}\n\nSujeito a :\n\nqn,kp ? Qp n = 1, . . . , N , k = 1, . . . , ?(n)\nlnyn ? q\n\nn\ni ? unyn n = 1, . . . , N\n\nN\n?\n\nn=1\nqni ? q\n\nmax\ni\n\nyi ? y j ?(i, j) ? E(G)\n\nyn ?{0, 1} n = 1, . . . , N\n\n(4.1)\n\nonde:\n\n\n\n4. Solu\u00e7\u00e3o Recursiva de P(G) 45\n\n\u2022 Qp = {q\nn,k\np (qni ) : k = 1, . . . , ?(n)} \u00e9 um conjunto de fun\u00e7\u00f5es q\n\nn\np obtidas em ?(n) testes para o\n\npo\u00e7o n. Para cada po\u00e7o n e teste k, a fun\u00e7\u00e3o qn,kp \u00e9 aproximada por uma fun\u00e7\u00e3o q?\nn,k\np que assume\n\numa das formas definidas no Ap\u00eandice A;\n\n\u2022 G = (V, E) \u00e9 um grafo ac\u00edclico direcionado cujos v\u00e9rtices representam os po\u00e7os (V ={1, . . . , N})\n\ne cujas arestas representam restri\u00e7\u00f5es de preced\u00eancia sobre a opera\u00e7\u00e3o dos po\u00e7os, ou seja,\n\n(i, j) ? E significa que o po\u00e7o j deve estar ativo se i estiver ativo e portanto j precede i.\n\nAssim como no cap\u00edtulo anterior, um algoritmo que resolve PW (G) resolve tamb\u00e9m PE (G), bas-\n\ntando fazer ?(n) = 1 para n = 1, . . . , N e definir os coeficientes de qn,kp como os valores esperados\ndestes coeficientes. Al\u00e9m disso, as Hip\u00f3teses 3.1 e 3.2 continuam sendo v\u00e1lidas para esta formu-\n\nla\u00e7\u00e3o, bem como o Corol\u00e1rio 3.1.\n\nA proposi\u00e7\u00e3o a seguir afirma que o problema P(G) \u00e9 NP-dif\u00edcil no sentido forte [16]. Isto significa\n\nque n\u00e3o existe algoritmo que seja capaz de encontrar uma solu\u00e7\u00e3o \u00f3tima para este problema em tempo\n\npseudo-polinomial, a n\u00e3o ser que a classe de problemas P seja igual \u00e0 classe NP.\n\nProposi\u00e7\u00e3o 4.1 PW (G) \u00e9 NP-dif\u00edcil no sentido forte.\n\nProva: Podemos mostrar que PW (G) \u00e9 NP-dif\u00edcil no sentido forte atrav\u00e9s de uma redu\u00e7\u00e3o do pro-\n\nblema da mochila parcialmente ordenado (partially ordered knapsack problem, [16], [17]). Uma\n\ninst\u00e2ncia IK do problema da mochila parcialmente ordenado \u00e9 dado por um conjunto finito U , uma\n\nordem parcial ? de U , para cada u ?U um peso s(u) ? Z+ e um valor v(u) ? Z+, e valores inteiros\n\npositivos b e k.\n\nExiste U ??U tal que se u ?U ? e u?? u, ent\u00e3o u? ?U ?, e tal que ?u?U? s(u) ? b e ?u?U? v(u) ? k?\n\nA resposta algor\u00edtmica a esta quest\u00e3o constitui o problema da mochila parcialmente ordenado.\n\nUma inst\u00e2ncia IK pode ser reduzida a uma inst\u00e2ncia IP de PW (G) da seguinte maneira. Assuma,\n\nsem perda de generalidade, que U = {1, . . . , N}. Seja qmaxi = b, e para cada n ? U fa\u00e7a ?(n) = 1,\nln = un = s(u), q\n\nn\np = yuv(u) (para a fun\u00e7\u00e3o polinomial, basta fazer ?\n\nn\n0 = v(u) e ?\n\nn\n1 = ?\n\nn\n2 = ?\n\nn\n3 = 0;\n\npara a fun\u00e7\u00e3o exponencial, An = v(u) e Bn = Cn = Dn = 0; para a fun\u00e7\u00e3o logar\u00edtmica, c1 = v(u) e\n\nc2 = c3 = c4 = 0). Defina ?no = 1 e ?\nn\ng = ?\n\nn\nw = 0 para cada n, e fa\u00e7a po = 1, pg = pw = pi = 0. Seja\n\nG = (V, E) onde V = U e (u, u?) ? E se e somente se u? ? u. Ent\u00e3o uma solu\u00e7\u00e3o SP para IP tem valor\n\nobjetivo maior ou igual a k se e somente se existir U ? ?U com as propriedades desejadas, em outras\n\npalavras, u ?U ? se e somente se yu = 1. ?\n\nA seguir apresentamos o algoritmo PD para PE (F ) e o algoritmo recursivo para PE (G), bem\n\ncomo resultados num\u00e9ricos que comprovam a efici\u00eancia destes algoritmos. Optamos por resolver a\n\nvers\u00e3o PE do problema por ser mais simples que PW , e no final do cap\u00edtulo indicamos como podem\n\nser resolvidos os problemas PW (F ) e PW (G). As pr\u00f3ximas se\u00e7\u00f5es utilizam a seguinte nota\u00e7\u00e3o ao\n\nreferir-se a um grafo G:\n\n\n\n4. Solu\u00e7\u00e3o Recursiva de P(G) 46\n\n\u2022 ?+(u) = {v : (u, v) ? E(G)} \u00e9 o conjunto de v\u00e9rtices diretamente acess\u00edveis por u;\n\n\u2022 ??(u) = {v : (v, u) ? E(G)} \u00e9 o conjunto de v\u00e9rtices que podem alcan\u00e7ar u diretamente;\n\n\u2022 d+(u) = |?+(u)| \u00e9 o grau de sa\u00edda do v\u00e9rtice u;\n\n\u2022 d?(u) = |??(u)| \u00e9 o grau de entrada de u;\n\n\u2022 SG(u) = {v : existe um caminho em G de u para v} \u00e9 o conjunto de descendentes de u no grafo\n\nG;\n\n\u2022 S+G (u) = SG(u)?{u};\n\n\u2022 root(G) = {u : d?(u) = 0} \u00e9 o conjunto das ra\u00edzes de G.\n\n4.2 Solu\u00e7\u00e3o de P(F)\n\nNesta se\u00e7\u00e3o, al\u00e9m da taxa dispon\u00edvel para inje\u00e7\u00e3o de g\u00e1s de eleva\u00e7\u00e3o, os po\u00e7os em PE (F) es-\n\nt\u00e3o acoplados por restri\u00e7\u00f5es de ativa\u00e7\u00e3o impostas pelas arestas de uma floresta F . Para decompor\n\nPE (F) de forma \u00f3tima em uma s\u00e9rie de problemas c\u00f4ncavos desacoplados, um para cada po\u00e7o, seria\n\npreciso saber a distribui\u00e7\u00e3o \u00f3tima das taxas de inje\u00e7\u00e3o de g\u00e1s que satisfazem as restri\u00e7\u00f5es de pre-\n\nced\u00eancia. Nossa abordagem lida primeiro com a quest\u00e3o da distribui\u00e7\u00e3o de g\u00e1s, discretizando a taxa\n\ndispon\u00edvel em M unidades padr\u00e3o, ? = qmaxi /M, e ent\u00e3o trata as restri\u00e7\u00f5es de preced\u00eancia atrav\u00e9s da\nordem topol\u00f3gica induzida pela floresta F . Da mesma forma que no cen\u00e1rio sem restri\u00e7\u00f5es de pre-\n\nced\u00eancia, a enumera\u00e7\u00e3o expl\u00edcita de todas as aloca\u00e7\u00f5es fact\u00edveis pode ser impratic\u00e1vel. Em particular,\n\numa chamada para o algoritmo C#(F ) definido abaixo computa o n\u00famero de ativa\u00e7\u00f5es de po\u00e7os que\n\nrespeitam as restri\u00e7\u00f5es induzidas por um grafo do tipo floresta F em tempo linear1.\n\nAlgoritmo C#(F )\n\n1) Se |V (F )| = 1 ent\u00e3o\n\n2) retorne 2\n\n3) Se |root(F )| = 1 ent\u00e3o\n\n4) retorne 1 + C#(F [V (F)?root(F )])\n\n5) w ? 1\n\n6) Para cada u ? root(F ) fa\u00e7a\n\n7) w ? w?C#(F [SF (u)])\n\n8) retorne w\n\n1O algoritmo C#(F) pode ser facilmente aumentado para enumerar todas as ativa\u00e7\u00f5es fact\u00edveis.\n\n\n\n4. Solu\u00e7\u00e3o Recursiva de P(G) 47\n\nProposi\u00e7\u00e3o 4.2 C#(F ) calcula corretamente o n\u00famero de ativa\u00e7\u00f5es de po\u00e7os que atende \u00e0s restri\u00e7\u00f5es\n\nimpostas por um grafo direcionado do tipo floresta F .\n\nProva: (Por indu\u00e7\u00e3o na cardinalidade n de V (F )). Para n = 1 o n\u00famero reportado por C# \u00e9 claramente\n\ncorreto. Para n ? 2, dois casos devem ser considerados: (caso 1) se |root(F )| = 1, ent\u00e3o C#(F) com-\n\nputa a ativa\u00e7\u00e3o da raiz de F somada a todas as ativa\u00e7\u00f5es fact\u00edveis de F[V (F)?root(F )] quando a raiz\n\nn\u00e3o est\u00e1 ativa, o que \u00e9 corretamente calculado pela hip\u00f3tese de indu\u00e7\u00e3o; (caso 2) se |root(F )|= m?2,\n\nent\u00e3o seja F = T1 ? . . .?Tm, onde Tj, j = 1, . . . , m, s\u00e3o as sub-\u00e1rvores com ra\u00edzes nos v\u00e9rtices que\n\naparecem em root(F ); como os po\u00e7os que est\u00e3o em uma sub-\u00e1rvore s\u00e3o independentes daqueles que\n\nest\u00e3o em outras sub-\u00e1rvores, segue por hip\u00f3tese de indu\u00e7\u00e3o que o n\u00famero de ativa\u00e7\u00f5es \u00e9\nm\n?\nj=1\n\nC#(Tj),\n\nque \u00e9 precisamente o que o algoritmo C# calcula. ?\n\nUma vers\u00e3o n\u00e3o recursiva do algoritmo C#(F ) pode ser implementada para computar o n\u00famero de\n\nativa\u00e7\u00f5es de F com tempo de execu\u00e7\u00e3o ?(n) onde n = |V|. Para tanto, basta produzir uma sequ\u00eancia\n?k1, . . . , kn? dos v\u00e9rtices de F em ordem topol\u00f3gica reversa, ou seja, para todo k j ?V e todo ki ?S\n\n+\nF (k j)\n\ntem-se i &lt;j. Depois, calcula-se C#(ki) (n\u00famero de ativa\u00e7\u00f5es fact\u00edveis para a sub-\u00e1rvore de F com\n\nraiz em ki): para i = 1, . . . , n fa\u00e7a C#(ki) = 2 se ki \u00e9 uma folha, caso contr\u00e1rio fa\u00e7a C#(ki) = 1 +\n\n? j?S+F (ki)C#( j). Por fim, C#(F ) = ? j?root(F)C#( j).\n\n4.2.1 Recurs\u00f5es\n\nO problema PE (F ) pode ser aproximado atrav\u00e9s da aloca\u00e7\u00e3o de valores discretos de unidades\n\npadr\u00e3o de inje\u00e7\u00e3o de g\u00e1s. No restante desta se\u00e7\u00e3o, P \u00e9 uma abrevia\u00e7\u00e3o para PE (F ) e PM denota a\n\nvers\u00e3o discretizada de P, onde ? = qmaxi /M representa uma unidade padr\u00e3o de aloca\u00e7\u00e3o de g\u00e1s e M \u00e9\no n\u00famero de unidades de inje\u00e7\u00e3o dispon\u00edvel. O problema PM \u00e9 definido como:\n\nPM : JM = Maximizar\nN\n?\n\nn=1\n(po?no + pg?\n\nn\ng ? pw?\n\nn\nw)q?\n\nn\np ?\n\nN\n?\n\nn=1\npiq\n\nn\ni\n\nSujeito a :\n\nq?np = f (q\nn\ni ) n = 1, . . . , N\n\nlnyn ? q\nn\ni ? min{un, wn?}yn n = 1, . . . , N\n\nN\n?\n\nn=1\nwn ? M\n\nyi ? y j ?(i, j) ? E(F)\n\nyn ?{0, 1} n = 1, . . . , N\n\nwn ?{0, . . . , M} n = 1, . . . , N\n\n(4.2)\n\nonde a fun\u00e7\u00e3o q?np \u00e9 a fun\u00e7\u00e3o que aproxima o comportamento da produ\u00e7\u00e3o de fluidos do po\u00e7o n em\n\nfun\u00e7\u00e3o de qni , utilizando um dos modelos de aproxima\u00e7\u00e3o mostrados no Ap\u00eandice A, e wn \u00e9 o n\u00famero\n\nde unidades padr\u00e3o de taxa de inje\u00e7\u00e3o de g\u00e1s alocado para o po\u00e7o n.\n\n\n\n4. Solu\u00e7\u00e3o Recursiva de P(G) 48\n\nCorol\u00e1rio 4.1 PM(G) \u00e9 NP-dif\u00edcil no sentido forte.\n\nO algoritmo PD que ser\u00e1 apresentado a seguir faz uso das solu\u00e7\u00f5es dos seguintes problemas\n\nrecursivos:\n\n\u2022 Pym,R \u00e9 a vers\u00e3o discretizada de P restrita aos po\u00e7os que s\u00e3o descendentes dos elementos de\n\nR ? V (F ) da floresta F , quando a taxa de inje\u00e7\u00e3o dispon\u00edvel for de m unidades padr\u00e3o, e tal\n\nque as \u00e1rvores que possuem ra\u00edzes nos v\u00e9rtices de R s\u00e3o disjuntas; cada po\u00e7o r ? R deve estar\n\nativo se y = 1, caso contr\u00e1rio o po\u00e7o pode ou n\u00e3o estar ativo, ou seja yr ? y para todo r ? R, e\n\na taxa dispon\u00edvel de inje\u00e7\u00e3o de g\u00e1s \u00e9 de m unidades padr\u00e3o para todos os elementos de R e seus\n\ndescendentes, ?r?RSF (r); J\ny\nm,R \u00e9 o valor \u00f3timo da fun\u00e7\u00e3o objetivo de P\n\ny\nm,R.\n\n\u2022 Pynm,n \u00e9 a vers\u00e3o discretizada de P restrita ao po\u00e7o n e seus descendentes em F , S\n+\nF (n), onde a\n\nativa\u00e7\u00e3o do po\u00e7o n \u00e9 determinada por yn, e existem m unidades padr\u00e3o de taxa de inje\u00e7\u00e3o de\n\ng\u00e1s para todos os po\u00e7os em SF (n); J\nyn\nm,n \u00e9 o valor \u00f3timo da fun\u00e7\u00e3o objetivo para P\n\nyn\nm,n, podendo\n\nassumir valor ?? caso m? n\u00e3o seja suficiente para ativar n e seus descendentes em F .\n\nDe acordo com a terminologia acima, a solu\u00e7\u00e3o \u00f3tima de PM \u00e9 a solu\u00e7\u00e3o do problema P\n0\nM,root(F)\n\n(JM = J\n0\nM,root(F )), que pode ser resolvido atrav\u00e9s das seguintes recurs\u00f5es:\n\nPynm,n : J\nyn\nm,n = Maximizar (po?no + pg?\n\nn\ng ? pw?\n\nn\nw)q?\n\nn\np ? piq\n\nn\ni + J\n\nyn\nm?wn,?+(n)\n\nSujeito a :\n\nq?np = f (q\nn\ni )\n\nlnyn ? q\nn\ni ? min{un, wn?}yn\n\nwn ?{0, . . . , m}\n\nyn ?{0, 1}\n\n(4.3)\n\nP\ny\nm,R : J\n\ny\nm,R = 0 se R = /0\n\nJ\ny\nm,R = Maximizar max{J\n\nk\nwp,p\n\n: k ? y , k ?{0, 1}}+ Jym?wp,R?{p}\nSujeito a :\n\np ? R\n\nwp ?{0, . . . , m}\n\n(4.4)\n\n4.2.2 Algoritmo PD para P(F)\n\nPara resolver as recurs\u00f5es (4.3)-(4.4), a ordem topol\u00f3gica imposta pelas arestas de F \u00e9 utilizada,\n\nou seja, o conjunto de subproblemas {P\nyn\nm,n} pode ser resolvido a partir dos po\u00e7os que comp\u00f5em as\n\nfolhas de F , em dire\u00e7\u00e3o \u00e0s ra\u00edzes de F , respeitando a ordem topol\u00f3gica.\n\n\n\n4. Solu\u00e7\u00e3o Recursiva de P(G) 49\n\nAlgoritmo PD para PM\n\nInicializa\u00e7\u00e3o\n\nSeja ? = (?1, . . . , ?N ) uma permuta\u00e7\u00e3o de {1, ..., N} obedecendo uma ordem topol\u00f3gica\nde F .\n\nRecorr\u00eancia\n\nPara k = N, . . . , 1:\n\nn ? ?k\nSe d+(n) = 0 ent\u00e3o:\n\nPara m = 0, . . . , M:\n\nResolva Pynm,n para yn ?{0, 1}, obtendo J\nyn\nm,n\n\nSen\u00e3o:\n\nSeja {r1, . . . , rd} = ?+(n), onde d = d+(n)\nSeja J1m,{rd} ? J\n\n1\nm,rd\n\npara m = 0, . . . , M\n\nPara t = d?1 at\u00e9 1:\n\nPara m = 0, . . . , M:\n\nPara wrt = 0, . . . , m:\n\nResolva P1m,{rt ,...,rd} com p = rt para obter J\n1\nm,{rt ,...,rd}\n\nSeja J0m,{rd} ? max{J\n0\nm,rd\n\n, J1m,rd} para m = 0, . . . , M\n\nPara t = d?1 at\u00e9 1:\n\nPara m = 0, . . . , M:\n\nPara wrt = 0, . . . , m:\n\nResolva P0m,{rt ,...,rd} com p = rt para obter J\n0\nm,{rt ,...,rd}\n\nPara m = 0, . . . , M:\n\nPara wn = 0, . . . , m:\n\nResolva Pynm,n para obter J\nyn\nm,n para yn ?{0, 1}\n\nFim\n\nFinaliza\u00e7\u00e3o\n\nSeguindo os passos do la\u00e7o Sen\u00e3o acima, substituindo o conjunto {r1, . . . , rd} por root(F ),\n\nonde d = |root(F )|, resolva Py\nm,root(F)\n\npara obter Jy\nm,root(F )\n\npara y ?{0, 1} e m = {0, . . . , M}.\n\nA Figura 4.1 ilustra como o algoritmo resolve as recurs\u00f5es para um grupo de 6 po\u00e7os e um grafo\n\nde restri\u00e7\u00f5es de preced\u00eancia simples. Para facilitar o entendimento da figura, denotamos o conjunto\n\nde sub-problemas {Pynm,n : m = 0, . . . , M} de P\nyn\nn e, similarmente, o conjunto {P\n\ny\nm,R : m = 0, . . . , M} de\n\nP\ny\nR. Estendendo a nota\u00e7\u00e3o, temos J\n\nyn\nn = {J\n\nyn\nm,n : m = 0, . . . , M} e J\n\ny\nR = {J\n\ny\nm,R : m = 0, . . . , M}.\n\n\n\n4. Solu\u00e7\u00e3o Recursiva de P(G) 50\n\n1\n\n4\n\n6\n\n1\n\n4\n\n6\n\n2 3\n\n5\n\n32\n\n5\n\n1 : P6 ? J62 : P5 ? J5\n\n3 : P4 ? J44 : P3 ? J3\n\n5 : P{5,6} ? J{5,6}\n6 : P2 ? J2\n\n7 : P{3,4} ? J{3,4}\n8 : P{2,3,4} ? J{2,3,4}\n9 : P1 ? J1\n\n\u00c1rvore de Preced\u00eancia \u00c1rvore de Sub-Problemas\n\nFigura 4.1: Ilustra\u00e7\u00e3o do algoritmo PD para P(F). O grafo da esquerda define as restri\u00e7\u00f5es de pre-\nced\u00eancia de ativa\u00e7\u00e3o dos po\u00e7os. Para uma ordem topol\u00f3gica T = ?1, 2, 3, 4, 5, 6?, os conjuntos de\nsub-problemas resolvidos e as tabelas geradas pelo algoritmo s\u00e3o mostrados na \u00e1rvore da direita, que\nindica a ordem na qual os problemas s\u00e3o resolvidos. Por exemplo, 5 : P{5,6} ? J{5,6} significa que o\nconjunto de sub-problemas P y\n\n{5,6} foi o quinto a ser resolvido para obter J\ny\n{5,6}, para y ?{0, 1}.\n\nDuas quest\u00f5es relevantes que surgem na an\u00e1lise deste algoritmo dizem respeito ao n\u00famero de\n\ntabelas que o algoritmo necessita armazenar, e ao n\u00famero de passos computacionais necess\u00e1rios para\n\no preenchimento das mesmas.\n\nConsiderando o n\u00famero de tabelas, o algoritmo computar\u00e1 2N tabelas J\nyn\nn (uma para cada n e yn) e\n\n2\nN\n?\n\nn=1\nd+(n) tabelas J\n\ny\nR , duas para cada R\n\nn\nt = {rt , . . . , rd}?{r1, . . . , rd} = ?\n\n+(n), t = 1, . . . , d = d+(n),\n\nal\u00e9m de 2|root(F )| tabelas J yR onde R ? root(F ). Como cada tabela possui ?(M) elementos, juntas\n\nelas ocupar\u00e3o ?(2M(N +\nN\n?\n\nn=1\nd+(n) + |root(F )|)) ? ?(4MN) unidades de mem\u00f3ria.\n\nSobre o n\u00famero de passos computacionais, dividimos a solu\u00e7\u00e3o dos subproblemas entre folhas\n\ne n\u00e3o-folhas de F . Para um po\u00e7o folha n, o custo para obter J ynn \u00e9 da ordem de ?(M). O custo\ncomputacional associado a um po\u00e7o n\u00e3o-folha por sua vez \u00e9 dividido entre o c\u00e1lculo das tabelas J\n\ny\nR\n\ne J yn . O primeiro \u00e9 equivalente a resolver um problema PM( /0) com d+(n) \u201csuper-po\u00e7os\u201d2 , onde as\nfun\u00e7\u00f5es objetivo dos \u201csuper-po\u00e7os\u201d s\u00e3o induzidas pelos valores das tabelas j\u00e1 computadas, J yk para\n\nk ? ?+(n); portanto, o c\u00e1lculo de J yR termina em ?(d\n+(n)M2) passos. O segundo c\u00e1lculo, J\n\ny\nn pode ser\n\nrealizado em ?(M2) passos. No total, conclui-se que o tempo de execu\u00e7\u00e3o do algoritmo \u00e9 da ordem\nde ?(4NM2).\n\n2Um \u201csuper-po\u00e7o\u201dconsiste de uma sub-\u00e1rvore de po\u00e7os com raiz em um filho particular do v\u00e9rtice n.\n\n\n\n4. Solu\u00e7\u00e3o Recursiva de P(G) 51\n\nTabela 4.1: Solu\u00e7\u00f5es de P(F) para uma inst\u00e2ncia de 6 po\u00e7os, com qmaxi vari\u00e1vel e M = 200.\n\nqmaxi q\n1\ni q\n\n2\ni q\n\n3\ni q\n\n4\ni q\n\n5\ni q\n\n6\ni J\n\n50 7.4251 7.6954 7.4406 7.2722 7.0173 7.0379 989.1743\n40 6.8000 7.2000 6.8000 6.6000 6.2000 6.4000 977.9290\n30 5.1000 5.7000 5.2500 4.6500 4.3500 4.9500 858.0924\n20 0.0000 4.7000 4.2000 3.7000 3.7000 3.7000 609.6331\n15 0.0000 3.9750 3.6750 0.0000 3.6750 3.6750 476.0638\n13 0.0000 5.1350 0.0000 0.0000 3.7050 4.1600 396.1391\n10 0.0000 0.0000 5.2000 0.0000 0.0000 4.8000 294.9611\n7 0.0000 0.0000 7.0000 0.0000 0.0000 0.0000 177.9975\n\nPara ilustrar o funcionamento do algoritmo, utilizamos a mesma inst\u00e2ncia de 6 po\u00e7os apresentada\n\nna Se\u00e7\u00e3o 3.2.2, e o grafo de restri\u00e7\u00f5es de preced\u00eancia da Figura 4.1. A Tabela 4.1 mostra como a\n\nsolu\u00e7\u00e3o varia para diversas taxas de inje\u00e7\u00e3o dispon\u00edveis qmaxi e um n\u00edvel de discretiza\u00e7\u00e3o M = 200.\n\nPara qmaxi = 50, existe g\u00e1s suficiente para ativar todos os po\u00e7os em seu ponto \u00f3timo. \u00c9 interessante\n\nobservar como os po\u00e7os s\u00e3o desativados com a diminui\u00e7\u00e3o da taxa de inje\u00e7\u00e3o dispon\u00edvel. Note que,\n\npor exemplo, o po\u00e7o 3 \u00e9 desativado quando a taxa dispon\u00edvel cai de 15 para 13, e volta a ser ativado\n\nquando a taxa cai para 10. Isso ilustra como a natureza combinat\u00f3ria do problema pode fazer com\n\nque as t\u00e9cnicas ad hoc normalmente utilizadas forne\u00e7am solu\u00e7\u00f5es sub-\u00f3timas.\n\n4.2.3 Resultados Num\u00e9ricos\n\nO algoritmo apresentado foi implementado em sistema operacional GNU Linux e linguagens de\n\nprograma\u00e7\u00e3o C/C++, e ent\u00e3o testado em uma s\u00e9rie de 24 experimentos num\u00e9ricos, variando o n\u00famero\n\nde po\u00e7os, o n\u00edvel de discretiza\u00e7\u00e3o e a estrutura das restri\u00e7\u00f5es de preced\u00eancia. A Tabela 4.2 mostra\n\nos resultados destes experimentos, contendo a raz\u00e3o JM/U B e o tempo de execu\u00e7\u00e3o do algoritmo. O\n\nvalor JM = J\n0\nM,root(F ) representa a solu\u00e7\u00e3o \u00f3tima encontrada pelo algoritmo PD, e U B representa um\n\nlimite superior para JM , obtido atrav\u00e9s de um programa de otimiza\u00e7\u00e3o convexa [27].\n\nOs experimentos mostram que apesar de o algoritmo PD fornecer uma solu\u00e7\u00e3o aproximada, esta\n\n\u00e9 bastante pr\u00f3xima do limite superior te\u00f3rico, ou seja, o algoritmo PD para PM fornece solu\u00e7\u00f5es\n\nbastante pr\u00f3ximas das solu\u00e7\u00f5es \u00f3timas em um per\u00edodo de tempo razo\u00e1vel, considerando as inst\u00e2ncias\n\nutilizadas neste trabalho.\n\n\n\n4. Solu\u00e7\u00e3o Recursiva de P(G) 52\n\nTabela 4.2: Qualidade de aproxima\u00e7\u00e3o e tempo de execu\u00e7\u00e3o para PM(F)\n\nN\u00famero de po\u00e7os M JM/U B (%) Tempo de execu\u00e7\u00e3o (s)\n10 96,65 0,06\n\n6 80 99,89 0,11\n320 99,94 6,35\n10 94,72 0,93\n\n6 80 99,08 0,93\n320 99,08 5,28\n20 94,82 0,03\n\n12 80 99,92 0,08\n160 99,97 5,16\n20 96,27 1,97\n\n12 80 97,81 2,19\n320 98,03 3,73\n50 94,14 3,52\n\n24 200 95,67 4,33\n800 96,48 5,86\n50 97,70 0,70\n\n24 200 99,21 0,79\n800 99,30 2,31\n100 94,18 3,20\n\n36 400 96,59 3,41\n800 96,79 5,82\n100 94,97 2,26\n\n36 400 97,10 2,90\n800 97,74 5,03\n\nM\u00e9dia 97,21 2,79\n\n4.3 Solu\u00e7\u00e3o de P(G)\n\nEsta se\u00e7\u00e3o trata da vers\u00e3o onde as restri\u00e7\u00f5es de preced\u00eancia de ativa\u00e7\u00e3o s\u00e3o representadas por um\n\ngrafo ac\u00edclico G. A solu\u00e7\u00e3o do problema resultante segue a mesma linha dos problemas anteriores.\n\nAo inv\u00e9s de resolvermos P(G), resolvemos sua vers\u00e3o discretizada, PM(G), onde a taxa de inje\u00e7\u00e3o\n\nde g\u00e1s dispon\u00edvel \u00e9 dividida em M unidades padr\u00e3o ? = qmaxi /M, permitindo uma solu\u00e7\u00e3o recursiva.\nO algoritmo \u201cquebra\u201d PM(G) em subproblemas que s\u00e3o resolvidos recursivamente e cujas solu\u00e7\u00f5es\n\ns\u00e3o armazenadas em uma estrutura de dados, posteriormente sendo integradas para obter a solu\u00e7\u00e3o\n\ndo problema original.\n\n\n\n4. Solu\u00e7\u00e3o Recursiva de P(G) 53\n\n4.3.1 Recurs\u00f5es\n\nAntes de formular as recurs\u00f5es, descrevemos brevemente os problemas que s\u00e3o resolvidos recur-\n\nsivamente pelo algoritmo e as tabelas produzidas. As recurs\u00f5es resolvem dois subproblemas:\n\n\u2022 Pm(H) \u00e9 a vers\u00e3o do problema original restrita aos po\u00e7os contidos no conjunto V (H), as restri-\n\n\u00e7\u00f5es de preced\u00eancia representadas por E(H), e uma quantidade de m unidades padr\u00e3o de taxa\n\nde inje\u00e7\u00e3o de g\u00e1s, onde H \u00e9 um subgrafo de G; Jm(H) denota o valor \u00f3timo da fun\u00e7\u00e3o objetivo\n\npara Pm(H), onde J (H) = {Jm(H) : m = 0, . . . , M} \u00e9 a tabela com os valores objetivo para to-\n\ndos os n\u00edveis de taxa de inje\u00e7\u00e3o de g\u00e1s dispon\u00edvel; P (H) denota o conjunto de sub-problemas\n\n{Pm(H) : m = 0, . . . , M}.\n\n\u2022 Prm(H) \u00e9 uma vers\u00e3o mais restrita de Pm(H) onde o po\u00e7o r ? root(H) deve estar ativo; J\nr\nm(H)\n\nrepresenta o valor \u00f3timo da fun\u00e7\u00e3o objetivo, que pode assumir valor ?? se a quantidade m? n\u00e3o\n\u00e9 suficiente para ativar r e seus descendentes em H ; J r(H) = {Jrm(H) : m = 0, . . . , M} \u00e9 a tabela\n\ncom os valores objetivo para todos os n\u00edveis de taxa de inje\u00e7\u00e3o de g\u00e1s dispon\u00edvel, enquanto\n\nP r(H) = {Prm(H)} denota o conjunto de sub-problemas correspondentes.\n\nSeguindo a nota\u00e7\u00e3o acima, pode-se estabelecer as recurs\u00f5es:\n\nPm(H) : se E(H) = /0 :\nJm(H) = Maximizar ?\n\nn?V (H)\n\n[\n\n(po?no + pg?\nn\ng ? pw?\n\nn\nw)q?\n\nn\np ? piq\n\nn\ni\n\n]\n\nSujeito a:\n\nq?np = f (q\nn\ni ), ?n ?V (H)\n\nwn ?{0, . . . , m}, ?n ?V (H)\n\n?\nn?V (H)\n\nwn = m\n\nlnyn ? q\nn\ni ? yn min{un, ?wn}, ?n ?V (H)\n\nyn ?{0, 1}, ?n ?V (H)\n\nse E(H) 6= /0 :\nJm(H) = max{J\n\nr\nm(H), Jm(H[V (H)?{r}])}, r ? root(H)\n\n(4.5)\n\n\n\n4. Solu\u00e7\u00e3o Recursiva de P(G) 54\n\nPrm(H) : se SH (r) = V (H) :\n\nJrm(H) = Maximizar ?\nn?V (H)\n\n[\n\n(po?no + pg?\nn\ng ? pw?\n\nn\nw)q?\n\nn\np ? piq\n\nn\ni\n\n]\n\nSujeito a:\n\nq?np = f (q\nn\ni ), ?n ?V (H)\n\nwn ?{0, . . . , m}, ?n ?V (H)\n\n?\nn?V (H)\n\nwn = m\n\nln ? q\nn\ni ? min{un, ?wn}, ?n ?V (H)\n\nse SH (r) 6= V (H) :\n\nJrm(H) = Max J\nr\nk (H[SH (r)]) + Jm?k(H[V (H)?SH (r)])\n\nS. a:\n\nk ?{0, . . . , m}\n\n(4.6)\n\nOs algoritmos que resolvem as recurs\u00f5es acima s\u00e3o dados na pr\u00f3xima se\u00e7\u00e3o e utilizam duas\n\nestruturas de dados globais: um dicion\u00e1rio D [12] para armazenar as tabelas J (H) e J r(H), e uma\n\nordem topol\u00f3gica T = ?t1, . . . ,tN? de G para guiar a solu\u00e7\u00e3o recursiva de PM(G).\n\n4.3.2 Algoritmo Recursivo para P(G)\n\nOs algoritmos SolveJ(H) e SolveJ(H, r), que respectivamente calculam recursivamente as tabelas\n\nJ (H) e J r(H) s\u00e3o descritos abaixo. Para resolver PM(G), deve-se obter uma ordem topol\u00f3gica T =\n\n?t1, . . . ,tN? dos v\u00e9rtices de G e inicializar a estrutura de dados global e fazer uma chamada para\n\nSolveJ(G). Ao t\u00e9rmino da execu\u00e7\u00e3o deste algoritmo, a solu\u00e7\u00e3o para PM(G) pode ser obtida a partir\n\nda tabela J (G) e das tabelas armazenadas em D.\n\nAlgoritmo SolveJ(H)\n\nSe J (H) ? D ent\u00e3o:\n\nRetorne J (H)\n\nFim - Se\n\nSe E(H) = /0 ent\u00e3o:\nResolva Pm(H) para m = 0, . . . , M e produza J (H)\n\nArmazene J (H) em D\n\nRetorne J (H)\n\nSen\u00e3o:\n\nr ? tk, onde k \u00e9 o menor \u00edndice tal que tk ?V (H) (Note que r ? root(H))\n\nJ r(H) ? SolveJ(H, r)\n\nJ (Hr) ? SolveJ(Hr) onde Hr = H[V (H)?{r}]\n\n\n\n4. Solu\u00e7\u00e3o Recursiva de P(G) 55\n\nResolva Pm(H) para m = 0, . . . , M e produza J (H)\n\nArmazene J (H) em D\n\nRetorne J (H)\n\nFim - Se\n\nAlgoritmo SolveJ(H, r)\n\nSe J r(H) ? D ent\u00e3o:\n\nRetorne J r(H)\n\nFim - Se\n\nSe V (H) = SH (r) ent\u00e3o:\n\nResolva Prm(H) para m = 0, . . . , M e obtenha J\nr(H)\n\nArmazene J r(H) em D\n\nRetorne J r(H)\n\nSen\u00e3o:\n\nSeja H1 = H[SH (r)];\n\nJ r(H1) ? SolveJ(H1, r)\n\nSeja H2 = H[V (H)?SH (r)]\n\nJ (H2) ? SolveJ(H2)\n\nResolva Prm(H) para m = 0, . . . , M e produza J\nr(H)\n\nArmazene J r(H) em D\n\nRetorne J r(H)\n\nFim - Se\n\nA maneira como os algoritmos acima operam \u00e9 ilustrada na Figura 4.2 para uma inst\u00e2ncia simples\n\nde 6 po\u00e7os. O grafo com as restri\u00e7\u00f5es de preced\u00eancia de ativa\u00e7\u00e3o dos po\u00e7os \u00e9 mostrado na ra\u00edz da\n\n\u00e1rvore de sub-problemas. O algoritmo segue a ordem topol\u00f3gica T = ?3, 1, 2, 4, 5? para decompor os\n\nproblemas em sub-problemas.\n\n\n\n4. Solu\u00e7\u00e3o Recursiva de P(G) 56\n\n1\n\n2 3\n\n4 5\n\n1\n\n2\n\n4 5\n\n1\n\n2\n\n4 5\n\n2\n\n4 5\n\n2\n\n4 5\n\n1\n\n2 3\n\n4 5\n\n1\n\n2\n\n4\n\n1\n\n2\n\n4\n\n2\n\n4\n\n2\n\n4\n\n4\n\n3\n\n5\n\n4 5\n\ny1 = 0\n\ny1 = 0\n\ny1 = 1\n\ny1 = 1\n\ny2 = 0\n\ny2 = 0y2 = 1\n\ny2 = 1\n\ny3 = 0\ny3 = 1\n\nP (1, 2, 3, 4, 5)\n\nP 3(1, 2, 3, 4, 5)\n\nP 3(3, 5)\nP (1, 2, 4)\n\nP 1(1, 2, 4)\nP (2, 4)\n\nP 2(2, 4)\nP (4)\n\nP (1, 2, 4, 5)\n\nP 1(1, 2, 4, 5) P (2, 4, 5)\n\nP 2(2, 4, 5)\n\nP (4, 5)\n\n\u00c1rvore de Sub-Problemas\n\nFigura 4.2: Ilustra\u00e7\u00e3o dos algoritmos recursivos que resolvem P(G). O grafo de restri\u00e7\u00f5es de pre-\nced\u00eancia G possui 5 n\u00f3s como ilustrado na ra\u00edz da \u00e1rvore de sub-problemas. A ordem topol\u00f3gica\nde G usada para guiar a solu\u00e7\u00e3o \u00e9 T = ?3, 1, 2, 4, 5?. Cada n\u00f3 indica um conjunto de sub-problemas\nresolvido pelo algoritmo: P (1, 2, 4) representa o conjunto de sub-problemas P (G[{1, 2, 4}]).\n\n\n\n4. Solu\u00e7\u00e3o Recursiva de P(G) 57\n\nDevido \u00e0 necessidade de armazenarmos as tabelas j\u00e1 computadas3 e da solu\u00e7\u00e3o de um problema\n\nequivalente a P( /0), quando E(H) = /0, conclui-se que o tempo de execu\u00e7\u00e3o do algoritmo pertence a\nO(|D|NM2), onde |D| \u00e9 o n\u00famero de tabelas armazenadas em D.\n\nUma chamada de SolveJ(G) pode levar tempo exponencial em algumas inst\u00e2ncias. Seja G um\n\ngrafo representando restri\u00e7\u00f5es de preced\u00eancia de ativa\u00e7\u00e3o onde V = {1, . . . , 2k + 1} e E = {(1, k +\n\n2), (2, k + 3), . . . , (k, 2k + 1)}?{(k + 1, k + 2), . . . , (k + 1, 2k + 1)}. Para a ordem topol\u00f3gica T =\n\n?1, 2, . . . , 2k + 1?, SolveJ(G) calcula ?(2k) tabelas distintas e consequentemente |D| ? ?(2k). Por\noutro lado, o tempo de execu\u00e7\u00e3o pode ser linear no n\u00famero de po\u00e7os se a ordem topol\u00f3gica iniciar\n\nem k + 1, o que ilustra que o desempenho do algoritmo depende tanto de G como de sua ordem\n\ntopol\u00f3gica.\n\nApesar do desempenho desfavor\u00e1vel no pior caso, os tempos de execu\u00e7\u00e3o do algoritmo para\n\nPM(G) s\u00e3o compar\u00e1veis aos tempos de execu\u00e7\u00e3o do algoritmo para PM(F), para as inst\u00e2ncias con-\n\nsideradas neste trabalho. Os resultados dos experimentos num\u00e9ricos que corroboram esta afirma\u00e7\u00e3o\n\ns\u00e3o mostrados na pr\u00f3xima se\u00e7\u00e3o.\n\n4.3.3 Resultados Num\u00e9ricos\n\nO algoritmo proposto foi implementado utilizando linguagens de programa\u00e7\u00e3o C/C++ e estruturas\n\nde dados (listas e dicion\u00e1rios) da biblioteca LEDA [25], em ambiente GNU Linux.\n\nA qualidade com que PM(G) aproxima P(G), bem como seu desempenho em termos de tempo\n\ncomputacional foram testados em 24 experimentos, variando o n\u00famero de po\u00e7os e a estrutura das\n\nrestri\u00e7\u00f5es de preced\u00eancia de ativa\u00e7\u00e3o representadas pelo grafo G. A Tabela 4.3 cont\u00e9m os resultados\n\ndestes experimentos, incluindo o n\u00famero de po\u00e7os, o tempo de execu\u00e7\u00e3o do algoritmo, e a raz\u00e3o\n\nJM/U B, sendo JM o valor objetivo encontrado pelo algoritmo PD e U B um limite superior calculado\n\natrav\u00e9s da relaxa\u00e7\u00e3o das vari\u00e1veis inteiras e programa\u00e7\u00e3o c\u00f4ncava (MINOS solver, [27]).\n\nOs resultados num\u00e9ricos mostram que o algoritmo \u00e9 capaz de fornecer solu\u00e7\u00f5es bem pr\u00f3ximas\n\ndas solu\u00e7\u00f5es \u201c\u00f3timas\u201d, em um tempo razoavelmente curto, para inst\u00e2ncias de tamanho pequeno e\n\nm\u00e9dio.\n\n3Se G = (V, E) onde V = {(1, . . . , 2k)} e E = {(1, k + 1), (2, k + 2), . . . , (k, 2k)}. Para uma ordem topol\u00f3gica T =\n?1, k + 1, 2, k + 2, . . . , k, 2k?, uma chamada recursiva a SolveP(G) sem armazenamento de tabelas resolveria o problema\nPM(H) restrito ao grafo H induzido por V (H) = {k, 2k} 3\n\nK?1 vezes. Por outro lado, com o armazenamento de tabelas,\nPM(H) \u00e9 resolvido apenas uma vez.\n\n\n\n4. Solu\u00e7\u00e3o Recursiva de P(G) 58\n\nTabela 4.3: Qualidade de aproxima\u00e7\u00e3o e tempo de execu\u00e7\u00e3o para PM(G)\n\nN\u00famero de po\u00e7os M JM/U B (%) Tempo de execu\u00e7\u00e3o\n10 99,61 0,06\n\n6 80 99,86 0,10\n320 99,90 6,36\n20 99,15 0,04\n\n6 80 99,95 0,05\n320 99,96 0,85\n40 99,27 0,07\n\n12 80 99,92 0,08\n320 99,99 0,73\n40 95,91 1,80\n\n12 80 97,25 2,75\n320 98,20 4,09\n40 92,33 3,00\n\n24 320 96,71 3,29\n640 96,99 7,67\n40 96,10 2,12\n\n24 320 97,88 2,12\n640 97,89 3,90\n100 95,04 2,43\n\n36 400 97,32 2,68\n800 97,57 4,96\n100 94,77 2,62\n\n36 400 97,17 2,84\n800 97,38 5,23\n\nM\u00e9dia 97,51 2,49\n\n4.4 Extens\u00f5es\n\nNesta se\u00e7\u00e3o, indicamos como seria poss\u00edvel resolver os problemas PW (F ) e PW (G), e tamb\u00e9m\n\nPM(G) quando o grafo G cont\u00e9m ciclos.\n\nOs algoritmos para a solu\u00e7\u00e3o de PW (F ) e PW (G) funcionariam seguindo os mesmos passos dos\n\nalgoritmos para PE (F) e PE (G) respectivamente, bastando substituir os valores de q?\nn\np por Min{q?\n\nn,k\np :\n\nk = 1, . . . , ?(n)}, onde ?(n) \u00e9 o n\u00famero de W PCs dispon\u00edvel para o po\u00e7o n. Isto causaria uma penali-\ndade em termos de tempo computacional da ordem de K = max{?(n) : n = 1, . . . , N}, ou seja, o tempo\nde execu\u00e7\u00e3o de PW (F) pertenceria a ?(4KNM2), e o tempo de execu\u00e7\u00e3o de PW (G) a O(K|D|NM2).\n\nConsideremos agora o problema PM(G) quando o grafo G que representa as restri\u00e7\u00f5es de pre-\n\nced\u00eancia cont\u00e9m ciclos. A seguir, mostramos um procedimento para resolver tal inst\u00e2ncia de P(G)\n\nque invoca o algoritmo criado para resolver inst\u00e2ncias cujas restri\u00e7\u00f5es de preced\u00eancia formam um\n\n\n\n4. Solu\u00e7\u00e3o Recursiva de P(G) 59\n\ngrafo ac\u00edclico. Primeiro, encontre os componentes fortemente conexos C1, . . . ,CK de G e defina aque-\n\nles que cont\u00e9m mais de um po\u00e7o como um \u201csuper-po\u00e7o\u201d. Como cada componente fortemente conexo\n\nCk ter\u00e1 todos seus po\u00e7os ativos ou inativos, seu super-po\u00e7o correspondente se comportar\u00e1 como um\n\n\u00fanico po\u00e7o. Segundo, resolva uma fam\u00edlia de problemas similares a P( /0) para cada super-po\u00e7o, onde\ntodos seus po\u00e7os est\u00e3o ativos e para cada m ?{0, . . . , M}, produzindo uma tabela com as solu\u00e7\u00f5es\n\ne armazenando-a no dicion\u00e1rio D. Terceiro, resolva um problema PM(G\n?) onde os v\u00e9rtices de G?\n\ncorrespondem aos elementos de {C1, . . . ,CK} e cujo conjunto de arestas induz um grafo ac\u00edclico.\n\nAl\u00e9m do c\u00e1lculo envolvendo os componentes conexos e o c\u00e1lculo pr\u00e9vio de tabelas, os super-po\u00e7os\n\ndevem ser tratados diferentemente quando o algoritmo apresentado na Se\u00e7\u00e3o 4.3 for utilizado para\n\nresolver PM(G\n?), ou seja, buscar um valor em uma tabela ao inv\u00e9s de resolver um problema associado\n\na um super-po\u00e7o. Do procedimento esbo\u00e7ado aqui, pode-se concluir que seu tempo de execu\u00e7\u00e3o \u00e9\n\nprovavelmente melhor que o tempo do algoritmo que trata de grafos ac\u00edclicos.\n\n4.5 Sum\u00e1rio\n\nNeste cap\u00edtulo foram apresentados algoritmos recursivos e de Programa\u00e7\u00e3o Din\u00e2mica para a\n\nsolu\u00e7\u00e3o do problema de aloca\u00e7\u00e3o \u00f3tima de g\u00e1s de eleva\u00e7\u00e3o quando os comportamentos esperados\n\ndos po\u00e7os s\u00e3o conhecidos e existem restri\u00e7\u00f5es de preced\u00eancia cuja representa\u00e7\u00e3o forma uma flo-\n\nresta (PE (F)) e um grafo ac\u00edclico (PE (G)). Atrav\u00e9s de experimentos num\u00e9ricos, foi constatado que o\n\ndesempenho destes algoritmos \u00e9 bastante satisfat\u00f3rio, e que s\u00e3o capazes de fornecer solu\u00e7\u00f5es quase-\n\n\u00f3timas em tempo relativamente baixo. Os resultados desta se\u00e7\u00e3o foram publicados em [11], [28], [9],\n\n[29].\n\n\n\nCap\u00edtulo 5\n\nSolu\u00e7\u00e3o de P( /0) Utilizando Programa\u00e7\u00e3o\nLinear Inteira Mista\n\nNeste cap\u00edtulo, adotamos uma abordagem diferente para a resolver o problema de aloca\u00e7\u00e3o de\n\ng\u00e1s, ou seja, a lineariza\u00e7\u00e3o por partes das W PCs e a utiliza\u00e7\u00e3o de t\u00e9cnicas de solu\u00e7\u00e3o baseadas em\n\nPrograma\u00e7\u00e3o Linear Inteira Mista. Esta mudan\u00e7a ocorreu pois alterar os algoritmos de Programa\u00e7\u00e3o\n\nDin\u00e2mica de modo a tratar novas restri\u00e7\u00f5es n\u00e3o \u00e9 uma tarefa trivial. Al\u00e9m disso, as W PCs s\u00e3o nor-\n\nmalmente fornecidas como um conjunto de pontos, o que torna a lineariza\u00e7\u00e3o por partes um m\u00e9todo\n\nmais natural a ser adotado.\n\n5.1 Lineariza\u00e7\u00e3o por Partes Aplicada a P\n\nInicialmente, relembramos o problema de aloca\u00e7\u00e3o de g\u00e1s de eleva\u00e7\u00e3o sob a restri\u00e7\u00e3o de uma taxa\n\nm\u00e1xima de inje\u00e7\u00e3o:\n\nP : Maximizar f =\nN\n?\n\nn=1\nfn(q\n\nn\ni , q\n\nn\np)\n\nSujeito a :\nN\n?\n\nn=1\nqni ? q\n\nmax\ni\n\nqnp = q?\nn\np(q\n\nn\ni ) n = 1, . . . , N\n\nlnyn ? q\nn\ni ? unyn n = 1, . . . , N\n\nyn ?{0, 1} n = 1, . . . , N\n\n(5.1)\n\nO problema P possui fun\u00e7\u00f5es n\u00e3o-lineares e vari\u00e1veis discretas, portanto pertence \u00e0 classe de\n\nproblemas de Programa\u00e7\u00e3o N\u00e3o-Linear Inteira Mista, que figuram entre os problemas de otimiza\u00e7\u00e3o\n\n\n\n5. Solu\u00e7\u00e3o de P( /0) Utilizando Programa\u00e7\u00e3o Linear Inteira Mista 61\n\nmais dif\u00edceis de serem resolvidos. Procedimentos para encontrar limites superiores para a solu\u00e7\u00e3o\n\n\u00f3tima atrav\u00e9s da relaxa\u00e7\u00e3o da integralidade das vari\u00e1veis discretas podem dar origem a problemas\n\ndif\u00edceis de Programa\u00e7\u00e3o N\u00e3o-Linear [5], e procedimentos de enumera\u00e7\u00e3o das solu\u00e7\u00f5es podem n\u00e3o ser\n\nefetivos se n\u00e3o houverem limites apertados.\n\nAssim, ao inv\u00e9s de resolver P diretamente, podemos linearizar por partes suas fun\u00e7\u00f5es n\u00e3o-\n\nlineares, transformando P em um problema de Programa\u00e7\u00e3o Linear Inteira Mista. Atrav\u00e9s desta\n\nreformula\u00e7\u00e3o, \u00e9 poss\u00edvel calcular limites para as solu\u00e7\u00f5es atrav\u00e9s de procedimentos de Programa\u00e7\u00e3o\n\nInteira, ferramentas j\u00e1 consolidadas e de grande potencial. Esta abordagem possui desvantagens,\n\ncomo o aumento do n\u00famero de vari\u00e1veis discretas e a perda de acuracidade, por\u00e9m os experimentos\n\nrealizados aqui mostram que os benef\u00edcios da formula\u00e7\u00e3o linear inteira mista superam os aspectos\n\nnegativos.\n\nAntes de apresentar a formula\u00e7\u00e3o utilizando lineariza\u00e7\u00e3o por partes, algumas defini\u00e7\u00f5es necess\u00e1rias\n\nao desenvolvimento s\u00e3o dadas abaixo.\n\nDefini\u00e7\u00e3o 5.1 Qni = {q\nn,0\ni , q\n\nn,1\ni , . . . , q\n\nn,?(n)\ni } \u00e9 o conjunto de taxas de inje\u00e7\u00e3o de g\u00e1s para o po\u00e7o n,\n\nonde ?(n) \u00e9 o n\u00famero de taxas de inje\u00e7\u00e3o de g\u00e1s para as quais o fluxo de sa\u00edda \u00e9 conhecido.\n\nDefini\u00e7\u00e3o 5.2 Qnp = {q\nn,0\np , q\n\nn,1\np , . . . , q\n\nn,?(n)\np } \u00e9 o conjunto de taxas de fluxo de sa\u00edda para o po\u00e7o n, tal\n\nque qn,kp = qnp(q\nn,k\ni ) para k = 0, . . . , ?(n).\n\nHip\u00f3tese 5.1 Para cada po\u00e7o n ? N = {1, . . . , N}, qn,0i = q\nn,0\np = 0, indicando que o primeiro ponto\n\noperacional \u00e9 a origem; q\nn,k?1\ni &lt;q\n\nn,k\ni para k = 1, . . . , ?(n), significando que os valores de taxas\n\nde inje\u00e7\u00e3o s\u00e3o distintos, qn,1i = ln e q\nn,?(n)\ni = un ? q\n\nmax\ni , eliminando os valores de taxas de inje\u00e7\u00e3o\n\ndesnecess\u00e1rios (infact\u00edveis).\n\nAssim, podemos seguir as diretivas fornecidas em [37] e formular o problema de aloca\u00e7\u00e3o \u00f3tima\n\nde g\u00e1s de inje\u00e7\u00e3o como um problema linearizado por partes:\n\nPpl : Maximizar f =\nN\n?\n\nn=1\n\n?(n)\n?\n\nk=2\n( f n,k?1?Ln,k + f\n\nn,k?Rn,k)\n\nSujeito a :\nN\n?\n\nn=1\nqni ? q\n\nmax\ni\n\n?Ln,k, ?\nR\nn,k ? 0 n = 1, . . . , N , k = 2, . . . , ?(n)\n\n?Ln,k + ?\nR\nn,k = xn,k n = 1, . . . , N , k = 2, . . . , ?(n)\n\n?(n)\n?\n\nk=1\nxn,k = 1 n = 1, . . . , N\n\nqni =\n?(n)\n?\n\nk=2\n(qn,k?1i ?\n\nL\nn,k + q\n\nn,k\ni ?\n\nR\nn,k) n = 1, . . . , N\n\nxn,k ?{0, 1}, n = 1, . . . , N , k = 1, . . . , ?(n)\n\n(5.2)\n\n\n\n5. Solu\u00e7\u00e3o de P( /0) Utilizando Programa\u00e7\u00e3o Linear Inteira Mista 62\n\n0\n\n(q1i , q\n1\np)\n\n(q2i , q\n2\np)\n\n(q3i , q\n3\np)\n\n(q4i , q\n4\np)\n\n(q5i , q\n5\np)\n\n(q6i , q\n6\np)\n\nx1 x2 x3 x4 x5 x6\n\n?L2\n?R2 , ?\n\nL\n3\n\n?R5 , ?\nL\n6\n\n?R6\n\nqi\n\nqp\n\nq1i q\n2\ni\n\nq1p\n\nq2p\n\nq\n?(n)\ni\n\nFigura 5.1: Ilustra\u00e7\u00e3o da lineariza\u00e7\u00e3o por partes da fun\u00e7\u00e3o do fluxo de sa\u00edda de um po\u00e7o n utilizando\no modelo de Sherali (Se\u00e7\u00e3o 2.3.3).\n\nonde:\n\n\u2022 f n,k = fn(q\nn,k\ni , q\n\nn,k\np ) \u00e9 a contribui\u00e7\u00e3o para a fun\u00e7\u00e3o objetivo do po\u00e7o n no ponto de opera\u00e7\u00e3o\n\n(q\nn,k\ni , q\n\nn,k\np );\n\n\u2022 ?n = {?Ln,k, ?\nR\nn,k : k = 2, . . . , ?(n)} \u00e9 o conjunto de fatores que induzem a combina\u00e7\u00e3o convexa\n\ndos elementos de Qn;\n\n\u2022 xn = {xn,k : k = 1, . . . , ?(n)} \u00e9 o conjunto de vari\u00e1veis discretas que for\u00e7am a combina\u00e7\u00e3o\nconvexa de apenas dois elementos consecutivos de Qn; xn,k assume valor 1 se e somente se\n\nqni = q\nn,k?1\ni ?\n\nL\nn,k + q\n\nn,k\ni ?\n\nR\nn,k e q\n\nn\np = q\n\nn,k?1\np ?Ln,k + q\n\nn,k\np ?Rn,k , com exce\u00e7\u00e3o de xn,1 que assume valor 1\n\nse e somente se qni = q\nn\np = 0, ou seja, xn,k assume valor 1 se q\n\nn\ni ? [q\n\nn,k?1\ni , q\n\nn,k\ni ] e q\n\nn\np ? [q\n\nn,k?1\np , q\n\nn,k\np ]\n\n\u00e9 aproximado linearmente neste dado intervalo pela combina\u00e7\u00e3o convexa de seus pontos ex-\n\ntremos como mostra a Figura 5.1.\n\nPara simplificar os desenvolvimentos a seguir, introduzimos a seguinte nota\u00e7\u00e3o: ? =\nSN\n\nn=1 ?n;\n\nx =\nSN\n\nn=1 xn; qi = {q\nn\ni : n = 1, . . . , N}; e K =\n\nN\n?\n\nn=1\n?(n). Utilizando esta nota\u00e7\u00e3o, o espa\u00e7o de solu\u00e7\u00f5es\n\nfact\u00edveis pode ser representado pelo conjunto Xpl ={(x, ?, qi)?BK\u00d7R2(K?N)\u00d7RN : (x, ?, qi) satisfaz\nas restri\u00e7\u00f5es de (5.2)}, onde B = {0, 1}.\n\n\u00c9 sabido que na minimiza\u00e7\u00e3o (maximiza\u00e7\u00e3o) de uma fun\u00e7\u00e3o convexa (c\u00f4ncava) linearizada por\n\npartes, as vari\u00e1veis x assumem valores inteiros naturalmente, i.e., os valores de ? diferentes de zero\ns\u00e3o sempre consecutivos [31]. Isto permite que o problema seja simplificado mais uma vez, descar-\n\ntando quase todas as vari\u00e1veis x, sendo que apenas xn,1 para n = 1, . . . , N \u00e9 necess\u00e1ria para determinar\n\n\n\n5. Solu\u00e7\u00e3o de P( /0) Utilizando Programa\u00e7\u00e3o Linear Inteira Mista 63\n\nse o po\u00e7o est\u00e1 ou n\u00e3o ativo. Para o problema em quest\u00e3o, a fun\u00e7\u00e3o objetivo \u00e9 separ\u00e1vel por\u00e9m n\u00e3o\n\nc\u00f4ncava, devido \u00e0 regi\u00e3o n\u00e3o fact\u00edvel entre qni = 0 e q\nn\ni = l\n\nn. No entanto, se a fun\u00e7\u00e3o objetivo de um\n\npo\u00e7o n for c\u00f4ncava dentro do intervalo [ln, un], o n\u00famero de vari\u00e1veis discretas pode cair de ?(n) para\napenas uma vari\u00e1vel.\n\nExaminando as restri\u00e7\u00f5es de Ppl , notamos que algumas vari\u00e1veis de decis\u00e3o podem ser eliminadas\n\nda formula\u00e7\u00e3o, sendo substitu\u00eddas pelas equa\u00e7\u00f5es:\n\nxn,1 = 1?\n?(n)\n?\n\nk=2\nxn,k n = 1, . . . , N (5.3)\n\n?Rn,k = xn,k ??\nL\nn,k n = 1, . . . , N , k = 2, . . . , ?(n) (5.4)\n\nqni =\n?(n)\n?\n\nk=2\nqn,ki xn,k + ?\n\n?(n)\nk=2\n\n(\n\nqn,k?1i ?q\nn,k\ni\n\n)\n\n?Ln,k n = 1, . . . , N (5.5)\n\nSubstituindo as vari\u00e1veis de Ppl pelas respectivas equa\u00e7\u00f5es (5.3)\u2013(5.5) obtemos uma formula\u00e7\u00e3o mais\n\ncompacta:\n\nPcpl : Maximizar f =\nN\n?\n\nn=1\n\n?(n)\n?\n\nk=2\n\n[\n\nf n,k xn,k ?( f\nn,k ? f n,k?1)?Ln,k\n\n]\n\nSujeito a :\nN\n?\n\nn=1\n\n?(n)\n?\n\nk=2\n\n[\n\nqn,ki xn,k ?(q\nn,k\ni ?q\n\nn,k?1\ni )?\n\nL\nn,k\n\n]\n\n? qmaxi\n\n?Ln,k ? 0 n = 1, . . . , N , k = 2, . . . , ?(n)\nxn,k ??Ln,k ? 0 n = 1, . . . , N , k = 2, . . . , ?(n)\n?(n)\n?\n\nk=2\nxn,k ? 1 n = 1, . . . , N\n\nxn,k ?{0, 1} n = 1, . . . , N , k = 2, . . . , ?(n)\n\n(5.6)\n\nOs vetores x e ?L podem representar vetores de vari\u00e1veis da mesma forma que em Ppl , permitindo\nque o espa\u00e7o fact\u00edvel de Pcpl seja representado pelo conjunto Xcpl = {(x, ?L)? BK?N \u00d7RK?N : (x, ?L)\nsatisfaz as restri\u00e7\u00f5es de (5.6)}.\n\n5.2 Desigualdades V\u00e1lidas\n\nUm dos objetivos deste trabalho \u00e9 fornecer uma formula\u00e7\u00e3o vers\u00e1til de P e algoritmos simples\n\ne eficientes que possam ser integrados a simuladores e software de controle de produ\u00e7\u00e3o de hidro-\n\ncarbonetos. Neste sentido, analisamos o poliedro Pcpl = conv(Xcpl ) para identificar desigualdades\n\nv\u00e1lidas que aceleram a busca branch-and-bound de algoritmos comerciais e n\u00e3o-comerciais. Para fa-\n\ncilitar o entendimento do leitor, apresentamos uma inst\u00e2ncia com 6 po\u00e7os na Tabela 5.1, e definimos\n\nqmaxi = 6, 5. Estes dados ser\u00e3o utilizados para ilustrar os conceitos apresentados ao longo do texto.\n\n\n\n5. Solu\u00e7\u00e3o de P( /0) Utilizando Programa\u00e7\u00e3o Linear Inteira Mista 64\n\nTabela 5.1: N\u00edveis de inje\u00e7\u00e3o para uma inst\u00e2ncia de 6 po\u00e7os, qmaxi = 6, 5.\n\nqn,ki\nn\\k 1 2 3 4 5 6 ?(n)\n1 0,5 2 3 4 5 6 6\n2 1 2 3 4 5 5,5 6\n3 1 2 3 4 5 6 6\n4 1 2 3 4 4,5 5\n5 1 2 3 3,5 4\n6 1 2 3 4 5 5\n\nA seguir, introduzimos a terminologia utilizada aqui e estabelecemos condi\u00e7\u00f5es para que Pcpl\npossua dimens\u00e3o cheia.\n\n\u2022 N = {1, . . . , N} \u00e9 o conjunto dos \u00edndices dos po\u00e7os. Para o exemplo da Tabela 5.1, N =\n\n{1, 2, 3, 4, 5, 6};\n\n\u2022 ? ={(n, k) : n = 1, . . . , N, k = 2, . . . , ?(n)} \u00e9 o conjunto de todos os pares (n, k) =(po\u00e7o, n\u00edvel de\nopera\u00e7\u00e3o). No exemplo, ? ={(1, 2), . . . , (1, 6), (2, 2), . . . , (2, 6), (3, 2), . . . , (3, 6), (4, 2), . . . , (4, 5),\n(5, 2), . . . , (5, 4), (6, 2), . . . , (6, 5)};\n\n\u2022 ?n = {(n, k) ? ?} \u00e9 o conjunto de todos os pares (n, k) =(po\u00e7o, n\u00edvel de opera\u00e7\u00e3o) em ?\nrelativos ao po\u00e7o n. Para n = 5, ?5 = {(5, 2), (5, 3), (5, 4)};\n\n\u2022 ?(U ) =\nS\n\nn?U ?n para U ? N \u00e9 a uni\u00e3o dos conjuntos ?n para todos os po\u00e7os n contidos no\nconjunto U . Para U = {3, 4}, ?(U ) = {(3, 2), . . . , (3, 6), (4, 2), . . . , (4, 5)};\n\n\u2022 ?(S) = ?(n,k)?S q\nn,k?1\ni onde S ? ? \u00e9 a taxa de inje\u00e7\u00e3o m\u00ednima necess\u00e1ria para ativar todos os\n\npo\u00e7os n no intervalo k, sendo que o par (n, k) pertence a um conjunto S. Para S = {(1, 4), (2, 2),\n\n(4, 4)}, ?(S) = q1,3i + q\n2,1\ni + q\n\n4,3\ni = 3 + 1 + 3 = 7;\n\n\u2022 S(n, k) = S?{(n, k)} onde S ? ? s\u00e3o todos os pares (n, k) =(po\u00e7o, n\u00edvel de opera\u00e7\u00e3o) do con-\njunto S exceto o par (n, k). Para o conjunto S definido no item anterior, S(2, 2) ={(1, 4), (4, 4)};\n\n\u2022 N(S) = {n : (n, k) ? S} para S ? ? \u00e9 o conjunto dos \u00edndices dos po\u00e7os n que possuem um par\n(n, k) em S. Para S = {(1, 4), (2, 2), (4, 4)}, N(S) = {1, 2, 4}; e\n\n\u2022 (n(S), k(S)) = arg max{qn,k?1i : (n, k) ? S} para S ? ? \u00e9 o par (n, k) de S que necessita da\nmaior taxa de inje\u00e7\u00e3o de g\u00e1s para ativar o po\u00e7o n no n\u00edvel m\u00ednimo do intervalo k. Para S =\n\n{(1, 4), (2, 2), (4, 4)}, (n(S), k(S)) = arg max{q1,3i , q\n2,1\ni , q\n\n4,3\ni } = arg max{3, 1, 3} = (1, 4).\n\nProposi\u00e7\u00e3o 5.1 Pcpl = conv(Xcpl ) possui dimens\u00e3o cheia.\n\n\n\n5. Solu\u00e7\u00e3o de P( /0) Utilizando Programa\u00e7\u00e3o Linear Inteira Mista 65\n\nProva: Seja Z ? R2(K?N) uma matriz cujas linhas sejam vetores incidentes zU ? Xcpl , cujas en-\n\ntradas diferentes de zero correspondam aos elementos de U ?{xn,k, ?Ln,k : (n, k) ? ?}. Sejam z\n{xn,k} e\n\nz{xn,k ,?\nL\nn,k} para n = 1, . . . , N e k = 2, . . . , ?(n) as linhas de Z, todos elementos de Xcpl de acordo com a\n\nHip\u00f3tese 5.1. Claramente, rank(Z) = 2(K ?N) e, como o vetor nulo pertence a Xcpl , conclu\u00edmos que\n\nconv(Xcpl ) possui dimens\u00e3o cheia, ou seja, dim(conv(Xcpl )) = 2(K ?N). ?\n\nConsiderando que Pcpl possui uma estrutura semelhante ao problema da mochila [42], as de-\n\nsigualdades de cobertura do problema da mochila podem ser reformuladas como desigualdades v\u00e1li-\n\ndas para Pcpl , por\u00e9m neste caso os elementos da cobertura consistem de pares de po\u00e7os e n\u00edveis de\n\ninje\u00e7\u00e3o (pares (n, k)). Os conceitos de cobertura e cobertura m\u00ednima nas vari\u00e1veis x, assim como as\n\ndesigualdades v\u00e1lidas induzidas, s\u00e3o dadas a seguir.\n\nDefini\u00e7\u00e3o 5.3 Um subconjunto C ?? \u00e9 uma cobertura1 se ?(C) > qmaxi e m 6= n para todo (m, i), (n, j)?\nC, (m, i) 6= (n, j).\n\nEm palavras, C \u00e9 uma cobertura se for um conjunto de pares (n, k) ? ? de po\u00e7os distintos tal que a\ntaxa de inje\u00e7\u00e3o m\u00ednima necess\u00e1ria para ativar os po\u00e7os em C nos n\u00edveis de opera\u00e7\u00e3o k supera a taxa de\n\ninje\u00e7\u00e3o dispon\u00edvel. Utilizando o exemplo da Tabela 5.1, C = {(1, 4), (2, 2), (4, 4)} \u00e9 uma cobertura,\n\npois |C| = |N (C)| = 3 e ?(C) = 7 > 6, 5 = qmaxi .\n\nDefini\u00e7\u00e3o 5.4 Um subconjunto C ? ? \u00e9 uma cobertura m\u00ednima se:\n\ni) C \u00e9 uma cobertura; e\n\nii) ?(n, k)?C, ?(Q)? qmaxi onde Q = C(n, k) se k = 2 ou ent\u00e3o Q = C(n, k)?{(n, k?1)} se k > 2.\n\nC \u00e9 estritamente m\u00ednima se a desigualdade do item (ii) \u00e9 estrita.\n\nA cobertura C = {(1, 4), (2, 2), (4, 4)} \u00e9 estritamente m\u00ednima, pois:\n\n\u2022 para (n, k) = (1, 4), temos Q = C(1, 4)?{(1, 3)} ={(1, 3), (2, 2), (4, 4)} com ?(Q) = 6 &lt;6, 5 =\nqmaxi ;\n\n\u2022 para (n, k) = (2, 2), temos Q = C(2, 2) = {(1, 3), (4, 4)} com ?(Q) = 6 &lt;6, 5 = qmaxi ;\n\n\u2022 para (n, k) = (4, 4), temos Q = C(4, 4)?{(4, 3)} ={(1, 4), (2, 2), (4, 3)} com ?(Q) = 6 &lt;6, 5 =\nqmaxi .\n\nSeja ?C = {(n, j) : (n, k) ?C, j = 2, . . . , k} e seja PC = {(x, ?L) ? Pcpl : xn,k = ?Ln,k = 0, ?(n, k) ?\n???C} a proje\u00e7\u00e3o de Pcpl no espa\u00e7o de ?C. Utilizando a cobertura C acima, ?C = {(1, 2), (1, 3),\n(1, 4), (2, 2), (4, 2), (4, 3), (4, 4)}.\n\n1Note que qualquer cobertura C possui cardinalidade |C|? 2 de acordo com a Hip\u00f3tese 5.1.\n\n\n\n5. Solu\u00e7\u00e3o de P( /0) Utilizando Programa\u00e7\u00e3o Linear Inteira Mista 66\n\nCorol\u00e1rio 5.1 dim(Pcpl ) = 2|?C|.\n\nProposi\u00e7\u00e3o 5.2 Dada uma cobertura C, a desigualdade de cobertura\n\n?\n(n,k)?C\n\nxn,k ?|C|?1 (5.7)\n\n\u00e9 v\u00e1lida para Pcpl .\n\nProva: Suponha que exista (x, ?L) em Pcpl que viola (5.7). Ent\u00e3o,\nN\n?\n\nn=1\n\n?(n)\n?\n\nk=2\n[qn,ki xn,k?(q\n\nn,k\ni ? q\n\nn,k?1\ni )?\n\nL\nn,k]\n\n? ?\n(n,k)?C\n\n[q\nn,k\ni xn,k ?(q\n\nn,k\ni ?q\n\nn,k?1\ni )?\n\nL\nn,k] ? ?\n\n(n,k)?C\nq\n\nn,k?1\ni = ?(C) > q\n\nmax\ni o que contradiz a primeira re-\n\nstri\u00e7\u00e3o de (5.6) e, portanto, refuta a hip\u00f3tese. ?\n\nA desigualdade de cobertura induzida por C = {(1, 4), (2, 3), (4, 3)} \u00e9 v\u00e1lida para Pcpl : x1,4 +\n\nx2,2 + x4,4 ? 2.\n\nProposi\u00e7\u00e3o 5.3 Se C \u00e9 uma cobertura estritamente m\u00ednima, ent\u00e3o FC = {(x, ?L) ? PC : ?\n(n,k)?C\n\nxn,k =\n\n|C|?1} \u00e9 uma face de dimens\u00e3o cheia de PC.\n\nA maximalidade de (5.7) obtida de uma cobertura estritamente m\u00ednima C, com respeito a PC,\n\npode ser demonstrada mostrando que uma desigualdade que induz uma face m\u00e1xima F de PC, tal que\n\nFC ? F , difere de (5.7) por uma constante multiplicativa. A princ\u00edpio, a desigualdade de cobertura\n\n(5.7) pode ser submetida a um procedimento de lifting exato para obter uma face de Pcpl de dimens\u00f5es\n\nmaiores.\n\nUm procedimento mais simples para fortalecer as desigualdades de cobertura consiste em adi-\n\ncionar pares (n, k) que requerem mais recursos do que os pares contidos em C. Isto leva a uma\n\ncobertura estendida e a desigualdade v\u00e1lida definida abaixo.\n\nDefini\u00e7\u00e3o 5.5 E(C) = {(n, j) : (n, k) ? C, j = k, . . . , ?(n)}?{(n, k) ? ? : qn,k?1i ? q\nn(C),k(C)?1\ni } \u00e9 a\n\ncobertura estendida de uma cobertura C.\n\nPara nosso exemplo, E(C) = {(1, 4), (1, 5), (1, 6), (2, 2), (2, 3), (2, 4), (2, 5), (2, 6), (4, 4), (4, 5)}?\n\n{(3, 4), (3, 5), (3, 6), (5, 4), (6, 4), (6, 5)}. Note que (n(C), k(C)) = (1, 4) com q\nn(C),k(C)?1\ni = 3.\n\nProposi\u00e7\u00e3o 5.4 Dada uma cobertura C, a desigualdade\n\n?\n(n,k)?E(C)\n\nxn,k ?|C|?1 (5.8)\n\ninduzida por uma cobertura estendida E(C) \u00e9 v\u00e1lida para Pcpl .\n\n\n\n5. Solu\u00e7\u00e3o de P( /0) Utilizando Programa\u00e7\u00e3o Linear Inteira Mista 67\n\nNote que se C n\u00e3o for m\u00ednima, ent\u00e3o pode existir C??C tal que a desigualdade (5.8) induzida por\n\nC \u00e9 implicada por (5.8) induzida por C?.\n\nDefini\u00e7\u00e3o 5.6 Dada uma cobertura C e h ?{0, . . . ,|C|}, Ch denota o subconjunto de C tal que:\n\ni) |Ch| = h; e\n\nii) max{qn,k?1i : (n, k) ?C?Ch}? min{q\nn,k?1\ni : (n, k) ?Ch} se 0 &lt;h &lt;|C|.\n\nPara a cobertura exemplo,\n\n\u2022 C0 = /0;\n\n\u2022 C1 = {(4, 4)};\n\n\u2022 C2 = {(1, 4), (4, 4)};\n\n\u2022 C3 = {(1, 4), (2, 2), (4, 4)}.\n\nDefini\u00e7\u00e3o 5.7 Dada uma cobertura C, (n, k) ?C, e h ?{0, . . . ,|C|?1}, C(n, k)h denota um subcon-\n\njunto de C(n, k) tal que:\n\ni) |C(n, k)h| = h; e\n\nii) max{qm, j?1i : (m, j) ?C(n, k)?C(n, k)h}? min{q\nm, j?1\ni : (m, j) ?C(n, k)h} se 0 &lt;h &lt;|C|?1.\n\nPara a cobertura C de nosso exemplo e (n, k) = (1, 4),\n\n\u2022 C(1, 4)0 = /0;\n\n\u2022 C(1, 4)1 = {(4, 4)};\n\n\u2022 C(1, 4)2 = {(2, 2), (4, 4)}.\n\nUma maneira melhor de aumentar uma desigualdade de cobertura consiste em considerar as de-\n\nmandas de recursos para obter fatores ?n,k ?{0, 1, . . . ,|C|?1}, (n, k) ? E(C)?C, ao inv\u00e9s de usar o\nlimite inferior trivial. Utilizando os resultados de [3], identificamos estes fatores e condi\u00e7\u00f5es sob as\n\nquais as desigualdades resultantes definem uma face m\u00e1xima de Pcpl .\n\nTeorema 5.1 A desigualdade\n\n?\n(n,k)??\n\n?n,k xn,k ? ?0 (5.9)\n\nonde ?0 \u00e9 um inteiro positivo, \u00e9 satisfeita por todo (x, ?L) ? Pcpl = conv(Xcpl ) se ? pode ser parti-\ncionado em q + 1 subconjuntos ?h, h = 0, 1, . . . , q, 1 ? q ? ?0, tal que:\n\n\n\n5. Solu\u00e7\u00e3o de P( /0) Utilizando Programa\u00e7\u00e3o Linear Inteira Mista 68\n\n(i) ?n,k = h para todo (n, k) ? ?h, h = 0, 1, . . . , q;\n\n(ii) S =\nSq\n\nh=1 ?h \u00e9 a extens\u00e3o de uma cobertura m\u00ednima C, E(C) = S, tal que C ??1, e |C|= ?0 + 1;\ne\n\n(iii) o particionamento de ? se d\u00e1 como segue:\n\n?0 = ??S, onde ?C0 = ?0 ??(N(C)) e ?\nC?\n0 = ?0 ??\n\nC\n0 ;\n\n?1 = S??\nq\nh=2?h, onde ?\n\nC\n1 = ?1 ??(N(C)) e ?\n\nC?\n1 = ?1 ??\n\nC\n1 ;\n\n?h = ?Ch ??\nC?\nh , h = 2, . . . , q;\n\n?Ch = {(n, k) ? ? : (n, i) ?C, ?(C(n, i)h?1) ? q\nn,k?1\ni ?q\n\nn,i?1\ni &lt;?(C(n, i)h)},\n\nh = 2, . . . , q; e\n\n?C?h = {(n, k) ? ? : n ? N ?N(C), ?(Ch) ? q\nn,k?1\ni &lt;?(Ch+1)}, h = 2, . . . , q.\n\nSe as condi\u00e7\u00f5es:\n\n(iv) para todo (n, k) ?C, h = 0, 1, . . . , q, e para todo (n, j) ? ?Ch ,\n\n?((C(n, k)?C(n, k)h)?{(n, j)}) &lt;qmaxi , e (5.10a)\n\n(v) para cada h = 0, 1, . . . , q, e para todo (n, k) ? ?C?h ,\n\n?((C?Ch+1)?{(n, k)}) &lt;qmaxi (5.10b)\n\nforem satisfeitas, al\u00e9m de (i), (ii), e (iii), ent\u00e3o (5.9) induz uma faceta de Pcpl .\n\nProva: (Validade) Suponha que exista z? = (x?, ??L) ? Xcpl que satisfaz (i), (ii), e (iii) mas viola (5.9).\nPara qualquer z = (x, ?L)? Xcpl , seja Jl (x) = {(n, k) ? ? : xn,k = l}, l = 0, 1. Defina z? = (x?, ??L) como:\n\n(1) x?n,k = x?n,k e ??Ln,k = ??\nL\nn,k caso n\u00e3o seja especificado por (2), (3), ou (4) abaixo.\n\n(2) Seja ??C1 = ?\nC\n1 ?J1(x?)?C e ??\n\nC\n1 = {(n, k) ? C : (n, j) ? ??\n\nC\n1}. Fa\u00e7a as seguintes mudan\u00e7as em\n\n(x?, ??L):\n\n\u2013 fa\u00e7a x?n,k = ??Ln,k = 0 para todo (n, k) ? ??\nC\n1 ; e\n\n\u2013 fa\u00e7a x?n,k = ??Ln,k = 1 para todo (n, k) ? ??\nC\n1 .\n\nNote que (x?, ??L) ? Xcpl e |?1 ?J1(x?)| = |?1 ?J1(x?)|.\n\n(3) Seja {??Ch : h = 2, . . . , q} a fam\u00edlia de subconjuntos tal que ??\nC\nh = ?\n\nC\nh ?J1(x?), h = 2, . . . , q. Seja\n\n??C ?{(n, k) ?C?J0(x?) : n?N(C)?N(\nSq\n\nh=2 ??\nC\nh )} o maior subconjunto tal que |??\n\nC|?\nq\n\n?\nh=2\n\n(h?\n\n1)|??Ch |. Fa\u00e7a as seguintes mudan\u00e7as em (x?, ??\nL):\n\n\n\n5. Solu\u00e7\u00e3o de P( /0) Utilizando Programa\u00e7\u00e3o Linear Inteira Mista 69\n\n\u2013 fa\u00e7a x?n,k = ??Ln,k = 0 para todo (n, k) ?\nSq\n\nh=2 ??\nC\nh ;\n\n\u2013 fa\u00e7a x?n,k = ??Ln,k = 1 para todo (n, k) ?{(m, j) ?C : m ? N(\nSq\n\nh=2 ??\nC\nh )}; e\n\n\u2013 fa\u00e7a x?n,k = ??Ln,k = 1 para todo (n, k) ? ??\nC.\n\nNote que (x?, ??L) permanece como elemento de Xcpl devido a (iii). Al\u00e9m disso, |??C| \u00e9 m\u00e1xima\npois, caso contr\u00e1rio, ?(J1(x?)) ? ?(J1(x?)) ? ?(C) > qmaxi o que violaria a primeira restri\u00e7\u00e3o de\n(5.6), contradizendo a hip\u00f3tese.\n\n(4) Seja {??C?h : h = 2, . . . , q} a fam\u00edlia de subconjuntos tal que:\n\n??C?h ? ?\nC?\nh ?J1(x?), h = 2, . . . , q, e (5.11a)\n\nq\n\n?\nh=2\n\nh|??C?h | ? ?0 + 1?|J1(x?)??1|. (5.11b)\n\nA exist\u00eancia de tal fam\u00edlia segue de\n\n?\n(n,k)??\n\n?n,kx?n,k =\nq\n\n?\nh=1\n\nh|?h ?J1(x?)|\n\n= |?1 ?J1(x?)|+\nq\n\n?\nh=2\n\nh|?h ?J1(x?)|\n\n= |?1 ?J1(x?)|+\nq\n\n?\nh=2\n\nh|??Ch |+\nq\n\n?\nh=2\n\nh|?h ?J1(x?)???Ch |\n\n= |J1(x?)??1|+\nq\n\n?\nh=2\n\nh|?h ?J1(x?)???Ch |\n\n= |J1(x?)??1|+\nq\n\n?\nh=2\n\nh|?C?h ?J1(x?)| (5.12a)\n\n> ?0 [pois z? viola (5.9) de acordo com a hip\u00f3tese] (5.12b)\n\n? ?0 + 1 (5.12c)\n\nDe (5.12a)\u2013(5.12c) segue que\n\nq\n\n?\nh=2\n\nh|?C?h ?J1(x?)| ? ?0 + 1?|J1(x?)??1|. (5.13)\n\nSeja ??C? ?{(n, k) ?C?J0(x?)} o maior subconjunto tal que |??C?|?\nq\n\n?\nh=2\n\nh|??C?h |. Fa\u00e7a as seguintes\n\nmudan\u00e7as em (x?, ??L):\n\n\u2013 fa\u00e7a x?n,k = ??Ln,k = 0 para todo (n, k) ?\nSq\n\nh=2 ??\nC?\nh ; e\n\n\u2013 fa\u00e7a x?n,k = ??Ln,k = 1 para todo (n, k) ? ??\nC?.\n\nEnt\u00e3o segue que ?(J1(x?)) ? ?(J1(x?)) ? ?(C) > qmaxi , violando a primeira restri\u00e7\u00e3o de (5.6) e\ncontradizendo a hip\u00f3tese z? ? Pcpl .\n\n\n\n5. Solu\u00e7\u00e3o de P( /0) Utilizando Programa\u00e7\u00e3o Linear Inteira Mista 70\n\n(Maximalidade) Seja F? = {(x, ?L) ? Pcpl : ?(n,k)?? ?n,kxn,k = ?0} a face induzida por (5.9). Seja\n\n?T x + ?T ?L = ?\n(n,k)??\n\n?n,kxn,k + ?\n(n,k)??\n\n?n,k?Ln,k ? ?0 (5.14)\n\numa desigualdade v\u00e1lida que induz uma face m\u00e1xima F = {(x, ?L) ? Pcpl : ?T x + ?T ?L = ?0} de\nPcpl tal que F? ? F . No que segue, provamos que F? \u00e9 m\u00e1xima mostrando que (5.14) e (5.9) diferem\n\napenas de uma constante multiplicativa.\n\nTome qualquer (n, k) ? ?Ch , h ? {0, . . . , q}, onde (n, i) ? C. Seja z = z((C(n, i) ?C(n, i)h) ?\n{(n, k)}) e seja z? id\u00eantico a z, exceto por ??Ln,k = ?\n\nL\nn,k ??. Da condi\u00e7\u00e3o (iv), z e z? pertencem a F?\n\npara ? > 0 suficientemente pequeno. Como F? ? F , z e z? devem satisfazer:\n\n?\n(l,t)??\n\n?l,t xl,t + ?\n(l,t)??\n\n?l,t ?Ll,t = ?0 (5.15)\n\nSubtraindo (5.15) utilizando z? de (5.15) utilizando z, deduzimos que ?n,k = 0.\n\nTome qualquer (n, k)? ?C?h , h ?{0, . . . , q}. Seja z = z((C?Ch+1)?{(n, k)}) e z? id\u00eantico a z exceto\npor ??Ln,k = ?\n\nL\nn,k ??. Da condi\u00e7\u00e3o (v), z e z? pertencem a F? para ? > 0 suficientemente pequeno. Para\n\nque z e z? estejam em F , z e z? devem satisfazer (5.15). Como na dedu\u00e7\u00e3o acima, podemos concluir que\n\n?n,k = 0.\n\nAt\u00e9 este ponto, mostramos que ?n,k = 0 para todo (n, k) ? ?.\n\nTome qualquer (n, i), (m, j) ? C. Seja z = z(C(m, j)) e z? = z(C(n, i)). Como z, z? ? F?, devem\n\npertencer a F e satisfazer (5.15). Assim, da mesma forma que nos desenvolvimentos acima, podemos\n\ndeduzir que ?n,i = ?m, j para todo (n, i), (m, j)?C. Ent\u00e3o, podemos assumir sem perda de generalidade\nque ?0 = |C|?1, o que implica ?n,k = 1 para todo (n, k) ?C.\n\nTome qualquer (n, k) de ?Ch ?C, h = 0, . . . , q, onde (n, i) ? C e seja z = z((C(n, i)?C(n, i)h)?\n{(n, k)}). Da condi\u00e7\u00e3o (iv), segue que z ? F? e deve satisfazer (5.15) para que F? ? F . Consequente-\n\nmente, ?T x = ?0 ? ?(m, j)?C(n,i)?C(n,i)h ?m, j + ?n,k = ?0 ?|C|?1?h + ?n,k = |C|?1 ? ?n,k = h.\n\nTome qualquer (n, k) de ?C?h , h = 0, . . . , q, e seja z = z((C ?Ch+1)?{(n, k)}). Da condi\u00e7\u00e3o (v),\nz ? F? e deve satisfazer (5.15) para que F? ? F . Ent\u00e3o, ?T x = ?0 ? ?(m, j)?C?Ch+1 ?m, j + ?n,k = ?0 ?\n|C|?(h + 1) + ?n,k = |C|?1 ? ?n,k = h.\n\nDos desenvolvimentos acima, conclu\u00edmos que ?n,k = h para cada (n, k) ? ?h, h = 0, . . . , q, e ?0 =\n|C|?1. Ent\u00e3o, (5.9) induz uma face m\u00e1xima de Pcpl . ?\n\nO Teorema 5.1 oferece uma maneira bastante simples de fortalecer uma cobertura m\u00ednima, pois\n\nos fatores ?n,k podem ser calculados de maneira bastante trivial. Na verdade, os fatores ?n,k induzem\nlimites inferiores para os fatores de lifting ?n,k das vari\u00e1veis (n, k) ? ???C. As rela\u00e7\u00f5es dos fatores\n\n\n\n5. Solu\u00e7\u00e3o de P( /0) Utilizando Programa\u00e7\u00e3o Linear Inteira Mista 71\n\nde lifting ?n,k com seus limites inferiores ?n,k e limites superiores ??n,k ser\u00e3o abordadas nas se\u00e7\u00f5es\nseguintes.\n\nContinuando com nosso exemplo, temos que:\n\n\u2022 q = |C|?1 = 2;\n\n\u2022 ?C?2 = /0;\n\n\u2022 ?C?1 = {(3, 4), (3, 5), (3, 6), (5, 4), (6, 4), (6, 5)};\n\n\u2022 ?C2 = {(2, 5), (2, 6)};\n\n\u2022 ?C1 = {(1, 4), (1, 5), (1, 6), (2, 2), (2, 3), (2, 4), (4, 4), (4, 5)};\n\n\u2022 ?1 = ?C1 ??\nC?\n1 ={(1, 4), (1, 5), (1, 6), (2, 2), (2, 3), (2, 4), (3, 4), (3, 5), (3, 6), (4, 4), (4, 5), (5, 4),\n\n(6, 4), (6, 5)};\n\n\u2022 ?2 = {(2, 5), (2, 6)};\n\n\u2022 S =\nSq\n\nh=1 ?h =\nS2\n\nh=1 ?h = E(C);\n\n\u2022 ?C0 = {(1, 2), (1, 3), (4, 2), (4, 3)};\n\n\u2022 ?C?0 = {(3, 2), (3, 3), (5, 2), (5, 3), (6, 2), (6, 3)}.\n\nExemplificamos agora a verifica\u00e7\u00e3o de que as condi\u00e7\u00f5es (5.10a) e (5.10b) s\u00e3o v\u00e1lidas:\n\n\u2022 Condi\u00e7\u00e3o (5.10a) para (n, k) = (2, 2):\n\n\u2013 h = 0: ??C0 = /0;\n\n\u2013 h = 1: ??C1 = {(2, 2), (2, 3), (2, 4)}\n\n? ?((C(2, 2)?C(2, 2)1 )?{(2, 2)}) = ?({(1, 4), (2, 2)}) = 3 + 1 = 4 &lt;qmaxi\n? ?({(1, 4), (2, 3)}) = 3 + 2 = 5 &lt;qmaxi\n? ?({(1, 4), (2, 4)}) = 3 + 3 = 6 &lt;qmaxi ;\n\n\u2013 h = 2: ??C2 = {(2, 5), (2, 6)}\n\n? ?((C(2, 2)?C(2, 2)2 )?{(2, 5)}) = ?({(2, 5)}) = 4 &lt;qmaxi\n? ?({(2, 6)}) = 5 &lt;qmaxi .\n\n\u2022 Condi\u00e7\u00e3o (5.10b):\n\n\u2013 h = 0 e (n, k) = (3, 3): ?((C?C1)?{(3, 3)}) = ?({(2, 2), (4, 4)}?{(3, 3)}) = 1 + 3 + 2 =\n6 &lt;6, 5 = qmaxi ;\n\n\n\n5. Solu\u00e7\u00e3o de P( /0) Utilizando Programa\u00e7\u00e3o Linear Inteira Mista 72\n\nTabela 5.2: Limites inferiores para os fatores de lifting, ?n,k.\n\n(n, k) ?n,k = h\n(1,5) 1\n(1,6) 1\n(2,3) 1\n(2,4) 1\n(2,5) 2\n(2,6) 2\n(4,5) 1\n(3,4) 1\n(3,5) 1\n(3,6) 1\n(5,4) 1\n(6,4) 1\n(6,5) 1\n\n(n, k) ?n,k = h\n(1,2) 0\n(1,3) 0\n(4,2) 0\n(4,3) 0\n(3,2) 0\n(3,3) 0\n(5,2) 0\n(5,3) 0\n(6,2) 0\n(6,3) 0\n\n\u2013 h = 1 e (n, k) = (6, 5): ?((C?C2)?{(6, 5)}) = ?({(2, 2)}?{(6, 5)}) = 1 + 4 = 5 &lt;6, 5 =\nqmaxi ;\n\n\u2013 para h = 2, ?C?h = /0.\n\nRepetindo o processo para todos os outros pares (n, k), verifica-se que as condi\u00e7\u00f5es (5.10a) e (5.10b)\n\ns\u00e3o v\u00e1lidas. A Tabela 5.2 cont\u00e9m os limites inferiores ?n,k para os fatores de lifting obtidos atrav\u00e9s\ndo processo acima, e a desigualdade v\u00e1lida correspondente \u00e9 dada por:\n\nx1,4 + x1,5 + x1,6 + x2,2 + x2,3 + x2,4 + x3,4 + x3,5 + x3,6+\n\nx4,4 + x4,5 + x5,4 + x6,4 + x6,5 + 2x2,5 + 2x2,6 ? 2 .\n\nTome uma cobertura m\u00ednima C e seja ? = ?(N ?N(C))?E(C). Dizemos que C \u00e9 uma cober-\ntura forte se ? = /0 ou ent\u00e3o ?(Q) ? qmaxi para Q = C(n(C), k(C))?{(n(?), k(?))}. Uma cobertura\nestritamente m\u00ednima C \u00e9 estritamente forte se ?(Q) &lt;qmaxi . Note que existiria uma cobertura C\n\n? tal\n\nque E(C) ? E(C?) se C n\u00e3o fosse forte e, consequentemente, a desigualdade de cobertura estendida\n\n(5.8) induzida por C? seria mais forte que (5.8) induzida por C. Note tamb\u00e9m que as condi\u00e7\u00f5es (iv) e\n\n(v) do Teorema 5.1 implicam que C \u00e9 uma cobertura estritamente forte.\n\nCondi\u00e7\u00f5es necess\u00e1rias e suficientes para que a desigualdade (5.8) induza uma faceta de Pcpl po-\n\ndem ser estabelecidas. Uma das condi\u00e7\u00f5es \u00e9 que C deve ser uma cobertura estritamente forte. Apesar\n\nde induzirem facetas, estas desigualdades s\u00e3o menos \u00fateis que as desigualdades (5.9) cuja efici\u00eancia\n\nser\u00e1 testada atrav\u00e9s de experimentos computacionais.\n\n\n\n5. Solu\u00e7\u00e3o de P( /0) Utilizando Programa\u00e7\u00e3o Linear Inteira Mista 73\n\n5.3 Lifting de Coberturas M\u00ednimas\n\nSeja C uma cobertura m\u00ednima e seja C? = {(n1, k1), . . . , (nT , kT )}? ??C um subconjunto orde-\nnado dos pares que n\u00e3o aparecem em C. Seja tamb\u00e9m ? = {?n,k : (n, k) ?C?} o conjunto dos fatores\nde lifting calculados resolvendo a sequ\u00eancia K ={Kt : t = 1, . . . , T} de problemas semelhantes a Pcpl ,\n\nrecursivamente definidos por:\n\nKt : zt = Maximizar ?\n(n,k)?C\n\nxn,k +\nt?1\n?\nj=1\n\n?n j,k j xn j ,k j\n\nSujeito a :\n\n?\n(n,k)??t\n\nqn,k?1i xn,k ? q\nmax\ni\n\n?\n(n,k)??t??n\n\nxn,k ? 1 ?n ? N(?t )\n\nxnt ,kt = 1\n\nxn,k ?{0, 1} ?(n, k) ? ?t\n\n(5.16)\n\npara t = 1, . . . , T onde ?t = {(n j, k j) : j = 1, . . . ,t}?C e os coeficientes ?n j ,k j s\u00e3o definidos como:\n\n?n j ,k j = |C|?1?z j, j = 1, . . . ,t ?1. (5.17)\n\nUtilizamos agora nosso exemplo, com C = {(1, 4), (2, 2), (4, 4)}, C? = {(1, 5), (1, 6), (2, 3), (2, 4),\n\n(2, 5), (2, 6), (4, 5), (3, 4), (3, 5), (3, 6), (5, 4), (6, 4), (6, 5), (1, 2), (1, 3), (4, 2), (4, 3), (3, 2), (3, 3), (5, 2),\n\n(5, 3), (6, 2), (6, 3)}, e calculamos os fatores de lifting para os elementos em C?, na ordem apresen-\n\ntada. Para ilustrar, apresentamos a seguir o problema K1 resolvido para a obten\u00e7\u00e3o de ?1,5, onde\n?1 = {(1, 4), (2, 2), (4, 4), (1, 5)}:\n\nK1 : z1 = Max x1,4 + x2,2 + x4,4\n\nSujeito a :\n\n3x1,4 + 1x2,2 + 3x4,4 + 4x1,5 ? 6, 5\n\nx1,4 + x1,5 ? 1\n\nx2,2 ? 1\n\nx4,4 ? 1\n\nx1,5 = 1\n\nxn,k ?{0, 1},?(n, k) ? ?1\n\nA solu\u00e7\u00e3o do problema \u00e9 z1 = 1, e portanto ?1,5 = |C|?1?z1 = 3?1?1 = 1. Continuando\no processo iterativo para os outros 12 pares (n, k) em C?, obtemos os fatores de lifting mostrados na\n\nTabela 5.3. Note que os fatores ?n,k encontrados s\u00e3o exatamente iguais aos fatores ?n,k encontrados\n\n\n\n5. Solu\u00e7\u00e3o de P( /0) Utilizando Programa\u00e7\u00e3o Linear Inteira Mista 74\n\nTabela 5.3: Fatores de lifting exatos, ?n,k.\n\nt (n, k) zt ?n,k\n1 (1,5) 1 1\n2 (1,6) 1 1\n3 (2,3) 1 1\n4 (2,4) 1 1\n5 (2,5) 0 2\n6 (2,6) 0 2\n7 (4,5) 1 1\n8 (3,4) 1 1\n9 (3,5) 1 1\n10 (3,6) 1 1\n11 (5,4) 1 1\n12 (6,4) 1 1\n13 (6,5) 1 1\n\nt (n, k) zt ?n,k\n14 (1,2) 2 0\n15 (1,3) 2 0\n16 (4,2) 2 0\n17 (4,3) 2 0\n18 (3,2) 2 0\n19 (3,3) 2 0\n20 (5,2) 2 0\n21 (5,3) 2 0\n22 (6,2) 2 0\n23 (6,3) 2 0\n\nna se\u00e7\u00e3o anterior utilizando o Teorema 5.1 e mostrados na Tabela 5.2.\n\nProposi\u00e7\u00e3o 5.5 Se C \u00e9 uma cobertura m\u00ednima, C? ? ??C \u00e9 um subconjunto ordenado, e os coefi-\ncientes em ? s\u00e3o calculados atrav\u00e9s da solu\u00e7\u00e3o da sequ\u00eancia de problemas K , ent\u00e3o a desigualdade\n\n?\n(n,k)?C\n\nxn,k + ?\n(n,k)?C?\n\n?n,kxn,k ?|C|?1 (5.18)\n\n\u00e9 v\u00e1lida para Pcpl .\n\nProva: (Por indu\u00e7\u00e3o em t) Para a base, t = 1, existem duas possibilidades. Se xn1,k1 = 0, ent\u00e3o\n\n(5.18) se torna a desigualdade de cobertura (5.7), que \u00e9 v\u00e1lida. Se xn1,k1 = 1, ent\u00e3o (5.18) \u00e9 v\u00e1lida se\n\n?n1,k1 ?|C|?1?max{?(n,k)?C xn,k : s.a (5.16)} = |C|?1?z1 = ?n1,k1 por defini\u00e7\u00e3o.\n\nPara o passo de indu\u00e7\u00e3o, t > 1, existem tamb\u00e9m duas possibilidades. Se xnt ,kt = 0, ent\u00e3o (5.18)\n\n\u00e9 v\u00e1lida por indu\u00e7\u00e3o. Se xnt ,kt = 1, ent\u00e3o (5.18) \u00e9 v\u00e1lida se ?nt ,kt ? |C|?1?max{?(n,k)?C xn,k +\n?t?1j=1 ?n j,k j xn j ,k j : s.a (5.16)} = |C|?1?zt = ?nt ,kt por defini\u00e7\u00e3o. ?\n\nO procedimento descrito acima \u00e9 uma extens\u00e3o do procedimento de lifting sequencial para Pcpl .\n\nOs coeficientes ?n,k s\u00e3o fatores de lifting que dependem tanto de C como da ordem dos elementos\nde C? ? ??C. Apesar do c\u00e1lculo dos fatores em ? significar resolver problemas de complexidade\ncomparada a Pcpl , um limite superior ??n,k pode ser facilmente calculado para ?n,k .\n\nDefini\u00e7\u00e3o 5.8 Dada uma cobertura C, C?h \u00e9 um subconjunto de C tal que h ?{0, . . . ,|C|}, |C?h| = h, e\n\nmin{qn,k?1i : (n, k)?C?C?h}?max{q\nn,k?1\ni : (n, k)?C?h} quando 0 &lt;h &lt;|C|, i.e., C?h \u00e9 um subconjunto\n\ndos h elementos mais \u201cleves\u201d de C.\n\n\n\n5. Solu\u00e7\u00e3o de P( /0) Utilizando Programa\u00e7\u00e3o Linear Inteira Mista 75\n\nPara o nosso exemplo, com C = {(1, 4), (2, 2), (4, 4)}, temos que C?0 = /0, C?1 = {(2, 2)}, C?2 =\n{(1, 4), (2, 2)} e C?3 = {(1, 4), (2, 2), (4, 4)}.\n\nDefini\u00e7\u00e3o 5.9 Dada uma cobertura C, (n, k) ? C, e h ?{0, . . . ,|C|?1}, C?(n, k)h \u00e9 um subconjunto\n\nde C(n, k) tal que |C?(n, k)h| = h e min{q\nm, j?1\ni : (m, j) ? C(n, k)?C?(n, k)h}? max{q\n\nm, j?1\ni : (m, j) ?\n\nC?(n, k)h} quando 0 &lt;h &lt;|C|?1, i.e., C?(n, k)h \u00e9 um subconjunto dos h elementos mais \u201cleves\u201d de\n\nC(n, k).\n\nPara a cobertura C de nosso exemplo e (n, k) = (1, 4), temos que C?(1, 4)0 = /0, C?(1, 4)1 = {(2, 2)}\ne C?(1, 4)2 = {(2, 2), (4, 4)}.\n\nSeja ??n,k o valor de ?n,k se (n, k) = (n1, k1) e seja z\n?\nn,k o valor de K1.\n\nProposi\u00e7\u00e3o 5.6 Dada uma cobertura m\u00ednima C e (n, k) ? ??C, ??n,k = |C|?1?z\n?\nn,k onde z\n\n?\nn,k pode\n\nser calculado como segue:\n\nz?n,k =\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\nh? = arg max {?(C?h) ? qmaxi ?q\nn,k?1\ni } se n ? N ?N(C)\n\nh?{0,...,|C|?1}\n\nh? = arg max {?(C?(n, i)h) ? qmaxi ?q\nn,k?1\ni } se (n, i) ?C\n\nh?{0,...,|C|?1}\n\nProva: Se n ? N(C), ent\u00e3o x? obtido quando x?m, j = 1 para todo (m, j) ? C?(n, i)h? ?{(n, k)}, onde\n\n(n, i) ?C, e x?m, j = 0 para todo (m, j) ? ??C?(n, i)h? ?{(n, k)} \u00e9 fact\u00edvel para K1 e seu valor objetivo\n\u00e9 z1 = |C?(n, i)h?| = h\n\n? ? z?n,k. De fato, x\n? \u00e9 \u00f3timo porque n\u00e3o pode haver solu\u00e7\u00e3o fact\u00edvel com mais de\n\nh? elementos de C iguais a 1, portanto z1 = z\n?\nn,k . Similarmente, pode-se provar que isto \u00e9 satisfeito se\n\nn ? N ?N(C). ?\n\nEm nosso exemplo, para (n, k) = (1, 5), z?1,5 = arg max{?(C?(1, 4)h) ? 6, 5 ?q\n1,4\ni = 6, 5 ? 4 =\n\n2, 5}? z?1,5 = 1 e portanto ?\n?\n1,5 = |C|?1?z\n\n?\nn,k = 3?1?1 = 1. Para (n, k) = (3, 6), z\n\n?\n3,6 = arg max\n\n{?(C?h) ? 6, 5?q\n3,5\ni = 6, 5?5 = 1, 5}? z\n\n?\n3,6 = 1 e portanto ?\n\n?\n3,6 = 3?1?1 = 1. Procedendo da\n\nmesma maneira para todos os pares (n, k), obtemos os limites superiores ??n,k mostrados na Tabela\n5.4. Note que, para este exemplo, os limites inferiores ?n,k s\u00e3o iguais a ??n,k para todos os pares (n, k),\no que significa que ?n,k = ??n,k = ?n,k .\n\nNote que ?n,k depende da cobertura C mas n\u00e3o da ordem C?. Seja C?t a ordem obtida de C\n?\n\ncolocando um par (n, k) ? C? na t-\u00e9sima posi\u00e7\u00e3o, e seja ?n,k(C?t ) o respectivo fator de lifting. \u00c9\nevidente da estrutura do problema Kt que ?n,k(C?t ) \u00e9 n\u00e3o-crescente em t e ?n,k(C\n\n?\n1) = ?\n\n?\nn,k. Portanto,\n\n??n,k \u00e9 um limite superior para o fator de lifting de xn,k para qualquer sequ\u00eancia ordenada C\n? ? ??C,\n\ni.e. ??n,k ? ?n,k .\n\n\n\n5. Solu\u00e7\u00e3o de P( /0) Utilizando Programa\u00e7\u00e3o Linear Inteira Mista 76\n\nTabela 5.4: Limites superiores para os fatores de lifting, ??n,k.\n\n(n, k) z?n,k ?\n?\nn,k\n\n(1,5) 1 1\n(1,6) 1 1\n(2,3) 1 1\n(2,4) 1 1\n(2,5) 0 2\n(2,6) 0 2\n(4,5) 1 1\n(3,4) 1 1\n(3,5) 1 1\n(3,6) 1 1\n(5,4) 1 1\n(6,4) 1 1\n(6,5) 1 1\n\n(n, k) z?n,k ?\n?\nn,k\n\n(1,2) 2 0\n(1,3) 2 0\n(4,2) 2 0\n(4,3) 2 0\n(3,2) 2 0\n(3,3) 2 0\n(5,2) 2 0\n(5,3) 2 0\n(6,2) 2 0\n(6,3) 2 0\n\n5.4 Sobre os Fatores de Lifting\n\nAgora, mostramos que os fatores ?n,k da desigualdade (5.9) s\u00e3o iguais ou diferem de no m\u00e1ximo\numa unidade dos limites superiores dos fatores de lifting ??n,k. Para estabelecer formalmente esta\nrela\u00e7\u00e3o entre limites inferior e superior dos fatores de lifting, seja ?Ch = I\n\nC\nh ?J\n\nC\nh a parti\u00e7\u00e3o de ?\n\nC\nh\n\ndefinida no Teorema 5.1, h = 0, . . . , q, onde (n, k) ? ?Ch pertence a I\nC\nh se:\n\n?(C?(n, ?(n))|C|?h?1) + q\nn,k?1\ni ? q\n\nmax\ni (5.19)\n\nonde (n, ?(n)) ?C, e caso contr\u00e1rio (n, k) ? JCh . Similarmente, seja ?\nC?\nh = I\n\nC?\nh ?J\n\nC?\nh uma parti\u00e7\u00e3o de ?\n\nC?\nh\n\ndefinida no Teorema 5.1, h = 0, . . . , q, onde (n, k) ? ?C?h pertence a I\nC?\nh se:\n\n?(C?|C|?h?1) + q\nn,k?1\ni ? q\n\nmax\ni (5.20)\n\ne caso contr\u00e1rio (n, k) ? JC?h . Seja I\nC =\n\nSq\nh=0 I\n\nC\nh , J\n\nC =\nSq\n\nh=0 J\nC\nh , I\n\nC? =\nSq\n\nh=0 I\nC?\nh e J\n\nC? =\nSq\n\nh=0 J\nC?\nh . Seja\n\ntamb\u00e9m I = IC ?IC? e J = JC ?JC?. Note que as condi\u00e7\u00f5es (5.19) e (5.20) s\u00e3o vers\u00f5es n\u00e3o estritas das\n\ncondi\u00e7\u00f5es (iv) e (v) do Teorema 5.1.\n\nProposi\u00e7\u00e3o 5.7 Para qualquer face de Pcpl = conv(Xcpl ) obtida atrav\u00e9s de lifting sequencial a partir\n\nde uma cobertura m\u00ednima C,\n\n??n,k =\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?n,k, (n, k) ? I\n\n?n,k + 1, (n, k) ? J\n\n\n\n5. Solu\u00e7\u00e3o de P( /0) Utilizando Programa\u00e7\u00e3o Linear Inteira Mista 77\n\nProva: (Caso 1) Seja (n, k) ? ICh . Se h = 0, de (5.19) temos ?(C?(n, ?(n))|C|?h?1) + q\nn,k?1\ni ? q\n\nmax\ni ?\n\n?(C?(n, ?(n))|C|?1 ) ? qmaxi ?q\nn,k?1\ni onde (n, ?(n)) ?C e, portanto, da Proposi\u00e7\u00e3o 5.6, z\n\n?\nn,k = |C|?1 ?\n\n??n,k = h = ?n,k . Se h > 0, ent\u00e3o da defini\u00e7\u00e3o de ?n,k:\n\n?(C(n, ?(n))h?1) + q\nn,?(n)?1\ni ? q\n\nn,k?1\ni\n\ne como C \u00e9 uma cobertura,\n\nqmaxi &lt;?(C) = ?(C?(n, ?(n))|C|?h ) + ?(C(n, ?(n))h?1) + q\nn,?(n)?1\ni\n\n? ?(C?(n, ?(n))|C|?h ) + q\nn,k?1\ni\n\nDesta desigualdade e porque a condi\u00e7\u00e3o (5.19) \u00e9 satisfeita, deduzimos que:\n\n?(C?(n, ?(n))|C|?(h+1)) ? q\nmax\ni ?q\n\nn,k?1\ni &lt;?(C?(n, ?(n))|C|?h)\n\ne, da Proposi\u00e7\u00e3o 5.6, conclu\u00edmos que z?n,k = |C|?(h + 1) ? ?\n?\nn,k = h = ?n,k .\n\n(Caso 2) Seja (n, k)? IC?h . Da defini\u00e7\u00e3o de ?n,k temos que ?(Ch)?q\nn,k?1\ni e como C \u00e9 uma cobertura\n\n?(C?|C|?h) > qmaxi ?q\nn,k?1\ni . Desta desigualdade e porque a condi\u00e7\u00e3o (5.20) \u00e9 satisfeita, segue que\n\n?(C?|C|?(h+1)) ? q\nmax\ni ?q\n\nn,k?1\ni &lt;?(C?|C|?h)\n\ne, portanto, da Proposi\u00e7\u00e3o 5.6, z?n,k = |C|?(h + 1) ? ?\n?\nn,k = h = ?n,k.\n\n(Caso 3) Seja (n, k) ? JC?h . Da defini\u00e7\u00e3o de ?n,k temos que ?(Ch+1) > q\nn,k?1\ni e como C \u00e9 uma\n\ncobertura ?(C?|C|?(h+2)) ? qmaxi ?q\nn,k?1\ni . Desta desigualdade e porque (5.20) n\u00e3o \u00e9 satisfeita,\n\n?(C?|C|?(h+2)) ? q\nmax\ni ?q\n\nn,k?1\ni &lt;?(C?|C|?(h+1))\n\ne, da Proposi\u00e7\u00e3o 5.6, z?n,k = |C|?(h + 2) ? ?\n?\nn,k = h + 1 = ?n,k + 1.\n\n(Caso 4) Seja (n, k)?JCh . Da defini\u00e7\u00e3o de ?n,k, ?(C(n, ?(n))h)+ q\nn,?(n)?1\ni > q\n\nn,k?1\ni e como C \u00e9 uma\n\ncobertura segue que ?(C?(n, ?(n))|C|?(h+2)) ? qmaxi ?q\nn,k?1\ni . Desta desigualdade e porque a condi\u00e7\u00e3o\n\n(5.19) n\u00e3o \u00e9 satisfeita, deduzimos que:\n\n?(C?(n, ?(n))|C|?(h+2)) ? q\nmax\ni ?q\n\nn,k?1\ni &lt;?(C?(n, ?(n))|C|?(h+1))\n\ne, da Proposi\u00e7\u00e3o 5.6, conclu\u00edmos que z?n,k = |C|?(h + 2) ? ?\n?\nn,k = h + 1 = ?n,k + 1. ?\n\nObserve que JC0 = /0 se C \u00e9 uma cobertura m\u00ednima e J\nC\n0 ?J\n\nC?\n0 = /0 se C \u00e9 forte. O significado do\n\nresultado acima \u00e9 que par\u00e2metros ?n,k da desigualdade (5.9) est\u00e3o distantes no m\u00e1ximo de 1 unidade\ndo limite superior ??n,k, qualquer que seja a desigualdade (5.18) obtida atrav\u00e9s de lifting sequencial da\ndesigualdade de cobertura (5.7). Na verdade outro resultado pode ser estabelecido relacionando os\n\n\n\n5. Solu\u00e7\u00e3o de P( /0) Utilizando Programa\u00e7\u00e3o Linear Inteira Mista 78\n\nverdadeiros fatores de lifting ?n,k e os par\u00e2metros ?n,k. Para qualquer desigualdade submetida a lifting\nsequencial (5.9) obtida de uma cobertura m\u00ednima C e de acordo com qualquer ordem C????C, pode\nser mostrado que ?n,k = ?n,k para todo (n, k) ? I, e ?n,k ?{?n,k, ?n,k + 1} para todo (n, k) ? J.\n\nUtilizamos agora nosso exemplo para ilustrar a Proposi\u00e7\u00e3o 5.7 com dois elementos pertencentes\n\na ?Ch e ?\nC?\nh , (1, 4) e (5, 4) respectivamente:\n\n?(C?(1, 4)1) + q\n1,3\ni = 1 + 3 = 4 ? 6, 5 = q\n\nmax\ni ? (1, 4) ? I\n\nC\n1\n\n?(C?1) + q\n5,3\ni = 1 + 3 = 4 ? 6, 5 = q\n\nmax\ni ? (5, 4) ? I\n\nC?\n1\n\nRepetindo o racioc\u00ednio para todos os pares (n, k) restantes, conclu\u00edmos que J = /0, ou seja, ??n,k = ?n,k\npara todo (n, k) ? ?, corroborando os resultados mostrados nas Tabelas 5.2, 5.3 e 5.4.\n\n5.5 Resultados Num\u00e9ricos\n\nEsta se\u00e7\u00e3o cont\u00e9m os resultados de uma s\u00e9rie de experimentos computacionais realizados com\n\no intuito de testar a efici\u00eancia das desigualdades de cobertura. As 16 inst\u00e2ncias do problema foram\n\nobtidas variando o n\u00famero de po\u00e7os de 32 a 128 e a taxa dispon\u00edvel de inje\u00e7\u00e3o de g\u00e1s. As W PCs\n\nobedecem aos padr\u00f5es tipicamente observados na pr\u00e1tica. Com respeito \u00e0 lineariza\u00e7\u00e3o por partes, as\n\nW PCs foram aproximadas por 19 segmentos, i.e., ?(n) = 19 para cada n, e satisfazem as condi\u00e7\u00f5es\nimpostas na Hip\u00f3tese 5.1.\n\nPara analisar o impacto das desigualdades de cobertura no desempenho de algoritmos comerciais\n\ne n\u00e3o-comerciais, realizamos os seguintes passos para cada inst\u00e2ncia:\n\n1) resolver a inst\u00e2ncia de Pcpl utilizando o ILOG CPLEX Version 9.0 (ILOG Inc., 2003);\n\n2) resolver iterativamente a relaxa\u00e7\u00e3o cont\u00ednua de Pcpl com um resolvedor de PL (programa\u00e7\u00e3o\n\nlinear), procurando repetidamente uma cobertura C e calculando fatores ?n,k de modo que a\ndesigualdade resultante (5.9) \u201ccorta\u201d as solu\u00e7\u00f5es fracion\u00e1rias, parando apenas quando um plano\n\nde corte n\u00e3o for encontrado;\n\n3) resolver a inst\u00e2ncia de Pcpl aumentada com estes cortes utilizando ILOG CPLEX; e\n\n4) repetir os passos 1 a 3 mas desta vez utilizando o GNU MILP Solver [21], que realiza uma\n\nbusca branch-and-bound pura.\n\nA Tabela 5.5 mostra os resultados obtidos dos experimentos conduzidos com o ILOG CPLEX.\n\nPara cada inst\u00e2ncia, a tabela mostra o n\u00famero de po\u00e7os e a taxa dispon\u00edvel de inje\u00e7\u00e3o de g\u00e1s de\n\neleva\u00e7\u00e3o, o n\u00famero de n\u00f3s de branch-and-bound, n\u00famero de itera\u00e7\u00f5es (opera\u00e7\u00f5es de pivoteamento),\n\n\n\n5. Solu\u00e7\u00e3o de P( /0) Utilizando Programa\u00e7\u00e3o Linear Inteira Mista 79\n\nTabela 5.5: Experimentos com ILOG CPLEX\nsem cortes com cortes\n\nN qmaxi n\u00f3s itera\u00e7\u00f5es tempo (s) n\u00f3s itera\u00e7\u00f5es tempo (s)\n300 3.056 3.573 0,82 0 5 0,01\n500 654 866 0,35 0 6 0,01\n\n32 700 7.272 9.988 3,86 0 18 0,01\n1100 8.050 1.329 4,53 0 27 0,02\n1500 1.537 2.981 1,26 0 33 0,01\n\n700 176.621 229.908 189,35 0 15 0,02\n1100 770.838 1.173.700 1.161,95 0 18 0,03\n\n64 2300 852.902 1.697.571 1.917,00 0 43 0,03\n2700 230.089 449.970 523,01 0 50 0,04\n3500 58.948 113.675 130,61 0 72 0,04\n1100 22.724.941 28.296.248 73.949,20 0 24 0,05\n1500 21.011.913 26.031.027 54.594,99 0 28 0,02\n\n128 1900 18.514.993 23.204.919 47.346,40 0 35 0,05\n3100 43.742.914 65.654.963 115.245,77 0 65 0,06\n3500 18.769.706 31.618.407 53.069,40 0 76 0,05\n7000 815.574 2.646.970 2.976,54 0 132 0,07\n\nM\u00e9dia 7.980.625 11.321.005 21.944,69 0 40 0,03\n\ne tempo computacional para duas formula\u00e7\u00f5es, Pcpl e Pcpl aumentada com as desigualdades (5.9).\n\nOs experimentos foram realizados com uma esta\u00e7\u00e3o de trabalho equipada com um microprocessador\n\nPentium IV de 2.5GHz, 1 GB de RAM, e com sistema operacional GNU/Linux.\n\nOs resultados indicam que as desigualdades de cobertura podem reduzir o tempo computacional e\n\nuso de mem\u00f3ria drasticamente, demonstrando que podem acelerar a solu\u00e7\u00e3o do problema de aloca\u00e7\u00e3o\n\n\u00f3tima de g\u00e1s de eleva\u00e7\u00e3o.\n\nNormalmente, os resolvedores comerciais pre-processam a inst\u00e2ncia do problema de modo a for-\n\ntalecer sua formula\u00e7\u00e3o com cortes gerais e restri\u00e7\u00f5es l\u00f3gicas. Sendo assim, repetimos os experimentos\n\ncitados acima utilizando desta vez um algoritmo de branch-and-bound puro. Nossa inten\u00e7\u00e3o era con-\n\nfirmar o m\u00e9rito intr\u00ednseco das desigualdades de cobertura e avaliar o potencial de uso de um software\n\nde dom\u00ednio p\u00fablico. Realizamos os mesmos passos com exce\u00e7\u00e3o de que as inst\u00e2ncias de Pcpl , sejam\n\npuras ou aumentadas com desigualdades de cobertura, foram resolvidas com o GNU MILP solver.\n\nA Tabela 5.6 mostra os resultados destes experimentos. Os experimentos corroboram os resulta-\n\ndos obtidos com CPLEX: os cortes baseados nas coberturas diminu\u00edram expressivamente o n\u00famero de\n\nn\u00f3s de branch-and-bound, bem como o tempo computacional. O processo de solu\u00e7\u00e3o das inst\u00e2ncias\n\nmarcadas com \u201c?\u201d e sem cortes foi interrompido ap\u00f3s aproximadamente 100 horas de processamento.\n\n\n\n5. Solu\u00e7\u00e3o de P( /0) Utilizando Programa\u00e7\u00e3o Linear Inteira Mista 80\n\nTabela 5.6: Experimentos com GNU MILP solver\nsem cortes com cortes\n\nN qmaxi n\u00f3s itera\u00e7\u00f5es tempo (s) n\u00f3s itera\u00e7\u00f5es tempo (s)\n300 18.855 17.335 25,79 1 11 0,03\n500 2.661 2.632 3,52 1 18 0,03\n\n32 700 16.415 19.524 31,81 1 22 0,03\n1100 21.795 29.909 36,76 1 34 0,03\n1500 5.349 7.833 7,99 1 47 0,04\n700 336.797 414.087 4.963,70 1 22 0,10\n\n1100 1.472.805 1.878.569 66.297,01 1 36 0,11\n64 2300 1.894.961 3.394.994 99.381,49 1 77 0,12\n\n2700 739.913 1.250.173 15.111,32 1 94 0,14\n3500 264.577 523.835 3.070,23 1 126 0,15\n\n1100? 29.676.288 48.484.213 384.948,77 1 36 0,16\n1500? 29.565.486 49.945.930 389.406,36 1 47 0,16\n\n128 1900? 28.452.225 45.765.938 357.409,19 1 60 0,17\n3100? 28.584.317 45.797.646 357.409,52 1 99 0,18\n3500? 28.412.763 45.673.329 356.700,35 1 111 0,19\n7000 1.358.067 6.094.626 19.841,12 1 243 0,23\n\nM\u00e9dia 9.426.454 15.581.285 128.415,30 1 68 0,12\n\n5.6 Sum\u00e1rio\n\nNeste cap\u00edtulo, foi realizada a lineariza\u00e7\u00e3o por partes das fun\u00e7\u00f5es n\u00e3o-lineares do problema de\n\naloca\u00e7\u00e3o \u00f3tima de taxas de inje\u00e7\u00e3o de g\u00e1s de eleva\u00e7\u00e3o sob uma \u00fanica restri\u00e7\u00e3o, i.e., a taxa m\u00e1xima\n\ndispon\u00edvel para inje\u00e7\u00e3o de g\u00e1s. Atrav\u00e9s da an\u00e1lise deste novo problema foi poss\u00edvel encontrar fam\u00edlias\n\nde desigualdades v\u00e1lidas que mostraram-se muito eficientes na redu\u00e7\u00e3o do tempo de resposta de\n\nalgoritmos comerciais e n\u00e3o-comerciais que resolvem problemas de otimiza\u00e7\u00e3o linear inteira mista.\n\nOs resultados desta se\u00e7\u00e3o foram publicados em [8] e [30].\n\n\n\nCap\u00edtulo 6\n\nSolu\u00e7\u00e3o de P5( /0) Utilizando\nPrograma\u00e7\u00e3o Linear Inteira Mista\n\nNeste cap\u00edtulo, s\u00e3o inseridas novas restri\u00e7\u00f5es ao problema tratado no Cap\u00edtulo 5, de modo a\n\ntorn\u00e1-lo mais abrangente. Mais especificamente, abordamos a vers\u00e3o do problema de aloca\u00e7\u00e3o \u00f3tima\n\nde g\u00e1s de eleva\u00e7\u00e3o sob m\u00faltiplas restri\u00e7\u00f5es nas instala\u00e7\u00f5es de superf\u00edcie, chamado P5( /0). Novamente,\nas curvas de desempenho de gas-lift s\u00e3o linearizadas por partes (o Modelo I mostrado no Cap\u00edtulo\n\n2 \u00e9 utilizado pois o Modelo III ainda n\u00e3o era de nosso conhecimento) e desigualdades v\u00e1lidas s\u00e3o\n\nobtidas e introduzidas na formula\u00e7\u00e3o. A efici\u00eancia destas desigualdades na acelera\u00e7\u00e3o do processo de\n\nsolu\u00e7\u00e3o \u00e9 testada e comprovada atrav\u00e9s de experimentos num\u00e9ricos.\n\n6.1 Formula\u00e7\u00e3o do Problema\n\nO problema P5( /0)1 de aloca\u00e7\u00e3o \u00f3tima de uma taxa dispon\u00edvel de inje\u00e7\u00e3o de g\u00e1s de eleva\u00e7\u00e3o,\nsujeito a restri\u00e7\u00f5es nas capacidades de separa\u00e7\u00e3o, armazenamento e tratamento de fluidos \u00e9 formulado\n\n1O superscrito 5 denota o n\u00famero de restri\u00e7\u00f5es representadas pela formula\u00e7\u00e3o.\n\n\n\n6. Solu\u00e7\u00e3o de P5( /0) Utilizando Programa\u00e7\u00e3o Linear Inteira Mista 82\n\ncomo:\n\nP5( /0) : Maximizar f =\nN\n\n?\nn=1\n\n(po?no + pg?\nn\ng ? pw?\n\nn\nw)q\n\nn\np ? piq\n\nn\ni (6.1a)\n\nSujeito a:\n\nqnp = q?\nn\np(q\n\nn\ni ), n = 1, . . . , N (6.1b)\n\nN\n\n?\nn=1\n\nqni 6 q\nmax\ni (6.1c)\n\nN\n\n?\nn=1\n\nqnp 6 q\nmax\np (6.1d)\n\nN\n\n?\nn=1\n\nqno =\nN\n\n?\nn=1\n\n?noq\nn\np 6 q\n\nmax\no (6.1e)\n\nN\n\n?\nn=1\n\nqng =\nN\n\n?\nn=1\n\n?ngq\nn\np 6 q\n\nmax\ng (6.1f)\n\nN\n\n?\nn=1\n\nqnw =\nN\n\n?\nn=1\n\n?nwq\nn\np 6 q\n\nmax\nw (6.1g)\n\nlnyn 6 q\nn\ni 6 unyn, n = 1, . . . , N (6.1h)\n\nyn ?{0, 1}, n = 1, . . . , N (6.1i)\n\nonde:\n\n\u2022 f \u00e9 a fun\u00e7\u00e3o objetivo a ser maximizada;\n\n\u2022 ?no, ?\nn\ng e ?\n\nn\nw s\u00e3o as fra\u00e7\u00f5es produzidas de \u00f3leo, g\u00e1s e \u00e1gua respectivamente, sendo que ?\n\nn\no + ?\n\nn\ng +\n\n?nw = 1;\n\n\u2022 po e pg representam respectivamente o lucro obtido com a venda de cada unidade de volume de\n\n\u00f3leo e g\u00e1s, pw \u00e9 o custo de tratamento por unidade de volume de \u00e1gua produzida, e pi representa\n\no custo da inje\u00e7\u00e3o de g\u00e1s por unidade de volume por tempo;\n\n\u2022 N \u00e9 o n\u00famero de po\u00e7os que operam via gas-lift;\n\n\u2022 qnp \u00e9 a taxa de produ\u00e7\u00e3o de fluidos de um po\u00e7o n como fun\u00e7\u00e3o de q\nn\ni , onde q?\n\nn\np(q\n\nn\ni ) \u00e9 a W PC do\n\npo\u00e7o n;\n\n\u2022 qni \u00e9 a taxa de inje\u00e7\u00e3o de g\u00e1s alocada para o po\u00e7o n;\n\n\u2022 qmaxi , q\nmax\np , q\n\nmax\no , q\n\nmax\ng e q\n\nmax\nw s\u00e3o respectivamente a taxa de inje\u00e7\u00e3o de g\u00e1s dispon\u00edvel, a taxa\n\nde produ\u00e7\u00e3o total m\u00e1xima (representando a capacidade de separa\u00e7\u00e3o de fluidos), e as taxas\n\nm\u00e1ximas de produ\u00e7\u00e3o de \u00f3leo, g\u00e1s e \u00e1gua (representando os limites de armazenamento e/ou\n\ntratamento destes fluidos);\n\n\n\n6. Solu\u00e7\u00e3o de P5( /0) Utilizando Programa\u00e7\u00e3o Linear Inteira Mista 83\n\n\u2022 yn \u00e9 uma vari\u00e1vel bin\u00e1ria que assume valor 1 se o po\u00e7o n est\u00e1 ativo, e 0 caso contr\u00e1rio;\n\n\u2022 ln e un s\u00e3o respectivamente os limites inferior e superior para a taxa de inje\u00e7\u00e3o do po\u00e7o n,\n\nimpostos por quest\u00f5es t\u00e9cnicas ou estrat\u00e9gicas.\n\nDado um conjunto Qn = {(qn,0i , q\nn,0\np ), . . . , (q\n\nn,?(n)\ni , q\n\nn,?(n)\np )} de ?(n) + 1 pontos de W PC para cada\n\npo\u00e7o n = 1, . . . , N, com (qn,0i , q\nn,0\np ) = (0, 0) e q\n\nn,k?1\ni &lt;q\n\nn,k\ni para k = 1, . . . , ?(n), a W PC q?\n\nn\np(q\n\nn\ni ) pode ser\n\nrepresentada como uma fun\u00e7\u00e3o linear por partes utilizando o Modelo I (Se\u00e7\u00e3o 2.3.1). Introduzindo\n\nvari\u00e1veis bin\u00e1rias x e vari\u00e1veis cont\u00ednuas ?, \u00e9 poss\u00edvel representar qualquer ponto da fun\u00e7\u00e3o linear\npor partes como:\n\nxn,k =\n\n{\n\n1 se qn,k?1i 6 q\nn\ni 6 q\n\nn,k\ni\n\n0 caso contr\u00e1rio\n(6.2a)\n\nqni = ?n,k?1q\nn,k?1\ni + ?n,kq\n\nn,k\ni (6.2b)\n\nqnp = ?n,k?1q\nn,k?1\np + ?n,kq\n\nn,k\np (6.2c)\n\n?n,k?1 + ?n,k = 1 (6.2d)\n\n?n,k?1, ?n,k ? 0 (6.2e)\n\nLinearizando as WPCs como mostrado nas equa\u00e7\u00f5es (6.2a)\u2013(6.2e) e ilustrado pela Figura 6.1, o\n\nproblema P5( /0) ou simplesmente P5 pode ser reformulado como um problema de programa\u00e7\u00e3o linear\n\n\n\n6. Solu\u00e7\u00e3o de P5( /0) Utilizando Programa\u00e7\u00e3o Linear Inteira Mista 84\n\ninteira mista:\n\nP5pl : Maximizar f =\nN\n\n?\nn=1\n\nfn(q\nn\ni , q\n\nn\np) (6.3a)\n\nSujeito a:\nN\n\n?\nn=1\n\nqny ? q\nmax\ny , y = i, p, o, g, w (6.3b)\n\nPara n = 1, . . . , N :\n\n?n,k ? 0, k = 0, . . . , ?(n) (6.3c)\n\n?n,0 ? xn,1 (6.3d)\n\n?n,1 ? xn,2 (6.3e)\n\n?n,k ? xn,k + xn,k+1, k = 2, . . . , ?(n)?1 (6.3f)\n\n?n,?(n) ? xn,?(n) (6.3g)\n?(n)\n\n?\nk=0\n\n?n,k = 1 (6.3h)\n\n?(n)\n\n?\nk=1\n\nxn,k = 1 (6.3i)\n\nqni =\n?(n)\n\n?\nk=0\n\nqn,ki ?n,k (6.3j)\n\nqnp =\n?(n)\n\n?\nk=0\n\nqn,kp ?n,k (6.3k)\n\nqny = ?\nn\ny q\n\nn\np, y = o, g, w (6.3l)\n\nqni , q\nn\np, q\n\nn\no, q\n\nn\ng, q\n\nn\nw ? R (6.3m)\n\n?n,k ? R, k = 0, . . . , ?(n) (6.3n)\n\nxn,k ?{0, 1}, k = 1, . . . , ?(n) (6.3o)\n\nonde:\n\n\u2022 a fun\u00e7\u00e3o (6.3a) \u00e9 a fun\u00e7\u00e3o objetivo a ser maximizada;\n\n\u2022 a desigualdade (6.3b) representa as restri\u00e7\u00f5es nas instala\u00e7\u00f5es de superf\u00edcie, i.e., os limites im-\n\npostos pela taxa de inje\u00e7\u00e3o dispon\u00edvel (qmaxi ), capacidade de separa\u00e7\u00e3o (q\nmax\np ), e armazena-\n\nmento/tratamento de \u00f3leo, g\u00e1s e \u00e1gua (qmaxo , q\nmax\ng e q\n\nmax\nw respectivamente);\n\n\u2022 a restri\u00e7\u00e3o (6.3c) faz com que as vari\u00e1veis ?n,k sejam n\u00e3o-negativas, enquanto (6.3d)-(6.3g)\nfor\u00e7am as vari\u00e1veis ?n,k a serem consecutivas, e (6.3h) significa que sua soma deve ser igual a\num;\n\n\n\n6. Solu\u00e7\u00e3o de P5( /0) Utilizando Programa\u00e7\u00e3o Linear Inteira Mista 85\n\n0\n\n(q1i , q\n1\np)\n\n(q2i , q\n2\np)\n\n(q3i , q\n3\np)\n\n(q4i , q\n4\np)\n\n(q5i , q\n5\np)\n\n(q6i , q\n6\np)\n\nx1 x2 x3 x4 x5 x6\n\n?n,1\n?n,2\n\n?n,5\n\n?n,6\n\nqi\n\nqp\n\nq1i q\n2\ni\n\nq1p\n\nq2p\n\nq\n?(n)\ni\n\nFigura 6.1: Ilustra\u00e7\u00e3o da lineariza\u00e7\u00e3o por partes da fun\u00e7\u00e3o do fluxo de sa\u00edda de um po\u00e7o n utilizando\no modelo de pesos por ponto (Se\u00e7\u00e3o 2.3.1).\n\n\u2022 a equa\u00e7\u00e3o (6.3i) significa que a taxa de inje\u00e7\u00e3o de g\u00e1s para um po\u00e7o n deve pertencer apenas a\n\num determinado intervalo k;\n\n\u2022 as equa\u00e7\u00f5es (6.3j) e (6.3k) definem a taxa de inje\u00e7\u00e3o de g\u00e1s e a taxa de produ\u00e7\u00e3o de um po\u00e7o n\n\ncomo a combina\u00e7\u00e3o convexa dos pontos discretos qn,ki e q\nn,k\np respectivamente; e\n\n\u2022 a equa\u00e7\u00e3o (6.3l) expressa as taxas de \u00f3leo, g\u00e1s e \u00e1gua produzidas pelo po\u00e7o n como fun\u00e7\u00f5es da\n\ntaxa de produ\u00e7\u00e3o e de suas respectivas fra\u00e7\u00f5es.\n\nPara cada po\u00e7o n ? N = {1, . . . , N}, os limites ln e un dados pela desigualdade (6.1h) podem ser\n\nmodelados definindo qn,1i = ln e q\nn,?(n)\ni = un, eliminando assim pontos que estejam fora da zona opera-\n\ncional. N\u00e3o existe taxa de inje\u00e7\u00e3o fact\u00edvel entre qn,0i = 0 e q\nn,1\ni , ou seja, xn,1 = 1 implica que ?n,0 = 1\n\ne qni = 0, e portanto o po\u00e7o n n\u00e3o recebe inje\u00e7\u00e3o de g\u00e1s. Assumimos tamb\u00e9m que q\nn,?(n)\ni ? q\n\nmax\ni\n\ne que max{qn,kp : k = 1, . . . , ?(n)} 6 min{qmaxp ,\nqmaxo\n?no\n\n,\nqmaxg\n?ng\n\n,\nqmaxw\n?nw\n} para todo n ? N , eliminando pontos\n\ndesnecess\u00e1rios.\n\nComo citado no Cap\u00edtulo 5, na maximiza\u00e7\u00e3o de uma fun\u00e7\u00e3o c\u00f4ncava linear por partes n\u00e3o \u00e9\n\nnecess\u00e1rio for\u00e7ar que as vari\u00e1veis x sejam inteiras, i.e., as vari\u00e1veis ? diferentes de zero s\u00e3o sempre\nconsecutivas [31]. Sendo assim, o problema pode ser simplificado eliminando as vari\u00e1veis bin\u00e1rias x\n\ne resolvido de forma eficiente com algoritmos de programa\u00e7\u00e3o linear. Para o problema P5pl , a fun\u00e7\u00e3o\n\nobjetivo \u00e9 separ\u00e1vel mas n\u00e3o-c\u00f4ncava devido \u00e0 regi\u00e3o infact\u00edvel entre qn,0i e q\nn,1\ni . Al\u00e9m disso, a WPC\n\nlinearizada por partes n\u00e3o \u00e9 necessariamente c\u00f4ncava. Contudo, se a fun\u00e7\u00e3o objetivo de um po\u00e7o n\n\n\u00e9 c\u00f4ncava no intervalo [qn,1i , q\nn,?(n)\ni ], o n\u00famero de vari\u00e1veis discretas cai de ?(n) para 1. Em outras\n\npalavras, xn,1 seria a \u00fanica vari\u00e1vel necess\u00e1ria, assumindo valor 1 se o po\u00e7o n estivesse inativo, e caso\n\n\n\n6. Solu\u00e7\u00e3o de P5( /0) Utilizando Programa\u00e7\u00e3o Linear Inteira Mista 86\n\ncontr\u00e1rio assumindo valor 0. As condi\u00e7\u00f5es para que esta simplifica\u00e7\u00e3o possa ser realizada s\u00e3o dadas\n\nem [10], [7].\n\nUma formula\u00e7\u00e3o mais compacta de P5pl pode ser obtida eliminando as vari\u00e1veis redundantes e\n\nigualdades impl\u00edcitas como segue:\n\nxn,1 = 1?\n?(n)\n\n?\nk=2\n\nxn,k (6.4a)\n\n?n,0 = xn,1 (6.4b)\n\n?n,1 = 1??n,0?\n?(n)\n\n?\nk=2\n\n?n,k =\n?(n)\n\n?\nk=2\n\n(xn,k ??n,k) (6.4c)\n\nqni =\n?(n)\n\n?\nk=2\n\n(\n\nqn,1i xn,k + (q\nn,k\ni ?q\n\nn,1\ni )?n,k\n\n)\n\n(6.4d)\n\nqnp =\n?(n)\n\n?\nk=2\n\n(\n\nqn,1p xn,k + (q\nn,k\np ?q\n\nn,1\np )?n,k\n\n)\n\n(6.4e)\n\nqny = ?\nn\ny\n\n?(n)\n\n?\nk=2\n\n(\n\nqn,1p xn,k + (q\nn,k\np ?q\n\nn,1\np )?n,k\n\n)\n\n, y = o, g, w (6.4f)\n\n\n\n6. Solu\u00e7\u00e3o de P5( /0) Utilizando Programa\u00e7\u00e3o Linear Inteira Mista 87\n\nSubstituindo as express\u00f5es (6.4a)\u2013(6.4f) por suas vari\u00e1veis correspondentes em P5pl , a seguinte for-\n\nmula\u00e7\u00e3o compacta \u00e9 obtida:\n\nP5cpl : Maximizar f =\nN\n\n?\nn=1\n\n?(n)\n\n?\nk=2\n\n( fn,1xn,k + ( fn,k ? fn,1)?n,k) (6.5a)\n\nSujeito a :\n\nPara y = i, p, o, g, w : (6.5b)\n\nN\n\n?\nn=1\n\n?(n)\n\n?\nk=2\n\n(\n\nqn,1y xn,k + (q\nn,k\ny ?q\n\nn,1\ny )?n,k\n\n)\n\n6 qmaxy\n\nPara n = 1, . . . , N :\n\n?(n)\n\n?\nk=2\n\nxn,k 6 1 (6.5c)\n\n?(n)\n\n?\nk=2\n\nxn,k ?\n?(n)\n\n?\nk=2\n\n?n,k > 0 (6.5d)\n\n?(n)\n\n?\nk=3\n\nxn,k ?\n?(n)\n\n?\nk=2\n\n?n,k 6 0 (6.5e)\n\nPara k = 2, . . . , ?(n)?1 :\n\n?n,k 6 xn,k + xn,k+1 (6.5f)\n\n?n,?(n) 6 xn,?(n) (6.5g)\n\nPara k = 2, . . . , ?(n) :\n\n?n,k > 0 (6.5h)\n\n?n,k ? R (6.5i)\n\nxn,k ?{0, 1} (6.5j)\n\nonde fn,k = fn(q\nn,k\ni , q\n\nn,k\np ), q\n\nn,k\no = ?noq\n\nn,k\np , q\n\nn,k\ng = ?ngq\n\nn,k\np e q\n\nn,k\nw = ?nwq\n\nn,k\np , implicando em q\n\nn,k\no + q\n\nn,k\ng + q\n\nn,k\nw =\n\n(?no + ?\nn\ng + ?\n\nn\nw)q\n\nn,k\np = q\n\nn,k\np . Note que a desigualdade (6.5c), a restri\u00e7\u00e3o (6.5j) e a igualdade (6.4a)\n\ngarantem que xn,1 ?{0, 1} e, portanto, ?n,0 ?{0, 1} como definido na equa\u00e7\u00e3o (6.4b). Al\u00e9m disso, a\ndesigualdade (6.5d) garante que ?n,1 ? 0, enquanto a desigualdade (6.5e) e a restri\u00e7\u00e3o (6.5j) garantem\nque ?n,1 ? 1.\n\nOs problemas de otimiza\u00e7\u00e3o P5, P5pl e P\n5\ncpl pertencem \u00e0 classe de problemas NP-Dif\u00edceis\n\n2 [16].\n\nPortanto, n\u00e3o h\u00e1 e as evid\u00eancias da literatura at\u00e9 o momento indicam que n\u00e3o haver\u00e1 algoritmo capaz\n\nde resolver P5 em tempo polinomial. Tempo computacional n\u00e3o \u00e9 considerado um problema para a\n\nind\u00fastria de petr\u00f3leo atual, devido \u00e0 din\u00e2mica lenta do mercado e aos longos per\u00edodos entre testes dos\n\npo\u00e7os. No entanto, a tecnologia de medidores de press\u00e3o de fundo e sensores multif\u00e1sicos est\u00e1 se\n\ntornando mais avan\u00e7ada, indicando que o controle autom\u00e1tico dos po\u00e7os \u00e9 uma tend\u00eancia promissora.\n\n2Isto pode ser mostrado via redu\u00e7\u00e3o de um problema da mochila para P5, como nos cap\u00edtulos anteriores.\n\n\n\n6. Solu\u00e7\u00e3o de P5( /0) Utilizando Programa\u00e7\u00e3o Linear Inteira Mista 88\n\nSendo assim, algoritmos r\u00e1pidos se tornam imperativos caso a otimiza\u00e7\u00e3o em tempo real se torne\n\nnecess\u00e1ria.\n\n6.2 Desigualdades V\u00e1lidas para P5( /0)\n\nPara facilitar a leitura, esta se\u00e7\u00e3o apresenta um n\u00famero limitado de resultados te\u00f3ricos e n\u00e3o apre-\n\nsenta todas as demonstra\u00e7\u00f5es, visto que muitas delas seguem os mesmos moldes daquelas contidas\n\nno Cap\u00edtulo 5.\n\nPara simplificar os desenvolvimentos a seguir, introduzimos a seguinte nota\u00e7\u00e3o:\n\n\u2022 xn = {xn,k : k = 2, . . . , ?(n)};\n\n\u2022 x = {xn : n = 1, . . . , N};\n\n\u2022 ?n = {?n,k : k = 2, . . . , ?(n)};\n\n\u2022 ? = {?n : n = 1, . . . , N}; e\n\n\u2022 K = ?Nn=1 ?(n).\n\nUtilizando esta nota\u00e7\u00e3o, o espa\u00e7o de solu\u00e7\u00f5es fact\u00edveis pode ser expresso pelo poliedro P 5cpl = conv\n\n{(x, ?) ? BK?N \u00d7RK?N : (x, ?) satisfaz as restri\u00e7\u00f5es (6.5b)\u2013(6.5h)}, onde B = {0, 1}. Dado um\nconjunto de vetores X , conv{X} denota o conjunto de vetores que podem ser obtidos por combi-\n\nna\u00e7\u00e3o convexa de um subconjunto finito de X , ou seja, conv{X} = {x : x = ?mj=1 ? jx j, x j ? X e ? j ?\n0 para j = 1, . . . , m, e ?mj=1 ? j = 1}. Pode-se mostrar que o polidero P\n\n5\ncpl que representa a formula\u00e7\u00e3o\n\nP5cpl possui dimens\u00e3o cheia (dim(P\n5\ncpl ) = 2(K ?N)), i.e., n\u00e3o existem depend\u00eancias lineares entre as\n\nvari\u00e1veis.\n\nPara ilustrar os conceitos apresentados nesta se\u00e7\u00e3o, utilizaremos uma inst\u00e2ncia de 3 po\u00e7os mostrada\n\nnas Tabelas 6.1 a 6.3. Consideramos tamb\u00e9m que os seguintes valores limite: qmaxi = 10, q\nmax\np = 10,\n\nqmaxo = 7, q\nmax\ng = 1, 2 e q\n\nmax\nw = 1.\n\nA semelhan\u00e7a de P5pl com o problema da mochila [22] permite estender as desigualdades de\n\ncobertura descobertas em [4] e [3], e obter desigualdades v\u00e1lidas para P 5cpl , adicionando-as \u00e0 formu-\n\nla\u00e7\u00e3o e acelerando o processo de solu\u00e7\u00e3o. Os resultados a seguir s\u00e3o v\u00e1lidos para y = i, p, o, g e w\n\nonde qn,ko = ?noq\nn,k\np , q\n\nn,k\ng = ?ngq\n\nn,k\np e q\n\nn,k\nw = ?nwq\n\nn,k\np . Al\u00e9m disso, sejam:\n\n\u2022 ? = {(n, k) : n = 1, . . . , N, k = 2, . . . , ?(n)} \u00e9 o conjunto de todos os pares (po\u00e7o, ponto de\nopera\u00e7\u00e3o). Em nosso exemplo, ? = {(1, 1), . . . , (1, 5), (2, 1), . . . , (2, 5), (3, 1), . . . , (3, 5)};\n\n\n\n6. Solu\u00e7\u00e3o de P5( /0) Utilizando Programa\u00e7\u00e3o Linear Inteira Mista 89\n\nTabela 6.1: Po\u00e7o 1\n\ny ?1y q\n1,1\ny q\n\n1,2\ny q\n\n1,3\ny q\n\n1,4\ny q\n\n1,5\ny\n\ni 1 2 5 7 10\np 3 3,3 3,4 4 2\no 0,7 2,1 2,31 2,38 2,8 1,4\ng 0,2 0,6 0,66 0,68 0,8 0,4\nw 0,1 0,3 0,33 0,34 0,4 0,2\n\nTabela 6.2: Po\u00e7o 2\n\ny ?2y q\n2,1\ny q\n\n2,2\ny q\n\n2,3\ny q\n\n2,4\ny q\n\n2,5\ny\n\ni 1 2,8 4 6 10\np 1 2 5 7 10\no 0,8 0,8 1,6 4 5,6 8\ng 0,1 0,1 0,2 0,5 0,7 1\nw 0,1 0,1 0,2 0,5 0,7 1\n\nTabela 6.3: Po\u00e7o 3\n\ny ?3y q\n3,1\ny q\n\n3,2\ny q\n\n3,3\ny q\n\n3,4\ny q\n\n3,5\ny\n\ni 2 4 8 9 10\np 1 3 10 4 6\no 0,8 0,8 2,4 8 3,2 4,8\ng 0,1 0,1 0,3 1 0,4 0,6\nw 0,1 0,1 0,3 1 0,4 0,6\n\n\n\n6. Solu\u00e7\u00e3o de P5( /0) Utilizando Programa\u00e7\u00e3o Linear Inteira Mista 90\n\n\u2022 ?y(S) = ?(n,k)?S min(q\nn,k?1\ny , q\n\nn,k\ny ) para S ? ? e y ?{i, p, o, g, w} \u00e9 a m\u00ednima quantidade de re-\n\ncurso y necess\u00e1ria para ativar todos os pares (po\u00e7o, ponto de opera\u00e7\u00e3o) em S. Considerando\n\nS = {(1, 5), (2, 4)} e y = i, temos ?i(S) = min(q\n1,4\ni , q\n\n1,5\ni ) + min(q\n\n2,3\ni , q\n\n2,4\ni ) = 7 + 4 = 11; e\n\n\u2022 S(n, k) = S?{(n, k)} para qualquer S ? ?. Para S = {(1, 5), (2, 4)}, S(1, 5) = {(2, 4)}.\n\nDefini\u00e7\u00e3o 6.1 Um subconjunto Cy ? ? \u00e9 uma cobertura-y se ?y(Cy) > qmaxy e m 6= n para todo\n(m, i), (n, j) ?Cy.\n\nEm palavras, os pares (n, k) de uma cobertura-y pertencem a po\u00e7os distintos e n\u00e3o podem ser\n\nativados simultaneamente pois excederiam a capacidade de recursos dispon\u00edvel. Uma cobertura-i\n\npara nosso exemplo seria Ci = {(1, 5), (2, 4)}, pois ?i(Ci) = 11 > 10 = qmaxi .\n\nDefini\u00e7\u00e3o 6.2 Uma cobertura-y Cy \u00e9 m\u00ednima se, para todo (n, k)?Cy, ?y(Cy(n, k))?qmaxy e ?y(Cy(n, k)?\n{(n, j)}) ? qmaxy para cada j 6= k tal que min(q\n\nn, j?1\ny , q\n\nn, j\ny ) &lt;min(q\n\nn,k?1\ny , q\n\nn,k\ny ).\n\nContinuando com o exemplo, Ci = {(1, 5), (2, 4)} \u00e9 m\u00ednima pois:\n\n\u2022 para (n, k) = (1, 5): ?i(Ci(1, 5)) = min(q\n2,3\ni , q\n\n2,4\nI ) = 4 ? 10 = q\n\nmax\ni e ?i(Ci(1, 5)?{(1, j)}) ?\n\n10 = qmaxi para j ?{2, 3, 4};\n\n\u2022 para (n, k) = (2, 4): ?i(Ci(2, 4)) = min(q\n1,4\ni , q\n\n1,5\nI ) = 7 ? 10 = q\n\nmax\ni e ?i(Ci(2, 4)?{(2, j)}) ?\n\n10 = qmaxi para j ?{2, 3};\n\nSeja qy(S)max = max{min(q\nn,k?1\ny , q\n\nn,k\ny ) : (n, k) ? S} a maior quantidade do recurso m\u00ednimo y re-\n\nquerido por um elemento de S ? ?.\n\nDefini\u00e7\u00e3o 6.3 Dada uma cobertura-y Cy, sua cobertura estendida \u00e9 E(Cy) = EC(Cy)?EC?(Cy) onde\n\nEC(Cy) = {(n, j) ? ? : (n, k) ? Cy, min(q\nn, j\ny , q\n\nn, j?1\ny ) ? min(q\n\nn,k\ny , q\n\nn,k?1\ny )} e EC?(Cy) = {(n, k) ? ? :\n\nmin(qn,k?1y , q\nn,k\ny ) ? qy(Cy)max}.\n\nUtilizando os dados do exemplo, a cobertura estendida E(Ci) fica dividida em EC(Ci) = {(1, 5),\n\n(2, 4), (2, 5)} e EC?(Cy) = {(3, 4), (3, 5)}. Note que Cy ? EC(Cy).\n\nProposi\u00e7\u00e3o 6.1 Dada uma cobertura-y Cy, a desigualdade:\n\n?\n(n,k)?E(Cy)\n\nxn,k ?|Cy|?1 (6.6)\n\n\u00e9 v\u00e1lida para P 5cpl .\n\n\n\n6. Solu\u00e7\u00e3o de P5( /0) Utilizando Programa\u00e7\u00e3o Linear Inteira Mista 91\n\nA desigualdade de cobertura baseada na cobertura estendida E(Ci) de nosso exemplo \u00e9:\n\nx1,5 + x2,4 + x2,5 + x3,4 + x3,5 ? 1. (6.7)\n\nDa mesma maneira que as coberturas-y para as vari\u00e1veis x, coberturas-y e desigualdades v\u00e1lidas\n\npodem ser obtidas para as vari\u00e1veis ?.\n\nDefini\u00e7\u00e3o 6.4 Dada uma cobertura-y Cy, a cobertura-y estendida para as vari\u00e1veis ? \u00e9 definida por:\n\nE?(Cy) = {(n, k) ? E(Cy) : k &lt;?(n), (n, k + 1) ? E(Cy)}?\n\n{(n, 1) : (n, 2) ? E(Cy)}?\n\n{(n, ?(n)) ? E(Cy)}\n\nProposi\u00e7\u00e3o 6.2 Dada uma cobertura-y Cy, a desigualdade:\n\n?\n(n,k)?E? (Cy)\n\n?n,k 6 |Cy|?1 (6.8)\n\n\u00e9 v\u00e1lida para P 5cpl sendo que ?n,1 \u00e9 substitu\u00edda pela Equa\u00e7\u00e3o (6.4c).\n\nDesigualdades v\u00e1lidas podem ser fortalecidas se sujeitas ao procedimento de lifting [31], [42],\n\ni.e., desigualdades podem ser estendidas para dimens\u00f5es maiores incorporando as vari\u00e1veis restantes.\n\nConsidere uma cobertura-y Cy e sua desigualdade v\u00e1lida ?(n,k)?Cy xn,k 6 |Cy|?1. Note que as vari\u00e1veis\nxn,k com (n, k) ? ??Cy n\u00e3o aparecem na desigualdade ou, em outras palavras, seus coeficientes s\u00e3o\nzero. O processo de lifting da desigualdade consiste em calcular o m\u00e1ximo ?n,k(Cy) ? 0 para cada\nvari\u00e1vel xn,k , (n, k) ? ??Cy, tal que a desigualdade ?(n,k)?Cy xn,k + ?(n,k)???Cy ?n,k(Cy)xn,k 6 |Cy|?1\npermanece v\u00e1lida para P 5cpl . A desigualdade de cobertura-y estendida (6.6) \u00e9 uma maneira aproximada\n\npara fortalecer desigualdades v\u00e1lidas3 . Os fatores de lifting ?n,k(Cy) dependem da cobertura Cy e da\nordem dos elementos de ??Cy.\n\nO c\u00e1lculo de fatores de lifting exatos ?n,k(Cy) \u00e9 um problema dif\u00edcil com complexidade com-\npar\u00e1vel \u00e0 solu\u00e7\u00e3o do pr\u00f3prio P5cpl . Sendo assim, ao inv\u00e9s de calcular fatores exatos, propomos um pro-\n\ncedimento heur\u00edstico para encontrar limites inferiores ?n,k(Cy) para os fatores exatos, 0 ? ?n,k(Cy) ?\n?n,k(Cy). Um m\u00e9todo pr\u00e1tico para acelerar a busca por uma solu\u00e7\u00e3o \u00f3tima para P5cpl pode ser obtido\nutilizando os limites inferiores ?n,k(Cy) para fortalecer as desigualdades v\u00e1lidas de cobertura.\n\nDefini\u00e7\u00e3o 6.5 Seja Cy uma cobertura-y.\n\n3O fator multiplicativo 1 \u00e9 usado no lugar de ?n,k(Cy) para todo xn,k , (n, k)? E(Cy)?Cy , enquanto as vari\u00e1veis restantes\ns\u00e3o multiplicadas por zero.\n\n\n\n6. Solu\u00e7\u00e3o de P5( /0) Utilizando Programa\u00e7\u00e3o Linear Inteira Mista 92\n\n\u2022 Para h ?{0, . . . ,|Cy|}, Cy,h \u00e9 um subconjunto de Cy tal que |Cy,h| = h e max{min(q\nn,k?1\ny , q\n\nn,k\ny ) :\n\n(n, k) ?Cy?Cy,h}? min{min(q\nn,k?1\ny , q\n\nn,k\ny ) : (n, k) ?Cy,h} se 0 &lt;h &lt;|Cy|, i.e., Cy,h \u00e9 o subcon-\n\njunto com os h elementos mais \u201cpesados\u201d de Cy.\n\n\u2022 Para (n, k)?Cy e h?{0, . . . ,|Cy|?1}, Cy,h(n, k) \u00e9 um subconjunto de Cy(n, k) tal que |Cy,h(n, k)|=\n\nh e max{min(q\nm, j?1\ny , q\n\nm, j\ny ) : (m, j) ? Cy(n, k)?Cy,h(n, k)} ? min{min(q\n\nm, j?1\ny , q\n\nm, j\ny ) : (m, j) ?\n\nCy,h(n, k)} se 0 &lt;h &lt;|Cy|?1, i.e., Cy,h(n, k) \u00e9 o subconjunto dos h elementos mais \u201cpesados\u201d\n\nde Cy(n, k).\n\nEm nosso exemplo:\n\n\u2022 Ci,0 = /0; Ci,1 = {(1, 5)}; Ci,2 = {(1, 5), (2, 4)};\n\n\u2022 Ci,0(1, 5) = Ci,0(2, 4) = /0; Ci,1(1, 5) = {(2, 4)}; Ci,1(2, 4) = {(1, 5)}.\n\nDefini\u00e7\u00e3o 6.6 Dada uma cobertura Cy, o limite inferior ?n,k(Cy) para o fator de lifting de cada\n(n, k) ? E(Cy)?Cy \u00e9 obtido como segue:\n\n\u2022 se n ? N ?N (Cy), ent\u00e3o ?n,k(Cy) = max{h : min(q\nn,k?1\ny , q\n\nn,k\ny ) ? ?y(Cy,h)};\n\n\u2022 se (n, i)?Cy, ent\u00e3o ?n,k(Cy) = 1+ max{h : min(q\nn,k?1\ny , q\n\nn,k\ny )?min(q\n\nn,i?1\ny , q\n\nn,i\ny )??y(Cy,h(n, i))},\n\nonde N (Cy) = {n : (n, k) ?Cy}.\n\nProposi\u00e7\u00e3o 6.3 A desigualdade de cobertura-y estendida e fortalecida:\n\n?\n(n,k)?Cy\n\nxn,k + ?\n(n,k)?E(Cy)?Cy\n\n?n,k(Cy)xn,k ?|Cy|?1 (6.9)\n\n\u00e9 v\u00e1lida para P 5cpl .\n\nProva: Sejam:\n\n\u2022 C1y = {(n, k) ?Cy : xn,k = 1}, C\n0\ny = Cy ?C\n\n1\ny ,\n\n\u2022 E 1,hC (Cy) = {(n, k) ? E(Cy)?Cy : n ? N (Cy), xn,k = 1, ?n,k(Cy) = h},\n\n\u2022 EC?(Cy)\n1,h(Cy) = {(n, k) ? E(Cy)?Cy : n /? N (Cy), xn,k = 1, ?n,k(Cy) = h},\n\n\u2022 E 1C(Cy) =\n|Cy|?1\n\nS\n\nh=1\nE\n\n1,h\nC (Cy),\n\n\u2022 E 1\nC?\n(Cy) =\n\n|Cy|?1\nS\n\nh=1\nE 1,h\n\nC?\n(Cy),\n\n\n\n6. Solu\u00e7\u00e3o de P5( /0) Utilizando Programa\u00e7\u00e3o Linear Inteira Mista 93\n\n\u2022 ?(n) = (n, k) ?Cy tal que (n, j) ? EC(Cy),\n\n\u2022 ?1 = {(n, k) ?C0y : (n, j) ? E\n1\nC(Cy)},\n\n\u2022 ??1 ?{(n, k) ? C0y ??1} \u00e9 o subconjunto de m\u00e1xima cardinalidade tal que |??1|? ?\n(n,k)?E 1C (Cy)\n\n(?n,k(Cy)?1),\n\n\u2022 ?2 ? {(n, k) ? C0y ? (?1 ? ??1)} \u00e9 o subconjunto de m\u00e1xima cardinalidade tal que |?2| ?\n?\n\n(n,k)?E 1\nC?\n(Cy)\n\n(?n,k(Cy))}.\n\nSuponha que exista (x, ?) em P 5cpl que viola (6.9). Ent\u00e3o,\n\nN\n\n?\nn=1\n\n?(n)\n\n?\nk=2\n\n[qn,1y xn,k ?(q\nn,k\ny ?q\n\nn,1\ny )?n,k] ?\n\n?\n(n,k)??\n\nmin{qn,k?1y , q\nn,k\ny }xn,k ?\n\n?y(C1y ) + ?y(E\n1\nC(Cy)) + ?y(E\n\n1\nC?(Cy)) ?\n\n?y(C1y ) +\n|Cy|?1\n\n?\nh=1\n\n?\n(n,k)?E\n\n1,h\nC (Cy)\n\n?y(Cy,h(?(n))) + ?\n(n,k)?E\n\n1,h\nC?\n\n(Cy)\n\n?y(Cy,h) ?\n\n?y(C1y ) + ?y(?1) + ?y(??1) + ?y(??2) = ?(Cy) > q\nmax\ny\n\no que contradiz (6.5b) e, portanto, refuta a hip\u00f3tese de que (x, ?) \u00e9 fact\u00edvel. ?\n\nCalcularemos agora os fatores ?n,k(Ci) do exemplo, com E(Ci)?Ci = {(2, 5), (3, 4), (3, 5)} e\nCi = {(1, 5), (2, 4)}:\n\n\u2022 ?2,5(Ci) = 1 + max{h : min(q\n2,4\ni , q\n\n2,5\ny )?min(q\n\n2,3\ni , q\n\n2,4\ny ) ? ?i(Ci,h(2, 4))} = 1 + max{h : 6?4 ?\n\n7} = 1 + 0 = 1 ;\n\n\u2022 ?3,4(Ci) = max{h : min(q\n3,3\ni , q\n\n3,4\ni ) ? ?i(Ci,h)} = max{h : 8 ? ?i(Ci,h)} = 1 ;\n\n\u2022 ?3,5(Ci) = max{h : min(q\n3,4\ni , q\n\n3,5\ni ) ? ?i(Ci,h)} = max{h : 9 ? ?i(Ci,h)} = 1 .\n\nSendo assim, a desigualdade de cobertura estendida e fortalecida para a cobertura Ci de nosso exemplo\n\nfica exatamente igual \u00e0 equa\u00e7\u00e3o (6.7).\n\nOs desenvolvimentos aqui podem ser substancialmente simplificados quando os elementos de\n\nQny = {q\nn,0\ny , . . . , q\n\nn,?(n)\ny } s\u00e3o estritamente crescentes, ou seja, se q\n\nn,k\ny &lt;q\n\nn,k+1\ny para k = 0, . . . , ?(n)?\n\n1. Claramente, esta propriedade \u00e9 satisfeita pelos elementos de Qni para todo n ? N . Caso esta\n\npropriedade seja satisfeita para todos os Qny , as desigualdades de cobertura-y obtidas s\u00e3o semelhantes\n\n\u00e0quelas desenvolvidas para P( /0) no Cap\u00edtulo 5.\n\n\n\n6. Solu\u00e7\u00e3o de P5( /0) Utilizando Programa\u00e7\u00e3o Linear Inteira Mista 94\n\nDa mesma maneira que para as vari\u00e1veis x, limites inferiores para os fatores de lifting podem ser\n\nobtidos para as vari\u00e1veis ?. Seja ?1 = ??{(n, 1) : n ? N } e P(n, k) = {(n, k?1), (n, k), (n, k + 1)}?\n?1.\n\nDefini\u00e7\u00e3o 6.7 Dada uma cobertura Cy, os limites inferiores ?n,k(Cy) para os fatores de lifting das\nvari\u00e1veis ? para cada (n, k) ? E?(Cy)?Cy s\u00e3o obtidos como segue:\n\n\u2022 se n ? N ?N (Cy), ent\u00e3o ?n,k(Cy) = max{h : min{q\nn, j\ny : (n, j) ? P(n, k)}? ?y(Cy,h)};\n\n\u2022 se (n, i) ? Cy, ent\u00e3o ?n,k(Cy) = 1 + max{h : min{q\nn, j\ny : (n, j) ? P(n, k)}?min(q\n\nn,i?1\ny , q\n\nn,i\ny ) ?\n\n?y(Cy,h(n, i))}.\n\nCom os limites inferiores dos fatores de lifting das vari\u00e1veis ? calculados para os elementos de\nE?(Cy)?Cy, uma desigualdade v\u00e1lida mais forte pode ser obtida.\n\nProposi\u00e7\u00e3o 6.4 A desigualdade de cobertura-?-y estendida e fortalecida de Cy:\n\n?\n(n,k)?E?(Cy)?Cy\n\n?n,k + ?\n(n,k)?E?(Cy)?Cy\n\n?n,k(Cy)?n,k 6 |Cy|?1 (6.10)\n\n\u00e9 v\u00e1lida para P 5cpl onde ?n,1 \u00e9 substitu\u00eddo pela Equa\u00e7\u00e3o (6.4c).\n\n6.3 Resultados Num\u00e9ricos\n\nNesta se\u00e7\u00e3o s\u00e3o apresentados experimentos num\u00e9ricos realizados com o intuito de demonstrar a\n\nefici\u00eancia dos planos de corte inseridos na formula\u00e7\u00e3o original.\n\nPara inst\u00e2ncias do problema com 32 e 64 po\u00e7os, introduzimos as desigualdades (6.1d)\u2013(6.1g) com\n\nrestri\u00e7\u00f5es na capacidade de separa\u00e7\u00e3o e nos limites de armazenamento/processamento de \u00f3leo, g\u00e1s\n\ne \u00e1gua. Os valores poss\u00edveis para qmaxi e q\nmax\np s\u00e3o baixo, m\u00e9dio, e abundante, mas os valores para\n\nqmaxo , q\nmax\ng , e q\n\nmax\nw s\u00e3o baixo e m\u00e9dio para que o n\u00famero de experimentos seja relativamente baixo.\n\nAssim, o n\u00famero total de experimentos para cada inst\u00e2ncia do problema foi 32 \u00d723 \u00d73 = 216, pois\n\nrealizamos um experimento sem cortes, um com cortes nas vari\u00e1veis x, e outro incluindo os planos de\n\ncortes nas vari\u00e1veis ? para cada situa\u00e7\u00e3o. Os resultados destes experimentos s\u00e3o mostrados na Tabela\n6.4 para o cen\u00e1rio com 32 po\u00e7os e na Tabela 6.5 para o caso com 64 po\u00e7os. As entradas das tabelas\n\ns\u00e3o as m\u00e9dias dos valores para qmaxo , q\nmax\ng e q\n\nmax\nw . Os planos de corte foram calculados utilizando a\n\nheur\u00edstica mostrada na Se\u00e7\u00e3o 5.5 e aplicada para cada restri\u00e7\u00e3o do tipo mochila (6.1c)\u2013(6.1g). Os\n\nresultados foram gerados utilizando o GNU solver [21] e um computador Pentium IV de 2.5GHz e\n\n1GB de mem\u00f3ria.\n\n\n\n6. Solu\u00e7\u00e3o de P5( /0) Utilizando Programa\u00e7\u00e3o Linear Inteira Mista 95\n\nTabela 6.4: Impacto das coberturas-y na velocidade de solu\u00e7\u00e3o para inst\u00e2ncias com 32 po\u00e7os.\n\nSem cortes Com cortes-y em x Com cortes-y em ?\nqmaxi q\n\nmax\np Itera\u00e7\u00f5es N\u00f3s Itera\u00e7\u00f5es N\u00f3s Itera\u00e7\u00f5es N\u00f3s\n\n15.000 428.087 62.935 3.986 939 59 3\n700 20.000 428.087 62.935 3.986 939 59 3\n\n25.000 428.087 62.935 3.986 939 59 3\n15.000 18.275 4.459 2.256 531 174 35\n\n1.100 20.000 281.357 61.587 10.385 2.819 81 1\n25.000 281.357 61.587 10.385 2.819 81 1\n15.000 245 63 245 63 245 63\n\n3.000 20.000 3.958 1.041 932 189 108 3\n25.000 28.200 10.354 3.583 1.267 112 1\n\nM\u00e9dia 210.850 36.432 4.416 1.167 109 13\n\nTabela 6.5: Impacto das coberturas-y na velocidade de solu\u00e7\u00e3o para inst\u00e2ncias com 64 po\u00e7os.\n\nSem cortes Com cortes-y em x Com cortes-y em ?\nqmaxi q\n\nmax\np Itera\u00e7\u00f5es N\u00f3s Itera\u00e7\u00f5es N\u00f3s Itera\u00e7\u00f5es N\u00f3s\n\n40.000 ?32.648.455 4.286.938 313.077 48.131 87 3\n1.100 50.000 ?32.648.455 4.286.938 313.077 48.131 87 3\n\n70.000 ?32.648.455 4.286.938 313.077 48.131 87 3\n40.000 ?25.968.268 3.598.636 690.753 161.517 169 1\n\n2.300 50.000 ?23.741.320 3.372.521 690.753 161.517 169 1\n70.000 ?23.741.320 3.372.521 690.753 161.517 169 1\n40.000 279 99 279 99 279 99\n\n3.500 50.000 3.477 1.061 2.896 738 3.026 744\n70.000 169.911 79.362 24.143 6.833 9.107 1.949\n\nM\u00e9dia 19.063.326 2.587.223 337.645 70.734 1.464 311\n\nDas Tabelas 6.4 e 6.5, \u00e9 evidente que os planos de corte propostos reduzem drasticamente o\n\nn\u00famero de itera\u00e7\u00f5es (pivoteamentos de programa\u00e7\u00e3o linear) e uso de mem\u00f3ria dos algoritmos branch-\n\nand-bound. As inst\u00e2ncias marcadas com \u201c?\u201d n\u00e3o foram resolvidas at\u00e9 o fim devido \u00e0 demanda exorbi-\n\ntante de recursos computacionais (o prodecimento de branch-and-bound foi abortado ap\u00f3s aproxima-\n\ndamente uma semana de tempo de execu\u00e7\u00e3o). Estas inst\u00e2ncias s\u00e3o resolvidas facilmente ap\u00f3s inserir\n\nna formula\u00e7\u00e3o as desigualdades de cobertura-y, especialmente se as coberturas-y est\u00e3o nas vari\u00e1veis\n\n?.\n\n\n\n6. Solu\u00e7\u00e3o de P5( /0) Utilizando Programa\u00e7\u00e3o Linear Inteira Mista 96\n\n6.4 Sum\u00e1rio\n\nNeste cap\u00edtulo, foi proposta uma formula\u00e7\u00e3o linear por partes para o problema de aloca\u00e7\u00e3o de\n\ng\u00e1s de inje\u00e7\u00e3o sob m\u00faltiplas restri\u00e7\u00f5es nas instala\u00e7\u00f5es de superf\u00edcie, foi realizada uma an\u00e1lise do\n\nmodelo e demonstrada sua aplica\u00e7\u00e3o pr\u00e1tica. Os experimentos num\u00e9ricos utilizando o GNU solver\n\n[21] mostraram que as desigualdades de cobertura-y podem tornar fact\u00edveis a otimiza\u00e7\u00e3o de inst\u00e2n-\n\ncias m\u00e9dias e grandes utilizando software livre, o que de outra maneira seria excessivamente lento e\n\nconsumiria recursos computacionais elevados. Os resultados desta se\u00e7\u00e3o foram publicados em [10].\n\n\n\nCap\u00edtulo 7\n\nConclus\u00f5es\n\nQuase todos os setores da economia mundial dependem da ind\u00fastria do petr\u00f3leo, e com a de-\n\nmanda sempre crescente deste combust\u00edvel f\u00f3ssil, existe uma busca tamb\u00e9m crescente de melhor\n\nefici\u00eancia dos processos de produ\u00e7\u00e3o, processamento e transporte de hidrocarbonetos. T\u00e9cnicas de\n\neleva\u00e7\u00e3o artificial que aumentam o fator de recupera\u00e7\u00e3o de um reservat\u00f3rio de petr\u00f3leo s\u00e3o ampla-\n\nmente utilizadas, e uma das t\u00e9cnicas mais utilizadas \u00e9 a eleva\u00e7\u00e3o artificial por inje\u00e7\u00e3o cont\u00ednua de\n\ng\u00e1s, ou gas-lift. Sendo assim, a otimiza\u00e7\u00e3o da aloca\u00e7\u00e3o de g\u00e1s de eleva\u00e7\u00e3o para po\u00e7os de petr\u00f3leo\n\ndesempenha um papel importante na efici\u00eancia de recupera\u00e7\u00e3o de um reservat\u00f3rio.\n\nOs artigos encontrados na literatura confirmam esta tend\u00eancia. Enquanto os estudos mais antigos\n\nestavam mais focados na determina\u00e7\u00e3o das curvas de desempenho dos po\u00e7os, as investiga\u00e7\u00f5es mais\n\nrecentes abordam a opera\u00e7\u00e3o \u00f3tima das instala\u00e7\u00f5es ao longo do tempo, lidando com mudan\u00e7as nas\n\ncondi\u00e7\u00f5es de opera\u00e7\u00e3o e as oscila\u00e7\u00f5es do mercado. Este trabalho contribui para o estado da arte dos\n\nsistemas de produ\u00e7\u00e3o da ind\u00fastria do petr\u00f3leo, atrav\u00e9s da abordagem formal do problema da aloca\u00e7\u00e3o\n\n\u00f3tima de g\u00e1s de eleva\u00e7\u00e3o, i.e., dado um grupo de po\u00e7os de petr\u00f3leo e um conjunto de restri\u00e7\u00f5es, decidir\n\nquais po\u00e7os devem estar ativos e qual a taxa \u00f3tima de inje\u00e7\u00e3o de g\u00e1s para cada po\u00e7o de modo a obter\n\num desempenho global \u00f3timo. Foi mostrado que o problema de otimiza\u00e7\u00e3o n\u00e3o-linear inteira mista\n\nresultante (P( /0)) \u00e9 uma generaliza\u00e7\u00e3o do problema da mochila (portanto um problema NP-Dif\u00edcil), e\nque captura todas as caracter\u00edsticas dos problemas considerados em [15], [18] e [32].\n\nEste documento foi organizado de modo a mostrar a evolu\u00e7\u00e3o da complexidade dos problemas\n\nabordados. Primeiramente, tratamos de resolver o problema mais simples contido na literatura,\n\nonde h\u00e1 apenas a restri\u00e7\u00e3o da taxa dispon\u00edvel de inje\u00e7\u00e3o de g\u00e1s. Foi obtido um algoritmo pseudo-\n\npolinomial baseado na t\u00e9cnica de Programa\u00e7\u00e3o Din\u00e2mica que resolve uma vers\u00e3o discretizada de P,\n\nonde unidades padr\u00e3o de taxa de inje\u00e7\u00e3o de g\u00e1s s\u00e3o alocadas entre os po\u00e7os. Ent\u00e3o, o problema foi\n\nincrementado de modo a capturar restri\u00e7\u00f5es de ativa\u00e7\u00e3o e desativa\u00e7\u00e3o de po\u00e7os, que podem surgir\n\npor motivos t\u00e9cnicos ou estrat\u00e9gicos. Para esta vers\u00e3o mais complexa foi mostrado que n\u00e3o \u00e9 pos-\n\ns\u00edvel desenvolver um algoritmo pseudo-polinomial, ou seja, o problema \u00e9 NP-Dif\u00edcil no sentido forte.\n\n\n\n7. Conclus\u00f5es 98\n\nApesar da natureza aproximada da solu\u00e7\u00e3o recursiva, os resultados num\u00e9ricos obtidos indicam que\n\nestes algoritmos s\u00e3o capazes de obter solu\u00e7\u00f5es quase-\u00f3timas. Por\u00e9m, a inclus\u00e3o de novas restri\u00e7\u00f5es\n\nn\u00e3o \u00e9 trivial.\n\nPassamos ent\u00e3o a utilizar outra abordagem, a lineariza\u00e7\u00e3o por partes das curvas de desempenho\n\nde gas-lift. Esta abordagem elimina as n\u00e3o-linearidades do problema, dando origem a um problema\n\nde otimiza\u00e7\u00e3o linear inteira mista, tornando mais flex\u00edvel a introdu\u00e7\u00e3o ou modifica\u00e7\u00e3o de restri\u00e7\u00f5es,\n\nal\u00e9m de possibilitar o uso de algoritmos eficientes de Programa\u00e7\u00e3o Inteira para a obten\u00e7\u00e3o de solu\u00e7\u00f5es\n\n\u00f3timas ou quase-\u00f3timas. Esta estrat\u00e9gia foi sugerida pela primeira vez em [15], contudo, os autores\n\nn\u00e3o tiraram proveito da estrutura do problema para criar algoritmos espec\u00edficos para o problema\n\nem quest\u00e3o, n\u00e3o considerando W PCs n\u00e3o-c\u00f4ncavas e tratando a ativa\u00e7\u00e3o/desativa\u00e7\u00e3o de po\u00e7os de\n\nmaneira ad hoc. Nosso trabalho abordou estas quest\u00f5es de maneira mais formal. Foi mostrado que o\n\npoliedro que descreve o espa\u00e7o das solu\u00e7\u00f5es fact\u00edveis possui dimens\u00e3o cheia quando s\u00e3o eliminadas as\n\nigualdades contidas na formula\u00e7\u00e3o, e que para o caso de curvas de desempenho c\u00f4ncavas, apenas uma\n\nvari\u00e1vel inteira \u00e9 necess\u00e1ria. Foram obtidas fam\u00edlias de desigualdades v\u00e1lidas que s\u00e3o extens\u00f5es das\n\ndesigualdades de cobertura para o problema da mochila, e que ao serem introduzidas na formula\u00e7\u00e3o\n\ntornam mais r\u00e1pida a busca de solu\u00e7\u00f5es \u00f3timas por algoritmos de branch-and-bound e branch-and-\n\ncut. Resolvemos novamente o problema b\u00e1sico com a restri\u00e7\u00e3o da taxa dispon\u00edvel de inje\u00e7\u00e3o de g\u00e1s,\n\ne tamb\u00e9m um problema mais completo, onde h\u00e1 m\u00faltiplas restri\u00e7\u00f5es que surgem devido a limita\u00e7\u00f5es\n\ndiversas.\n\nAmbas as abordagens foram testadas contra experimentos publicados na literatura, mostrando-\n\nse bastante eficientes. Os resultados deste trabalho representam excelentes ferramentas de suporte\n\n\u00e0 decis\u00e3o de baixo custo, pois podem ser implementadas em plataformas de software livre, al\u00e9m de\n\npoderem ser integradas a programas de simula\u00e7\u00e3o e controle.\n\n7.1 Pesquisa Futura\n\nA seguir, apontamos algumas lacunas deste trabalho que podem ser objeto de estudo em pesquisas\n\nfuturas.\n\n1. Formula\u00e7\u00e3o de P5( /0) utilizando o modelo de Sherali: as desigualdades v\u00e1lidas obtidas para P5( /0)\nforam obtidas baseadas na formula\u00e7\u00e3o mais intuitiva, chamada de Modelo I (Se\u00e7\u00e3o 2.3.1).\n\nPor\u00e9m, Padberg [33] mostra que este modelo n\u00e3o \u00e9 o mais adequado. Os desenvolvimentos do\n\nCap\u00edtulo 6 podem ser reformulados de modo a seguir o modelo de Sherali [37].\n\n2. Fra\u00e7\u00f5es de \u00f3leo, g\u00e1s e \u00e1gua vari\u00e1veis: uma simplifica\u00e7\u00e3o da modelagem apresentada \u00e9 a consi-\n\ndera\u00e7\u00e3o de fra\u00e7\u00f5es constantes de \u00f3leo, g\u00e1s e \u00e1gua produzidos por um determinado po\u00e7o n, ?no,\n?ng e ?\n\nn\nw respectivamente. Em situa\u00e7\u00f5es reais, estas fra\u00e7\u00f5es podem variar de acordo com a taxa\n\n\n\n7. Conclus\u00f5es 99\n\nde inje\u00e7\u00e3o de g\u00e1s qni , pois a varia\u00e7\u00e3o de q\nn\ni corresponde a uma varia\u00e7\u00e3o na press\u00e3o no fundo do\n\npo\u00e7o, o que por sua vez corresponde a uma varia\u00e7\u00e3o nas fra\u00e7\u00f5es de \u00f3leo e g\u00e1s quando o petr\u00f3leo\n\n\u00e9 saturado. Diminuir a press\u00e3o no fundo do po\u00e7o (ou seja, aumentar a taxa de inje\u00e7\u00e3o de g\u00e1s)\n\nal\u00e9m de certos limites tamb\u00e9m pode elevar o contato \u00f3leo-\u00e1gua at\u00e9 a regi\u00e3o dos canhonea-\n\ndos, aumentando a produ\u00e7\u00e3o de \u00e1gua devido ao efeito de conifica\u00e7\u00e3o. A introdu\u00e7\u00e3o de fra\u00e7\u00f5es\n\nvari\u00e1veis em fun\u00e7\u00e3o de qni pode dar origem a um problema de maximiza\u00e7\u00e3o n\u00e3o-convexo. O\n\nestudo de como as fra\u00e7\u00f5es de \u00f3leo, g\u00e1s e \u00e1gua produzidas por um po\u00e7o variam em fun\u00e7\u00e3o da\n\ntaxa de inje\u00e7\u00e3o de g\u00e1s neste po\u00e7o, bem como os seus efeitos na formula\u00e7\u00e3o do problema e nos\n\nalgoritmos desenvolvidos para o c\u00e1lculo de solu\u00e7\u00f5es \u00f3timas ser\u00e1 objeto de estudo.\n\n3. Integra\u00e7\u00e3o controle/otimiza\u00e7\u00e3o: outra dire\u00e7\u00e3o que deve ser seguida \u00e9 a integra\u00e7\u00e3o das t\u00e9cnicas\n\nde controle desenvolvidas em nosso grupo de trabalho [34] com as t\u00e9cnicas de otimiza\u00e7\u00e3o\n\napresentadas no presente trabalho. Este trabalho de integra\u00e7\u00e3o faz parte de uma proposta de\n\ndisserta\u00e7\u00e3o de doutorado de um dos integrantes de nosso grupo de pesquisas, e dever\u00e1 ser\n\nrealizado em conjunto. O produto final do trabalho de mestrado citado dever\u00e1 ser um ambiente\n\ngr\u00e1fico de controle/otimiza\u00e7\u00e3o para o problema de eleva\u00e7\u00e3o artificial via inje\u00e7\u00e3o cont\u00ednua de\n\ng\u00e1s.\n\n4. Estudo de W PCs acopladas: uma dire\u00e7\u00e3o de pesquisa interessante \u00e9 desenvolver formula\u00e7\u00f5es e\n\nalgoritmos para o caso onde a taxa de produ\u00e7\u00e3o de um po\u00e7o k dependa das taxas de inje\u00e7\u00e3o\n\nde seus i po\u00e7os vizinhos, ou seja, qkp = q\nk\np(q\n\n1\ni , q\n\n2\ni , . . . , q\n\nN\ni ). Este modelo pode representar, por\n\nexemplo, cen\u00e1rios onde existam po\u00e7os injetores de \u00e1gua.\n\n\n\nAp\u00eandice A\n\nAjuste de Curvas\n\nDado um conjunto de pontos de desempenho de gas-lift Qn = {(qn,1i , q\nn,1\np ), (q\n\nn,2\ni , q\n\nn,2\np ), . . . , (q\n\nn,k\ni ,\n\nqn,kp )}, com q\nn, j\ni &lt;q\n\nn, j+1\ni para j = 1, . . . , k?1, aplicamos um m\u00e9todo de ajuste de curvas e obtemos\n\nexpress\u00f5es anal\u00edticas q?np(q\nn\ni ) que representam de forma aproximada a fun\u00e7\u00e3o q\n\nn\np(q\n\nn\ni ). Neste trabalho,\n\nforam utilizados tr\u00eas modelos de curvas:\n\n1) Uma fun\u00e7\u00e3o polinomial da forma q?np(q\nn\ni ) = ?\n\nn\n0yn + ?\n\nn\n1q\n\nn\ni + ?\n\nn\n2(q\n\nn\ni )\n\n2 + ?n3(q\nn\ni )\n\n3, definida pelas\n\nconstantes ?n0, ?\nn\n1, ?\n\nn\n2 e ?\n\nn\n3. A vantagem deste modelo \u00e9 que o problema de ajuste de curvas\n\ngerado \u00e9 um problema de f\u00e1cil solu\u00e7\u00e3o. Sua desvantagem \u00e9 a m\u00e1 qualidade de extrapola\u00e7\u00e3o\n\npara pontos fora do intervalo [qn,1i , q\nn,k\ni ];\n\n2) Uma fun\u00e7\u00e3o exponencial da forma q?np(q\nn\ni ) = An(2?e\n\n?Bnq\nn\ni )?Cne\n\nDn q\nn\ni + Fn(1?yn), definida\n\npelas constantes An, Bn, Cn, Dn e Fn = Cn ?An. Esta fun\u00e7\u00e3o exponencial \u00e9 uma boa aproxi-\n\nma\u00e7\u00e3o para o comportamento t\u00edpico de uma W PC, fornece bons dados de extrapola\u00e7\u00e3o, e sua\n\nconcavidade \u00e9 garantida satisfazendo condi\u00e7\u00f5es simples. Garantindo que as constantes An e Cn\nsejam positivas, garantimos tamb\u00e9m que a fun\u00e7\u00e3o q?np(q\n\nn\ni ) \u00e9 uma fun\u00e7\u00e3o c\u00f4ncava, pois sob estas\n\ncondi\u00e7\u00f5es sua derivada segunda assume valores negativos para qualquer valor de qni ;\n\n3) Uma fun\u00e7\u00e3o logar\u00edtmica da forma qnp(q\nn\ni ) = c\n\nn\n1yn + c\n\nn\n2q\n\nn\ni + c\n\nn\n3(q\n\nn\ni )\n\n2 + cn4 ln(q\nn\ni + 1), definida pelas\n\nconstantes cn1, c\nn\n2, c\n\nn\n3 e c\n\nn\n4. Este modelo foi utilizado para comparar os resultados obtidos com o\n\nalgoritmo PD e os obtidos com o m\u00e9todo de SQP proposto em [1].\n\nPara o primeiro caso (aproxima\u00e7\u00e3o polinomial), o problema a ser resolvido \u00e9 linear e portanto\n\nbastante simples, gerando o \u00f3timo global:\n\nMin f =\nk\n?\nj=1\n\n[\n\n?n0yn + ?\nn\n1q\n\nn, j\ni + ?\n\nn\n2(q\n\nn, j\ni )\n\n2 + ?n3(q\nn, j\ni )\n\n3 ?q\nn, j\np\n\n]2\n\nS. a:\n\n2?n2 + 6?\nn\n3q\n\nn, j\ni ? 0 , j = 1, . . . , k\n\n(A.1)\n\n\n\nA. Ajuste de Curvas 101\n\nEncontrar os coeficientes An, Bn, Cn e Dn para o segundo m\u00e9todo (aproxima\u00e7\u00e3o exponencial)\n\nsignifica resolver o seguinte problema de m\u00edmimos quadrados para cada po\u00e7o n:\n\nMin f =\nk\n?\nj=1\n\n[\n\nAn(2?e\n?Bnq\n\nn, j\ni )?Cne\n\nDnq\nn, j\ni ?q\n\nn, j\np + Fn(1?yn)\n\n]2\n\nS. a:\n\nAn ? 0\n\nCn ? 0\n\n(A.2)\n\nFornecemos solu\u00e7\u00f5es iniciais fact\u00edveis e utilizamos algoritmos de otimiza\u00e7\u00e3o n\u00e3o linear [27] para\n\nencontrar um \u00f3timo local. As curvas encontradas passam por um processo de sele\u00e7\u00e3o gr\u00e1fico e, para\n\ncada conjunto Qn obtemos os coeficientes An, Bn, Cn e Dn. As curvas obtidas s\u00e3o c\u00f4ncavas para todo\n\no intervalo qni ? [0, un].\n\nO terceiro m\u00e9todo de ajuste de curvas (aproxima\u00e7\u00e3o logar\u00edtmica) consiste em resolver o seguinte\n\nproblema para cada po\u00e7o n:\n\nMin f =\nk\n?\nj=1\n\n[\n\ncn1yn + c\nn\n2q\n\nn, j\ni + c\n\nn\n3(q\n\nn, j\ni )\n\n2 + cn4 ln(q\nn, j\ni + 1)?q\n\nn, j\np\n\n]2\n\nS. a:\n\n2cn3 ?\ncn4\n\n(1+q\nn, j\ni )\n\n2\n? 0 para j = 1, . . . , k\n\n(A.3)\n\nA resposta desse problema s\u00e3o as constantes cn1, c\nn\n2, c\n\nn\n3 e c\n\nn\n4. As curvas obtidas s\u00e3o c\u00f4ncavas na regi\u00e3o\n\n1\n\nqi = [ln, un].\n\n1N\u00e3o \u00e9 necess\u00e1rio garantir concavidade no intervalo qni ? [0, ln] pois n\u00e3o foi calculada a relaxa\u00e7\u00e3o linear para este caso.\n\n\n\nAp\u00eandice B\n\nDesigualdades V\u00e1lidas para P(G)\n\nSeja P (G) o poliedro correspondente ao fecho convexo das solu\u00e7\u00f5es fact\u00edveis para P(G) no qual\n\nqnp \u00e9 substitu\u00eddo pela sua fun\u00e7\u00e3o de q\nn\ni , i.e., X (G) = {(qi, y) ? R\n\nN \u00d7BN : sujeito \u00e0s restri\u00e7\u00f5es de (4.1)}\n\ne P (G) = conv(X (G)). Para os desenvolvimentos a seguir, a terminologia de grafos introduzida no\n\nCap\u00edtulo 4 necessita ser estendida. Seja ?n = ?k?S(n) lk a m\u00ednima taxa de inje\u00e7\u00e3o necess\u00e1ria para\nativar o po\u00e7o n e seus descendentes em G. Seja W (C) = ?n?CS(n) o conjunto de todos os po\u00e7os que\n\nprecisam ser ativados para que os po\u00e7os em C ? N = {1, . . . , N} sejam ativados.\n\nProposi\u00e7\u00e3o B.1 Se G \u00e9 um grafo ac\u00edclico, ln &lt;un &lt;qmaxi para todo n, e ?n &lt;q\nmax\ni para todo n ?\n\nroot(G), ent\u00e3o P (G) = X (G) possui dimens\u00e3o cheia, isto \u00e9, dim(P (G)) = 2N.\n\nProva: Seja L =?v1, . . . , vN? uma ordem topol\u00f3gica para G. A seguir mostramos que vetores unit\u00e1rios\n\npara qni e yn podem ser obtidos sistematicamente, a partir de elementos de X (G), na ordem reversa de\n\nL. Mais formalmente, o procedimento encontra vetores unit\u00e1rios para as vari\u00e1veis associadas ao po\u00e7o\n\nvN , e ent\u00e3o encontra um vetor unit\u00e1rio para o po\u00e7o vN?1, e assim por diante at\u00e9 chegar ao po\u00e7o v1. Os\n\npassos do procedimento s\u00e3o descritos abaixo.\n\n\u2022 Passo 1. Seja U = /0 o conjunto dos \u00edndices dos po\u00e7os para os quais vetores unit\u00e1rios de suas\nvari\u00e1veis tenham sido obtidos. Fa\u00e7a k = N.\n\n\u2022 Passo 2. Fa\u00e7a n = vk e seja z? = (q?i, y?)?X (G) a solu\u00e7\u00e3o obtida fazendo y? j = 1 e q?\nj\ni = l j para cada\n\nj ? S(n), al\u00e9m de y? j = 0 e q?\nj\ni = 0 para cada j 6? S(n). Seja z? = (q?i, y?) ? X (G) a solu\u00e7\u00e3o obtida\n\nfazendo y? j = 1 e q?\nj\ni = l j para cada j ? S\n\n+(n), al\u00e9m de y?n = 1 e q?\nn\ni = min{un, q\n\nmax\ni ?(?n ?ln)},\n\ne y? j = 0 e q?\nj\ni = 0 para cada j 6? S(n). Note que as solu\u00e7\u00f5es z? e z? s\u00e3o id\u00eanticas em todas as\n\nsuas entradas, com exce\u00e7\u00e3o do po\u00e7o n, mais precisamente q?ni &lt;q?\nn\ni pois ?n &lt;q\n\nmax\ni . Por hip\u00f3tese\n\nde indu\u00e7\u00e3o, podemos assumir que os vetores unit\u00e1rios foram obtidos para todas as entradas\n\ndiferentes de zero de z? a menos daquelas correspondentes ao po\u00e7o n, pois estes po\u00e7os s\u00e3o\n\nprecedidos pelo po\u00e7o n na ordem topol\u00f3gica. Por combina\u00e7\u00e3o linear destes vetores unit\u00e1rios e\n\n\n\nB. Desigualdades V\u00e1lidas para P(G) 103\n\ndas solu\u00e7\u00f5es z? e z?, podemos obter vetores unit\u00e1rios para as vari\u00e1veis qni e yn. Portanto, U pode\n\nser estendido para englobar o po\u00e7o n, U ? U ?{n}. Se k = 1 ent\u00e3o pare, sen\u00e3o decremente k\n\npor 1 e repita a partir do Passo 2.\n\nNeste ponto, U = {1, . . . , N}, o que significa que vetores unit\u00e1rios foram obtidos a partir de combi-\n\nna\u00e7\u00e3o linear dos elementos de X (G) para todas as vari\u00e1veis. Como a origem pertence a X (G), con-\n\nclu\u00edmos que P (G) cont\u00e9m 2N + 1 elementos afim independentes, implicando em dim(P (G)) = 2N.\n\n?\n\nA partir deste ponto, assumimos que as condi\u00e7\u00f5es da Defini\u00e7\u00e3o B.1 s\u00e3o satisfeitas.\n\nDefini\u00e7\u00e3o B.1 Um conjunto C ?{1, ..., N} \u00e9 uma cobertura para X (G) se:\n\n\u2022 S(n)?C = {n} para cada n ?C;\n\n\u2022 ?\nn?C\n\n?n > qmaxi ;\n\n\u2022 ?\nn?C\n\n?n ? lk &lt;qmaxi para cada k ?C; e\n\nDefini\u00e7\u00e3o B.2 Seja PC(G) = {(qi, y) ? P (G) : yn = qni = 0} para todo n ? N ?W (C) o poliedro\n\nobtido pela proje\u00e7\u00e3o de P (G) sobre o espa\u00e7o das vari\u00e1veis yn e q\nn\ni cujos \u00edndices pertencem ao con-\n\njunto W (C), onde C \u00e9 uma cobertura.\n\nCorol\u00e1rio B.1 Se C \u00e9 uma cobertura, ent\u00e3o dim(PC(G)) = 2|W (C)|.\n\nProposi\u00e7\u00e3o B.2 Se C \u00e9 uma cobertura, ent\u00e3o a desigualdade de cobertura\n\n?\nn?C\n\nyn ?|C|?1 (B.1)\n\n\u00e9 v\u00e1lida para PC(G) e, al\u00e9m disso, a face FC = {(qi, y) ? PC(G) : ?\nn?C\n\nyn = |C|?1} induzida pela\n\ndesigualdade de cobertura possui dimens\u00e3o dim(FC) = 2|W (C)|?1.\n\nProva:. (Validade) Se ?\nn?C\n\nyn = |C| para alguma solu\u00e7\u00e3o (qi, y) ? X (G)?PC(G), ent\u00e3o ?\nn?W (C)\n\nqni ?\n\n?\nn?C\n\n?n > qmaxi , mas isso significa que a solu\u00e7\u00e3o \u00e9 infcat\u00edvel, contradizendo a hip\u00f3tese.\n\n(Dimensionalidade) Seja:\n\n?\nn?W (C)\n\n(?nyn + \u00b5nqni ) ? ?o (B.2)\n\numa desigualdade v\u00e1lida geral para PC(G) induzindo a face m\u00e1xima F? ={(qi, y)?PC(G) : ?\nn?W (C)\n\n(?nyn +\n\n\u00b5nq\nn\ni ) = ?o tal que FC ? F?. A seguir provamos que FC \u00e9 m\u00e1xima mostrando que a desigualdade (B.1)\n\n\n\nB. Desigualdades V\u00e1lidas para P(G) 104\n\n(que induz FC) difere da desigualdade (B.2) (que induz F?) por uma constante multiplicativa positiva.\n\nA demonstra\u00e7\u00e3o consiste em mostrar que ?n = 1 para todo n ? C, ?n = 0 para todo n ? W (C)?C,\n\u00b5n = 0 para todo n ?W (C) e ?0 = |C|?1.\n\nPrimeiro, mostramos que \u00b5n = 0 para todo n ?C. Seja z? = (q?i, y?) obtido fazendo y?t = 1 e q?\nt\ni = lt\n\npara todo t ?W (C?{k}), onde k ?C?{n}, e y?t = 0 e q?\nt\ni = 0 para todo t ? S(k). Claramente, z? ? FC\n\ne ?\nt?W (C)\n\nq?ti = ?\nt?C?{k}\n\n?t &lt;qmaxi . Similarmente, seja z? id\u00eantico a z? a menos de q?\nn\ni = min{un, q\n\nmax\ni ?\n\n?\nt?W (C)?{n}\n\nq?ti}. Para z? e z? pertencerem a F?, (B.2) deve ser satisfeita na igualdade. Subtraindo (B.2)\n\ncalculada em z? de (B.2) calculada em z?, e levando em conta o fato que q?ni > q?\nn\ni , pode-se concluir que\n\n\u00b5n = 0. Repetindo os passos acima para os elementos restantes da cobertura, verifica-se que \u00b5n = 0\n\npara todo n ?C.\n\nSegundo, mostramos que \u00b5n = 0 para n ? W (C)?C, onde n ? S\n+(l) para algum l ? C. Seja\n\nz? = (q?i, y?) obtido fazendo y?t = 1 e q?\nt\ni = lt para todo t ? W (C ?{k}), onde k ? C ?{l}, e y?t = 0 e\n\nq?ti = 0 para todo t ? S(k). Segue que z? pertence a FC e ?\nt?W (C)\n\nq?ti = ?\nt?C?{k}\n\n?t &lt;qmaxi . Seja z? ? FC\n\nid\u00eantico a z?, exceto por q?ni que assume valor min{un, q\nmax\ni ? ?\n\nt?W (C)?{n}\nq?ti}. Note que (B.2) deve ser\n\nsatisfeita na igualdade para z? e z? pois z?, z? ? F?. Subtraindo (B.2) calculada em z? de (B.2) calculada\n\nem z?, e usando o fato de que q?ni > q?\nn\ni , pode-se deduzir que \u00b5n = 0. Repetindo os passos acima para os\n\npo\u00e7os restantes, pode-se concluir que \u00b5n = 0 para todo n ?W (C)?C. Neste ponto, descobrimos que\n\na desigualdade que induz F? \u00e9 da forma ?\nn?W (C)\n\n?nyn ? ?0.\n\nTerceiro, mostramos que ?n = 0 para todo n ?W (C)?C. Isto, \u00e9 mostrado por indu\u00e7\u00e3o e explo-\nrando a estrutura imposta pelas restri\u00e7\u00f5es de preced\u00eancia. Seja L = ?v1, . . . , v|W (C)?C|? a permuta\u00e7\u00e3o\n\ndos elementos de W (C)?C tal que v j precede vk em uma ordem topol\u00f3gica de G se e somente se\n\nj > k. Em outras palavras, os elementos de W (C)?C s\u00e3o arranjados em L na ordem reversa da ordem\n\ntopol\u00f3gica. Pode ser mostrado por indu\u00e7\u00e3o em l ?{1, . . . ,|W (C)?C|} que ?v1 = 0 (base de indu\u00e7\u00e3o),\n?v2 = 0 (passo de indu\u00e7\u00e3o), e assim por diante at\u00e9 que a afirma\u00e7\u00e3o seja demonstrada. Omitimos a\nbase de indu\u00e7\u00e3o e mostramos apenas o passo de indu\u00e7\u00e3o. Para algum l ? 2, seja n = vl onde n ? S(k)\n\npara algum k ? C. Seja z? = (q?i, y?) obtido fazendo y?t = 1 e q?\nt\ni = lt para todo t ? W (C ?{k})?S(n),\n\nenquanto y?t = 0 e q?\nt\ni = 0 para todo t ? S(k)?S(n). Como y?k = 0 e y?t = 1 para todo t ? S(n) segue\n\nque z? ? FC. Al\u00e9m disso, ?\nt?W (C)\n\n?t y?t = ?\nt?W (C)?S(k)\n\n?t y?t + ?\nt?S(n)\n\n?t y?t = ?0 para que z? perten\u00e7a a F?. Por\n\nindu\u00e7\u00e3o, segue que ?t = 0 para todo t ? S(n)?{n}. Assim:\n\n?\nt?W (C)?S(k)\n\n?t y?t + ?ny?n = ?0 (B.3)\n\nAgora, seja z? ?FC igual a z?, com exce\u00e7\u00e3o de y?t = q?\nt\ni = 0 para todo t ? S(n). A equa\u00e7\u00e3o (B.3) calculada\n\nem z? deve ser satisfeita para que z? perten\u00e7a a F?. Subtraindo (B.3) calculada em z? de (B.3) calculada\n\nem z?, segue que ?n = 0. Repetindo os passos acima para l + 1, l + 2, . . . ,|W (C)?C|, podemos deduzir\nque ?n = 0 para todo n ?W (C)?C, o que nos leva a concluir que a desigualdade (B.2) que induz F?\n\n\n\nB. Desigualdades V\u00e1lidas para P(G) 105\n\n\u00e9 da forma:\n\n?\nn?C\n\n?nyn ? ?0 (B.4)\n\nQuarto, \u00e9 f\u00e1cil verificar que ?n = ?k = ? para todo n, k ?C, n 6= k. Apenas produza dois elementos\nde FC, um ativando o po\u00e7o n mas n\u00e3o k, digamos z?, e outro que ativa k mas n\u00e3o n, digamos z?. Para ter\n\nz?, z? ? F?, a desigualdade (B.4) deve ser satisfeita na igualdade se calculada em z? e z?. Subtraindo (B.4)\n\ncalculada em z? de (B.4) calculada em z?, conclu\u00edmos que ?n = ?k. Consequentemente, ?0 = (|C|?1)?.\n\nFazendo ?0 = |C|?1 e ?n = 1 para todo n ?C, deduzimos que a desigualdade (B.1) induz uma\nface m\u00e1xima de PC(G). Portanto dim(FC) = 2|W (C)|?1. ?\n\nDe acordo com a Proposi\u00e7\u00e3o B.2, a desigualdade induzida por uma cobertura C seria uma faceta\n\nde P (G) se W (C) = N . Aplicando o princ\u00edpio de lifting, \u00e9 poss\u00edvel estender uma desigualdade de\n\ncobertura para PU (G) = P (G)?{(qi, y) ? R\nN \u00d7BN : yn = 0 para todo n ? N ?U}, onde U = W (C),\n\ne obter uma desigualdade v\u00e1lida para P (G). Como no procedimento de lifting mostrado para obter\n\ndesigualdades v\u00e1lidas para P (Se\u00e7\u00e3o 3.5), as vari\u00e1veis associadas aos elementos de N ?U seriam\n\nsubmetidas ao procedimento de lifting uma de cada vez. Seja s =? j1, . . . , jL? uma sequ\u00eancia ordenada\n\ndos elementos de N ?U . Para fazer o lifting do primeiro elemento desta sequ\u00eancia, j1, e produzir a\n\ndesigualdade ?\nn?C\n\nyn + ? j1 y j1 ?|C|?1 que \u00e9 v\u00e1lida para PU?{ j1}(G), o procedimento calcularia ? j1 =\n\n|C|?1?max{ ?\nn?C\n\nyn : (qi, y) ? PU?{ j1}(G), y j1 = 1} resolvendo um problema relacionado a P(G).\n\nA desigualdade resultante induz uma face FU?{ j1} de PU?{ j1}(G) tal que dim(FU?{ j1}) ? dim(FU ) +\n\n1. Se existe uma solu\u00e7\u00e3o \u00f3tima para o problema de calcular ? j1 tal que q\nj1\ni > l j1 , ent\u00e3o n\u00e3o seria\n\ndif\u00edcil mostrar que a face induzida possui dimens\u00e3o dim(FU?{ j1}) = dim(FU ) + 2. Repetindo este\n\nprocedimento para os elementos restantes de s, pode-se produzir uma desigualdade mais forte, que\n\npossivelmente induz uma faceta para P (G) chamada de desigualdade de cobertura com lifting:\n\n?\nn?C\n\nyn +\nL\n\n?\nk=1\n\n? jk y jk ?|C|?1 (B.5)\n\nA desigualdade (B.5) depende tanto da cobertura C como da ordem na qual os elementos de N ?U\n\nsofrem o lifting. Como o c\u00e1lculo dos fatores de lifting \u00e9 dif\u00edcil, pode-se tentar obter limites inferiores\n\n?n para os fatores ?n. No que segue descrevemos uma maneira simples para calcular limites inferiores.\nUm subconjunto E(C) ? N \u00e9 uma cobertura estendida de C se:\n\n1. C ? E(C);\n\n2. para todos os pares distintos n, m ? E(C), S(n)?S(m) = /0; e\n\n3. para cada n ? E(C)?C, ?n ? max{? j : j ?C}.\n\n\n\nB. Desigualdades V\u00e1lidas para P(G) 106\n\nEnt\u00e3o, pode ser mostrado que a desigualdade de cobertura estendida:\n\n?\nn?E(C)\n\nyn ?|C|?1 (B.6)\n\n\u00e9 v\u00e1lida para P (G). Note que em (B.6) ?n = 1 para todo n ? E(C)?C enquanto ?n = 0 para todo n ?\nN ?E(C). Como nos desenvolvimentos anteriores, podemos obter limites inferiores de dimens\u00f5es\n\nmaiores para os fatores de lifting. Para k ?{0, . . . ,|C|}, seja C(k) ? C tal que |C(k)| = k e min{?n :\nn ?C(k)}? max{?n : n ?C?C(k)} se 0 &lt;k &lt;|C|, ou seja, C(k) \u00e9 o subconjunto de C que cont\u00e9m os\npo\u00e7os que possuem as maiores taxas m\u00ednimas de inje\u00e7\u00e3o para serem ativados. Seja tamb\u00e9m q(C?) =\n\n?n?C? ?n para qualquer C? ?C. Para n ? E(C)?C, podemos definir um limite inferior ?n como:\n\n?n = Max k ?{1, . . . ,|C|}\nS. a : ?n ? q(C(k))\n\nSubstituindo os fatores de lifting ?n em (B.5) por ?n para n ? E(C)?C obtemos a desigualdade de\ncobertura estendida e fortalecida:\n\n?\nn?C\n\nyn + ?\nn?E(C)?C\n\n?nyn ?|C|?1 (B.7)\n\nque \u00e9 v\u00e1lida para P (G).\n\n\n\nRefer\u00eancias Bibliogr\u00e1ficas\n\n[1] G. A. Alarc\u00f3n, C. F. Torres, and L. E. G\u00f3mez. Global optimization of gas allocation to a group\n\nof wells in artificial lift using nonlinear constrained programming. ASME Journal of Energy\n\nResources Technology, 124(4):146\u2013164, 2002.\n\n[2] M. Assayag, J. Formigli, and M. V. Coelho. \u00c1guas ultraprofundas no Brasil: Os pr\u00f3ximos\n\npassos para alcan\u00e7ar 3000 metros. Revista T&amp;N Petr\u00f3leo, Outubro 2000.\n\n[3] E. Balas. Facets of the knapsack polytope. Mathematical Programming, 8:146\u2013164, 1975.\n\n[4] E. Balas and E. Zemel. Facets of the knapsack polytope from minimal covers. SIAM Journal on\n\nApplied Mathematics, (34):119\u2013148, 1978.\n\n[5] D. P. Bertsekas. Nonlinear Programming. Athena Scientific, 1995.\n\n[6] S. Buitrago, E. Rodr\u00edguez, and D. Espin. Global optimization techniques in gas allocation for\n\ncontinuous flow gas lift systems. In Gas Technology Conference, Calgary, Canada, April 1996.\n\nPaper SPE 35616.\n\n[7] E. Camponogara and A. M. de Conto. Gas-lift allocation under precedence constraints:\n\npiecewise-linear formulation and k-covers. In 44th IEEE Conference on Decision and Control,\n\n2005.\n\n[8] E. Camponogara and P. Nakashima. Optimizing gas-lift production of oil wells: piecewise linear\n\nformulation and computational analysis. IIE Transactions, 38(2):173\u2013182, 2006.\n\n[9] E. Camponogara and P. H. R. Nakashima. Solving a gas-lift optimization problem by dynamic\n\nprogramming. European Journal of Operational Research, 174:1220\u20131246, 2006.\n\n[10] E. Camponogara and P. H. R. Nakashima. Optimal allocation of lift-gas rates under multiple\n\nfacility constraints: A mixed integer linear programming approach. ASME Journal of Energy\n\nResources Technology, 128:280\u2013289, 2006.\n\n[11] E. Camponogara and P. H. R. Nakashima. Applying dynamic programming to a gas-lift opti-\n\nmization problem. In II Congresso de Pesquisa e Desenvolvimento em Petr\u00f3leo e G\u00e1s, Rio de\n\nJaneiro, RJ, 2003.\n\n\n\nRefer\u00eancias Bibliogr\u00e1ficas 108\n\n[12] T. H. Cormen, C. E. Leiserson, and R. L. Rivest. Introduction to Algorithms. MIT Press, 1990.\n\n[13] A. M. de Conto. Aloca\u00e7\u00e3o \u00f3tima de g\u00e1s de inje\u00e7\u00e3o em po\u00e7os de petr\u00f3leo: Restri\u00e7\u00f5es de pre-\n\nced\u00eancia, lineariza\u00e7\u00e3o por partes e algoritmos. Master\u2019s thesis, Universidade Federal de Santa\n\nCatarina, 2006.\n\n[14] M. J. Economides, A. D. Hill, and C. Ehlig-Economides. Petroleum Production Systems. Pren-\n\ntice Hall, 1993.\n\n[15] W. Y. Fang and K. K. Lo. A generalized well-management scheme for reservoir simulation.\n\nSPE Reservoir Engineering, 11(2):116\u2013120, May 1996. Paper SPE 29124.\n\n[16] M. R. Garey and D. S. Johnson. Computers and Intractability: A Guide to the Theory of NP-\n\nCompleteness. W. H. Freeman and Company, 1979.\n\n[17] O. H. Ibarra and C. E. Kim. Scheduling for maximum profit. Relat\u00f3rio T\u00e9cnico 75-2, Universi-\n\ndade de Minnesota, 1975.\n\n[18] E. P. Kanu, J. Mach, and K. E. Brown. Economic approach to oil production and gas allocation\n\nin continuous gas lift. Journal of Petroleum Technology, pages 1887\u20131892, October 1981. Paper\n\nSPE 9084.\n\n[19] K. K. Lo. Optimum lift-gas allocations under multiple production constraints. 1992. Paper SPE\n\n26017.\n\n[20] E. M. Macambira. Uma abordagem de programa\u00e7\u00e3o linear inteira para o problema de clique\n\nm\u00e1xima com peso nas arestas. Master\u2019s thesis, Departamento de Ci\u00eancia da Computa\u00e7\u00e3o,\n\nIMECC, Universidade Estadual de Campinas, 1997.\n\n[21] A. Makhorin. GNU Linear Programming Kit: Reference Manual. Department of Applied\n\nInformatics, Moscow Aviation Institute, Moscow, Russia, 2003.\n\n[22] S. Martelo and P. Toth. Knapsack Problems: Algorithms and Computer Implementations. John\n\nWiley &amp; Sons, 1990.\n\n[23] E. R. Martinez, W. J. Moreno, J. A. Moreno, and R. Maggiolo. Application of genetic algorithm\n\non the distribution of gas lift injection. In 3rd Latin American/Caribbean Petroleum Engineering\n\nConference, Buenos Aires, Argentina, April 1994. Paper SPE 24281.\n\n[24] C. J. N. McKie, E. A. Rojas, N. M. Quintero, J. R. C. Fonseca, and N. J. Perozo. Economic\n\nbenefits from automated optimization of high pressure gas usage in an oil production system. In\n\nSPE Production and Operations Symposium, Oklahoma, USA, 2001. Paper SPE 67187.\n\n[25] K. Mehlhorn and S. Naher. LEDA: A Platform for Combinatorial and Geometric Computing.\n\nCambridge University Press, 1999.\n\n\n\nRefer\u00eancias Bibliogr\u00e1ficas 109\n\n[26] H. Mukherjee and K. E. Brown. Improve your gas lift design. In SPE International Meeting on\n\nPetroleum Engineering, Beijing, China, March 1986. Paper SPE 14053.\n\n[27] B. H. Murtagh and M. A. Saunders. MINOS 5.5 User\u2019s Guide. Systems and Optimization\n\nLaboratory, Department of Operations Research, Stanford University, 1998.\n\n[28] P. H. R. Nakashima and E. Camponogara. Otimiza\u00e7\u00e3o da aloca\u00e7\u00e3o de g\u00e1s de inje\u00e7\u00e3o para um\n\nconjunto de po\u00e7os operando via gas-lift. In Congresso Brasileiro de Autom\u00e1tica, Gramado, RS,\n\n2004.\n\n[29] P. H. R. Nakashima and E. Camponogara. Optimization of lift-gas allocation with uncertainties\n\nusing dynamic programing. IEEE Transactions on Systems, Man, and Cybernetics \u2013 Part A, 36\n\n(2):407\u2013414, 2006.\n\n[30] P. H. R. Nakashima and E. Camponogara. Aloca\u00e7\u00e3o \u00d3tima de taxas de inje\u00e7\u00e3o de gas-lift\n\nutilizando programa\u00e7\u00e3o linear inteira mista. Revista Petro &amp; Qu\u00edmica, 263:150\u2013160, Agosto\n\n2004.\n\n[31] G. L. Nemhauser and L. A. Wolsey. Integer and Combinatorial Optimization. John Wiley &amp;\n\nSons, 1988.\n\n[32] N. Nishikiori, R. A. Redner, D. R. Doty, and Z. Schmidt. An improved method for gas lift\n\nallocation optimization. In SPE 64th Annual Technical Conference and Exhibition, San Antonio,\n\nUSA, October 1989. Paper SPE 19711.\n\n[33] M. Padberg. Approximating separable nonlinear functions via mixed zero-one programs. Op-\n\nerations Research Letters, 27:1\u20135, 2000.\n\n[34] A. Plucenio. Automa\u00e7\u00e3o da produ\u00e7\u00e3o de po\u00e7os de petr\u00f3leo operando com eleva\u00e7\u00e3o artificial por\n\ninje\u00e7\u00e3o cont\u00ednua de g\u00e1s. Master\u2019s thesis, Programa de P\u00f3s-Gradua\u00e7\u00e3o em Engenharia El\u00e9trica,\n\nUniversidade Federal de Santa Catarina, 2003.\n\n[35] J. D. Redden, T. A. G. Sherman, and J. R. Blann. Optimizing gas-lift systems. In 49th Annual\n\nFall Meeting of Petroleum Engineers of AIME, Houston, USA, October 1974. Paper SPE 5150.\n\n[36] GOAL User Guide. Schlumberger Abingdon Technology Center, Oxon, United Kingdom, 2003.\n\n[37] H.D. Sherali. On mixed-integer zero-one representations for separable lower-semicontinuous\n\npiecewise-linear functions. Operations Research Letters, 28:155\u2013160, 2001.\n\n[38] S. S. Skiena. The Algorithm Design Manual. Springer Velag, 1998.\n\n[39] J. E. Thomas. Fundamentos de Engenharia de Petr\u00f3leo. Editora Interci\u00eancia, 2001.\n\n[40] P. Wang, M. Litvak, and K. Aziz. Optimization of production from mature fields. In 17th World\n\nPetroleum Congress, Rio de Janeiro, Brasil, 2002.\n\n\n\nRefer\u00eancias Bibliogr\u00e1ficas 110\n\n[41] H. P. Williams. Model Building in Mathematical Programming. John Wiley &amp; Sons, 1999.\n\n[42] L. A. Wolsey. Integer Programming. John Wiley &amp; Sons, 1998."}]}}}