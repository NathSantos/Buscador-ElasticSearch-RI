{"add": {"doc": {"field": [{"@name": "docid", "#text": "BR-TU.10809"}, {"@name": "filename", "#text": "1597_Freitas_LucasBatista_D.pdf"}, {"@name": "filetype", "#text": "PDF"}, {"@name": "text", "#text": "ii\n\n\n\niii\n\n\n\nInstituto de Computac?a?o\n\nUniversidade Estadual de Campinas\n\nModelagem geolo?gica por simplo?ides de Be?zier\n\nLucas B. Freitas1\n\nDezembro de 2010\n\nBanca Examinadora:\n\n\u2022 Jorge Stolfi (Orientador)\n\n\u2022 Dr. Eduardo Filpo Ferreira da Silva\n\nPetrobras\n\n\u2022 Prof. Dr. Jesse? Carvalho Costa\n\nCPGf \u2013 UFPa\n\n\u2022 Profa. Dra. Maria Cristina Cunha\n\nIMECC \u2013 Unicamp\n\n\u2022 Prof. Dr. Philippe Devloo\n\nFEC \u2013 Unicamp\n\n\u2022 Prof. Dr. Luiz Carlos Pacheco Velho\n\nIMPA (Suplente)\n\n\u2022 Profa. Dra. Anamaria Gomide\n\nIC \u2013 Unicamp (Suplente)\n\n\u2022 Prof. Dr. He?lio Pedrini\n\nIC \u2013 Unicamp (Suplente)\n\n1Suporte financeiro de: Bolsa da FAPESP (processo 2006/50344-4) 2006\u20132008.\n\nv\n\n\n\nResumo\n\nA explorac?a?o e monitoramento de um reservato?rio de petro?leo ou ga?s natural exige co-\n\nnhecimento bastante detalhado das estruturas geolo?gicas da regia?o de interesse. A repre-\n\nsentac?a?o matema?tica e computacional desse conhecimento e? um modelo geof??sico.\n\nNesta tese descrevemos um sistema geral para modelagem geof??sica baseado em ele-\n\nmentos finitos polinomiais de graus arbitra?rios. Adotamos uma abordagem comum na\n\nindu?stria, em que a geometria e as propriedades das formac?o?es geolo?gicas sa?o represen-\n\ntadas por func?o?es definidas por partes, ou splines, que consistem da justaposic?a?o de tais\n\nelementos. Neste contexto, apresentamos contribuic?o?es teo?ricas e computacionais.\n\nA principal contribuic?a?o teo?rica e? uma teoria unificada dos elementos simploidais de\n\nBe?zier, que incluem os tipos de elementos finitos mais comuns na modelagem por malhas\u2014\n\ntais como arcos de Be?zier, retalhos de Be?zier triangulares e retangulares, blocos de Be?zier\n\ntetrae?dricos, prisma?ticos e hexae?dricos, e suas generalizac?o?es para dimenso?es arbitra?rias,\n\ncom graus independentes em cada eixo e cada componente. Como parte testa teoria,\n\ndesenvolvemos fo?rmulas gene?ricas expl??citas para conversa?o entre estes va?rios tipos de\n\nblocos, bem como diferenciac?a?o, reparametrizac?a?o afim e elevac?a?o de grau.\n\nAs contribuic?o?es computacionais desta tese incluem a implementac?a?o dessa teoria na\n\nforma de uma biblioteca (BezEl) que permite a representac?a?o e manipulac?a?o eficiente\n\nde malhas de elementos de Be?zier simplodais com dimenso?es e graus arbitra?rios. Outra\n\ncontribuic?a?o original desta tese e? uma metodologia para realizar o trac?ado eficiente de\n\nraios em malhas de elementos simploidais.\n\nvii\n\n\n\nAbstract\n\nThe exploration and monitoring of a hydrocarbon reservoir demand a very detailed kno-\n\nwledge about the geological structures of the target area. The mathematical and compu-\n\ntation representation of this knowledge is a geophysical model.\n\nIn this thesis, we describe a general system for geophysical modeling based on poly-\n\nnomial finite elements of arbitrary degree. We adopted an approach that is popular in\n\nindustry, whereby both the geometry and the physical properties of the geological for-\n\nmations are represented by piecewise-defined functions, or splines, that are obtained by\n\nthe assembly of many such elements. In this context, we present both theoretical and\n\ncomputational contributions.\n\nThe main theoretical contribution is a unified theory of simploidal Be?zier elements,\n\nwhich include the element types most common in mesh based modeling \u2013 such as Be?zier\n\narcs, triangular and rectangular Be?zier patches, tetrahedral, prismatic and hexahedral\n\nBe?zier blocks, and their generalizations to arbitrary dimensions with independent degrees\n\non each axis and each component. As part of this theory, we developed general explicit\n\nformulas for the conversion between these various block types, as well as differentiation,\n\naffine reparametrization and degree raising.\n\nThe computational contributions of this thesis include the implementation of this\n\ntheory as a library (BezEl) that allows efficient representation and manipulation of meshes\n\nof simploidal Be?zier elements with arbitrary dimension and degree. Another original\n\ncontribution of this thesis is a methodology for performing efficient ray tracing in meshes\n\nof such simploidal elements.\n\nix\n\n\n\nAgradecimentos\n\nAntes de tudo, agradec?o a Deus por ter me concedido esta grac?a. Agradec?o tambe?m\n\nmeus orientadores, o prof. Jorge Stolfi e o prof. Martin Tygel, por terem me guiado nesta\n\ndif??cil trajeto?ria e a FAPESP, ao Instituto de Computac?a?o e ao Laborato?rio de Geof??sica\n\nComputacional pelo suporte financeiro e pela infra-estrutura que me foi disponibilizada.\n\nxi\n\n\n\nSuma?rio\n\nResumo vii\n\nAbstract ix\n\nAgradecimentos xi\n\n1 Introduc?a?o 1\n\n1.1 Modelagem Geof??sica . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 1\n\n2 Modelos geolo?gicos 3\n\n2.1 Principais abordagens . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 3\n\n2.1.1 Modelos baseados em grade uniforme . . . . . . . . . . . . . . . . . 3\n\n2.1.2 Modelos baseados em interfaces . . . . . . . . . . . . . . . . . . . . 4\n\n2.1.3 Modelos de malhas tridimensionais . . . . . . . . . . . . . . . . . . 5\n\n2.2 Nossa abordagem . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 7\n\n2.2.1 Blocos simploidais . . . . . . . . . . . . . . . . . . . . . . . . . . . 7\n\n2.2.2 Informac?o?es topolo?gicas . . . . . . . . . . . . . . . . . . . . . . . . 8\n\n2.2.3 Restric?o?es intra- e inter-blocos . . . . . . . . . . . . . . . . . . . . . 8\n\n3 Polino?mios de Bernstein 11\n\n3.1 A base de Bernstein univariada . . . . . . . . . . . . . . . . . . . . . . . . 11\n\n3.2 Representac?a?o de Be?zier para polino?mios . . . . . . . . . . . . . . . . . . . 12\n\n3.3 Elevac?a?o de grau . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 13\n\n3.4 Diferenciac?a?o . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 13\n\n3.5 Arco de Be?zier . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 14\n\n4 Multi-, hiper- e ultra-??ndices 17\n\n4.1 Multi-??ndices . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 17\n\n4.2 Matrizes irregulares e hiper-??ndices . . . . . . . . . . . . . . . . . . . . . . 19\n\n4.3 Ultra-??ndices . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 20\n\nxiii\n\n\n\n5 Elementos de Be?zier tensoriais 23\n\n5.1 Polino?mios tensoriais . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 23\n\n5.1.1 A base de Bernstein tensorial . . . . . . . . . . . . . . . . . . . . . 23\n\n5.1.2 A representac?a?o de Be?zier de polino?mios tensoriais . . . . . . . . . 25\n\n5.1.3 Elevac?a?o de grau . . . . . . . . . . . . . . . . . . . . . . . . . . . . 25\n\n5.1.4 Diferenciac?a?o . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 25\n\n5.1.5 Derivada direcional . . . . . . . . . . . . . . . . . . . . . . . . . . . 26\n\n5.2 Elementos tensoriais de Be?zier . . . . . . . . . . . . . . . . . . . . . . . . . 27\n\n6 Elementos de Be?zier simpliciais 31\n\n6.1 Espac?os afins cano?nicos . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 31\n\n6.1.1 Simplexos cano?nicos . . . . . . . . . . . . . . . . . . . . . . . . . . 32\n\n6.1.2 Facetas . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 32\n\n6.2 Polino?mios simpliciais . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 32\n\n6.2.1 A base de Bernstein simplicial . . . . . . . . . . . . . . . . . . . . . 33\n\n6.2.2 A representac?a?o de Be?zier de polino?mios simpliciais . . . . . . . . . 35\n\n6.2.3 Elevac?a?o de grau . . . . . . . . . . . . . . . . . . . . . . . . . . . . 35\n\n6.2.4 Derivada direcional . . . . . . . . . . . . . . . . . . . . . . . . . . . 35\n\n6.3 Elementos simpliciais de Be?zier . . . . . . . . . . . . . . . . . . . . . . . . 36\n\n7 Conversa?o tensorial/simplicial 41\n\n7.1 Mapeamento cano?nico tensorial/simplicial . . . . . . . . . . . . . . . . . . 41\n\n7.2 Conversa?o de tensorial para simplicial . . . . . . . . . . . . . . . . . . . . . 44\n\n7.3 Conversa?o de simplicial para tensorial . . . . . . . . . . . . . . . . . . . . . 45\n\n8 Simplo?ides de Be?zier 47\n\n8.1 Espac?o multi-afim cano?nico . . . . . . . . . . . . . . . . . . . . . . . . . . 47\n\n8.1.1 Simplo?ides cano?nicos . . . . . . . . . . . . . . . . . . . . . . . . . . 48\n\n8.1.2 Facetas . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 48\n\n8.2 Polino?mios simploidais . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 49\n\n8.2.1 A base de Bernstein simploidal . . . . . . . . . . . . . . . . . . . . 49\n\n8.2.2 Representac?a?o de Be?zier de polino?mios simploidais . . . . . . . . . 50\n\n8.2.3 Elevac?a?o de grau . . . . . . . . . . . . . . . . . . . . . . . . . . . . 50\n\n8.2.4 Diferenciac?a?o . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 52\n\n8.3 Elementos de Be?zier Simploidais . . . . . . . . . . . . . . . . . . . . . . . . 53\n\n9 Mapeamentos afins 55\n\n9.1 Mapeamento afim de A? para A? . . . . . . . . . . . . . . . . . . . . . . . 55\n\n9.1.1 Mapeamento afim cano?nico de Ad para A1?d . . . . . . . . . . . . . 56\n\nxiv\n\n\n\n9.2 Derivadas de um mapeamento afim . . . . . . . . . . . . . . . . . . . . . . 56\n\n9.3 Exemplos . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 56\n\n9.3.1 Mapeamento afim de A(1) para A(2) . . . . . . . . . . . . . . . . . . 56\n\n9.3.2 Mapeamento afim de A(2) para A(2) . . . . . . . . . . . . . . . . . . 57\n\n9.3.3 Mapeamento afim de A(2) para A(2,1) . . . . . . . . . . . . . . . . . 57\n\n9.3.4 Mapeamento afim de A(1,1) para A(2) . . . . . . . . . . . . . . . . . 58\n\n9.3.5 Mapeamento afim de A(1,1) para A(1,1) . . . . . . . . . . . . . . . . 59\n\n10 Reparametrizac?a?o de elementos de Be?zier 61\n\n10.1 Reparametrizac?a?o afim . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 62\n\n10.2 Mapeamento de simploidal para simplicial . . . . . . . . . . . . . . . . . . 64\n\n10.3 Reparametrizac?a?o afim gene?rica . . . . . . . . . . . . . . . . . . . . . . . . 65\n\n10.4 Derivada direcional da reparametrizac?a?o . . . . . . . . . . . . . . . . . . . 67\n\n11 Aspectos gerais da implementac?a?o 69\n\n11.1 Elementos de Be?zier . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 69\n\n11.2 Blocos de Be?zier generalizados . . . . . . . . . . . . . . . . . . . . . . . . . 72\n\n11.3 Compartilhamento de para?metros . . . . . . . . . . . . . . . . . . . . . . . 76\n\n11.4 Para?metros internos e externos . . . . . . . . . . . . . . . . . . . . . . . . 78\n\n11.5 Extrac?a?o de componentes . . . . . . . . . . . . . . . . . . . . . . . . . . . 82\n\n11.6 Extrac?a?o de facetas . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 83\n\n11.7 Elevac?a?o de grau . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 88\n\n11.8 Reparametrizac?a?o . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 91\n\n11.9 Derivada direcional . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 91\n\n12 Restric?o?es entre blocos 93\n\n12.1 Colagem na?o-conforme . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 93\n\n12.2 Restric?o?es entre para?metros internos . . . . . . . . . . . . . . . . . . . . . 94\n\n12.3 Colagem na?o-conforme geral . . . . . . . . . . . . . . . . . . . . . . . . . . 102\n\n12.4 Colagem com imposic?a?o de suavidade . . . . . . . . . . . . . . . . . . . . . 105\n\n13 A biblioteca bezEl 107\n\n13.1 Estruturas de indexac?a?o . . . . . . . . . . . . . . . . . . . . . . . . . . . . 107\n\n13.1.1 Multi-??ndices . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 107\n\n13.1.2 Hiper-??ndices . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 108\n\n13.1.3 Ultra-??ndices . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 109\n\n13.2 Espac?os multi-afins . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 109\n\n13.2.1 Matrizes irregulares . . . . . . . . . . . . . . . . . . . . . . . . . . . 109\n\n13.2.2 Matrizes regulares . . . . . . . . . . . . . . . . . . . . . . . . . . . 110\n\nxv\n\n\n\n13.2.3 Pontos e vetores de espac?os multi-afins . . . . . . . . . . . . . . . . 110\n\n13.2.4 Mapeamento afim . . . . . . . . . . . . . . . . . . . . . . . . . . . . 110\n\n13.3 Polino?mios Simploidais . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 111\n\n13.4 Elementos de Be?zier simploidais . . . . . . . . . . . . . . . . . . . . . . . . 112\n\n13.4.1 Tipos de bloco . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 112\n\n13.4.2 Blocos de Be?zier . . . . . . . . . . . . . . . . . . . . . . . . . . . . 114\n\n13.5 Modelos . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 115\n\n13.5.1 Colec?a?o de blocos . . . . . . . . . . . . . . . . . . . . . . . . . . . . 115\n\n13.5.2 Reposito?rio de para?metros externos . . . . . . . . . . . . . . . . . . 115\n\n13.5.3 Equac?o?es entre varia?veis . . . . . . . . . . . . . . . . . . . . . . . . 115\n\n13.5.4 Reposito?rios de equac?o?es . . . . . . . . . . . . . . . . . . . . . . . . 116\n\n13.5.5 Estrutura topolo?gica . . . . . . . . . . . . . . . . . . . . . . . . . . 116\n\n13.6 Classes adicionais . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 117\n\n13.6.1 Visualizac?a?o . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 117\n\n13.6.2 Coletor de lixo . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 117\n\n14 Editor de modelos 2D 119\n\n14.1 Editor de topologia e propriedades f??sicas . . . . . . . . . . . . . . . . . . . 119\n\n14.2 Editor de geometria . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 124\n\n15 Simulac?a?o s??smica 127\n\n15.1 Trac?ado de raios . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 127\n\n15.1.1 Ondas s??smicas . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 128\n\n15.1.2 Equac?o?es do raio . . . . . . . . . . . . . . . . . . . . . . . . . . . . 128\n\n15.1.3 Custo da integrac?a?o em coordenadas cartesianas . . . . . . . . . . . 129\n\n15.1.4 Interac?a?o do raio com interfaces . . . . . . . . . . . . . . . . . . . . 130\n\n15.2 Trac?ado de raios nas coordenadas locais do bloco . . . . . . . . . . . . . . 130\n\n15.2.1 Normalizac?a?o de U(t) . . . . . . . . . . . . . . . . . . . . . . . . . . 132\n\n15.2.2 Custo da integrac?a?o em coordenadas locais do bloco . . . . . . . . . 132\n\n15.3 Exemplo nume?rico . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 132\n\n16 Concluso?es 135\n\nBibliografia 137\n\nxvi\n\n\n\nLista de Tabelas\n\n11.1 Tabela com valores de ? para diferentes ?. . . . . . . . . . . . . . . . . . . 82\n\n13.1 Enumerac?a?o de multi-??ndices . . . . . . . . . . . . . . . . . . . . . . . . . . 108\n\nxvii\n\n\n\nLista de Figuras\n\n2.1 (a) Ilustrac?a?o esquema?tica da geologia de uma regia?o e (b) modelagem da\n\nmesma por uma grade uniforme. . . . . . . . . . . . . . . . . . . . . . . . . 4\n\n2.2 Modelo baseado em interfaces criado no sistema de modelagem do software\n\nNorsar. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 5\n\n2.3 Exemplos de modelos constru??dos por softwares comerciais: (a) Modelo\n\ncriado usando earthVision, da empresa Dynamic Grahics que usa apenas\n\npor blocos hexae?dricos tricu?bicos. (b) Modelo criado usando goCAD, da\n\nempresa Paradigm, formado por por elementos prisma?ticos de bases variadas. 6\n\n2.4 Modelo geolo?gico representado utilizando nossa abordagem. . . . . . . . . . 7\n\n2.5 Ilustrac?a?o da abordagem acoplada para modelagem de geometria e propri-\n\nedades f??sicas. (a) Modelo inicial e (b) modelo depois de alterar a geometria. 9\n\n2.6 Modelo geolo?gico constru??do com nossa biblioteca BezEl, usando blocos\n\nhexae?dricos e tetrae?dricos. . . . . . . . . . . . . . . . . . . . . . . . . . . . 10\n\n3.1 Elementos da base de Bernstein univariada de grau 4 . . . . . . . . . . . . 12\n\n3.2 Um arco de Be?zier F de grau 4 no R2 (esquerda em vermelho) mostrando\n\nseus pontos de controle de Be?zier (em azul) e a poligonal de Be?zier (trace-\n\njada); e os gra?ficos de suas componentes F0(z) = 2z\n4 +3z e F1(z) = z\n\n4 +z2\n\n(direita) mostrando os respectivos coeficientes de Be?zier (pontos azuis). . . 15\n\n5.1 Alguns dos 12 polino?mios B?? da base de Bernstein tensorial de P\n(3,2)\n2 . Os\n\neixos vermelho, verde e azul representam x0, x1 e B\n(3,2)\n? (x0,x1). . . . . . . . 24\n\n5.2 (a) Um elemento tensorial de Be?zier F de dimensa?o 2 (retalho) e multi-grau\n\n(2, 3) no R3; e suas componentes (b) F0, (c) F1 e (d) F2. . . . . . . . . . . 28\n\n5.3 A grade de controle (em vermelho) de um retalho tensorial de Be?zier de\n\ndimensa?o 2 e multi-grau (3, 2)(amarelo). . . . . . . . . . . . . . . . . . . . 29\n\n6.1 Espac?os afins A1 e A2. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 31\n\n6.2 Simplexos cano?nicos. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 32\n\n6.3 Polino?mios da base de Benstein simplicial de P32 . . . . . . . . . . . . . . . . 34\n\nxix\n\n\n\n6.4 (a) Um elemento simplicial de Be?zier F de dimensa?o 2 (retalho triangular)\n\ne grau 3 no R3; e suas componentes (b) F0, (c) F1 e (d) F2. . . . . . . . . . 38\n\n6.5 Um elemento simplicial de Be?zier de dimensa?o 2 e grau 3, e sua grade de\n\ncontrole (em vermelho). . . . . . . . . . . . . . . . . . . . . . . . . . . . . 39\n\n7.1 Colando um retalho 3D tensorial a um retalho tetrae?drico. . . . . . . . . . 41\n\n7.2 O mapeamento cano?nico ?2. . . . . . . . . . . . . . . . . . . . . . . . . . . 42\n\n7.3 O mapeamento cano?nico ?3. . . . . . . . . . . . . . . . . . . . . . . . . . . 42\n\n7.4 O mapeamento cano?nico ?2 e a relac?a?o entre um polino?mio tensorial f\n?,\n\ndefinido no R2, e sua forma simplicial cano?nica f ??. . . . . . . . . . . . . . 43\n\n8.1 O prisma cano?nico (esquerda) e um exemplo de um bloco de Be?zier sim-\n\nploidal (direita). . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 47\n\n8.2 Alguns simplo?ides cano?nicos. . . . . . . . . . . . . . . . . . . . . . . . . . . 48\n\n8.3 Um elemento de Be?zier simploidal de multi-dimensa?o (1, 2) (um prisma de\n\nBe?zier) e multi-grau (2, 3) mostrando seus pontos de controle e sua grade\n\nde Be?zier (em vermelho). . . . . . . . . . . . . . . . . . . . . . . . . . . . . 54\n\n9.1 Exemplo de um mapeamento afim de A(1) para A(2) (ou de A1 para A2). . 57\n\n9.2 Exemplo de mapeamento afim de A(2) para A(2) (ou de A2 para A2). . . . . 57\n\n9.3 Exemplo de um mapeamento afim de A(2) (ou A2) para A(2,1). . . . . . . . 58\n\n9.4 Exemplo de um mapeamento afim de A(1,1) para A(2) (ou A2). Note que\n\nos segmentos AB e CD, que sa?o imagens das facetas K1,1|1,0 e K\n1,1|1,1, sa?o\n\nparalelas entre si. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 59\n\n9.5 Exemplo de um mapeamento afim de A(1,1) para A(1,1). . . . . . . . . . . . 60\n\n10.1 Bloco de Be?zier de dom??nio prisma?tico . . . . . . . . . . . . . . . . . . . . 61\n\n10.2 Uma func?a?o F , de A(2) para R, restrita ao K(2) (em amarelo) e sua repa-\n\nrametrizac?a?o pelo mapeamento afim ? de A(1,1) para A(2), da sec?a?o 9.3.4,\n\nresultando na func?a?o F ??, de A(1,1) para R, restrita ao K(1,1) (em vermelho). 63\n\n11.1 Exemplo de modelo geolo?gico. . . . . . . . . . . . . . . . . . . . . . . . . . 70\n\n11.2 Representac?a?o de Be?zier de um bloco do modelo da figura 11.1, mostrando\n\na grade de controle de Be?zier (em vermelho) e, para alguns pontos, os\n\nrespectivos ??ndices. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 71\n\n11.3 Outro exemplo de um bloco de Be?zier de multi-dimensa?o (1, 1, 1) e multi-\n\ngraus (3, 3, 1). . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 72\n\nxx\n\n\n\n11.4 Representac?a?o mais econo?mica dos blocos da figura 11.1. Os pontos verme-\n\nlhos, verdes e azuis representam os coeficientes de Be?zier das componentes\n\nX,Y e Z respectivamente. Observe que apenas uma coordenada de cada\n\nponto e? livre. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 74\n\n11.5 Implementac?a?o de um bloco de Be?zier. . . . . . . . . . . . . . . . . . . . . 75\n\n11.6 Implementac?a?o do compartilhamento de para?metros entre blocos de Be?zier 76\n\n11.7 Colagem conforme de dois blocos do tipo brickKind. . . . . . . . . . . . . 77\n\n11.8 Diagrama da colagem conforme de dois blocos que compo?em a malha da\n\nfigura 11.1 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 78\n\n11.9 Uma malha pseudo-cil??ndrica composta por 3 pares de ane?is conce?ntricos,\n\ncada um formado por 4 blocos. . . . . . . . . . . . . . . . . . . . . . . . . 79\n\n11.10Um bloco simploidal para a malha da figura 11.9. Os pontos amarelos sa?o\n\npontos de controle de Be?zier das coordenadas X e Y enquanto os pontos\n\nazuis sa?o os pontos de controle de Be?zier da coordenada Z. . . . . . . . . . 79\n\n11.11Ilustrac?a?o dos para?metros que derivam os coeficientes de Be?zier de blocos\n\nque compo?em a malha da figura 11.9. . . . . . . . . . . . . . . . . . . . . . 80\n\n11.12Esquema da relac?a?o o reposito?rio de para?metros, um bloco e seu tipo com\n\nmatrizes de conversa?o entre para?metros externos e internos. . . . . . . . . . 82\n\n11.13Um bloco prisma?tico de multi-grau (2, 2) e suas facetas (1, 0) e (0, 2). . . . 85\n\n11.14Extrac?a?o de facetas de um prisma da figura 11.13 . . . . . . . . . . . . . . 86\n\n11.15Facetas do bloco da malha cil??ndrica: (a) Faceta (0, 0), (b) . . . . . . . . . 86\n\n11.16Extrac?a?o de facetas do prisma da figura 11.13 . . . . . . . . . . . . . . . . 87\n\n11.17Elevac?a?o de grau de um bloco prisma?tico de multi-grau (2, 2) para (3, 3). . 88\n\n11.18Diagrama ilustrativo da elevac?a?o de grau de um bloco prisma?tico. . . . . . 89\n\n11.19Elevac?a?o de grau de um bloco da malha pseudo-cil??ndrica de grau (0, 3, 3)\n\nem X,Y e (1, 0, 0) em Z, para (3, 3, 3) em X, Y e Z. . . . . . . . . . . . . 90\n\n11.20Diagrama ilustrativo da elevac?a?o de grau de um bloco da malha pseudo-\n\ncil??ndrica. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 90\n\n12.1 Uso de restric?o?es entre para?metros externos de dois blocos pseudo-cil??ndricos:\n\no cyl A (em verde) e o cyl B (em amarelo). . . . . . . . . . . . . . . . . . 94\n\n12.2 Representac?a?o das restric?o?es 12.1 a 12.4 na BezEl. . . . . . . . . . . . . . . 95\n\n12.3 Adic?a?o de um poc?o ao modelo da figura 11.1. . . . . . . . . . . . . . . . . 96\n\n12.4 Regia?o em torno do poc?o. . . . . . . . . . . . . . . . . . . . . . . . . . . . 97\n\n12.5 Diagrama da colagem conforme de um bloco que compo?e o poc?o com um\n\nbloco de transic?a?o. Denotamos por X , E e I as operac?o?es de extrac?a?o\n\nde uma faceta, elevac?a?o de grau e identificac?a?o de coeficientes de Be?zier,\n\nrespectivamente. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 101\n\nxxi\n\n\n\n12.6 Colagem na?o-conforme de um bloco prism de dom??nio K(2,1) e grau (2, 2)\n\ncom um bloco tetra de dom??nio K(3) e grau (2). . . . . . . . . . . . . . . . 102\n\n12.7 Colagem na?o-conforme. Ilustrac?a?o dos blocos para colagem, seus dom??nios\n\ne o mapeamento de colagem. Denotamos por X , E, R e I as operac?o?es de\n\nextrac?a?o de uma faceta, elevac?a?o de grau, reparametrizac?a?o e identificac?a?o\n\nde coeficientes de Be?zier, respectivamente. . . . . . . . . . . . . . . . . . . 104\n\n12.8 Colagem com suavidade. Na figura, o ponto P ? R3 e? A.F(U) = B.F(?(U)),\n\ne o vetor ? ? R3 e? (D?A.F)(U) = (D?B.F)(?(U)). . . . . . . . . . . . . . . 106\n\n14.1 Primeira etapa: definic?a?o das linhas nodais sobre a regia?o de interesse. . . 120\n\n14.2 Segunda etapa: definic?a?o das interfaces (incluindo os limites superior e\n\ninferior do modelo) . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 121\n\n14.3 Terceira etapa: identificac?a?o das fa?cies (indicadas por cores arbitra?rias). . . 122\n\n14.4 Quarta etapa: decomposic?a?o das fa?cies em blocos triangulares. . . . . . . . 122\n\n14.5 Quinta etapa: especificac?a?o das velocidades em cada fa?cie. . . . . . . . . . 123\n\n14.6 Interface do editor de geometria. As coordenadas Z dos pontos vermelhos\n\nsa?o os coeficientes do modelo. . . . . . . . . . . . . . . . . . . . . . . . . . 126\n\n15.1 Ilustrac?a?o da propagac?a?o de uma onda s??smica resultante de um impulso\n\ninicial no instante t = 0 e no ponto R(0), mostrando a frente de onda em\n\ndois instantes subsequ?entes t = t1 e t = t2, e um raio (em vermelho) com\n\ndirec?a?o inicial p(0). . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 129\n\n15.2 Ilustrac?a?o do trac?ado de raios nas coordenadas locais de um bloco simploi-\n\ndal bidimensional. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 131\n\n15.3 Modelo geof??sico criado pelo editor TopEdit. As velocidades variam de\n\n1500m/s (ciano) a 5000m/s (vermelho). . . . . . . . . . . . . . . . . . . . . 133\n\n15.4 Simulac?a?o s??smica por trac?amento de raios. Raios refletidos (a) na base da\n\nprimeira camada e (b) na base da segunda camada. . . . . . . . . . . . . . 134\n\nxxii\n\n\n\nCap??tulo 1\n\nIntroduc?a?o\n\nA explorac?a?o e monitoramento de um reservato?rio de petro?leo ou ga?s natural exige conhe-\n\ncimento bastante detalhado das estruturas geolo?gicas da regia?o, num volume que pode\n\ncobrir centenas de quilo?metros quadrados de a?rea e va?rios quilo?metros de profundidade.\n\nEssas informac?o?es sa?o fundamentais tanto para a localizac?a?o de novas jazidas petrol??feras,\n\nquanto para o melhor aproveitamento das jazidas existentes.\n\n1.1 Modelagem Geof??sica\n\nEsses para?metros incluem a densidade, velocidade de propagac?a?o de ondas s??smicas, po-\n\nrosidade, conteu?do de o?leo, a?gua e ga?s, etc. Um sistema de modelagem geof??sica e? uma\n\ncolec?a?o de software para criac?a?o, manipulac?a?o e uso de tais modelos.\n\nNesta tese descrevemos um sistema geral para modelagem geof??sica. Como e? usual\n\nna maioria de tais sistemas, a geometria e as propriedades das formac?o?es geolo?gicas sa?o\n\nrepresentadas por splines, as quais consistem da justaposic?a?o de diversos blocos de ge-\n\nometria simples deformados por func?o?es polinomiais. Estes incluem blocos simpliciais\n\n(tetraedros ou tria?ngulos), os blocos tensoriais (hexaedros ou reta?ngulos) e os blocos sim-\n\nploidais que sa?o uma generalizac?a?o dos dois anteriores incluindo, por exemplo, prismas\n\nde base triangular.\n\nO sistema desenvolvido nesta tese permite a utilizac?a?o de blocos de todos estes tipos\n\nem um mesmo modelo. Neste trabalho, desenvolvemos uma teoria matema?tica geral para\n\nblocos simploidais, que trata blocos diferentes dom??nios, graus e dimenso?es de maneira\n\nuniforme. Esta ana?lise teo?rica inclui fo?rmulas gerais expl??citas para elevac?a?o de grau,\n\ndiferenciac?a?o e conversa?o entre os diversos tipos de splines simploidais.\n\nPara validac?a?o da teoria, implementamos uma biblioteca na linguagem C++, que\n\ndenominamos BezEl, que permite construir e manipular modelos geolo?gicos formados por\n\nblocos simploidais gerais.\n\n1\n\n\n\n2 Cap??tulo 1. Introduc?a?o\n\nUma novidade desta biblioteca e? um mecanismo gene?rico para implementar restric?o?es\n\nentre os para?metros dos blocos, por exemplo para restringir a geometria de um bloco ou\n\npara impor continuidade entre blocos adjacentes. Este mecanismo e? geral o bastante para\n\npermitir colagens na?o-conformes, onde uma u?nica face de um bloco corresponde a? unia?o\n\nde duas ou mais faces de blocos adjacentes\n\nAle?m de geral, a implementac?a?o de cada bloco permite a representac?a?o econo?mica de\n\nblocos com geometria restrita, por exemplo, quando va?rios blocos similares sa?o usados\n\npara formar uma malha uniforme.\n\nEmbora a modelagem geof??sica tenha sido a motivac?a?o original e orientadora deste\n\ntrabalho, as ferramentas sa?o potencialmente u?teis em outras a?reas como engenharia civil,\n\nmeca?nica, hidra?ulica, aerona?utica, metereologia, oceanografia, astrof??sica, animac?a?o, etc.\n\nNo pro?ximo cap??tulo, descrevemos as principais abordagens para representac?a?o de\n\nmodelos geolo?gicos. O restante da tese consiste de duas partes: a formulac?a?o matema?tica\n\ne a validac?a?o computacional. Na primeira parte, descrevemos os polino?mios de Bernstein\n\n(cap??tulo 3), os elementos de Be?zier tensoriais (cap??tulo 5), simpliciais (cap??tulo 6) e a\n\nconversa?o entre eles (cap??tulo 7). Em seguida, formalizamos os elementos simploidais\n\n(cap??tulo 8) e sua reparametrizac?a?o afim (cap??tulo 10).\n\nNa segunda parte, descrevemos os aspectos gerais da biblioteca BezEl (cap??tulo 11),\n\ndetalhamos o uso de restric?o?es nesta biblioteca (cap??tulo 12), e descrevemos um exemplo\n\nde utilizac?a?o da mesma, consistindo de um editor gra?fico de modelos geolo?gicos bidimensi-\n\nonais (cap??tulo 14). Finalmente, descrevemos uma metodologia para trac?amento de raios\n\neficiente em malhas de elementos simploidais (cap??tulo 15) que implementamos como um\n\nproto?tipo em Java Applet.\n\n\n\nCap??tulo 2\n\nModelos geolo?gicos\n\nPara muitos fins, a geologia de uma regia?o pode ser modelada adequadamente por uma\n\ncolec?a?o de fa?cies \u2014 regio?es tridimensionais, dentro das quais as propriedades do meio\n\nvariam suavemente \u2014 separadas por interfaces \u2014 superf??cies onde as propriedades do\n\nmeio apresentam alguma descontinuidade.\n\nUm modelo geof??sico deve capturar os aspectos relevantes tanto da geometria das inter-\n\nfaces quanto da litologia (composic?a?o e propriedades f??sicas) das fa?cies. Para simulac?a?o\n\ns??smica por trac?ado de raios, por exemplo, o sistema de modelagem deve ser capaz de\n\nrepresentar interfaces como superf??cies suaves (C1 ou C2) e deve tambe?m ser capaz de\n\nmodelar variac?a?o suave de propriedades f??sicas dentro de cada fa?cie.\n\n2.1 Principais abordagens\n\nHa? tre?s grandes categorias de sistemas de modelagem geof??sica em uso corrente: (a)\n\nsistemas baseados em grade uniforme, (b) sistemas baseados em interfaces e (c) sistemas\n\nbaseados em malhas tridimensionais.\n\n2.1.1 Modelos baseados em grade uniforme\n\nUma te?cnica cla?ssica para modelagem geof??sica e? cobrir a regia?o de interesse com uma\n\ngrade densa e uniforme, armazenando as propriedades f??sicas de interesse em cada no? da\n\ngrade. Veja a figura 2.1. Estes modelos sa?o simples e extremamente flex??veis, mas na?o\n\nconseguem modelar precisamente descontinuidades abruptas e intruso?es estreitas. Por\n\nesta raza?o, sa?o mais utilizados em aplicac?o?es de imageamento baseado na equac?a?o da\n\nonda (wave equation methods), que na?o requerem elevada precisa?o na representac?a?o das\n\npropriedades f??sicas.\n\n3\n\n\n\n4 Cap??tulo 2. Modelos geolo?gicos\n\n(a) (b)\n\nFigura 2.1: (a) Ilustrac?a?o esquema?tica da geologia de uma regia?o e (b) modelagem da mesma\npor uma grade uniforme.\n\n2.1.2 Modelos baseados em interfaces\n\nEm sistemas baseados em interfaces geolo?gicas, as fronteiras entre fa?cies sa?o modeladas\n\nexplicitamente por malhas bidimensionais. A geometria das fa?cies e? definida indireta-\n\nmente, como sendo a partic?a?o da regia?o de interesse definida pelas interfaces. Sua grande\n\nvantagem sobre os modelos baseados em grade uniforme e? a capacidade de representar\n\ndescontinuidades abruptas de forma precisa.\n\nDentre os sistemas baseados em interfaces, os mais simples permitem apenas mode-\n\nlos do tipo \u201cbolo de camadas\u201d (layer cake), onde a profundidade z de cada interface e?\n\nconsiderada uma func?a?o da posic?a?o horizontal (x,y). Esta abordagem permite modelar\n\nsucesso?es de camadas de formas e espessuras varia?veis, mas na?o permite modelar geolo-\n\ngias mais complexas, como camadas dobradas sobre si mesmas (cavalgamentos), falhas,\n\nintruso?es, etc.\n\nOutros sistemas suportam interfaces e fa?cies com geometrias mais complexas. Um\n\nexemplo e? o sistema descrito por Vinje [26]. Nesse sistema, cada interface e? implementada\n\npor uma malha triangular onde as posic?o?es dos no?s sa?o dados do modelo. Veja a figura 2.2.\n\nInformac?o?es adicionais sobre as interfaces (como normal e curvatura) sa?o estimadas pelo\n\nsistema e armazenadas nos no?s da malha [20]. As propriedades f??sicas dentro de cada fa?cie\n\nsa?o modeladas por func?o?es das coordenadas x,y,z do ponto, representadas por splines\n\ntricu?bicas.\n\n\n\n2.1. Principais abordagens 5\n\nFigura 2.2: Modelo baseado em interfaces criado no sistema de modelagem do software Norsar.\n\n2.1.3 Modelos de malhas tridimensionais\n\nNos sistemas baseados em malhas tridimensionais, a regia?o de interesse e? particionada\n\nce?lulas ou blocos, cuja geometria relativamente simples e? descrita por um pequeno nu?mero\n\nde para?metros (ver, por exemplo Konig [16] ou Wang [28]). Combinando um nu?mero\n\nsuficiente de blocos pode-se representar geologias arbitrariamente complexas.\n\nPara serem vantajosos, estes sistemas precisam suportar blocos com facetas na?o pla-\n\nnas, que permitam modelar interfaces suaves. Uma escolha comum sa?o blocos polinomiais,\n\nonde cada bloco e? a imagem de algum so?lido geome?trico simples por uma func?a?o polino-\n\nmial.\n\nUm exemplo desta categoria e? o sistema descrito por Meng e Bleinstein [21]. Esse\n\nsistema usa blocos tetrae?dricos de grau 3 que preenchem a regia?o de interesse. Cada fa?cie\n\ne? modelada por um subconjunto dos tetraedros, e cada interface e? a colec?a?o dos retalhos\n\ntriangulares que separam duas fa?cies.\n\nOutro exemplo e? o sistema PZ de Devloo [7] cujos blocos sa?o generalizac?o?es dos blocos\n\nde Coons [4], definidos por interpolac?a?o de pontos, curvas e superf??cies parame?tricas.\n\nDependendo dos tipos de blocos permitidos, sistemas baseados em malhas tridimen-\n\nsionais permitem modelar estruturas geolo?gicas de forma arbitra?ria com continuidade e\n\nsuavidade. Normalmente eles permitem construir modelos com milho?es de blocos, mas\n\ngeralmente restringem os tipos de blocos a um u?nico tipo de elemento, simplicial ou ten-\n\nsorial. A figura 2.3 mostra dois exemplos de modelos geolo?gicos criados usando softwares\n\ncomerciais.\n\n\n\n6 Cap??tulo 2. Modelos geolo?gicos\n\n(a)\n\n(b)\n\nFigura 2.3: Exemplos de modelos constru??dos por softwares comerciais: (a) Modelo criado usando\nearthVision, da empresa Dynamic Grahics que usa apenas por blocos hexae?dricos tricu?bicos. (b)\nModelo criado usando goCAD, da empresa Paradigm, formado por por elementos prisma?ticos\nde bases variadas.\n\n\n\n2.2. Nossa abordagem 7\n\n2.2 Nossa abordagem\n\n2.2.1 Blocos simploidais\n\nNosso sistema de modelagem e? baseado em malhas tridimensionais. Cada elemento da\n\nmalha e? um bloco simploidal, que consiste em um conjunto de func?o?es polinomiais que\n\ndescrevem na?o apenas a geometria do bloco como tambe?m uma colec?a?o arbitra?ria de\n\npropriedades f??sicas (densidade, elasticidade, etc) no seu interior. A figura 2.4 mostra um\n\nexemplo de modelo geolo?gico representado utilizando nossa abordagem que consiste de\n\nmais de 645 mil blocos hexae?dricos de grau 1.\n\nFigura 2.4: Modelo geolo?gico representado utilizando nossa abordagem.\n\nTanto a geometria quanto a f??sica sa?o definidas em func?a?o do mesmo sistema de coordena-\n\ndas locais, que sa?o coordenadas barice?ntricas relativas ao dom??nio do bloco (por exemplo\n\num tetraedro regular ou um cubo unita?rio). A geometria e? definida por tre?s func?o?es X,Y\n\ne Z, que fornecem as coordenadas reais na regia?o de interesse de cada ponto do bloco,\n\ndadas suas coordenadas locais U. As propriedades f??sicas desse mesmo ponto sa?o dadas\n\npor func?o?es adicionais das coordenadas locais U. Neste ponto, nossa abordagem difere de\n\nva?rios sistemas, como o de Vinje [26], onde as propriedades f??sicas sa?o modeladas como\n\nfunc?o?es das coordenadas reais X,Y e Z.\n\nNossa abordagem tem a vantagem de que alterac?o?es na geometria das fa?cies acarretam\n\n\n\n8 Cap??tulo 2. Modelos geolo?gicos\n\nautomaticamente as alterac?o?es adequadas nas propriedades. Veja figura 2.5. Por outro\n\nlado, esta abordagem e? inconveniente quando e? necessa?rio determinar as propriedades\n\nf??sicas a partir das coordenadas X,Y e Z; como ocorre, por exemplo, na simulac?a?o s??smica.\n\nNo cap??tulo 15, apresentaremos um me?todo para contornar esta limitac?a?o.\n\nOs blocos simploidais permitidos na nossa abordagem incluem tetraedros, hexaedros e\n\nprismas triangulares com paredes curvas de grau arbitra?rio. Eles na?o incluem blocos mais\n\ncomplexos, como octaedros, pira?mides de base quadrada, prismas hexagonais, etc. (Esta\n\nlimitac?a?o pode ser contornada utilizando dois ou mais blocos simploidais para modelar\n\nestas outras formas.) A figura 2.6 mostra um exemplo de modelo geolo?gico que combina\n\nblocos hexae?dricos de grau 3 e blocos tetrae?dricos de grau 1.\n\n2.2.2 Informac?o?es topolo?gicas\n\nNo nosso sistema, um modelo conte?m, ale?m da colec?a?o e blocos, uma relac?a?o de adjace?ncia\n\nque descreve a topologia da malha e, para cada par de blocos adjacentes, um mapeamento\n\nde colagem que relaciona as coordenadas locais dos dois blocos na faceta comum.\n\n2.2.3 Restric?o?es intra- e inter-blocos\n\nCada modelo tambe?m inclui, opcionalmente, um conjunto de restric?o?es sobre os para?me-\n\ntros dos blocos que o compo?em. Estas restric?o?es podem incluir, por exemplo, condic?o?es\n\nde continuidade (restric?o?es inter-blocos), que garantem que na?o haja frestas ou sobre-\n\nposic?a?o entre blocos vizinhos, que as interfaces possuam derivadas cont??nuas, ou que as\n\npropriedades f??sicas variam suavemente de um bloco para outro da mesma fa?cie. Outros\n\ntipos de restric?o?es (restric?o?es intra-blocos) podem ser utilizadas para eliminar para?metros\n\ndesnecessa?rios na descric?a?o de cada bloco. Estas restric?o?es podem ser utilizadas para\n\ngarantir que as condic?o?es acima sejam satisfeitas durante a construc?a?o e edic?a?o interativa\n\ndo modelo.\n\n\n\n2.2. Nossa abordagem 9\n\n(a)\n\n(b)\n\nFigura 2.5: Ilustrac?a?o da abordagem acoplada para modelagem de geometria e propriedades\nf??sicas. (a) Modelo inicial e (b) modelo depois de alterar a geometria.\n\n\n\n10 Cap??tulo 2. Modelos geolo?gicos\n\nFigura 2.6: Modelo geolo?gico constru??do com nossa biblioteca BezEl, usando blocos hexae?dricos\ne tetrae?dricos.\n\n\n\nCap??tulo 3\n\nPolino?mios de Bernstein\n\nNeste cap??tulo, revisamos conceitos relacionados aos polino?mios de Bernstein-Be?zier uni-\n\nvariados, e definimos o conceito de arcos de Be?zier.\n\n3.1 A base de Bernstein univariada\n\nPara qualquer g ? N, a base de Bernstein univariada de grau g consiste dos polino?mios\n\nB\ng\ni , para i = 0, \u00b7 \u00b7 \u00b7 ,g, definidos por:\n\nB\ng\ni (z) =\n\n(\n\ng\n\ni\n\n)\n\nzi (1 ? z)g?i (3.1)\n\npara todo z ? R [1]. Na teoria de Be?zier e? conveniente introduzir a notac?a?o z? = 1 ? z.\n\nNesta notac?a?o, a fo?rmula 3.1 fica\n\nB\ng\ni (z) =\n\n(\n\ng\n\ni\n\n)\n\nzi z? g?i (3.2)\n\nVeja a figura 3.1.\n\nNote que a fo?rmula (3.2) e? o termo geral da fo?rmula de Newton para pote?ncia g do\n\nbino?mio (z + z?)g. Os polino?mios de Bernstein sa?o importantes tambe?m na teoria da\n\nprobabilidade: se z e? a probabilidade de um evento E, enta?o B\ng\ni (z) e? a probabilidade de\n\nE ocorrer exatamente i vezes em g tentativas.\n\nDentre as propriedades dos polino?mios de Bernstein, destacamos:\n\nP1: Os polino?mios sa?o na?o-negativos no intervalo [0, 1]\n\nP2: Cada polino?mio tem apenas um ma?ximo no intervalo [0, 1], em z = i/g\n\n11\n\n\n\n12 Cap??tulo 3. Polino?mios de Bernstein\n\n 0\n\n 1\n\n 0  0.25  0.5  0.75  1\n\nt\n\nB\n4 i\n(t\n)\n\ni=0\ni=1\ni=2\ni=3\ni=4\n\nFigura 3.1: Elementos da base de Bernstein univariada de grau 4\n\nP3: Os polino?mios de grau g formam uma partic?a?o da unidade:\n\ng\n?\n\ni=0\n\nB\ng\ni (z) = 1 para todo z ? R.\n\nP4: Todos os polino?mios sa?o nulos em z = 0, exceto B\ng\n0 .\n\nP5: Todos os polino?mios sa?o nulos em z = 1, exceto Bgg .\n\n3.2 Representac?a?o de Be?zier para polino?mios\n\nA representac?a?o de Be?zier de uma func?a?o polinomial f de grau g de R para R e? sua\n\nexpansa?o em termos da base de Bernstein univariada, ou seja\n\nf(z) =\n\ng\n?\n\ni=0\n\nbiB\ng\ni (z) (3.3)\n\nonde b0, \u00b7 \u00b7 \u00b7 ,bg sa?o nu?meros reais, chamados ordenadas de Be?zier ou coeficientes de Be?zier\n\nda func?a?o f. Em consequ?e?ncia da propriedade P3, o valor de f(z), para qualquer z ? [0, 1],\n\nesta? no intervalo [bmin,bmax], onde bmin e? o menor dos coeficientes bi, e bmax o maior deles.\n\nE? comum associar cada coeficiente de Be?zier bi de B\ng\ni a? sua posic?a?o nominal i/g, o\n\nvalor de z onde B\ng\ni (z) atinge seu ma?ximo no intervalo [0, 1].\n\n\n\n3.3. Elevac?a?o de grau 13\n\n3.3 Elevac?a?o de grau\n\nA fo?rmula de elevac?a?o de grau (3.4) proposta por Trump [24] nos permite expressar um\n\npolino?mio de Bernstein B\ng\ni (z) de grau g como uma combinac?a?o linear de polino?mios B\n\nh\nj (z)\n\nde qualquer grau prescrito h ? g.\n\nB\ng\ni (z) =\n\ni+h?g\n?\n\nk=i\n\n(\n\nk\n\ni\n\n)(\n\nh ? k\n\ng ? i\n\n)\n\n(\n\nh\n\ng\n\n) Bhk (z) (3.4)\n\nPortanto, para converter um polino?mio f de sua representac?a?o em termos de Bg para\n\nsua representac?a?o em termos de Bh basta multiplicar seu vetor de coeficientes de Be?zier\n\n(b0, \u00b7 \u00b7 \u00b7 ,bg) pela matriz M de (g + 1) linhas e (h + 1) colunas, onde\n\nMik =\n\n?\n\n?\n\n?\n\n?\n\n?\n\n(\n\nh\n\ng\n\n)?1(\nk\n\ni\n\n)(\n\nh ? k\n\ng ? i\n\n)\n\nse i ? k e i ? k ? (h ? g)\n\n0 caso contra?rio\n\n3.4 Diferenciac?a?o\n\nA derivada de ordem r do polino?mio de Bernstein univariado B\ng\ni e? dada por\n\n?rB\ng\ni (z) = ?\n\nr\n\n((\n\ng\n\ni\n\n)\n\nzi(1 ? z)g?i\n)\n\nUtilizando a fo?rmula de Leibnitz para a derivada do produto [15], temos que\n\n?rB\ng\ni (z) =\n\n(\n\ng\n\ni\n\n) r\n?\n\nj=0\n\n(\n\nr\n\nj\n\n)\n\n(\n\n?jzi\n)(\n\n?r?j(1 ? z)g?i\n)\n\nNote que o termo dentro do somato?rio se anula sempre que j > i ou r ? j > g ? i, pois a\n\nj-e?sima derivada de um polino?mio de grau i e? zero. Enta?o,\n\n?rB\ng\ni (z) =\n\ng!\n\ni!(g ? i)!\n\nr\n?\n\nj=0\nj?r?g+i\n\nj?i\n\n(\n\nr\n\nj\n\n)\n\ni!\n\n(i ? j)!\nzi?j\n\n(g ? i)!\n\n(g ? i ? r + j)!\n(1 ? z)g?i?r+j(?1)r?j\n\n=\ng!\n\n(g ? r)!\n\nr\n?\n\nj=0\nj?r?g+i\n\nj?i\n\n(\n\nr\n\nj\n\n)\n\n(?1)r?j\n(\n\ng ? r\n\ni ? j\n\n)\n\nzi?j(1 ? z)g?i?r+j\n\n=\n\nr\n?\n\nj=0\nj?r?g+i\n\nj?i\n\ng!\n\n(g ? r)!\n\n(\n\nr\n\nj\n\n)\n\n(?1)r?jB\ng?r\ni?j (z) (3.5)\n\n\n\n14 Cap??tulo 3. Polino?mios de Bernstein\n\nComo consequ?e?ncia desta fo?rmula, temos\n\n?B\ng\ni (0) =\n\n?\n\n?\n\n?\n\n?1 se i = 0\n\n1 se i = 1\n\n0 c.c.\n\ne ?B\ng\ni (1) =\n\n?\n\n?\n\n?\n\n?1 se i = g\n\n1 se i = g ? 1\n\n0 c.c.\n\nMais geralmente,\n\n?rB\ng\ni (0) =\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\nr\n?\n\nj=0\nj?r?g+i\n\nj?i\n\ng!\n\n(g ? r)!\n\n(\n\nr\n\nj\n\n)\n\n(?1)r?j se i ? r\n\n0 c.c.\n\ne\n\n?rB\ng\ni (1) =\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\nr\n?\n\nj=0\nj?r?g+i\n\nj?i\n\ng!\n\n(g ? r)!\n\n(\n\nr\n\nj\n\n)\n\n(?1)r?j se i ? r\n\n0 c.c.\n\n3.5 Arco de Be?zier\n\nA representac?a?o de Be?zier para polino?mios e? muito usada em computac?a?o gra?fica para\n\ndescrever curvas suaves de forma arbitra?ria. Este uso foi introduzido por P.Be?zier na\n\nde?cada de 60 para controle nume?rico e projeto de carrocerias de automo?vel [1]. Formal-\n\nmente, definimos uma curva de Be?zier de grau g em Rm como uma func?a?o F : R ? Rm\n\ncujas m componentes F0,F1, \u00b7 \u00b7 \u00b7Fm?1 sa?o polino?mios de grau g, definidos em termos da\n\nrepresentac?a?o de Be?zier. A restric?a?o da curva ao intervalo [0, 1] e? chamada de arco de\n\nBe?zier.\n\nOs g + 1 coeficientes de Be?zier das m componentes do arco podem ser interpretados\n\ncomo as coordenadas de g + 1 pontos do Rm, chamados de pontos de controle ou pontos\n\nde Be?zier do arco. Mais especificamente, para qualquer i = {0, \u00b7 \u00b7 \u00b7 ,g}, o ponto de\n\ncontrole Pi ? R\nm e? tal que sua j-e?sima coordenada e? o coeficiente de Be?zier de ??ndice i\n\nda componente Fj. A poligonal que liga os pontos de Be?zier Pi, na ordem crescente de\n\n??ndice i, e? chamada de poligonal de Be?zier do arco. Veja a figura 3.2.\n\nNote que os pontos F(z) de arco de Be?zier F esta?o totalmente contidos no fecho convexo\n\ndos pontos de controle de F . Esta propriedade dos arcos de Be?zier e? consequ?e?ncia direta da\n\npropriedade P3 dos polino?mios de Bernstein univariados. Outra propriedade importante e?\n\nque os pontos P0 e Pg sa?o os extremos do arco, isto e? F(0) = P0 e F(1) = Pg. Ale?m disso,\n\no vetor velocidade da curva no in??cio ?F(0) e? mu?ltiplo do vetor P1 ? P0, e no fim ?F(1)\n\ne? um mu?ltiplo de Pg ? Pg?1. Mais geralmente, a r-e?sima derivada inicial ?\nrF(0) depende\n\n\n\n3.5. Arco de Be?zier 15\n\nF0(z)\n\nF\n1\n(z\n)\n\nF\n0\n(z\n)\n\n0 1\n4\n\n1\n2\n\n3\n4\n\n1\n\nz\n\nF\n1\n(z\n)\n\n0 1\n4\n\n1\n2\n\n3\n4\n\n1\n\nFigura 3.2: Um arco de Be?zier F de grau 4 no R2 (esquerda em vermelho) mostrando seus\npontos de controle de Be?zier (em azul) e a poligonal de Be?zier (tracejada); e os gra?ficos de suas\ncomponentes F0(z) = 2z\n\n4 + 3z e F1(z) = z\n4 + z2 (direita) mostrando os respectivos coeficientes\n\nde Be?zier (pontos azuis).\n\napenas dos pontos P0,P1, \u00b7 \u00b7 \u00b7 ,Pr, e a final ?\nrF(1) apenas dos pontos Pg,Pg?1, \u00b7 \u00b7 \u00b7 ,Pg?r.\n\nEstas propriedades decorrem das propriedades P4 e P5 da base de Bernstein, e simplificam\n\nbastante a concatenac?a?o de dois ou mais arcos de Be?zier para formar um spline de Be?zier\n\nde continuidade arbitra?ria.\n\n\n\nCap??tulo 4\n\nMulti-, hiper- e ultra-??ndices\n\nNeste cap??tulo, introduzimos uma notac?a?o especial para indexac?a?o de objetos multi-\n\ndimensionais, necessa?ria para os cap??tulos seguintes.\n\n4.1 Multi-??ndices\n\nComo DeRose [6], definimos um multi-??ndice como uma tupla ? = (?0, \u00b7 \u00b7 \u00b7 ,?d) de nu?meros\n\nnaturais. Denotamos por I o conjunto de todos os multi-??ndices, e por Id o conjunto de\n\ntodos os multi-??ndices com d + 1 componentes, ou seja Nd+1. Para quaisquer d,n ? N,\n\ntais que n ? d, quaisquer multi-??ndices ?,? ? Id, qualquer vetor x ? R\nd+1, e qualquer\n\nfunc?a?o F de Rd+1 para R, definimos as seguintes operac?o?es:\n\n17\n\n\n\n18 Cap??tulo 4. Multi-, hiper- e ultra-??ndices\n\nsoma e subtrac?a?o: ? \u00b1 ? = (?0 \u00b1 ?0,?1 \u00b1 ?1, \u00b7 \u00b7 \u00b7 ,?d \u00b1 ?d)\n\ndivisa?o: ?/? = (?0/?0, \u00b7 \u00b7 \u00b7 ,?d/?d) ? R\nd\n\ndivisa?o por um nu?mero real: ?/g = (?0/g, \u00b7 \u00b7 \u00b7 ,?d/g) ? R\nd\n\ncomparac?a?o: ? ? ? ? (?0 ? ?0) ? (?1 ? ?1) ? \u00b7 \u00b7 \u00b7 ? (?d ? ?d)\n\ntotal: |?| = ?0 + ?1 + \u00b7 \u00b7 \u00b7 + ?d\n\nfatorial: ?! = ?0!?1! \u00b7 \u00b7 \u00b7?d!\n\ncoeficiente multinomial:\n\n(\n\ng\n\n?\n\n)\n\n=\ng!\n\n?!\n=\n\ng!\n\n?0! \u00b7 \u00b7 \u00b7?d!\n\nmulti-combinac?a?o:\n\n(\n\n?\n\n?\n\n)\n\n=\n?!\n\n(? ? ?)!?!\n=\n\n(\n\n?0\n?0\n\n)\n\n\u00b7 \u00b7 \u00b7\n\n(\n\n?d\n?d\n\n)\n\npote?ncia: x? = x?00 x\n?1\n1 \u00b7 \u00b7 \u00b7x\n\n?d\nd\n\nderivada parcial: ??F = ??00 \u00b7 \u00b7 \u00b7?\n?d\nd F\n\nQuando um multi-??ndice ? e? usado como um expoente, como na fo?rmula de potenciac?a?o\n\nacima, tambe?m usamos o termo multi-grau.\n\nPara quaisquer g ? Z e d ? N denotamos por I\ng\nd o conjunto dos multi-??ndices ? ? Id\n\ntais que |?| = g. (Observe que I\ng\nd\n= ? se g &lt;0.) Denotamos tambe?m por g ? d a tupla\n\n(g,g, \u00b7 \u00b7 \u00b7 ,g) ? Id?1, com d elementos, todos iguais a g.\n\nO uso de multi-??ndices simplifica diversas fo?rmulas de a?lgebra multivariada, ca?lculo,\n\nequac?o?es diferenciais parciais, probabilidade, etc. Por exemplo, para quaisquer d,g ? N e\n\nqualquer x = (x0,x1, \u00b7 \u00b7 \u00b7 ,xd) ? R\nd+1, a fo?rmula multinomial\n\n(x0 + x1 + \u00b7 \u00b7 \u00b7 + xd)\ng =\n\n?\n\ni0,\u00b7,id\ni0+\u00b7\u00b7\u00b7+id=g\n\ng!\n\n(\n\nd\n?\n\nj=0\n\nx\nij\nj\n\nij!\n\n)\n\npode ser escrita de forma mais sucinta como\n\n(x0 + x1 + \u00b7 \u00b7 \u00b7 + xd)\ng =\n\n?\n\n??I\ng\nd\n\ng!\n\n?!\nx? =\n\n?\n\n??I\ng\nd\n\n(\n\ng\n\n?\n\n)\n\nx? (4.1)\n\nOutro exemplo e? a fo?rmula de Leibnitz para a r-e?sima derivada do produto de va?rias\n\nfunc?o?es. Sejam F0(t), \u00b7 \u00b7 \u00b7 ,Fd(t), d + 1 func?o?es de R para R. Na notac?a?o usual, a fo?rmula\n\ne?\n\n?r\n\n(\n\nd\n?\n\ni=0\n\nFi\n\n)\n\n=\n\nr\n?\n\n?0=0\n\n\u00b7 \u00b7 \u00b7\nr\n?\n\n?d=0\n?0+\u00b7\u00b7\u00b7+?d=r\n\nd\n?\n\ni=0\n\n??iFi\n\n\n\n4.2. Matrizes irregulares e hiper-??ndices 19\n\nUsando multi-??ndices, a fo?rmula reduz-se a\n\n?r\n\n(\n\nd\n?\n\ni=0\n\nFi\n\n)\n\n=\n?\n\n??Ir\nd\n\n(\n\nr\n\n?\n\n) d\n?\n\ni=0\n\n??iFi (4.2)\n\n4.2 Matrizes irregulares e hiper-??ndices\n\nPara indexar coeficientes de polino?mios simploidais (cap??tulo 8), necessitamos estender a\n\nnotac?a?o de multi-??ndice. Para este fim, definimos uma matriz irregular como uma tupla\n\nM = (M0,M1, \u00b7 \u00b7 \u00b7 ,Mm) de tuplas reais (suas linhas). Note que, diferentemente de uma\n\nmatriz ordina?ria, uma matriz irregular pode conter linhas de tamanhos diferentes; por\n\nexemplo ((1, 0), (2, 5, 3)) ou\n\n(\n\n1 0\n\n2 5 3\n\n)\n\n(4.3)\n\nDado um multi-??ndice ? ? Im, denotamos por M? o conjunto de todas as matrizes irregu-\n\nlares tais que sua i-e?sima linha tem ?i + 1 componentes. Por exemplo, a matriz (4.3) e?\n\num elemento de M(1,2).\n\nUm hiper-??ndice e? uma matriz irregular de nu?meros naturais; ou seja, uma tupla\n\n? = (?0, ?1, \u00b7 \u00b7 \u00b7 , ?m) de multi-??ndices, a exemplo de (4.3) acima. Note que um multi-\n\n??ndice pode ser visto como um hiper-??ndice de uma u?nica linha. (O termo hiper-??ndice ja?\n\nfoi usado por DeRose [6], mas apenas para matrizes regulares).\n\nDado um multi-??ndice ? ? Im, denotamos por H? o conjunto de todos os hiper-??ndices\n\n? tais que cada linha ?i pertence a I?i. Ou seja, H? e? o subconjunto de M? cujos elementos\n\nsa?o naturais. No caso espec??fico de ? = n ? (m + 1), ou seja, quando todas as linhas ?i\ntem o mesmo nu?mero de componentes ?i + 1 = n + 1, abreviamos H? por Hm,n. Neste\n\ncaso, um elemento de Hm,n e? uma matriz ordina?ria (retangular) de nu?meros naturais com\n\nm + 1 linhas e n + 1 colunas.\n\nDados nu?meros naturais m e s, multi-??ndices ?,?,? ? Im, hiper-??ndices ?, ? ? H?, e\n\nduas matrizes irregulares U,T ? M?, definimos as operac?o?es\n\n\n\n20 Cap??tulo 4. Multi-, hiper- e ultra-??ndices\n\ndivisa?o por um multi-??ndice: ?/? = (?0/?0, \u00b7 \u00b7 \u00b7 , ?m/?m) ? M?\n\ncomparac?a?o: ? ? ? ? (?0 ? ?0) ? (?1 ? ?1) ? \u00b7 \u00b7 \u00b7 ? (?m ? ?m)\n\nsoma das colunas: |?| = (|?0|, \u00b7 \u00b7 \u00b7 , |?m|) ? Im\n\ntotal: ||?|| = |(|?|)| ? N\n\nfatorial: ?! = ?0!?1! \u00b7 \u00b7 \u00b7 ?m!\n\nhiper-combinac?a?o:\n\n(\n\n?\n\n?\n\n)\n\n=\n?!\n\n?!(? ? ?)!\n=\n\n(\n\n?0\n?0\n\n)\n\n\u00b7 \u00b7 \u00b7\n\n(\n\n?d\n?d\n\n)\n\npote?ncia: T? =\n?m\n\ni=0\n\n??i\nj=0 T\n\n?i,j\ni,j\n\nAdemais, se ? ? Im e? tal que ?i ? (m ? 1), e ? e? um hiper-??ndice pertencente a H? (ou\n\nseja, cada linha tem ao menos m elementos), denotamos por diag(?) a diagonal de ?, ou\n\nseja, o multi-??ndice (?00, ?11, \u00b7 \u00b7 \u00b7 , ?mm) ? Im.\n\nDados m,n ? N, e multi-??ndices ?,? ? Im denotamos por H\n?\n? o conjunto de todos os\n\nhiper-??ndices ? tais que o total |?i| de cada linha ?i e? ?i. Ale?m disso, denotamos por\n\nH\n?,?\nm,n o conjunto de todos o hiper-??ndices (retangulares) ? ? H\n\n?\nm,n tais que a soma da\n\nj-e?sima coluna e? ?j.\n\nDa mesma forma que multi-??ndices, os hiper-??ndices nos permitem simplificar muitas\n\nfo?rmulas da a?lgebra multi-afim. Por exemplo, a expansa?o do produto de pote?ncias de\n\nmultino?mios\n\n(x00 + x01 + x02)\n5(x10 + x11)\n\n3(x20 + x21 + x22 + x23)\n2\n\nutilizando a notac?a?o de hiper-??ndices, pode ser escrito como\n\n?\n\n??H\n(5,3,2)\n(2,1,3)\n\n(\n\n(5, 3, 2)\n\n?\n\n)\n\n?\n\n?\n\nx00 x01 x02\nx10 x11\nx20 x21 x22 x23\n\n?\n\n?\n\n?\n\nOutros exemplos de uso de hiper-??ndices sera?o vistos no cap??tulo 8.\n\n4.3 Ultra-??ndices\n\nPara as fo?rmulas de reparametrizac?a?o de polino?mios simploidais (cap??tulo 10), necessi-\n\ntamos estender ainda mais a notac?a?o de ??ndices. Para este fim, definimos um tensor\n\nirregular como uma tupla T = (T0,T1, \u00b7 \u00b7 \u00b7 ,Tp) onde cada Ti, chamado de plano i de T , e?\n\numa matriz irregular. Denotamos por Tp o conjunto de todos os tensores irregulares de\n\np + 1 planos.\n\n\n\n4.3. Ultra-??ndices 21\n\nUm ultra-??ndice e? um tensor irregular de nu?meros naturais; ou seja, uma tupla ? =\n\n(?0, ?1, \u00b7 \u00b7 \u00b7 , ?p) de hiper-??ndices. Observe que um hiper-??ndice por ser visto como um\n\nultra-??ndice de um u?nico plano.\n\nPara todo m,p ? N e todo ? ? Im, denotamos por Up,? o conjunto de todos os ultra-\n\n??ndices que consistem de p + 1 hiper-??ndices, todos em H?. As operac?o?es de hiper-??ndices\n\npodem ser estendidas para ultra-??ndices. Em particular, definimos a soma dos planos de\n\num ultra-??ndice ? ? Up.?, como o hiper-??ndice |?| = ?0 +?1 + \u00b7 \u00b7 \u00b7?p. Definimos tambe?m\n\no fatorial de um ultra-??ndice ? ? Up.?, denotado por ?!, como o produto ?0!?1! \u00b7 \u00b7 \u00b7 ?p!\n\nDados m,p ? N, uma multi-dimensa?o ? ? Im e um hiper-??ndice ?, denotamos por U\n?\np,?\n\no conjunto de todos os ultra-??ndices ? tais que |?| = ?.\n\n\n\nCap??tulo 5\n\nElementos de Be?zier tensoriais\n\nNeste cap??tulo, revisamos conceitos relacionados aos polino?mios de Bernstein-Be?zier ten-\n\nsoriais; e definimos os elementos de Be?zier tensoriais utilizados por P. Be?zier na de?cada\n\nde 1960 [1].\n\n5.1 Polino?mios tensoriais\n\nDefinimos o espac?o dos polino?mios tensoriais de dimensa?o d ? N e multi-grau ? ? Id?1,\n\ndenotado por P?d , como o espac?o vetorial de todas as func?o?es f de R\nd para R, tais que\n\nf(x) e? um polino?mio de grau ?i em cada coordenada xi do argumento, quando sa?o fixadas\n\ntodas as demais coordenadas xj com j 6= i. Por exemplo, a func?a?o f de R\n2 para R com\n\nfo?rmula\n\nf(x) = 4x30 + 5x1 ? 3x0x\n2\n1 + 5x0x1\n\n= (4)x30 + (?3x\n2\n1 + 5x1)x0 + (5x1)\n\n= (?3x0)x\n2\n1 + (5x0 + 5)x1 + (4x\n\n3\n0)\n\ne? um polino?mio tensorial de multi-grau (3, 2). Note que f(x) na?o pode ser escrito como\n\no produto de dois polino?mios f ?(x0) e f\n??(x1), cada um dependendo apenas de uma coor-\n\ndenada.\n\nA base cano?nica de P?d e? a lista de todos os mono?mios em d varia?veis x0, \u00b7 \u00b7 \u00b7 ,xd?1 que\n\npossuem grau no ma?ximo ?i em cada varia?vel xi. Por exemplo, para d = 2 e ? = (1, 2),\n\na base cano?nica e? 1, x0, x1, x0x1, x\n2\n1 e x0x\n\n2\n1. A dimensa?o de P\n\n?\nd e?\n\n?d?1\ni=0 (?i + 1).\n\n5.1.1 A base de Bernstein tensorial\n\nDado d ? N e um multi-grau ? ? Id?1, a base de Bernstein tensorial de P\n?\nd , consiste dos\n\npolino?mios tensoriais B?? (u), para todos os multi-??ndices ? ? Id?1 tais que ? ? ?, cada\n\n23\n\n\n\n24 Cap??tulo 5. Elementos de Be?zier tensoriais\n\n(a) ? = (0, 2) (b) ? = (1, 1)\n\n(c) ? = (2, 0)\n\nFigura 5.1: Alguns dos 12 polino?mios B?? da base de Bernstein tensorial de P\n(3,2)\n2 . Os eixos\n\nvermelho, verde e azul representam x0, x1 e B\n(3,2)\n? (x0, x1).\n\num definido por\n\nB?? (x) =\nd?1\n?\n\ni=0\n\nB?i?i (xi) (5.1)\n\npara todo x ? Rd. Veja figura 5.1.\n\nOs polino?mios de Bernstein tensoriais B?? (u) compartilham varias propriedades dos\n\npolino?mios de Bernstein univariados B\ng\ni (z), incluindo:\n\nP1?: Os polino?mios B?? sa?o na?o-negativos no hipercubo [0, 1]\nd\n\nP2?: Cada polino?mio tem apenas um ma?ximo no hipercubo [0, 1]d, no ponto ?/? ? Rd.\n\nP3?: Os polino?mios B?? de mesmo multi-grau ? formam uma partic?a?o da unidade:\n?\n\n??Id?1\n???\n\nB?? (x) = 1 para todo x ? R\nd.\n\n\n\n5.1. Polino?mios tensoriais 25\n\n5.1.2 A representac?a?o de Be?zier de polino?mios tensoriais\n\nSeja f uma func?a?o polinomial tensorial de multi-grau ? ? Id?1 de R\nd para R. A re-\n\npresentac?a?o de Be?zier de f e? sua expansa?o em termos da base de Bernstein tensorial, a\n\nsaber\n\nf(x) =\n?\n\n??Id?1\n???\n\nb?B\n?\n? (x) (5.2)\n\nonde cada b? e? um nu?mero real, o coeficiente de Be?zier (tensorial) de multi-??ndice ? de\n\nf.\n\nPara fins de visualizac?a?o, costuma-se definir a posic?a?o nominal de cada coeficiente de\n\nBe?zier b? como o ponto ?/? = (?0/?0, \u00b7 \u00b7 \u00b7 ,?d?1/?d?1) ? R\nd, onde esse polino?mio atinge\n\no ma?ximo. Veja a figura 5.1.\n\n5.1.3 Elevac?a?o de grau\n\nSe ? e ? sa?o dois multi-graus pertencentes a Id?1 com ? ? ?, enta?o a aplicac?a?o repetida\n\nda fo?rmula de elevac?a?o de grau (3.4) garante que cada polino?mio B?? de multi-grau ? pode\n\nser expresso como uma combinac?a?o linear de polino?mios B?? de multi-grau ?. A saber,\n\nB?? (x) =\n?\n\n??Id?1\n????(???)\n\n???\n???\n\n(\n\n?\n\n?\n\n)?1(\n?\n\n?\n\n)(\n\n? ? ?\n\n? ? ?\n\n)\n\nB?? (x)\n\npara todo x ? Rd.\n\n5.1.4 Diferenciac?a?o\n\nPelas fo?rmulas (5.1) e (3.5), a i-e?sima derivada parcial de ordem r de B?? e?\n\n?ri B\n?\n? (x) = ?\n\nr\ni\n\n?\n\n?\n\n?\nB?i?i (xi)\n\nd?1\n?\n\nj=0\nj 6=i\n\nB?j?j (xj)\n\n?\n\n?\n\n?\n\n=\n\n?\n\n?\n\n?\n\n?\n\n?\n\nr\n?\n\np=0\np?r??i+?i\n\np??i\n\n?i!\n\n(?i ? r)!\n\n(\n\nr\n\np\n\n)\n\n(?1)r?pB?i?r?i?p (xi)\n\n?\n\n?\n\n?\n\n?\n\n?\n\nd\n?\n\nj=0\nj 6=i\n\nB?j?j (xj)\n\n\n\n26 Cap??tulo 5. Elementos de Be?zier tensoriais\n\nPortanto, para qualquer ? ? Id, a derivada mista de ordem ?i em cada coordenada xi e?\n\n??B?? (x) = ?\n?0\n0 \u00b7 \u00b7 \u00b7?\n\n?d\nd B\n\n?\n? (x) =\n\nd?1\n?\n\ni=0\n\n?\n\n?\n\n?\n\n?\n\n?\n\nr\n?\n\np=0\np??i??i+?i\n\np??i\n\n?i!\n\n(?i ? ?i)!\n\n(\n\n?i\np\n\n)\n\n(?1)?i?pB?i??i?i?p (xi)\n\n?\n\n?\n\n?\n\n?\n\n?\n\n=\n?\n\n\u00b5?Id\n\u00b5????+?\n\n\u00b5??\n\n?!\n\n(? ? ?)!\n\n(\n\n?\n\n\u00b5\n\n)\n\n(?1)|?|?|\u00b5|B?????\u00b5 (x) (5.3)\n\nObserve que ??B?? e? um polino?mio tensorial de multi-grau ? = ? ? ? se ? ? ?. Caso\n\ncontra?rio (se ?i > ?i para algum i), a derivada e? o polino?mio nulo pois o somato?rio fica\n\nvazio.\n\n5.1.5 Derivada direcional\n\nSe X e? um conjunto e E e? uma expressa?o que envolve uma varia?vel livre x, escrevemos\n\n(x : X ? E) (5.4)\n\npara a func?a?o de dom??nio X que mapeia cada x ? X para o valor correspondente de E.\n\nSeja ? um vetor do Rd e f uma func?a?o de Rd para R. A derivada (direcional) de ordem\n\nr de f na direc?a?o ? e? definida por\n\n(Dr?f)(x) = [?\nr (t : R ? f(x + t?))] (0).\n\nA derivada direcional de ordem r do polino?mio de Bernstein tensorial B?? na direc?a?o ? e?\n\nportanto\n\n(Dr?B\n?\n? )(x) =\n\n[\n\n?r\n\n(\n\nt : R ?\nd?1\n?\n\ni=0\n\nB?i?i (xi + t?i)\n\n)]\n\n(0)\n\nAplicando a fo?rmula de Leibniz (4.2), temos\n\n(Dr?B\n?\n? )(x) =\n\n?\n\n??Ir\nd?1\n\nr!\n\n?!\n\nd?1\n?\n\ni=0\n\n[\n\n??i\n(\n\nt : R ? B?i?i (xi + t?i)\n)]\n\n(0)\n\n=\n?\n\n??Ir\nd?1\n\nr!\n\n?!\n\nd?1\n?\n\ni=0\n\n??ii (?\n?iB?i?i )(xi)\n\n=\n?\n\n??Ir\nd?1\n\nr!\n\n?!\n??(??B?? )(x)\n\n(5.5)\n\n\n\n5.2. Elementos tensoriais de Be?zier 27\n\npara todo x ? Rd. Observe que (Dr?B\n?\n? ) e? um polino?mio tensorial cujo multi-grau ? na?o\n\nexcede ?. No caso espec??fico em que ? e? paralelo ao eixo de coordenadas i do dom??nio,\n\n?i = max {0,?i ? r} e ?j = ?j para todo j 6= i.\n\n5.2 Elementos tensoriais de Be?zier\n\nAssim como polino?mios univariados de Be?zier sa?o usados para modelar curvas arbitra?rias,\n\nos polino?mios tensoriais de Be?zier sa?o usados para modelar superf??cies e volumes. Para\n\neste fim, define-se um elemento tensorial de Be?zier de dimensa?o d e multi-grau ? ? Id?1\nem Rm como sendo uma func?a?o F : [0, 1]d ? Rm cujas m componentes sa?o polino?mios do\n\nespac?o P?d definidos em termos da representac?a?o de Be?zier. Note que um arco de Be?zier e?\n\num caso particular de elemento tensorial de Be?zier (com d = 1). Os outros casos de maior\n\nimporta?ncia em modelagem geome?trica sa?o o retalho tensorial (d = 2) e o bloco tensorial\n\n(d = 3) de Be?zier. Veja a figura 5.2.\n\nDe forma ana?loga aos arcos de Be?zier, os m coeficientes de Be?zier de um mesmo\n\nelemento F com mesmo multi-??ndice ? em cada componente podem ser vistos como as\n\ncoordenadas de um ponto P? do R\nm, o ponto de controle de Be?zier de ??ndice ?. A grade\n\nde controle de um elemento de Be?zier e? formada pelos seus pontos de controle e pelos\n\nsegmentos de reta que ligam cada ponto P? aos pontos P? tais que apenas um dos ??ndices\n\n?i difere do correspondente ??ndice ?i, e em apenas uma unidade. Veja a figura 5.3.\n\nEm decorre?ncia da propriedade P3?, os pontos F(x) de um elemento tensorial F esta?o\n\ntotalmente contidos no fecho convexo dos pontos de controle de F [9].\n\n\n\n28 Cap??tulo 5. Elementos de Be?zier tensoriais\n\n(a)\n\n(b) (c) (d)\n\nFigura 5.2: (a) Um elemento tensorial de Be?zier F de dimensa?o 2 (retalho) e multi-grau (2, 3)\nno R3; e suas componentes (b) F0, (c) F1 e (d) F2.\n\n\n\n5.2. Elementos tensoriais de Be?zier 29\n\nFigura 5.3: A grade de controle (em vermelho) de um retalho tensorial de Be?zier de dimensa?o 2\ne multi-grau (3, 2)(amarelo).\n\n\n\nCap??tulo 6\n\nElementos de Be?zier simpliciais\n\nNeste cap??tulo, revisamos conceitos relacionados aos polino?mios de Bernstein-Be?zier sim-\n\npliciais e definimos os elementos de Be?zier simpliciais.\n\n6.1 Espac?os afins cano?nicos\n\nDefinimos o espac?o afim cano?nico de dimensa?o d ? N, denotado por Ad, como o conjunto\n\nA\nd = {u ? Rd+1\n\n?\n\n?\n\nd\n?\n\ni=0\n\nui = 1}. (6.1)\n\nNote que os pontos de Ad constituem um hiperplano d-dimensional do Rd+1 que corta\n\ncada eixo na coordenada 1. Veja a figura 6.1. Note tambe?m que A0 possui um u?nico\n\nponto, a 1-tupla (1); e que Ad+e na?o e? o mesmo que Ad \u00d7 Ae.\n\nA\n1\n\nA\n2\n\nx0x0\nx1\n\nx1 x2\n\nFigura 6.1: Espac?os afins A1 e A2.\n\nDefinimos tambe?m o espac?o tangente afim cano?nico de dimensa?o d ? N, denotado por\n\nV\nd, como o espac?o tangente de Ad, isto e? o conjunto de todos os vetores de Rd+1 que sa?o\n\n31\n\n\n\n32 Cap??tulo 6. Elementos de Be?zier simpliciais\n\ndiferenc?as de dois pontos de Ad. Mais especificamente,\n\nV\nd = {? ? Rd+1\n\n?\n\n?\n\nd\n?\n\ni=0\n\n?i = 0}. (6.2)\n\nNote que Vd+e na?o e? o mesmo que Vd \u00d7 Ve.\n\n6.1.1 Simplexos cano?nicos\n\nDefinimos o simplexo cano?nico de dimensa?o d ? 0 como o conjunto Kd dos pontos de Ad\n\nque tem todas as coordenadas na?o-negativas; ou seja\n\nK\nd = {(u0, \u00b7 \u00b7 \u00b7 ,ud) ? R\n\nd+1\n?\n\n?\n\nd\n?\n\ni=0\n\nui = 1 ?\nd\n?\n\ni=0\n\nui ? 0} (6.3)\n\nOs simplexos cano?nicos de dimensa?o 1, 2 e 3 sa?o um segmento em R2, um tria?ngulo\n\nequ?ila?tero em R3 e um tetraedro regular em R4, ilustrados na figura 6.2.\n\nK\n1\n\nK\n2\n\nK\n3\n\nx0\nx0x0 x1x1\n\nx1\nx2\n\nx2\n\nx3\n\nFigura 6.2: Simplexos cano?nicos.\n\n6.1.2 Facetas\n\nDefinimos a faceta j do simplexo cano?nico Kd, denotada por Kd|j, como sendo o conjunto\n\nde pontos u ? Kd tais que uj = 0. Note que K\nd|j e? congruente ao simplexo K\n\nd?1.\n\n6.2 Polino?mios simpliciais\n\nDefinimos o espac?o dos polino?mios simpliciais de dimensa?o d ? N e grau g ? N, denotados\n\npor P\ng\nd, como o conjunto das func?o?es f de A\n\nd para R tais que f pode ser expresso como\n\num polino?mio de grau g nas d + 1 coordenadas do argumento u. Por exemplo,\n\nf(u) = 3u0u\n2\n1 + 2u\n\n3\n1 (6.4)\n\n\n\n6.2. Polino?mios simpliciais 33\n\ne? um elemento de P22 . Verifica-se que a dimensa?o de P\ng\nd\ne?\n\n(\n\nd + g\n\ng\n\n)\n\n[5].\n\nUma vez que as coordenadas do argumento somam 1, qualquer mono?mio pode ser\n\nmultiplicado por qualquer pote?ncia de (u0 + \u00b7 \u00b7 \u00b7 + ud) sem afetar o valor de f. Portanto,\n\no mesmo polino?mio pode ser escrito de va?rias formas. O polino?mio f da fo?rmula (6.4),\n\npor exemplo, pode ser escrito tambe?m como\n\nf(u) = 3u20u\n2\n1 + 2u0u\n\n3\n1 + 3u0u\n\n3\n1 + 2u\n\n4\n1\n\nSe f e? um polino?mio de grau g, podemos obter uma fo?rmula u?nica (para cada g) exigindo\n\nque o polino?mio seja homoge?neo, isto e? que todos os mono?mios tenham o mesmo grau\n\ntotal. Para colocar uma colec?a?o arbitra?ria de mono?mios nesta forma, basta multiplicar\n\ntodo mono?mio com grau total k &lt;g por (u0 + \u00b7 \u00b7 \u00b7 + ud)\ng?k.\n\n6.2.1 A base de Bernstein simplicial\n\nDados d ? N e g ? N, a base de Bernstein simplicial de P\ng\nd\nconsiste dos polino?mios\n\nsimpliciais Bg? de A\nd para R, para todo ? ? I\n\ng\nd, onde\n\nBg?(u) =\n\n(\n\ng\n\n?\n\n)\n\nu? para todo u ? Ad (6.5)\n\nVeja figura 6.3.\n\nNote que, no caso espec??fico onde d = 1, a fo?rmula (6.5) para Bg?(u) e? equivalente a?\n\nfo?rmula (3.2) do polino?mio de Bernstein univariado B\ng\ni (z), com u0 = z, u1 = z? = 1 ? z,\n\n?0 = i e ?1 = g ? i.\n\nObserve tambe?m que a fo?rmula (6.5) esta? relacionada com a fo?rmula de Newton para\n\na pote?ncia g do multino?mio (u0 + u1 + \u00b7 \u00b7 \u00b7 + ud). Em teoria estat??stica, esta fo?rmula\n\ndefine a distribuic?a?o de probabilidade multinomial. Suponha que um experimento pode\n\nter d + 1 resultados mutuamente exclusivos E0, \u00b7 \u00b7 \u00b7 ,Ed sendo que cada Ei ocorre com\n\nprobabilidade ui. Enta?o, B\ng\n?(u) e? a probabilidade de, em g tentativas, o evento E0 ocorrer\n\n?0 vezes, E1, ?1 vezes, ..., e Ed ?d vezes.\n\nAs propriedades de polino?mios univariados te?m ana?logos para simpliciais:\n\nP1??: Os polino?mios sa?o na?o-negativos no simplexo Kd\n\nP2??: Cada polino?mio tem apenas um ma?ximo no simplexo de Kd, no ponto ?/g ? Ad.\n\nP3??: Os polino?mios Bg? de mesmo grau g formam uma partic?a?o da unidade:\n\n?\n\n??I\ng\nd\n\nBg?(u) = 1 para qualquer u ? K\nd (6.6)\n\n\n\n34 Cap??tulo 6. Elementos de Be?zier simpliciais\n\n(a) B3\n(3,0,0)\n\n(u) (b) B3\n(0,3,0)\n\n(u)\n\n(c) B3\n(0,0,3)\n\n(u) (d) B3\n(2,1,0)\n\n(u)\n\n(e) B\n(3)\n(1,1,1)\n\n(u)\n\nFigura 6.3: Polino?mios da base de Benstein simplicial de P32.\n\n\n\n6.2. Polino?mios simpliciais 35\n\n6.2.2 A representac?a?o de Be?zier de polino?mios simpliciais\n\nA representac?a?o de Be?zier de uma func?a?o polinomial simplicial f de grau g de Ad para R\n\ne? sua expansa?o em termos da base de Bernstein simplicial de grau g; a saber,\n\nf(u) =\n?\n\n??I\ng\nd\n\nb?B\ng\n?(u) (6.7)\n\nonde cada b? e? um nu?mero real, o coeficiente (simplicial) de Be?zier de f. Como no caso\n\ntensorial, a posic?a?o nominal do coeficiente b? e? ?/g = (?0/g, \u00b7 \u00b7 \u00b7 ,?d/g) ? A\nd.\n\n6.2.3 Elevac?a?o de grau\n\nA fo?rmula de elevac?a?o de grau de polino?mios de Bernstein univariados (3.4) pode ser\n\ngeneralizada para polino?mios simpliciais. Especificamente, para quaisquer graus g,h ? N\n\ntais que g ? h, qualquer dimensa?o d ? N e qualquer multi-??ndice ? ? I\ng\nd\n, temos\n\nBg?(u) =\ng!\n\n?!\nu? =\n\n(\n\nh\n\ng\n\n)?1\n?\n\n\u00b5?Ih\nd\n\n??\u00b5\n\n(\n\n\u00b5\n\n?\n\n)\n\nBh\u00b5 (u) (6.8)\n\nUma demonstrac?a?o desta fo?rmula foi publicada por Trump [24].\n\n6.2.4 Derivada direcional\n\nA derivac?a?o de func?o?es definidas em Ad e? mais complicada do que em Rd. Como as\n\ncoordenadas do dom??nio devem somar 1, na?o e? poss??vel alterar o valor de uma coordenada\n\nmantendo as demais fixas; e portanto o conceito de derivada parcial na?o faz muito sentido.\n\nPor esta raza?o, para func?o?es definidas no Ad e? mais conveniente trabalhar com derivadas\n\ndirecionais.\n\nSeja F uma func?a?o de Ad para R e ? um vetor de Vd. Definimos a r-e?sima derivada\n\n(direcional) de F na direc?a?o ? como sendo a func?a?o Dr?F , de A\nd para R, definida por\n\n(Dr?F)(u) = [?\nr(s : R ? F(u + s?))] (0) para todo u ? Ad. (6.9)\n\nAplicando esta definic?a?o ao polino?mio de Bernstein (6.5), temos\n\n(Dr?B\ng\n?)(u) =\n\n[\n\n?r\n(\n\nt : R ?\ng!\n\n?!\n(u + t?)?\n\n)]\n\n(0) (6.10)\n\nUsando a fo?rmula de Leibnitz (4.2),\n\n(Dr?B\ng\n?)(u) =\n\ng!\n\n?!\n\n?\n\n??Ir\nd\n\nr!\n\n?!\n\nd\n?\n\ni=0\n\n[\n\n??i (t : R ? (ui + t?i)\n?i)\n]\n\n(0) (6.11)\n\n\n\n36 Cap??tulo 6. Elementos de Be?zier simpliciais\n\nNote que o p produto?rio se anula quando ?i > ?i para algum i, uma vez que a derivada de\n\nordem ?i +1 de um polino?mio de grau ?i e? zero. Portanto podemos restringir o somato?rio\n\naos multi-??ndices ? tais que ? ? ?.\n\n(Dr?B\ng\n?)(u) =\n\ng!\n\n?!\n\n?\n\n??Ir\nd\n\n???\n\nr!\n\n?!\n\nd\n?\n\ni=0\n\n?i!\n\n(?i ? ?i)!\nu?i??ii ?\n\n?i\ni\n\n=\ng!\n\n?!\n\n?\n\n??Ir\nd\n\n???\n\nr!\n\n?!\n\n?!\n\n(? ? ?)!\nu?????\n\n=\ng!\n\n(g ? r)!\n\n?\n\n??Ir\nd\n\n???\n\nr!\n\n?!\n??\n\n(g ? r)!\n\n(? ? ?)!\nu???\n\n=\ng!\n\n(g ? r)!\n\n?\n\n??Ir\nd\n\n???\n\nr!\n\n?!\n??B\n\ng?r\n???(u)\n\nEstendendo a definic?a?o do polino?mio de Bernstein (6.5) para vetores de Vd, podemos\n\nescrever o fator\nr!\n\n?!\n??\n\ncomo\n\nBr?(?).\n\nPortanto temos que\n\n(Dr?B\ng\n?)(u) =\n\ng!\n\n(g ? r)!\n\n?\n\n??Ir\nd\n\n???\n\nBr?(?) B\ng?r\n???(u) (6.12)\n\nObserve que a derivada se anula (porque o somato?rio e? vazio) se r > g. A equac?a?o (6.12)\n\ngeneraliza a apresentada por Farin para o caso bidimensional [8]. Se introduzimos \u00b5 =\n\n? ? ?, obtemos a fo?rmula alternativa\n\n(Dr?B\ng\n?)(u) =\n\ng!\n\n(g ? r)!\n\n?\n\n\u00b5?I\ng?r\nd\n\nBr??\u00b5(?) B\ng?r\n\u00b5 (u) (6.13)\n\n6.3 Elementos simpliciais de Be?zier\n\nUm elemento simplicial de Be?zier de dimensa?o d e grau g em Rm e? uma func?a?o F :\n\nK\nd ? Rm cujas m componentes F0,F1, \u00b7 \u00b7 \u00b7 ,Fm?1 sa?o polino?mios do espac?o P\n\ng\nd definidos\n\nem termos da representac?a?o de Be?zier. Note que o arco de Be?zier e? um caso particular de\n\n\n\n6.3. Elementos simpliciais de Be?zier 37\n\nelemento simplicial de Be?zier (com d = 1). Os outros casos de maior importa?ncia para\n\nmodelagem geome?trica sa?o o retalho simplicial (ou tria?ngulo) de Be?zier (d = 2) e o bloco\n\nsimplicial (ou tetraedro) de Be?zier (d = 3). Veja a figura 6.4.\n\nOs m coeficientes de Be?zier de mesmo multi-??ndice ? em cada componente Fi podem\n\nser vistos como as coordenadas de um ponto P? do R\nm, o ponto de controle de Be?zier\n\nde multi-??ndice ? do elemento. E? conveniente associar o ponto P? ao ponto u = ?/g do\n\ndom??nio Kd. Similarmente ao caso da curva e do elemento tensorial, segue da propriedade\n\nP3?? que a imagem de um elemento simplicial F esta? totalmente contida no fecho convexo\n\ndos pontos de controle de F [9]. A grade de controle do elemento e? formada pelos pontos\n\nde controle P? e pelos segmentos que ligam todos os pares de pontos P? e P? tais que ?\n\ne ? diferem em exatamente dois ??ndices i e j, com ?i ? ?i = +1 e ?j ? ?j = ?1. Veja a\n\nfigura ??.\n\n\n\n38 Cap??tulo 6. Elementos de Be?zier simpliciais\n\n(a)\n\n(b) (c) (d)\n\nFigura 6.4: (a) Um elemento simplicial de Be?zier F de dimensa?o 2 (retalho triangular) e grau 3\nno R3; e suas componentes (b) F0, (c) F1 e (d) F2.\n\n\n\n6.3. Elementos simpliciais de Be?zier 39\n\nFigura 6.5: Um elemento simplicial de Be?zier de dimensa?o 2 e grau 3, e sua grade de controle\n(em vermelho).\n\n\n\nCap??tulo 7\n\nConversa?o tensorial/simplicial\n\nEm modelagem geome?trica, frequ?entemente surge a necessidade de converter elementos\n\ntensoriais para simpliciais e vice versa, por exemplo para obter sub-retalhos triangulares\n\nde retalhos retangulares, ou vice-versa. Estas converso?es tambe?m sa?o necessa?rias para\n\nimpor restric?o?es de continuidade entre um spline definido em uma malha retangular e um\n\nspline definido em uma malha triangular. Veja a figura 7.1.\n\nFigura 7.1: Colando um retalho 3D tensorial a um retalho tetrae?drico.\n\nNeste cap??tulo, apresentamos fo?rmulas para conversa?o entre estas duas representac?o?es de\n\npolino?mios multivariados. Estes resultados generalizam, para dimensa?o arbitra?ria, a con-\n\nversa?o de retalhos retangulares para triangulares de Goldmann [11], Hu [14] e Lasser [18],\n\ne a conversa?o de retalhos triangulares para retangulares de Brueckner [3], Hu [13] [14]e\n\nLasser [17].\n\n7.1 Mapeamento cano?nico tensorial/simplicial\n\nDefinimos o mapeamento cano?nico de Ad para Rd como a func?a?o ?d tal que se x = ?d(u),\n\nenta?o xi = ui para i ? {0, \u00b7 \u00b7 \u00b7 ,d ? 1}. Veja as figuras 7.2 e 7.3.\n\nDizemos que um polino?mio f ??, definido no espac?o Ad, e? a forma simplicial cano?nica de\n\num polino?mio tensorial f ?, definido no espac?o Rd, se para todo u ? Ad, f ??(u) = f ?(?d(u)).\n\nNesse caso, dizemos que f ? e? a forma tensorial cano?nica de f ??. Veja a figura 7.4.\n\n41\n\n\n\n42 Cap??tulo 7. Conversa?o tensorial/simplicial\n\nA2 R2\n\nu0\n\nu1\n\nu2\nx0\n\nx1\n\n?2\n\n(1, 0, 0) (0, 0, 1)\n\n(0, 1, 0)\n\n(0, 0) (1, 0)\n\n(0, 1) (1, 1)\n\n(1\n\nFigura 7.2: O mapeamento cano?nico ?2.\n\nu0\nu1\n\nu2\n\nu3\n\n(0, 0, 1, 0)\n\n(0, 1, 0, 0)\n\n(0, 0, 0, 1)\n\n(1, 0, 0, 0)\n\n(0, 0, 0)\n(1, 0, 0)\n\n(1, 1, 0)\n\n(0, 0, 1)\n\n(0, 1, 1) (1, 1, 1)\n\n?3\n\nFigura 7.3: O mapeamento cano?nico ?3.\n\nNosso objetivo, neste cap??tulo, e? desenvolver fo?rmulas expl??citas para conversa?o de um\n\npolino?mio tensorial f ? para sua forma simplicial cano?nica f ??, e vice versa, na representac?a?o\n\nde Be?zier. Mais especificamente, dados os coeficientes de Be?zier b?? de um polino?mio\n\ntensorial f ? de multigrau ? ? Id,\n\nf ?(x) =\n?\n\n??Id\n???\n\nb??B\n?\n? (x)\n\ndesejamos encontrar os coeficientes b??? de sua simplicial cano?nica f\n??,\n\nf ??(u) =\n?\n\n??I\ng\nd\n\nb???B\ng\n?(u)\n\nonde g = |?|. A relac?a?o entre os coeficientes b?? e b\n??\n? pode ser resumida por uma matriz\n\nde mudanc?a de base M??:\n\nb??? =\n?\n\n??I\ng\nd\n\nM??b\n?\n?\n\n\n\n7.1. Mapeamento cano?nico tensorial/simplicial 43\n\nu0\n\nu1\n\nu2\nx0\n\nx1\n\n(1, 0, 0) (0, 0, 1)\n\n(0, 1, 0)\n\n(0, 0) (1, 0)\n\n(0, 1) (1, 1)\n\n?2\n\nA\n2\n\nR\n2\n\nf ?f ?? = f ? ? ?2\n\nFigura 7.4: O mapeamento cano?nico ?2 e a relac?a?o entre um polino?mio tensorial f\n?, definido no\n\nR\n2, e sua forma simplicial cano?nica f ??.\n\n\n\n44 Cap??tulo 7. Conversa?o tensorial/simplicial\n\n7.2 Conversa?o de tensorial para simplicial\n\nPela definic?a?o (5.1), dados ? ? Id?1 e \u00b5 ? Id?1 tal que \u00b5 ? ?, a forma simplicial cano?nica\n\ndo polino?mio de Bernstein tensorial B?? pode ser escrita como\n\nB?? (?d(u)) =\n\nd?1\n?\n\nj=0\n\nB?j?j (uj) para todo u ? A\nd (7.1)\n\nAle?m disso, cada polino?mio de Bernstein univariado B\ng\ni (uj) no lado direito da fo?rmula (7.1)\n\npode ser descrito como uma combinac?a?o linear de polino?mios de Bernstein simpliciais de-\n\nfinidos em Ad. Mais especificamente\n\nB\ng\ni (uj) =\n\ng!\n\ni!(g ? i)!\nuij(1 ? uj)\n\nk\n\n=\ng!\n\ni!(g ? i)!\nuij\n\n?\n\n?\n\n?\n1 ?\n\n?\n\n?\n\n?\n\nd\n?\n\n:p=0\n:j 6=j\n\nup\n\n?\n\n?\n\n?\n+\n\n?\n\n?\n\n?\n\nd\n?\n\n:p=0\n:j 6=j\n\nup\n\n?\n\n?\n\n?\n? uj\n\n?\n\n?\n\n?\n\nk\n\n=\ng!\n\ni!k!\nuij(u0 + \u00b7 \u00b7 \u00b7 + uj?1 + uj+1 + \u00b7 \u00b7 \u00b7 + ud)\n\nk\n\n=\ng!\n\ni!k!\nuij\n?\n\n??Ik\nd\n\n?j =0\n\nk!\n\n?!\nu?00 \u00b7 \u00b7 \u00b7u\n\n?j?1\nj?1 u\n\n?j+1\nj+1 \u00b7 \u00b7 \u00b7u\n\n?d\nd\n\n=\n?\n\n??Ik\nd\n\n?j =0\n\ng!\n\n?!i!\nu?00 \u00b7 \u00b7 \u00b7u\n\n?j?1\nj?1 u\n\ni\nj u\n\n?j+1\nj+1 \u00b7 \u00b7 \u00b7u\n\n?d\nd\n\n=\n?\n\n??I\ng\nd\n\n?j =i\n\ng!\n\n?!\nu?00 \u00b7 \u00b7 \u00b7u\n\n?d\nd\n\n=\n?\n\n??I\ng\nd\n\n?j =i\n\nB\ng\n?\n(u) (7.2)\n\nCombinando esta equac?a?o com a fo?rmula (7.1), temos\n\nB?? (?d(u)) =\nd?1\n?\n\nj=0\n\n?\n\n??I\n?j\nd\n\n?j =?j\n\nB?j? (u)\n\nPara expandir o produto?rio acima em termos de somato?rios, utilizamos a notac?a?o de\n\nhiper-??ndices\n\nB?? (?d(u)) =\n?\n\n??H?\nd?1,d\n\ndiag(?)=?\n\nB?0?0 (u) \u00b7 \u00b7 \u00b7B\n?d?1\n?d?1\n\n(u)\n\n\n\n7.3. Conversa?o de simplicial para tensorial 45\n\nAgora usamos o fato de que o produto de m + 1 polino?mios de Bernstein simpliciais de\n\ngraus ?0,?1, \u00b7 \u00b7 \u00b7 ,?m pode ser reduzido a um u?nico polino?mio de Bernstein simplicial de\n\ngrau g = ?0 + ?1 + \u00b7 \u00b7 \u00b7 + ?m. Segundo DeRose [6],\n\nB?0?0 (u) \u00b7 \u00b7 \u00b7B\n?d?1\n?d?1\n\n(u) =\n?!(?0 + \u00b7 \u00b7 \u00b7 + ?d?1)!\n\n?0! \u00b7 \u00b7 \u00b7 ?d?1!|?|!\nB\n\n|?|\n?0+\u00b7\u00b7\u00b7+?d?1\n\n(u). (7.3)\n\nEnta?o,\n\nB?? (?d(u)) =\n?\n\n??H?\nd?1,d\n\ndiag(?)=?\n\n?!(?0 + \u00b7 \u00b7 \u00b7 + ?d?1)!\n\n?!|?|!\nB\n\n|?|\n?0+\u00b7\u00b7\u00b7+?d?1\n\n(u)\n\n=\n?\n\n??I\n|?|\nd\n\n?\n\n??H\n?,?\nd?1,d\n\ndiag(?)=?\n\n?!?!\n\n?!|?|!\nB |?|? (u)\n\nPortanto,\n\nM?? =\n?\n\n??H\n?,?\nd?1,d\n\ndiag(?)=?\n\n?!?!\n\n?!|?|!\n\n7.3 Conversa?o de simplicial para tensorial\n\nSeja g,d naturais e ? um multi-??ndice de I\ng\nd\n. As fo?rmulas a seguir expressam a forma\n\ntensorial cano?nica de um polino?mio de Bernstein simplicial Bg?, como uma combinac?a?o\n\nlinear de polino?mios de Bernstein tensoriais B?? (x), onde ? = g\n?d = (g, \u00b7 \u00b7 \u00b7 ,g) ? Id?1.\n\nPara estas fo?rmulas, denotamos por i o u?ltimo elemento ?d de ?, e por ?\n? ? I\n\ng?i\nd?1 o\n\nmulti-??ndice que e? igual a ? nos seus primeiros d ? 1 elementos (ou seja, ?? = ?|d?1).\n\nObserve que ?! = ??! i! e u? = uid\n?d?1\n\nj=0 u\n??\nj\n\nj . Equac?a?o (6.5) enta?o se torna\n\nBg?(?\n?1\nd\n(x)) =\n\ng!\n\n?!\nx\n??0\n0 x\n\n??1\n1 \u00b7 \u00b7 \u00b7u\n\n??\nd?1\n\nd?1 (1 ? x0 ? \u00b7 \u00b7 \u00b7xd?1)\ni\n\n=\ng!\n\n?!\nx\n??0\n0 x\n\n??1\n1 \u00b7 \u00b7 \u00b7x\n\n??\nd?1\n\nd?1\n\n?\n\n\u00b5?Ii\nd\n\ni!\n\n\u00b5!\n(1 ? d)\u00b5d\n\nd?1\n?\n\nk=0\n\n(1 ? xk)\n\u00b5k\n\n=\n?\n\n\u00b5?Ii\nd\n\n(1 ? d)\u00b5d\ng!\n\n(\u00b5 + ?)!\n\n(\u00b5d + i)!\n\n\u00b5d!\n\nd?1\n?\n\nk=0\n\nB\n??\nk\n+\u00b5k\n\n??\nk\n\n(xk)\n\n(7.4)\n\nIntroduzindo a varia?vel j = i ? \u00b5d e substituindo \u00b5d por i ? j, equac?a?o (7.4) se torna\n\n\n\n46 Cap??tulo 7. Conversa?o tensorial/simplicial\n\nBg?(?\n?1\nd (x)) =\n\ni\n?\n\nj=0\n\n?\n\n??I\nj\nd?1\n\n(1 ? d)i?j\ng!\n\n(? + ??)!(i ? j)!\n\nd?1\n?\n\nk=0\n\nB\n??\nk\n+?k\n\n??\nk\n\n(xk)\n\n(7.5)\n\nSubstituindo agora ? por ? + ?? e q por i ? j, equac?a?o (7.5) se torna\n\nBg?(?\n?1\nd\n(x)) =\n\ni\n?\n\nq=0\n\n?\n\n??I\ng?q\nd?1\n\n????\n\n(1 ? d)q\ng!\n\n?!q!\n\nd?1\n?\n\nk=0\n\nB\n?k\n??\nk\n(xk) (7.6)\n\nPara reduzir a fo?rmula (7.6) a uma combinac?a?o linear de polino?mios de Bernstein de\n\nmesmo multi-grau ?, e? necessa?rio aplicar a fo?rmula (3.4) de elevac?a?o de grau de polino?mios\n\nde Bernstein univariados a cada termo da somato?ria. Obtemos enta?o\n\nBg?(?\n?1\nd\n(x)) =\n\n?\n\n??Id?1\n????\n\n???\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n??Id?1\n????\n\n|?|?g\n???+????\n\n(1 ? d)g?|?|\ng!(? ? ?)!\n\n?!(g ? |?|)!\n\n(\n\n?\n\n??\n\n)(\n\n? ? ?\n\n? ? ??\n\n)\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\nB?? (x)\n\n(7.7)\n\nPortanto temos\n\nM?? =\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n??Id?1\n????\n\n|?|?g\n???+????\n\n(1 ? d)g?|?|\ng!(???)!\n?!(g?|?|)!\n\n(\n\n?\n\n??\n\n)(\n\n? ? ?\n\n? ? ??\n\n)\n\nse ?? ? ?\n\n0 caso contra?rio\n\n\n\nCap??tulo 8\n\nSimplo?ides de Be?zier\n\nNeste cap??tulo, definiremos a abordagem unificada dos polino?mios simploidais[6], que ge-\n\nneralizam polino?mios tensoriais e simpliciais para dom??nios que sa?o produtos cartesianos\n\nde simplexos cano?nicos denominados simplo?ides. Em particular, descrevemos os elemen-\n\ntos de Be?zier simploidais ou simplo?ides de Be?zier, que, analogamente, generalizam a\n\nrepresentac?a?o de Be?zier-DeCasteljau destes polino?mios, como o elemento prisma?tico da\n\nfigura 8.1.\n\nFigura 8.1: O prisma cano?nico (esquerda) e um exemplo de um bloco de Be?zier simploidal\n(direita).\n\nNeste cap??tulo, tambe?m daremos fo?rmulas gerais expl??citas para elevac?a?o para graus ar-\n\nbitra?rios, bem como para o ca?lculo de derivadas direcionais de ordem arbitra?ria.\n\n8.1 Espac?o multi-afim cano?nico\n\nDefinimos A?, o espac?o multi-afim cano?nico de multi-dimensa?o ? ? Im, como o conjunto\n\nA\n? = {U ? M? : |Ui| = 1, i = 0, \u00b7 \u00b7 \u00b7 ,m}. (8.1)\n\nNote que A? = A?0 \u00d7 \u00b7 \u00b7 \u00b7 \u00d7 A?m e que, diferentemente do espac?o cartesiano, (Am)\u00d7n na?o e?\n\nisomo?rfico a Am\u00b7n em geral. Quando um multi-??ndice ? e? utilizado para denotar a dimensa?o\n\nde um espac?o multi-afim, como na definic?a?o acima, o chamamos de multi-dimensa?o.\n\n47\n\n\n\n48 Cap??tulo 8. Simplo?ides de Be?zier\n\nDefinimos tambe?m o espac?o vetorial cano?nico de multi-dimensa?o ?, denotado por V?,\n\ncomo o conjunto de diferenc?as entre pares de pontos do A?; isto e?, o subespac?o de M?\nconsistindo das matrizes ? tais que |?i| = 0 para todo i = 0, \u00b7 \u00b7 \u00b7 ,m.\n\n8.1.1 Simplo?ides cano?nicos\n\nDados m ? N e ? ? Im, definimos o simplo?ide cano?nico de multi-dimensa?o ? como o\n\nproduto cartesiano\n\nK\n? = K?0 \u00d7 \u00b7 \u00b7 \u00b7 \u00d7 K?m\n\nNote que K? ? A?. Os simplo?ides cano?nicos de dimensa?o (1, 1), (2, 1) e (1, 1, 1) esta?o ilus-\n\ntrados na figura 8.2. Em particular, os simplexos cano?nicos Kd e os hipercubos cano?nicos\n\n||||||\n\n\u00d7\u00d7\u00d7\n\u00d7\n\nK\n(1,1)\n\nK\n(2,1)\n\nK\n(1,1,1)\n\nFigura 8.2: Alguns simplo?ides cano?nicos.\n\n[0, 1]d de Rd podem ser vistos como casos particulares de simplo?ides cano?nicos.\n\n8.1.2 Facetas\n\nDefinimos a faceta de ??ndices i,j de um simplo?ide cano?nico K?, para 0 ? i ? m e\n\n0 ? j ? ?i, denotada por K\n?|i,j, como\n\nK\n?|i,j = {U ? K\n\n? : Uij = 0}. (8.2)\n\nObserve que K?|i,j e? congruente ao simplo?ide K\n? onde ? ? Id e? tal que ?i = ?i ?1 e ?k = ?k\n\npara todo k 6= i. Observe tambe?m que o conceito de faceta de um simplexo cano?nica Kd\n\n(sec?a?o 6.1.2) e? um caso particular desta definic?a?o.\n\n\n\n8.2. Polino?mios simploidais 49\n\n8.2 Polino?mios simploidais\n\nDefinimos o espac?o dos polino?mios simploidais de multi-dimensa?o ? ? Im e multi-grau\n\n? ? Im, denotado por P\n?\n? , como o espac?o de todas as func?o?es f de A\n\n? para os reais, tais\n\nque para cada i ? {0, \u00b7 \u00b7 \u00b7 ,d}, f(U) e? uma func?a?o polinomial simplicial da componente Ui\ncom grau ?i quando as outras componentes sa?o consideradas fixas. Por exemplo, considere\n\na func?a?o f de A(2,1) para R definida por\n\nf(U) = f\n\n(\n\nU00 U01 U02\nU10 U11\n\n)\n\n= U200U\n2\n10U11 + U\n\n2\n01U\n\n3\n11 + U\n\n2\n01U\n\n3\n10 +\n\n+U01U02U10U\n2\n11 + U01U02U\n\n2\n10U11 + U\n\n2\n02U\n\n3\n11\n\n= (U210U11)U\n2\n00 + (U\n\n3\n11 + U\n\n3\n10)U\n\n2\n01 +\n\n+(U10U\n2\n11 + U\n\n2\n10U11)U01U02 + (U\n\n3\n11)U\n\n2\n02 (8.3)\n\n= (U201)U\n3\n10 + (U\n\n2\n00 + U\n\n2\n01)U\n\n2\n10U11 +\n\n+(U201)U10U\n2\n11 + (U\n\n2\n01 + U\n\n2\n02)U\n\n3\n11 (8.4)\n\nObserve que, pela fo?rmula (8.3), a func?a?o f e? um polino?mio simplicial de grau 2 da\n\ncomponente U0 = (U00,U01,U02); e pela fo?rmula (8.4), e? um polino?mio simplicial de grau\n\n3 da componente U1 = (U10,U11).\n\nNote que qualquer func?a?o f ? P?? tambe?m pertence ao espac?o P\n?\n?\nse ? ? ?. Note ainda\n\nque todo polino?mio simplicial pode ser visto trivialmente como um polino?mio simploidal.\n\nAdemais, todo polino?mio tensorial f em Rd de multi-grau ? ? Id?1 pode ser visto como\n\num polino?mio simploidal definido no espac?o multi-afim A1?d = A1 \u00d7 \u00b7 \u00b7 \u00b7 \u00d7 A1, utilizando\n\no mapeamento ?d de R\nd em A1?d tal que ?d(x0, \u00b7 \u00b7 \u00b7 ,xd?1) = ((x0, 1 ? x0), \u00b7 \u00b7 \u00b7 , (xd?1, 1 ?\n\nxd?1)). Por esta mesma corresponde?ncia, todo polino?mio simploidal de dom??nio A\n1?d e\n\nmulti-grau ? ? Id?1 e? essencialmente um polino?mio tensorial de dom??nio R\nd e mesmo\n\nmulti-grau ?.\n\n8.2.1 A base de Bernstein simploidal\n\nPara todo m ? N, toda multi-dimensa?o ? ? Im e todo multi-grau ? ? Im, definimos a base\n\nde Bernstein simploidal de P?? , como consistindo dos polino?mios simploidais B\n?\n?, para\n\ntodo ? ? H?? , cada um definido como um produto de polino?mios de Bernstein simpliciais:\n\nB??(U) =\n\nm\n?\n\ni=0\n\nB\n?i\n?i\n(Ui) para todo U ? A\n\n?. (8.5)\n\n\n\n50 Cap??tulo 8. Simplo?ides de Be?zier\n\nNote que estes polino?mios generalizam os polino?mios de Bernstein simpliciais (? ? I0) e\n\npolino?mios de Bernstein tensoriais (? = 1 ? m = (1, 1, \u00b7 \u00b7 \u00b7 , 1)).\n\n8.2.2 Representac?a?o de Be?zier de polino?mios simploidais\n\nA representac?a?o de Be?zier de uma func?a?o polinomial simploidal f de multi-dimensa?o\n\n? ? Id e multi-grau ? ? Id e? sua expansa?o em termos da base de Bernstein simploidal B\n?\n? ,\n\na saber\n\nf(U) =\n?\n\n??H?\n?\n\nb?B\n?\n?(U)\n\nonde cada b? e? um nu?mero real, um coeficiente (simploidal) de Be?zier de f. De forma\n\nana?loga aos polino?mios simpliciais, a posic?a?o nominal de cada coeficiente b? e? definida\n\ncomo sendo o ponto ?/? ? A?\n\nPor exemplo, a func?a?o f definida pela fo?rmula 8.4 tem os seguintes coeficientes de\n\nBe?zier:\n\nc200\n30\n\n= 0 c200\n21\n\n= 1 c200\n12\n\n= 0 c200\n03\n\n= 0\n\nc110\n30\n\n= 0 c110\n21\n\n= 0 c110\n12\n\n= 0 c110\n03\n\n= 0\n\nc020\n30\n\n= 1 c020\n21\n\n= 1/3 c020\n12\n\n= 1/3 c020\n03\n\n= 1\n\nc011\n30\n\n= 0 c011\n21\n\n= 0 c011\n12\n\n= 0 c011\n03\n\n= 0\n\nc002\n30\n\n= 0 c002\n21\n\n= 0 c002\n12\n\n= 0 c002\n03\n\n= 1\n\nc101\n30\n\n= 0 c101\n21\n\n= 0 c101\n12\n\n= 0 c101\n03\n\n= 0\n\n8.2.3 Elevac?a?o de grau\n\nA fo?rmula de elevac?a?o de grau (6.8) para polino?mios simpliciais pode ser estendida para\n\npolino?mios simploidais gerais. Mais especificamente, dados um natural m, uma multi-\n\ndimensa?o ? ? Im, um multi-grau de origem ? ? Im, um hiper-??ndice ? ? H\n?\n? e um\n\n\n\n8.2. Polino?mios simploidais 51\n\nmulti-grau de destino ? ? Im tal que ? ? ?,temos\n\nB??(U) =\n\nm\n?\n\ni=0\n\nB\n?i\n?i\n(U)\n\n=\n\n(\n\n?\n\n?0?I\n?0\n?0\n\n?0??0\n\n(\n\n?0\n?0\n\n)\n\nB?0?0 (U)\n\n)\n\n(\n\n?0\n?0\n\n) \u00b7 \u00b7 \u00b7\n\n(\n\n?\n\n?m?I\n?m\n?m\n\n?m??m\n\n(\n\n?m\n?m\n\n)\n\nB?m?m(U)\n\n)\n\n(\n\n?m\n?m\n\n)\n\n=\n\n?\n\n?0?I\n?0\n?0\n\n?0??0\n\n\u00b7 \u00b7 \u00b7\n?\n\n?m?I\n?m\n?m\n\n?m??m\n\n(\n\n?0\n?0\n\n)\n\n\u00b7 \u00b7 \u00b7\n\n(\n\n?m\n?m\n\n)\n\nB?0?0 (U) \u00b7 \u00b7 \u00b7 B\n?m\n?m\n\n(U)\n\n(\n\n?\n\n?\n\n)\n\nIntroduzindo o hiper-??ndice ? cujas linhas sa?o ?0,?1, \u00b7 \u00b7 \u00b7 ,?m temos\n\nB??(U) =\n\n(\n\n?\n\n?\n\n)?1\n?\n\n??H\n?\nm,?\n\n???\n\n(\n\n?0\n?0\n\n)\n\n\u00b7 \u00b7 \u00b7\n\n(\n\n?m\n?m\n\n)\n\nB\n?\n?(U)\n\n=\n\n(\n\n?\n\n?\n\n)?1\n?\n\n??H\n?\nm,?\n\n???\n\n(\n\n?\n\n?\n\n)\n\nB\n?\n?(U) (8.6)\n\nPortanto, dada a representac?a?o de Be?zier de um polino?mio F de multi-grau ?\n\nF(U) =\n?\n\n??H?\n?\n\nb??B\n?\n?(U)\n\npodemos obter os coeficientes do mesmo polino?mio em termos da base de multi-grau ?\n\nF(U) =\n?\n\n??H\n?\n?\n\nb???B\n?\n?(U)\n\npela fo?rmula\n\nb??? =\n?\n\n??H?\n?\n\nK??b\n?\n? (8.7)\n\nonde\n\nK?? =\n\n(\n\n?\n\n?\n\n)?1(\n?\n\n?\n\n)\n\n\n\n52 Cap??tulo 8. Simplo?ides de Be?zier\n\n8.2.4 Diferenciac?a?o\n\nDados um natural m, uma multi-dimensa?o ? ? Im e um vetor ? ? V\n?, a derivada de\n\nordem r do polino?mio de Bernstein simploidal B?? na direc?a?o ? e?\n\n(Dr?B\n?\n?)(U) =\n\n[\n\n?r\n\n(\n\nt : R ?\nm\n?\n\ni=0\n\nB\n?i\n?i\n(Ui + t?i)\n\n)]\n\n(0) (8.8)\n\npara qualquer U ? A?. Usando a fo?rmula de Leibnitz (4.2), obtemos\n\n(Dr?B\n?\n?)(U) =\n\n?\n\n??Irm\n\nr!\n\n?!\n\nm\n?\n\ni=0\n\n[\n\n??i\n(\n\nt : R ? B?i?i (Ui + t?i)\n)]\n\n(0)\n\nMais uma vez, se ?i > ?i para algum i, o termo de dentro do somato?rio e? igual a zero.\n\nUtilizando a fo?rmula (6.12) obtemos\n\n(Dr?B\n?\n?)(U) =\n\n?\n\n??Irm\n???\n\nr!\n\n?!\n\nm\n?\n\ni=0\n\n?i!\n\n(?i ? ?i)!\n\n?\n\n??I\n?i\n?i\n\n???i\n\nB?i\n?\n(?i) B\n\n?i??i\n?i??\n\n(Ui)\n\n=\n?\n\n??Irm\n???\n\nr!\n\n?!\n\n?!\n\n(? ? ?)!\n\n?\n\n??H?\n?\n\n???\n\nm\n?\n\ni=0\n\nB?i?i(?i) B\n?i??i\n?i??i\n\n(Ui)\n\nComo na sec?a?o 6.2.4, se considerarmos a definic?a?o de B??\n\nB??(U) =\nm\n?\n\ni=0\n\n?i!\n\n?i!\nU?ii\n\ncomo va?lida em todo espac?o Mm,?, ao inve?s de apenas no espac?o A\n?, podemos escrever\n\n(Dr?B\n?\n?)(U) =\n\n?\n\n??Irm\n???\n\nr!\n\n?!\n\n?!\n\n(? ? ?)!\n\n?\n\n??H?\n?\n\n???\n\nB??(?) B\n???\n???(U)\n\n(8.9)\n\nComo pode-se notar, esta equac?a?o e? a versa?o simploidal da equac?a?o 6.12. Entretanto, uma\n\nforma mais adequada para nossos propo?sitos e? obtida realizando a elevac?a?o de multi-grau\n\nde ? ? ? para ?:\n\n(Dr?B\n?\n?)(U) =\n\n?\n\n??Irm\n???\n\nr!\n\n?!\n\n?!\n\n(? ? ?)!\n\n?\n\n??H?\n?\n\n???\n\nB??(?)\n?\n\n??H?\n?\n\n?????\n\n(\n\n?\n\n? ? ?\n\n)(\n\n?\n\n? ? ?\n\n)\n\nB??(U)\n\n\n\n8.3. Elementos de Be?zier Simploidais 53\n\nque pode ser reorganizada em\n\n(Dr?B\n?\n?)(U) =\n\n?\n\n??H?\n?\n\n?\n\n??Irm\n???\n\n?\n\n??H?\n?\n\n???\n?????\n\nr!\n\n(\n\n?\n\n? ? ?\n\n)\n\nB??(?) B\n?\n?(U) (8.10)\n\nPortanto, dados os coeficientes de Be?zier b?? de um polino?mio F , podemos obter os coefi-\n\ncientes de Be?zier b??? da derivada direcional D\nr\n?F pela fo?rmula\n\nb??? =\n?\n\n??H?\n?\n\nK??b\n?\n? (8.11)\n\nonde\n\nK?? =\n?\n\n??Irm\n???\n\n?\n\n??H?\n?\n\n???\n?????\n\nr!\n\n(\n\n?\n\n? ? ?\n\n)\n\n8.3 Elementos de Be?zier Simploidais\n\nUm elemento simploidal de Be?zier de multi-dimensa?o ? e multi-grau ? ? Id?1 em R\nd e?\n\na uma func?a?o F : K? ? Rm cujas m componentes sa?o polino?mios simploidais do espac?o\n\nP?? definidos em termos da representac?a?o de Be?zier. Assim como o polino?mio simploidal\n\ngeneraliza os polino?mios simpliciais e tensoriais, o elemento simploidal de Be?zier generaliza\n\nos elementos simpliciais e tensoriais. Veja a figura ??.\n\nOs pontos de controle de um elemento F sa?o definidos de maneira ana?loga aos dos ele-\n\nmentos simpliciais e tensoriais: o coeficiente de Be?zier de hiper-??ndice ? da componente\n\nFi e? a coordenada i do ponto de controle P? de F .\n\nA grade de controle de Be?zier de F consiste dos seus pontos de controle P? e dos\n\nsegmentos de reta que ligam todos os pares de pontos P? e P? tais que ? e ? diferem em\n\napenas dois elementos i,j da mesma linha k com ?ki ? ?ki = +1 e ?kj ? ?kj = ?1.\n\n\n\n54 Cap??tulo 8. Simplo?ides de Be?zier\n\nFigura 8.3: Um elemento de Be?zier simploidal de multi-dimensa?o (1, 2) (um prisma de Be?zier)\ne multi-grau (2, 3) mostrando seus pontos de controle e sua grade de Be?zier (em vermelho).\n\n\n\nCap??tulo 9\n\nMapeamentos afins\n\nUm mapeamento afim e? uma func?a?o de um espac?o X ? Rm para outro espac?o Y ? Rn tal\n\nque cada coordenada do resultado e? uma func?a?o afim (polinomial de primeiro grau) das\n\ncoordenadas do argumento. Note que transformac?o?es lineares de Rm para Rn sa?o casos\n\nparticulares de mapeamentos afins [12].\n\nNesta tese, mapeamentos afins sa?o importantes para a reparametrizac?a?o de elementos\n\nde Be?zier, em particular para descrever a colagem de blocos adjacentes de uma malha.\n\n9.1 Mapeamento afim de A? para A?\n\nNo caso espec??fico onde X e Y sa?o espac?os multi-afins de multi-dimenso?es ? ? Im e\n\n? ? In respectivamente, um mapeamento afim e? definido por constantes reais M\nrs\nij onde\n\nr ? {0, \u00b7 \u00b7 \u00b7 ,n}, s ? {0, \u00b7 \u00b7 \u00b7 ,?r}, i ? {0, \u00b7 \u00b7 \u00b7 ,m} e j ? {0, \u00b7 \u00b7 \u00b7 ,?i} tais que\n\n(?(U))rs =\nm\n?\n\ni=0\n\n?i\n?\n\nj=0\n\nUijM\nrs\nij para todo U ? A\n\n?. (9.1)\n\nNote que, para que ?(U) pertenc?a a A?, e? necessa?rio que, para todo r ? {0, \u00b7 \u00b7 \u00b7 ,n}:\n?r\n?\n\ns=0\n\n(?(U))rs = 1\n\nVerifica-se que esta condic?a?o e? equivalente a dizer que para todo r ? {0, \u00b7 \u00b7 \u00b7 ,n}, existe\n\num wr ? Am tal que\n?r\n?\n\ns=0\n\nMrsij = w\nr\ni (9.2)\n\npara todo i = {0, \u00b7 \u00b7 \u00b7 ,m} e todo j ? {0, \u00b7 \u00b7 \u00b7 ,?i}. Observe que a constante w\nr\ni define o peso\n\nda linha i de U na formac?a?o da linha r de ?(U). Observe tambe?m que a condic?a?o (9.2)\n\nimplica que o lado esquerdo na?o depende de j.\n\n55\n\n\n\n56 Cap??tulo 9. Mapeamentos afins\n\nEm particular, quando o dom??nio e/ou contra-dom??nio sa?o espac?os afins (isto e?, ? = (d)\n\ne/ou ? = (e)) podemos suprimir o ??ndice i e/ou o ??ndice r dos coeficientes Mrsij , pois estes\n\n??ndices sa?o sempre 0.\n\n9.1.1 Mapeamento afim cano?nico de Ad para A1?d\n\nUm caso particular muito comum de mapeamento afim e? o mapeamento cano?nico ?d de\n\nA\nd para Rd (definido na sec?a?o 7.1), que pode ser visto como um mapa de X = A(d) para\n\nY = A1?d . Neste caso, as constantes Mrsj sa?o\n\nMrs0 =\n\n{\n\n1, se r = s,\n\n0, se r 6= s\ne Mrs1 = 1 ? M\n\nrs\n0 =\n\n{\n\n0, se r = s,\n\n1, se r 6= s\n\n9.2 Derivadas de um mapeamento afim\n\nSeja ? um mapeamento afim de A? para A?, definido pelas constantes Mrsij onde r ?\n\n{0, \u00b7 \u00b7 \u00b7 ,n}, s ? {0, \u00b7 \u00b7 \u00b7 ,?r}, i ? {0, \u00b7 \u00b7 \u00b7 ,m} e j ? {0, \u00b7 \u00b7 \u00b7 ,?i}; e seja ? uma direc?a?o de A\n?.\n\nA derivada (direcional) de ? na direc?a?o ? e? uma constante (independente de U) dada por\n\n((D??)(U))rs =\nm\n?\n\ni=0\n\n?i\n?\n\nj=0\n\n?ijM\nrs\nij (9.3)\n\nObserve que, por esta raza?o, ?(K?|ij) e? uma co?pia transladada de ?(K\n?|ik) para todo\n\ni ? {0, \u00b7 \u00b7 \u00b7 ,m} e para todo j,k ? {0, \u00b7 \u00b7 \u00b7 ,?i}.\n\n9.3 Exemplos\n\nNeste sec?a?o, apresentamos alguns exemplos de mapas afins entre espac?os multi-afins de\n\ndimenso?es variadas, e os respectivos coeficientes Mrsij .\n\n9.3.1 Mapeamento afim de A(1) para A(2)\n\n\n\n9.3. Exemplos 57\n\nM00 = 0.4 M\n0\n1 = 0.8\n\nM10 = 0.5 M\n1\n1 = ?0.3\n\nM20 = 0.1 M\n2\n1 = ?0.5\n\n(100)\n\n(010)\n\n(001)\nA\n\nB\n(10)\n\n(01)\n\nFigura 9.1: Exemplo de um mapeamento afim de A(1) para A(2) (ou de A1 para A2).\n\n9.3.2 Mapeamento afim de A(2) para A(2)\n\nM00 = 0.7 M\n0\n1 = 0.2 M\n\n0\n2 = 0.2\n\nM00 = 0.6 M\n0\n1 = 0.8 M\n\n0\n2 = 0.2\n\nM00 = ?0.3 M\n0\n1 = 0.0 M\n\n0\n2 = 0.6\n\n(100)\n\n(010)\n\n(001)\n\nA\n\nB\n\nC\n\n(100)\n\n(010)\n\n(001)\n\nFigura 9.2: Exemplo de mapeamento afim de A(2) para A(2) (ou de A2 para A2).\n\n9.3.3 Mapeamento afim de A(2) para A(2,1)\n\n\n\n58 Cap??tulo 9. Mapeamentos afins\n\nA\n\nB\n\nC\n\nM\n0,0\n0 = 0.5 M\n\n0,0\n1 = 0.1 M\n\n0,0\n2 = 0.7\n\nM\n1,0\n0 = 0.5 M\n\n1,0\n1 = 0.4 M\n\n1,0\n2 = ?0.4\n\nM\n2,0\n0 = 0.0 M\n\n2,0\n1 = 0.5 M\n\n2,0\n2 = 0.7\n\nM\n0,1\n0 = 0.5 M\n\n0,1\n1 = 0.4 M\n\n0,1\n2 = 0.6\n\nM\n1,1\n0 = 0.5 M\n\n1,1\n1 = 0.6 M\n\n1,1\n2 = 0.4\n\n(100)\n\n(010)\n\n(001)\n\nFigura 9.3: Exemplo de um mapeamento afim de A(2) (ou A2) para A(2,1).\n\n9.3.4 Mapeamento afim de A(1,1) para A(2)\n\n\n\n9.3. Exemplos 59\n\nM00,0 = 0.0 M\n0\n0,1 = 0.5 M\n\n0\n1,0 = 0.0 M\n\n0\n1,1 = 0.0\n\nM10,0 = 0.0 M\n1\n0,1 = 0.0 M\n\n1\n1,0 = 0.5 M\n\n1\n1,1 = 0.0\n\nM20,0 = 0.5 M\n2\n0,1 = 0.0 M\n\n2\n1,0 = 0.0 M\n\n1\n1,1 = 0.5\n\n( 1 01 0 )(\n1 0\n0 1 )\n\n( 0 10 1 ) (\n0 1\n1 0 )\n\n(100)\n\n(010)\n\n(001)\n\nA\n\nB\n\nC\n\nD\n\nFigura 9.4: Exemplo de um mapeamento afim de A(1,1) para A(2) (ou A2). Note que os segmentos\nAB e CD, que sa?o imagens das facetas K1,1|1,0 e K\n\n1,1|1,1, sa?o paralelas entre si.\n\n9.3.5 Mapeamento afim de A(1,1) para A(1,1)\n\n\n\n60 Cap??tulo 9. Mapeamentos afins\n\nM\n0,0\n0,0 = 0.5 M\n\n0,0\n0,1 = 0.0 M\n\n0,0\n1,0 = 0.5 M\n\n0,0\n1,1 = 0.0\n\nM\n0,1\n0,0 = 0.0 M\n\n0,1\n0,1 = 0.5 M\n\n0,1\n1,0 = 0.0 M\n\n0,1\n1,1 = 0.5\n\nM\n1,0\n0,0 = 0.0 M\n\n1,0\n0,1 = 0.5 M\n\n1,0\n1,0 = 0.5 M\n\n1,0\n1,1 = 0.0\n\nM\n1,1\n0,0 = 0.5 M\n\n1,1\n0,1 = 0.0 M\n\n1,1\n1,0 = 0.0 M\n\n1,1\n1,1 = 0.5\n\n( 1 01 0 )\n( 1 01 0 ) (\n\n1 0\n0 1 )(\n\n1 0\n0 1 )\n\n( 0 10 1 )(\n0 1\n0 1 ) (\n\n0 1\n1 0 )(\n\n0 1\n1 0 )\n\nA\n\nB\n\nC\n\nD\n\nFigura 9.5: Exemplo de um mapeamento afim de A(1,1) para A(1,1).\n\n\n\nCap??tulo 10\n\nReparametrizac?a?o de elementos de\n\nBe?zier\n\nNeste cap??tulo, consideraremos o problema da reparametrizac?a?o afim de elementos sim-\n\nploidais de Be?zier.\n\nEste problema inclui va?rios casos particulares importantes, como a extrac?a?o de facetas\n\ne a subdivisa?o de um bloco de Be?zier (algoritmo de DeCasteljau generalizado). Por\n\nexemplo, considere um elemento de Be?zier de multi-grau (5, 7) cujo dom??nio e? o prisma\n\ncano?nico, K(1,2). Veja a figura 10.1.\n\nA\n\nB\n\nFigura 10.1: Bloco de Be?zier de dom??nio prisma?tico\n\nA extrac?a?o da face A deste retalho produzira? um retalho de Be?zier de dom??nio K(1,1) e\n\nmulti-grau (5, 7). A extrac?a?o da face B, por outro lado, produzira? um retalho de Be?zier\n\nde dom??nio K(2) e multi-grau (7). Esta operac?a?o e? uma ferramenta importante para a\n\ncolagem na?o conforme de retalhos simploidais, como veremos no cap??tulo 12.\n\n61\n\n\n\n62 Cap??tulo 10. Reparametrizac?a?o de elementos de Be?zier\n\n10.1 Reparametrizac?a?o afim\n\nSeja F uma func?a?o de A? para R, e ? um mapeamento afim de outro espac?o multi-afim\n\nA\n? para A?. Definimos a reparametrizac?a?o de F por ? como a composic?a?o F ? ?, que e?\n\numa func?a?o de A2 para R. Veja a figura 10.2.\n\nSe F e? um polino?mio simploidal de multigrau ?, verifica-se que G = F ? ? tambe?m e? um\n\npolino?mio simploidal, cujo multi-grau ? depende de ?, ? e ?.\n\nNeste cap??tulo, consideramos o problema de calcular a representac?a?o de Be?zier de\n\nG a partir da representac?a?o de Be?zier de F e do mapa ?. Especificamente, dados os\n\ncoeficientes de Be?zier b?? de um polino?mio simploidal F ? P\n?\n? ,\n\nF(U) =\n?\n\n??H?\n?\n\nb??B\n?\n?(U) para todo U ? A\n\n?\n\ne um mapeamento afim ? de outro espac?o multi-afim A? para A?, deseja-se encontrar o\n\nmulti-grau ? e os coeficientes b??? tais que\n\nG(V ) = F(?(V )) =\n?\n\n??H\n?\n?\n\nb???B\n?\n?(V ) para todo V ? A\n\n?\n\nComo veremos, os coeficientes b??? sa?o func?o?es lineares dos coeficientes b\n?\n?. Portanto a\n\nrelac?a?o entre os coeficientes b?? e b\n??\n? pode ser resumida por uma matriz de mudanc?a de\n\nbase K???:\n\nb??? =\n?\n\n??H?\n?\n\nK???b\n?\n?\n\nonde K??? e? o coeficiente de B\n?\n? na representac?a?o de Be?zier de B\n\n?\n? ? ?.\n\n\n\n10.1. Reparametrizac?a?o afim 63\n\n( 1 01 0 )(\n1 0\n0 1 )\n\n( 0 10 1 ) (\n0 1\n1 0 )\n\n(100)\n\n(010)\n\n(001)\n\n?\n\nF ? ? F\n\nK(2)K(1,1)\n\nFigura 10.2: Uma func?a?o F, de A(2) para R, restrita ao K(2) (em amarelo) e sua reparametrizac?a?o\npelo mapeamento afim ? de A(1,1) para A(2), da sec?a?o 9.3.4, resultando na func?a?o F ??, de A(1,1)\n\npara R, restrita ao K(1,1) (em vermelho).\n\n\n\n64 Cap??tulo 10. Reparametrizac?a?o de elementos de Be?zier\n\n10.2 Mapeamento de simploidal para simplicial\n\nConsideramos, inicialmente, o caso particular onde ? e? um mapeamento de um espac?o\n\nmulti-afim para um espac?o afim. Seja ? um mapeamento de A? para Ae com ? ? Im e\n\nm,e ? N. Pelas fo?rmulas (8.5) e (9.1), para todo grau g ? N e todo multi-??ndice ? ? I\ng\nd\n,\n\na composic?a?o Bg? ? ? e? dada por\n\nBg?(?(U)) =\ng!\n\n?!\n\ne\n?\n\ns=0\n\n(\n\nm\n?\n\ni=0\n\n?i\n?\n\nj=0\n\nUijM\ns\nij\n\n)?s\n\nPodemos expandir este produto?rio em um somato?rio sobre um multi-??ndice \u00b5, um hiper-\n\n??ndice ? e um ultra-??ndice ?. Na fo?rmula abaixo, Ms e? a matriz irregular tal que (Ms)ij =\n\nMrij para todo i ? {0, \u00b7 \u00b7 \u00b7 ,m} e todo j ? {0, \u00b7 \u00b7 \u00b7 ,?i}:\n\nBg?(?(U)) =\ng!\n\n?!\n\n?\n\n\u00b5?I\ng\nm\n\n?\n\n??H\n\u00b5\n?\n\n?\n\n??U?\ne,?\n\ne\n?\n\ns=0\n\n?s!\n\n?s!\n\nm\n?\n\ni=0\n\n?i\n?\n\nj=0\n\n(UijM\ns\nij)\n\n?s,i,j\n\n=\n?\n\n\u00b5?I\ng\nm\n\n?\n\n??H\n\u00b5\n?\n\n?\n\n??U?\ne,?\n\ng!\n\n?!\n\n(\n\ne\n?\n\ns=0\n\nm\n?\n\ni=0\n\n?i\n?\n\nj=0\n\n(Msij)\n?s,i,j\n\n)\n\nm\n?\n\ni=0\n\n?i\n?\n\nj=0\n\ne\n?\n\ns=0\n\n(Uij)\n?s,i,j\n\n=\n?\n\n\u00b5?I\ng\nm\n\n?\n\n??H\n\u00b5\n?\n\n?\n\n??U?\ne,?\n\ng!\n\n?!\n\n(\n\ne\n?\n\ns=0\n\n(Ms)?s\n\n)\n\nm\n?\n\ni=0\n\n?i\n?\n\nj=0\n\nU\n?i,j\nij\n\n=\n?\n\n\u00b5?I\ng\nm\n\n?\n\n??H\n\u00b5\n?\n\n?\n\n??U?\ne,?\n\ng!?!\n\n?!\u00b5!\n\n(\n\ne\n?\n\ns=0\n\n(Ms)?s\n\n)\n\nm\n?\n\ni=0\n\n\u00b5i\n?i\nU\n\n?i\ni\n\n=\n?\n\n\u00b5?I\ng\nm\n\n?\n\n??H\n\u00b5\n?\n\n?\n\n?\n\n?\n\n??U?\ne,?\n\ng!?!\n\n?!\u00b5!\n\ne\n?\n\ns=0\n\n(Ms)?s\n\n?\n\n?B\n\u00b5\n?(U) (10.1)\n\nPara a simplificar a notac?a?o, podemos escrever a equac?a?o (10.1) como\n\nBg?(?(U)) =\n?\n\n\u00b5?I\ng\nm\n\n?\n\n??H\n\u00b5\n?\n\ng!\n\n\u00b5!\nG(e,?,?, ?,M)B\n\n\u00b5\n?(U) (10.2)\n\nonde M e? a colec?a?o das matrizes irregulares Ms para todo s ? {0, \u00b7 \u00b7 \u00b7 ,e} e\n\nG(e,?,?, ?,M) =\n?\n\n??U?\ne,?\n\n?!\n\n?!\n\ne\n?\n\ns=0\n\n(Ms)?s (10.3)\n\nNote que equac?a?o (10.2) generaliza a formula (7.4), que realiza a conversa?o de polino?mios\n\nde Bernstein tensoriais para simpliciais.\n\n\n\n10.3. Reparametrizac?a?o afim gene?rica 65\n\n10.3 Reparametrizac?a?o afim gene?rica\n\nVamos considerar agora o caso geral onde ? e? um mapeamento afim de um espac?o multi-\n\nafim A? para outro espac?o multi-afim A?, com ? ? Im, ? ? In e m,n ? N. Pela definic?a?o de\n\npolino?mio de Bernstein simploidal (8.5), para todo multi-grau ? ? In e todo hiper-??ndice\n\n? ? H?? , a composic?a?o B\n?\n? ? ? e? dada por\n\nB??(?(U)) =\nn\n?\n\nr=0\n\nB?r?r ((?(U))r).\n\nUtilizando a equac?a?o (10.2) obtemos\n\nB??(?(U)) =\n\nn\n?\n\nr=0\n\n?\n\n\u00b5?I\n?r\nm\n\n?r!\n\n\u00b5!\n\n?\n\n??H\n\u00b5\n?\n\nG(?r, ?r,?, ?,M\nr)B\n\n\u00b5\n?(U)\n\n=\n?\n\n??I\n|?|\nm\n\n?\n\n??H\n?,?\nn,m\n\n?\n\n??H?\n?\n\n?\n\n??U?\nn,?\n\nn\n?\n\nr=0\n\n?r!\n\n?r!\nG(?r, ?r,?, ?r,M\n\nr)B?r\n?r\n\n(U)\n\n=\n?\n\n??I\n|?|\nm\n\n?\n\n??H\n?,?\nn,m\n\n?\n\n??H?\n?\n\n?\n\n??U?\nn,?\n\n?!\n\n?!\n\n(\n\nn\n?\n\nr=0\n\nG(?r, ?r,?, ?r,M\nr)\n\n)\n\nn\n?\n\nr=0\n\nm\n?\n\ni=0\n\nB\n?r,i\n?r,i\n\n(Ui)\n\n=\n?\n\n??I\n|?|\nm\n\n?\n\n??H\n?,?\nn,m\n\n?\n\n??H?\n?\n\n?\n\n??U?\nn,?\n\n?!\n\n?!\n\n(\n\nn\n?\n\nr=0\n\nG(?r, ?r,?, ?r,M\nr)\n\n)\n\nm\n?\n\ni=0\n\nn\n?\n\nr=0\n\nB\n?r,i\n?r,i\n\n(Ui)\n\n(10.4)\n\n\n\n66 Cap??tulo 10. Reparametrizac?a?o de elementos de Be?zier\n\nUtilizando equac?a?o (7.3) de produto de polino?mios de Bernstein simpliciais, obtemos\n\nB??(?(U)) =\n?\n\n??I\n|?|\nm\n\n?\n\n??H\n?,?\nn,m\n\n?\n\n??H?\n?\n\n?\n\n??U?\nn,?\n\n?!\n\n?!\n\n(\n\nn\n?\n\nr=0\n\nG(?r, ?r,?, ?r,M\nr)\n\n)\n\nm\n?\n\ni=0\n\nB?i?i(Ui)\n?i!\n\n?i!\n\nn\n?\n\nr=0\n\n?r,i!\n\n?r,i!\n\n=\n?\n\n??I\n|?|\nm\n\n?\n\n??H\n?,?\nn,m\n\n?\n\n??H?\n?\n\n?\n\n??U?\nn,?\n\n?!?!\n\n?!?!\n\n(\n\nn\n?\n\nr=0\n\nG(?r, ?r,?, ?r,M\nr)\n\n)\n\nB??(U)\n\nm\n?\n\ni=0\n\nn\n?\n\nr=0\n\n?r,i!\n\n?r,i!\n\n=\n?\n\n??I\n|?|\nm\n\n?\n\n??H?\n?\n\n?\n\n?\n\n?\n\n??U?\nn,?\n\n?!?!\n\n?!?!\n\nn\n?\n\nr=0\n\nG(?r, ?r,?, ?r,M\nr)\n\n?\n\n?B??(U)\n\nque pode ser reescrito como\n\nB??(?(U)) =\n?\n\n??I\n|?|\nm\n\n?\n\n??H?\n?\n\n?!?!\n\n?!\nH(?,?,?, ?, ?,M)B??(U) (10.5)\n\nonde\n\nH(?,?,?, ?, ?,M) =\n?\n\n??U?\nn,?\n\n1\n\n?!\n\nn\n?\n\nr=0\n\nG(?r, ?r,?, ?r,M\nr)\n\nNa fo?rmula (10.5), o lado direito envolve polino?mios de Bernstein de multi-graus diferen-\n\ntes. Utilizamos enta?o a equac?a?o (8.6) para elevar cada multi-grau ? para o multi-grau\n\n? = |?| ? d. Obtemos assim\n\nB??(?(U)) =\n?\n\n??I\n|?|\nm\n\n?\n\n??H?\n?\n\n?!?!\n\n?!\nH(?,?,?, ?, ?,M)B??(U)\n\n=\n?\n\n??I\n|?|\nm\n\n?\n\n??H?\n?\n\n?!?!\n\n?!\nH(?,?,?, ?, ?,M)\n\n?\n\n??H\n?\nm,?\n\n???\n\n(\n\n?\n\n?\n\n)\n\n(\n\n?\n\n?\n\n)B\n?\n?(U)\n\n=\n?\n\n??H\n?\nm,?\n\n?\n\n??I\n|?|\nm\n\n?\n\n??H?\n?\n\n???\n\n?!?!\n\n?!\n\n(\n\n?\n\n?\n\n)\n\nH(?,?,?, ?, ?,M)\n(\n\n?\n\n?\n\n) B\n?\n?(U) (10.6)\n\n\n\n10.4. Derivada direcional da reparametrizac?a?o 67\n\nPortanto, temos\n\nK??(?) =\n?\n\n??I\n|?|\nm\n\n?\n\n??H?\n?\n\n???\n\n?!?!\n\n?!\n\n(\n\n?\n\n?\n\n)\n\nH(?,?,?, ?, ?,M)\n(\n\n?\n\n?\n\n) (10.7)\n\n10.4 Derivada direcional da reparametrizac?a?o\n\nSeja F um polino?mio simploidal de multi-dimensa?o ? e ? um mapeamento afim ? : A? ?\n\nA\n?. A derivada de G = F ? ? na direc?a?o ? ? V?, avaliada no ponto V ? A?, e? dada por\n\nD?G(V ) = (D?(F ? ?))(V )\n\n= [?(s : R ? (F ? ?)(V + s?))] (0)\n\naplicando a regra da cadeia e a fo?rmula (9.3) da derivada direcional de ?, obtemos\n\nD?G(V ) =\nm\n?\n\nr=0\n\n?r\n?\n\ns=0\n\n(?rsF)(?(V )) ([?(t : R ? (? (V + t?))rs)] (0))\n\n=\n\nm\n?\n\nr=0\n\n?r\n?\n\ns=0\n\n(?rsF)(?(V ))\n\nm\n?\n\ni=0\n\n?i\n?\n\nj=0\n\nMrsij ?ij\n\nSeja enta?o ? o vetor de V? definido por\n\n?rs =\nm\n?\n\ni=0\n\n?i\n?\n\nj=0\n\nMrsij ?ij\n\na equac?a?o acima pode ser reescrita como\n\nD?G(V ) = (D?F)(?(V )) (10.8)\n\nVerifica-se que as derivadas direcionais de ordem maior tambe?m satisfazem a relac?a?o (10.8).\n\nMais especificamente, para qualquer ordem r,\n\nDr?G(V ) = D\nr\n?F(?(V )) (10.9)\n\n\n\nCap??tulo 11\n\nAspectos gerais da implementac?a?o\n\nAs malhas usadas em modelagem geolo?gica podem ter centenas de milhares ou milho?es de\n\nelementos simploidais de Be?zier. Em teoria, a forma (e outras propriedades) de cada bloco\n\npodem ser especificada pelos seus pontos de controle de Be?zier. Entretanto, as restric?o?es\n\nde continuidade, suavidade e geometria, tipicamente presentes nessas malhas, tornam\n\nesta representac?a?o redundante e muito perdula?ria em termos de espac?o. Neste cap??tulo,\n\ndescrevemos as te?cnicas utilizadas na biblioteca BezEl para representar tais modelos de\n\nmaneira mais econo?mica.\n\n11.1 Elementos de Be?zier\n\nUm modelo geolo?gico geralmente utiliza um reperto?rio bem pequeno de tipos distintos de\n\nblocos de Be?zier. Por exemplo, a figura 11.1 mostra duas camadas geolo?gicas compostas\n\npor um u?nico tipo de bloco de Be?zier (hexaedros), com superf??cies superior e inferior\n\nonduladas mas com paredes verticais planas, arranjadas de forma que suas projec?o?es no\n\nplano horizontal formam uma grade retangular.\n\nEm princ??pio, podemos modelar este tipo de bloco por um elemento tensorial de Be?zier\n\nde dimensa?o 3 e multi-grau (3, 3, 1) no R3. Ou seja, o dom??nio e? o cubo K(1,1,1) e cada\n\ncomponente X,Y ,Z da imagem e? um polino?mio nas varia?veis u,v e w do dom??nio com\n\ngrau 3 em u e em v e grau 1 em w. Nesta representac?a?o, sa?o necessa?rios 96 para?metros\n\npara expressar a forma do bloco: 32 coeficientes de Be?zier para cada componente X,Y e\n\nZ, ou seja, 32 pontos de controle de Be?zier, veja a figura 11.2\n\n69\n\n\n\n70 Cap??tulo 11. Aspectos gerais da implementac?a?o\n\nFigura 11.1: Exemplo de modelo geolo?gico.\n\n\n\n11.1. Elementos de Be?zier 71\n\n(\n\n0 1\n0 1\n0 1\n\n)\n\n(\n\n1 0\n0 1\n0 1\n\n)\n\n(\n\n0 1\n1 0\n0 1\n\n)\n\n(\n\n0 1\n0 1\n1 0\n\n)\n\nU0\n\nU1\n\nU2\n\nK\n(1,1,1)\n\nb( 0 1\n0 3\n0 3\n\n)\n\nb( 0 1\n0 3\n1 2\n\n)\n\nb( 0 1\n0 3\n2 1\n\n)\n\nb( 0 1\n0 3\n3 0\n\n)\n\nb( 0 1\n1 2\n3 0\n\n)\n\nb( 0 1\n2 1\n3 0\n\n)\n\nb( 0 1\n3 0\n3 0\n\n)\n\nb( 1 0\n3 0\n3 0\n\n)\n\nb( 1 0\n3 0\n2 1\n\n)\n\nb( 1 0\n3 0\n1 2\n\n)\n\nb( 1 0\n3 0\n0 3\n\n)\n\nb( 1 0\n2 1\n0 3\n\n)\n\nb( 1 0\n1 2\n0 3\n\n)\n\nb( 1 0\n0 3\n0 3\n\n)\n\nFigura 11.2: Representac?a?o de Be?zier de um bloco do modelo da figura 11.1, mostrando a grade\nde controle de Be?zier (em vermelho) e, para alguns pontos, os respectivos ??ndices.\n\n\n\n72 Cap??tulo 11. Aspectos gerais da implementac?a?o\n\n11.2 Blocos de Be?zier generalizados\n\nObserve que este tipo de bloco e? muito mais geral do que o necessa?rio para construir a\n\nmalha da figura 11.1, pois inclui blocos com paredes curvas e inclinadas, como ilustrado\n\nna figura 11.3.\n\nFigura 11.3: Outro exemplo de um bloco de Be?zier de multi-dimensa?o (1, 1, 1) e multi-graus\n(3, 3, 1).\n\nUma vez que, nessa malha, a projec?a?o de cada bloco no plano horizontal e? sempre um\n\nreta?ngulo alinhado com os eixos, a componente X pode ser modelada por uma func?a?o\n\nlinear da coordenada u do dom??nio apenas. Da mesma forma, a componente Y pode ser\n\numa func?a?o linear da coordenada v apenas. Somente a componente Z precisa ser uma\n\nfunc?a?o linear de w e cu?bica em u e v. Portanto, podemos modelar cada bloco da malha\n\npor tre?s func?o?es simploidais X, Y e Z com o mesmo dom??nio K(1,1,1) mas multi-graus\n\ndiferentes \u2014 (1, 0, 0),(0, 1, 0) e (3, 3, 1), respectivamente. Veja a figura 11.4.\n\nPara especificar estas func?o?es basta fornecer dois para?metros para X (as coordenadas\n\nxmin e xmax, que sa?o os coeficientes de Be?zier b\nX\n((0,1),(0,0),(0,0))\n\ne bX\n((1,0),(0,0),(0,0))\n\ndesta func?a?o),\n\ndois para?metros para Y (ymin e ymax, ou b\nY\n((0,0),(0,1),(0,0))\n\ne bY\n((0,0),(1,0),(0,0))\n\n) e 32 para?metros\n\npara Z (os coeficientes bZ? onde ? ? H\n(3,3,1)\n(1,1,1)\n\n). Veja figura 11.4. Note que estes u?ltimos sa?o\n\nos 16 coeficientes da face superior e os 16 coeficientes de Be?zier da face inferior. No total,\n\nsa?o apenas 2 + 2 + 32 = 36 para?metros, uma economia de memo?ria de aproximadamente\n\n63%.\n\nPor convenie?ncia, neste cap??tulo usaremos a notac?a?o B.X, B.Y e B.Z para indicar as\n\ncomponentes do bloco de Be?zier generalizado B que representam a geometria; e analo-\n\ngamente para outras componentes que representam as propriedades f??sicas. Ale?m disso,\n\n\n\n11.2. Blocos de Be?zier generalizados 73\n\ndenotaremos por B.P(U) o ponto de coordenadas (B.X(U),B.Y(U),B.Z(U)). Na bibli-\n\noteca, estas componentes sa?o identificadas por ??ndices 0,1,2,etc; e acessadas atrave?s do\n\nme?todo B.eval(k,U) que calcula a componente k para o ponto U do dom??nio A?\n\nConsiderando este exemplo, na biblioteca BezEl, optamos por representar cada ce?lula\n\nde uma malha por um bloco de Be?zier generalizado, que e? uma lista de func?o?es polinomiais\n\nsimploidais de mesmo dom??nio mas de multi-graus arbitra?rios e independentes.\n\nCada bloco e? uma insta?ncia da classe Block e e? de um determinado tipo. Este tipo\n\ne? descrito por um objeto separado (uma insta?ncia da classe BlockKind), que armazena\n\ninformac?o?es como a dimensa?o do contra-dom??nio, a multi-dimensa?o e os multi-graus. A\n\nfigura 11.5 ilustra esta representac?a?o. Nesta figura, os blocos B0 e B1 sa?o do mesmo\n\ntipo C0. O bloco B2, por outro lado, e? do tipo C1. Note que o nu?mero e significado\n\ndos para?metros params de cada bloco sa?o determinados pelo seu tipo. Por convenie?ncia,\n\nusaremos a notac?a?o B.? para indicar o para?metro ? do bloco B.\n\nEsta separac?a?o permite uma representac?a?o eficiente de malhas que possuem muitos\n\nblocos de um mesmo tipo, como a da figura 11.1. O tipo destes blocos e? descrito por uma\n\ninsta?ncia brickKind da classe BlockKind, com dimensa?o do contra-dom??nio, o para?metro\n\nbrickKind.rD, 3, a multi-dimensa?o do dom??nio, brickKind.dD, com valor (1, 1, 1) e mul-\n\ntigraus, para?metro brickKind.deg, ((1, 0, 0), (0, 1, 0), (3, 3, 1)).\n\n\n\n74 Cap??tulo 11. Aspectos gerais da implementac?a?o\n\nFigura 11.4: Representac?a?o mais econo?mica dos blocos da figura 11.1. Os pontos vermelhos,\nverdes e azuis representam os coeficientes de Be?zier das componentes X,Y e Z respectivamente.\nObserve que apenas uma coordenada de cada ponto e? livre.\n\n\n\n11.2. Blocos de Be?zier generalizados 75\n\nBlock: B1\n\nparams:\n\nkind:\n\nBlock: B2\n\nparams:\n\nkind:\n\nBlock: B0\n\nparams:\n\nkind:\n\nBlockKind: C0\n\ndD\n\nrD\n\ndeg\n\n(2,1)\n\n3\n\n(3,2) (2,2) (1,1)\n\nBlockKind: C1\n\ndD\n\nrD\n\ndeg\n\n(3)\n\n3\n\n(3) (2)(3)\n\nFigura 11.5: Implementac?a?o de um bloco de Be?zier.\n\n\n\n76 Cap??tulo 11. Aspectos gerais da implementac?a?o\n\n11.3 Compartilhamento de para?metros\n\nAs restric?o?es de continuidade e suavidade impl??citas no modelo da figura 11.1 implicam\n\nna identidade de diversos de seus coeficientes de Be?zier. Por exemplo, todos os blocos de\n\numa fileira devem ter os mesmos coeficientes xmin e xmax ou ymin e ymax, dependendo da\n\norientac?a?o da fileira. Ale?m disso, os coeficientes de Be?zier da face superior da camada\n\nde baixo dever ser iguais aos da face inferior da camada de cima. Adicionalmente, se\n\ndesejarmos que as superf??cies de cada camada sejam cont??nuas, os coeficientes de Be?zier\n\nque determinam uma aresta superior ou inferior de um bloco devem coincidir com os\n\ncoeficientes correspondentes nos blocos vizinhos.\n\nEstas situac?o?es sa?o muito comuns, e por essa raza?o a biblioteca BezEl foi projetada\n\npara facilitar o compartilhamento de para?metros. Especificamente, o vetor B.params de\n\ncada bloco B conte?m apenas refere?ncias (??ndices) para seus para?metros, e na?o os valores\n\ndos mesmos. Os valores dos para?metros de todos os blocos de um mesmo modelo G sa?o\n\narmazenados em um u?nico vetor G.vars associado ao modelo. Desta forma, diversos blo-\n\ncos do mesmo modelo podem compartilhar o mesmo para?metro, e a modificac?a?o do valor\n\nde um para?metro e? automaticamente refletida em todos os blocos que o compartilham. A\n\nfigura 11.6 ilustra esta estrate?gia no caso da figura 11.5.\n\nBlock: B1\n\nparams:\n\nkind:\n\nBlock: B2\n\nparams:\n\nkind:\n\nBlock: B0\n\nparams:\n\nkind:\n\nBlockKind: C0\n\ndD\n\nrD\n\ndeg\n\n(2,1)\n\n3\n\n(3,2) (2,2) (1,1)\n\nBlockKind: C1\n\ndD\n\nrD\n\ndeg\n\n(3)\n\n3\n\n(3) (2)(3)\n\nParamDepot: pD\n\nvars:\n\nFigura 11.6: Implementac?a?o do compartilhamento de para?metros entre blocos de Be?zier\n\nComo exemplo de compartilhamento de para?metros, vamos descrever aqui o procedi-\n\nmento t??pico para efetuar a colagem de dois blocos A e B da malha da figura 11.1 (tipo\n\nbrickKind). Esta operac?a?o e? uma colagem conforme, onde uma faceta inteira de um\n\nbloco e? identificada com uma faceta de outro bloco. Veja a figura 11.7. O objetivo da\n\n\n\n11.3. Compartilhamento de para?metros 77\n\ncolagem conforme e? garantir que na?o haja frestas nem sobreposic?o?es entre os blocos. Esta\n\noperac?a?o deve ser repetida va?rias vezes para construir a malha da figura 11.1\n\nA B\n\nFigura 11.7: Colagem conforme de dois blocos do tipo brickKind.\n\nInicialmente, identificamos os para?metros de A que sera?o compartilhados pelo bloco\n\nB. Estes sa?o os para?metros da faceta U1 = 1 de A. Veja a figura 11.8. Como pode ser\n\nvisto na figura 11.4, estes sa?o os coeficientes de Be?zier bX? , b\nY\n? e b\n\nZ\n? das componentes X,Y\n\ne Z de A cujo hiper-??ndice ? e? tal que ?1,1 = 0. Em seguida, para cada para?metro de A\n\na ser compartilhado, determinamos o hiper-??ndice do coeficiente correspondente no bloco\n\nB. Este sera? um dos coeficientes bX? , b\nY\n?,b\n\nY\n? com ?1,0 = 0. Finalmente, criamos o bloco B\n\ncompartilhando os para?metros de A.\n\n\n\n78 Cap??tulo 11. Aspectos gerais da implementac?a?o\n\n(\n\n0 1\n0 1\n0 1\n\n)\n\n(\n\n1 0\n0 1\n0 1\n\n)\n\n(\n\n0 1\n1 0\n0 1\n\n)\n\n(\n\n0 1\n0 1\n1 0\n\n)\n\nU0\n\nU1\n\nU2\n\nA B\n\nK\n(1,1,1)\n\nFigura 11.8: Diagrama da colagem conforme de dois blocos que compo?em a malha da figura 11.1\n\n11.4 Para?metros internos e externos\n\nOs 36 coeficientes de Be?zier da figura 11.4 constituem uma representac?a?o individual\n\nm??nima para o bloco da malha da figura 11.1 no sentido que para descrever a forma\n\nde um desses blocos isoladamente sa?o necessa?rios de fato 36 para?metros. Entretanto, em\n\noutras situac?o?es, pode ocorrer que os coeficientes de Be?zier de um u?nico bloco isolado\n\nesta?o sujeitos a restric?o?es. Neste caso, o bloco pode ser completamente descrito por um\n\nnu?mero menor de para?metros.\n\nPor exemplo, considere os blocos utilizados para construir malhas pseudo-cil??ndricas\n\ncomo a da figura 11.9, onde cada anel e? formado por N blocos simploidais. Cada um destes\n\nblocos e? limitado por 4 faces planas e duas faces polinomiais cu?bicas que aproximam a\n\nsuperf??cie de um cilindro. Veja figura 11.10. Observe que as componentes X e Y sa?o de\n\nmulti-grau (3, 1, 0), ou seja, sa?o polino?mios de grau 3 em u, 1 em v e independentes de\n\n\n\n11.4. Para?metros internos e externos 79\n\nw. Cada func?a?o tem portanto 8 coeficientes de Be?zier, bX? e b\nY\n? onde ?, ? ? H\n\n(3,1,0)\n(1,1,1)\n\n. Estes\n\n16 coeficientes podem ser vistos como 8 pontos de controle projetados no plano XY . A\n\ncomponente Z, por outro lado, e? de multi-grau (0, 0, 1), ou seja, e? independente de u e\n\nde v mas e? uma func?a?o linear de w, e e? especificada por 2 coeficientes de Be?zier, bZ? onde\n\n? ? H\n(0,0,1)\n(1,1,1)\n\n= {((0, 0), (0, 0)(0, 1)), ((0, 0), (0, 0), (1, 0))}; estes coeficientes especificam as\n\nalturas z0 e z1 das facetas inferior e superior do bloco.\n\nFigura 11.9: Uma malha pseudo-cil??ndrica composta por 3 pares de ane?is conce?ntricos, cada um\nformado por 4 blocos.\n\nFigura 11.10: Um bloco simploidal para a malha da figura 11.9. Os pontos amarelos sa?o pontos\nde controle de Be?zier das coordenadas X e Y enquanto os pontos azuis sa?o os pontos de controle\nde Be?zier da coordenada Z.\n\nPortanto, este bloco de Be?zier generalizado tem 8 + 8 + 2 = 18 coeficientes de Be?zier.\n\nEntretanto, se considerarmos o a?ngulo ? = 2?/N fixo, todos os 18 coeficientes de Be?zier\n\n\n\n80 Cap??tulo 11. Aspectos gerais da implementac?a?o\n\npodem ser escritos como func?o?es lineares de 8 para?metros: as alturas z0 e z1, as coorde-\n\nnadas (xc,yc) do eixo do cilindro, e as coordenadas (x0,y0) e (x1,y1) de dois cantos do\n\nbloco, projetados no plano Z = 0. Veja a figura 11.11.\n\n(x0,y0) (x1,y1)\n\nz0\n\nz1\n\n(xc,yc)\n\nFigura 11.11: Ilustrac?a?o dos para?metros que derivam os coeficientes de Be?zier de blocos que\ncompo?em a malha da figura 11.9.\n\nA relac?a?o entre estes 8 para?metros e os coeficientes de Be?zier bX? , b\nY\n? e b\n\nZ\n? depende do\n\na?ngulo ? e do me?todo de aproximac?a?o escolhido. Em 2006, Riskus publicou um conjunto\n\n\n\n11.4. Para?metros internos e externos 81\n\nde fo?rmulas para este fim [23]:\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\nbX((0,3),(0,1),(0,0))\n\nbX\n((1,2),(0,1),(0,0))\n\nbX((2,1),(0,1),(0,0))\n\nbX\n((3,0),(0,1),(0,0))\n\nbX((0,3),(1,0),(0,0))\n\nbX\n((1,2),(1,0),(0,0))\n\nbX((2,1),(1,0),(0,0))\n\nbX\n((3,0),(1,0),(0,0))\n\nbY((0,3),(0,1),(0,0))\n\nbY\n((1,2),(0,1),(0,0))\n\nbY((2,1),(0,1),(0,0))\n\nbY\n((3,0),(0,1),(0,0))\n\nbY\n((0,3),(1,0),(0,0))\n\nbY\n((1,2),(1,0),(0,0))\n\nbY\n((2,1),(1,0),(0,0))\n\nbY((3,0),(1,0),(0,0))\n\nbZ\n((0,0),(0,0),(0,1))\n\nbZ((0,0),(0,0),(1,0))\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n=\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n1 1 0 0 0 0 0 0\n\n1 1 0 0 ? 0 0 0\n\n1 ? 0 0 1 0 0 0\n\n1 0 0 0 1 0 0 0\n\n1 0 1 0 0 0 0 0\n\n1 0 1 0 0 ? 0 0\n\n1 0 ? 0 0 1 0 0\n\n1 0 0 0 0 1 0 0\n\n0 0 0 1 1 0 0 0\n\n0 ?? 0 1 1 0 0 0\n\n0 ?1 0 1 ? 0 0 0\n\n0 ?1 0 1 0 0 0 0\n\n0 0 0 1 0 1 0 0\n\n0 0 ?? 1 0 1 0 0\n\n0 0 ?1 1 0 ? 0 0\n\n0 0 ?1 1 0 0 0 0\n\n0 0 0 0 0 0 1 0\n\n0 0 0 0 0 0 0 1\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\nxc\nx0\nx1\nyc\ny0\ny1\nz0\nz1\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\nonde o valor de ? depende do a?ngulo ?. A tabela 11.1 mostra os valores de ? para alguns\n\na?ngulos.\n\nA biblioteca BezEl tambe?m permite este tipo de otimizac?a?o. Em geral, os para?metros\n\nB.params de um bloco B na?o sa?o os coeficientes de Be?zier de suas componentes, mas sim\n\numa colec?a?o arbitra?ria de para?metros externos. Os coeficientes de Be?zier (para?metros\n\ninternos do bloco) sa?o func?o?es afins deles.\n\nA relac?a?o entre os para?metros internos e externos e? mais um atributo do tipo do bloco,\n\n\n\n82 Cap??tulo 11. Aspectos gerais da implementac?a?o\n\n? ?\n30? 0.175534\n45? 0.265216\n60? 0.357259\n90? 0.552284\n\nTabela 11.1: Tabela com valores de ? para diferentes ?.\n\nBlock: B1\n\nparams:\n\nkind:\n\nBlock: B2\n\nparams:\n\nkind:\n\nParamDepot: pD\n\nvars:\n\nBlock: B0\n\nparams:\n\nkind:\n\nBlockKind: C0\n\ndD\n\nrD\n\ndeg\n\n(2,1)\n\n3\n\n(3,2) (2,2) (1,1)\n\nM\n\nBlockKind: C1\n\ndD\n\nrD\n\ndeg\n\n(3)\n\n3\n\n(3) (2)(3)\n\nM\n\nFigura 11.12: Esquema da relac?a?o o reposito?rio de para?metros, um bloco e seu tipo com matrizes\nde conversa?o entre para?metros externos e internos.\n\nrepresentado por uma matriz M armazenada no objeto BlockKind correspondente. Veja\n\nfigura 11.12\n\n11.5 Extrac?a?o de componentes\n\nA representac?a?o descrita na sec?a?o 11.4 economiza espac?o mas na?o e? eficiente quando\n\ndesejamos utilizar os coeficientes de Be?zier de um mesmo bloco B diversas vezes, por\n\nexemplo na avaliac?a?o de B.F em muitos pontos do dom??nio. Para estes casos, utilizamos\n\nisoladamente as diversas componentes do bloco, obtidas atrave?s do me?todo B.explicit().\n\nEste me?todo, que na?o precisa de argumentos, retorna um vetor de B.kind.rD polino?mios\n\nsimploidais, cada um representando uma componente B.Fi.\n\n\n\n11.6. Extrac?a?o de facetas 83\n\nNa biblioteca BezEl, polino?mios simploidais sa?o representados por objetos da da classe\n\nBezierSimploidPoly. Cada insta?ncia P desta classe conte?m apenas tre?s atributos: a\n\nmulti-dimensa?o P.domainType, o multi-grau P.multiDegree e um vetor P.coef com seus\n\ncoeficientes de Be?zier. O me?todo P.evaluate avalia o polino?mio em um ponto U do\n\ndom??nio, fornecido como argumento.\n\nAo contra?rio da representac?a?o de blocos, o vetor P.coef armazena os valores nume?ricos\n\ndos coeficientes de Be?zier. Estes valores sa?o calculados pelo me?todo B.explicit a partir\n\ndos valores correntes de para?metros externos e da matriz B.kind.M.\n\n11.6 Extrac?a?o de facetas\n\nUma operac?a?o importante na biblioteca BezEl e? a extrac?a?o de facetas de blocos. Esta\n\noperac?a?o resulta em um bloco que compartilha para?metros (externos e internos) com\n\no bloco original. Esta e? uma etapa importante em colagens arbitra?rias (na?o conforme)\n\nblocos, como veremos no cap??tulo 12\n\nConsidere por exemplo um bloco de Be?zier generalizado B cujo dom??nio e? o prisma\n\ncano?nico, K(2,1) de multi-grau (2, 3) para X,Y e Z, como o da figura 11.13a. A fi-\n\ngura 11.13b mostra a faceta superior deste bloco correspondente a? faceta K(2,1)|(1,0) do\n\ndom??nio. A extrac?a?o desta faceta do bloco B produz um bloco de Be?zier de dom??nio K(2)\n\ne grau (2) para X,Y e Z.\n\nVamos agora descrever a extrac?a?o desta faceta utilizando a biblioteca BezEl. Veja a\n\nfigura 11.14. Esta operac?a?o consiste de duas etapas: criac?a?o um novo tipo de bloco para\n\na faceta e a criac?a?o do bloco que e? a faceta propriamente dita. Suponha que o bloco\n\noriginal e? descrito pelo objeto B e seu tipo e? o objeto prismKind. Para extrair a faceta\n\nda figura 11.13b procedemos da seguinte forma:\n\n1. Criamos um tipo de bloco apropriado, triangKind, invocando o me?todo\n\nprismKind->get FacetKind cujos argumentos sa?o os ??ndices da faceta desejada, no\n\ncaso, (1,0).\n\n2. Criamos o bloco B top da faceta, invocando o me?todo B->get Facet. Os argu-\n\nmentos deste me?todo sa?o o tipo do bloco triangKind e os ??ndices (1,0) da faceta\n\ndesejada. Veja figura 11.14\n\nA figura 11.13 mostra uma das faceta laterais, correspondente a? faceta K(2,1)|(0,1) do\n\ndom??nio. A extrac?a?o desta faceta produz um bloco de Be?zier de dom??nio K(1,1) e grau\n\n(2, 3) para X,Y e Z. De forma ana?loga, a extrac?a?o desta faceta e? realizada invocando o\n\nme?todo prismKind->get FacetKind com argumentos (0,1) para obter o tipo de bloco\n\nadequado, digamos retangKind; e em seguida, invocando o me?todo B->get Facet com\n\nargumentos retangKind e (0,1) para obter a faceta B side.\n\n\n\n84 Cap??tulo 11. Aspectos gerais da implementac?a?o\n\nNote que os para?metros externos (e internos) dos novos blocos B top e B side sa?o\n\nsubconjuntos dos para?metros externos (e internos) do bloco original B. Ale?m disso, os\n\ntipos de bloco triangKind e retangKind podem ser compartilhados por quaisquer outras\n\nfacetas semelhantes, ou quaisquer outros retalhos de mesmas multi-dimenso?es e multi-\n\ngraus.\n\nA figura 11.15 mostra outro exemplo, a extrac?a?o da faceta lateral interna do bloco da\n\nfigura 11.10. O procedimento e? similar. Seja B o bloco original, de tipo cylSliceKind.\n\nO me?todo B->get FacetKind, invocado com argumentos (2,0) fornece um novo tipo de\n\nbloco, cylPlateKind, adequado para a faceta desejada. Este tipo de bloco e? um retalho\n\nbidimensional de dom??nio K(1,1), com X e Y de multi-grau (3, 0) e Z de multi-grau (0, 1). O\n\nobjeto B side, que descreve a faceta, e? obtido invocando B->get Facet, com argumentos\n\ncylPlateKind e (2,0). Veja figura 11.16.\n\nAssim como cylSliceKind tem uma relac?a?o na?o trivial entre para?metros externos e\n\ninternos, o mesmo ocorre com cylPlateKind. Temos 4 coeficientes de Be?zier para X, 4\n\npara Y e 2 para Z, num total de 10 para?metros. Pore?m, todos estes podem ser descritos\n\ncomo func?o?es lineares de 4 para?metros externos: o intervalo de Z, zmin e zmax, e as\n\ncoordenadas x,y de uma das arestas verticais.\n\nUma vez que sliceKind armazena em sliceKind->M as relac?o?es entre os para?metros\n\ninternos e externos de blocos deste tipo, a criac?a?o do tipo plateKind requer a especificac?a?o\n\ndestas relac?o?es para blocos do tipo da faceta. A matriz plateKind->M, que descreve as\n\nrelac?o?es entre os para?metros externos e internos da faceta de ??ndice (2, 0), e? uma sub-\n\nmatriz de sliceKind->M obtida selecionando as linhas relacionadas aos hiper-??ndices\n\n{? ? H\n(3,0,1)\n(1,1,1)\n\n?\n\n? ?2,0 6= 0}\n\ne eliminando as colunas compostas unicamente por zeros.\n\n\n\n11.6. Extrac?a?o de facetas 85\n\n( 0 0 10 1 )\n\n( 0 0 11 0 )\n\n( 1 0 00 1 )\nK\n\n(2,1)\n\nprism.X\n\nprism.X(K\n(2,1)\n(10)\n\n)\n\nprism.X(K\n(2,1)\n(02)\n\n)\n\nK\n(2,1)|02 = K\n\n(1,1)\n\nK\n(2,1)|10 = K\n\n(2)\n\nFigura 11.13: Um bloco prisma?tico de multi-grau (2, 2) e suas facetas (1, 0) e (0, 2).\n\n\n\n86 Cap??tulo 11. Aspectos gerais da implementac?a?o\n\nBlock: fside\n\nparams:\n\nkind:\n\nParamDepot: pD\n\nvars:\n\nBlock: ftop\n\nparams:\n\nkind:\n\nBlockKind: prismKind\n\ndD\n\nrD\n\ndeg\n\n(2,1)\n\n3\n\n(2,2) (2,2) (2,2)\n\nM\n\nBlockKind: triangKind\n\ndD\n\nrD\n\ndeg\n\n(2)\n\n3\n\n(2) (2)\n\nM\n\n(2)\n\nBlockKind: rectangKind\n\ndD\n\nrD\n\ndeg\n\n(1,1)\n\n3\n\n(2,2) (2,2) (2,2)\n\nM\n\nBlock: prism\n\nparams:\n\nkind:\n\nFigura 11.14: Extrac?a?o de facetas de um prisma da figura 11.13\n\n(a) (b)\n\nFigura 11.15: Facetas do bloco da malha cil??ndrica: (a) Faceta (0, 0), (b)\n\n\n\n11.6. Extrac?a?o de facetas 87\n\nBlock: plate1\n\nparams:\n\nkind:\n\nParamDepot: pD\n\nvars:\n\nBlockKind: sliceKind\n\ndD\n\nrD\n\ndeg\n\n(1,1,1)\n\n3\n\nM\n\nBlockKind: plateKind\n\ndD\n\nd3\n\ndeg\n\n(1,1)\n\n3\n\n(3,0) (3,0) (0,1)\n\nM\n\nBlock: slice1\n\nparams:\n\nkind:\n\n(3,0,1) (3,0,1) (0,1,0)\n\n6 external params\n\n      18\n\ninternal params\n\n        4\n\nexternal params\n\n      10\n\ninternal params\n\nrD\n\nFigura 11.16: Extrac?a?o de facetas do prisma da figura 11.13\n\n\n\n88 Cap??tulo 11. Aspectos gerais da implementac?a?o\n\n11.7 Elevac?a?o de grau\n\nOutra operac?a?o muito frequ?ente em modelagem geome?trica e? a elevac?a?o de grau. No\n\nexemplo da figura 11.17, a partir de um elemento prisma?tico de Be?zier B, de multi-grau\n\n(2, 2) nas componentes X,Y e Z (figura 11.17a), obtemos um bloco RB (figura 11.17b) de\n\nmesmo dom??nio mas de multi-grau (3, 3) em todas as componentes que coincide com B\n\nem todos os pontos do dom??nio.\n\n(a) (b)\n\nFigura 11.17: Elevac?a?o de grau de um bloco prisma?tico de multi-grau (2, 2) para (3, 3).\n\nA figura 11.18 ilustra a elevac?a?o de grau utilizando a biblioteca BezEl. Assim como a\n\nextrac?a?o de facetas, esta operac?a?o consiste de duas etapas: criac?a?o um tipo de bloco\n\nadequado e a criac?a?o do bloco de grau maior propriamente dito. Suponha que o bloco da\n\nfigura 11.17a e? descrito pelo objeto prism22 e seu tipo e? o objeto prism22Kind. Suponha\n\nque na?o ha? qualquer restric?a?o sobre a forma do bloco, de modo que seus 54 para?metros\n\nexternos sa?o os pro?prios coeficientes de Be?zier das func?o?es X,Y e Z (18 pontos de controle).\n\nPara elevar o grau de todas as componentes para (3, 3) procedemos da seguinte forma:\n\n1. Criamos um tipo de bloco apropriado, digamos prism22 33 Kind, invocando o\n\nme?todo prism22Kind->get raisedDegreeKind cujo argumento e? um vetor con-\n\ntendo os novos multi-graus, neste caso, [(3,3),(3,3),(3,3)].\n\n2. Criamos o bloco da figura 11.17b prism22 33, invocando o me?todo get SubBlock\n\nde prism22 utilizando como argumento o tipo do bloco prism22 33 Kind.\n\nO novo bloco tem 120 para?metros internos (40 pontos de controle). Entretanto, como des-\n\ncrito na sec?a?o 8.2.3, os coeficientes de Be?zier do novo elemento sa?o func?o?es lineares dos co-\n\neficientes do elemento inicial. Portanto, os para?metros externos do novo bloco sa?o os mes-\n\nmos do bloco original, ou seja os 54 coeficientes de Be?zier. A relac?a?o entre os para?metros\n\n\n\n11.7. Elevac?a?o de grau 89\n\nParamDepot: pD\n\nvars:\n\nBlockKind: prism22Kind\n\ndD\n\nrD\n\ndeg\n\n(2,1)\n\n3\n\n(2,2) (2,2) (2,2)\n\nM\n\nBlock: prism22\n\nparams:\n\nkind:\n\nBlock: prism22_33\n\nparams:\n\nkind:\n\nBlockKind: prism22_33_Kind\n\ndD\n\nrD\n\ndeg\n\n(2,1)\n\n3\n\n(3,3) (3,3) (3,3)\n\nM\n\n54 external vars\n\n      120\n\ninternal vars\n\nFigura 11.18: Diagrama ilustrativo da elevac?a?o de grau de um bloco prisma?tico.\n\ninternos e externos do novo elemento sa?o armazenadas na matriz prism22 33 Kind.M\n\nque tem 120 linhas e 54 colunas e cujos elementos sa?o os coeficientes K?? definidos na\n\nsec?a?o 8.2.3.\n\nA figura 11.19 mostra outro exemplo, a elevac?a?o de grau do elemento para compor ma-\n\nlhas pseudo-cil??ndricas descrito na sec?a?o 11.4. O procedimento e? similar. Seja cylSlice1 o\n\nbloco original, de tipo cylSliceKind. O me?todo cylSliceKind->get raisedDegreeKind,\n\ninvocado utilizando o vetor de multi-graus [(3,3,3),(3,3,3),(3,3,3)] como argu-\n\nmento, fornece um novo tipo de bloco, cylSlice33Kind, adequado para o bloco desejado.\n\nEste tipo de bloco tem como dom??nio o simplo?ide cano?nico K(1,1,1) e as componentes\n\nX,Y e Z sa?o de grau (3, 3, 3). Ale?m disso, este tipo de bloco e? responsa?vel pela con-\n\nversa?o dos 6 para?metros externos do bloco original cylSlice1 nos seus 18 para?metros\n\ninternos (a matriz cylSliceKind.M) e a conversa?o destes nos 192 para?metros internos\n\ndo bloco coincidente de grau maior (fo?rmula (8.7)). Para isto, estas duas operac?o?es li-\n\nneares sa?o combinadas em uma u?nica matriz de 192 linhas por 6 colunas, o atributo\n\ncylSlice33Kind->M. O objeto cylSlice33, que descreve o elemento coincidente de grau\n\nmaior, e? obtido invocando cylSlice1->get SubBlock, utilizando como argumento o novo\n\ntipo de bloco cylSlice33Kind. Veja figura 11.20.\n\n\n\n90 Cap??tulo 11. Aspectos gerais da implementac?a?o\n\n(a) (b)\n\nFigura 11.19: Elevac?a?o de grau de um bloco da malha pseudo-cil??ndrica de grau (0, 3, 3) em X,Y\ne (1, 0, 0) em Z, para (3, 3, 3) em X, Y e Z.\n\nBlock: cylSlice33\n\nparams:\n\nkind:\n\nParamDepot: pD\n\nvars:\n\nBlockKind: cylSliceKind\n\ndD\n\nrD\n\ndeg\n\n(1,1,1)\n\n3\n\nM\n\nBlockKind: cylSlice33Kind\n\ndD\n\nrD\n\ndeg\n\n(1,1,1)\n\n3\n\n(3,3,3)\n\nM\n\nBlock: cylSlice1\n\nparams:\n\nkind:\n\n(3,0,1) (3,0,1) (0,1,0)\n\n6 external vars\n\n      18\n\ninternal vars\n\n      192\n\ninternal vars\n\n6 external vars\n\n(3,3,3) (3,3,3)\n\nFigura 11.20: Diagrama ilustrativo da elevac?a?o de grau de um bloco da malha pseudo-cil??ndrica.\n\n\n\n11.8. Reparametrizac?a?o 91\n\n11.8 Reparametrizac?a?o\n\nA func?a?o A.F de um bloco A pode ser reparametrizada atrave?s do me?todo A.subBlock.\n\nEsta operac?a?o resulta em um novo bloco cujos para?metros externos sa?o um subconjunto\n\ndos para?metros externos de A, mas, em geral, definido em um dom??nio diferente (que pode\n\nextrapolar do dom??nio de A) e com um conjunto diferente de para?metros internos.\n\nComo nas operac?o?es anteriores, e? necessa?rio criar um novo tipo de bloco para cada\n\nmapa ? definido, e depois criar o bloco desejado que tera? este tipo. Este novo tipo\n\nreparKind e? criado pelo me?todo A.kind.get BlockKind of Composition w DM utilizando\n\no mapa ? como argumento. A matriz reparKind.M e? a composic?a?o da matriz dos coefi-\n\ncientes de ? (descrita no cap??tulo 10) com a matriz A.kind.M.\n\nUm mapa afim ? e? representado na biblioteca BezEl por uma insta?ncia da classe\n\nDomainMapping, que conte?m os coeficientes Mrsij (cap??tulo 9) armazenados na forma de\n\numa matriz irregular (indexada por r,s) de matrizes irregulares (indexadas por i,j).\n\nNote que o mapa ? na?o precisa ser sobrejetor. Por exemplo, se A e? um retalho trian-\n\ngular (dom??nio K2) e ? leva de K1 para K2, a reparametrizac?a?o de A por ? retorna uma\n\ncurva de Be?zier, que corresponde ao segmento de reta ?(K1) no espac?o A2.\n\n11.9 Derivada direcional\n\nOutra operac?a?o importante implementada pela BezEl e? o ca?lculo da derivada direcional\n\nda func?a?o A.F de um bloco A, em uma direc?a?o dada ? do dom??nio do bloco. Como descrito\n\nno cap??tulo 8, a derivada direcional de cada componente A.Fi tambe?m e? um polino?mio\n\nsimploidal e, portanto, pode ser vista como a componente dA.Fi de um outro bloco dA de\n\nmesma multi-dimensa?o.\n\nPara isso, um novo tipo derivKind deve ser criado para cada tipo de bloco e cada\n\ndirec?a?o ? atrave?s do me?todo A.kind.get BlockKind of DirectionalDerivative. Os\n\nargumentos deste me?todo sa?o a ordem r da derivada e o vetor direc?a?o ?. Em seguida, o\n\nbloco dA pode ser criado atrave?s do me?todo A.subBlock, fornecendo o tipo derivKind\n\ncomo argumento.\n\n\n\nCap??tulo 12\n\nRestric?o?es entre blocos\n\nOutra ferramenta importante para modelagem geome?trica, fornecida pela biblioteca Be-\n\nzEl, e? a especificac?a?o de restric?o?es afins (de 1o\u00af grau) entre os para?metros dos blocos de\n\num mesmo modelo.\n\nPara representar tais restric?o?es, cada modelo G da biblioteca BezElpossui, ale?m do\n\nvetor G.vars de classe ParamDepot, uma insta?ncia G.eqs da classe EquationDepot, que e?\n\numa lista de equac?o?es afins sobre os para?metros externos armazenados em G.vars. Cada\n\nelemento desta lista e? um objeto da classe Equation que representa uma u?nica restric?a?o.\n\nObserve que restric?o?es que envolvem os coeficientes de Be?zier de um u?nico bloco isolado\n\npodem ser implementadas alternativamente pela matriz do tipo do bloco, como descrito\n\nna sec?a?o 11.4. Mais precisamente, se o bloco do tipo B tem n coeficientes de Be?zier e as\n\nrestric?o?es definem um certo subespac?o afim do Rn de dimensa?o p, e? poss??vel implementar\n\nestas restric?o?es escolhendo p para?metros externos e preenchendo adequadamente a matriz\n\nB.M (de tamanho n\u00d7p). Pore?m, esta soluc?a?o exige que um novo tipo de bloco seja criado\n\npara cada conjunto diferente de restric?o?es.\n\n12.1 Colagem na?o-conforme\n\nUm exemplo de uso de restric?o?es e? a colagem de dois blocos pseudo-cil??ndricos de ?\n\nradianos, cyl A e cyl B (veja sec?a?o 11.4), de modo que a faceta externa de cyl B coincide\n\ncom parte da faceta interna de cyl A, como na figura 12.1.\n\nPara que na?o existam nem frestas nem sobreposic?a?o entre os blocos, as restric?o?es que\n\ndevem ser satisfeitas sa?o facilmente determinadas pela pro?pria definic?a?o dos para?metros\n\nexternos deste tipo de bloco (ver figura 11.11):\n\n93\n\n\n\n94 Cap??tulo 12. Restric?o?es entre blocos\n\n1\n4\n\n1\n4\n\n1\n2\n\nFigura 12.1: Uso de restric?o?es entre para?metros externos de dois blocos pseudo-cil??ndricos: o\ncyl A (em verde) e o cyl B (em amarelo).\n\ncyl A.x1 ? cylB.x0 = 0 (12.1)\n\ncyl A.y1 ? cylB.y0 = 0 (12.2)\n\n0.75cyl A.z0 + 0.25cyl A.z1 ? cylB.z0 = 0 (12.3)\n\n0.25cyl A.z0 + 0.75cyl A.z1 ? cylB.z1 = 0 (12.4)\n\nNeste caso, a lista G.eqs do modelo teria 4 elementos do tipo Equation (veja figura 12.2).\n\nNote que os para?metros externos do bloco, na verdade, residem no vetor G.vars.\n\n12.2 Restric?o?es entre para?metros internos\n\nNo exemplo da sec?a?o 12.1, as restric?o?es foram formuladas diretamente sobre os para?metros\n\nexternos dos blocos. Em algumas situac?o?es, e? mais natural expressar uma determinada\n\nrestric?a?o em termos dos para?metros internos (coeficientes de Be?zier). Nestes casos, as ma-\n\ntrizes M dos tipos dos blocos envolvidos devem ser usadas para substituir cada para?metro\n\ninterno presente na equac?a?o pela combinac?a?o afim equivalente de para?metros externos.\n\nA inserc?a?o de um poc?o ao modelo da figura 11.1 ilustra uma destas situac?o?es. Veja\n\na figura 12.3. Neste exemplo, o poc?o e? composto por 4 blocos do tipo cylSliceKind\n\n(descrito na sec?a?o 11.4) de a?ngulo ? = ?/2. Como mostra a figura 12.4, esta operac?a?o\n\n\n\n12.2. Restric?o?es entre para?metros internos 95\n\nParamDepot: pD\n\nvars:\n\nsize: 3\n\ncoefs: 0.25 0.75 ?1.0\n\nsize: 3\n\nEquation: eq2\n\nparams:\n\ncoefs: 0.75 0.25 ?1.0\n\nsize: 2\n\nEquation: eq0\n\nparams:\n\nterm:\n\ncoefs: 1.0 ?1.0\n\n0.0\n\nEquation: eq3\n\nsize: 2\n\nEquation: eq1\n\nparams:\n\nterm:\n\ncoefs: 1.0 ?1.0\n\n0.0 term: 0.0 term: 0.0\n\nparams:\n\nBlock: cyl_A\n\nparams:\n\nkind:\nBlockKind: cylSliceKind\n\ndD\n\nrD\n\ndeg\n\n(1,1,1)\n\n3\n\n(3,3,3)\n\nM\n\n(3,3,3) (3,3,3)\n\nBlock: cyl_B\n\nparams:\n\nkind:\n\nEquationDepot: eD\n\neqs:\n\nFigura 12.2: Representac?a?o das restric?o?es 12.1 a 12.4 na BezEl.\n\nimplica em substituir um dos blocos da malha pelos 4 blocos do poc?o, e mais 4 blocos de\n\ntransic?a?o que preenchem o espac?o entre o poc?o e o resto da malha.\n\nOs blocos de transic?a?o tambe?m podem ser blocos tensoriais, mas devem ser de tipo\n\ndiferente do brickKind. Para que eles possam se acomodar adequadamente a? parede\n\npseudo-cil??ndrica do poc?o, as componentes X e Y deste novo tipo devem ser func?o?es\n\ncu?bicas das coordenadas U1 e U2; mas podem ser independentes de U0 pois tanto o poc?o\n\nquanto a malha tem paredes verticais. A componente Z, por outro lado, deve ser uma\n\nfunc?a?o linear de U0 e cu?bica em U1 e U2. Assim, tanto a func?a?o X quanto a Y possuem\n\n16 coeficientes de Be?zier, bx? e b\ny\n? onde ?, ? ? H\n\n(3,3,0)\n(1,1,1)\n\n, enquanto que a componente Z\n\npossui 32 coeficientes, bz? onde ? ? H\n(3,3,1)\n(1,1,1)\n\n. Vamos supor que este tipo de bloco e? descrito\n\npelo objeto cylJoinKind, cujos para?metros externos sa?o os pro?prios coeficientes de Be?zier\n\n(isto e?, cylJoinKind.M e? trivial).\n\n\n\n96 Cap??tulo 12. Restric?o?es entre blocos\n\nFigura 12.3: Adic?a?o de um poc?o ao modelo da figura 11.1.\n\nSuponha que desejamos colar um bloco join deste tipo a um bloco cyl do tipo\n\ncylSliceKind segundo a figura 12.5. Para isso, procedemos da seguinte forma\n\n1. Obtemos a faceta (1, 1) de join, que chamaremos de f join. Note que os para?metros\n\nexternos de f join sa?o um subconjunto dos para?metros externos de join.\n\n2. Obtemos a faceta (1, 0) do bloco cyl, que chamaremos de f cyl.\n\n3. Elevamos o multi-grau da componente Z da faceta f cyl de (0, 1) para (3, 1), ob-\n\ntendo o novo bloco f cyl rD de mesmo multi-grau da faceta f join. Note que\n\nf cyl rD tem um novo tipo e que seus para?metros externos sa?o um subconjunto dos\n\npara?metros externos de cyl.\n\n4. Para cada componente (X,Y e Z) de f join, e para cada coeficiente de Be?zier\n\n? dessa componente (ou seja bx? para X, b\ny\n? para Y e b\n\nz\n? para Z), criamos uma\n\nrestric?a?o no reposito?rio eqs do modelo que iguala f join.? ao coeficiente de Be?zier\n\nf cyl rD.? correspondente na outra faceta. Como o tipo de f cyl rD possui uma\n\nmatriz M na?o trivial, usamos esta matriz para substituir este coeficiente de Be?zier\n\npela combinac?a?o apropriada dos para?metros externos de f cyl rD.\n\n5. Finalmente, descartamos os blocos auxiliares criados: f join, f cyl e f cyl rD.\n\nO passo 1 implica em criar (ou se reutilizar) um tipo de bloco espec??fico para a faceta\n\nf join. Este tipo de bloco tem dom??nio K(1,1) e multigraus (3, 0) para as componentes X\n\n\n\n12.2. Restric?o?es entre para?metros internos 97\n\n(a) (b)\n\nFigura 12.4: Regia?o em torno do poc?o.\n\ne Y e (3, 1) para a componente Z. Analogamente, o passo 2 implica em criar ou reutilizar\n\num tipo de bloco para a faceta, f cylKind, de dom??nio K(1,1) e multigraus (3, 0) para as\n\ncomponentes X e Y e (1, 0) para a componente Z, cuja matriz f cylKind.M e?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n1 0 0 0\n\n1 ? 0 0\n\n? 1 0 0\n\n0 1 0 0\n\n0 1 0 0\n\n?? 1 0 0\n\n?1 ? 0 0\n\n?1 0 0 0\n\n0 0 1 0\n\n0 0 0 1\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\nonde ? = 0.552285 (veja sec?a?o 11.4).\n\nO passo 3 requer outro tipo de bloco, f cylKind rD, para a faceta f cyl rD, cuja matriz\n\n\n\n98 Cap??tulo 12. Restric?o?es entre blocos\n\ne?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n1 0 0 0\n\n1 ? 0 0\n\n? 1 0 0\n\n0 1 0 0\n\n0 1 0 0\n\n?? 1 0 0\n\n?1 ? 0 0\n\n?1 0 0 0\n\n0 0 1 0\n\n0 0 1 0\n\n0 0 1 0\n\n0 0 1 0\n\n0 0 0 1\n\n0 0 0 1\n\n0 0 0 1\n\n0 0 0 1\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n\n\n12.2. Restric?o?es entre para?metros internos 99\n\nNo passo 4, as restric?o?es criadas sobre os para?metros internos sa?o\n\nf join.bx((3,0),(0,0) = f cyl rD.c\nx\n((3,0),(0,0)\n\nf join.bx((2,1),(0,0) = f cyl rD.c\nx\n((2,1),(0,0)\n\nf join.bx((1,2),(0,0) = f cyl rD.c\nx\n((1,2),(0,0)\n\nf join.bx((0,3),(0,0) = f cyl rD.c\nx\n((0,3),(0,0)\n\nf join.b\ny\n\n((3,0),(0,0)\n= f cyl rD.c\n\ny\n\n((3,0),(0,0)\n\nf join.b\ny\n\n((2,1),(0,0)\n= f cyl rD.c\n\ny\n\n((2,1),(0,0)\n\nf join.b\ny\n\n((1,2),(0,0)\n= f cyl rD.c\n\ny\n\n((1,2),(0,0)\n\nf join.b\ny\n\n((0,3),(0,0)\n= f cyl rD.c\n\ny\n\n((0,3),(0,0)\n\nf join.b\ny\n\n((3,0),(0,1)\n= f cyl rD.c\n\ny\n\n((3,0),(0,1)\n\nf join.b\ny\n\n((2,1),(0,1)\n= f cyl rD.c\n\ny\n\n((2,1),(0,1)\n\nf join.b\ny\n\n((1,2),(0,1)\n= f cyl rD.c\n\ny\n\n((1,2),(0,1)\n\nf join.b\ny\n\n((0,3),(0,1)\n= f cyl rD.c\n\ny\n\n((0,3),(0,1)\n\nf join.bz((3,0),(1,0) = f cyl rD.c\nz\n((3,0),(1,0)\n\nf join.bz((2,1),(1,0) = f cyl rD.c\nz\n((2,1),(1,0)\n\nf join.bz((1,2),(1,0) = f cyl rD.c\nz\n((1,2),(1,0)\n\nf join.bz((0,3),(1,0) = f cyl rD.c\nz\n((0,3),(1,0)\n\n\n\n100 Cap??tulo 12. Restric?o?es entre blocos\n\nque, expressas em termos dos para?metros externos de cyl sa?o\n\nf join.bx((3,0),(0,0) ? cyl.y1 = 0\n\nf join.bx((2,1),(0,0) ? (?cyl.x1 + cyl.y1) = 0\n\nf join.bx((1,2),(0,0) ? (cyl.x1 + ?cyl.y1) = 0\n\nf join.bx\n((0,3),(0,0)\n\n? cyl.x1 = 0\n\nf join.b\ny\n\n((3,0),(0,0)\n? (?cyl.x1) = 0\n\nf join.b\ny\n\n((2,1),(0,0)\n? (?cyl.x1 + ?cyl.y1) = 0\n\nf join.b\ny\n\n((1,2),(0,0)\n? (??cyl.x1 + cyl.y1) = 0\n\nf join.b\ny\n\n((0,3),(0,0)\n? cyl.y1 = 0\n\nf join.b\ny\n\n((3,0),(0,1)\n? cyl.z0 = 0\n\nf join.b\ny\n\n((2,1),(0,1)\n? cyl.z0 = 0\n\nf join.b\ny\n\n((1,2),(0,1)\n? cyl.z0 = 0\n\nf join.b\ny\n\n((0,3),(0,1)\n? cyl.z0 = 0\n\nf join.bz\n((3,0),(1,0)\n\n? cyl.z1 = 0\n\nf join.bz\n((2,1),(1,0)\n\n? cyl.z1 = 0\n\nf join.bz\n((1,2),(1,0)\n\n? cyl.z1 = 0\n\nf join.bz\n((0,3),(1,0)\n\n? cyl.z1 = 0\n\nNeste caso, como cada para?metro de f join aparece em exatamente uma equac?a?o com\n\ncoeficiente 1, todas estas restric?o?es sa?o independentes e compat??veis.\n\nNote que cada ponto do R3 na faceta compartilhada do modelo tem as mesmas co-\n\nordenadas locais relativas aos blocos f join e f cyl rD. Ou seja, a colagem garante que\n\nf cyl rD.F(U) = f join.F(U) para todo U ? A(1,1).\n\n\n\n12.2. Restric?o?es entre para?metros internos 101\n\n(\n\n0 1\n0 1\n0 1\n\n)\n\n(\n\n1 0\n0 1\n0 1\n\n)\n\n(\n\n0 1\n1 0\n0 1\n\n)\n\n(\n\n0 1\n0 1\n1 0\n\n)\n\n( 0 10 1 )\n\n( 1 00 1 )\n\n( 0 11 0 )\n\nK\n(1,1,1)\n\nK\n(1,1)\n\nU0\n\nU1\n\nU2\n\nU0\n\nU1\n\njoin\n\nf join\ncyl\n\nf cylf cyl rD\n\nXX I E\n\nFigura 12.5: Diagrama da colagem conforme de um bloco que compo?e o poc?o com um bloco de\ntransic?a?o. Denotamos por X , E e I as operac?o?es de extrac?a?o de uma faceta, elevac?a?o de grau e\nidentificac?a?o de coeficientes de Be?zier, respectivamente.\n\n\n\n102 Cap??tulo 12. Restric?o?es entre blocos\n\n12.3 Colagem na?o-conforme geral\n\nEm muitas aplicac?o?es, a identificac?a?o de facetas completas na?o e? suficiente. Frequ?ente-\n\nmente, desejamos identificar uma parte de uma faceta de um bloco com parte de uma\n\nfaceta de outro bloco. Nestes casos, como no exemplo da sec?a?o 12.1, a corresponde?ncia\n\nentre as coordenadas locais de cada ponto compartilhado relativas a cada faceta na?o e?\n\ntrivial. Na biblioteca BezEl, este tipo de colagem pode ser realizada se a corresponde?ncia\n\nentre as coordenadas locais for uma bijec?a?o afim.\n\nMais especificamente, suponha que as facetas em questa?o sa?o representadas por dois\n\nelementos simploidais de Be?zier A e B, de dom??nios K? e K?, respectivamente, e queremos\n\nidentificar A.F(U) com B.F(V ), onde U pertence a um subconjunto X de A? e V pertence\n\na um subconjunto Y de A?. Para simplificar, vamos supor que X,Y,A? e A? te?m a mesma\n\ndimensa?o topolo?gica, e que queremos identificar A.F(U) com B.F(?(U)) onde ? e? um\n\nmapa afim de A? para A? dado. Note que nem X nem Y tem que ser o simplo?ide cano?nico\n\ncorrespondente (K? ou K? respectivamente). Note tambe?m que, nestas condic?o?es, as\n\nfunc?o?es A.F e (B.F) ? ? coincidem em todo o dom??nio A?, e na?o apenas no conjunto X.\n\nPor exemplo, suponha que desejamos colar um bloco prisma?tico prism, de multi-grau\n\n(2, 2), com um bloco tetrae?drico tetra, de grau (2), como na figura 12.6.\n\nFigura 12.6: Colagem na?o-conforme de um bloco prism de dom??nio K(2,1) e grau (2, 2) com um\nbloco tetra de dom??nio K(3) e grau (2).\n\n.\n\nPara isso, e? necessa?rio definir: (a) as facetas que participara?o da colagem, e (b) o mapea-\n\nmento de colagem ?. No caso, trata-se do mapa ? : A(2) ? A(1,1) ilustrado na figura 12.7.\n\n\n\n12.3. Colagem na?o-conforme geral 103\n\nPara obtermos o conjunto de restric?o?es entre os para?metros de prism e tetra que\n\ngarantem esta colagem, procedemos da seguinte forma:\n\n1. Obtemos a faceta (0, 2) de prism, que chamaremos de f prism. Esta faceta e? um\n\nbloco de dom??nio K(1,1) e grau (2, 2).\n\n2. Obtemos a faceta (0, 0) de tetra, de dom??nio K(2) e grau (2), que chamaremos de\n\nf tetra.\n\n3. Reparametrizamos a faceta f prism atrave?s da sua composic?a?o com o mapeamento\n\n? para obter o bloco simplicial f prism a2. Note que, como demonstrado no\n\ncap??tulo 10, este novo bloco tem dom??nio K(2) e suas componentes sa?o de grau\n\n(4). O objetivo e? fazer f prism a2.F coincidir com f tetra.F em todo A(2).\n\n4. Elevamos o grau da faceta f tetra de (2) para (4), obtendo o novo bloco f tetra rD.\n\nEsta faceta e? um bloco de dom??nio K(2) e grau (4), o mesmo que f prism a2.\n\n5. Adicionamos ao reposito?rio eqs do modelo as restric?o?es que igualam cada coeficiente\n\nde Be?zier de f prism a2 ao coeficiente correspondente de f tetra rD. Note que,\n\npara isso, e? necessa?rio utilizar as matrizes f prism a2.kind.M e f tetra rD.kind.M\n\npara substituir cada coeficiente de Be?zier pela combinac?a?o dos para?metros externos\n\napropriada.\n\n6. Finalmente, descartamos os blocos auxiliares criados: f prism, f prism a2, f tetra\n\ne f tetra rD.\n\n\n\n104 Cap??tulo 12. Restric?o?es entre blocos\n\n( 0 0 10 1 )\n\n( 0 0 11 0 )\n\n( 1 0 00 1 )\n\n( 0 0 0 1 )\n\n( 0 0 1 0 )\n\n( 0 1 0 0 )\n\n( 1 0 0 0 )\n\nK\n(2,1)\n\nK\n(3)\n\nprism\n\nf prism\nf prism a2\n\ntetra\n\nf tetra\nf tetra rD\n\n( 0 10 1 )\n( 1 00 1 )\n\n( 0 11 0 )\n\n?\n\n( 0 0 1 )\n\n( 0 1 0 ) ( 1 0 0 )\n\nK\n(1,1) K\n\n(2)\n\nX\nX\n\nI\n\nER\n\nFigura 12.7: Colagem na?o-conforme. Ilustrac?a?o dos blocos para colagem, seus dom??nios e o\nmapeamento de colagem. Denotamos por X , E, R e I as operac?o?es de extrac?a?o de uma faceta,\nelevac?a?o de grau, reparametrizac?a?o e identificac?a?o de coeficientes de Be?zier, respectivamente.\n\n\n\n12.4. Colagem com imposic?a?o de suavidade 105\n\n12.4 Colagem com imposic?a?o de suavidade\n\nNa colagem de dois blocos, frequentemente e? necessa?rio impor restric?o?es de suavidade,\n\nale?m das restric?o?es de continuidade.\n\nPor exemplo considere dois blocos hexae?dricos (dom??nio K1,1,1) colados por uma faceta\n\ncomo na figura 12.8, com mapa de colagem ? trivial:\n\n?(U) =\n\n?\n\n?\n\nU00 ? 1 U01 + 1\n\nU10 U11\nU20 U21\n\n?\n\n? .\n\nPara conseguir a simples continuidade, basta impor que o ponto A.F(U) = B.F(?(U))\n\npara todo U da faceta K1,1,1|0,1 do dom??nio de A. A colagem tera? suavidade (parame?trica)\n\nde primeira ordem se a derivada em qualquer direc?a?o ? ? V1,1,1 de A.F em qualquer ponto\n\nU dessa faceta for igual a? derivada de B.F , na mesma direc?a?o ?, no ponto ?(U). Observe\n\nque, para direc?o?es ? paralelas a? faceta comum, esta condic?a?o decorre automaticamente\n\nda condic?a?o de continuidade. Observe tambe?m que o operador de derivada direcional de\n\nprimeira ordem D1? e? linear na direc?a?o ?. Portanto, se a continuidade ja? foi assegurada,\n\nbasta garantir esta condic?a?o para uma direc?a?o ? transversal a? faceta.\n\n\n\n106 Cap??tulo 12. Restric?o?es entre blocos\n\nA\n(1,1,1)\n\n?\n\nA\nB\n\n(\n\n0 1\n0 1\n0 1\n\n)\n\n(\n\n0 1\n0 1\n1 0\n\n)\n\n(\n\n1 0\n0 1\n0 1\n\n)\n\n(\n\n0 1\n1 0\n1 0\n\n)\n\n(\n\n2 ?1\n0 1\n0 1\n\n)\n\n(\n\n2 ?1\n1 0\n0 1\n\n)\n\n(\n\n2 ?1\n1 0\n1 0\n\n)\n\n(\n\n1 0\n1 0\n1 0\n\n)\n\nU0\n\nU1\n\nU2\n\nU\n\n?\n\nP\n\n?\n\nFigura 12.8: Colagem com suavidade. Na figura, o ponto P ? R3 e? A.F(U) = B.F(?(U)), e o\nvetor ? ? R3 e? (D?A.F)(U) = (D?B.F)(?(U)).\n\n\n\nCap??tulo 13\n\nA biblioteca bezEl\n\nO co?digo da BezEl esta? dispon??vel para download no link https://bitbucket.org/lbfreitas/bezel\n\n13.1 Estruturas de indexac?a?o\n\nA biblioteca inclui classes destinadas a representar multi-,hiper-, e ultra-??ndices (vetores,\n\nmatrizes e tensores irregulares de inteiros).\n\n13.1.1 Multi-??ndices\n\nA representac?a?o de multi-??ndices consiste na classe MultiIndex, que possui apenas dois\n\natributos: sua dimensa?o dim e em um vetor elem de inteiros de tamanho dim+1. Por\n\nexemplo, o multi-??ndice (2, 1, 3, 7) pode ser instanciado com os comandos\n\nMultiIndex* m = new MultiIndex(3);\n\nm->elem[0] = 2;\n\nm->elem[1] = 1;\n\nm->elem[2] = 3;\n\nm->elem[3] = 7;\n\nApesar de uma multi-dimensa?o ou um multi-grau ser apenas um uso espec??fico de um\n\nmulti-??ndice, para maior clareza do co?digo, criamos as classes MultiDimension e MultiDegree,\n\nderivadas da classe MultiIndex.\n\nAle?m das operac?o?es ba?sicas descritas na sec?a?o 4.1, esta classe implementa uma se?rie de\n\nme?todos para enumerar multi-??ndices sujeitos a va?rios tipos de restric?o?es. Estes me?todos\n\ndevolvem um vetor de multi-??ndices (classe std::vector<MultiIndex*>) contendo os\n\nmulti-??ndices desejados. A tabela 13.1 relaciona alguns dos me?todos de enumerac?a?o da\n\nclasse MultiIndex. Nesta tabela, lambda e mu representam os multi-??ndices ? e \u00b5 respec-\n\ntivamente, e enum e enumAux sa?o os vetores de multi-??ndices resultantes.\n\n107\n\n\n\n108 Cap??tulo 13. A biblioteca bezEl\n\nTabela 13.1: Enumerac?a?o de multi-??ndices\n\nConjunto de multi-??ndices Implementac?a?o\n\n{? ? Id : ? &lt;?} enum = lambda->getLessThan()\n\n{? ? Id : \u00b5 &lt;? &lt;?} enumAux = lambda->getLessThan();\nenum = mu->selectGreaterFrom(enumAux);\n\n{? ? I\ng\nd\n} enum = MultiIndex::getMultiIdxSet(g,d)\n\n{? ? Id : |?| ? g} enum = MultiIndex::getMultiIdxSetLessEq(g,d)\n\nA ordem dos multi-??ndices definida por estes me?todos e? utilizada em todos os contextos\n\nem que e? necessa?rio para converter um multi-??ndice em um ??ndice inteiro, por exemplo\n\npara armazenar os coeficientes de Be?zier de um polino?mio simplicial.\n\n13.1.2 Hiper-??ndices\n\nA classe HiperIndex representa os hiper-??ndices. Sua implementac?a?o consiste basica-\n\nmente em um vetor line de multi-??ndices, um para cada linha do hiper-??ndice, e em\n\num multi-??ndice dim que define o tamanho de cada linha. Por exemplo, o hiper-??ndice\n\n((1, 0), (2, 5, 3)) pode ser representado por uma insta?ncia Lambda desta classe, com\n\nLambda.dim = (1, 2). Esta insta?ncia pode ser criada pelos comandos\n\nMultiIndex* delta = new MultiIndex(1);\n\ndelta ->elem[0] = 1;\n\ndelta ->elem[1] = 2;\n\nHyperIndex* Lambda = new HyperIndex(delta);\n\nLambda ->allocate ();\n\nLambda ->line[0]->elem[0] = 1;\n\nLambda ->line[0]->elem[1] = 0;\n\nLambda ->line[1]->elem[0] = 2;\n\nLambda ->line[1]->elem[1] = 5;\n\nLambda ->line[1]->elem[2] = 3;\n\nAle?m das operac?o?es ba?sicas descritas na sec?a?o 4.2, esta classe tambe?m implementa\n\nme?todos para a enumerac?a?o de um conjunto de hiper-??ndices. Mais especificamente, dados\n\ndois multi-??ndices ? e ?, representados por alpha e delta, o conjunto dos hiper-??ndices\n\n? ? H?? pode ser obtido utilizando o me?todo esta?tico\n\n\n\n13.2. Espac?os multi-afins 109\n\nstd::vector<HyperIndex*> getAllIndexes(MultiIndex* alpha,MultiIndex* delta);\n\nO ordem definida por este me?todo e? a utilizada em todos os contextos em que e? necessa?rio\n\nlinearizar um conjunto de hiper-??ndices, por exemplo para armazenar os coeficientes de\n\nBe?zier de um polino?mio simploidal.\n\n13.1.3 Ultra-??ndices\n\nOs ultra-??ndices sa?o implementados por insta?ncias da classe UltraIndex. Na biblioteca\n\nBezEl, esta classe esta? restrita a ultra-??ndices em que todos os planos tem o mesmo\n\nformato, isto e?, a elementos de Up,?, para algum p ? N e algum ? ? I. Os atributos desta\n\nclasse sa?o: o nu?mero de planos nPlanes, a multi-dimensa?o (compartilhada) dim dos seus\n\nplanos; e um vetor plane de hiper-??ndices, de tamanho nPlanes.\n\nAs operac?o?es de soma de planos e fatorial sa?o implementadas pelos me?todos sum e\n\nfactorial, respectivamente. Outro me?todo importante e?\n\nvector<UltraIndex*> getAllIndexes(int p, MultiIndex* d, HyperIndex* s);\n\nque enumera todos os ultra-??ndices de p+1 planos, cada um de dimensa?o d e cuja soma\n\ndos planos e? o hiper-??ndice s.\n\n13.2 Espac?os multi-afins\n\nOutro conjunto de classes e? usado para representar pontos e vetores de espac?os multi-afins\n\n(A? e V?), que sa?o matrizes irregulares de nu?meros reais. Pontos e vetores de espac?os afins\n\nsa?o tratados como casos particulares.\n\nNa biblioteca BezEl, todas as coordenadas sa?o insta?ncias de uma classe Number, que\n\npode ser concretizada pelo tipo double ou por outros tipos (como racionais exatos).\n\n13.2.1 Matrizes irregulares\n\nUma matriz irregular e? implementada por uma insta?ncia da classe IrregularMatrix.\n\nSeus atributos sa?o a multi-dimensa?o mD da matriz e uma matriz bidimensional irregular\n\ndata de ponteiros para os elementos da matriz, da classe Number. Mais especificamente,\n\ncada posic?a?o data[i] aponta para um vetor de refere?ncias de nu?meros reais de tamanho\n\nmD.elem[i]. Por exemplo, a matriz irregular M = ((1.3, 0.7), (2.1, 5.7, 3.0)) pode ser criada\n\npelos comandos\n\nMultiDimension* delta = new MultiDimension(1);\n\ndelta ->elem[0] = 1; delta ->elem[1] = 2;\n\nIrregularMatrix* M = new IrregularMatrix(delta);\n\n\n\n110 Cap??tulo 13. A biblioteca bezEl\n\nM->allocate ();\n\nM->data[0][0] = new Number (1.3);\n\nM->data[0][1] = new Number (0.7);\n\nM->data[1][0] = new Number (2.1);\n\nM->data[1][1] = new Number (5.7);\n\nM->data[1][2] = new Number (3.0);\n\n13.2.2 Matrizes regulares\n\nMatrizes regulares bidimensionais sa?o representadas por insta?ncias da classe Matrix, de-\n\nrivada da classe IrregularMatrix. Ale?m dos atributos herdados, a classe Matrix possui\n\nos atributos n rows e n cols que indicam o nu?mero de linhas e colunas da matriz. Esta\n\nclasse dispo?e de me?todos para realizar algumas operac?o?es da a?lgebra matricial como o\n\nproduto a? esquerda (leftMultiply), produto a? direita (rightMultiply), tranposic?a?o\n\n(transpose), etc.\n\n13.2.3 Pontos e vetores de espac?os multi-afins\n\nUm ponto de um espac?o multi-afim A? e? implementado por uma insta?ncia da classe\n\nDomainPoint. Esta classe, derivada da classe IrregularMatrix, tem apenas os atributos\n\nherdados desta u?ltima. O mesmo vale para vetores de um espac?o tangente multi-afim V?,\n\nrepresentados por insta?ncias da classe DomainVector.\n\n13.2.4 Mapeamento afim\n\nA classe DomainMapping implementa mapeamentos afins entre espac?os multi-afins, des-\n\ncritos no cap??tulo 9. O dom??nio e o contra-dom??nio sa?o espac?os multi-afins determinados\n\npor suas multi-dimenso?es, armazenadas nos atributos dD and rD, respectivamente. Os\n\ncoeficientes do mapeamento, descritos na equac?a?o (9.1), sa?o armazenados na forma de\n\numa matriz bidimensional irregular coef de insta?ncias da classe IrregularMatrix. Mais\n\nespecificamente, coef[r][s] e? a matriz irregular de multi-dimensa?o dD que conte?m os co-\n\neficientes Mrsij para todo i = 0, \u00b7 \u00b7 \u00b7 ,dD.dim e todo j = 0, \u00b7 \u00b7 \u00b7 ,dD.elem[i]. Uma insta?ncia\n\nM desta classe tem um me?todo M->map(DomainPoint* U) que retorna a imagem do ponto\n\nU pelo mapeamento M.\n\n\n\n13.3. Polino?mios Simploidais 111\n\n13.3 Polino?mios Simploidais\n\nA classe BezierSimploidPoly implementa um polino?mio simploidal na representac?a?o de\n\nBe?zier. Seus atributos sa?o a multi-dimensa?o dD do seu dom??nio (uma insta?ncia da classe\n\nMultiDimension), seu multi-grau deg (uma insta?ncia da classe MultiDegree), um vetor\n\ncoef contendo seus coeficientes de Be?zier (ponteiros para a classe Number e o tamanho\n\nn coef deste vetor. A ordem dos coeficientes neste vetor e? definida pelo me?todo esta?tico\n\ngetAllIndexes da classe HyperIndex (sec?a?o 13.1.2). Observe que estes coeficientes na?o\n\nsa?o armazenados no reposito?rio de para?metros (descrito no cap??tulo 11). Uma insta?ncia\n\np desta classe tem os seguintes me?todos principais\n\n\u2022 p->evaluate(DomainPoint* U)\n\nEste me?todo retorna o valor do polino?mio p calculado no ponto U, que deve ser um\n\nponto do espac?o-multi-afim de multi-dimensa?o dD. O resultado e? do tipo Number*.\n\n\u2022 p->get Poly of Facet(int k, int i)\n\nEste me?todo retorna um novo polino?mio q que corresponde a? restric?a?o do polino?mio\n\np a? faceta de ??ndices k,i do simplo?ide que e? seu dom??nio.\n\n\u2022 p->get Matrix of Facet(int k, int i)\n\nEste me?todo retorna uma matriz K que relaciona os coeficientes de Be?zier do po-\n\nlino?mio p com os do polino?mio q que corresponde a? restric?a?o do polino?mio p a? faceta\n\nde ??ndices k,i do simplo?ide que e? seu dom??nio.\n\n\u2022 p->get Matrix of RaisedDegree(MultiDegree* new deg)\n\nEste me?todo retorna uma matriz K que relaciona os coeficientes de Be?zier do po-\n\nlino?mio p com os do polino?mio q, ide?ntico a p, pore?m representado como um po-\n\nlino?mio de grau new deg, que deve ser maior ou igual a p->deg.\n\n\u2022 p->get Matrix of DirectionalDerivative(int r, DomainVector* Xi)\n\nEste me?todo retorna uma matriz K que relaciona os coeficientes de Be?zier do po-\n\nlino?mio p com os do polino?mio q, que corresponde a? r-e?sima derivada direcional do\n\npolino?mio p na direc?a?o Xi, que deve ser um vetor tangente ao espac?o multi-afim de\n\ndimensa?o dD.\n\n\u2022 p->get Matrix of Composition w AffineMap(DomainMapping* dm)\n\nEste me?todo retorna uma matriz K que relaciona os coeficientes de Be?zier do po-\n\nlino?mio p com os do polino?mio q que corresponde a? composic?a?o do polino?mio p com o\n\nmapeamento afim dm; ou seja q->evaluate(U) e? equivalente a p->evaluate(dm->map(U)).\n\n\n\n112 Cap??tulo 13. A biblioteca bezEl\n\nA matrix K, retornada nos quatro me?todos acima e? representada por uma insta?ncia\n\nda classe Matrix. O coeficiente q->coef[i] pode ser enta?o calculado acumulando\n\no produto p->coef[j] * K->data[j][i] para todo j = 0, \u00b7 \u00b7 \u00b7 ,n coef.\n\n13.4 Elementos de Be?zier simploidais\n\nLembramos que um bloco de Be?zier simploidal (definido no cap??tulo 11) representa uma\n\nfunc?a?o de um simplo?ide K? para um espac?o cartesiano Rm, onde cada uma das compo-\n\nnentes da imagem e? um polino?mio simploidal possivelmente de grau distinto.\n\n13.4.1 Tipos de bloco\n\nComo discutido no cap??tulo 11, a classe BlockKind, descreve as caracter??sticas de um\n\nconjunto de blocos com um mesmo dom??nio e contra-dom??nio, mesmo grau e mesma\n\nrelac?a?o entre para?metros internos e externos. Os atributos da classe BlockKind sa?o a\n\nmulti-dimensa?o dD = ? do dom??nio, a dimensa?o rD = m do contra-dom??nio , os multi-\n\ngraus deg de cada componente, o nu?mero de para?metros internos n int e externos n ext,\n\ne a matriz M que converte para?metros externos em internos. A dimensa?o do dom??nio dD e?\n\numa insta?ncia de MultiDimension enquanto que a dimensa?o do contra-dom??nio rD e? um\n\ninteiro. Os multi-graus deg sa?o representados por um vetor de tamanho rD de insta?ncias\n\nda classe MultiDegree. A matriz M e? uma insta?ncia da classe Matrix.\n\nPor exemplo, um tipo de bloco brickKind que descreve blocos do que compo?em a\n\nmalha da figura 11.1 pode ser criado pelos comandos\n\nMultiDimension* mD = new MultiDimension(2);\n\nmD->elem[0] = 1; mD->elem[1] = 1; mD->elem[2] = 1;\n\nMultiDegree* deg[3];\n\ndeg[0] = new MultiDegree(2);\n\ndeg[0]->elem[0] = 1;\n\ndeg[0]->elem[1] = 0;\n\ndeg[0]->elem[2] = 0;\n\ndeg[1] = new MultiDegree(2);\n\ndeg[1]->elem[0] = 0;\n\ndeg[1]->elem[1] = 1;\n\ndeg[1]->elem[2] = 0;\n\ndeg[2] = new MultiDegree(2);\n\ndeg[2]->elem[0] = 3;\n\ndeg[2]->elem[1] = 3;\n\ndeg[2]->elem[2] = 1;\n\n\n\n13.4. Elementos de Be?zier simploidais 113\n\nBlockKind* brickKind = new BlockKind(mD,3,deg);\n\n// by default: brickKind ->M = NULL\n\nOs principais me?todos de uma insta?ncia bK sa?o\n\n\u2022 bK->getInternalVars(int *varId)\n\nEste me?todo aplica a matriz bK->M de conversa?o de para?metros externos para in-\n\nternos. O resultado e? um vetor de coeficientes (de tipo Number*) representados por\n\numa insta?ncia da classe Matrix com uma u?nica coluna.\n\n\u2022 bK->get Kind of RaisedDegree(MultiDegree** new deg)\n\nEste me?todo cria um novo tipo de bloco bK raised para descrever blocos com\n\nmesmo dom??nio e contra-dom??nio do tipo bK pore?m com graus descritos pelo vetor\n\nnew deg com bK->rD insta?ncias da classe MultiDegree. Cada bloco deste tipo tera?\n\no mesmo nu?mero de para?metros externos (bK->n ext) mas um nu?mero diferente de\n\npara?metros internos. A matriz bK raised->M e? calculada de modo que os mesmos\n\npara?metros externos produzira?o polino?mios ide?nticos, apesar de formalmente de\n\ngraus distintos.\n\n\u2022 bK->get Kind of DirectionalDerivative(int r, DomainVector* Xi)\n\nEste me?todo cria um novo tipo de bloco bK deriv para descrever blocos com mesmo\n\ndom??nio e contra-dom??nio do tipo bK. Os graus do tipo bK deriv, entretanto, de-\n\npendem a ordem r da derivada e de sua direc?a?o Xi. Cada bloco deste tipo tera?\n\no mesmo nu?mero de para?metros externos (bK->n ext) mas um nu?mero diferente\n\nde para?metros internos. A matriz bK deriv->M e? calculada de modo que os mes-\n\nmos para?metros externos produzira? os coeficientes de Be?zier da r-e?sima derivada\n\ndirecional do bloco do tipo bK.\n\n\u2022 bK->get Kind of Composition w DM(DomainMapping* dm)\n\nEste me?todo cria um novo tipo de bloco bK dm para descrever blocos oriundos da\n\ncomposic?a?o de blocos do tipo bK com o mapeamento afim dm. Este novo tipo bK dm\n\ntem o mesmo dom??nio do mapeamento afim dm->dD e mesmo contra-dom??nio do tipo\n\nbK->rD. Cada bloco do tipo bK dm tera? o mesmo nu?mero de para?metros externos\n\n(bK->n ext) mas um nu?mero diferente de para?metros internos. A matriz bK dm->M\n\ne? calculada de modo que os mesmos para?metros externos produzira? os coeficientes\n\nde Be?zier da composic?a?o.\n\n\u2022 bK->get Kind of Facet(int k, int i)\n\n\n\n114 Cap??tulo 13. A biblioteca bezEl\n\n\u2022 bK->get IndexMap of Facet(int k, int i)\n\nO primeiro me?todo, bK->get Kind of Facet(int k, int i), cria um novo tipo de\n\nbloco bK facet para descrever blocos que sa?o facetas de blocos do tipo bK. Este novo\n\ntipo bK facet tem mesmo contra-dom??nio de bK. Entretanto, seu dom??nio e graus\n\ndependem na?o apenas do dom??nio de bK mas tambe?m da faceta escolhida. Cada\n\nbloco deste novo tipo tera? um nu?mero menor de para?metros externos. A matriz\n\nbK facet->M e? calculada de modo que um subconjunto dos para?metros externos de\n\num bloco do tipo bK produzira? os coeficientes de Be?zier sua faceta. Este subcon-\n\njunto e? calculado pelo segundo me?todo, bK->get IndexMap of Facet(int k, int\n\ni). Este me?todo retorna um vetor com os bK facet->n ext ??ndices dos para?metros\n\nexternos que pertencera?o a? faceta.\n\n13.4.2 Blocos de Be?zier\n\nComo descrito no cap??tulo 11, cada elemento de Be?zier e? implementado por uma insta?ncia\n\nda classe Block. Seus atributos sa?o um ponteiro model para o modelo ao qual pertence\n\n(vide sec?a?o 13.5), o ??ndice bId do bloco na lista de blocos do modelo (sec?a?o 13.5.1), um ve-\n\ntor varId contendo os ??ndices de seus para?metros externos no reposito?rio (sec?a?o 13.5.2),\n\ne uma refere?ncia kind para o tipo do bloco (insta?ncia de BlockKind). Cada insta?ncia\n\npossui tambe?m um atributo mark, utilizado temporariamente por algoritmos de percur-\n\nsos e visualizac?a?o. Observe que os para?metros internos do bloco na?o sa?o armazenados\n\npermanentemente.\n\nOs me?todos mais importantes de uma insta?ncia b desta classe sa?o\n\n\u2022 b->explicit()\n\nEste me?todo converte o bloco em uma lista de polino?mios simploidais expl??citos,\n\num para cada componente, na forma de um vetor de b->rD insta?ncias da classe\n\nBezierSimploidPoly. Os coeficientes de Be?zier dos polino?mios sa?o calculados\n\nusando a matriz b->kind->M.\n\n\u2022 b->getSubBlock using Imap(BlockKind* bK, int *idx map)\n\nEste me?todo cria um novo bloco c do tipo bK cujos para?metros externos sa?o um\n\nsubconjunto dos para?metros externos do bloco b. O subconjunto (e sua ordem) e?\n\nespecificado pelo vetor de inteiros idx map, de tamanho b->kind->n ext, tal que se\n\nidx map[j] = k, enta?o c->varId[j] = b->varId[k].\n\n\u2022 b->getSubBlock(BlockKind* newbK)\n\nEste me?todo e? um caso particular do me?todo b->getSubBlock using Imap(BlockKind*\n\nbK, int *idx map), quando o vetor idx map e? a identidade; ou seja, todos os\n\n\n\n13.5. Modelos 115\n\npara?metros externos do bloco b sa?o tambe?m para?metros externos do bloco c =\n\nb->getSubBlock(newbK).\n\n13.5 Modelos\n\nUm modelo geolo?gico e? representado por um objeto da classe Model que possui quatro\n\natributos: uma colec?a?o de blocos de Be?zier blks, um reposito?rio pDep com os para?metros\n\nexternos desses blocos, um reposito?rio eqDep de equac?o?es entre esses para?metros, e uma\n\nestrutura topolo?gica topo que especifica as relac?o?es de adjace?ncia entre blocos.\n\n13.5.1 Colec?a?o de blocos\n\nA colec?a?o blks e? uma insta?ncia da classe std::vector cujos elementos sa?o insta?ncias da\n\nclasse Block. O ??ndice de cada bloco b neste vetor e? seu atributo b->bId.\n\n13.5.2 Reposito?rio de para?metros externos\n\nO reposito?rio de para?metros externos (veja cap??tulo 11) e? implementado por uma insta?ncia\n\npDep da classe ParamDepot. O nu?mero de para?metros do modelo e? armazenado no atributo\n\ninteiro pDep.nP, e os valores correntes destes para?metros (insta?ncias da classe Number)\n\nsa?o armazenados em um vetor pDep.data nas posic?o?es [0, ... ,pDep.nP-1]. Novos\n\npara?metros sa?o acrescentados ao modelo pelo me?todo reserveNewVars(int qty), que\n\nestende o vetor pDep.data se necessa?rio e retorna um vetor de qty inteiros, os ??ndices dos\n\npara?metros reservados. Os para?metros externos de um bloco b sa?o pDep.data[b.varId[k]],\n\npara k variando de 0 a b.kind.n ext-1. A atribuic?a?o e leitura dos valores de para?metros\n\narmazenados em um reposito?rio pDep sa?o implementado pelos me?todos\n\npDep->setVar(int varId, Number* value);\n\npDep->getVar(int varId);\n\n13.5.3 Equac?o?es entre varia?veis\n\nAs restric?o?es entre blocos (cap??tulo 12) sa?o implementadas pela classe Equation. Cada\n\ninsta?ncia desta implementa uma restric?a?o linear entre um ou mais para?metros externos\n\ndo modelo, armazenados no reposito?rio pDep. Uma insta?ncia e desta classe possui um\n\natributo inteiro size que e? o nu?mero de para?metros envolvidos na equac?a?o; um vetor\n\nvarId, de tamanho size, contendo os ??ndices desses para?metros no reposito?rio; e um vetor\n\ncoefs, tambe?m de tamanho size, que armazena os coeficientes de cada para?metro na\n\n\n\n116 Cap??tulo 13. A biblioteca bezEl\n\nequac?a?o. O termo independente e? representado pelo atributo independent. Os me?todos\n\ne->add(Equation* op);\n\ne->sub(Equation* op);\n\ne->mul(Number* s);\n\ne->div(Number* s);\n\nrealizam as operac?o?es de soma e subtrac?a?o da equac?a?o op, e multiplicac?a?o e divisa?o pelo\n\nescalar s e retornam uma nova equac?a?o. Ha? tambe?m um me?todo e->collapse(), que\n\ncria um anova equac?a?o eliminando os termos cujo coeficiente e? nulo.\n\n13.5.4 Reposito?rios de equac?o?es\n\nA classe EquationDepot implementa um reposito?rio de equac?o?es. Seus atributos sa?o:\n\no nu?mero nE de equac?o?es e um vetor eqs de tamanho nE contendo apontadores para\n\ninsta?ncias da classe Equation. Equac?o?es podem ser adicionadas a um reposito?rio eDep\n\numa-a-uma, utilizando o me?todo eDep->addRestriction ou em grupos, utilizando o\n\nme?todo eDep->addRestrictionSet.\n\n13.5.5 Estrutura topolo?gica\n\nA topologia de um modelo mod e? representada por uma insta?ncia mod->topo da classe\n\nAdjacencyList, que implementa listas de adjace?ncias. Ale?m de um ponteiro para o\n\nmodelo ao qual pertence, esta classe conte?m um u?nico atributo, o vetor topo->list\n\n(uma insta?ncia de std::vector) tal que mod.topo.list[i] sa?o as adjace?ncias do bloco\n\nbi = mod.blks[i]. Esta informac?a?o e? implementada por outros bi.nfacets vetores\n\nde triplas do tipo AdjLstElem, uma para cada faceta do dom??nio de bi. O me?todo\n\nmod->topo->getAdjBlocks(i,k,l) retorna o vetor de triplas de adjace?ncias do bloco\n\nbi pela sua (k, l)-faceta. Cada tripla tbklm = mod->topo->getAdjBlocks(i,k,l)[m]\n\ndescreve o m-e?simo vizinho do bloco bi adjacente a? faceta (k, l). O ??ndice tiklm.adjId\n\narmazena a posic?a?o do bloco vizinho em mod.blks. O atributo tiklm.adjFacet armazena\n\nos ??ndices da faceta de mod.blks[tiklm.adjId] atrave?s da qual se verifica a adjace?ncia;\n\ne o mapeamento afim timlm.dm relaciona o dom??nio desta faceta com o dom??nio da faceta\n\ncorrespondente do bloco bi. (Lembre que a biblioteca BezEl supo?e que esse mapeamento\n\nafim e? constante.)\n\n\n\n13.6. Classes adicionais 117\n\n13.6 Classes adicionais\n\n13.6.1 Visualizac?a?o\n\nA visualizac?a?o dos blocos de Be?zier representados pela bezEl e? realizada com o aux??lio do\n\ntrac?ador de raios POVRay. A classe Model vis e? a mais importante nesta tarefa. Uma\n\ninsta?ncia vis desta classe representa facetas de blocos por malhas de tria?ngulos planos\n\ncom transpare?ncia, arestas (e grade de controle) por sequ?e?ncias de cilindros e pontos de\n\ncontrole de Be?zier por esferas. O atributo vis->model e? um ponteiro para o modelo a ser\n\nvisualizado. Outros atributos sa?o o vetor de strings vis->color e o vetor de nu?meros reais\n\nvis->transmit, ambos de tamanho vis->nPigments. Mais especificamente, se b e? um\n\nbloco pertencente ao modelo vis->model, b sera? pintado com cor vis->color[b->mark]\n\ne transpare?ncia vis->transmit[b->mark]. Note que a string de cor deve ter o formato\n\ndo POVRay, por exemplo rgb<0.4,0.1,0.0>.\n\nOs me?todos de uma insta?ncia vis mais importantes sa?o\n\n\u2022 vis->initDomain(int nk11, int nk2)\n\nEste me?todo estabelece a resoluc?a?o da representac?a?o das facetas. As facetas de\n\ndom??nio K(1,1) sa?o divididas em nk11 * nK11 reta?ngulos, e cada reta?ngulo e? dividido\n\nem dois tria?ngulos planos. As facetas de dom??nio K(2), por outro lado, sa?o divididas\n\nem 4nK2 tria?ngulos.\n\n\u2022 vis->plotPOV(FILE* fp)\n\nEste me?todo gera a representac?a?o POVRay do modelo vis->mod e escreve no ar-\n\nquivo apontado por fp. Observe que os blocos deste modelo marcados com valores\n\nnegativos ou maiores ou iguais a vis->nPigments na?o sa?o exportados para esta\n\nrepresentac?a?o.\n\n13.6.2 Coletor de lixo\n\nA classe SmartPointer implementa um coletor de lixo simples para algumas classes da\n\nBezEl como Number, MultiIndex, HyperIndex, etc. A inicializac?a?o do coletor e? realizada\n\natrave?s do me?todo initSmartPointers(). O coletor armazena internamente uma pilha\n\nde ponteiros SmartPointer.pointers de objetos de tipos arbitra?rios. Apo?s inicializado,\n\ncada criac?a?o de uma nova insta?ncia de uma das classes acima armazena um ponteiro nesta\n\npilha. Os me?todos mais importantes sa?o\n\n\u2022 SmartPointer.get next()\n\nEste me?todo retorna o tamanho atual da pilha.\n\n\n\n118 Cap??tulo 13. A biblioteca bezEl\n\n\u2022 SmartPointer.delete from(int p)\n\nEste me?todo remove e destro?i todos os objetos da pilha depois da posic?a?o from.\n\nEstes me?todos sa?o usados quando um procedimento cria um nu?mero grande de ob-\n\njetos tempora?rios que sera?o destru??dos ao final do procedimento. Neste caso, o proce-\n\ndimento comec?a executando int p = SmartPointer.get next(), e antes de retornar\n\nexecuta SmartPointer.delete from(p).\n\n\n\nCap??tulo 14\n\nEditor de modelos 2D\n\nPara demonstrar a capacidade da biblioteca, implementamos um editor de modelos geof??si-\n\ncos bidimensionais. Este editor consiste em dois programas: (a) o editor de topologia e\n\npropriedades f??sicas e (b) o editor de geometria.\n\nO editor de topologia e propriedades f??sicas, implementado como um Java applet,\n\nutiliza estruturas pro?prias e grava a descric?a?o do modelo em um arquivo texto. O editor\n\nde geometria, implementado em Qt/C++, le? um arquivo texto e reconstro?i o modelo\n\nutilizando as func?o?es e estruturas de dados da biblioteca BezEl. Este editor permite\n\najustar as coordenadas verticais de certos pontos de controle de Be?zier, preservando as\n\nrestric?o?es de suavidade de interfaces.\n\n14.1 Editor de topologia e propriedades f??sicas\n\nO editor de topologia (TopEdit) e? usado para definir o nu?mero de fa?cies e interfaces, suas\n\nrelac?o?es de adjace?ncias e uma geometria inicial. A regia?o de interesse e? um reta?ngulo\n\ncom o eixo X representando a posic?a?o horizontal e o eixo Z a profundidade. O eixo Y e?\n\nimpl??cito; supo?e-se que todas as propriedades sa?o constantes nesta direc?a?o.\n\nUma sec?a?o de edic?a?o consiste de cinco etapas.\n\nNa primeira etapa, a regia?o de interesse e? dividida por uma colec?a?o de linhas nodais\n\nverticais, igualmente espac?adas. Veja a figura 14.1. O nu?mero de linhas e? escolhido pelo\n\nusua?rio, e deve ser tanto maior quanto maior for a complexidade topolo?gica do modelo.\n\nNa segunda etapa, o usua?rio especifica uma se?rie de interfaces geolo?gicas. Cada inter-\n\nface e? uma curva em que a profundidade Z e? uma func?a?o da coordenada X. A curva pode\n\ncomec?ar ou terminar num dos lados verticais do modelo, ou na intersec?a?o de uma interface\n\nanterior com uma linha nodal. O editor exige que cada interface cruze pelo menos duas\n\nregio?es entre linhas nodais. Veja a figura 14.2.\n\nAs linhas nodais dividem cada interface em arcos de Be?zier de grau 3, conectados com\n\n119\n\n\n\n120 Cap??tulo 14. Editor de modelos 2D\n\nFigura 14.1: Primeira etapa: definic?a?o das linhas nodais sobre a regia?o de interesse.\n\nprimeira derivada cont??nua. O usua?rio pode alterar a coordenada vertical dos pontos de\n\ncontrole de cada arco, e o editor modifica os pontos de controle dos arcos vizinhos de\n\nmodo a manter a suavidade da interface.\n\nNa terceira etapa, o editor identifica as fa?cies do modelo. Cada fa?cie e? uma regia?o\n\nconexa maximal delimitada superiormente e inferiormente por duas interfaces. Portanto,\n\ncada fa?cie pode ser delimitada a? esquerda e a? direita por um trecho de linha nodal (in-\n\ncluindo os lados verticais da regia?o) ou pelo ponto de encontro de duas interfaces. Veja a\n\nfigura 14.3.\n\nNa quarta etapa, o editor particiona automaticamente cada fa?cie em um conjunto de\n\nblocos triangulares de Be?zier de grau 3. Os tre?s ve?rtices de cada bloco sa?o intersecc?o?es de\n\nlinhas nodais com interfaces. Uma das arestas e? vertical (parte de uma linha nodal) e o\n\nve?rtice oposto a ela esta? sobre uma das linhas nodais vizinhas. As outras arestas podem\n\nser arcos de interface ou arestas \u201cdiagonais\u201d escolhidas automaticamente pelo editor. Veja\n\na figura 14.4.\n\nNa u?ltima etapa, o usua?rio especifica a velocidade de propagac?a?o da onda em cada\n\nfa?cie. O usua?rio pode definir separadamente a velocidade de propagac?a?o ao longo das\n\ninterfaces superior e inferior de cada fa?cie. Se os dois valores forem diferentes, entende-se\n\nque ha? uma variac?a?o suave de velocidade com a profundidade. Veja a figura 14.5.\n\n\n\n14.1. Editor de topologia e propriedades f??sicas 121\n\nFigura 14.2: Segunda etapa: definic?a?o das interfaces (incluindo os limites superior e inferior do\nmodelo)\n\nO editor salva estas informac?o?es em um arquivo texto, que especifica o nu?mero de\n\nblocos, suas relac?o?es de adjace?ncia e a corresponde?ncia entre as coordenadas locais de\n\nblocos adjacentes. Ale?m disso, o arquivo especifica os blocos e as respectivas facetas que\n\ncompo?em cada interface.\n\n\n\n122 Cap??tulo 14. Editor de modelos 2D\n\nFigura 14.3: Terceira etapa: identificac?a?o das fa?cies (indicadas por cores arbitra?rias).\n\nFigura 14.4: Quarta etapa: decomposic?a?o das fa?cies em blocos triangulares.\n\n\n\n14.1. Editor de topologia e propriedades f??sicas 123\n\nFigura 14.5: Quinta etapa: especificac?a?o das velocidades em cada fa?cie.\n\n\n\n124 Cap??tulo 14. Editor de modelos 2D\n\n14.2 Editor de geometria\n\nO editor de geometria (GeoEdit) le? o arquivo texto gerado pelo editor de topologia e\n\nreconstro?i o modelo, agora utilizando as estruturas e func?o?es da biblioteca BezEl. A\n\nreconstruc?a?o do modelo consiste de tre?s etapas.\n\nNa primeira etapa, o editor cria o modelo (classe Model) e os blocos da malha. Cada\n\nbloco e? uma insta?ncia da classe Block (cap??tulo 11) que pode ter dois tipos poss??veis,\n\nlvKind e rvKind, dependendo da posic?a?o da aresta vertical \u2014 no lado esquerdo ou direito\n\ndo bloco, respectivamente. Os dois tipos te?m dom??nio K2 e tre?s componentes X, Z, e\n\nV , de grau (3), (3) e (1) respectivamente. Cada bloco tem 14 para?metros externos, que\n\nsa?o o ??ndice lN da linha nodal que conte?m sua aresta, os 10 coeficientes de Be?zier da\n\ncomponente Z, e os tre?s coeficientes de Be?zier da componente V (que sa?o as velocidades\n\nnos ve?rtices do bloco). Cada bloco tem 23 para?metros internos: 10 coeficientes de Be?zier\n\npara cada componente X e Z, e tre?s para a componente V . As matrizes de conversa?o\n\ntem a forma\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\nD10\u00d71 010\u00d710 010\u00d73 A10\u00d71\n\n010\u00d71 I10\u00d710 010\u00d73 010\u00d71\n\n03\u00d71 03\u00d710 I3\u00d73 03\u00d71\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\nAs submatrizes A e D sa?o\n\nA =\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n0\n\n0\n\n0\n\n0\n\n\u00b1d/3\n\n\u00b1d/3\n\n\u00b1d/3\n\n\u00b12d/3\n\n\u00b12d/3\n\n\u00b1d\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n. D =\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\nd\n\nd\n\n...\n\nd\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n.\n\nonde d e? a dista?ncia entre as linhas nodais, e o sinal \u00b1 e? escolhido de acordo com o tipo\n\n(positivo para lvKind.M e negativo para rvKind.M).\n\n\n\n14.2. Editor de geometria 125\n\nNa segunda etapa, para cada par de blocos adjacentes, o editor acrescenta ao mo-\n\ndelo um conjunto restric?o?es que descrevem as adjace?ncias entre os blocos, garantindo\n\na ause?ncia de frestas e superposic?o?es. (Estas restric?o?es poderiam ter sido implementa-\n\ndas pelo compartilhamento de para?metros externos, como descrito na sec?a?o 11.3; pore?m\n\nquando o editor foi escrito, esta funcionalidade na?o havia sido implementada.) Ainda\n\nnesta etapa, o editor tambe?m acrescenta ao modelo uma se?rie de restric?o?es que garantem\n\na suavidade de cada interface. Estas restric?o?es na?o sa?o atualmente utilizadas pelo editor,\n\nmas poderiam ser utilizadas por outros programas, por exemplo em um algoritmo geral\n\npara a determinac?a?o automa?tica de elementos finitos [19].\n\nNa terceira etapa, o editor escolhe um subconjunto dos coeficientes de Be?zier \u2014 os co-\n\neficientes do modelo \u2014 que podem ter sua componente vertical alterada arbitrariamente\n\npelo usua?rio. Para cada um destes coeficientes, o editor determina tambe?m as alterac?o?es\n\nque devem ser feitas nos para?metros externos dos blocos de modo a preservar as res-\n\ntric?o?es de continuidade e suavidade. A modificac?a?o do coeficiente pelo usua?rio acarreta\n\na modificac?a?o automa?tica dos para?metros externos de um ou mais blocos conforme estas\n\ninformac?o?es. Veja a figura 14.6.\n\nObserve que a alterac?a?o de um ponto de controle no interior de uma fa?cie na?o altera a\n\nforma da mesma, mas sim a corresponde?ncia entre as coordenadas locais U e a coordenada\n\nZ. Embora a velocidade V seja sempre a mesma func?a?o afim das coordenadas locais U,\n\nessa alterac?a?o vai modificar a relac?a?o entre V e a coordenada Z no interior da fa?cie.\n\n\n\n126 Cap??tulo 14. Editor de modelos 2D\n\nFigura 14.6: Interface do editor de geometria. As coordenadas Z dos pontos vermelhos sa?o os\ncoeficientes do modelo.\n\n\n\nCap??tulo 15\n\nSimulac?a?o s??smica\n\nUma das ferramentas principais para determinar a estrutura geolo?gica de uma regia?o\n\nextensa e? a s??smica de reflexa?o, que consiste em aplicar um forte sinal meca?nico em um\n\nponto da regia?o de interesse e registrar seus ecos em um conjunto de receptores (geofones\n\nem terra ou hidrofones no mar) distribu??dos na regia?o de aquisic?a?o, por exemplo na\n\nsuperf??cie terrestre, abaixo da superf??cie ou no fundo do mar, no interior de poc?os, etc.\n\nEmbora o objetivo final seja inverter os dados s??smicos assim obtidos para se conhe-\n\ncer a geologia da sub-superf??cie, ha? interesse tambe?m no problema direto, a simulac?a?o\n\ns??smica, onde o modelo geof??sico e? fornecido a priori e a aquisic?a?o de dados s??smicos e?\n\nobtida computacionalmente, resultando em dados s??smicos simulados, conhecidos como\n\nsismogramas sinte?ticos.\n\nA simulac?a?o s??smica e? uma ferramenta poderosa para modelagem, explorac?a?o, geren-\n\nciamento e monitoramento de reservato?rios. Ela ajuda a validar modelos geolo?gicos e\n\ninterpretar dados s??smicos reais, por exemplo possibilitando a identificac?a?o e posiciona-\n\nmento de interfaces e a determinac?a?o de propriedades f??sicas das fa?cies principais [2].\n\nA simulac?a?o s??smica pode ser feita por va?rias te?cnicas incluindo soluc?a?o da equac?a?o\n\nda onda sobre uma grade regular [27], aproximac?o?es baseadas na teoria de raios [25] e\n\nde frentes de onda [26]. Dentre estas te?cnicas de simulac?a?o, o trac?amento de raios se\n\ndestaca por sua versatilidade e eficie?ncia computacional, sendo especialmente apropriado\n\npara modelos baseados em interfaces ou em malhas tridimensionais.\n\n15.1 Trac?ado de raios\n\nO trac?ado de raios se aplica tipicamente a? situac?o?es onde a excitac?a?o s??smica e? impulsiva\n\n\u2014 uma fonte pontual (explosa?o ou tiro de canha?o de ar), localizada em um ponto da\n\nregia?o e limitada a um intervalo de tempo muito curto.\n\n127\n\n\n\n128 Cap??tulo 15. Simulac?a?o s??smica\n\n15.1.1 Ondas s??smicas\n\nVerifica-se que, em cada instante seguinte ao impulso, a deformac?a?o ela?stica na rocha\n\nconsiste de uma colec?a?o de ondas s??smicas. Cada onda pode ser modelada por uma\n\nsuperf??cie, a frente da onda, que se desloca de maneira cont??nua atrave?s de uma fa?cie.\n\nNeste trabalho, por simplicidade, nos restringiremos ao trac?ado de raios em meios\n\nisotro?picos, nos quais a velocidade de propagac?a?o da frente de onda depende unicamente\n\nde sua posic?a?o, e na?o da direc?a?o de propagac?a?o. Nestes meios, dois tipos de onda se\n\npropagam de forma independente e com velocidades diferentes. A onda compressional ou\n\nonda P, mais ra?pida, desloca as part??culas da rocha na direc?a?o da sua propagac?a?o. A\n\nonda cisalhante ou onda S, mais lenta, desloca as part??culas na direc?a?o perpendicular a?\n\nsua propagac?a?o.\n\n15.1.2 Equac?o?es do raio\n\nNesse contexto, um raio e? a trajeto?ria de um ponto da frente de onda que se desloca sempre\n\nna direc?a?o perpendicular a? ela. Esta trajeto?ria pode ser modelada por uma func?a?o R dos\n\nreais, R, para o R3, tal que R(t) sa?o as coordenadas do ponto t segundos depois do impulso\n\ninicial. Veja a figura 15.1.\n\nDentro de uma camada, onde as propriedades f??sicas da rocha variam suavemente, um\n\nraio R satisfaz as equac?o?es\n\nR?(t) = v(R(t))2p(t)\n\np?(t) =\n1\n\nv(R(t))\n(~?v)(R(t)). (15.1)\n\nNestas equac?o?es, p e? uma func?a?o auxiliar de R para R3, e R? e p? denotam as derivadas de\n\nR e de p em relac?a?o ao tempo.\n\nA func?a?o dada v associa a cada ponto da regia?o de interesse o mo?dulo da velocidade\n\nde propagac?a?o da onda simulada (P ou S) naquele ponto. O valor de p(t), chamado de\n\nvagarosidade, e? um vetor perpendicular a? frente de onda no instante t e no ponto R(t),\n\ncujo mo?dulo e? igual a 1/v(R(t)). A figura 15.1 ilustra estes conceitos.\n\nObserve que, dadas a posic?a?o inicial R(t0) e a vagarosidade inicial p(t0) de um raio\n\npara algum instante t0 ? 0, as equac?o?es (15.1) determinam a posic?a?o R(t) no raio para\n\ntodo t ? t0. Esta trajeto?ria pode ser calculada numericamente, por exemplo pelo me?todo\n\nRunge-Kutta [22].\n\nAs equac?o?es (15.1) descrevem apenas a posic?a?o e a direc?a?o do raio. A integrac?a?o\n\ndestas equac?o?es e? chamada de trac?ado cinema?tico do raio. Pore?m, cada ponto de uma\n\nonda tem tambe?m outras propriedades f??sicas como amplitude, durac?a?o e forma do pulso,\n\n\n\n15.1. Trac?ado de raios 129\n\nR(0)\n\nR(t1)\n\nR(t2)\n\np(0)\n\np(t1)\n\np(t2)\n\nFigura 15.1: Ilustrac?a?o da propagac?a?o de uma onda s??smica resultante de um impulso inicial\nno instante t = 0 e no ponto R(0), mostrando a frente de onda em dois instantes subsequ?entes\nt = t1 e t = t2, e um raio (em vermelho) com direc?a?o inicial p(0).\n\npolarizac?a?o, etc. A evoluc?a?o destas propriedades ao longo do tempo e? descrita por um\n\noutro conjunto de equac?o?es, cuja interac?a?o constitui o trac?ado de raios dina?mico.\n\n15.1.3 Custo da integrac?a?o em coordenadas cartesianas\n\nA integrac?a?o das equac?o?es do raio (15.1) na forma apresentada e? bastante dispendiosa no\n\ncaso de malhas com elementos curvos, como os usados na nossa biblioteca. Este custo\n\ndecorre principalmente da necessidade de verificar, a cada passo de interac?a?o, se o raio\n\ncontinua no mesmo elemento ou se cruzou sua fronteira. Mais especificamente, suponha\n\nque o ponto R(t) do raio esta? no interior do bloco B, cujo dom??nio e? um simplo?ide K?, para\n\nalgum ? ? Im e algum m ? N. Para determinar se o ponto R(t) esta? dentro do elemento\n\ne? necessa?rio encontrar o ponto U(t) (do dom??nio A?) tal que R(t) = B.P(U(t)), onde\n\nB.P = (B.P0,B.P1,B.P2) = (B.X,B.Y,B.Z) sa?o as tre?s componentes de B que descrevem a\n\ngeometria do bloco. Uma vez determinado o ponto U(t), podemos verificar se ele esta?\n\ndentro do simplo?ide K?. A determinac?a?o de U(t) a partir de R(t) recai em um sistema\n\nde 3 equac?o?es polinomiais cuja soluc?a?o exige me?todos iterativos custosos como Newton-\n\nRaphson.\n\nO ca?lculo de U(t) e? necessa?rio tambe?m quando as propriedades f??sicas sa?o descritas\n\nem termos das coordenadas locais, como no nosso modelo; pois nesse caso precisamos de\n\n\n\n130 Cap??tulo 15. Simulac?a?o s??smica\n\nU(t) para calcular velocidade de propagac?a?o v(R(t)) = B.v(U(t)). Ale?m disso, para obter\n\no gradiente cartesiano (?v)(R(t)) precisamos calcular o seu gradiente (?B.v)(U(t)) nas\n\ncoordenadas locais e traduzir este u?ltimo para o gradiente em relac?a?o a?s coordenadas X,Y\n\ne Z. A alternativa comum de modelar as propriedaes f??sicas como func?a?o das coordenadas\n\ncartesianas economizaria esta conversa?o, mas na?o eliminaria a necessidade de calcular U(t)\n\npara a detecc?a?o da fronteira do bloco.\n\n15.1.4 Interac?a?o do raio com interfaces\n\nAs equac?o?es (15.1) sa?o va?lidas apenas enquanto o raio viaja em um meio onde v varia\n\nsuavemente com a posic?a?o. Quando um raio R atinge uma interface, onde ha? mudanc?a\n\nbrusca nas propriedades f??sicas, ele geralmente se extingue e da? origem a um ou mais\n\nnovos raios, refletidos e/ou transmitidos. A direc?a?o inicial de cada novo raio R? depende\n\nda direc?a?o final do raio R, da inclinac?a?o local da interface, e do contraste de velocidades\n\natrave?s da interface (que por sua vez depende dos tipos de onda S ou P), de acordo com a\n\nlei de Snell [25]. Cada novo raio R? e? governado pelas equac?o?es (15.1) ate? encontrar outra\n\ninterface, e assim por diante. Na simulac?a?o nume?rica, costuma-se especificar de antema?o\n\no lado da interface (isto e?, se o raio e? refletido ou transmitido) e o tipo de onda (S ou\n\nP) que deve ser escolhido em cada interface atravessada. Esta sequ?e?ncia de escolhas e?\n\nchamada de assinatura do raio [25].\n\nQuando o raio atinge a fronteira, o custo de identificar o bloco vizinho e?, no ma?ximo,\n\nproporcional ao nu?mero de vizinhos. A transic?a?o do raio, por outro lado, tem custo cons-\n\ntante. Uma vez que, em malhas t??picas, cada bloco tem um nu?mero limitado de vizinhos,\n\no custo do trac?ado de raios e? proporcional ao nu?mero total de interfaces atravessadas mais\n\no nu?mero total de passos de integrac?a?o efetivados no interior dos blocos.\n\n15.2 Trac?ado de raios nas coordenadas locais do bloco\n\nPara evitar a conversa?o das coordenadas X,Y e Z para coordenadas locais U, no?s adapta-\n\nmos as equac?o?es do raio (15.1) de modo a descrever diretamente a evoluc?a?o de U(t) [10].\n\nMais precisamente, substitu??mos o estado do integrador [R(t),p(t)] por [U(t),p(t)], onde\n\nU(t) sa?o as coordenadas locais do ponto R(t) em B. Veja a figura 15.2. Note que o vetor\n\nvagarosidade p(t) continua sendo representado pelas suas coordenadas Cartesianas f??sicas.\n\nReescrevemos enta?o o sistema (15.1) como\n\nU?(t) = (W(t))?1 (B.v(U(t)))\n2\np(t)\n\np?(t) = (W(t))?1\n(\n\n1\n\nB.v(U(t))\n\n)\n\nG(t) , (15.2)\n\n\n\n15.2. Trac?ado de raios nas coordenadas locais do bloco 131\n\nU(t)\n\nR(t)\n\nR(t)\n\nB.v(U)\n\nB.v(U)\n\nB.P(U)\n\nB\n\nX\n\nX\n\nZ\n\nZ\n\nU00\n\nU01U02\n\nFigura 15.2: Ilustrac?a?o do trac?ado de raios nas coordenadas locais de um bloco simploidal\nbidimensional.\n\nonde W(t) e? a matriz jacobiana das func?o?es da forma do bloco B calculada no ponto U(t),\n\nWik(t) =\n?(B.Pi)\n\n?Uk\n(U(t)). (15.3)\n\ne G(t) e? o vetor gradiente da func?a?o B.v em relac?a?o as coordenadas locais, tambe?m cal-\n\nculado no ponto U(t),\n\nGk(t) =\n?(B.v)\n\n?Uk\n(U(t)) (15.4)\n\nNas equac?o?es (15.3) e (15.4), supo?e-se que as coordenadas Uij de um ponto U de A\n? sa?o\n\nrenumeradas U0,U1, \u00b7 \u00b7 \u00b7 ,Us?1, onde s = |?|+m, em alguma ordem fixa. Observe que cada\n\nderivada parcial ?(B.Pi)/?Uk e ?(B.v)/?Uk , como ja? mencionado no cap??tulo 8, e? uma\n\nfunc?a?o polinomial simploidal, facilmente determinada a partir dos coeficientes de Be?zier\n\ndo bloco B.\n\n\n\n132 Cap??tulo 15. Simulac?a?o s??smica\n\nObserve que o sistema (15.2) na?o e? va?lido quando a matriz W e? singular. Entretanto,\n\na inexiste?ncia de tais singularidades e? um requisito natural para um modelo geof??sico\n\nbaseado em ce?lulas.\n\n15.2.1 Normalizac?a?o de U(t)\n\nEm teoria, se U(t0) esta? em A\n?, isto e? a soma de cada linha de U(t) e? 1, as equac?o?es (15.2)\n\nmante?m U(t) em A? para todo t ? t0. Pore?m, na pra?tica, erros de arredondamento podem\n\nfazer com que U(t) saia de A?. Para corrigir tais desvios e? necessa?rio normalizar U(t)\n\napo?s cada passo de integrac?a?o forc?ando\n??i\n\nj=0 Uij(t) = 1.\n\n15.2.2 Custo da integrac?a?o em coordenadas locais do bloco\n\nA principal vantagem deste me?todo e? evitar as iterac?o?es de Newton-Raphson para deter-\n\nminar U(t) a partir de R(t). A desvantagem e? a necessidade de calcular o jacobiano W(t)\n\ne sua inversa, mas estas contas sa?o mais simples do que as iterac?o?es de Newton-Raphson.\n\n15.3 Exemplo nume?rico\n\nPara validar esta nova abordagem, implementamos um mo?dulo na linguagem Java que\n\nrealiza o trac?ado de raios nos modelos bidimensionais criados pelo editor TopEdit descrito\n\nno cap??tulo 14. Dados a posic?a?o da fonte, a direc?a?o inicial de um raio e a sua assinatura,\n\no programa realiza o trac?ado do raio integrando o sistema (15.2), utilizando o me?todo\n\nRunge-Kutta de quarta-ordem [22], ate? encontrar uma interface. Neste ponto, o programa\n\nacompanha um dos novos raios, determinado por uma assinatura previamente fornecida.\n\nAdicionalmente, o usua?rio pode especificar um feixe de raios, fornecendo a abertura em\n\ngraus do feixe e a separac?a?o em graus entre os raios que o compo?e.\n\nPara ilustrar o programa, usamos a seguir um modelo geof??sico de uma regia?o plana\n\n(propagac?a?o 2D) com 12km de extensa?o por 8km de profundidade, mostrado na fi-\n\ngura 15.3. Neste teste, a fonte foi localizada na superf??cie, mais especificamente na posic?a?o\n\nX = 4km e Z = 0km. A figura 15.4a ilustra os raios refletidos na base da primeira camada,\n\ncom direc?o?es iniciais variando de ?28? a 28? com incrementos de 1?. A figura 15.4b, por\n\nsua vez, ilustra os raios refletidos na base da segunda camada, com direc?o?es iniciais vari-\n\nando de ?17? a 17? com mesmo incremento. Em ambas as simulac?o?es, usamos integrac?a?o\n\nde RungeKutta com passo de 2ms.\n\n\n\n15.3. Exemplo nume?rico 133\n\nFigura 15.3: Modelo geof??sico criado pelo editor TopEdit. As velocidades variam de 1500m/s\n(ciano) a 5000m/s (vermelho).\n\n\n\n134 Cap??tulo 15. Simulac?a?o s??smica\n\n(a)\n\n(b)\n\nFigura 15.4: Simulac?a?o s??smica por trac?amento de raios. Raios refletidos (a) na base da primeira\ncamada e (b) na base da segunda camada.\n\n\n\nCap??tulo 16\n\nConcluso?es\n\nNesta tese, estudamos a representac?a?o de modelos geolo?gicos por malhas de elementos\n\nde Be?zier simploidais. Esta classe de elementos inclui, como casos particulares, a curva\n\nde Be?zier, os retalhos triangulares e retangulares de Be?zier, e os blocos hexae?dricos, te-\n\ntrae?dricos e prisma?ticos de Be?zier.\n\nNa primeira parte da tese, revisamos os conceitos de elementos simpliciais e tenso-\n\nriais e desenvolvemos fo?rmulas gene?ricas expl??citas para conversa?o entre estes dois tipos\n\npara dimenso?es e graus arbitra?rios. Ale?m disso, formalizamos os elementos simploidais\n\nde Be?zier e apresentamos fo?rmulas gene?ricas para elevac?a?o de grau, diferenciac?a?o e re-\n\nparametrizac?a?o por mapeamentos afins constantes. Para este fim, usamos a notac?a?o de\n\nmulti-??ndices de DeRose [6], estendemos sua notac?a?o de hiper-??ndices para incluir ma-\n\ntrizes irregulares, e definimos o novo conceito de ultra-??ndice. Grac?as a estes conceitos,\n\nconseguimos obter fo?rmulas sucintas va?lidas para todos os tipos de blocos e dimenso?es.\n\nNa segunda parte, aplicamos esta teoria a? representac?a?o computacional de malhas de\n\nelementos simploidais. Descrevemos a biblioteca BezEl, por no?s desenvolvida, que permite\n\na representac?a?o e manipulac?a?o eficiente de malhas de elementos de Be?zier simplodais de\n\ndimenso?es e graus arbitra?rios. A generalidade do nu?mero de dimenso?es destes elementos\n\npermite que a malha descreva na?o apenas a geometria do modelo mas tambe?m um conjunto\n\narbitra?rio de propriedades f??sicas do seu interior.\n\nDentre as caracter??sticas originais da BezEl, destacamos o conceito do tipo de bloco\n\ne a distinc?a?o entre para?metros internos e externos, que permitem representar de forma\n\necono?mica malhas regulares e semi-regulares com blocos de graus elevados. Outras contri-\n\nbuic?o?es originais desta biblioteca sa?o rotinas gene?ricas para extrac?a?o de facetas, repara-\n\nmetrizac?a?o, elevac?a?o de grau e diferenciac?a?o. A biblioteca BezEl tambe?m proporciona\n\na asserc?a?o de restric?o?es lineares arbitra?rias sobre os para?metros dos blocos, que podem\n\nser usadas, por exemplo, para editar a geometria do modelo mantendo a suavidade de\n\ninterfaces.\n\n135\n\n\n\n136 Cap??tulo 16. Concluso?es\n\nValidamos a biblioteca implementando um editor interativo da geometria de um mo-\n\ndelo geolo?gico bidimensional (apresentado no cap??tulo 14).\n\nOutra contribuic?a?o original desta tese e? uma estrate?gia para trac?amento eficiente de\n\nraios em modelos descritos por malhas de elementos de Be?zier simploidais (descrita no\n\ncap??tulo 15) . Esta metodologia consiste em efetuar a integrac?a?o das equac?o?es do raio em\n\ntermos das coordenadas locais de cada bloco em vez das coordenadas X, Y e Z do espac?o\n\nf??sico. Desta forma, evita-se a inversa?o nume?rica das func?o?es de geometria do bloco. Ale?m\n\ndisso, a detecc?a?o da intersecc?a?o do raio com a fronteira do bloco torna-se uma operac?a?o\n\ntrivial.\n\n\n\nRefere?ncias Bibliogra?ficas\n\n[1] P. Be?zier. Numerical control; mathematics and applications [by] P. Be?zier. Appendi-\n\nxes by A. R. Forrest. Translated by A. R. Forrest and Anne F. Pankhurst. J. Wiley\n\nLondon, New York, 1972.\n\n[2] T.N. Bishop. Tomographic determination of velocity and depth in laterally varying\n\nmedia. Geophysics, 50:903\u2013923, 1985.\n\n[3] I Brueckner. Construction of Be?zier points of quadrilaterals from those of triangles.\n\nComputer Aided Design, 1980.\n\n[4] S.A. Coons. Surface patches and b-splines curves. In in Computer Aided Geometric\n\nDesign (ed. Barnhill and Riesenfeld), pages 1\u201316. Academic Press, 1974.\n\n[5] C. DeBoor. B\u2013form basics. In in (Geometric Modeling: Algorithms and New\n\nTrends),(ed. Farin), pages 131\u2013148. SIAM Publications, 1987.\n\n[6] T.D. DeRose, R.N. Goldman, H. Hagen, and S. Mann. Functional composition algo-\n\nrithms via blossoming. ACM Trans. Graph., 12(2):113\u2013135, 1993.\n\n[7] R.B. Devloo. Pz: An object oriented environment for scientific programming. Com-\n\nputer Methods in Applied Mechanics and Engineering, 150:133\u2013153, 1997.\n\n[8] G. Farin. Be?zier polynomials over triangles and the construction of piecewise CR\n\npolynomials. Technical Report TR91, Brunel University, 1980.\n\n[9] G. Farin. Curves and Surfaces for Computer Aided Geometric Design. Academic\n\nPress, third edition, 1992.\n\n[10] L. Freitas, J. Stolfi, and M. Tygel. Fast ray tracing in cellular models. In Expanded\n\nAbstracts, 10th International Congress of the Geophysics Brazillian Society, 2007.\n\n[11] R Goldman and D. Filip. Conversion from Be?zier rectangles to Be?zier triangles.\n\nComputer Aided Design, 1987.\n\n137\n\n\n\n138 REFERE?NCIAS BIBLIOGRA?FICAS\n\n[12] K. Hoffman and R. Kunze. Linear Algebra. Prentice Hall, second edition, 1971.\n\n[13] S.-M. Hu. Conversion of a triangular Be?zier patch into three rectangular Be?zier\n\npatches. Computer Aided Geometric Design, 13(3):219\u2013226, 1996.\n\n[14] S.-M. Hu. Conversion between triangular and rectangular Be?zier patches. Comput.\n\nAided Geom. Des., 18(7):667\u2013671, 2001.\n\n[15] W. Kaplan. Advanced Calculus. Addison-Wesley, 1993.\n\n[16] M. Konig. Cell ray tracing for smooth, isotropic media: a new concept based on a\n\ngeneralized analytic solution. Geophysical Journal International, 1995.\n\n[17] D. Lasser. Tensor product Be?zier surfaces on triangle Be?zier surfaces. Computer\n\nAided Geometric Design, 19(8):625\u2013643, 2002.\n\n[18] D. Lasser. Triangular subpatches of rectangular Be?zier surfaces. Comput. Math.\n\nAppl., 55(8):1706\u20131719, 2008.\n\n[19] A.P. Malheiro and J. Stolfi. Finding minimal bases in arbitrary spline spa-\n\nces. In Proceedings of the 22nd Canadian Conference on Computational Geometry\n\n(CCCG2010), pages 135\u2013138, 2010.\n\n[20] J. L. Mallet, C. Sword, and W. Velten. Computation of smooth second derivatives on\n\nirregular triangulated surfaces. In Expanded Abstracts, 67th SEG Annual Meeting,\n\npages 1715\u20131718, 1997.\n\n[21] Z. Meng and N. Bleistein. Wavefront construction (WF) ray tracing in tetrahedral\n\nmodels \u2013 application to 3-D traveltime and raypath computations. Technical Report\n\nCWP-251, Center for Wave Phenomena, Colorado School of Mines, 1997.\n\n[22] W.H. Press, B.P. Flannery, S.A. Teukolsky, and W.T. Vetterling. Numerical Recipes:\n\nThe Art of Scientific Computing. Cambridge University Press, 1986.\n\n[23] A. Riskus. Approximation of a cubic Be?zier curve by circular arcs and vice versa.\n\nInformation Tecnology and Control, 35(4):371\u2013378, 2006.\n\n[24] W. Trump and H. Prautzsch. Arbitrarily high degree elevation of Be?zier representa-\n\ntions. Computer Aided Geometric Design, 13(5):387 \u2013 398, 1996.\n\n[25] V. C?erveny?. Seismic Ray Theory. Cambridge University Press, 2001.\n\n[26] V. Vinje, E. Iversen, H. Gj\u00f8ystdal, and K. A?steb\u00f8l. 3D ray modeling by wavefront\n\nconstruction in open models. Geophysics, 64:1912\u20131919, 1999.\n\n\n\nREFERE?NCIAS BIBLIOGRA?FICAS 139\n\n[27] J. Virieux. P-sv wave propagation in heterogeneous media: Velociy-stress finite-\n\ndifference method. Geophysics, 51, 1986.\n\n[28] L. Wang. Estimation of Multi-valued Green\u2019s function by Dynamic Ray tracing and\n\nTrue Amplitude Kirchoff Inversion in 3D-Heterogeneous media. PhD thesis, Center\n\nof Wave Phenomenon, 2000."}]}}}