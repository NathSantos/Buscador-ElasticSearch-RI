{"add": {"doc": {"field": [{"@name": "docid", "#text": "BR-TU.11357"}, {"@name": "filename", "#text": "16633_000737475.pdf"}, {"@name": "filetype", "#text": "PDF"}, {"@name": "text", "#text": "UNIVERSIDADE FEDERAL DO RIO GRANDE DO SUL \n\nINSTITUTO DE INFORM\u00c1TICA \n\nPROGRAMA DE P\u00d3S-GRADUA\u00c7\u00c3O EM COMPUTA\u00c7\u00c3O \n\n \n\n \n\n \n\n \n\n \n\nJEFFERSON LUIZ BOSA \n\n \n\n \n\n \n\n \n\n \n\nSistema Embarcado para a Manuten\u00e7\u00e3o \nInteligente de Atuadores El\u00e9tricos \n\n \n\n \n\n \n\n \n\n \n\n \n\nDisserta\u00e7\u00e3o apresentada como requisito parcial \npara a obten\u00e7\u00e3o do grau de Mestre em Ci\u00eancia \nda Computa\u00e7\u00e3o \n\n \n \nProf. Dr. Marcelo Soares Lubaszewski \nOrientador \n\n \n \n \n \n \n \n \n \n \n\nPorto Alegre, dezembro de 2009.\n\n\n\nCIP \u2013 CATALOGA\u00c7\u00c3O NA PUBLICA\u00c7\u00c3O \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n \n \n\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \nUNIVERSIDADE FEDERAL DO RIO GRANDE DO SUL \nReitor: Prof. Carlos Alexandre Netto \nVice-Reitor: Prof. Rui Vicente Oppermann \nPr\u00f3-Reitor de P\u00f3s-Gradua\u00e7\u00e3o: Prof. Aldo Bolten Lucion \nDiretor do Instituto de Inform\u00e1tica: Prof. Fl\u00e1vio Rech Wagner \nCoordenadora do PPGC: Prof. \u00c1lvaro Freitas Moreira \nBibliotec\u00e1ria-Chefe do Instituto de Inform\u00e1tica: Beatriz Regina Bastos Haro \n\nBosa, Jefferson Luiz \n\nSistema Embarcado para a Manuten\u00e7\u00e3o Inteligente de \nAtuadores El\u00e9tricos / Jefferson Luiz Bosa \u2013 Porto Alegre: \nPrograma de P\u00f3s-Gradua\u00e7\u00e3o em Computa\u00e7\u00e3o, 2009. \n\n169 f.:il. \n\nDisserta\u00e7\u00e3o (mestrado) \u2013 Universidade Federal do Rio Grande \ndo Sul. Programa de P\u00f3s-Gradua\u00e7\u00e3o em Computa\u00e7\u00e3o. Porto \nAlegre, BR \u2013 RS, 2009. Orientador: Marcelo Soares Lubaszewski. \n\n1. Testes On-Line. 2. Toler\u00e2ncia a Falhas. 3. Mapas Auto-\nOrganiz\u00e1veis. 4. Sistema Embarcado. 5. FPGA. 6. Manuten\u00e7\u00e3o. I. \nLubaszewski, Marcelo Soares.  II. T\u00edtulo. \n\n\n\nAGRADECIMENTOS \n\nAgrade\u00e7o em primeiro lugar ao Senhor Jesus pelo dom da vida, salva\u00e7\u00e3o, pelo amor \ndemonstrado e tudo o que aconteceu em minha vida. Tamb\u00e9m dou gra\u00e7as a Deus pelo \ntempo que morei em Porto Alegre, pois foram tempos que jamais me esquecerei.  \n\nEm segundo lugar quero honrar meus pais (Jos\u00e9 Bosa e Elieusa Chagas Bosa) pelo \namor, pelas ora\u00e7\u00f5es, testemunho de vida e por terem me ensinado a andar nos caminhos \nde Deus. Tamb\u00e9m quero honrar meus irm\u00e3os (Estefan Michel Bosa e Ruan Hedpo \nBosa) pelo amor, companheirismo e pelas ora\u00e7\u00f5es. Agrade\u00e7o a Deus todos os dias pela \nvida de voc\u00eas. Agrade\u00e7o a meus av\u00f3s (Helena da Rosa e Ari da Rosa) pelo amor e em \nespecial pelas ora\u00e7\u00f5es e s\u00faplicas. \n\nAgrade\u00e7o aos irm\u00e3os de alian\u00e7a em Cristo (Jackson, Daniel, Fernando e grupo) que \nconheci em Porto Alegre, por terem dedicado suas vidas em andarmos juntos e a formar \na imagem de Cristo em nossas vidas. Tamb\u00e9m agrade\u00e7o aos irm\u00e3os com quem dividi \nmoradia (Mateus, Cristiano, Carlos Eduardo e Marko) por serem pessoas que me \nensinaram a viver como fam\u00edlia de Cristo. E aos demais irm\u00e3os (que s\u00e3o muitos) que \ncongregam na Igreja em Porto Alegre, com quem mantive v\u00ednculo. Dou gra\u00e7as a Deus \npor ter conhecido voc\u00eas. \n\nAgrade\u00e7o aos amigos do laborat\u00f3rio 205 e do Laprot, pela amizade e momentos que \npassamos juntos. \n\nAgrade\u00e7o ao professor Marcelo Lubaszewski, pelo privil\u00e9gio de trabalharmos \njuntos, exemplo de profissional, pela paci\u00eancia e amizade. \n\nAgrade\u00e7o a UFRGS pela oportunidade de estudar nesta universidade e a CAPES \npelo apoio financeiro. \n\n \n\n \n\n \n\n \n\n \n\n \n\n\u201cConfia no Senhor de todo o teu cora\u00e7\u00e3o, e n\u00e3o te estribes no \nteu pr\u00f3prio entendimento. Reconhece-o em todos os teus \n\ncaminhos e Ele endireitar\u00e1 as tuas veredas\u201d Prov\u00e9rbios 4:5-6 \n\n \n\n\n\n \n\n\n\nSUM\u00c1RIO \n\nLISTA DE ABREVIATURAS E SIGLAS ............................................................ 8 \n\nLISTA DE FIGURAS .......................................................................................... 9 \n\nLISTA DE TABELAS ....................................................................................... 11 \n\nRESUMO.......................................................................................................... 13 \n\nABSTRACT...................................................................................................... 14 \n\n1 INTRODU\u00c7\u00c3O ........................................................................................... 15 \n\n1.1 Contexto e motiva\u00e7\u00e3o .......................................................................................... 15 \n1.2 Objetivos............................................................................................................... 16 \n1.3 Contribui\u00e7\u00f5es ....................................................................................................... 17 \n1.4 Organiza\u00e7\u00e3o do trabalho .................................................................................... 18 \n\n2 MANUTEN\u00c7\u00c3O INTELIGENTE ................................................................. 21 \n\n2.1 Introdu\u00e7\u00e3o ............................................................................................................ 21 \n2.2 An\u00e1lise dos Custos Envolvidos na Manuten\u00e7\u00e3o................................................ 23 \n2.3 Estrat\u00e9gias de Manuten\u00e7\u00e3o................................................................................. 25 \n2.3.1 Manuten\u00e7\u00e3o Corretiva ........................................................................................ 26 \n2.3.2 Manuten\u00e7\u00e3o Preventiva ...................................................................................... 27 \n2.3.3 Manuten\u00e7\u00e3o Preditiva ......................................................................................... 28 \n2.3.4 Manuten\u00e7\u00e3o Proativa .......................................................................................... 30 \n2.4 Sistema de Manuten\u00e7\u00e3o Inteligente ................................................................... 32 \n2.4.1 Metodologia de Manuten\u00e7\u00e3o Baseada na Condi\u00e7\u00e3o (CBM) .............................. 33 \n2.4.2 Arquitetura OSA-CBM ...................................................................................... 36 \n2.4.3 Watchdog Agent \u2122 ............................................................................................ 37 \n2.5 Estudo de Caso: Transporte de Combust\u00edveis para Petrobras ....................... 39 \n2.6 Resumo do Cap\u00edtulo ............................................................................................ 42 \n\n3 DETEC\u00c7\u00c3O, DIAGN\u00d3STICO E PREDI\u00c7\u00c3O DE FALHAS ........................ 45 \n\n3.1 Introdu\u00e7\u00e3o ............................................................................................................ 45 \n3.2 Defini\u00e7\u00f5es e Conceitos de Testes e Toler\u00e2ncia a Falhas ................................... 46 \n3.2.1 Fun\u00e7\u00e3o do sistema, comportamento, estrutura e servi\u00e7o .................................... 46 \n3.2.2 Defeito, falha e erro ............................................................................................ 46 \n3.2.3 Atributos de dependabilidade ............................................................................. 47 \n3.2.4 T\u00e9cnicas para alcan\u00e7ar dependabilidade............................................................. 47\n\n\n\n3.2.5 Amea\u00e7as \u00e0 dependabilidade................................................................................ 48 \n3.3 Detec\u00e7\u00e3o e Diagn\u00f3stico de Falhas....................................................................... 52 \n3.3.1 Processo para DDF em uma aplica\u00e7\u00e3o gen\u00e9rica................................................. 52 \n3.3.2 Fundamentos de um Sistema de DDF ................................................................ 54 \n3.3.3 Processamento de Dados do Hist\u00f3rico ............................................................... 54 \n3.3.4 Caracter\u00edsticas desej\u00e1veis em um Sistema de DDF............................................ 55 \n3.4 Detec\u00e7\u00e3o, Diagn\u00f3stico e Predi\u00e7\u00e3o de Falhas...................................................... 56 \n3.4.1 Processo de DDPF para uma aplica\u00e7\u00e3o gen\u00e9rica................................................ 56 \n3.5 SOM \u2013 Mapas Auto-Organiz\u00e1veis de Kohonen................................................ 59 \n3.5.1 Fundamentos....................................................................................................... 60 \n3.5.2 Algoritmo de treinamento................................................................................... 64 \n3.5.3 Propriedades do mapa de caracter\u00edsticas ............................................................ 66 \n3.5.4 Interpreta\u00e7\u00e3o do resultado do SOM.................................................................... 67 \n3.6 Mapa Temporal de Kohonen.............................................................................. 69 \n3.6.1 Conceitos b\u00e1sicos de s\u00e9ries temporais................................................................ 70 \n3.6.2 Algoritmo de Treinamento ................................................................................. 71 \n3.6.3 Algoritmo de Teste ............................................................................................. 72 \n3.6.4 Resultados do TKM............................................................................................ 73 \n3.6.5 Compara\u00e7\u00e3o entre o SOM e TKM...................................................................... 74 \n3.7 Motiva\u00e7\u00e3o de usar o SOM para Analisar Falhas ............................................. 74 \n3.7.1 Detectar falhas .................................................................................................... 75 \n3.7.2 Diagnosticar falha............................................................................................... 77 \n3.7.3 Predi\u00e7\u00e3o e Monitoramento do comportamento .................................................. 80 \n3.8 Resumo do Cap\u00edtulo ............................................................................................ 83 \n\n4 PROPOSTA DE PROT\u00d3TIPO DE UM SISTEMA DE MANUTEN\u00c7\u00c3O \nINTELIGENTE PARA ATUADORES EL\u00c9TRICOS ......................................... 85 \n\n4.1 Introdu\u00e7\u00e3o ............................................................................................................ 85 \n4.2 Proposta do Sistema para Manuten\u00e7\u00e3o Inteligente.......................................... 86 \n4.2.1 Algoritmos base do SOM ................................................................................... 91 \n4.2.2 Detec\u00e7\u00e3o de Anormalidade................................................................................. 92 \n4.2.3 Diagn\u00f3stico de Falha .......................................................................................... 94 \n4.2.4 Predi\u00e7\u00e3o do Comportamento .............................................................................. 95 \n4.3 Projeto para Simula\u00e7\u00f5es do SOM em Software................................................ 97 \n4.4 Projeto do SOM em Hardware ........................................................................... 99 \n4.4.1 Arquitetura do Hardware do SOM................................................................... 100 \n4.4.2 Resultados de Projeto do Hardware do SOM .................................................. 105 \n4.5 Sistema Embarcado para Manuten\u00e7\u00e3o Inteligente ........................................ 107 \n4.5.1 Hardware do Sistema Embarcado .................................................................... 108 \n4.5.2 Software do Sistema Embarcado ...................................................................... 114 \n4.6 Resumo do Cap\u00edtulo .......................................................................................... 124 \n\n5 EXPERIMENTOS E RESULTADOS ........................................................ 127 \n\n5.1 Introdu\u00e7\u00e3o .......................................................................................................... 127 \n5.2 Metodologia dos Experimentos ........................................................................ 128 \n5.3 Estudo de Caso................................................................................................... 130 \n5.4 Modelo para Simula\u00e7\u00e3o .................................................................................... 131 \n5.4.1 Modelo Matem\u00e1tico.......................................................................................... 133 \n5.5 Inje\u00e7\u00e3o de Falhas ............................................................................................... 134 \n5.6 Treinamento das Redes Neurais....................................................................... 137\n\n\n\n5.6.1 Treinamento para experimento em software .................................................... 138 \n5.6.2 Treinamento para experimento no prot\u00f3tipo em hardware.............................. 139 \n5.7 Resultados para experimentos em software..................................................... 140 \n5.7.1 Detec\u00e7\u00e3o de Anormalidades ............................................................................. 140 \n5.7.2 Diagn\u00f3stico de Falhas....................................................................................... 141 \n5.7.3 Predi\u00e7\u00e3o e Monitoramento de Falhas ............................................................... 143 \n5.8 Resultados para Experimento no Prot\u00f3tipo em Hardware ............................ 146 \n5.9 Resumo do Cap\u00edtulo .......................................................................................... 147 \n\n6 CONCLUS\u00d5ES E TRABALHOS FUTUROS ........................................... 151 \n\nREFER\u00caNCIAS.............................................................................................. 155 \n\nANEXO .......................................................................................................... 163 \n\n\n\nLISTA DE ABREVIATURAS E SIGLAS \n\nAR Autoregressive Model \n\nARMA Autoregressive Moving Model \n\nBMU (Best-Matching Unit) Neur\u00f4nio Vencedor \n\nBRAM Block RAM \n\nCBM Manuten\u00e7\u00e3o Baseado em Condi\u00e7\u00e3o \n\nCNCO Centro Nacional de Controle Operacional da Petrobras \n\nCreduto Centro Nacional de Reparo de Dutos da Petrobras \n\nCTDUT Centro de Tecnologia de Dutos da Petrobras \n\nFFT Fast Fourier Trnasform \n\nFPGA Field Programmable Gate Array \n\nIHM Interface Homem-M\u00e1quina \n\nIMS Center Center for Intelligent Maintenance Systems \n\nMMU Memory Management Unit \n\nOSA-CBM Open Systems Architecture for Condition-Based Maintenance \n\nPCA Principal Component Analysis \n\nSCADA Supervisory Control and Data Aquisition \n\nSistema DDF Sistemas de Detec\u00e7\u00e3o e Diagn\u00f3stico de Falhas \n\nSistema DDPF Sistemas de Detec\u00e7\u00e3o, Diagn\u00f3stico e Predi\u00e7\u00e3o de Falhas \n\nSMI Sistema de Manuten\u00e7\u00e3o Inteligente \n\nSOE Sistema Operacional Embarcado \n\nSOM (Self-Organizing Maps) Mapas Auto-Organiz\u00e1veis \n\nSTM (Short-term memory) Mem\u00f3ria de Curto Prazo \n\nTKM (Temporal Kohonen Maps) Mapa Temporal de Kohonen \n\nUFRGS Universidade Federal do Rio Grande do Sul \n\nU-Matrix (Unified Distance Matrix) Matriz de Dist\u00e2ncia Unificada \n\nVHDL Very High Speed Integrated Circuit Hardware Description Language \n\nWA Watchdog Agent \n\n\n\nLISTA DE FIGURAS \n\nFigura 2.1: Gr\u00e1fico do custo em rela\u00e7\u00e3o ao n\u00edvel de manuten\u00e7\u00e3o adotado. ................... 24 \nFigura 2.3: Estrat\u00e9gias de manuten\u00e7\u00e3o. .......................................................................... 25 \nFigura 2.4: Arquitetura em camadas do padr\u00e3o OSA-CBM. ......................................... 36 \nFigura 2.5: Mapa de dutos e terminais da Transpetro no Brasil..................................... 40 \nFigura 2.6: Exemplos dos dutos dentro de uma refinaria. .............................................. 42 \nFigura 2.7: Exemplo de v\u00e1lvulas e atuadores utilizados em refinarias e terminais........ 42 \nFigura 3.1: Formas de manuten\u00e7\u00e3o segundo . ................................................................ 50 \nFigura 3.2: Mecanismo de propaga\u00e7\u00e3o do erro . ............................................................ 52 \nFigura 3.3: Estrutura geral de um Sistema Autom\u00e1tico de DDF ................................... 53 \nFigura 3.4: Sistema de Detec\u00e7\u00e3o, Diagn\u00f3stico e Predi\u00e7\u00e3o de Falhas (DDPF) .............. 57 \nFigura 3.5: Modelo de aprendizado supervisionado....................................................... 59 \nFigura 3.6: Modelo de aprendizado n\u00e3o-supervisionado................................................ 59 \nFigura 3.7: Arquitetura da rede neural SOM. ................................................................. 61 \nFigura 3.8: Processo de adapta\u00e7\u00e3o dos pesos sin\u00e1pticos. ............................................... 64 \nFigura 3.9: Ilustra\u00e7\u00e3o do c\u00e1lculo do erro de quantiza\u00e7\u00e3o. .............................................. 65 \nFigura 3.10: Exemplo de treinamento para os neu\u00f4nios em \u00e9pocas diferentes. ............. 68 \nFigura 3.11: Exemplo de visualiza\u00e7\u00e3o pela U-Matrix .................................................... 69 \nFigura 3.12: Visualiza\u00e7\u00e3o da trajet\u00f3ria dos neur\u00f4nios vencedores ................................ 73 \nFigura 4.1: Vis\u00e3o geral do SMI para Atuadores El\u00e9tricos.............................................. 87 \nFigura 4.2: Composi\u00e7\u00e3o interna das partes do SMI para Atuadores El\u00e9tricos ............... 88 \nFigura 4.3: Composi\u00e7\u00e3o do Banco de Conhecimento ou Hist\u00f3rico. .............................. 89 \nFigura 4.4: Partes internas que comp\u00f5es o Processo de DDPF ...................................... 90 \nFigura 4.5: Algoritmo de c\u00e1lculo da Dist\u00e2ncia Euclidiana (D). .................................... 92 \nFigura 4.6: Algoritmo de recupera\u00e7\u00e3o (teste) do SOM .................................................. 92 \nFigura 4.7: Vis\u00e3o geral do algoritmo de detec\u00e7\u00e3o usando o SOM. ................................ 93 \nFigura 4.8: Vis\u00e3o geral do algoritmo de diagn\u00f3stico usando o SOM............................. 94 \nFigura 4.9: Vis\u00e3o geral do algoritmo de predi\u00e7\u00e3o usando o TKM. ................................ 96 \nFigura 4.10: Ferramenta de simula\u00e7\u00e3o para detec\u00e7\u00e3o e diagn\u00f3stico de falhas. .............. 99 \nFigura 4.11: Fluxo de projeto de um sistema digital em FPGA. .................................. 100 \nFigura 4.12: Vis\u00e3o geral da estrutura de projeto em hardware do algoritmo de teste . 101 \nFigura 4.13: Entradas e sa\u00eddas do hardware do algoritmo de teste do SOM. .............. 101 \nFigura 4.14: Parte operativa para o c\u00e1lculo da Dist\u00e2ncia Euclidiana. .......................... 102 \nFigura 4.15: M\u00e1quina de Estados para o controle do c\u00e1lculo da Dist\u00e2ncia Euclidiana.102 \nFigura 4.16: Parte operativa do algoritmo de teste do SOM. ....................................... 103 \nFigura 4.17: Armazenamento dos pesos sin\u00e1pticos de cada neur\u00f4nio na BRAM. ....... 103 \nFigura 4.18: M\u00e1quina de Estados para o algoritmo de teste do SOM. ......................... 104 \nFigura 4.19: Simula\u00e7\u00e3o temporal do circuito do SOM e tempo de execu\u00e7\u00e3o. ............. 106 \nFigura 4.20: Placa de desenvolvimento Digilent Virtex-2 PRO. ................................. 110\n\n\n\nFigura 4.21: Arquitetura do sistema embarcado para projetar o SMI. ......................... 110 \nFigura 4.22: Parte operativa do wrapper de integra\u00e7\u00e3o do som_core ao OPB ............ 112 \nFigura 5.1: Vis\u00e3o geral da v\u00e1lvula e do atuador adotado nos experimentos. ............... 131 \nFigura 5.2: Principais partes do atuador el\u00e9trico. ......................................................... 133 \nFigura 5.3: Ferramenta de simula\u00e7\u00e3o para experimentos na v\u00e1lvula. .......................... 134 \nFigura 5.4: Sa\u00edda do simulador para o sinal de torque ................................................. 136 \nFigura 5.5: Sa\u00edda do simulador para o sinal de posi\u00e7\u00e3o do obturador.......................... 137 \nFigura 5.6: Modelo de treinamento para experimentos em software. .......................... 138 \nFigura 5.7: Modelo de treinamento para experimentos no sistema embarcado. .......... 139 \nFigura 5.8: Resultado de Detec\u00e7\u00e3o de Anormalidades para falha em K2..................... 141 \nFigura 5.9: Resultado de Detec\u00e7\u00e3o de Anormalidades para falha em Km. ................... 141 \nFigura 5.10: Visualiza\u00e7\u00e3o do SOM treinado para diagn\u00f3stico ..................................... 142 \nFigura 5.11: Resultado de diagn\u00f3stico de falhas para os dados de testes..................... 142 \nFigura 5.12: Visualiza\u00e7\u00e3o do TKM treinado para monitoramento............................... 143 \nFigura 5.13: Visualiza\u00e7\u00e3o da trajet\u00f3ria para TKM no caso de teste K2. ...................... 144 \nFigura 5.14: Visualiza\u00e7\u00e3o da trajet\u00f3ria para TKM no caso de teste Km. ..................... 145 \nFigura 5.15: Screenshot da ferramenta XPS da Xilinx................................................. 147 \nFigura 5.16: Screenshot da execu\u00e7\u00e3o de um programa de teste ................................... 148 \nFigura 5.17: Screenshot da execu\u00e7\u00e3o do programa para gerar os resultados ............... 148 \n\n\n\nLISTA DE TABELAS \n\nTabela 3.1: Compara\u00e7\u00e3o entre predi\u00e7\u00e3o e detec\u00e7\u00e3o de falhas. ....................................... 58 \nTabela 3.2: Compara\u00e7\u00e3o entre SOM e TKM.................................................................. 74 \nTabela 4.1: Especifica\u00e7\u00e3o do SOM treinado. ............................................................... 105 \nTabela 4.2: Resultados de \u00e1rea do circuito obtidos na s\u00edntese. .................................... 105 \nTabela 4.3: Resultados de desempenho do circuito obtidos na s\u00edntese. ....................... 106 \nTabela 4.4: Resultados de pot\u00eancia do circuito do SOM ap\u00f3s mapeamento................ 106 \nTabela 4.5: Resultados de \u00e1rea total ocupada pelo sistema embarcado no FPGA. ...... 111 \nTabela 4.6: Resultados de \u00e1rea do hardware do SOM obtidos na s\u00edntese.................... 113 \nTabela 4.7: Fun\u00e7\u00f5es implementadas em linguagem C do device driver. ..................... 121 \nTabela 5.1: Configura\u00e7\u00e3o dos par\u00e2metros para inje\u00e7\u00e3o de falhas. ............................... 136 \nTabela 5.2:  Diferen\u00e7a da m\u00e1xima amostra entre hardware e software ....................... 146 \n\n\n\n \n\n\n\nRESUMO \n\nO elevado custo de manuten\u00e7\u00e3o nos ambientes industriais motivou pesquisas de \nnovas t\u00e9cnicas para melhorar as a\u00e7\u00f5es de reparos. Com a evolu\u00e7\u00e3o tecnol\u00f3gica, \nprincipalmente da eletr\u00f4nica, que proporcionou o uso de sistemas embarcados para \nmelhorar as atividades de manuten\u00e7\u00e3o, estas agregaram intelig\u00eancia e evolu\u00edram para \numa manuten\u00e7\u00e3o pr\u00f3-ativa. Atrav\u00e9s de ferramentas de processamento de sinais, \nintelig\u00eancia artificial e toler\u00e2ncia a falhas, surgiram novas abordagens para os sistemas \nde monitoramento a servi\u00e7o da equipe de manuten\u00e7\u00e3o. Os ditos sistemas de manuten\u00e7\u00e3o \ninteligente, cuja tarefa \u00e9 realizar testes em funcionamento (on-line) nos equipamentos \nindustriais, promovem novos modelos de confiabilidade e disponibilidade. Tais sistemas \ns\u00e3o baseados nos conceitos de toler\u00e2ncia a falhas, e visam detectar, diagnosticar e \npredizer a ocorr\u00eancia de falhas. Deste modo, fornece-se aos engenheiros de manuten\u00e7\u00e3o \na informa\u00e7\u00e3o antecipada do estado de comportamento do equipamento antes mesmo \ndeste manifestar uma falha, reduzindo custos, aumentando a vida \u00fatil e tornando \nprevis\u00edvel o reparo. Para o desenvolvimento do sistema de manuten\u00e7\u00e3o inteligente \nobjeto deste trabalho, foram estudadas t\u00e9cnicas de intelig\u00eancia artificial (redes neurais \nartificiais), t\u00e9cnicas de projeto de sistemas embarcados e de prototipa\u00e7\u00e3o em \nplataformas de hardware. No presente trabalho, a rede neural Mapas Auto-Organiz\u00e1veis \nfoi adotada como ferramenta base para detec\u00e7\u00e3o e diagn\u00f3stico de falhas. Esta foi \nprototipada numa plataforma de sistema embarcado baseada na tecnologia FPGA (Field \nProgrammable Gate Array). Como estudo de caso, uma v\u00e1lvula el\u00e9trica utilizada em \ndutos para transporte de petr\u00f3leo foi definida como aplica\u00e7\u00e3o alvo dos experimentos. \nAtrav\u00e9s de um modelo matem\u00e1tico, um conjunto de dados representativo do \ncomportamento da v\u00e1lvula foi simulado e utilizado como entrada do sistema proposto. \nEstes dados visam o treinamento da rede neural e visam fornecer casos de teste para \nexperimenta\u00e7\u00e3o no sistema. Os experimentos executados em software validaram o uso \nda rede neural como t\u00e9cnica para detec\u00e7\u00e3o e diagn\u00f3stico de falhas em v\u00e1lvulas el\u00e9tricas. \nPor fim, tamb\u00e9m realizou-se experimentos a fim de validar o projeto do sistema \nembarcado, comparando-se os resultado obtidos com este aos resultados obtidos a partir \nde testes em software. Os resultados revelam a escolha correta do uso da rede neural e o \ncorreto projeto do sistema embarcado para desempenhar as tarefas de detec\u00e7\u00e3o e \ndiagn\u00f3stico de falhas em v\u00e1lvulas el\u00e9tricas.  \n\n \n\n \n\n \n\nPalavras-Chave: testes on-line, toler\u00e2ncia a falhas, mapas auto-organiz\u00e1veis, sistema \nembarcado, FPGA, manuten\u00e7\u00e3o.  \n\n\n\nEmbedded Systems for Intelligent Maintenance of Electrical Actuators \n\nABSTRACT \n\nThe high costs of maintenance in industrial environments have motivated research for \nnew techniques to improve repair activities. The technological progress, especially in \nthe electronics field, has provided for the use of embedded systems to improve repair, \nby adding intelligence to the system and turning the maintenance a proactive activity. \nThrough tools like signal processing, artificial intelligence and fault-tolerance, new \napproaches to monitoring systems have emerged to serve the maintenance staff, leading \nto new models of reliability and availability. The main goal of these systems, also called \nintelligent maintenance systems, is to perform in-operation (on-line) test of industrial \nequipments. These systems are built based on fault-tolerance concepts, and used for the \ndetection, the diagnosis and the prognosis of faults. They provide the maintenance \nengineers with information on the equipment behavior, prior to the occurrence of \nfailures, reducing maintenance costs, increasing the system lifetime and making it \npossible to schedule repairing stops. To develop the intelligent maintenance system \naddressed in this dissertation, artificial intelligence (neural networks), embedded \nsystems design and hardware prototyping techniques were studied. In this work, the \nneural network Self-Organizing Maps (SOM) was defined as the basic tool for the \ndetection and the diagnosis of faults. The SOM was prototyped in an embedded system \nplatform based on the FPGA technology (Field Programmable Gate Array). As a case \nstudy, the experiments were performed on an electric valve used in a pipe network for \noil transportation. Through a mathematical model, a data set representative of the valve \nbehavior was obtained and used as input to the proposed maintenance system. These \ndata were used for neural network training and also provided test cases for system \nmonitoring. The experiments were performed in software to validate the chosen neural \nnetwork as the technique for the detection and diagnosis of faults in the electrical valve. \nFinally, experiments to validate the embedded system design were also performed, so as \nto compare the obtained results to those resulting from the software tests. The results \nshow the correct choice of the neural network and the correct embedded systems design \nto perform the activities for the detection and diagnosis of faults in the electrical valve. \n\n \n\n \n\n \n\n \n\nKeywords: on-line test, fault-tolerance, self-organizing maps, embedded systems, \nFPGA, maintenance.  \n\n\n\n1 INTRODU\u00c7\u00c3O \n\nOs equipamentos presentes em processos industriais, \u00e0 medida que s\u00e3o utilizados, \ntornam-se suscet\u00edveis \u00e0 a\u00e7\u00e3o da degrada\u00e7\u00e3o: desgaste, corros\u00e3o, rachaduras, danos \ncausados por operadores entre outras anomalias que podem contribuir para a \ndegrada\u00e7\u00e3o. Caso os reparos n\u00e3o sejam feitos, apresentar\u00e3o falhas que afetam toda a \ncadeia produtiva, tornando os equipamentos incapazes de desempenharem sua fun\u00e7\u00e3o \ncom efici\u00eancia (LEE, JAY, 2003). \n\nA manuten\u00e7\u00e3o consiste em uma s\u00e9rie de t\u00e9cnicas, ou a\u00e7\u00f5es, para restabelecer (ou \nreparar) os equipamentos. Tais medidas s\u00e3o tomadas principalmente com a inten\u00e7\u00e3o de \ncorrigir os danos provocados pela degrada\u00e7\u00e3o, de manter o equipamento em \nfuncionamento e de reduzir a manifesta\u00e7\u00e3o de falhas. \n\nAs estrat\u00e9gias de manuten\u00e7\u00e3o podem ser divididas em quatro grupos: manuten\u00e7\u00e3o \ncorretiva (a\u00e7\u00f5es paliativas e corretivas), manuten\u00e7\u00e3o preventiva (a\u00e7\u00f5es peri\u00f3dicas e \ncurativas), manuten\u00e7\u00e3o preditiva (a\u00e7\u00f5es planejadas e monitoradas) e a manuten\u00e7\u00e3o \nproativa (a\u00e7\u00f5es proativas) (ENDRENYI ET AL., 2001). Elas devem ser aplicadas de \nforma a orientar e planejar os trabalhos desempenhados pela equipe de manuten\u00e7\u00e3o, a \nfim de atingir os objetivos esperados pela empresa, pois est\u00e3o diretamente associadas \naos resultados produtivos que podem afetar a disponibilidade, qualidade dos produtos e \nos custos operacionais. \n\nDevido a novas tecnologias de sensores e sistemas computacionais embarcados, \ntornou-se pratic\u00e1vel avan\u00e7ar para al\u00e9m das estrat\u00e9gias de manuten\u00e7\u00e3o corretiva e \npreventiva na dire\u00e7\u00e3o da manuten\u00e7\u00e3o proativa, tamb\u00e9m chamada de manuten\u00e7\u00e3o \ninteligente. Nessa nova estrat\u00e9gia, pode-se avaliar, com rapidez e precis\u00e3o, os \nindicadores de desempenho, monitorando a condi\u00e7\u00e3o de comportamento dos \nequipamentos e adicionando toler\u00e2ncia a falhas ao sistema, e portanto, possibilitando a \ndetec\u00e7\u00e3o, o diagn\u00f3stico e a predi\u00e7\u00e3o de falhas. \n\nA partir desse ponto, em fun\u00e7\u00e3o da detec\u00e7\u00e3o, do diagn\u00f3stico e da predi\u00e7\u00e3o de falhas \nnos equipamentos, torna-se poss\u00edvel, por exemplo, realizar os reparos de forma \nplanejada em momentos de ociosidade ou de menor uso do equipamento. Se for \nimposs\u00edvel interromper o equipamento, ele pode reconfigurar-se para continuar \noperando, mesmo de maneira degradada, at\u00e9 que as partes defeituosas sejam reparadas.  \n\n1.1 Contexto e motiva\u00e7\u00e3o \nO presente trabalho est\u00e1 inserido no contexto de t\u00e9cnicas de teste e toler\u00e2ncia a \n\nfalhas aplicadas a equipamentos industriais. \u00c9 tratado com base em um estudo de caso \n\n\n\n \n\n \n\n \n\n \n\n16 \n\nsobre uma necessidade da ind\u00fastria de petr\u00f3leo e g\u00e1s natural (Transpetro1, subsidi\u00e1ria de \nlog\u00edstica da Petrobras2) em rela\u00e7\u00e3o a prestar suporte de manuten\u00e7\u00e3o na rede dutovi\u00e1ria. \nEssa rede \u00e9 formada por diversos dutos para transporte dos derivados de petr\u00f3leo, por \nv\u00e1lvulas de controle de fluxo, entre outros equipamentos. \n\nO foco deste trabalho est\u00e1 nos atuadores el\u00e9tricos, que s\u00e3o equipamentos \nmotorizados acoplados \u00e0s v\u00e1lvulas, a fim de automatizar sua opera\u00e7\u00e3o. Esses \nequipamentos est\u00e3o sujeitos \u00e0 degrada\u00e7\u00e3o. Quando ocorrem falhas nos atuadores ou \nv\u00e1lvulas, a empresa Transpetro tem dificuldades em gerenciar a manuten\u00e7\u00e3o. Parte \ndessa dificuldade est\u00e1 ligada ao tamanho continental de suas redes dutovi\u00e1rias e da \ngrande quantidade de atuadores espalhados pela rede, que nesse caso torna a realiza\u00e7\u00e3o \ndas manuten\u00e7\u00f5es preventivas e corretivas muito caras. \n\nDesse modo, esta pesquisa prop\u00f5e a constru\u00e7\u00e3o de um sistema embarcado que seja \nimplantado no sistema eletr\u00f4nico de controle dos atuadores. Este ter\u00e1 a finalidade de \nmonitorar o equipamento em busca de falhas. Quando detectar alguma anormalidade, \nser\u00e1 enviado uma mensagem de alarme para a equipe de manuten\u00e7\u00e3o solicitando a \nrealiza\u00e7\u00e3o de reparos, fornecendo tamb\u00e9m informa\u00e7\u00f5es a respeito do diagn\u00f3stico e \nestimando o tempo restante at\u00e9 a falha. \n\nPara desenvolver esse sistema embarcado, foi preciso estudar as ferramentas de \nintelig\u00eancia artificial que possibilitam atender aos requisitos de toler\u00e2ncia a falhas para \nmonitoramento dos equipamentos. Foi definido pesquisar a rede neural SOM (Mapas \nAuto-Organiz\u00e1veis) (KOHONEN, 2001) como t\u00e9cnica computacional de detec\u00e7\u00e3o, \ndiagn\u00f3stico e predi\u00e7\u00e3o de falhas. Outra motiva\u00e7\u00e3o foi a implementa\u00e7\u00e3o dessa rede \nneural em um prot\u00f3tipo em hardware, a fim de ser um componente do sistema \nembarcado. Desta forma, foi tamb\u00e9m necess\u00e1rio revisar a fundamenta\u00e7\u00e3o te\u00f3rica, \nimplementa\u00e7\u00f5es em softwares e hardware, e estudar t\u00e9cnicas de projeto de sistemas \nembarcados. \n\nA motiva\u00e7\u00e3o principal deste trabalho \u00e9 disponibilizar uma ferramenta que auxilie a \nequipe de manuten\u00e7\u00e3o em realizar as tarefas de manuten\u00e7\u00e3o. Para possibilitar o \nmonitoramento de falhas dos equipamentos e fornecer informa\u00e7\u00f5es precisas para a \ntomada de decis\u00e3o no planejamento da manuten\u00e7\u00e3o. Este trabalho tem relev\u00e2ncia para a \nTranspetro, pois ser\u00e1 aplicado em todas as v\u00e1lvulas e atuadores instalados ao longo de \nsua rede dutovi\u00e1ria.  \n\n1.2 Objetivos  \nO objetivo dessa disserta\u00e7\u00e3o \u00e9 projetar um prot\u00f3tipo de um sistema embarcado que \n\nimplemente t\u00e9cnicas de manuten\u00e7\u00e3o inteligente, utilizando a rede neural SOM como \nferramenta para monitoramento de falhas em atuadores el\u00e9tricos nos dutos da \nTranspetro. No prot\u00f3tipo, ser\u00e1 embarcada a rede neural implementada em hardware \npara fazer detec\u00e7\u00e3o e diagn\u00f3stico de falhas. A partir dessa meta inicial, o presente \ntrabalho atende aos seguintes objetivos espec\u00edficos: \n\na) Apresentar conceitos b\u00e1sicos sobre manuten\u00e7\u00e3o industrial e uma breve \nan\u00e1lise dos problemas da manuten\u00e7\u00e3o que justificam e contextualizam a \n\n                                                 \n1 Site da empresa Transpetro \u2013 www.transpetro.com.br \n2 Site da empresa Petrobras S.A. \u2013 www.petrobras.com.br \n\n\n\n \n\n \n\n \n\n \n\n17 \n\naplica\u00e7\u00e3o da manuten\u00e7\u00e3o inteligente como ferramenta de teste e toler\u00e2ncia a \nfalhas em equipamentos industriais. \n\nb) Apresentar conceitos, caracter\u00edsticas e t\u00e9cnicas de toler\u00e2ncia a falhas para \nrealizar detec\u00e7\u00e3o, diagn\u00f3stico e predi\u00e7\u00e3o de falhas pertencentes ao contexto \ndo presente trabalho. \n\nc) Apresentar conceitos e fundamenta\u00e7\u00e3o te\u00f3rica sobre as redes neurais: SOM \n(Mapas Auto-Organiz\u00e1veis) e TKM (Mapa Temporal de Kohonen), que \nser\u00e3o utilizadas como ferramentas para an\u00e1lise de falhas. \n\nd) Desenvolver experimentos em software do SOM e TKM, a fim de validar \nessas t\u00e9cnicas para os dados do estudo de caso em atuadores el\u00e9tricos. \n\ne) Desenvolver um prot\u00f3tipo em hardware de um sistema embarcado que \nimplemente a manuten\u00e7\u00e3o inteligente, para monitorar em tempo real as \nfalhas em atuadores el\u00e9tricos. Esse prot\u00f3tipo dever\u00e1 ser baseado em l\u00f3gica \nprogram\u00e1vel (FPGA - Field Programmable Gate Array) e utilizar\u00e1 \ndesenvolvimento misto entre hardware e software. \n\nf) Exibir os resultados da an\u00e1lise de falhas em atuadores el\u00e9tricos, considerando \nos experimentos em software e do prot\u00f3tipo em hardware, comparando os \nresultados para validar o projeto do prot\u00f3tipo. \n\nComo objetivo final, do ponto de vista da manuten\u00e7\u00e3o, este trabalho prop\u00f5e uma \nferramenta que forne\u00e7a subs\u00eddios para as equipes de manuten\u00e7\u00e3o a fim de melhorar o \nplanejamento de suas tarefas de reparos nos equipamentos de modo mais eficiente. \nDessa forma, pretende-se alcan\u00e7ar maior confiabilidade no processo industrial, reduzir \ncustos, aumentar disponibilidade, programar com anteced\u00eancia os reparos, reutilizar \npe\u00e7as e evitar maiores danos nos equipamentos.  \n\n1.3 Contribui\u00e7\u00f5es  \nEsta disserta\u00e7\u00e3o traz os seguintes avan\u00e7os e contribui\u00e7\u00f5es t\u00e9cnicas: \n\na) Revis\u00e3o sobre estrat\u00e9gias de manuten\u00e7\u00e3o em plantas industriais e problemas \necon\u00f4micos envolvidos. \n\nb) Revis\u00e3o de t\u00e9cnicas e conceitos de toler\u00e2ncia a falhas para detec\u00e7\u00e3o, \ndiagn\u00f3stico e predi\u00e7\u00e3o de falhas do ponto de vista de sistemas \ncomputacionais. \n\nc) Revis\u00e3o do estado da arte de redes neurais n\u00e3o supervisionadas (SOM) e a \nn\u00e3o supervisionada temporal (TKM). \n\nd) Implementa\u00e7\u00e3o e revis\u00e3o sobre projeto de sistemas embarcados, utilizando \nplataforma FPGA, sistemas operacionais embarcados e software embarcado. \n\ne) Proposta de uma implementa\u00e7\u00e3o da rede neural SOM em hardware em \nplataforma FPGA. \n\nf) Proposta de uma plataforma em sistema embarcado para experimentos, com \nprepara\u00e7\u00e3o futura do prot\u00f3tipo do sistema de manuten\u00e7\u00e3o inteligente a ser \nimplantado em atuadores el\u00e9tricos. \n\ng) Simula\u00e7\u00e3o do prot\u00f3tipo utilizando dados de teste para um conjunto de falhas \ndo atuador. \n\n\n\n \n\n \n\n \n\n \n\n18 \n\nFinalmente, com a revis\u00e3o bibliogr\u00e1fica foi constatado que existem diversos \ntrabalhos acad\u00eamicos que utilizam o SOM como ferramenta de detec\u00e7\u00e3o e diagn\u00f3stico \nde falhas em diversos processos, comprovando a efic\u00e1cia da rede neural nessa fun\u00e7\u00e3o. \nNo entanto, o presente trabalho traz a contribui\u00e7\u00e3o de aplicar essas t\u00e9cnicas em \natuadores el\u00e9tricos, por meio de prototipa\u00e7\u00e3o do SOM em FPGA. Al\u00e9m disso, foi \nestudada tamb\u00e9m a utiliza\u00e7\u00e3o do TKM como ferramenta para predi\u00e7\u00e3o de falhas.  \n\n1.4 Organiza\u00e7\u00e3o do trabalho \nA continuidade deste trabalho est\u00e1 organizada da seguinte forma: \n\n\u2022 Cap\u00edtulo 2: Manuten\u00e7\u00e3o Inteligente \n\nEste cap\u00edtulo descreve, de forma geral, os conceitos relacionados \u00e0 \nmanuten\u00e7\u00e3o industrial, apresentando an\u00e1lise econ\u00f4mica envolvida e as principais \nestrat\u00e9gias de manuten\u00e7\u00e3o adotadas pela ind\u00fastria. A discuss\u00e3o \u00e9 focada na \nmanuten\u00e7\u00e3o inteligente. Por fim, \u00e9 apresentado o contexto do estudo de caso \nadotado. \n\n\u2022 Cap\u00edtulo 3: Detec\u00e7\u00e3o, Diagn\u00f3stico e Predi\u00e7\u00e3o de Falhas \n\nEste cap\u00edtulo apresenta uma revis\u00e3o dos principais fundamentos sobre \ntoler\u00e2ncia a falhas e tem seu foco nas t\u00e9cnicas de detec\u00e7\u00e3o, diagn\u00f3stico e \npredi\u00e7\u00e3o de falhas. \u00c9 apresentado tamb\u00e9m a fundamenta\u00e7\u00e3o te\u00f3rica sobre a rede \nneural SOM e a TKM como ferramentas para se alcan\u00e7ar a toler\u00e2ncia a falhas. \nFinalmente, \u00e9 feita uma revis\u00e3o na literatura de trabalhos correlatos.  \n\n\u2022 Cap\u00edtulo 4: Proposta de Prot\u00f3tipo de um Sistema de Manuten\u00e7\u00e3o \nInteligente para Atuadores El\u00e9tricos \n\nEste cap\u00edtulo detalha a proposta de um sistema de manuten\u00e7\u00e3o inteligente \npara atuadores el\u00e9tricos. Inicialmente, \u00e9 apresentada uma vis\u00e3o geral de cada um \ndos componentes que formam a arquitetura do sistema de manuten\u00e7\u00e3o \ninteligente, os algoritmos para toler\u00e2ncia a falhas e a implementa\u00e7\u00e3o destes em \nsoftware. Em seguida, \u00e9 feito o projeto de implementa\u00e7\u00e3o da rede neural SOM \nem hardware, com base em FPGA, mostrando toda arquitetura, m\u00e1quinas de \nestado e resultados (\u00e1rea, desempenho e consumo de energia). Em \u00faltima etapa, \n\u00e9 visto o projeto do sistema embarcado, que faz uso de uma placa de \ndesenvolvimento para prototipa\u00e7\u00e3o do sistema de manuten\u00e7\u00e3o inteligente. S\u00e3o \napresentados arquitetura, integra\u00e7\u00e3o do hardware do SOM e a plataforma de \nsoftware embarcado adotado.  \n\n\u2022 Cap\u00edtulo 5: Experimentos e Resultados \n\nEste cap\u00edtulo visa relatar os resultados de experimentos realizados utilizando \no prot\u00f3tipo e software implementados neste trabalho. S\u00e3o mostrados a \nmetodologia adotada para realiza\u00e7\u00e3o dos experimentos, o estudo de caso e a \nferramenta para simula\u00e7\u00e3o do modelo matem\u00e1tico do conjunto atuador e v\u00e1lvula. \nA seguir, \u00e9 abordado o modelo para inje\u00e7\u00e3o de falhas no atuador, que faz uso do \nsimulador, e como realizar a prepara\u00e7\u00e3o e o treinamento das redes neurais \ndesenvolvidas no decorrer do trabalho. Por fim, s\u00e3o apresentados os resultados \ndo software para avalia\u00e7\u00e3o do uso da rede neural, considerando as tarefas de \ndetec\u00e7\u00e3o, diagn\u00f3stico e predi\u00e7\u00e3o de falhas. Finalmente, o prot\u00f3tipo \u00e9 \nimplementado em hardware, em uma placa de desenvolvimento, e os resultados \n\n\n\n \n\n \n\n \n\n \n\n19 \n\nobtidos em hardware s\u00e3o comparados com os resultados do software para fim de \nvalida\u00e7\u00e3o do prot\u00f3tipo. \n\n\u2022 Cap\u00edtulo 6: Conclus\u00f5es e Trabalhos Futuros \n\nEste cap\u00edtulo relata as conclus\u00f5es gerais e considera\u00e7\u00f5es finais do presente \ntrabalho, apresentando as limita\u00e7\u00f5es do sistema proposto e discutindo poss\u00edveis \ndesdobramentos e dire\u00e7\u00f5es de trabalhos a serem realizados no futuro. \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n\n\n \n\n \n\n \n\n \n\n\n\n2 MANUTEN\u00c7\u00c3O INTELIGENTE \n\n2.1 Introdu\u00e7\u00e3o \nNo contexto industrial, muitas das tarefas consideradas simples podem ser realizadas \n\npor operadores humanos, por exemplo: a abertura e o fechamento de v\u00e1lvulas ou o \nacionamento e desligamento de equipamentos, etc. Com o avan\u00e7o tecnol\u00f3gico, os \noperadores foram, com o tempo, sendo substitu\u00eddos pela automatiza\u00e7\u00e3o. Esse progresso \ntrouxe enormes benef\u00edcios em v\u00e1rios setores da ind\u00fastria, tais como qu\u00edmico, \npetroqu\u00edmico, siderurgia, energia e saneamento b\u00e1sico. Al\u00e9m disso, aumentou a \ncomplexidade nas plantas industriais.  \n\nEntretanto, uma tarefa de suma import\u00e2ncia \u00e9 a manuten\u00e7\u00e3o dos equipamentos \nindustriais, uma atividade basicamente manual. A manuten\u00e7\u00e3o consiste em uma s\u00e9rie de \nt\u00e9cnicas e medidas de preven\u00e7\u00e3o (para manter os equipamentos em funcionamento), \ncorre\u00e7\u00e3o (com o intuito de restabelecer os equipamentos danificados) e predi\u00e7\u00e3o \n(estimar um tempo at\u00e9 a manifesta\u00e7\u00e3o da falha).  \n\nNesse contexto, ser\u00e1 definido o termo \u201cmanuten\u00e7\u00e3o\u201d como as a\u00e7\u00f5es praticadas com \na inten\u00e7\u00e3o de reparar (corrigir, restabelecer) os danos provocados pela a\u00e7\u00e3o da \ndegrada\u00e7\u00e3o, a fim de manter os equipamentos em pleno funcionamento e com seguran\u00e7a \n(LEE, JAY, 2003).  \n\nUm equipamento est\u00e1 em funcionamento \u201cnormal\u201d quando desempenha as tarefas \n(ou servi\u00e7os) dentro da especifica\u00e7\u00e3o para o qual foi projetado. Um \u201cdefeito\u201d ocorre \nquando as fun\u00e7\u00f5es desempenhadas pelo equipamento se desviam do especificado e pode \nou n\u00e3o afetar a capacidade de desempenhar as tarefas. A \u201cdegrada\u00e7\u00e3o\u201d \u00e9 um conjunto de \nfun\u00e7\u00f5es em situa\u00e7\u00e3o de defeito, em que, mesmo degradado, o equipamento pode \ndesempenhar um subconjunto reduzido de tarefas. Uma \u201cfalha\u201d \u00e9 o estado de \nfuncionamento que impede o equipamento de desempenhar as tarefas especificadas, ou \nseja, n\u00e3o cumpre com a especifica\u00e7\u00e3o final de projeto.  \n\nA tarefa de manuten\u00e7\u00e3o \u00e9 sens\u00edvel a eventos anormais que ocorrem nos \nequipamentos. Quando se detecta um evento anormal na hora correta, \u00e9 poss\u00edvel \ndiagnosticar a origem da causa e, ent\u00e3o, tomar as decis\u00f5es apropriadas para reparos \n(DJURDJANOVIC ET AL., 2003).  \n\nDentro dos ambientes industriais, as tarefas de manuten\u00e7\u00e3o s\u00e3o opera\u00e7\u00f5es rotineiras \ne essenciais para manter a planta em funcionamento. Por isso, deve ser tratada com \nimport\u00e2ncia estrat\u00e9gica dentro da empresa, pois est\u00e1 diretamente vinculada \u00e0 capacidade \nprodutiva da ind\u00fastria, caso contr\u00e1rio pode resultar em custos extras na produ\u00e7\u00e3o. \n\n\n\n \n\n \n\n \n\n \n\n22 \n\nSegundo (ALMEIDA, 2007), os custos de manuten\u00e7\u00e3o correspondem \u00e0 parte \nprincipal dos custos operacionais totais em plantas industriais. Dependendo do ramo da \nind\u00fastria, os custos com manuten\u00e7\u00e3o podem representar entre 15 e 30% do custo de \nprodu\u00e7\u00e3o. Em ind\u00fastrias aliment\u00edcias, os custos m\u00e9dios para manuten\u00e7\u00e3o podem \nalcan\u00e7ar em torno de 15% do custo de produ\u00e7\u00e3o, enquanto que nas ind\u00fastrias \nsider\u00fargicas, de papel e celulose e outras ind\u00fastrias pesadas, a manuten\u00e7\u00e3o chega \nalcan\u00e7ar at\u00e9 30% desses custos.  \n\nDe acordo com (DJURDJANOVIC ET AL., 2003), devido \u00e0 alta competitividade no \nmercado nacional e internacional, as empresas devem fornecer produtos e servi\u00e7os com \na mais alta qualidade poss\u00edvel, com a inten\u00e7\u00e3o de absorver e manter uma posi\u00e7\u00e3o \nfavor\u00e1vel de fatia de mercado. Problemas no fornecimento dos produtos, como atrasos \nou baixa qualidade s\u00e3o praticamente inadmiss\u00edveis pelo mercado. Por exemplo, 1 \nminuto de parada em uma linha de montagem automotiva pode gerar uma perda de \naproximadamente US$ 20.000,00. Por isso, manter uma planta, em funcionamento, sem \na ocorr\u00eancia de paradas, a alta produtividade e qualidade dos produtos finais \u00e9 \nfundamental para as empresas nesse mercado. \n\nO custo decorrente da falta de manuten\u00e7\u00e3o adequada em ind\u00fastrias petroqu\u00edmicas \nnos Estados Unidos consome aproximadamente 20 bilh\u00f5es de d\u00f3lares com perdas \nanuais (VENKATASUBRAMANIAN; RENGASWAMY; YIN; ET AL., 2003). O \ncusto \u00e9 ainda maior quando s\u00e3o inclu\u00eddas situa\u00e7\u00f5es semelhantes as que ocorrem em \noutras \u00e1reas da ind\u00fastria, como a farmac\u00eautica, metal mec\u00e2nica, minera\u00e7\u00e3o, geradoras \nde energia, etc.  \n\nN\u00e3o s\u00f3 as perdas financeiras \u00e9 o principal preju\u00edzo da defici\u00eancia na manuten\u00e7\u00e3o, \nmas tamb\u00e9m muitos acidentes de trabalho podem ocorrer. Um levantamento estat\u00edstico \nfeito por (DE SOUZA; DE FREITAS, 2003) revela que 70% dos acidentes de trabalho \nocorrido em ambientes industriais s\u00e3o causados por erros humanos, e que est\u00e3o \nrelacionados com a falta de manuten\u00e7\u00e3o. Tais eventos podem ocasionar problemas \nsignificativos de import\u00e2ncia econ\u00f4mica, seguran\u00e7a e de impacto ambiental. \n\nConforme (VENKATASUBRAMANIAN; RENGASWAMY; YIN; ET AL., 2003), \na ocorr\u00eancia de grandes cat\u00e1strofes e desastres em ambientes industriais \u00e9 rara, \nentretanto aqueles de pequeno porte s\u00e3o muito comuns, pois ocorrem, pelo menos, uma \nvez ao dia, resultando em pessoas feridas, o que gera um custo de bilh\u00f5es de d\u00f3lares \npara a sociedade todos os anos.  \n\nEnt\u00e3o, \u00e9 imprescind\u00edvel que as empresas estejam atentas \u00e0 manuten\u00e7\u00e3o dos \nprocessos industriais, por meio de melhorias operacionais como fornecer ferramentas \npara auxiliar a equipe de manuten\u00e7\u00e3o, implantar gest\u00e3o de qualidade, aperfei\u00e7oar as \nestrat\u00e9gias e utilizar sistemas autom\u00e1ticos para a detec\u00e7\u00e3o, o diagn\u00f3stico e a predi\u00e7\u00e3o de \nfalhas nos equipamentos (LEE, J. ET AL., 2004).  \n\nNeste cap\u00edtulo, ser\u00e1 apresentada uma nova metodologia para aperfei\u00e7oar as \natividades de manuten\u00e7\u00e3o em plantas industriais. Essa metodologia aplica t\u00e9cnicas de \ntoler\u00e2ncias a falhas, a fim de aumentar a confiabilidade dos equipamentos, uma vez que \npor interm\u00e9dio disso, pode-se elevar os n\u00edveis de produtividade e disponibilidade do \nprocesso produtivo, al\u00e9m de reduzir custos relacionados \u00e0 manuten\u00e7\u00e3o. \n\n\n\n \n\n \n\n \n\n \n\n23 \n\n2.2 An\u00e1lise dos Custos Envolvidos na Manuten\u00e7\u00e3o  \nSegundo (KARDEC; NASCIF, 2001) e (MARCORIN; LIMA, 2003), os custos \n\nenvolvidos com as tarefas de manuten\u00e7\u00e3o geralmente n\u00e3o s\u00e3o vistos como muito \nrelevantes pela maioria das empresas. Em muitos casos, os seus custos s\u00e3o analisados \nisoladamente, o que acaba impedindo a empresa de consider\u00e1-la em sua estrat\u00e9gia, \ncolocando-a em segundo plano ou, mesmo, tratando-a como \u201cum mal necess\u00e1rio\u201d. \n\nEntretanto, a import\u00e2ncia do programa de manuten\u00e7\u00e3o \u00e9 percebida quando se \ncompara seus custos com os originados pela falta da manuten\u00e7\u00e3o.  \n\nUm programa de manuten\u00e7\u00e3o, quando aplicado com efici\u00eancia, pode at\u00e9 reduzir os \ncustos de produ\u00e7\u00e3o. Devido n\u00e3o apenas a redu\u00e7\u00e3o nos custos de reparo da m\u00e1quina, mas \ntamb\u00e9m no tempo de parada da produ\u00e7\u00e3o.  \n\nA fim de se manter e tamb\u00e9m ganhar novos mercados \u00e9 fundamental que a empresa \nesteja em um n\u00edvel elevado de qualidade e produtividade. Essa busca envolve muitas \nvari\u00e1veis, como as estrat\u00e9gias de gest\u00e3o da qualidade, a escolha do melhor sistema \nprodutivo, a capacita\u00e7\u00e3o de recursos humanos, etc. A manuten\u00e7\u00e3o tem um papel \nindispens\u00e1vel para garantir tanto a qualidade quanto a produtividade da empresa. \n\nConforme (KARDEC; NASCIF, 2001), a tarefa de manuten\u00e7\u00e3o deve ser encarada \ncomo fun\u00e7\u00e3o estrat\u00e9gica para obter melhores resultados. Levando a empresa a um n\u00edvel \nsuperior de competitividade do ponto de vista da qualidade e produtividade. \n\nA queda de produ\u00e7\u00e3o \u00e9 percebida com facilidade, pois dependente basicamente do \ndesempenho dos equipamentos. A redu\u00e7\u00e3o da produtividade, em fun\u00e7\u00e3o de paradas, \npode ser pela falta ou inefici\u00eancia de manuten\u00e7\u00e3o. Devido \u00e0 redu\u00e7\u00e3o no desempenho, \nmesmo n\u00e3o ocorrendo uma parada efetiva do processo, pode ocorrer o aumento no \ntempo de produ\u00e7\u00e3o e tamb\u00e9m a queda na qualidade dos produtos.  \n\nA falta de estrat\u00e9gias de manuten\u00e7\u00e3o acarreta queda na capacidade produtiva, \nparadas efetivas e redu\u00e7\u00e3o da disponibilidade do equipamento. Uma estrat\u00e9gia adequada \nde manuten\u00e7\u00e3o deve manter a capacidade e a produtividade da m\u00e1quina em taxas \nnormais de opera\u00e7\u00e3o. Com isso, \u00e9 poss\u00edvel evitar paradas e criar condi\u00e7\u00f5es para \ninterven\u00e7\u00f5es de reparos de forma r\u00e1pida e eficaz no mesmo instante da falha.  \n\nSegundo (MIRSHAWKA; OLMEDO, 1999), os custos gerados pela manuten\u00e7\u00e3o \ns\u00e3o apenas a ponta de um iceberg. Essa ponta vis\u00edvel corresponde aos custos com m\u00e3o \nde obra, ferramentas e instrumentos, material aplicado nos reparos, custo com \ncontrata\u00e7\u00e3o e outros referentes \u00e0 instala\u00e7\u00e3o ocupada pela equipe de manuten\u00e7\u00e3o. No \nentanto, a falta de uma estrat\u00e9gia de manuten\u00e7\u00e3o gera custos adicionais, pois logo \nabaixo da parte vis\u00edvel do iceberg, est\u00e3o os maiores custos que s\u00e3o decorrentes da \nindisponibilidade do equipamento no processo produtivo. \n\nO custo da indisponibilidade \u00e9 respons\u00e1vel pela perda de produ\u00e7\u00e3o, baixa qualidade \ndos produtos, reformula\u00e7\u00e3o da produ\u00e7\u00e3o e penalidades comerciais com poss\u00edveis \nconsequ\u00eancias sobre a imagem da empresa (MIRSHAWKA; OLMEDO, 1999). \n\nNa Figura 2.1, \u00e9 apresentada uma an\u00e1lise propostas por (MIRSHAWKA; OLMEDO, \n1999) que ilustra a rela\u00e7\u00e3o entre o custo de realiza\u00e7\u00e3o de manuten\u00e7\u00e3o e o custo das \nfalhas. Entre os custos decorrentes est\u00e3o: as pe\u00e7as, a m\u00e3o de obra de reparo e, \nprincipalmente, o custo da indisponibilidade do equipamento. \n\n\n\n \n\n \n\n \n\n \n\n24 \n\nEsse gr\u00e1fico revela que investimentos crescentes em manuten\u00e7\u00e3o tendem a reduzir \nos custos decorrentes das falhas (paradas da produ\u00e7\u00e3o) e, por consequ\u00eancia, a diminuir o \ncusto total da manuten\u00e7\u00e3o (soma dos custos de manuten\u00e7\u00e3o com os custos das falhas). \nEntretanto, nota-se no gr\u00e1fico que a partir do n\u00edvel \u00f3timo com investimentos em \nmanuten\u00e7\u00e3o, uma quantidade maior de investimento produz poucos benef\u00edcios para \nreduzir os custos de paradas e acaba elevando o custo total.  \n\n \n\nFigura 2.1: Gr\u00e1fico do custo em rela\u00e7\u00e3o ao n\u00edvel de manuten\u00e7\u00e3o adotado \n(MIRSHAWKA; OLMEDO, 1999). \n\nNa Figura 2.2, s\u00e3o apresentados os resultados para o c\u00e1lculo do ponto \u00f3timo de \ndisponibilidade em rela\u00e7\u00e3o ao lucro, estudado por (MURTY; NAIKAN, 1995). O \ngr\u00e1fico mostra que a busca por um n\u00edvel de 100% de disponibilidade (falhas em zero) \nrequer gastos cada vez maiores com manuten\u00e7\u00e3o, causando a redu\u00e7\u00e3o nos lucros.  \n\nPor isso, o grande desafio na gest\u00e3o da manuten\u00e7\u00e3o \u00e9 encontrar um ponto \u00f3timo de \ndisponibilidade, em que o custo da manuten\u00e7\u00e3o esteja em um n\u00edvel capaz de gerar o \nm\u00e1ximo de lucros. Desse modo, a manuten\u00e7\u00e3o deve garantir a produtividade e o lucro \ncom o menor custo poss\u00edvel. \n\n \n\nFigura 2.2: Gr\u00e1fico da rela\u00e7\u00e3o entre o lucro e disponibilidade (MURTY; NAIKAN, \n1995).  \n\nEm (KARDEC; NASCIF, 2001) os custos da manuten\u00e7\u00e3o s\u00e3o classificados em tr\u00eas \nformas: \n\n\n\n \n\n \n\n \n\n \n\n25 \n\n\u2022 Custos diretos: s\u00e3o utilizados para manuten\u00e7\u00e3o dos equipamentos em \nopera\u00e7\u00e3o, por exemplo, inspe\u00e7\u00f5es regulares de lubrifica\u00e7\u00e3o, custo de reparos \nou revis\u00f5es, custos de parada da produ\u00e7\u00e3o para reparos, servi\u00e7os de reforma \nou moderniza\u00e7\u00e3o. Muitos desses custos est\u00e3o diretamente ligados \u00e0 estrat\u00e9gia \nde manuten\u00e7\u00e3o adotada.  \n\n\u2022 Custos de perda de produ\u00e7\u00e3o: s\u00e3o oriundos da perda de produ\u00e7\u00e3o, causados \npela falha do equipamento principal e por n\u00e3o ter um de reserva para manter \na unidade produzindo, ou pela falha do equipamento causada por uma a\u00e7\u00e3o \nimpr\u00f3pria da manuten\u00e7\u00e3o. \n\n\u2022 Custos indiretos: s\u00e3o relacionados com a estrutura gerencial e de apoio \nadministrativo, por exemplo, custos com an\u00e1lises e estudos de melhorias, \nengenharia de manuten\u00e7\u00e3o e supervis\u00e3o, aquisi\u00e7\u00e3o de novos equipamentos, \ninstrumenta\u00e7\u00e3o para manuten\u00e7\u00e3o, custos de amortiza\u00e7\u00e3o, deprecia\u00e7\u00e3o, \nilumina\u00e7\u00e3o, energia el\u00e9trica e outras utilidades. \n\n2.3 Estrat\u00e9gias de Manuten\u00e7\u00e3o \nAs estrat\u00e9gias de manuten\u00e7\u00e3o s\u00e3o metodologias ou pol\u00edticas para gerenciamento das \n\ntarefas de reparos, da equipe t\u00e9cnica, das pe\u00e7as ou dos equipamentos em estoque e dos \neventos relacionados a manuten\u00e7\u00e3o dos equipamentos de uma planta industrial.  \n\nSegundo (ENDRENYI ET AL., 2001) , o prop\u00f3sito da manuten\u00e7\u00e3o \u00e9 estender o \ntempo de vida em funcionamento dos equipamentos. \u00c9 esperado que uma pol\u00edtica \neficiente de manuten\u00e7\u00e3o possa reduzir a frequ\u00eancia de paradas e reduzir suas \nconsequ\u00eancias. A manuten\u00e7\u00e3o \u00e9 uma das ferramentas que assegura um n\u00edvel satisfat\u00f3rio \nde confiabilidade ao equipamento (MAR\u00c7AL, 2000).  \n\nNa Figura 2.3, s\u00e3o apresentadas as estrat\u00e9gias de manuten\u00e7\u00e3o adotadas neste \ntrabalho, que foram fundamentadas nas pesquisas de (ENDRENYI ET AL., 2001) e \n(KOTHAMASU ET AL., 2006). Elas s\u00e3o resumidas em quatro classes: \n\n\u2022 Corretiva: os reparos s\u00e3o realizados somente depois da manifesta\u00e7\u00e3o da \nfalha. \n\n\u2022 Preventiva: os reparos s\u00e3o realizados em intervalos de tempo \npredeterminados para reduzir a probabilidade da ocorr\u00eancia de falhas. \n\n\u2022 Preditiva: \u00e9 realizada com base no monitoramento da \u201csa\u00fade\u201d do \nequipamento, a fim de aplicar os reparos quando os par\u00e2metros estiverem \nanormais, tornando a manuten\u00e7\u00e3o planejada. \n\n \n\nFigura 2.3: Estrat\u00e9gias de manuten\u00e7\u00e3o. \n\n\n\n \n\n \n\n \n\n \n\n26 \n\n\u2022 Proativa: Al\u00e9m de monitorar e planejar os reparos tem o diferencial de \nreconfigurar o sistema e tomar decis\u00f5es pela utiliza\u00e7\u00e3o de sistemas \nembarcados implantados nos equipamentos. \n\n2.3.1 Manuten\u00e7\u00e3o Corretiva \n\nSegundo (ENDRENYI ET AL., 2001) e (MAR\u00c7AL, 2000), a estrat\u00e9gia de \nmanuten\u00e7\u00e3o corretiva \u00e9 simples e direta, ou seja, quando uma m\u00e1quina \u201cquebrar\u201d, \nconserte-a. Esse m\u00e9todo (\u201cse n\u00e3o est\u00e1 quebrada, n\u00e3o conserte\u201d) tem sido aplicado em \ngrande parte nas tarefas de manuten\u00e7\u00e3o nos equipamentos, desde a revolu\u00e7\u00e3o industrial. \n\u00c9 uma t\u00e9cnica puramente reativa que espera pela manifesta\u00e7\u00e3o da falha e somente \ndepois \u00e9 tomada qualquer a\u00e7\u00e3o para reparo.  \n\nOs reparos s\u00e3o trabalhos realizados pela equipe de manuten\u00e7\u00e3o que visam \nrestabelecer a fun\u00e7\u00e3o para qual a m\u00e1quina foi especificada, eliminando o estado de falha \n(NUNES, 2001). Esses reparos podem ser interven\u00e7\u00f5es para corrigir, provisoriamente, \nos danos e depois, em um tempo futuro, fazer um reparo definitivo (paliativas) ou \ninterven\u00e7\u00f5es t\u00edpicas de reparos definitivos (curativas). \n\nAtualmente, poucas ind\u00fastrias usam uma filosofia puramente voltada para a ger\u00eancia \nde manuten\u00e7\u00e3o corretiva. Em muitos casos, elas realizam tarefas com um misto de \nt\u00e9cnicas b\u00e1sicas de preven\u00e7\u00e3o, como lubrifica\u00e7\u00e3o e ajustes nas m\u00e1quinas, mesmo dentro \nde um ambiente de manuten\u00e7\u00e3o corretiva. \n\nEntretanto, nesse tipo de estrat\u00e9gia, as m\u00e1quinas e outros equipamentos n\u00e3o s\u00e3o \nrevisados nem s\u00e3o feitos grandes reparos at\u00e9 que o equipamento falhe por completo. H\u00e1 \nempresas que inclusive aproveitam essas paradas para fazer uma revis\u00e3o geral na \nm\u00e1quina, que acaba estendendo o tempo de n\u00e3o produtividade.  \n\nSegundo (ALMEIDA, 2007), as empresas at\u00e9 encontram algumas vantagens \nutilizando essa estrat\u00e9gia como ger\u00eancia de manuten\u00e7\u00e3o, que \u00e9 o baixo gasto financeiro \nenquanto tudo est\u00e1 funcionando normalmente. Outra vantagem est\u00e1 no fato de as \nm\u00e1quinas n\u00e3o precisarem ser desligadas para monitoramento ou inspe\u00e7\u00f5es peri\u00f3dicas. \n\nA manuten\u00e7\u00e3o corretiva \u00e9 o m\u00e9todo mais caro entre as estrat\u00e9gias de gest\u00e3o de \nmanuten\u00e7\u00e3o. Os maiores custos e desvantagens associadas a essa estrat\u00e9gia s\u00e3o: altos \ncustos de estoque de pe\u00e7as sobressalentes, trabalhos extras, tempo de m\u00e1quina parada \nelevado e baixa disponibilidade de produ\u00e7\u00e3o.  \n\nNessa estrat\u00e9gia de ger\u00eancia de manuten\u00e7\u00e3o, o planejamento de custos para os \nreparos \u00e9 dif\u00edcil de coordenar, pois as falhas s\u00e3o imprevis\u00edveis. Assim, uma ind\u00fastria \nque aplica somente essa estrat\u00e9gia deve ser capaz de reagir com rapidez a todas as \nposs\u00edveis falhas que ocorram. Al\u00e9m disso, por ser um m\u00e9todo reativo, torna-se \nnecess\u00e1rio ter um grande estoque de pe\u00e7as sobressalentes que incluem m\u00e1quinas \nreservas ou, pelo menos, todos os principais componentes dos equipamentos cr\u00edticos da \nplanta industrial.  \n\nA manuten\u00e7\u00e3o corretiva pode ser uma solu\u00e7\u00e3o interessante quando os custos da \nindisponibilidade do processo produtivo s\u00e3o menores que os custos necess\u00e1rios para \nevitar a falha. Essa condi\u00e7\u00e3o \u00e9 encontrada em equipamentos sem influ\u00eancia direta no \nprocesso produtivo (ALMEIDA, 2007).  \n\nPor fim, a manuten\u00e7\u00e3o corretiva \u00e9 geralmente aplicada como um complemento \u00e0s \ndemais estrat\u00e9gias, que ser\u00e3o vistas a seguir.  \n\n\n\n \n\n \n\n \n\n \n\n27 \n\n2.3.2 Manuten\u00e7\u00e3o Preventiva \n\nA manuten\u00e7\u00e3o preventiva consta de a\u00e7\u00f5es de reparo praticadas com a inten\u00e7\u00e3o de \nreduzir a probabilidade de ocorr\u00eancia de falhas, mesmo em uma situa\u00e7\u00e3o em que n\u00e3o se \ncaracterizou como estado de falha. \n\nSegundo (SHIKARI ET AL., 2004) e (KOTHAMASU ET AL., 2006), na estrat\u00e9gia \nde manuten\u00e7\u00e3o preventiva as a\u00e7\u00f5es de manuten\u00e7\u00e3o s\u00e3o planejadas. Por meio de \ninspe\u00e7\u00f5es realizadas periodicamente, tende-se a minimizar as paradas e reduzir a taxa de \ndegrada\u00e7\u00e3o, restaurando o sistema para o estado para o qual foi especificado. \n\nEssa estrat\u00e9gia \u00e9 acionada por tempo, ou seja, as tarefas de manuten\u00e7\u00e3o s\u00e3o baseadas \nno tempo gasto ou horas operacionais dos equipamentos. Um exemplo simples s\u00e3o as \nrevis\u00f5es de autom\u00f3veis que precisam se feitas depois de uma determinada \nquilometragem. \n\nPor exemplo, uma m\u00e1quina nova e rec\u00e9m-instalada, tem uma alta probabilidade de \nfalha devido \u00e0 problemas na instala\u00e7\u00e3o que podem ocorrer durante as primeiras semanas \nde vida. Ap\u00f3s esse per\u00edodo inicial, a probabilidade de falha \u00e9 relativamente baixa por \num prolongado per\u00edodo de tempo. Ap\u00f3s esse per\u00edodo normal de vida da m\u00e1quina, a \nprobabilidade de falha tende a aumentar (ALMEIDA, 2007). \n\nNa estrat\u00e9gia de manuten\u00e7\u00e3o preventiva, os reparos do equipamento s\u00e3o realizados \nde forma programada, com base em hist\u00f3ricos e c\u00e1lculos estat\u00edsticos sobre os dados \nreferentes \u00e0s horas operacionais.  \n\nA aplica\u00e7\u00e3o da manuten\u00e7\u00e3o preventiva corresponde a um conjunto de pr\u00e1ticas, como \nplanejamento de reparos, lubrifica\u00e7\u00e3o, limpeza, ajustes, substitui\u00e7\u00e3o de pe\u00e7as, etc. Essas \na\u00e7\u00f5es pr\u00e1ticas devem ser aplicadas em todas as partes consideradas como cr\u00edticas na \nplanta industrial.  \n\nO principal foco dessa estrat\u00e9gia \u00e9 o planejamento da manuten\u00e7\u00e3o em rela\u00e7\u00e3o ao \ntempo. Al\u00e9m disso, \u00e9 assumido que as m\u00e1quinas se degradar\u00e3o em certo per\u00edodo de \ntempo, sendo este tempo uma informa\u00e7\u00e3o particular de cada m\u00e1quina. \n\nSegundo (ALMEIDA, 2007), o problema dessa abordagem \u00e9 que o modo de \nopera\u00e7\u00e3o e as vari\u00e1veis espec\u00edficas da planta industrial afetam diretamente a vida \noperacional normal da m\u00e1quina. O tempo m\u00e9dio entre as falhas pode-ser diferente para \num mesmo tipo de equipamento, duas m\u00e1quinas iguais fabricando produtos diferentes, \ndificilmente apresentar\u00e3o o mesmo comportamento antes da ocorr\u00eancia da falha.  \n\nCom isso muitas vezes pode ocorrer que se programe uma manuten\u00e7\u00e3o realizar um \nreparo desnecess\u00e1rio ou ocorrer uma falha catastr\u00f3fica imprevista. Portanto, no primeiro \ncaso a m\u00e3o de obra e o material usado no reparo foram desperdi\u00e7ados, pois as pe\u00e7as \nsubstitu\u00eddas ainda teriam muito tempo de vida \u00fatil. No segundo caso, ter\u00e1 que aplicar os \nreparos usando t\u00e9cnicas corretivas, tornando-se muito caro. Assim, essa pol\u00edtica, em \nmuitos casos, pode levar a desperd\u00edcios, pois n\u00e3o considera a condi\u00e7\u00e3o real do \nequipamento e eleva os custos operacionais (ALMEIDA, 2007). \n\nEm resumo, essa estrat\u00e9gia \u00e9 realmente eficiente nos casos de sistemas que sofrem \nalgum tipo de degrada\u00e7\u00e3o em um ritmo uniforme e previs\u00edvel e para as quais os custos \nde uma falha sejam altos quando comparados aos custos da manuten\u00e7\u00e3o (MARCORIN; \nLIMA, 2003).  \n\nUm dos pontos cr\u00edticos dessa estrat\u00e9gia de manuten\u00e7\u00e3o \u00e9 que em muitos casos a \nquebra das m\u00e1quinas ocorrer\u00e1 quando as demandas de produ\u00e7\u00e3o estiverem em n\u00edveis \n\n\n\n \n\n \n\n \n\n \n\n28 \n\nelevados (no pior caso), pois os equipamentos s\u00e3o mais exigidos. Nessa situa\u00e7\u00e3o, a \nequipe de manuten\u00e7\u00e3o precisa reagir com rapidez \u00e0 falha inesperada, aplicando a \nmanuten\u00e7\u00e3o corretiva.  \n\nA diferen\u00e7a mais importante entre manuten\u00e7\u00e3o corretiva e preventiva est\u00e1 na \ncapacidade de planejamento dos reparos, para reduzir o impacto sobre a produ\u00e7\u00e3o. \n\n2.3.3 Manuten\u00e7\u00e3o Preditiva  \n\nA estrat\u00e9gia de manuten\u00e7\u00e3o preditiva visa aplicar o monitoramento cont\u00ednuo dos \npar\u00e2metros de controle, das condi\u00e7\u00f5es reais de funcionamento, do rendimento \noperacional, dentre outros indicadores da planta industrial (ENDRENYI ET AL., 2001). \n\nSegundo (KOTHAMASU ET AL., 2006) e (ALMEIDA, 2007), essa estrat\u00e9gia visa \nadquirir informa\u00e7\u00f5es de vari\u00e1veis do ambiente da m\u00e1quina, a fim de estimar a \nprobabilidade de comportamento correto e das leis de degrada\u00e7\u00e3o, assegurando um \nintervalo m\u00e1ximo entre os reparos at\u00e9 uma eventual falha. Com isso, a equipe de \nmanuten\u00e7\u00e3o pode programar interven\u00e7\u00f5es e aquisi\u00e7\u00f5es de pe\u00e7as, reduzindo gastos com \nestoque e evitando paradas desnecess\u00e1rias da linha de produ\u00e7\u00e3o. \n\nNessa estrat\u00e9gia, o objetivo \u00e9 elevar a disponibilidade da produ\u00e7\u00e3o \u00e0 medida que n\u00e3o \nocorram interven\u00e7\u00f5es de reparos nos equipamentos. As interven\u00e7\u00f5es s\u00e3o efetuadas \nsomente quando o grau de degrada\u00e7\u00e3o se aproximar ou atingir um limite previamente \nestabelecido (QIU, HAI ET AL., 2003). Isso \u00e9 necess\u00e1rio somente quando os \npar\u00e2metros monitorados indicam tal necessidade e aplica-se ent\u00e3o a t\u00e9cnica de \nmanuten\u00e7\u00e3o corretiva (agora planejada). Permite, portanto, uma prepara\u00e7\u00e3o pr\u00e9via do \nservi\u00e7o de manuten\u00e7\u00e3o, al\u00e9m da possibilidade de se tomar outras decis\u00f5es alternativas \nrelacionadas com a produ\u00e7\u00e3o do processo industrial. \n\nDe acordo com (ALMEIDA, 2007), uma das vantagens da manuten\u00e7\u00e3o preditiva \u00e9 \nminimizar o n\u00famero e os custos com paradas n\u00e3o programadas provocadas por falhas. \nAl\u00e9m de melhorar a produtividade, a qualidade do produto, o lucro e a efici\u00eancia da \nplanta industrial, a manuten\u00e7\u00e3o preditiva possibilita \u00e0 equipe planejar as atividades de \nmanuten\u00e7\u00e3o com muito mais efici\u00eancia, levando em considera\u00e7\u00e3o as vari\u00e1veis que \ninfluenciam no processo de produ\u00e7\u00e3o.  \n\nConforme (OTANI; MACHADO, 2008), essa estrat\u00e9gia visa avaliar o estado do \nequipamento por meio de medi\u00e7\u00f5es e monitora\u00e7\u00e3o cont\u00ednua, est\u00e1 exige um custo \nadicional com m\u00e3o de obra qualificada, aparelhos e instrumentos de medi\u00e7\u00e3o. Poder ser \nrealizada da seguinte forma: \n\n\u2022 Monitoramento subjetivo: \u00e9 exercido pelo pessoal de manuten\u00e7\u00e3o utilizando \nos cinco sentidos (tato, olfato, audi\u00e7\u00e3o e vis\u00e3o). Por exemplo, quando um \nmec\u00e2nico tocar uma parte da m\u00e1quina, ele pode sentir a temperatura, a \nvibra\u00e7\u00e3o, etc. \u00c9 evidente que esse procedimento \u00e9 diretamente ligado \u00e0 \nexperi\u00eancia dos profissionais. Essa forma de monitoramento tem grande \nmargem de erro. \n\n\u2022 Monitoramento objetivo: \u00e9 feito pela utiliza\u00e7\u00e3o de equipamentos ou \ninstrumentos, para coletar informa\u00e7\u00f5es na planta industrial. A t\u00e9cnica visa \nfornecer um valor de medi\u00e7\u00e3o do par\u00e2metro que est\u00e1 sendo acompanhado e \nesse valor medido \u00e9 independente do operador do instrumento. Exige-se um \ntreinamento da equipe de manuten\u00e7\u00e3o para manuseio adequado dos \ninstrumentos.  \n\n\n\n \n\n \n\n \n\n \n\n29 \n\n\u2022 Monitoramento cont\u00ednuo: \u00e9 realizado por um acompanhamento on-line dos \npar\u00e2metros de desempenho dos equipamentos pelo uso de sensores \ninteligentes para coleta de dados. S\u00e3o utilizados, muitas vezes, sistemas \ncomputacionais supervis\u00f3rios para aquisi\u00e7\u00f5es e visualiza\u00e7\u00e3o dos estados de \nfuncionamento da planta industrial.  \n\nDependendo da forma como essa estrat\u00e9gia de manuten\u00e7\u00e3o \u00e9 aplicada, pode \ninicialmente parecer que h\u00e1 um custo elevado devido \u00e0 implanta\u00e7\u00e3o, mas esse custo \u00e9 \nem longo prazo minimizado pelos resultados obtidos.  \n\nPode-se dizer que a estrat\u00e9gia de manuten\u00e7\u00e3o preditiva \u00e9 uma manuten\u00e7\u00e3o \npreventiva acionada por condi\u00e7\u00f5es do equipamento. Em vez de ser puramente \nestat\u00edstica, baseando-se na vida m\u00e9dia da planta industrial para planejar os reparos, essa \nt\u00e9cnica usa o monitoramento das condi\u00e7\u00f5es f\u00edsicas do equipamento (p. ex., rendimento \ndo sistema, desgastes mec\u00e2nicos, temperatura, etc.).  \n\nAs m\u00e1quinas que comp\u00f5em uma planta industrial s\u00e3o formadas por partes mec\u00e2nicas \nque degradam-se a uma velocidade diretamente proporcional \u00e0 gravidade do defeito, at\u00e9 \nque causem uma falha. Ent\u00e3o, \u00e9 fundamental que a degrada\u00e7\u00e3o seja detectada com \nanteced\u00eancia para que sejam realizados os devidos reparos e a manifesta\u00e7\u00e3o da falha \nseja evitada.  \n\nA seguir, segundo (OTANI; MACHADO, 2008), s\u00e3o citadas algumas t\u00e9cnicas de \nmonitoramento para coletar dados com o equipamento em pleno funcionamento ou com \no m\u00ednimo de interfer\u00eancia poss\u00edvel no processo de produ\u00e7\u00e3o:  \n\n\u2022 Monitoramento de vibra\u00e7\u00e3o.  \n\n\u2022 Monitoramento de par\u00e2metros. \n\n\u2022 Monitoramento de lubrificantes. \n\n\u2022 Monitoramente de ru\u00eddos. \n\n\u2022 Monitoramento de sinais el\u00e9tricos (corrente, tens\u00e3o, torque). \n\n\u2022 Monitoramento t\u00e9rmico. \n\n\u2022 Monitoramento e inspe\u00e7\u00e3o visual. \n\nCada uma dessas t\u00e9cnicas fornece um conjunto de informa\u00e7\u00f5es importantes para a \nequipe de manuten\u00e7\u00e3o. Entretanto, combinando essas t\u00e9cnicas de diversas formas pode-\nse elevar o poder de monitoramento e melhorar os resultados. A ado\u00e7\u00e3o das t\u00e9cnicas \ndepende do tipo de equipamento, seu impacto sobre a produ\u00e7\u00e3o, par\u00e2metros \noperacionais da planta industrial e dos objetivos que se deseja alcan\u00e7ar com a estrat\u00e9gia \nde manuten\u00e7\u00e3o preditiva (OTANI; MACHADO, 2008).  \n\nA manuten\u00e7\u00e3o preditiva tem se apresentado como uma solu\u00e7\u00e3o economicamente \nmais vi\u00e1vel para o caso de falhas em m\u00e1quinas e equipamentos industriais em rela\u00e7\u00e3o \u00e0s \noutras estrat\u00e9gias de manuten\u00e7\u00e3o (ENDRENYI ET AL., 2001). \n\nAl\u00e9m disso, a utiliza\u00e7\u00e3o dessa estrat\u00e9gia de manuten\u00e7\u00e3o apresenta benef\u00edcios, como \nprolongar a opera\u00e7\u00e3o do processo produtivo, prevenir a ocorr\u00eancia de falhas e paradas, \nredu\u00e7\u00e3o de estoques para reparos, redu\u00e7\u00e3o de acidentes de trabalho e otimiza\u00e7\u00e3o da \nequipe de manuten\u00e7\u00e3o. Como desvantagens dessa estrat\u00e9gia citam-se: disponibilidade \nde profissionais qualificados, equipe de manuten\u00e7\u00e3o em constante atualiza\u00e7\u00e3o \ntecnol\u00f3gica e inspe\u00e7\u00f5es peri\u00f3dicas nos equipamentos (OTANI; MACHADO, 2008).  \n\n\n\n \n\n \n\n \n\n \n\n30 \n\nExiste uma varia\u00e7\u00e3o da manuten\u00e7\u00e3o preditiva conhecida como Manuten\u00e7\u00e3o Baseada \nna Condi\u00e7\u00e3o (CBM \u2013 Condition Based Maintenance) (LEE, JAY ET AL., 2006), em \nque as a\u00e7\u00f5es de reparos pela equipe de manuten\u00e7\u00e3o s\u00e3o tomadas com base nas \ncondi\u00e7\u00f5es monitoradas na planta industrial.  \n\nA principal vantagem dessa estrat\u00e9gia \u00e9 que a planta industrial \u00e9 avaliada enquanto \nseus equipamentos e m\u00e1quinas est\u00e3o em funcionamento normal, por meio da utiliza\u00e7\u00e3o \nde sensores e testes n\u00e3o invasivos. Ap\u00f3s as an\u00e1lises das informa\u00e7\u00f5es coletadas, \u00e9 \nposs\u00edvel saber se determinado equipamento ou m\u00e1quina precisa ou n\u00e3o de reparos. Essa \nestrat\u00e9gia de manuten\u00e7\u00e3o pode ser implementada de forma autom\u00e1tica por um sistema \ncomputacional embarcado, que ser\u00e1 apresentado nas pr\u00f3ximas se\u00e7\u00f5es.  \n\n2.3.4 Manuten\u00e7\u00e3o Proativa \n\nCom o aumento da demanda de clientes para produ\u00e7\u00e3o, concorr\u00eancia externa e busca \npor inova\u00e7\u00f5es tecnol\u00f3gicas, as empresas t\u00eam buscado melhorar os \u00edndices de \nprodutividade. Isso foi poss\u00edvel em grande parte, devido \u00e0 automa\u00e7\u00e3o industrial que \nproporcionou a eleva\u00e7\u00e3o da efici\u00eancia e a realiza\u00e7\u00e3o de mais produtos com menos \nrecursos, e \u00e0 evolu\u00e7\u00e3o tecnol\u00f3gica da eletr\u00f4nica e computa\u00e7\u00e3o, que trouxeram a \ndissemina\u00e7\u00e3o e redu\u00e7\u00e3o de custos para projetar equipamentos industriais totalmente \nautomatizados e com elevados \u00edndices de produtividade (VENKATASUBRAMANIAN; \nRENGASWAMY; YIN; ET AL., 2003). \n\nNo entanto, devido a essa exig\u00eancia do mercado, esses equipamentos industriais \npassaram a ser mais complexos, sofisticados e totalmente interligados entre si, portanto \nmais suscet\u00edveis a falhas. Devido a isso, estrat\u00e9gias de gerenciamento de manuten\u00e7\u00e3o \npassaram a ser mais exigidas. Utilizando apenas as estrat\u00e9gias de manuten\u00e7\u00e3o \ntradicionais como a corretiva ou preventiva, as equipes de manuten\u00e7\u00e3o n\u00e3o t\u00eam \nconseguido atingir resultados satisfat\u00f3rios para melhorar os \u00edndices de produtividade e \ndisponibilidade do processo produtivo. \n\n(LEE, JAY ET AL., 2006) diz que esses equipamentos industriais complexos \napresentam degrada\u00e7\u00e3o nas partes que geralmente, s\u00e3o invis\u00edveis aos olhos humanos da \nequipe de manuten\u00e7\u00e3o que utiliza a estrat\u00e9gia preditiva. Contudo, monitorar a evolu\u00e7\u00e3o \ndessa degrada\u00e7\u00e3o por sensores sofisticados e sistemas computacionais capazes de \nadquirir e processar essas informa\u00e7\u00f5es, analisando o estado de opera\u00e7\u00e3o e desempenho \ndo equipamento, tornou-se poss\u00edvel devido ao desenvolvimento tecnol\u00f3gico.  \n\nSegundo (KOTHAMASU ET AL., 2006) e (MULLER ET AL., 2008), os problemas \nna aplica\u00e7\u00e3o das estrat\u00e9gias de manuten\u00e7\u00e3o corretiva ou preventiva nesses novos \nequipamentos \u00e9 que ainda podem ocorrer paradas n\u00e3o programadas no processo de \nprodu\u00e7\u00e3o, provocando falhas. Desse modo, a id\u00e9ia \u00e9 quantificar e monitorar os \ndesgastes da m\u00e1quina para realizar a manuten\u00e7\u00e3o e reparos antes da manifesta\u00e7\u00e3o da \nfalha, e n\u00e3o depois. \n\nIsso pode ser feito por meio de medi\u00e7\u00f5es dos desgastes (ou degrada\u00e7\u00e3o) da m\u00e1quina \ne predi\u00e7\u00e3o de falhas futuras, tomando como premissa a condi\u00e7\u00e3o atual de opera\u00e7\u00e3o e \nhist\u00f3rico de informa\u00e7\u00f5es, como vari\u00e1veis de desgastes, falhas passadas e tarefas de \nmanuten\u00e7\u00e3o (MULLER ET AL., 2008). Como resultado da predi\u00e7\u00e3o, alcan\u00e7a-se a \nminimiza\u00e7\u00e3o dos custos com manuten\u00e7\u00e3o, associados a problemas operacionais. \nSimultaneamente tamb\u00e9m minimiza-se o risco de paradas n\u00e3o programadas do processo \nprodutivo. \n\n\n\n \n\n \n\n \n\n \n\n31 \n\nDevido a essas transforma\u00e7\u00f5es tecnol\u00f3gicas nas plantas industriais, passou-se a \nexigir novos requisitos para garantir um n\u00edvel elevado de efici\u00eancia no processo \nprodutivo. Surge uma nova estrat\u00e9gia para realiza\u00e7\u00e3o da manuten\u00e7\u00e3o, a estrat\u00e9gia de \nmanuten\u00e7\u00e3o proativa, que tamb\u00e9m \u00e9 conhecida como manuten\u00e7\u00e3o inteligente (LEE, \nJAY, 2003) (HUANG, R. ET AL., 2007) (DJURDJANOVIC ET AL., 2003) (MULLER \nET AL., 2008) (JARDINE ET AL., 2006).  \n\nA manuten\u00e7\u00e3o proativa \u00e9 um avan\u00e7o em rela\u00e7\u00e3o \u00e0s estrat\u00e9gias de manuten\u00e7\u00e3o \ntradicionais, pois al\u00e9m de serem aplicados todos os conceitos referentes \u00e0 manuten\u00e7\u00e3o \npreditiva e preventiva, como o monitoramento do equipamento em fun\u00e7\u00e3o do desgaste \nocorrido, pode-se diagnosticar, quantificar a perda de desempenho e tamb\u00e9m atuar \n(reconfigurar) sobre o sistema que \u00e9 analisado (MULLER ET AL., 2008).  \n\nTrata-se de uma abordagem de manuten\u00e7\u00e3o que continuamente trabalha em busca de \nind\u00edcios de degrada\u00e7\u00e3o e infere indicadores de comportamentos futuros sobre a \ncondi\u00e7\u00e3o do equipamento. A predi\u00e7\u00e3o de falhas deve ser realizada dentro de um tempo \naceit\u00e1vel, antes da manifesta\u00e7\u00e3o da falha; al\u00e9m disso, deve-se detalhar exatamente quais \ncomponentes (partes da m\u00e1quina) provavelmente falhar\u00e3o (LEE, JAY ET AL., 2006). \n\nDevido a essas raz\u00f5es, em (LEE, JAY, 2003), \u00e9 proposta uma metodologia que \navan\u00e7a para al\u00e9m de uma abordagem de manuten\u00e7\u00e3o tradicional (detec\u00e7\u00e3o e \nquantifica\u00e7\u00e3o de falhas) para uma nova abordagem agora centrada em avalia\u00e7\u00e3o e \npredi\u00e7\u00e3o do n\u00edvel de degrada\u00e7\u00e3o de um processo, m\u00e1quina, etc. Nessa metodologia, o \nn\u00edvel de degrada\u00e7\u00e3o \u00e9 tratado como um indicador para uma poss\u00edvel falha e \u00e9 utilizado \npara prever um n\u00edvel inaceit\u00e1vel de desempenho no processo antes da falha ocorrer. \nCom base nessa ideia, foi poss\u00edvel, a partir de uma estrat\u00e9gia de manuten\u00e7\u00e3o \u201cfalha e \nconserta\u201d, evoluir para uma nova, \u201cprever e prevenir\u201d.  \n\nSegundo (LEE, JAY ET AL., 2006), a manuten\u00e7\u00e3o proativa \u00e9 viabilizada pelo uso \nde sistemas embarcados, que monitoram os equipamentos da planta industrial \nremotamente, fazendo a aquisi\u00e7\u00e3o de sinais indicativos da condi\u00e7\u00e3o de funcionamento, \nanalisando e processando as informa\u00e7\u00f5es que possibilitam evoluir da estrat\u00e9gia de \nmanuten\u00e7\u00e3o preditiva para a proativa.  \n\nAssim, a manuten\u00e7\u00e3o proativa \u00e9 aquela que envolve tarefas de monitora\u00e7\u00e3o de \ndesgastes, diagn\u00f3stico de falhas, quantifica\u00e7\u00e3o de desempenho e reconfigura\u00e7\u00e3o do \nequipamento. Os objetivos dessa estrat\u00e9gia de manuten\u00e7\u00e3o \u00e9 prover informa\u00e7\u00f5es \nimportantes e \u00fateis para melhorar o planejamento da equipe de manuten\u00e7\u00e3o em realizar \nos devidos reparos. Caso n\u00e3o haja tempo suficiente para reparos em uma determinada \nm\u00e1quina, a planta pode ser reconfigurada automaticamente (quando detectar uma \nprov\u00e1vel falha) at\u00e9 a realiza\u00e7\u00e3o dos reparos para reduzir os preju\u00edzos, sem paralisar a \nprodu\u00e7\u00e3o, mesmo operando de maneira degradada.  \n\nPelo uso da estrat\u00e9gia de manuten\u00e7\u00e3o proativa, \u00e9 poss\u00edvel alcan\u00e7ar n\u00edveis de \nefici\u00eancia elevados no processo produtivo. Seguem algumas das vantagens da utiliza\u00e7\u00e3o \ndessa estrat\u00e9gia (OTANI; MACHADO, 2008) (HUANG, R. ET AL., 2007) (LEE, JAY \nET AL., 2006): \n\n\u2022 Redu\u00e7\u00e3o de custos com manuten\u00e7\u00e3o e elimina\u00e7\u00e3o de reparos desperdi\u00e7ados. \n\n\u2022 Redu\u00e7\u00e3o de pe\u00e7as e equipamentos em estoque. \n\n\u2022 Diminui\u00e7\u00e3o das paradas do processo produtivo, aumentando a \ndisponibilidade. \n\n\n\n \n\n \n\n \n\n \n\n32 \n\n\u2022 Previsibilidade para vida \u00fatil do equipamento e da ocorr\u00eancia das falhas.  \n\n\u2022 Disponibiliza\u00e7\u00e3o de informa\u00e7\u00f5es precisas e em tempo real sobre a condi\u00e7\u00e3o \nda planta industrial. \n\n\u2022 Planejamento da manuten\u00e7\u00e3o.  \n\n\u2022 Plantas industriais ficam mais seguras e preservadas.  \n\nAs poss\u00edveis desvantagens dessa estrat\u00e9gia de manuten\u00e7\u00e3o: \n\n\u2022 Requer uma equipe de manuten\u00e7\u00e3o mais capacitada e treinada com as novas \ntecnologias. \n\n\u2022 Cada aplica\u00e7\u00e3o dessa estrat\u00e9gia de manuten\u00e7\u00e3o \u00e9 desenvolvida unicamente \npara um determinado equipamento.  \n\n\u2022 Custo inicial alto para implanta\u00e7\u00e3o. \n\n\u2022 A implanta\u00e7\u00e3o exige um maior investimento de recursos e de tecnologia, \nquando comparado com as outras estrat\u00e9gias. \n\n\u2022 Falhas no pr\u00f3prio sistema de monitoramento da planta podem causar \npreju\u00edzos incalcul\u00e1veis. \n\nA implanta\u00e7\u00e3o de uma estrat\u00e9gia proativa tem inicialmente um espa\u00e7o de projeto \ngrande, como a escolha de sensores, ferramentas de processamento de sinais, defini\u00e7\u00e3o \nde plataforma de sistema embarcado, defini\u00e7\u00e3o de ferramentas de monitoramento, \nviabilidade t\u00e9cnica, viabilidade econ\u00f4mica e treinamento da equipe de manuten\u00e7\u00e3o \n(DJURDJANOVIC ET AL., 2003).  \n\nA manuten\u00e7\u00e3o proativa tem sido apresentada como uma solu\u00e7\u00e3o inovadora para \nmelhorar a gest\u00e3o de manuten\u00e7\u00e3o em plantas industriais com sistemas produtivos \ncomplexos e cr\u00edticos. Pela utiliza\u00e7\u00e3o de sistemas embarcados pode-se monitorar os \ndesgastes nos equipamentos, fazer detec\u00e7\u00e3o, diagn\u00f3stico e predi\u00e7\u00e3o das falhas.  \n\nO sistema embarcado que implementa a estrat\u00e9gia de manuten\u00e7\u00e3o proativa, a partir \nde agora, ser\u00e1 chamado de Sistema de Manuten\u00e7\u00e3o Inteligente (SMI). Esse sistema \u00e9 \nformado por um sistema computacional embarcado que realiza todos os processamentos \nnecess\u00e1rios para aquisi\u00e7\u00e3o de sinais, detec\u00e7\u00e3o, diagn\u00f3stico de falhas, predi\u00e7\u00e3o da vida \n\u00fatil e reconfigura\u00e7\u00e3o do equipamento monitorado. O SMI tamb\u00e9m \u00e9 constru\u00eddo com \nbase na estrat\u00e9gia de Manuten\u00e7\u00e3o Baseada na Condi\u00e7\u00e3o (CBM) e ser\u00e1 apresentado na \npr\u00f3xima se\u00e7\u00e3o. \n\n2.4 Sistema de Manuten\u00e7\u00e3o Inteligente \nUm Sistema de Manuten\u00e7\u00e3o Inteligente (SMI) \u00e9 baseado em t\u00e9cnicas da estrat\u00e9gia \n\nde manuten\u00e7\u00e3o proativa. \u00c9 uma ferramenta computacional que implementa uma \nmetodologia para melhorar o gerenciamento das opera\u00e7\u00f5es industriais no quesito de \nmanuten\u00e7\u00e3o da planta industrial (LEE, JAY, 2003).  \n\nNas modernas plantas industriais do s\u00e9culo XXI, est\u00e3o inclusos diversos sensores, \nequipamentos de controle e automa\u00e7\u00e3o muito sofisticados. Devido a isso, o desempenho \ncomputacional de tais equipamentos eletr\u00f4nicos em realizar suas tarefas, tamb\u00e9m tem \nsido mais exigido.  \n\n\n\n \n\n \n\n \n\n \n\n33 \n\nEssa tecnologia possibilitou reaproveitar uma parte do processamento para medir o \ndesempenho da m\u00e1quina por indicadores e avaliar essas informa\u00e7\u00f5es. Tomando isso \ncomo princ\u00edpio, um SMI \u00e9 baseado no monitoramento e na avalia\u00e7\u00e3o da condi\u00e7\u00e3o da \nplanta industrial ou do equipamento, sendo uma ferramenta apropriada e eficiente para \naumentar a disponibilidade do processo produtivo. Isso \u00e9 feito pela redu\u00e7\u00e3o das paradas \ndo processo para pr\u00f3ximo de zero, diminuindo as ocorr\u00eancias de falhas (MULLER ET \nAL., 2008).  \n\nSegundo (DJURDJANOVIC ET AL., 2003), um SMI implantado em um \nequipamento pode economizar na ordem de 20% ou mais de custos com paradas do \nprocesso produtivo, elevando o n\u00edvel de qualidade e disponibilidade, redu\u00e7\u00e3o de \nestoques de pe\u00e7as, etc. \n\nEm um SMI, est\u00e3o inclusas habilidades para monitorar as plantas industriais, a fim \nde detectar e diagnosticar falhas, e prever a perda de desempenho. Como sa\u00eddas do \nsistema, est\u00e3o as informa\u00e7\u00f5es que complementam as tomadas de decis\u00f5es pela equipe \nde manuten\u00e7\u00e3o, que visa planejar as tarefas de manuten\u00e7\u00e3o e produ\u00e7\u00e3o para sincronizar \ncom os melhores momentos para reparos, sem prejudicar o sistema produtivo com as \ninterrup\u00e7\u00f5es. \n\nAs principais fun\u00e7\u00f5es e objetivos alcan\u00e7ados pelo SMI s\u00e3o: \n\n\u2022 Prover transpar\u00eancia, consist\u00eancia e troca de informa\u00e7\u00f5es de modo \nautom\u00e1tico para equipe de manuten\u00e7\u00e3o e setores gerenciais. \n\n\u2022 Aumentar a utiliza\u00e7\u00e3o dos recursos da planta industrial por meio da \nestrat\u00e9gia de manuten\u00e7\u00e3o proativa e preditiva. \n\n\u2022 Otimiza\u00e7\u00e3o da planta industrial, aumentando a disponibilidade produtiva. \n\nSegundo (JARDINE ET AL., 2006), a confiabilidade \u00e9 um aspecto importante para \navalia\u00e7\u00e3o de processos e plantas industriais. N\u00e3o importa qu\u00e3o bom seja o projeto de um \nproduto que ser\u00e1 fabricado, se o produto se desviar do especificado ao longo do tempo \ndevido \u00e0 deteriora\u00e7\u00e3o no processo produtivo. Portanto, para assegurar um n\u00edvel \nsatisfat\u00f3rio de confiabilidade nos equipamentos industriais, t\u00eam sido investido mais \nrecurso na tarefa de manuten\u00e7\u00e3o como um meio estrat\u00e9gico. \n\nNo presente trabalho, o SMI tem sua base sobre a metodologia da Manuten\u00e7\u00e3o \nBaseada na Condi\u00e7\u00e3o (CBM \u2013 Condition-Based Maintenance), que apresenta uma \narquitetura padr\u00e3o de constru\u00e7\u00e3o e uma s\u00e9rie de etapas necess\u00e1rias para o projeto desse \nsistema. \n\n2.4.1 Metodologia de Manuten\u00e7\u00e3o Baseada na Condi\u00e7\u00e3o (CBM) \n\nA CBM (Condition-Based Maintenance) (THURSTON, M.G., 2001) (LEBOLD; \nTHURSTON, M., 2001) (BENGTSSON, 2004) \u00e9 uma estrat\u00e9gia de manuten\u00e7\u00e3o que \ntrabalha de forma a recomendar tarefas de reparos, que s\u00e3o baseados nas informa\u00e7\u00f5es \ncoletadas pelo monitoramento da condi\u00e7\u00e3o dos equipamentos. Dessa forma, objetiva \nevitar reparos desnecess\u00e1rios por meio da solicita\u00e7\u00e3o somente quando existir uma \nevid\u00eancia de comportamento anormal nos equipamentos. Como resultado, pode \nsignificativamente reduzir o custo de manuten\u00e7\u00e3o pela diminui\u00e7\u00e3o do n\u00famero de \nmanuten\u00e7\u00f5es ou reparos desnecess\u00e1rios que s\u00e3o realizados nos equipamentos. \n\nSegundo (JARDINE ET AL., 2006) (HUANG, R. ET AL., 2007), uma abordagem \nCBM consiste de tr\u00eas etapas-chave: \n\n\n\n \n\n \n\n \n\n \n\n34 \n\n\u2022 Aquisi\u00e7\u00e3o de dados: coletar e obter dados relevantes para an\u00e1lise da sa\u00fade do \nsistema em monitoramento. \n\n\u2022 Processamento dos dados: filtrar e analisar os dados ou sinais coletados para \num melhor entendimento e interpreta\u00e7\u00e3o. \n\n\u2022 Tomada de decis\u00e3o de manuten\u00e7\u00e3o: computar as informa\u00e7\u00f5es e recomendar \ntarefas de manuten\u00e7\u00e3o de forma eficiente para reparos no equipamento \nmonitorado. \n\nBasicamente, a etapa \u201cTomada de decis\u00e3o\u201d visa aplicar t\u00e9cnicas de toler\u00e2ncia a \nfalhas, em que s\u00e3o utilizadas as seguintes t\u00e9cnicas: detec\u00e7\u00e3o de anormalidades, \ndiagn\u00f3stico de falhas, predi\u00e7\u00e3o de falhas e monitoramento da condi\u00e7\u00e3o. Cada uma \ndessas t\u00e9cnicas ser\u00e1 detalhada no cap\u00edtulo a seguir. \n\n2.4.1.1 Aquisi\u00e7\u00e3o de dados \n\nA aquisi\u00e7\u00e3o de dados \u00e9 o processo de coleta e armazenamento da informa\u00e7\u00e3o \u00fatil do \nequipamento monitorado. Essa \u00e9 uma tarefa essencial dentro do sistema CBM.  \n\nAs informa\u00e7\u00f5es coletadas incluem eventos como: \u201co que aconteceu?\u201d, \u201co que foi \nfeito nos equipamentos?\u201d, medidas de vari\u00e1veis de condi\u00e7\u00e3o ou estado de sa\u00fade dos \nequipamentos que s\u00e3o coletados por sensores inteligentes. \n\nEssas informa\u00e7\u00f5es s\u00e3o compostas por dados que representam a condi\u00e7\u00e3o do \nequipamento, por exemplo: vibra\u00e7\u00e3o, ac\u00fastica, an\u00e1lise de lubrificantes, temperatura, \npress\u00e3o, umidade, clima, corrente el\u00e9trica e outras vari\u00e1veis.  \n\nAl\u00e9m disso, podem ser utilizadas outras informa\u00e7\u00f5es que estejam dispon\u00edveis sobre \na manuten\u00e7\u00e3o (p. ex., sistemas de informa\u00e7\u00f5es gerenciais de manuten\u00e7\u00e3o), como o \nbanco de dados com hist\u00f3ricos dos sensores e a condi\u00e7\u00e3o de todo o equipamento ou \nplanta industrial. \n\n2.4.1.2 Processamento de dados \n\nNesta etapa do processamento de dados (ou sinais), \u00e9 feita a redu\u00e7\u00e3o de ru\u00eddos por \nmeio da filtragem. Isso \u00e9 importante, pois os dados coletados geralmente apresentam \nsinais de ru\u00eddos e at\u00e9 erros que prejudicam a boa interpreta\u00e7\u00e3o dos dados. Como no \nsistema CBM, os dados s\u00e3o utilizados para monitoramento da condi\u00e7\u00e3o e podem \napresentar erros derivados de falhas presentes nos sensores.  \n\nNa pr\u00f3xima etapa desse processamento, \u00e9 feita a an\u00e1lise dos sinais. Uma grande \nvariedade de modelos, algoritmos e ferramentas est\u00e3o dispon\u00edveis na literatura para essa \ntarefa, que visa melhorar o entendimento e compreens\u00e3o dos dados coletados. A escolha \nda ferramenta ideal depende principalmente do tipo de sinal e o que pretende-se extrair \ndele.  \n\nDe acordo com (JARDINE ET AL., 2006), os sinais coletados para monitoramento \nda condi\u00e7\u00e3o s\u00e3o classificados em tr\u00eas tipos: \n\n\u2022 Valor: os dados coletados de uma vari\u00e1vel para um tempo espec\u00edfico s\u00e3o \nsimplesmente valores reais. Por exemplo, temperatura, press\u00e3o, corrente \nel\u00e9trica, etc. \n\n\n\n \n\n \n\n \n\n \n\n35 \n\n\u2022 Forma de onda: os dados coletados de uma vari\u00e1vel para um tempo \nespec\u00edfico s\u00e3o s\u00e9ries temporais, que formam uma onda completa em um \nper\u00edodo de tempo. Por exemplo, dados de vibra\u00e7\u00e3o, ac\u00fasticos, torque, etc. \n\n\u2022 Multidimensional: os dados coletados de uma vari\u00e1vel para um tempo \nespec\u00edfico s\u00e3o multidimensionais. Por exemplo, imagens t\u00e9rmicas, raio X , \nfotos, etc. \n\nO processamento para os dados na categoria forma de onda e multidimensional \ntamb\u00e9m \u00e9 chamado de processamento de sinais. V\u00e1rias t\u00e9cnicas para o processamento \nde sinais foram desenvolvidas, a fim de analisar tais sinais e extrair caracter\u00edsticas que \nauxiliem no processo de detec\u00e7\u00e3o, diagn\u00f3stico e predi\u00e7\u00e3o de falhas. A seguir, algumas \ndas t\u00e9cnicas para o processamento de sinais s\u00e3o apresentadas conforme (JARDINE ET \nAL., 2006): \n\n\u2022 An\u00e1lise no dom\u00ednio de tempo: baseada no tempo da onda do sinal. Calcula \ncaracter\u00edsticas do tempo do sinal, utilizando estat\u00edsticas, tais como: m\u00e9dias, \npico, intervalo pico a pico, desvio padr\u00e3o, etc. Por exemplo: modelo AR \n(autoregressive), ARMA (autoregressive moving average), PCA (principal \ncomponent analysis), etc. \n\n\u2022 An\u00e1lise no dom\u00ednio de frequ\u00eancia: baseada na transforma\u00e7\u00e3o do sinal para o \ndom\u00ednio de frequ\u00eancia. A vantagem \u00e9 a habilidade de facilmente identificar e \nisolar certos componentes de frequ\u00eancias que forem de interesse da an\u00e1lise. \nPor exemplo, FFT (fast fourier transform). \n\n\u2022 An\u00e1lise no dom\u00ednio de tempo-frequ\u00eancia: uma limita\u00e7\u00e3o da an\u00e1lise dom\u00ednio \nde frequ\u00eancia \u00e9 a inabilidade de lidar com sinais de ondas n\u00e3o estacion\u00e1rias, \nque s\u00e3o muito comuns em plantas industriais, especialmente em an\u00e1lise de \nfalhas. Assim, a an\u00e1lise de tempo-frequ\u00eancia investiga as ondas do sinal no \ndom\u00ednio do tempo e da frequ\u00eancia. Por exemplo, transformada wavelets e \ntransformada wavelet packets. \n\n2.4.1.3 Tomada de decis\u00e3o de manuten\u00e7\u00e3o \n\nEsta etapa fornece suporte para a tomada de decis\u00e3o e auxilia a equipe de \nmanuten\u00e7\u00e3o na realiza\u00e7\u00e3o de tarefas de reparos dos equipamentos. Em um sistema \nCBM, as t\u00e9cnicas para suporte \u00e0 tomada de decis\u00e3o s\u00e3o: detec\u00e7\u00e3o, diagn\u00f3stico e \npredi\u00e7\u00e3o.  \n\nA detec\u00e7\u00e3o revela o momento quando uma condi\u00e7\u00e3o anormal ocorre. O diagn\u00f3stico \ntem a fun\u00e7\u00e3o de isolar e identificar a falha ocorrida. A predi\u00e7\u00e3o antecipa as falhas antes \nde elas ocorrerem.  \n\nObviamente, a predi\u00e7\u00e3o aparenta ser superior \u00e0 detec\u00e7\u00e3o e diagn\u00f3stico, j\u00e1 que pode \nprevenir as falhas e preparar a equipe de manuten\u00e7\u00e3o para reparos planejados. Com isso, \n\u00e9 poss\u00edvel solucionar muitos dos problemas que podem ocorrer nos equipamentos, \ndevido a paradas n\u00e3o planejadas, economizando custos extras.  \n\nTodavia, a predi\u00e7\u00e3o n\u00e3o pode substituir o diagn\u00f3stico por completo, pois, na pr\u00e1tica, \nnem todas as falhas s\u00e3o previstas. A predi\u00e7\u00e3o n\u00e3o \u00e9 uma t\u00e9cnica com 100% de certeza \nem acertos. O diagn\u00f3stico \u00e9 uma ferramenta complementar importante, que tem a \nfinalidade de fornecer suporte \u00e0 tomada de decis\u00e3o de manuten\u00e7\u00e3o quando a predi\u00e7\u00e3o \nfor errada, assim o diagn\u00f3stico consegue identificar a nova falha ocorrida \n\n\n\n \n\n \n\n \n\n \n\n36 \n\n(VENKATASUBRAMANIAN; RENGASWAMY; YIN; ET AL., 2003) (MULLER ET \nAL., 2008).  \n\nEssa etapa que envolve as t\u00e9cnicas de toler\u00e2ncia a falhas ser\u00e1 detalhada no pr\u00f3ximo \ncap\u00edtulo deste trabalho. \n\n2.4.2 Arquitetura OSA-CBM \n\nO OSA-CBM (Open Systems Architecture for Condition-Based Maintenance) \n(LEBOLD; THURSTON, M., 2001), \u00e9 uma proposta de padroniza\u00e7\u00e3o para constru\u00e7\u00e3o \nde uma arquitetura para o desenvolvimento de sistemas de manuten\u00e7\u00e3o inteligente e \u00e9 \nbaseada na ideia de camadas que se relacionam entre si. Este prop\u00f5e facilitar a \nintegra\u00e7\u00e3o e interoperabilidade de componentes entre diferentes fabricantes de \nequipamentos. Na Figura 2.4, \u00e9 apresentado o modelo da arquitetura em camadas do \npadr\u00e3o OSA-CBM.  \n\n \n\nFigura 2.4: Arquitetura em camadas do padr\u00e3o OSA-CBM. \n\nEssa arquitetura foi projetada para reutilizar os padr\u00f5es de comunica\u00e7\u00e3o distribu\u00edda \nentre computadores e, para isso, foi adotado o padr\u00e3o de comunica\u00e7\u00e3o em redes (p. ex., \nInternet). O modelo de computa\u00e7\u00e3o adotado abre um grande leque de tecnologias atuais \nque podem ser utilizadas para troca de informa\u00e7\u00f5es entre os componentes. \n\nCada uma das camadas da arquitetura OSA-CBM (Figura 2.4) tem uma tarefa na \nmanuten\u00e7\u00e3o (LEBOLD; THURSTON, M., 2001): \n\n\u2022 Sensores inteligentes: formada por diversos sensores sofisticados e \nestrategicamente posicionados em partes cr\u00edticas do processo (equipamentos \nou m\u00e1quinas), a fim de coletar sinais precisos para o monitoramento da \ncondi\u00e7\u00e3o.  \n\n\u2022 Aquisi\u00e7\u00e3o de dados: m\u00f3dulo respons\u00e1vel por ler os sinais dos sensores e \ntransform\u00e1-los a partir de grandeza f\u00edsica em uma grandeza el\u00e9trica, \ndisponibilizando uma informa\u00e7\u00e3o \u00fatil para o restante do sistema. Tamb\u00e9m \npode ser respons\u00e1vel pelo armazenamento e forma\u00e7\u00e3o de banco de dados de \nhist\u00f3ricos. \n\n\n\n \n\n \n\n \n\n \n\n37 \n\n\u2022 Processamento de sinais: aplica os primeiros c\u00e1lculos sobre os dados \nadquiridos, utilizando t\u00e9cnicas de processamento de sinais para filtragens e \ntransforma\u00e7\u00f5es. \n\n\u2022 Monitoramento de condi\u00e7\u00e3o: etapa respons\u00e1vel pela detec\u00e7\u00e3o de \nanormalidades na condi\u00e7\u00e3o de funcionamento do processo. S\u00e3o comparadas \nas caracter\u00edsticas extra\u00eddas (sensores) com as previamente treinadas \n(modelo), que visam avaliar a situa\u00e7\u00e3o do processo. Por exemplo, valores \nesperados, limites de opera\u00e7\u00e3o ou indicadores de condi\u00e7\u00e3o (n\u00edvel baixo, n\u00edvel \nnormal ou n\u00edvel alto).  \n\n\u2022 Avalia\u00e7\u00e3o de sa\u00fade: fase que realiza o diagn\u00f3stico das anormalidades \ndetectadas pelo monitoramento da condi\u00e7\u00e3o. Essa fase tem como prop\u00f3sito \nidentificar as partes da m\u00e1quina ou equipamentos da planta industrial que \napresentam falhas. Al\u00e9m disso, faz uso de informa\u00e7\u00f5es sobre tend\u00eancias, \nhist\u00f3ricos e regras de conhecimentos de especialistas para diagnosticar e \npode armazenar os resultados formando um banco de dados com hist\u00f3ricos \nda sa\u00fade do equipamento. \n\n\u2022 Progn\u00f3stico: tem a fun\u00e7\u00e3o de realizar uma previs\u00e3o da sa\u00fade futura do \nequipamento monitorado, estimar a vida \u00fatil restante ou calcular uma taxa de \nprobabilidade para um determinado tempo antes da falha se manifestar. \nAdemais, faz uso de t\u00e9cnicas estat\u00edsticas, redes neurais e conhecimentos de \nespecialistas para criar um modelo de tend\u00eancia para acompanhar a condi\u00e7\u00e3o \nde opera\u00e7\u00e3o do processo.  \n\n\u2022 Tomada de decis\u00e3o: fornece suporte \u00e0 tomada de decis\u00e3o para a equipe de \nmanuten\u00e7\u00e3o com base nos resultados obtidos nas camadas anteriores. \nTamb\u00e9m fornece a\u00e7\u00f5es mais recomendadas para solucionar as falhas \nocorridas, que podem ser, por exemplo, agendar as manuten\u00e7\u00f5es, \nreconfigurar o equipamento ou a planta, emitir um alarme de emerg\u00eancia, \ntolerar a falha at\u00e9 se tornar mais cr\u00edtica, informar relat\u00f3rio sobre as falhas, \netc.  \n\n\u2022 Apresenta\u00e7\u00e3o \u2013 IHC: \u00e9 a interface homem-m\u00e1quina, para fornecer as \ninforma\u00e7\u00f5es de sa\u00edda desse sistema, que pode ser de forma \u00fanica por meio de \numa tela de computador para um especialista em manuten\u00e7\u00e3o, ou de forma \ndistribu\u00edda pela Internet. Essa etapa objetiva produzir as sa\u00eddas para \nrealimentar o processo de modo a solucionar as falhas ocorridas pela equipe \nde manuten\u00e7\u00e3o. \n\nNo presente trabalho, foi tomado o padr\u00e3o OSA-CBM como base para o \ndesenvolvimento do sistema embarcado para manuten\u00e7\u00e3o inteligente, que ser\u00e1 \napresentado nos pr\u00f3ximos cap\u00edtulos. \n\n2.4.3 Watchdog Agent \u2122 \n\nO Watchdog Agent\u2122 (WA) (DJURDJANOVIC ET AL., 2003) (LEE, J. ET AL., \n2004) \u00e9 uma proposta acad\u00eamica para um Sistema de Manuten\u00e7\u00e3o Inteligente do grupo \nIMS Center3 (Center for Intelligent Maintenance Systems), localizado nos EUA e \n\n                                                 \n3 Site oficial do grupo IMS Center \u2013 www.imscenter.net  \n\n\n\n \n\n \n\n \n\n \n\n38 \n\nvinculado com as universidades de Cincinnatti, Missouri-Rolla e Michigan e empresas \ncolaboradoras, como a Boeing, Toyota, Siemens, Carterpillar, AMD, entre outras.  \n\nO WA \u00e9 um conjunto de ferramentas que possibilita o monitoramento em tempo real \nde um equipamento em uma planta industrial. \u00c9 desenvolvido sobre uma plataforma \ncomposta por um computador industrial, em que foram implementadas as ferramentas \ncom a inten\u00e7\u00e3o de avaliar e predizer o desempenho dos equipamentos. As ferramentas \ns\u00e3o desenvolvidas em MATLAB.  \n\nO processamento de informa\u00e7\u00f5es pelo WA \u00e9 composto por quatro camadas: \nprocessamento de sinais, extra\u00e7\u00e3o de caracter\u00edsticas, avalia\u00e7\u00e3o de desempenho e fus\u00e3o \nde sensores. Ele foi desenvolvido para manter compatibilidade com a arquitetura do \npadr\u00e3o OSA-CBM, a fim de possibilitar a integra\u00e7\u00e3o de novas ferramentas com outros \ndispositivos compat\u00edveis com esse modelo. Al\u00e9m disso, tem a capacidade de fazer a \naquisi\u00e7\u00e3o de dados por meio de leituras nos sensores instalados na planta industrial. \n\nDe acordo com Jay Lee em (DJURDJANOVIC ET AL., 2003), o idealizador do WA, \neste foi projetado com objetivo de realizar a tarefa de avalia\u00e7\u00e3o da degrada\u00e7\u00e3o no \ndesempenho, tomando como base a leitura de sensores que medem as propriedades \ncr\u00edticas dos equipamentos. Assumiu-se que os sensores eram sens\u00edveis o suficiente para \ndetectar altera\u00e7\u00f5es da vari\u00e1vel de degrada\u00e7\u00e3o, proporcionando, desse modo, a avalia\u00e7\u00e3o \ne quantifica\u00e7\u00e3o da degrada\u00e7\u00e3o.  \n\nPara possibilitar o monitoramento do desempenho, o WA precisa adquirir algum \nconhecimento, a priori, sobre o processo de degrada\u00e7\u00e3o do equipamento. Nessa \nferramenta, \u00e9 poss\u00edvel utilizar para an\u00e1lises de comportamento um modelo matem\u00e1tico \nou conhecimentos de especialistas, ou registros de dados hist\u00f3ricos.  \n\nComo o WA ainda est\u00e1 em desenvolvimento, as tarefas de toler\u00e2ncia a falhas ainda \nn\u00e3o est\u00e3o completas. Todavia, no projeto atual j\u00e1 est\u00e1 prevista a inser\u00e7\u00e3o de elementos \ninteligentes capazes de realizar as tr\u00eas tarefas b\u00e1sicas da toler\u00e2ncia a falhas em \nequipamentos industriais (DJURDJANOVIC ET AL., 2003): \n\n\u2022 Avalia\u00e7\u00e3o quantitativa do desempenho da degrada\u00e7\u00e3o (detec\u00e7\u00e3o de \nanormalidades). \n\n\u2022 Diagn\u00f3stico do desempenho da degrada\u00e7\u00e3o atual ou prevista (diagn\u00f3stico de \nfalhas). \n\n\u2022 Predi\u00e7\u00e3o do desempenho da degrada\u00e7\u00e3o (predi\u00e7\u00e3o de falhas). \n\nA tarefa de detec\u00e7\u00e3o j\u00e1 est\u00e1 implementada pela avalia\u00e7\u00e3o de comportamentos atuais \ncomparado a comportamentos normais.  \n\nA tarefa de predi\u00e7\u00e3o ser\u00e1 realizada pela an\u00e1lise de tend\u00eancia de comportamento ou \num modelo matem\u00e1tico da din\u00e2mica de comportamento observada no equipamento, o \nque permite fazer a predi\u00e7\u00e3o de comportamentos futuros para o equipamento.  \n\nA tarefa de diagn\u00f3stico ser\u00e1 realizada por meio de aprendizado de padr\u00f5es do \ncomportamento, a fim de reconhecer situa\u00e7\u00f5es que foram observadas no passado ou \nestar ciente de situa\u00e7\u00f5es que nunca foram observadas anteriormente.  \n\nComo sa\u00edda, quando o WA estiver implantado em um processo industrial, fornecer\u00e1 \ninforma\u00e7\u00f5es para auxiliar na tomada de decis\u00e3o da equipe de manuten\u00e7\u00e3o. \n\n\n\n \n\n \n\n \n\n \n\n39 \n\nVale destacar que as etapas de, a aquisi\u00e7\u00e3o de dados, de processamento de sinais, de \nextra\u00e7\u00e3o de caracter\u00edsticas e avalia\u00e7\u00e3o de desempenho j\u00e1 est\u00e3o implementadas e \nvalidadas no WA. Nos experimentos deste trabalho, ser\u00e3o reutilizadas as etapas de \nprocessamento de sinais e a extra\u00e7\u00e3o de caracter\u00edsticas.   \n\n2.5 Estudo de Caso: Transporte de Combust\u00edveis para Petrobras \nA Petrobras Transporte S.A, conhecida por Transpetro4, subsidi\u00e1ria integral da \n\nPetrobras, segundo informa\u00e7\u00f5es obtidas no site oficial \u00e9 a principal empresa de log\u00edstica \ne transporte de combust\u00edveis do Brasil. Atende \u00e0s atividades de transporte e \narmazenamento de petr\u00f3leo e derivados, \u00e1lcool, biocombust\u00edveis e g\u00e1s natural. \n\nA Transpetro \u00e9 respons\u00e1vel pelo gerenciamento de uma rede dutovi\u00e1ria formada por \nmais de 11 mil km de dutos (oleodutos e gasodutos) que interligam todas as regi\u00f5es \nbrasileiras e abastecem os mais remotos pontos do pa\u00eds.  \n\nAs redes de dutos s\u00e3o interligadas a terminais terrestres e mar\u00edtimos, unindo as \u00e1reas \nde produ\u00e7\u00e3o, refino e distribui\u00e7\u00e3o da Petrobras e atuando na importa\u00e7\u00e3o e exporta\u00e7\u00e3o de \npetr\u00f3leo e derivados, de biocombust\u00edveis e de g\u00e1s natural. Nessa estrutura dutovi\u00e1ria, \npassam anualmente bilh\u00f5es de litros de combust\u00edveis. \u00c9 formada por 7 mil km de \noleodutos, 4 mil km de gasodutos, 20 terminais terrestres, 26 terminais aquavi\u00e1rios e \numa frota de 54 navios-petroleiros. Na Figura 2.5, \u00e9 apresentada a log\u00edstica que a \nTranspetro utiliza no Brasil, extra\u00edda do site oficial da empresa. \n\nPara gerenciar toda essa infraestrutura, a empresa criou o Centro Nacional de \nControle Operacional (CNCO), localizado no Rio de Janeiro. Esse centro visa monitorar \ne controlar todas as opera\u00e7\u00f5es de transporte dutovi\u00e1rio para centralizar as opera\u00e7\u00f5es. \nproporcionando aumento da efici\u00eancia e da seguran\u00e7a operacional, assim como a \nredu\u00e7\u00e3o de custos. \n\nTodas as instala\u00e7\u00f5es dutovi\u00e1rias espalhadas pelo pa\u00eds s\u00e3o interligadas a uma rede de \ncomunica\u00e7\u00e3o que interage com um sistema supervis\u00f3rio (SCADA \u2013 Sistemas de \nSupervis\u00e3o e Aquisi\u00e7\u00e3o de Dados). Isso possibilita monitorar as informa\u00e7\u00f5es \noperacionais. Ademais, permite que os t\u00e9cnicos de opera\u00e7\u00e3o tenham informa\u00e7\u00f5es \nprecisas, mensagens de alarmes e comandem as v\u00e1lvulas e os equipamentos (p. ex., ligar \ne desligar bombas, abrir e fechar v\u00e1lvulas, alterar fluxo nas malhas, al\u00e9m de detectar \nvazamentos e realizar as simula\u00e7\u00f5es operacionais). \n\nDentro de toda a log\u00edstica de abastecimento do Sistema Petrobras, \u00e9 dada uma \naten\u00e7\u00e3o especial \u00e0s opera\u00e7\u00f5es de terminais e oleodutos, pois \u00e9 onde flui a produ\u00e7\u00e3o da \nempresa at\u00e9 chegar aos consumidores. O transporte dutovi\u00e1rio possibilita agilidade, \nseguran\u00e7a e capacidade de fluxo na movimenta\u00e7\u00e3o dos combust\u00edveis entre essas partes. \n\nDos campos de produ\u00e7\u00e3o, o petr\u00f3leo \u00e9 transportado, por oleodutos e/ou por navios, \npara os terminais e de l\u00e1 at\u00e9 as refinarias. Ap\u00f3s o refino, os derivados s\u00e3o novamente \nescoados por dutos aos terminais aquavi\u00e1rios e terrestres para ser entregues, por dutos e \nnavios, \u00e0s companhias distribuidoras, chegando aos clientes nos mercados nacionais e \ninternacionais.  \n\n \n\n                                                 \n4 Site Transpetro \u2013 www.transpetro.com.br  \n\n\n\n \n\n \n\n \n\n \n\n40 \n\n \n\nFigura 2.5: Mapa de dutos e terminais da Transpetro no Brasil. \n\nNessa grande log\u00edstica de fornecimento em todo o Brasil, os dutos s\u00e3o o meio de \ntransporte preferencial tanto para atender o abastecimento das refinarias como para \nsuprir a necessidade dos grandes centros consumidores de combust\u00edveis.  \n\nEm fun\u00e7\u00e3o da grande import\u00e2ncia estrat\u00e9gica que se encontra o sistema de transporte \ndutovi\u00e1rio para Petrobras, a Transpetro investiu na cria\u00e7\u00e3o de dois centros de pesquisas \nespecializadas em manter esse sistema: \n\n\u2022 Centro de Tecnologia de Dutos (CTDUT): visa \u00e0 promo\u00e7\u00e3o do \ndesenvolvimento de tecnologias de inspe\u00e7\u00e3o, manuten\u00e7\u00e3o e reparo de \noleodutos, al\u00e9m de formar m\u00e3o de obra especializada. Possui um laborat\u00f3rio \nde pesquisa em escala real para o desenvolvimento de novas tecnologias em \ndutos, testes de produtos, equipamentos e sistemas de prote\u00e7\u00e3o ambiental.  \n\n\u2022 Centro Nacional de Reparo de Dutos da Petrobras (Creduto): surgiu da \nnecessidade estrat\u00e9gica de gerar capacita\u00e7\u00e3o e recursos pr\u00f3prios para reparos \ne outros tipos de interven\u00e7\u00e3o em dutos com qualidade, seguran\u00e7a e custos \nadequados \u00e0 atividade dutovi\u00e1ria. Seu objetivo \u00e9 capacitar e manter \ndispon\u00edveis recursos humanos e materiais para a execu\u00e7\u00e3o de reparo em \ndutos terrestres. \n\nVista a dimens\u00e3o continental desse sistema de log\u00edstica percebe-se a dificuldade que \na equipe de manuten\u00e7\u00e3o deve ter para atender a todas as falhas ocorridas e realizar \nreparos nas partes desse sistema.  \n\nAs manuten\u00e7\u00f5es realizadas na rede dutovi\u00e1ria s\u00e3o realizadas pela Transpetro por \nmeio de recursos humanos pr\u00f3prios formados pelos seus dois centros (CTDUT e \n\n\n\n \n\n \n\n \n\n \n\n41 \n\nCreduto). A equipe de manuten\u00e7\u00e3o aplica na pr\u00e1tica a estrat\u00e9gia preventiva, corretiva e, \n\u00e0s vezes preditiva, que depende do equipamento alvo da manuten\u00e7\u00e3o.  \n\nEm todos os milhares de quil\u00f4metros que formam a rede dutovi\u00e1ria, durante seu \npercurso, podem ser encontradas centenas ou at\u00e9 milhares de v\u00e1lvulas. Ent\u00e3o, o presente \ntrabalho focou na ideia de implantar, a princ\u00edpio, um Sistema de Manuten\u00e7\u00e3o Inteligente \nnas v\u00e1lvulas, que s\u00e3o operadas por um atuador el\u00e9trico (motor).  \n\nA v\u00e1lvula foi escolhida como estudo de caso por ser um equipamento importante \ndentro do processo de transporte de derivados de petr\u00f3leo. No futuro, a ideia \u00e9 expandir \no Sistema de Manuten\u00e7\u00e3o Inteligente para outras partes do processo. \n\nEssas v\u00e1lvulas s\u00e3o equipamentos industriais que tem a finalidade de controlar o \nfluxo de flu\u00eddos nos dutos. Seu trabalho \u00e9 simples: abrir ou fechar o obturador de fluxo \nnos dutos. \n\nEm uma v\u00e1lvula, podem ocorrer as seguintes falhas do ponto de vista de passagem \nde fluxo nos dutos: \n\n\u2022 Bloquear o fluxo: ocorre quando a v\u00e1lvula est\u00e1 aberta e devido a um motivo \ndesconhecido o fluxo nos dutos \u00e9 interrompido pelo acionamento do \nobturador. \n\n\u2022 Abertura para fluxo: acontece quando a v\u00e1lvula est\u00e1 fechada (obturador \nbloqueia o fluxo) e devido a um motivo desconhecido o obturador \u00e9 aberto e \no fluxo \u00e9 liberado nos dutos. \n\n\u2022 Fluxo parcial: ocorre quando a v\u00e1lvula n\u00e3o est\u00e1 nem fechada, nem aberta em \nsua totalidade, nesse caso, o fluxo \u00e9 liberado parcialmente nos dutos. \n\nEssas falhas t\u00eam as mais diversas causas que variam de defeitos internos na v\u00e1lvula \n(desgastes nas engrenagens, umidade, corros\u00e3o, etc.), defeitos no atuador el\u00e9trico \n(rompimento de bobina do motor, rolamentos, curtos circuitos, umidade, sobre torque, \netc.) at\u00e9 defeitos internos no obturador (obstru\u00e7\u00e3o do obturador, sedimentos na base, \nvazamentos, etc.). O dom\u00ednio de estudos para as falhas \u00e9 diverso e ser\u00e3o apresentados \nnos pr\u00f3ximos cap\u00edtulos mais detalhes. \n\nQuando as v\u00e1lvulas falham de forma indesejada, podem causar grandes preju\u00edzos no \nprocesso dutovi\u00e1rio. Por exemplo, a interrup\u00e7\u00e3o de um gasoduto pode cessar o processo \nde refino e gerar preju\u00edzos financeiros alt\u00edssimos, em fun\u00e7\u00e3o do tempo de parada na \nprodu\u00e7\u00e3o. Esse tipo de falha pode causar perdas financeiras e acidentes inimagin\u00e1veis. \nPara ilustra\u00e7\u00e3o, s\u00e3o apresentados, na Figura 2.6, alguns casos reais de dutos utilizados \npara transporte dos derivados de petr\u00f3leo nas refinarias da Petrobras. Na Figura 2.7, s\u00e3o \napresentados casos reais da utiliza\u00e7\u00e3o das v\u00e1lvulas acionadas por atuadores el\u00e9tricos no \nambiente de uma refinaria.  \n\nDesse modo, \u00e9 de interesse da Transpetro implantar um Sistema de Manuten\u00e7\u00e3o \nInteligente na sua rede dutovi\u00e1ria para que, al\u00e9m de monitorar as informa\u00e7\u00f5es \noperacionais e controlar o processo, possa detectar, diagnosticar e prever falhas na \nopera\u00e7\u00e3o dos equipamentos.  \n\nAssim, a determina\u00e7\u00e3o dos motivos que levaram \u00e0 ocorr\u00eancia de uma falha n\u00e3o \nprevista (diagn\u00f3stico) e a previs\u00e3o de falhas nos equipamento ao longo da rede \ndutovi\u00e1ria tornam-se importantes para a Transpetro. Essas novas tecnologias seriam \n\n\n\n \n\n \n\n \n\n \n\n42 \n\nintegradas ao CNCO e a manuten\u00e7\u00e3o proativa adotada como estrat\u00e9gia de manuten\u00e7\u00e3o \nadicionaria mais robustez ao sistema de transporte de derivados de petr\u00f3leo. \n\n \n\nFigura 2.6: Exemplos dos dutos dentro de uma refinaria. (a) Transporte interprocessos \nde refino e (b) abastecimento de uma refinaria. \n\n \n\nFigura 2.7: Exemplo de v\u00e1lvulas e atuadores utilizados em refinarias e terminais. (a) \nv\u00e1lvulas para controle de fluxo em dutos e (b) a grande quantidade de v\u00e1lvulas \n\nutilizadas apenas em uma parte da refinaria. \n\n2.6 Resumo do Cap\u00edtulo \nAo longo deste cap\u00edtulo foi abordada a import\u00e2ncia das a\u00e7\u00f5es de manuten\u00e7\u00e3o dentro \n\ndos processos produtivos em uma planta industrial, a fim de reduzir custos e aumentar a \nefici\u00eancia produtiva. \n\nFoi mostrado que a manuten\u00e7\u00e3o, quando \u00e9 bem vista e aplicada pela empresa, pode \nvir a ser um diferencial em rela\u00e7\u00e3o aos concorrentes, quanto \u00e0 redu\u00e7\u00e3o de custos \noperacionais de produ\u00e7\u00e3o. Desse modo, a manuten\u00e7\u00e3o \u00e9 vista como estrat\u00e9gica, pois, se \nmal aplicada, pode prejudicar diretamente a qualidade dos produtos e a disponibilidade \ndo processo produtivo, afetando os resultados de lucros da empresa. \n\nNeste cap\u00edtulo, foram apresentadas as defini\u00e7\u00f5es e caracter\u00edsticas das quatro \nestrat\u00e9gias mais comuns de manuten\u00e7\u00e3o, entre elas a corretiva, preventiva, preditiva e \nproativa, sendo a \u00faltima um dos focos do presente trabalho. \n\nAs estrat\u00e9gias de manuten\u00e7\u00e3o preditiva e proativa passaram a ser implementadas \ncom o avan\u00e7o tecnol\u00f3gico, uma vez que o sistema produtivo tornou-se mais complexo. \n\n\n\n \n\n \n\n \n\n \n\n43 \n\nEssas duas estrat\u00e9gias utilizam t\u00e9cnicas de monitoramento da condi\u00e7\u00e3o dos \nequipamentos por meio de sistemas computacionais. Em especial, a proativa apresenta-\nse como a mais interessante, j\u00e1 que possibilita analisar as condi\u00e7\u00f5es de opera\u00e7\u00e3o dos \nequipamentos para determinar se est\u00e3o ou n\u00e3o funcionando em condi\u00e7\u00f5es normais e, \ncaso seja detectada alguma anormalidade, pode reconfigurar o equipamento para reduzir \nos danos. Desse modo, a manuten\u00e7\u00e3o preditiva e proativa proporcionam o planejamento \nda manuten\u00e7\u00e3o, atingindo a redu\u00e7\u00e3o de custos operacionais, como a elimina\u00e7\u00e3o de \nreparos desperdi\u00e7ados, estoques menores, menos paradas no processo produtivo, \nprevisibilidade da vida \u00fatil e planejamento dos trabalhos de manuten\u00e7\u00e3o. \n\nComo as modernas plantas industriais s\u00e3o compostas por sensores e sistema de \ncontrole e automa\u00e7\u00e3o sofisticados, baseados em computa\u00e7\u00e3o, proporcionam reutilizar \nesses recursos para implantar um sistema de manuten\u00e7\u00e3o inteligente nesses \nequipamentos industriais. \n\nO foco principal desta pesquisa \u00e9 o desenvolvimento de um Sistema de Manuten\u00e7\u00e3o \nInteligente (SMI), que \u00e9 uma t\u00e9cnica computacional para monitoramento e avalia\u00e7\u00e3o da \ncondi\u00e7\u00e3o da planta industrial, sendo uma ferramenta apropriada e eficiente para \naumentar a disponibilidade do processo produtivo. Esse sistema visa fazer a detec\u00e7\u00e3o de \nanormalidades, diagn\u00f3stico de falhas e predi\u00e7\u00e3o de comportamentos futuros. Foram \napresentadas as defini\u00e7\u00f5es, caracter\u00edsticas e metodologia para desenvolvimento de um \nSMI.  \n\nEste trabalho est\u00e1 baseado na metodologia adotada pelo padr\u00e3o OSA-CBM, que \u00e9 \numa arquitetura utilizada para projeto de sistema de manuten\u00e7\u00e3o inteligente. Para um \nmelhor entendimento, foram apresentados a arquitetura e os conceitos b\u00e1sicos desse \npadr\u00e3o. Foi apresentado um exemplo de SMI, conhecido por Watchdog AgentTM, \ntamb\u00e9m baseado na arquitetura do padr\u00e3o OSA-CBM.  \n\nPor fim, foi apresentado o estudo de caso para o qual o presente trabalho est\u00e1 sendo \ndesenvolvido. Este trabalho pretende implantar SMI como uma ferramenta de toler\u00e2ncia \na falhas no sistema de transporte dutovi\u00e1rio da Transpetro, em que, por meio desse \nsistema, pode-se monitorar a condi\u00e7\u00e3o de opera\u00e7\u00e3o dos componentes ao longo dos \ndutos. \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n\n\n \n\n \n\n \n\n \n\n\n\n3 DETEC\u00c7\u00c3O, DIAGN\u00d3STICO E PREDI\u00c7\u00c3O DE \nFALHAS  \n\n3.1 Introdu\u00e7\u00e3o \nNo contexto industrial, as m\u00e1quinas ou equipamentos utilizados nas linhas \n\nprodutivas tamb\u00e9m est\u00e3o suscet\u00edveis as falhas. Estas falhas provocam interrup\u00e7\u00e3o da \nprodu\u00e7\u00e3o, reduzem a qualidade dos produtos e reduz os lucros da empresas. Uma \nsolu\u00e7\u00e3o adotada pelas empresas \u00e9 manter uma equipe de manuten\u00e7\u00e3o em prontid\u00e3o para \nrealizarem os reparos para restabelecimento do processo produtivo. \n\nA manuten\u00e7\u00e3o \u00e9 uma tarefa de fundamental import\u00e2ncia nos processos industriais e \n\u00e9 uma atividade realizada por t\u00e9cnicos humanos. Quando se detecta um evento anormal \nno processo, \u00e9 poss\u00edvel diagnosticar a origem da causa e, ent\u00e3o, tomar as decis\u00f5es \napropriadas para restaura\u00e7\u00e3o do processo. \n\nContudo, a completa confian\u00e7a em operadores humanos para lidar com eventos \nanormais e em situa\u00e7\u00f5es de emerg\u00eancias tem tornado-se gradativamente dif\u00edcil, devido a \nv\u00e1rios fatores. Esta dificuldade \u00e9 em fun\u00e7\u00e3o do amplo escopo das atividades de teste e \ntoler\u00e2ncia a falhas, que apresentam um grande n\u00famero de aplica\u00e7\u00f5es em problemas, \ncomo, defeitos nas unidades dos processos, degrada\u00e7\u00e3o dos processos, par\u00e2metros \nerrados, eventos naturais, etc. Isso, com o passar do tempo, pode se complicar em \nvirtude do tamanho e da complexidade dos processos industriais.  \n\nDevido ao r\u00e1pido desenvolvimento tecnol\u00f3gico e crescimento da complexidade dos \nprocessos industriais, passou-se a estudar a aplica\u00e7\u00e3o de t\u00e9cnicas de teste e toler\u00e2ncia a \nfalhas, a fim de tornar os equipamentos industriais mais robustos \n(VENKATASUBRAMANIAN; RENGASWAMY; YIN; ET AL., 2003). \n\nComo pode ser visto, aumentar a confiabilidade dos processos industriais \u00e9 um \ngrande desafio para os engenheiros. No passado, a comunidade de pesquisa discutia \ncomo o controle poderia ser automatizado usando sistemas computacionais para \nremover os operadores humanos da intera\u00e7\u00e3o direta com o processo industrial. Isso \nconduziu para um grande progresso na qualidade e consist\u00eancia na produ\u00e7\u00e3o, seguran\u00e7a \ne efici\u00eancia dos processos. O desafio atual est\u00e1 na automa\u00e7\u00e3o da manuten\u00e7\u00e3o de \nocorr\u00eancia dos eventos anormais, que faz uso de sistemas computacionais inteligentes, \nfornecendo aos operadores humanos a assist\u00eancia a urg\u00eancias em muitas \u00e1reas.  \n\nNeste cap\u00edtulo, ser\u00e1 abordado sobre as t\u00e9cnicas de teste e toler\u00e2ncia a falhas que \npodem ser adotadas para melhorar os processos industriais e auxiliar nas tarefas de \n\n\n\n \n\n \n\n \n\n \n\n46 \n\nmanuten\u00e7\u00e3o. Atrav\u00e9s do uso de Sistema de Manuten\u00e7\u00e3o Inteligente pode-se \nimplementar solu\u00e7\u00f5es para detec\u00e7\u00e3o, diagn\u00f3stico e predi\u00e7\u00e3o de falhas nos processos \nindustriais. \n\nDefini\u00e7\u00f5es, nomenclaturas e conceitos b\u00e1sicos sobre testes e toler\u00e2ncia a falhas em \ngeral ser\u00e3o abordados, al\u00e9m \u00e9 claro, de algumas das t\u00e9cnicas adotadas no presente \ntrabalho para monitorar o comportamento em processos industriais.  \n\nO principal objetivo deste cap\u00edtulo est\u00e1 no estudo da ado\u00e7\u00e3o de t\u00e9cnicas de rede \nneurais para alcan\u00e7ar a toler\u00e2ncia a falhas no processo industrial. Foi definido o \nalgoritmo de Mapas Auto-Organiz\u00e1veis (SOM) como ferramenta para aquisi\u00e7\u00e3o de \nconhecimento sobre o comportamento do sistema e ser\u00e1 respons\u00e1vel pelas tarefas de \ndetec\u00e7\u00e3o de anormalidades, diagn\u00f3stico de falhas e predi\u00e7\u00e3o de comportamento futuros. \n\n3.2 Defini\u00e7\u00f5es e Conceitos de Testes e Toler\u00e2ncia a Falhas  \nNeste cap\u00edtulo, ser\u00e3o apresentadas as defini\u00e7\u00f5es b\u00e1sicas de testes e toler\u00e2ncia a \n\nfalhas baseadas nas pesquisas de (AVIZIENIS ET AL., 2004) e demais trabalhos \n(ISERMANN, 1997), (WEBER, 2003) e (WEBER, 2002). As defini\u00e7\u00f5es abrangem uma \ngrande \u00e1rea de estudos, desde sistemas baseados em computadores, hardware, \nprocessos produtivos em geral, operadores humanos e usu\u00e1rios dos sistemas. Contudo, \nneste cap\u00edtulo, ser\u00e3o focados os termos do ponto de vista de sistemas baseados em \ncomputador. \n\n3.2.1 Fun\u00e7\u00e3o do sistema, comportamento, estrutura e servi\u00e7o \n\nUm sistema, neste trabalho, \u00e9 uma entidade que interage com outra entidade, outros \nsistemas, incluindo hardwares, softwares, equipamentos, m\u00e1quinas, processos \nindustriais, homens e o mundo f\u00edsico. Os outros sistemas s\u00e3o o ambiente de um dado \nsistema. A fronteira do sistema \u00e9 o limite comum entre o sistema e o ambiente. \n\nA fun\u00e7\u00e3o de tal sistema est\u00e1 em o que o sistema pretende fazer e \u00e9 descrito pela \nespecifica\u00e7\u00e3o funcional em termos de funcionalidade e desempenho. O \ncomportamento do sistema \u00e9 o que o sistema faz para executar a fun\u00e7\u00e3o e \u00e9 descrito \npor uma sequ\u00eancia de estados. O estado total de um dado sistema \u00e9 o conjunto de \nestados: computa\u00e7\u00e3o, comunica\u00e7\u00e3o, informa\u00e7\u00f5es armazenadas, intercomunica\u00e7\u00e3o, a\u00e7\u00e3o \ne condi\u00e7\u00e3o f\u00edsica. \n\nA estrutura de um sistema \u00e9 o que permite gerar o comportamento. Um sistema \u00e9 \ncomposto por um conjunto de componentes interligados e estes interagem entre si, onde \ncada componente \u00e9 outro sistema. \n\nO servi\u00e7o entregue pelo sistema \u00e9 como o seu comportamento \u00e9 percebido pelos \ndemais usu\u00e1rios. Um usu\u00e1rio \u00e9 outro sistema que recebe os servi\u00e7os.  \n\n3.2.2 Defeito, falha e erro \n\nUm servi\u00e7o correto \u00e9 entregue quando o servi\u00e7o implementa a fun\u00e7\u00e3o do sistema. O \ndefeito (failure) \u00e9 um evento que ocorre quando o servi\u00e7o entregue se desvia do servi\u00e7o \ncorreto. Um servi\u00e7o falha tamb\u00e9m por n\u00e3o cumprir com a especifica\u00e7\u00e3o final ou pela \nespecifica\u00e7\u00e3o n\u00e3o descrever adequadamente a fun\u00e7\u00e3o do sistema. Uma falha de servi\u00e7o \n\u00e9 a transi\u00e7\u00e3o de um servi\u00e7o correto para um incorreto. A transi\u00e7\u00e3o do servi\u00e7o incorreto \npara o correto \u00e9 uma restaura\u00e7\u00e3o do servi\u00e7o.  \n\n\n\n \n\n \n\n \n\n \n\n47 \n\nDesde que um servi\u00e7o seja uma sequ\u00eancia de estados externos do sistema, a sua \nfalha diz respeito a, pelo menos, um (ou mais) estado(s) externo(s) do sistema que \ndesviam-se do estado de servi\u00e7o correto. O desvio \u00e9 chamado de erro (error). A causa \ndesse erro \u00e9 chamada de falha (fault). As falhas do sistema  podem ser internas ou \nexternas.  \n\nA defini\u00e7\u00e3o de erro \u00e9 uma parte de um estado total de falha do sistema que pode \nconduzir para uma falha do servi\u00e7o. A falha est\u00e1 ativa quando causa um erro, caso \ncontr\u00e1rio est\u00e1 inativa. \n\nQuando a especifica\u00e7\u00e3o funcional de um sistema inclui um conjunto de fun\u00e7\u00f5es em \nsitua\u00e7\u00e3o de defeito (failure), isso pode deixar o sistema em modo de degrada\u00e7\u00e3o. \nNestas condi\u00e7\u00f5es, mesmo degradado, o sistema pode oferecer um subconjunto reduzido \nde servi\u00e7os para o usu\u00e1rio. A especifica\u00e7\u00e3o pode identificar v\u00e1rios modos, por exemplo, \nservi\u00e7os lentos, servi\u00e7os limitados, servi\u00e7o de emerg\u00eancia, servi\u00e7o perigoso, etc. Dize-\nse, ent\u00e3o, que neste caso o sistema sofre uma falha parcial.  \n\n3.2.3 Atributos de dependabilidade  \n\nO objetivo de t\u00e9cnicas de toler\u00e2ncia a falhas \u00e9 alcan\u00e7ar dependabilidade. Esse \ntermo \u00e9 uma tradu\u00e7\u00e3o literal do termo ingl\u00eas dependability, que indica a qualidade do \nservi\u00e7o fornecido por um dado sistema e a confian\u00e7a depositada no servi\u00e7o fornecido \n(WEBER, 2002). Uma defini\u00e7\u00e3o alternativa \u00e9 a habilidade de evitar falhas de servi\u00e7os \nque s\u00e3o mais frequentes e mais graves do que aceit\u00e1vel.  \n\nAs principais medidas de dependabilidade s\u00e3o:  \n\n\u2022 Disponibilidade (availability): disponibilizar servi\u00e7os corretos. \nProbabilidade de o sistema estar operacional em um determinado instante de \ntempo. Altern\u00e2ncia de per\u00edodos de funcionamento e reparo.  \n\n\u2022 Confiabilidade (reliability): continuidade de servi\u00e7os corretos. Capacidade \nde atender \u00e0 especifica\u00e7\u00e3o, dentro de condi\u00e7\u00f5es definidas, durante certo \nper\u00edodo de funcionamento e condicionado a estar operacional no in\u00edcio do \nper\u00edodo.  \n\n\u2022 Seguran\u00e7a (safety): aus\u00eancia de consequ\u00eancias catastr\u00f3ficas para o usu\u00e1rio \nou ambiente. Probabilidade de o sistema estar operacional e executar sua \nfun\u00e7\u00e3o corretamente ou descontinu\u00e1-la de forma que n\u00e3o provoque dano a \noutros sistemas ou pessoas que dele dependam. \n\n\u2022 Mantenabilidade (maintainability): habilidade para aplicar modifica\u00e7\u00f5es e \nreparos. Facilidade de realizar a manuten\u00e7\u00e3o do sistema, ou seja, a \nprobabilidade que um sistema com defeitos seja restaurado a um estado \noperacional dentro de um per\u00edodo determinado. A restaura\u00e7\u00e3o envolve a \nlocaliza\u00e7\u00e3o do problema, o reparo f\u00edsico e a coloca\u00e7\u00e3o em opera\u00e7\u00e3o. \n\n3.2.4 T\u00e9cnicas para alcan\u00e7ar dependabilidade \n\nNo desenvolvimento de um sistema que precisa ter atributos de dependabilidade, um \nconjunto de m\u00e9todos e t\u00e9cnicas deve ser empregado durante o projeto do sistema. Esses \nm\u00e9todos e t\u00e9cnicas s\u00e3o divididos em cinco grupos, conforme (AVIZIENIS ET AL., \n2004) e (WEBER, 2003):  \n\n\n\n \n\n \n\n \n\n \n\n48 \n\n\u2022 Preven\u00e7\u00e3o de falhas: recurso para prevenir a ocorr\u00eancia ou introdu\u00e7\u00e3o de \nfalhas. Envolve a sele\u00e7\u00e3o de metodologias de projeto e de tecnologias \nadequadas para o processo de engenharia e projeto dos sistemas. Geralmente, \n\u00e9 realizada durante o desenvolvimento do sistema, aplicando-se \nmetodologias que visam evitar as falhas. As melhorias no processo de \ndesenvolvimento objetivam reduzir a incid\u00eancia de falhas introduzidas no \nsistema, devido a erros de projeto.  \n\n\u2022 Toler\u00e2ncia a falhas: recurso que evita falha de servi\u00e7os durante a presen\u00e7a \nde uma falha no sistema. Ele visa evitar a ocorr\u00eancia das falhas pela detec\u00e7\u00e3o \nde erros e recupera\u00e7\u00e3o do sistema. Com frequ\u00eancia, o tratamento de falhas \u00e9 \nseguido por uma opera\u00e7\u00e3o de manuten\u00e7\u00e3o, cujo foco \u00e9 a remo\u00e7\u00e3o das falhas \nem tratamento, isto \u00e9, o fator que distingue toler\u00e2ncia a falhas da manuten\u00e7\u00e3o \n\u00e9 que esta requer a participa\u00e7\u00e3o de um agente externo.  \n\n\u2022 Remo\u00e7\u00e3o de falhas: recurso para reduzir o n\u00famero e a gravidade das falhas. \nPode ser aplicado durante o desenvolvimento do sistema, visando encontrar \nsuas falhas antes de sua inser\u00e7\u00e3o no mercado. Al\u00e9m disso, pode ser \nempregado durante o uso do sistema, em que \u00e9 realizado por meio da \nmanuten\u00e7\u00e3o corretiva ou preventiva. A manuten\u00e7\u00e3o corretiva tem por \nobjetivo remover as falhas que produziram um ou mais erros reportados, \nenquanto a manuten\u00e7\u00e3o preventiva prop\u00f5e descobrir e remover falhas antes \ndelas causarem erros durante o funcionamento normal do sistema. Essas \nformas de manuten\u00e7\u00e3o aplicadas a sistemas n\u00e3o-tolerantes a falhas os tornam \ncomo um sistema tolerante a falhas, em que sua manuten\u00e7\u00e3o pode ser \nrealizada on-line (sem interrup\u00e7\u00e3o do fornecimento dos servi\u00e7os) ou off-line \n(durante a parada dos servi\u00e7os). \n\n\u2022 Diagn\u00f3stico de falhas: recurso para classificar ou identificar o tipo, \ntamanho, a localiza\u00e7\u00e3o e o tempo da ocorr\u00eancia da falha. O diagn\u00f3stico de \nfalhas visa principalmente realizar uma classifica\u00e7\u00e3o da falha detectada, \nservindo como aux\u00edlio para outras t\u00e9cnicas. Quando uma falha \u00e9 detectada, o \ndiagn\u00f3stico \u00e9 usado para avali\u00e1-la e determinar a sua causa. \n\n\u2022 Predi\u00e7\u00e3o de falhas: recurso para estimar o n\u00famero, a incid\u00eancia futura e \nprov\u00e1vel consequ\u00eancia das falhas supostamente presentes. \u00c9 conduzida pela \nrealiza\u00e7\u00e3o de uma avalia\u00e7\u00e3o do comportamento do sistema com respeito \u00e0 \nocorr\u00eancia de falhas. A avalia\u00e7\u00e3o pode ser qualitativa e seu prop\u00f3sito \u00e9 \nidentificar, classificar e ordenar os modos de defeitos ou combina\u00e7\u00e3o de \neventos (defeito em componentes ou condi\u00e7\u00f5es do ambiente) que deveriam \nlevar o sistema a falhas. Tamb\u00e9m pode ser quantitativa, cuja finalidade \u00e9 a \navalia\u00e7\u00e3o do n\u00edvel de probabilidade que alguns atributos s\u00e3o satisfeitos, em \nque esses atributos s\u00e3o vistos como medidas.  \n\nEste trabalho focaliza a aplica\u00e7\u00e3o dessas t\u00e9cnicas para alcan\u00e7ar a dependabilidade \nnos sistemas aplicados em processos industriais, n\u00e3o sendo aqui abordadas, no entanto, \nt\u00e9cnicas para preven\u00e7\u00e3o de falhas. \n\n3.2.5 Amea\u00e7as \u00e0 dependabilidade \n\nDe acordo com defini\u00e7\u00f5es de (AVIZIENIS ET AL., 2004), ser\u00e1 abordado o ciclo de \nvida e algumas amea\u00e7as prejudiciais que afetam o n\u00edvel de dependabilidade do sistema. \nTamb\u00e9m ser\u00e3o aprofundados conceitos sobre defeito, falha e erro  \n\n\n\n \n\n \n\n \n\n \n\n49 \n\n3.2.5.1 Ciclo de vida de um sistema \n\nO ciclo de vida de um sistema \u00e9 separado em duas fases: \n\n\u2022 Fase de desenvolvimento inclui atividades, como a concep\u00e7\u00e3o do sistema e \navalia\u00e7\u00e3o do usu\u00e1rio at\u00e9 que o sistema seja aprovado em todos os casos de \nteste e esteja pronto para disponibilizar os servi\u00e7os. Durante o \ndesenvolvimento, o sistema interage com o ambiente de desenvolvimento e \nfalhas podem ser introduzidas desde as primeiras atividades.  \n\n\u2022 Fase de uso de um sistema come\u00e7a quando ele \u00e9 aceito pelo usu\u00e1rio e inicia-\nse a disponibiliza\u00e7\u00e3o dos servi\u00e7os. O uso consiste de per\u00edodos alternados de \nentrega de servi\u00e7os corretos, parada de servi\u00e7o e suspens\u00e3o \n(desligamento) de servi\u00e7o. A parada de servi\u00e7o \u00e9 causada por um defeito. \nEsse \u00e9 o per\u00edodo em que um servi\u00e7o incorreto \u00e9 entregue como sa\u00edda. A \nsuspens\u00e3o de servi\u00e7o \u00e9 uma parada intencional do servi\u00e7o por uma entidade \nautorizada. A manuten\u00e7\u00e3o s\u00e3o a\u00e7\u00f5es aplicadas durante os tr\u00eas per\u00edodos da \nfase de uso. \n\nDurante a fase de uso, o sistema interage com o ambiente de uso e pode ser afetado \npor falhas originadas nesse ambiente. O ambiente de uso consiste nos seguintes \nelementos: \n\n1. Mundo f\u00edsico: os fen\u00f4menos naturais. \n\n2. Administradores: entidades (humanos ou outros sistemas) que t\u00eam \nautoridade para gerenciar, modificar, reparar, restaurar e utilizar o sistema; \nalguns podem ter atitudes para manter o sistema (manuten\u00e7\u00e3o) ou atitudes \nmaliciosas. \n\n3. Usu\u00e1rios: entidades (humanos ou outros sistemas) que recebem os servi\u00e7os \nfornecidos pelo sistema. \n\n4. Provedor: entidades (humanos ou outros sistemas) que entregam servi\u00e7os \npara o sistema. \n\n5. Infraestrutura: entidades que disponibilizam servi\u00e7os especializados para o \nsistema, como comunica\u00e7\u00e3o, localiza\u00e7\u00e3o, fonte de alimenta\u00e7\u00e3o, refrigera\u00e7\u00e3o, \netc. \n\n6. Intrusos: entidades maliciosas (humanos ou outros sistemas) que \ndesrespeitam um agente autorizado para ter acesso, alterar os servi\u00e7os ou \nparalis\u00e1-los, modificar os servi\u00e7os ou a funcionalidade, ou o desempenho. \n\nO termo manuten\u00e7\u00e3o inclui os reparos ou a restaura\u00e7\u00e3o e todas as modifica\u00e7\u00f5es que \no sistema sofre durante a fase de uso no ciclo de vida. Na Figura 3.1, s\u00e3o apresentadas \nas formas de manuten\u00e7\u00e3o de acordo com o ponto de vista de toler\u00e2ncia a falhas proposto \npor (AVIZIENIS ET AL., 2004).  \n\nA manuten\u00e7\u00e3o \u00e9 divida em duas fases: a de reparos que \u00e9 referente \u00e0 restaura\u00e7\u00e3o da \ncondi\u00e7\u00e3o de falha dos servi\u00e7os do sistema para uma situa\u00e7\u00e3o que forne\u00e7a os servi\u00e7os \ncorretos, que basicamente visa remover as falhas reportadas ou descobertas no sistema. \nA outra \u00e9 a de modifica\u00e7\u00f5es que envolve a etapa de projeto do sistema ou a inser\u00e7\u00e3o de \nnovas funcionalidades (atualiza\u00e7\u00e3o) no fornecimento dos servi\u00e7os, por exemplo, devido \na mudan\u00e7as repentinas no ambiente de uso ou por falta de servi\u00e7os especificados no \nprojeto. \n\n\n\n \n\n \n\n \n\n \n\n50 \n\n \n\nFigura 3.1: Formas de manuten\u00e7\u00e3o segundo (AVIZIENIS ET AL., 2004). \n\nO reparo \u00e9 um conceito aplicado \u00e0 toler\u00e2ncia a falhas, que envolve a participa\u00e7\u00e3o de \num agente externo, ou seja, um t\u00e9cnico de uma equipe de manuten\u00e7\u00e3o, equipamento \npara testes on-line ou a avalia\u00e7\u00e3o por softwares. Aplica-se t\u00e9cnicas de remo\u00e7\u00e3o de \nfalhas (durante a fase de uso) ou predi\u00e7\u00e3o de falhas para apontar situa\u00e7\u00f5es em que \u00e9 \nnecess\u00e1rio realizar o reparo.  \n\nDe fato, o reparo pode ser considerado como uma atividade da toler\u00e2ncia a falhas \ndentro de um sistema mais amplo, que inclui o sistema em reparo, as pessoas envolvidas \ne os outros sistemas que interagem entre si, que visam realizar os consertos necess\u00e1rios. \n\n3.2.5.2 Defeitos \n\nO defeito de servi\u00e7o \u00e9 definido como um evento que ocorre quando a entrega de um \nservi\u00e7o \u00e9 desviado de um servi\u00e7o correto. Os defeitos nos servi\u00e7os se caracterizam \nde acordo com quatro pontos de vista: \n\n\u2022 Dom\u00ednio: os defeitos podem ser de conte\u00fado, em que o conte\u00fado das \ninforma\u00e7\u00f5es fornecidas pelo sistema desvia-se das fun\u00e7\u00f5es implementadas, e \nde temporiza\u00e7\u00e3o, em que o tempo de chegada ou dura\u00e7\u00e3o da informa\u00e7\u00e3o \nentregue pelo sistema desvia-se das fun\u00e7\u00f5es implementadas. \n\n\u2022 Detectabilidade: visa sinalizar ao usu\u00e1rio os defeitos ocorridos no sistema. A \nsinaliza\u00e7\u00e3o faz uso de mecanismos de detec\u00e7\u00e3o que verificam o \nfuncionamento correto dos servi\u00e7os entregues pelo sistema. Quando perdas \ns\u00e3o detectadas e sinais de alerta s\u00e3o emitidos, ocorre a sinaliza\u00e7\u00e3o do defeito, \ncaso contr\u00e1rio n\u00e3o \u00e9 sinalizado. Quando a ocorr\u00eancia do defeito provocar a \nredu\u00e7\u00e3o dos servi\u00e7os, o sistema est\u00e1 em modo degradado para o usu\u00e1rio. \nEsse modo pode reduzir o funcionamento, acionar uma emerg\u00eancia ou \nparalisar o sistema. \n\n\u2022 Consist\u00eancia: os defeitos consistentes s\u00e3o os servi\u00e7os incorretos que s\u00e3o \npercebidos identicamente por todos os usu\u00e1rios do sistema, j\u00e1 os defeitos \ninconsistentes s\u00e3o percebidos de forma diferenciada por alguns ou todos os \nusu\u00e1rios do sistema.  \n\n\n\n \n\n \n\n \n\n \n\n51 \n\n\u2022 Consequ\u00eancia: os defeitos s\u00e3o definidos de acordo com uma rela\u00e7\u00e3o entre \nbenef\u00edcio durante a aus\u00eancia de falhas e a consequ\u00eancia dos servi\u00e7os \nentregues pelo sistema. Nos defeitos sem import\u00e2ncia, as consequ\u00eancias dos \ndanos s\u00e3o similares aos custos e benef\u00edcios fornecidos pelo servi\u00e7o correto e \nnos defeitos catastr\u00f3ficos, as conseq\u00fc\u00eancias dos danos s\u00e3o ordens de \nmagnitude ou imensuravelmente superiores aos benef\u00edcios fornecidos pelo \nservi\u00e7o correto. \n\n3.2.5.3 Falhas \n\nAs falhas que afetam o sistema durante seu ciclo de vida pertencem a quatro grupos \nb\u00e1sicos de acordo com a origem da causa: \n\n\u2022 Falhas de desenvolvimento: incluem todas as classes de falhas que ocorrem \ndurante o desenvolvimento do sistema, como erro na especifica\u00e7\u00e3o, \nmetodologia de projeto inadequada, etc. \n\n\u2022 Falhas de intera\u00e7\u00e3o: incluem todas as falhas externas ao sistema. S\u00e3o \nprovocadas por elementos do ambiente que interagem com o sistema durante \no seu uso.  \n\n\u2022 Falhas naturais: s\u00e3o falhas f\u00edsicas que afetam a parte estrutural do sistema \n(ou hardware) e s\u00e3o causadas por fen\u00f4menos naturais sem a participa\u00e7\u00e3o \nhumana. Durante a opera\u00e7\u00e3o do sistema, as falhas naturais podem ser \ninternas, devido a processos naturais que causam deteriora\u00e7\u00f5es f\u00edsicas, ou \nexternas, em raz\u00e3o do processo natural ser afetado por sistemas vizinhos.  \n\n\u2022 Falhas provocadas por humanos: s\u00e3o falhas que incluem a aus\u00eancia de atos \nque deveriam ser executados, ou seja, omiss\u00e3o. Tamb\u00e9m podem ser \nclassificados de acordo com o objetivo dos humanos que interagem com o \nsistema: \n\no Falhas maliciosas: s\u00e3o introduzidas no sistema com o objetivo de \ncausar dano ao sistema, alterando seu funcionamento. Podem tamb\u00e9m \nser introduzidas por meio de reparos realizados. Tem como \nconsequ\u00eancia a interrup\u00e7\u00e3o do fornecimento dos servi\u00e7os (produzir \npreju\u00edzos) ou roubo de informa\u00e7\u00f5es privilegiadas. \n\no Falhas n\u00e3o-maliciosas: s\u00e3o introduzidas sem um objetivo danoso, \nmas que podem ser originadas de tomadas de decis\u00e3o erradas, corte \nde custos, pe\u00e7as inadequadas em reparos ou de baixa qualidade. \n\n3.2.5.4 Erros \n\nUm erro \u00e9 uma parte de um estado total do sistema que pode levar a um defeito. Este \nocorre quando um erro causa um desvio no servi\u00e7o entregue do servi\u00e7o correto. A causa \nde um erro pode ser chamada de falha. \n\nUm erro \u00e9 detectado se a presen\u00e7a dele \u00e9 percebida por algum outro sistema ou \u00e9 \nindicada por um alarme de erro. Erros que est\u00e3o presentes, mas n\u00e3o s\u00e3o detectados, s\u00e3o \nerros latentes. \n\nUm sistema consiste em um conjunto de componentes que interajem entre si, cujo \nestado total \u00e9 o conjunto de estados dos componentes. A defini\u00e7\u00e3o implica que \noriginalmente uma falha deve causar um erro no estado de um (ou mais) componente(s), \n\n\n\n \n\n \n\n \n\n \n\n52 \n\nmas o defeito de servi\u00e7os n\u00e3o ocorrer\u00e1 enquanto o estado externo do componente n\u00e3o \nfizer parte do estado externo do sistema. N\u00e3o importa quando o erro se torna parte do \nestado externo do componente, uma vez que o defeito sempre ocorrer\u00e1, mas, sim, \nquando o erro permanece interno em todo o sistema.  \n\n3.2.5.5 Rela\u00e7\u00e3o entre falhas, erros e defeitos \n\nO mecanismo de cria\u00e7\u00e3o e de manifesta\u00e7\u00e3o de falhas, erros e defeitos, em geral \nsegue uma ordem definida. A Figura 3.2 representa a ordem de propaga\u00e7\u00e3o de erros, \nmostrando a rela\u00e7\u00e3o entre falha, erro e defeito conforme a seguir: \n\n1. Uma falha \u00e9 ativada e um erro \u00e9 produzido. A ativa\u00e7\u00e3o da falha \u00e9 a aplica\u00e7\u00e3o \nde uma entrada a um componente que causa a ativa\u00e7\u00e3o de uma falha \ndormente. \n\n2. A propaga\u00e7\u00e3o de um erro dentro de um dado componente \u00e9 causada pelo \nprocesso do sistema. Um erro \u00e9 sucessivamente transformado em outros \nerros. \n\n3. O defeito de um servi\u00e7o ocorre quando um erro \u00e9 propagado para a interface \ndo servi\u00e7o e causa para o servi\u00e7o, disponibilizado pelo sistema, o desvio do \nservi\u00e7o correto.  \n\n \n\nFigura 3.2: Mecanismo de propaga\u00e7\u00e3o do erro (AVIZIENIS ET AL., 2004). \n\nNas pr\u00f3ximas se\u00e7\u00f5es, ser\u00e1 estendido o uso dos conceitos destas t\u00e9cnicas de \ntoler\u00e2ncia a falhas para serem aplicados neste trabalho. Entre elas, a detec\u00e7\u00e3o, \ndiagn\u00f3stico e predi\u00e7\u00e3o ou monitoramento de falhas em processos industriais. \n\n3.3 Detec\u00e7\u00e3o e Diagn\u00f3stico de Falhas \nA primeira t\u00e9cnica para alcan\u00e7ar dependabilidade abordada neste estudo \u00e9 a tarefa \n\npara Detec\u00e7\u00e3o e Diagn\u00f3stico de Falhas (DDF), apresentada por (KATIPAMULA; \nBRAMBLEY, 2005). Esta \u00e9 uma \u00e1rea que aborda a automatiza\u00e7\u00e3o do processo a fim de \ndetectar falhas e diagnosticar suas causas. \u00c9 uma t\u00e9cnica baseada nos conceitos de testes \ne toler\u00e2ncia a falhas que visa evitar a ocorr\u00eancia ou continuidade das falhas, pela \ndetec\u00e7\u00e3o de erros e recupera\u00e7\u00e3o do sistema por meio de reparos nas partes identificadas \nque causaram a falha (VENKATASUBRAMANIAN; RENGASWAMY; YIN; ET AL., \n2003). Essa t\u00e9cnica \u00e9 fundamental para a Manuten\u00e7\u00e3o Inteligente (Se\u00e7\u00e3o 2.3) em \nsistemas industriais.  \n\n3.3.1 Processo para DDF em uma aplica\u00e7\u00e3o gen\u00e9rica  \n\nSegundo (KATIPAMULA; BRAMBLEY, 2005), o objetivo de um Sistema \nAutom\u00e1tico de DDF \u00e9 detectar antecipadamente a ocorr\u00eancia das falhas e diagnosticar \nsuas causas, permitindo a remo\u00e7\u00e3o das falhas antes que causem danos adicionais ao \nsistema ou perda do fornecimento de servi\u00e7os.  \n\nEsse sistema \u00e9 realizado por um monitoramento cont\u00ednuo das condi\u00e7\u00f5es de opera\u00e7\u00e3o \ndo sistema aplicado. Al\u00e9m disso, visa detectar e diagnosticar as condi\u00e7\u00f5es anormais de \nfuncionamento e associar a elas as falhas encontradas, avaliando a import\u00e2ncia de cada \numa e decidindo como combat\u00ea-las.  \n\n\n\n \n\n \n\n \n\n \n\n53 \n\nUm processo de opera\u00e7\u00e3o e manuten\u00e7\u00e3o em um sistema ou equipamento que cont\u00e9m \num Sistema Autom\u00e1tico de DDF pode conter quatro fun\u00e7\u00f5es, conforme a Figura 3.3:  \n\n1. Monitorar o sistema ou equipamento at\u00e9 detectar alguma condi\u00e7\u00e3o de \nanormalidade (problemas). Essa etapa \u00e9 referente \u00e0 Detec\u00e7\u00e3o da Falha.  \n\n2. Quando \u00e9 detectada uma condi\u00e7\u00e3o anormal, o Diagn\u00f3stico da Falha \u00e9 \nacionado para avaliar a falha e determinar sua causa. As duas primeiras \netapas constituem o Processo de DDF.  \n\n3. Ap\u00f3s o diagn\u00f3stico, \u00e9 aplicada uma Avalia\u00e7\u00e3o da Falha, que objetiva estimar \no tamanho e a import\u00e2ncia do seu impacto no desempenho do sistema (por \nexemplo, em termos de consumo de energia, seguran\u00e7a de operadores \nhumanos, danos que pode causar, disponibilidade, custos, impacto ao \nambiente, etc.).  \n\n4. Com base na avalia\u00e7\u00e3o anterior, a etapa de Tomada de Decis\u00e3o \u00e9 acionada, \ncom a finalidade de decidir como responder \u00e0 falha (por exemplo, uma a\u00e7\u00e3o \nde reparos pela manuten\u00e7\u00e3o). Essa etapa \u00e9 acompanhada com o aux\u00edlio de \num especialista humano para tomar as decis\u00f5es convenientes \u00e0 situa\u00e7\u00e3o \nocorrida.  \n\nN\u00e3o tomar \na\u00e7\u00e3o\n\nEquipamento ou Sistema em Monitoramento\n\nContinuar \nFuncionando?\n\nReconfigurar\nSistema?\n\nTolerar?\n\nSim\n\nN\u00e3o\n\nAlarme ou \nDesligar\n\nN\u00e3o\n\nReconfigura\u00e7\u00e3o \ndo Sistema\n\nSim\n\nSolicitar \nManuten\u00e7\u00e3o\n\nN\u00e3o\n\nTomada de Decis\u00e3o\n\nSim\nDetec\u00e7\u00e3o de \n\nFalha\n\nDiagn\u00f3stico \nde Falha\n\nFalha\n\nProcesso de DDF\n\nSem falha\n\nDados\n\nAvalia\u00e7\u00e3o da \n\nFalha\n\n \n\nFigura 3.3: Estrutura geral de um Sistema Autom\u00e1tico de DDF para uma aplica\u00e7\u00e3o \ngen\u00e9rica (KATIPAMULA; BRAMBLEY, 2005). \n\nNa etapa de tomada de decis\u00e3o, o sistema pode se reconfigurar de modo a suportar a \nfalha ocorrida e continuar em funcionamento, mesmo em condi\u00e7\u00e3o degradada, mas \ncontinuar\u00e1 emitindo um alarme de aviso do problema. Ou seja, a decis\u00e3o de \nreconfigura\u00e7\u00e3o do sistema visa reduzir o esfor\u00e7o e talvez amenizar a causa da falha e \nestender por um tempo maior a continuidade do sistema em funcionamento correto.  \n\nTodas as decis\u00f5es que venham a ser tomadas dependem muito do ponto de vista do \nespecialista sobre as amea\u00e7as a dependabilidade do sistema, vistas na Se\u00e7\u00e3o 3.2.5. \nDependendo da an\u00e1lise de cada caso, a detec\u00e7\u00e3o de falhas pode ser relativamente mais \n\n\n\n \n\n \n\n \n\n \n\n54 \n\nf\u00e1cil do que o diagn\u00f3stico, por causa das falhas ou da avalia\u00e7\u00e3o da origem dos impactos \ndas falhas. \n\nMuitas abordagens para implementar um Sistema de DDF foram propostas \n(MULLER ET AL., 2008) (JARDINE ET AL., 2006) (VENKATASUBRAMANIAN; \nRENGASWAMY; YIN; ET AL., 2003), apresentado estruturas e formas diferentes para \na sequ\u00eancia de etapas de detec\u00e7\u00e3o e diagn\u00f3stico, que n\u00e3o \u00e9 definida como fixa, mas \npode ser vari\u00e1vel, dependendo do objetivo. Em alguns casos, o sistema de detec\u00e7\u00e3o \nfunciona continuamente, enquanto em outro o diagn\u00f3stico \u00e9 ativado depois da detec\u00e7\u00e3o \nda falha. Tamb\u00e9m, pode ocorrer de ambas executarem em paralelo, ou em outros casos, \ncada etapa \u00e9 executada uma vez. \n\n3.3.2 Fundamentos de um Sistema de DDF \n\nDe acordo com (KATIPAMULA; BRAMBLEY, 2005) diferentes abordagens \npodem ser utilizadas para implementar a t\u00e9cnica de detectar e diagnosticar falhas. A \nprincipal diferen\u00e7a entre elas est\u00e1 nas abordagens de conhecimento ou informa\u00e7\u00f5es \nadquiridas, que ser\u00e3o utilizadas para formular o diagn\u00f3stico ou classifica\u00e7\u00e3o.  \n\nEm geral, as t\u00e9cnicas para diagn\u00f3sticos s\u00e3o baseadas em modelos que podem ser de \nconhecimento a priori (p. ex., modelos de comportamento) ou completamente emp\u00edrico \ncom base nos dados (p. ex., modelo caixa preta). Ambas as abordagens utilizam \nmodelos e dados, mas para formular a base para o diagn\u00f3stico \u00e9 necess\u00e1rio abordagens \ndiferentes. Tamb\u00e9m pode ser por meio de dados de hist\u00f3rico do processo.  \n\nNa abordagem baseada no conhecimento a priori, usa-se esse conhecimento \n(rela\u00e7\u00f5es f\u00edsicas) para especificar um modelo que serve como base para identificar e \navaliar diferen\u00e7as entre o estado atual de opera\u00e7\u00e3o, o estado de opera\u00e7\u00e3o esperado e os \nvalores das caracter\u00edsticas obtidos do modelo.  \n\nA abordagem puramente emp\u00edrica (baseada nos dados) n\u00e3o utiliza conhecimento a \npriori do processo, em vez disso, cria-se um modelo apenas com base nas medi\u00e7\u00f5es do \ncomportamento f\u00edsico dos dados e do pr\u00f3prio processo.  \n\nM\u00e9todos baseados em modelo podem ser quantitativos ou qualitativos. Modelos \nquantitativos s\u00e3o conjuntos de rela\u00e7\u00f5es matem\u00e1ticas baseadas nos fundamentos f\u00edsicos \nde constru\u00e7\u00e3o dos processos. Modelos qualitativos s\u00e3o modelos formados pelas rela\u00e7\u00f5es \nderivadas dos fundamentos f\u00edsicos e incluem tamb\u00e9m o uso de sistemas com base em \nregras. \n\nEm terceiro lugar, t\u00eam-se os modelos baseados inteiramente no processamento de \ndados do hist\u00f3rico, em que assume-se uma grande quantidade de dados hist\u00f3ricos est\u00e1 \ndispon\u00edvel. Esses modelos incluem m\u00e9todos que s\u00e3o derivados puramente dos dados \ncoletados ou a aplica\u00e7\u00e3o de t\u00e9cnicas para extrair caracter\u00edsticas (processamento de \nsinais). Estas t\u00e9cnicas, por sua vez, incluem a aplica\u00e7\u00e3o de m\u00e9todos derivados da \nestat\u00edstica, de redes neurais e classifica\u00e7\u00e3o de padr\u00f5es.  \n\nNeste trabalho, foi adotada a aplica\u00e7\u00e3o da t\u00e9cnica com base no processamento de \ndados do hist\u00f3rico. \n\n3.3.3 Processamento de Dados do Hist\u00f3rico  \n\nO m\u00e9todo tem como base o processamento de dados hist\u00f3ricos do processo, n\u00e3o \nnecessitando conhecimento extra sobre o sistema.  \n\n\n\n \n\n \n\n \n\n \n\n55 \n\nDo ponto de vista industrial, uma grande quantidade de aplica\u00e7\u00f5es de diagn\u00f3stico de \nfalhas \u00e9 baseada em abordagens de processamento do hist\u00f3rico. Isso \u00e9 devido ao fato de \no processamento de hist\u00f3rico ser uma abordagem de f\u00e1cil implementa\u00e7\u00e3o e que requer \npequeno esfor\u00e7o de modelagem e conhecimento a priori.  \n\nExistem algumas t\u00e9cnicas de transforma\u00e7\u00e3o que s\u00e3o aplicadas a esses dados e \npreparam como um \u201cconhecimento a priori\u201d para o sistema de diagn\u00f3stico. Essas \nt\u00e9cnicas s\u00e3o conhecidas como extra\u00e7\u00e3o de caracter\u00edsticas, e podem ser classificadas \ncomo n\u00e3o-estat\u00edsticas ou estat\u00edsticas. As redes neurais (HAYKIN, 2001) se destacam \ncomo uma importante classe de ferramentas classificadas como n\u00e3o-estat\u00edsticas, \u00e9 \nadotada no presente trabalho e ser\u00e1 abordada na Se\u00e7\u00e3o 3.5.. \n\n3.3.4 Caracter\u00edsticas desej\u00e1veis em um Sistema de DDF  \n\nComo existem diversas abordagens para detec\u00e7\u00e3o e diagn\u00f3stico na literatura, este \ntrabalho foi baseado nas pesquisas de (VENKATASUBRAMANIAN; \nRENGASWAMY; KAVURI; ET AL., 2003) e (VENKATASUBRAMANIAN; \nRENGASWAMY; YIN; ET AL., 2003), na qual \u00e9 apresentado um conjunto de \ncaracter\u00edsticas e requisitos desej\u00e1veis em sistemas de detec\u00e7\u00e3o e diagn\u00f3stico.  \n\nEssas caracter\u00edsticas s\u00e3o \u00fateis para avaliar os v\u00e1rios m\u00e9todos de implementa\u00e7\u00e3o de \num Sistema de DDF, como os dados dispon\u00edveis, confiabilidade da solu\u00e7\u00e3o, \ngeneraliza\u00e7\u00e3o, efici\u00eancia da computa\u00e7\u00e3o, etc. Assim, n\u00e3o importando quando uma \nanormalidade ocorre no sistema, o sistema, para um caso geral, deve ser capaz de \nsugerir um conjunto de hip\u00f3teses ou falhas que expliquem a anormalidade.  \n\nA seguir s\u00e3o apresentadas algumas caracter\u00edsticas para projeto um Sistema de DDF: \n\n\u2022 Detec\u00e7\u00e3o e diagn\u00f3stico r\u00e1pidos: o sistema deve responder rapidamente ao \ndetectar e diagnosticar falhas do sistema. Um sistema que \u00e9 projetado para \ndetectar falhas rapidamente (particularmente mudan\u00e7as bruscas) poder\u00e1 ser \nsens\u00edvel a influ\u00eancias externas, como ru\u00eddos, o que pode levar a falsos \nalarmes. \n\n\u2022 Isolabilidade: \u00e9 a habilidade do sistema em distinguir entre diferentes tipos \nde falhas. Sob condi\u00e7\u00f5es ideais, livre de ru\u00eddo e incertezas do modelo, o \nsistema de diagn\u00f3stico deve gerar uma sa\u00edda que classifique corretamente a \nfalha ocorrida.  \n\n\u2022 Robustez: deve ser robusto o suficiente em condi\u00e7\u00f5es com ru\u00eddo e \nincertezas.  \n\n\u2022 Identifica\u00e7\u00e3o de novos defeitos: deve ser capaz de identificar, dado as \ncondi\u00e7\u00f5es atuais do sistema, se est\u00e1 funcionando em modo normal ou \nanormal e, se anormal, verificar se a causa \u00e9 um defeito conhecido ou n\u00e3o. \nMesmo sobre condi\u00e7\u00f5es n\u00e3o previstas no projeto, o sistema de diagn\u00f3stico \ndeve reconhecer a ocorr\u00eancia de uma nova falha e n\u00e3o fazer uma \nclassifica\u00e7\u00e3o err\u00f4nea.  \n\n\u2022 Estimar erro de classifica\u00e7\u00e3o: um requisito importante e pr\u00e1tico para o \nsistema \u00e9 construir um valor de confian\u00e7a para o usu\u00e1rio. Idealmente, o \nsistema de diagn\u00f3stico pode estimar um erro de classifica\u00e7\u00e3o, como uma \nmedida para estimar n\u00edveis de confian\u00e7a para as decis\u00f5es decorrentes do \ndiagn\u00f3stico.  \n\n\n\n \n\n \n\n \n\n \n\n56 \n\n\u2022 Adaptabilidade: processos, em geral, passam por aperfei\u00e7oamentos, sofrem \nmudan\u00e7as das entradas externas ou mudan\u00e7as na estrutura e assim por diante. \nAs condi\u00e7\u00f5es de opera\u00e7\u00e3o do processo sofrem altera\u00e7\u00f5es n\u00e3o somente em \nfun\u00e7\u00e3o das perturba\u00e7\u00f5es, mas tamb\u00e9m das mudan\u00e7as no ambiente, tais como, \nna quantidade de produ\u00e7\u00e3o, na qualidade dos materiais, na vaz\u00e3o de uma \ntubula\u00e7\u00e3o, etc. Assim, o sistema de diagn\u00f3stico deve ser adapt\u00e1vel a tais \nmudan\u00e7as, sendo poss\u00edvel de customizar gradualmente o escopo para \nadicionar os novos casos que surgem.  \n\n\u2022 Facilidade de explica\u00e7\u00e3o: al\u00e9m da habilidade de identificar a origem das \nfalhas, o sistema deve fornecer explica\u00e7\u00f5es como a falha se originou e se \npropagou at\u00e9 a situa\u00e7\u00e3o atual. Isso \u00e9 um fator importante para um Sistema \nOn-line de Suporte \u00e0 Decis\u00e3o. Por fim, o sistema deve justificar suas \nrecomenda\u00e7\u00f5es ao operador conforme for a avalia\u00e7\u00e3o.  \n\n\u2022 Requisito computacional e armazenamento: geralmente, solu\u00e7\u00f5es de \ntempo real exigem requisitos de armazenamento, processamento e consumo \nde pot\u00eancia. O ideal \u00e9 alcan\u00e7ar um sistema de diagn\u00f3stico que encontre um \nponto de equil\u00edbrio entre eles.  \n\n3.4 Detec\u00e7\u00e3o, Diagn\u00f3stico e Predi\u00e7\u00e3o de Falhas  \nA t\u00e9cnica de Detec\u00e7\u00e3o, Diagn\u00f3stico e Predi\u00e7\u00e3o de Falhas (DDPF), apresenta muitas \n\nsemelhan\u00e7as com a Detec\u00e7\u00e3o e Diagn\u00f3stico de Falhas (DDF) da se\u00e7\u00e3o anterior. Na \nDDPF, aplicam-se t\u00e9cnicas autom\u00e1ticas para detectar e estimar a degrada\u00e7\u00e3o no \ndesempenho de sistemas f\u00edsicos, projetar uma tend\u00eancia no comportamento, antecipar a \nocorr\u00eancia de falhas futuras e calcular o tempo restante de vida do sistema, mantendo\u2013o \nem um estado operacional aceit\u00e1vel.  \n\n\u00c9 com base nos conceitos da toler\u00e2ncia a falhas que se evita a ocorr\u00eancia de falhas \nantes de sua manifesta\u00e7\u00e3o pela detec\u00e7\u00e3o da piora do desempenho e recupera\u00e7\u00e3o do \nsistema por meio de reparos nas partes que sofreram degrada\u00e7\u00e3o. Essa t\u00e9cnica \u00e9 \nfundamental para a Manuten\u00e7\u00e3o Inteligente (Cap\u00edtulo 2) em sistemas industriais.  \n\n3.4.1 Processo de DDPF para uma aplica\u00e7\u00e3o gen\u00e9rica  \n\nO objetivo de um Sistema Autom\u00e1tico de DDPF \u00e9 detectar, com anteced\u00eancia, um \ndesvio no comportamento normal do sistema, evitando a ocorr\u00eancia das falhas dentro de \num tempo h\u00e1bil. Isso permite a remo\u00e7\u00e3o das falhas antes que causem danos adicionais \nou prejudiquem o fornecimento dos servi\u00e7os pelo sistema.  \n\nA predi\u00e7\u00e3o \u00e9 importante para a avalia\u00e7\u00e3o do impacto nas decis\u00f5es de opera\u00e7\u00e3o e \nmanuten\u00e7\u00e3o em um sistema, pois permite a transi\u00e7\u00e3o da manuten\u00e7\u00e3o corretiva ou \npreventiva para a manuten\u00e7\u00e3o proativa (manuten\u00e7\u00e3o inteligente). A manuten\u00e7\u00e3o \nproativa tem como base a antecipa\u00e7\u00e3o das condi\u00e7\u00f5es futuras do sistema, tempo restante \nantes da falha (ou tempo antes de alcan\u00e7ar um n\u00edvel inaceit\u00e1vel no desempenho), a taxa \nde degrada\u00e7\u00e3o e a origem da falha. \n\nEm um Sistema DDPF, \u00e9 realizado um monitoramento cont\u00ednuo das condi\u00e7\u00f5es de \nopera\u00e7\u00e3o do processo industrial em an\u00e1lise. Ademais, o monitoramento visa detectar \ndesvios de comportamento em rela\u00e7\u00e3o \u00e0s condi\u00e7\u00f5es normais de funcionamento. Quando \nocorrerem os desvios, \u00e9 preciso identificar a causa e estimar um tempo at\u00e9 a \nmanifesta\u00e7\u00e3o de um defeito relacionado \u00e0 degrada\u00e7\u00e3o que vem ocorrendo. Pode-se \n\n\n\n \n\n \n\n \n\n \n\n57 \n\ntamb\u00e9m diagnosticar a causa da falha encontrada, avaliando sua import\u00e2ncia e decidir \ncomo combat\u00ea-la.  \n\nO processo de monitoramento em um sistema ou equipamento que cont\u00e9m um \nSistema Autom\u00e1tico de DDPF \u00e9 apresentado na Figura 3.4:  \n\n1. Monitorar o sistema ou equipamento at\u00e9 detectar alguma condi\u00e7\u00e3o de \nanormalidade (problemas). Essa etapa \u00e9 referente \u00e0 Detec\u00e7\u00e3o de Desvio de \nComportamento.  \n\n2. Quando \u00e9 detectada uma condi\u00e7\u00e3o anormal, o sistema deve avaliar se \u00e9 a \nmanifesta\u00e7\u00e3o de uma falha ou uma tend\u00eancia de degrada\u00e7\u00e3o no desempenho \ndo equipamento. Caso seja uma falha, aplica-se o Processo de DDF visto na \nSe\u00e7\u00e3o 3.3. Caso seja detectado o in\u00edcio de uma degrada\u00e7\u00e3o, aplica-se a \nPredi\u00e7\u00e3o de Comportamento.  \n\n3. A Predi\u00e7\u00e3o de Comportamento visa avaliar o comportamento do sistema \nutilizando como base um Banco de Conhecimento ou Hist\u00f3rico. Utiliza-se \ncomo premissa que comportamentos passados podem se manifestar \nnovamente em um tempo futuro. \n\n4. Ap\u00f3s, \u00e9 aplicada a Avalia\u00e7\u00e3o do Comportamento, que objetiva calcular uma \nestimativa, identificar, classificar uma tend\u00eancia que leva o sistema at\u00e9 a \nocorr\u00eancia da falha e suas poss\u00edveis consequ\u00eancias. Por exemplo, em termos \nde probabilidade de defeito, detec\u00e7\u00e3o e classifica\u00e7\u00e3o de uma tend\u00eancia, \ntempo at\u00e9 a manifesta\u00e7\u00e3o da falha, origem do defeito, etc. \n\n5. Com base na avalia\u00e7\u00e3o anterior, a etapa de Tomada de Decis\u00e3o \u00e9 acionada e \npode utilizar tamb\u00e9m os resultados do Sistema DDF. Ela prop\u00f5e decidir \ncomo responder \u00e0 percep\u00e7\u00e3o da degrada\u00e7\u00e3o ou ocorr\u00eancia da falha (p. ex., \nsolicitar reparos por meio de uma manuten\u00e7\u00e3o, devido \u00e0 degrada\u00e7\u00e3o). Essa \netapa pode ser acompanhada de um especialista humano, para tomar as \ndecis\u00f5es convenientes \u00e0 situa\u00e7\u00e3o ocorrida, mas n\u00e3o \u00e9 obrigat\u00f3rio.  \n\n \n\nFigura 3.4: Exemplo de um Sistema de Detec\u00e7\u00e3o, Diagn\u00f3stico e Predi\u00e7\u00e3o de Falhas \n(DDPF) para uma aplica\u00e7\u00e3o gen\u00e9rica. \n\n\n\n \n\n \n\n \n\n \n\n58 \n\nA etapa de tomada de decis\u00e3o, para o caso de um Sistema DDPF, pode apresentar o \nmesmo comportamento do Sistema DDF, como tamb\u00e9m pode funcionar de modo \naut\u00f4nomo. Por exemplo, ao detectar a ocorr\u00eancia de uma degrada\u00e7\u00e3o, o sistema pode \ntomar uma decis\u00e3o sem consentimento de um especialista, tolerando uma degrada\u00e7\u00e3o \npor esta estar prematura. Tamb\u00e9m pode aplicar a autorreconfigura\u00e7\u00e3o no equipamento, \nlimitando um par\u00e2metro de constru\u00e7\u00e3o para aumentar o tempo restante de vida \u00fatil do \nequipamento, mesmo operando em estado degradado.  \n\nOutro ponto importante da tomada de decis\u00e3o de um Sistema DDPF, \u00e9 durante a \navalia\u00e7\u00e3o do comportamento, em que a predi\u00e7\u00e3o pode disponibilizar informa\u00e7\u00f5es mais \nprecisas da condi\u00e7\u00e3o de funcionamento do sistema. Tamb\u00e9m auxilia a equipe de \nespecialistas em manuten\u00e7\u00e3o a tomar decis\u00f5es corretas, baseadas em vari\u00e1veis realistas \ndo equipamento, como o \u00edndice de desempenho, a taxa de degrada\u00e7\u00e3o de partes ou o \ntempo restante at\u00e9 falhar. \n\nNa predi\u00e7\u00e3o de falhas, \u00e9 importante a integra\u00e7\u00e3o junto com a detec\u00e7\u00e3o de falhas, \npois elas se completam, formando um sistema mais robusto a falhas. Na Tabela 3.1, \u00e9 \napresentado um comparativo entre as duas abordagens, conforme apresentado por \n(AGARWAL ET AL., 2007):  \n\nTabela 3.1: Compara\u00e7\u00e3o entre predi\u00e7\u00e3o e detec\u00e7\u00e3o de falhas. \n\nPredi\u00e7\u00e3o de Falhas Detec\u00e7\u00e3o de Falhas \nAplica-se antes de surgir falhas Aplic\u00e1vel quando as falhas se manifestam \nDetecta a degrada\u00e7\u00e3o nos dados coletados \nantes de predizer a falha \n\nDevido aos erros e manifesta\u00e7\u00e3o da falha, \npode causar problema de integridade nos \ndados coletados \n\nCusto de manuten\u00e7\u00e3o mais barato Custo de manuten\u00e7\u00e3o mais caro \nPossibilidade de tomada de decis\u00e3o \naut\u00f4noma \n\nTomada de decis\u00e3o limitada pela a\u00e7\u00e3o de \nespecialista \n\nUma predi\u00e7\u00e3o incorreta pode ser um \ngrande problema \n\nCobertura de falhas insuficientes pode ser \num problema \n\nN\u00e3o \u00e9 poss\u00edvel predizer todas as falhas Aplicado a falhas mais comuns \n \n\nAs etapas de detec\u00e7\u00e3o, diagn\u00f3stico e predi\u00e7\u00e3o seguem um certo padr\u00e3o de ativa\u00e7\u00e3o. \n\u00c9 importante manter funcionando continuamente em tempo real a etapa de Detec\u00e7\u00e3o de \nDesvio de Comportamento, pois, a partir desta, s\u00e3o acionadas as pr\u00f3ximas etapas.  \n\nCaso seja detectado um princ\u00edpio de degrada\u00e7\u00e3o, a etapa de predi\u00e7\u00e3o \u00e9 executada ou \nse uma falha ou uma degrada\u00e7\u00e3o muito elevada for detectada, o Sistema de DDF \u00e9 \nacionado. Essa sequ\u00eancia n\u00e3o \u00e9 definida como fixa, mas pode ser vari\u00e1vel dependendo \ndo objetivo do sistema.  \n\nEste trabalho foca no projeto de um Sistema DDPF utilizando t\u00e9cnicas de redes \nneurais. Segundo (KOHONEN ET AL., 1996) a rede neural SOM tem algumas \ncaracter\u00edsticas importantes que proporcionam o monitoramento da ocorr\u00eancia de falhas \nem processos din\u00e2micos. Deste modo, adotou-se aplic\u00e1-lo como t\u00e9cnica para testes on-\nline e ser\u00e1 apresentado na se\u00e7\u00e3o a seguir. \n\n \n\n\n\n \n\n \n\n \n\n \n\n59 \n\n3.5 SOM \u2013 Mapas Auto-Organiz\u00e1veis de Kohonen  \nUma importante caracter\u00edstica das redes neurais \u00e9 a habilidade de aprender sobre um \n\ndeterminado ambiente a partir de observa\u00e7\u00f5es de amostras. A aprendizagem \u00e9 o meio \npela qual a rede neural adquire conhecimento do ambiente.  \n\nO processo de aprendizagem de uma rede neural \u00e9 um processo iterativo de ajustes \naplicados aos seus pesos sin\u00e1pticos, tornando-se apta a exercer sua a\u00e7\u00e3o no ambiente \n(classifica\u00e7\u00e3o, infer\u00eancia, etc.). Existe uma grande variedade de algoritmos s\u00e3o \nclassificados de acordo com o paradigma de aprendizagem, isto \u00e9, a maneira como a \nrede se relaciona com o ambiente. De acordo com o tipo do ambiente para o qual a rede \n\u00e9 aplicada, os m\u00e9todos podem ser: aprendizagem supervisionada ou aprendizagem n\u00e3o-\nsupervisionada (HAYKIN, 2001). \n\nO modelo de aprendizagem supervisionada pode ser visto na Figura 3.5. Nas redes \nneurais baseadas nesse modelo, o treinamento \u00e9 feito a partir de amostras de entrada e \nsa\u00edda do sistema. Um conjunto de amostras s\u00e3o rotuladas (uma entrada com a sua \nrespectiva sa\u00edda desejada). O conhecimento que se tem inicialmente sobre o ambiente \u00e9 \nchamado de professor. A diferen\u00e7a entre a resposta desejada (do professor) e a resposta \ndo sistema (a rede neural) alimenta novamente o sistema para aprendizado, e ajustes \npara corrigir os pesos sin\u00e1pticos da rede s\u00e3o realizados. Esses ajustes s\u00e3o feitos at\u00e9 que \no conhecimento do professor seja transferido para a rede. Com o passar do tempo, o \nprofessor pode ser dispensado.  \n\n \n\nFigura 3.5: Modelo de aprendizado supervisionado \n\nO modelo de aprendizagem n\u00e3o-supervisionada pode ser visto na Figura 3.6. Nas \nredes neurais baseadas nesse modelo, o treinamento \u00e9 feito diretamente a partir das \ncaracter\u00edsticas dos dados de entrada, sem necessitar de um professor externo para \nensinar. A rede aprende diretamente do ambiente, criando automaticamente novas \nclasses. \u00c9 geralmente utilizada em tarefas de classifica\u00e7\u00e3o e detec\u00e7\u00e3o de padr\u00f5es, em \nque \u00e9 poss\u00edvel separar as amostras em grupos, levando em considera\u00e7\u00e3o apenas as \nproximidades entre seus atributos. Neste trabalho, \u00e9 adotado esse modelo de \naprendizagem, que tamb\u00e9m pode ser chamado de aprendizagem auto-organizada. \n\n \n\nFigura 3.6: Modelo de aprendizado n\u00e3o-supervisionado. \n\nO objetivo de um algoritmo para aprendizagem n\u00e3o-supervisionada \u00e9 descobrir \npadr\u00f5es de caracter\u00edsticas nos dados de entrada e fazer essa descoberta sem informa\u00e7\u00f5es \n\n\n\n \n\n \n\n \n\n \n\n60 \n\npr\u00e9vias. O algoritmo disp\u00f5e de um conjunto de regras confinadas \u00e0 vizinhan\u00e7a imediata \ndo neur\u00f4nio que o capacita a aprender e calcular um mapeamento de entrada e sa\u00edda, \ncom base principalmente na similaridade dos dados. \n\nA arquitetura de um sistema auto-organiz\u00e1vel consiste de uma camada de entrada \n(fonte de dados) e uma camada de sa\u00edda (de representa\u00e7\u00e3o) com conex\u00f5es alimentadas \nda entrada at\u00e9 a sa\u00edda e conex\u00f5es laterais entre neur\u00f4nios na camada de sa\u00edda. O \nprocesso de aprendizagem consiste na modifica\u00e7\u00e3o repetitiva dos pesos sin\u00e1pticos em \nresposta a padr\u00f5es de entrada e de acordo com regras predeterminadas, at\u00e9 se \ndesenvolver a configura\u00e7\u00e3o final do sistema. \n\nNeste trabalho, \u00e9 adotada a classe de redes neurais conhecidas como Mapas Auto-\nOrganiz\u00e1veis (SOM \u2013 Self-Organizing Maps) (KOHONEN, 1990) (KOHONEN, 2001), \nque \u00e9 um modelo de arquitetura para um sistema auto-organiz\u00e1vel proposto no final da \nd\u00e9cada de 1980. Nesse modelo, a ideia consiste em que os neur\u00f4nios da rede devem \ncompetir entre si. Como resultado dessa competi\u00e7\u00e3o, tem-se o neur\u00f4nio vencedor.  \n\nEm um Mapa Auto-Organiz\u00e1vel, os neur\u00f4nios s\u00e3o alocados em uma forma \nbidimensional ou unidimensional. Os neur\u00f4nios s\u00e3o ajustados por est\u00edmulos externos \nvindos da entrada. Com o tempo, as localiza\u00e7\u00f5es espaciais dos neur\u00f4nios se tornam \nordenadas entre si, formando um sistema de coordenadas para as diferentes \ncaracter\u00edsticas extra\u00eddas da entrada.  \n\nUm Mapa Auto-Organiz\u00e1vel \u00e9 caracterizado pela forma\u00e7\u00e3o de um mapa topogr\u00e1fico \ndos est\u00edmulos de entrada, em que as localiza\u00e7\u00f5es espaciais (coordenadas) dos neur\u00f4nios, \nna grade, s\u00e3o indicativas das caracter\u00edsticas estat\u00edsticas intr\u00ednsecas contidas nos padr\u00f5es \nde entrada.  \n\n3.5.1 Fundamentos  \n\nA fundamenta\u00e7\u00e3o te\u00f3rica para o Mapa Auto-Organiz\u00e1vel (SOM) est\u00e1 baseado em \n(HAYKIN, 2001). O principal objetivo do SOM \u00e9 a transforma\u00e7\u00e3o do padr\u00e3o de um \nsinal de dimens\u00e3o arbitr\u00e1ria em um mapa discreto uni ou bidimensional. Essa \ntransforma\u00e7\u00e3o \u00e9 realizada de uma maneira adaptativa em que se mant\u00e9m a mesma \nordem topol\u00f3gica dos dados de entrada. \n\nNa Figura 3.7, \u00e9 apresentada a arquitetura cl\u00e1ssica a partir da qual o SOM \u00e9 \nmodelado (KOHONEN, 2001). O formato b\u00e1sico da rede \u00e9 composto por neur\u00f4nios \narranjados em linhas (Dimens\u00e3o L) e colunas (Dimens\u00e3o C) dispostos em forma bi ou \nunidimensional, chamada de Camada de Sa\u00edda, formando o Mapa de Caracter\u00edsticas. \nCada neur\u00f4nio \u00e9 conectado com todos os n\u00f3s da Camada de Entrada. Na Camada de \nEntrada, s\u00e3o apresentados os padr\u00f5es ou est\u00edmulos de entrada para a rede. Cada \nneur\u00f4nio cont\u00e9m um Peso Sin\u00e1ptico que representa as caracter\u00edsticas individuais de \ncada um.  \n\nO algoritmo do mapa auto-organiz\u00e1vel inicializa os pesos sin\u00e1pticos na rede, \natribuindo-lhes valores com n\u00fameros aleat\u00f3rios, assegurando, dessa forma, que \nnenhuma organiza\u00e7\u00e3o pr\u00e9via seja imposta ao mapa de caracter\u00edsticas. Uma vez \ninicializada a rede, s\u00e3o aplicadas tr\u00eas fases durante o treinamento:  \n\n\u2022 Competi\u00e7\u00e3o: cada padr\u00e3o de entrada \u00e9 apresentado para todos os neur\u00f4nios \nda rede que calculam seus respectivos valores com base em uma fun\u00e7\u00e3o de \nsimilaridade, que atribui cr\u00e9dito para cada neur\u00f4nio. Essa fun\u00e7\u00e3o fornece a \nbase para a competi\u00e7\u00e3o entre os neur\u00f4nios. O neur\u00f4nio que apresentar maior \n\n\n\n \n\n \n\n \n\n \n\n61 \n\nvalor da fun\u00e7\u00e3o de similaridade (mais pr\u00f3ximo do padr\u00e3o de entrada) \u00e9 \ndeclarado como \u201cvencedor\u201d da competi\u00e7\u00e3o.  \n\n \n\nFigura 3.7: Arquitetura da rede neural SOM proposta por (KOHONEN, 2001).  \n\n\u2022 Coopera\u00e7\u00e3o: o neur\u00f4nio \u201cvencedor\u201d determina uma localiza\u00e7\u00e3o espacial, \nque forma uma vizinhan\u00e7a topol\u00f3gica para excita\u00e7\u00e3o dos neur\u00f4nios mais \npr\u00f3ximos. Isso fornece a base de coopera\u00e7\u00e3o entre os neur\u00f4nios contidos na \nvizinhan\u00e7a.  \n\n\u2022 Adapta\u00e7\u00e3o Sin\u00e1ptica: os neur\u00f4nios excitados recalculam seus pesos \nsin\u00e1pticos para melhorar seus valores individuais da fun\u00e7\u00e3o de similaridade \nem rela\u00e7\u00e3o ao padr\u00e3o de entrada. Os ajustes s\u00e3o aplicados de tal modo que, \nquando uma nova apresenta\u00e7\u00e3o de um padr\u00e3o de entrada for similar \u00e0 \nresposta do neur\u00f4nio vencedor, este recebe ajustes finos a fim de melhorar \nseus resultados.  \n\n3.5.1.1 Processo de competi\u00e7\u00e3o  \n\nConsidere que N representa a dimens\u00e3o do espa\u00e7o de entrada de dados. Um padr\u00e3o \nou vetor de entrada x selecionado aleatoriamente em um conjunto do espa\u00e7o de entrada \nX, \u00e9 representado por \n\n[ ]TNxxx ,,, 21 L=x . (1) \n\nO vetor de peso sin\u00e1ptico para cada neur\u00f4nio da rede tem a mesma dimens\u00e3o do \nespa\u00e7o de entrada. Considere que o vetor peso sin\u00e1ptico w do neur\u00f4nio j seja \nrepresentado por \n\n[ ]TjNjjj www ,,, 21 L=w , (2) \nonde j=1,2,...,l, e l \u00e9 o n\u00famero total de neur\u00f4nios na rede.  \n\nPara encontrar o melhor casamento do vetor de entrada x com os vetores pesos \nsin\u00e1pticos wj, \u00e9 preciso comparar os produtos internos wj\n\nTx para j=1,2,...,l e selecionar o \nmaior. Assim, selecionando o neur\u00f4nio com o maior produto interno, determinamos a \nlocaliza\u00e7\u00e3o onde a vizinhan\u00e7a topol\u00f3gica dos neur\u00f4nios excitados deve ser centrada. \n\n\n\n \n\n \n\n \n\n \n\n62 \n\nUm crit\u00e9rio para definir o melhor casamento entre os vetores x e wj \u00e9 minimizar a \ndist\u00e2ncia euclidiana entre eles. O \u00edndice i(wj) ser\u00e1 utilizado para identificar o neur\u00f4nio \nque melhor se casa com o vetor de entrada x, ent\u00e3o seja \n\njji wxx ?= minarg)( , (3) \n\nonde o neur\u00f4nio particular i \u00e9 chamado de neur\u00f4nio vencedor ou BMU (Best-Matching \nUnit) para o vetor de entrada x.  \n\nEm geral, o SOM utiliza a t\u00e9cnica de casamento entre padr\u00f5es para dar cr\u00e9dito \u00e0s \nentradas similares, formando um grupo especializado. A similaridade entre padr\u00f5es \u00e9 \ncalculada pela medida da dist\u00e2ncia euclidiana. Quando um padr\u00e3o de entrada \u00e9 avaliado \ncomo n\u00e3o similar em rela\u00e7\u00e3o aos agrupamentos anteriormente formados, um novo \nagrupamento \u00e9 estabelecido. Seu padr\u00e3o \u00e9 guardado como defini\u00e7\u00e3o para o novo e as \navalia\u00e7\u00f5es subsequentes de similaridade ser\u00e3o em rela\u00e7\u00e3o a esse novo padr\u00e3o.  \n\nA ideia de formar agrupamentos visa maximizar a separa\u00e7\u00e3o entre eles. Durante a \nforma\u00e7\u00e3o dos agrupamentos, a dist\u00e2ncia euclidiana \u00e9 utilizada para fornecer cr\u00e9dito aos \npadr\u00f5es com caracter\u00edsticas mais similares.  \n\n3.5.1.2  Processo de coopera\u00e7\u00e3o  \n\nO neur\u00f4nio vencedor tem a fun\u00e7\u00e3o de localizar o centro de um agrupamento mais \npr\u00f3ximo ao padr\u00e3o de entrada e atualizar a vizinhan\u00e7a topol\u00f3gica de neur\u00f4nios \ncooperativos.  \n\nA defini\u00e7\u00e3o correta de uma vizinhan\u00e7a topol\u00f3gica, do ponto de vista neurobiol\u00f3gico, \nvem da evid\u00eancia de uma intera\u00e7\u00e3o lateral entre um agrupamento de neur\u00f4nios \nexcitados. Um neur\u00f4nio que est\u00e1 emitindo um est\u00edmulo (sinapse) tende a excitar com \nmaior intensidade os neur\u00f4nios na sua vizinhan\u00e7a imediata do que aqueles distantes \ndele. Ent\u00e3o, deve-se fazer com que a vizinhan\u00e7a topol\u00f3gica em torno do neur\u00f4nio \nvencedor i decaia suavemente com a dist\u00e2ncia lateral.  \n\nConsidere que hi,j represente a vizinhan\u00e7a topol\u00f3gica centrada no neur\u00f4nio vencedor \ni e que contenha um conjunto de neur\u00f4nios excitados (cooperativos), sendo um neur\u00f4nio \nt\u00edpico desse conjunto representado por j.  \n\nSeja di,j a representa\u00e7\u00e3o da dist\u00e2ncia lateral entre o neur\u00f4nio vencedor i e o neur\u00f4nio \nexcitador j. Assumindo que a vizinhan\u00e7a topol\u00f3gica hi,j \u00e9 uma fun\u00e7\u00e3o unimodal da \ndist\u00e2ncia di,j, pois satisfaz as seguintes exig\u00eancias: \n\n\u2022 A vizinhan\u00e7a topol\u00f3gica hi,j \u00e9 sim\u00e9trica em rela\u00e7\u00e3o ao ponto m\u00e1ximo \ndefinido por di,j=0, ou seja, alcan\u00e7a o seu valor m\u00e1ximo de excita\u00e7\u00e3o no \nneur\u00f4nio vencedor i quando a dist\u00e2ncia di,j \u00e9 zero. \n\n\u2022 A amplitude da excita\u00e7\u00e3o da vizinhan\u00e7a topol\u00f3gica hi,j decresce \nmonotonicamente com o aumento da dist\u00e2ncia lateral di,j, decaindo a zero \nquando a dist\u00e2ncia tende ao infinito. Esta condi\u00e7\u00e3o \u00e9 necess\u00e1ria para a \nconverg\u00eancia. \n\nUma escolha t\u00edpica de hi,j \u00e9 a fun\u00e7\u00e3o gaussiana, ou seja, \n\n?\n?\n\n?\n\n?\n\n?\n?\n\n?\n\n?\n?\n\n=\n2\n\n2\n)(,\n\n2\n\n)(\n\n?\nx\n\nx\n\nijd\n\ni eh , \n(4) \n\n\n\n \n\n \n\n \n\n \n\n63 \n\nque \u00e9 invariante \u00e0 transla\u00e7\u00e3o (independentemente da localiza\u00e7\u00e3o do neur\u00f4nio vencedor). \nO par\u00e2metro ? \u00e9 a \u201clargura efetiva\u201d da vizinhan\u00e7a topol\u00f3gica, medindo o grau com que \nos neur\u00f4nios excitados dentro da vizinhan\u00e7a do vencedor participam do processo de \naprendizagem. Em um sentido qualitativo, a vizinhan\u00e7a topol\u00f3gica gaussiana da \nEqua\u00e7\u00e3o 4 \u00e9 mais apropriada biologicamente do que uma vizinhan\u00e7a definida como \nretangular (HAYKIN, 2001).  \n\nPara que a coopera\u00e7\u00e3o entre os neur\u00f4nios vizinhos se mantenha, \u00e9 necess\u00e1rio que a \nvizinhan\u00e7a topol\u00f3gica hi,j seja dependente da dist\u00e2ncia lateral di,j entre o neur\u00f4nio \nvencedor i e o neur\u00f4nio excitado j no espa\u00e7o de sa\u00edda. Conforme a Equa\u00e7\u00e3o 4, para o \ncaso de uma rede bidimensional, a dist\u00e2ncia \u00e9 definida por \n\n22\n, ijijd rr ?= , (5) \n\nonde o vetor rj define a posi\u00e7\u00e3o do neur\u00f4nio excitado j e ri define a posi\u00e7\u00e3o do neur\u00f4nio \nvencedor i, sendo ambos medidos no espa\u00e7o de sa\u00edda.  \n\nOutra caracter\u00edstica importante do SOM \u00e9 que o tamanho da vizinhan\u00e7a topol\u00f3gica \ndiminui com o tempo. Essa exig\u00eancia \u00e9 satisfeita fazendo-se com que a largura ? da \nfun\u00e7\u00e3o de vizinhan\u00e7a hi,j diminua com o tempo, durante a execu\u00e7\u00e3o do algoritmo de \ntreinamento.  \n\n3.5.1.3 Processo de adapta\u00e7\u00e3o  \n\nPor \u00faltimo, tem-se o processo que realiza adapta\u00e7\u00e3o dos pesos sin\u00e1pticos para a \nforma\u00e7\u00e3o auto-organizada do mapa de caracter\u00edsticas. Para que a rede seja auto-\norganiz\u00e1vel, \u00e9 necess\u00e1rio que o vetor de peso sin\u00e1ptico wj do neur\u00f4nio j da rede se \nmodifique em rela\u00e7\u00e3o ao vetor de entrada x. \n\nUsando um formalismo de tempo discreto, dado o vetor de peso sin\u00e1ptico wj(n), do \nneur\u00f4nio j no tempo n, o vetor de peso atualizado wj(n+1), no tempo n+1, \u00e9 definido \npor \n\n( ) ( ) ( ) ( ) ( )( )nhnnn jijjj wxxww x ?+=+ )(,1 ? , (6) \nonde ?(n) \u00e9 o par\u00e2metro da taxa de aprendizagem, hj,i(x)(x) \u00e9 fun\u00e7\u00e3o da vizinhan\u00e7a \ntopol\u00f3gica. Essa equa\u00e7\u00e3o deve ser aplicada a todos os neur\u00f4nios da rede que se \nencontram dentro da vizinhan\u00e7a topol\u00f3gica do neur\u00f4nio vencedor i.  \n\nA adapta\u00e7\u00e3o tem o efeito de mover o vetor peso sin\u00e1ptico wi do neur\u00f4nio vencedor i \nem dire\u00e7\u00e3o ao vetor de entrada x. Para isso, deve ser aplicada a apresenta\u00e7\u00e3o repetitiva \ndos dados de entrada. Desse modo, os vetores de pesos sin\u00e1pticos tendem a seguir a \ndistribui\u00e7\u00e3o dos vetores de entrada devido \u00e0 atualiza\u00e7\u00e3o da vizinhan\u00e7a.  \n\nNessa parte do algoritmo, leva-se a uma ordena\u00e7\u00e3o topol\u00f3gica do mapa de \ncaracter\u00edsticas, no sentido de que neur\u00f4nios adjacentes da rede tender\u00e3o a ter vetores de \npeso sin\u00e1ptico similares. Na Figura 3.8, \u00e9 apresentado um exemplo do funcionamento \ndo processo adaptativo.  \n\nAp\u00f3s ser definido o neur\u00f4nio \u201cvencedor\u201d (BMU), os demais neur\u00f4nios da mesma \nvizinhan\u00e7a s\u00e3o ajustados em dire\u00e7\u00e3o ao dado de entrada x. Durante a adapta\u00e7\u00e3o, o SOM \nconsegue gradualmente, a partir de um estado inicial em completa desordem \n(inicializa\u00e7\u00e3o aleat\u00f3ria), atingir uma representa\u00e7\u00e3o organizada com base nos padr\u00f5es do \nespa\u00e7o de entrada. \n\n\n\n \n\n \n\n \n\n \n\n64 \n\n \n\nFigura 3.8: Processo de adapta\u00e7\u00e3o dos pesos sin\u00e1pticos. \n\nAl\u00e9m disso, a adapta\u00e7\u00e3o dos pesos sin\u00e1pticos calculada de acordo com a Equa\u00e7\u00e3o 6, \npode ser decomposta em duas fases: \n\n\u2022 Fase de auto-organiza\u00e7\u00e3o ou de ordena\u00e7\u00e3o: \u00e9 durante esta primeira fase do \nprocesso adaptativo que ocorre a ordena\u00e7\u00e3o topol\u00f3gica dos vetores de peso. \nA fase de ordena\u00e7\u00e3o pode exigir 1.000 itera\u00e7\u00f5es do algoritmo SOM e, \npossivelmente, at\u00e9 mais. \u00c9 preciso prestar aten\u00e7\u00e3o \u00e0 escolha do par\u00e2metro \nde aprendizagem e \u00e0 fun\u00e7\u00e3o de vizinhan\u00e7a.  \n\n\u2022 Fase de converg\u00eancia: esta segunda fase do processo adaptativo \u00e9 \nnecess\u00e1ria para realizar uma sintonia fina no mapa de caracter\u00edsticas e, \nassim, produzir uma quantiza\u00e7\u00e3o estat\u00edstica precisa do espa\u00e7o de entrada. \nPortanto, essa fase pode durar milhares de itera\u00e7\u00f5es. \n\nMais detalhes sobre as heur\u00edsticas utilizadas durante o funcionamento do algoritmo \npodem ser vistos em (HAYKIN, 2001) e (KOHONEN, 2001). \n\n3.5.2 Algoritmo de treinamento \n\nO algoritmo padr\u00e3o de treinamento do SOM consiste na apresenta\u00e7\u00e3o das tr\u00eas fases \nem uma sequ\u00eancia preestabelecida. Na primeira fase, processo de competi\u00e7\u00e3o, os \nneur\u00f4nios da camada de sa\u00edda competem entre si atribuindo cr\u00e9ditos para cada um, \nseguindo o crit\u00e9rio da dist\u00e2ncia euclidiana para encontrar o neur\u00f4nio vencedor. Na \nsegunda fase, processo de coopera\u00e7\u00e3o, \u00e9 definida uma vizinhan\u00e7a topol\u00f3gica para o \nneur\u00f4nio vencedor. Na terceira e \u00faltima fase, processo adaptativo, os vetores de peso \nsin\u00e1ptico do neur\u00f4nio vencedor e de sua vizinhan\u00e7a s\u00e3o ajustados.  \n\nSeja X o conjunto de padr\u00f5es de entrada composto pelos vetores xk, k = 1,..., m, onde \nm \u00e9 a quantidade de vetores de entrada, tem-se o seguinte algoritmo: \n\nIniciar os vetores de pesos sin\u00e1pticos com valores aleat\u00f3rios e \npar\u00e2metros ? e h; \n\nPara cada \u00e9poca n, fa\u00e7a um treinamento: \nPara todo Xk ?x  para o tempo discreto n, fa\u00e7a \n\nLocalizar o neur\u00f4nio vencedor i seguindo o crit\u00e9rio da \ndist\u00e2ncia euclidiana (Equa\u00e7\u00e3o 3). A ordem de apresenta\u00e7\u00e3o \ndos vetores de entrada deve ser aleat\u00f3ria.  \nAtualizar os vetores de pesos sin\u00e1pticos wi do neur\u00f4nio \nvencedor e dos vizinhos conforme a Equa\u00e7\u00e3o 6. \n\nFim \n\n\n\n \n\n \n\n \n\n \n\n65 \n\nAtualizar os par\u00e2metros ? e h. \nFim \n\n3.5.2.1 Avalia\u00e7\u00e3o do treinamento  \n\nAp\u00f3s o treinamento, \u00e9 importante um m\u00e9todo para avaliar a qualidade do mapa \ngerado. O erro m\u00e9dio de quantiza\u00e7\u00e3o (Emq) corresponde \u00e0 m\u00e9dia do erro \ncorrespondente \u00e0 diferen\u00e7a entre o vetor de pesos sin\u00e1pticos xk e o vetor vencedor i(xk), \nseguindo a equa\u00e7\u00e3o \n\nN\nEm\n\nN\n\nk\nik\n\nq\n\n?\n=\n\n?\n= 1\n\n)( xwx\n, \n\n(7) \n\nonde N \u00e9 a quantidade de vetores de entrada e wi(x) \u00e9 o vetor de peso sin\u00e1ptico do \nvencedor. \n\nA medida do erro m\u00e9dio de quantiza\u00e7\u00e3o revela a similaridade dos dados de entrada \nem rela\u00e7\u00e3o ao conhecimento adquirido pelo SOM durante o treinamento. \u00c9 importante \npara acompanhar a evolu\u00e7\u00e3o das adapta\u00e7\u00f5es durante as v\u00e1rias \u00e9pocas de treinamento. \n\nQuando \u00e9 utilizado apenas um padr\u00e3o como vetor de entrada, o erro de quantiza\u00e7\u00e3o \nrevela a similaridade deste em rela\u00e7\u00e3o ao mapa. Quando um valor baixo desse erro \u00e9 \nobtido, representa uma grande similaridade com os dados treinados e pleno \nreconhecimento pelo mapa. Um valor alto do erro representa uma dissimilaridade ou \ndesvio de caracter\u00edsticas, revelando que o mapa n\u00e3o conhece as caracter\u00edsticas do \npadr\u00e3o apresentado (KOHONEN ET AL., 1996).  \n\nA equa\u00e7\u00e3o do erro de quantiza\u00e7\u00e3o fica conforme a seguir  \n\n)( xwx ikqE ?= , (8) \n\nonde wi(x) \u00e9 o vetor de peso sin\u00e1ptico do vencedor. \n\nA representa\u00e7\u00e3o gr\u00e1fica dessa equa\u00e7\u00e3o \u00e9 visualizada na Figura 3.9. No gr\u00e1fico, \u00e9 \nmostrado o espa\u00e7o de caracter\u00edsticas de um SOM treinado e o vetor de entrada x(t) que \nse aproxima do SOM. O Erro de Quantiza\u00e7\u00e3o (Eq) \u00e9 apresentado como sendo a \ndiferen\u00e7a vetorial entre o vetor de entrada e a aproxima\u00e7\u00e3o feita pelo SOM (neur\u00f4nio \nvencedor). \n\nAproxima\u00e7\u00e3o \ndo SOM\n\nSO\nM\n\nErro Quantiza\u00e7\u00e3o \nEq\n\nVetor de \nentrada x(t)\n\nX1\n\nX2\n\nX3\n\n \n\nFigura 3.9: Ilustra\u00e7\u00e3o do c\u00e1lculo do erro de quantiza\u00e7\u00e3o.  \n\n\n\n \n\n \n\n \n\n \n\n66 \n\nNo algoritmo padr\u00e3o de treinamento, os vetores de entrada do conjunto X devem ser \ninseridos de forma aleat\u00f3ria durante o treinamento, para que haja garantia de \nuniformidade na apresenta\u00e7\u00e3o dos padr\u00f5es. \n\nDefine-se uma quantidade de \u00e9pocas para carregar os vetores de entrada \u00e0 rede. \nAl\u00e9m disso, se aplica uma normaliza\u00e7\u00e3o nos vetores de entrada.  \n\nO processo de competi\u00e7\u00e3o, dentre as tr\u00eas fases do treinamento, \u00e9 o que apresenta \nmaior custo computacional. Nessa fase, \u00e9 aplicada uma busca sequencial em todo o \nmapa para localizar o neur\u00f4nio vencedor. \n\nA dimens\u00e3o do mapa auto-organiz\u00e1vel e a dimens\u00e3o N dos vetores dependem do \nproblema da aplica\u00e7\u00e3o. Na literatura, existem diversas propostas para determinar a \ndimens\u00e3o do SOM, mas normalmente \u00e9 realizado por um processo emp\u00edrico. Em \n(VESANTO, JUHA, 1999) (ENDO ET AL., 2000), foi proposta uma t\u00e9cnica autom\u00e1tica \nque visa analisar os dados de entrada e encontrar uma dimens\u00e3o que minimize o custo \nde mem\u00f3ria e de processamento, apresentando resultados de treinamento satisfat\u00f3rio.  \n\nOutra informa\u00e7\u00e3o importante para definir a dimens\u00e3o do mapa \u00e9 a quantidade de \namostras de entrada como padr\u00f5es utilizados para treinamento. Quando s\u00e3o \napresentados grandes volumes de amostras de entrada, geralmente \u00e9 mais indicado \nutilizar mapas maiores. Todavia, mapas grandes comprometem o desempenho do \nalgoritmo e mapas muito pequenos comprometem a forma\u00e7\u00e3o topol\u00f3gica.  \n\nA determina\u00e7\u00e3o dos par\u00e2metros da Equa\u00e7\u00e3o 6 \u00e9 feita de modo emp\u00edrico e \nfortemente baseada nos experimentos e m\u00e9todos de tentativa e erro. A taxa de \naprendizagem ?(n) assume um valor pr\u00e9-fixado ?(0)<1, e deve decair com o tempo n \nat\u00e9 um valor pr\u00f3ximo de zero. Analogamente, a fun\u00e7\u00e3o de vizinhan\u00e7a hj,i(x) tamb\u00e9m \nassume um valor pr\u00e9-fixado que seja adequado para maximizar a qualidade da forma\u00e7\u00e3o \ndos agrupamentos no mapa. Mais detalhes dos par\u00e2metros consultar (HAYKIN, 2001) e \n(KOHONEN, 2001).  \n\n3.5.3 Propriedades do mapa de caracter\u00edsticas  \n\nUma vez treinado, o mapa gerado apresenta algumas caracter\u00edsticas estat\u00edsticas que \ns\u00e3o importantes de serem revisadas conforme (HAYKIN, 2001): \n\n1. Aproxima\u00e7\u00e3o do espa\u00e7o de entrada: o mapa de caracter\u00edsticas deve fornecer \numa aproxima\u00e7\u00e3o favor\u00e1vel ao espa\u00e7o de entrada. O objetivo b\u00e1sico \u00e9 \narmazenar um grande conjunto de vetores de entrada, em um conjunto \nreduzido de neur\u00f4nios, de modo que forne\u00e7a uma boa aproxima\u00e7\u00e3o para o \nespa\u00e7o de entrada original. Essa ideia est\u00e1 fundamentada na teoria da \nquantiza\u00e7\u00e3o vetorial, cuja motiva\u00e7\u00e3o \u00e9 a redu\u00e7\u00e3o da dimensionalidade ou \ncompress\u00e3o de dados.  \n\n2. Ordena\u00e7\u00e3o topol\u00f3gica: o mapa de caracter\u00edstica deve estar topologicamente \nordenado, no sentido de que a localiza\u00e7\u00e3o espacial de um neur\u00f4nio \ncorresponda a um dom\u00ednio particular ou a uma caracter\u00edstica dos padr\u00f5es de \nentrada. Isso \u00e9 devido \u00e0 Equa\u00e7\u00e3o 6 for\u00e7ar o neur\u00f4nio vencedor a mover-se \nem dire\u00e7\u00e3o ao vetor de entrada, o que por consequ\u00eancia move tamb\u00e9m os \nneur\u00f4nios mais pr\u00f3ximos dentro da vizinhan\u00e7a.  \n\n3. Casamento de densidade: o mapa de caracter\u00edsticas deve refletir as varia\u00e7\u00f5es \nda distribui\u00e7\u00e3o de entrada. Regi\u00f5es do espa\u00e7o de entrada com uma alta \nprobabilidade de ocorr\u00eancia (est\u00edmulos que ocorrem com frequ\u00eancia) ser\u00e3o \n\n\n\n \n\n \n\n \n\n \n\n67 \n\nmapeadas para dom\u00ednios maiores no mapa, do que regi\u00f5es com baixa \nprobabilidade de ocorr\u00eancia. \n\n3.5.4 Interpreta\u00e7\u00e3o do resultado do SOM  \n\nEmbora o SOM n\u00e3o apresente um m\u00f3dulo em particular para resultados de sa\u00edda, \ncomo no caso das redes neurais de aprendizagem supervisionada, \u00e9 necess\u00e1ria uma \netapa de processamento para extrair os resultados, conhecida por teste, atua\u00e7\u00e3o ou \nrecupera\u00e7\u00e3o.  \n\nDependendo da aplica\u00e7\u00e3o-alvo utilizada, a resposta do sistema pode ser tanto o \n\u00edndice ou o peso sin\u00e1ptico do neur\u00f4nio vencedor. O \u00edndice do neur\u00f4nio vencedor infere \na localiza\u00e7\u00e3o espacial de acordo com a ordem topol\u00f3gica, indicando em qual \nagrupamento do mapa o dado de entrada foi mapeado. Este \u00e9 o princ\u00edpio para a \nclassifica\u00e7\u00e3o de padr\u00f5es. O peso sin\u00e1ptico do neur\u00f4nio vencedor \u00e9 uma generaliza\u00e7\u00e3o \npara o dado de entrada, fornecendo uma aproxima\u00e7\u00e3o para o espa\u00e7o de entrada.  \n\nAp\u00f3s o processo de treinamento, tamb\u00e9m se deseja avaliar visualmente o resultado \nda forma\u00e7\u00e3o topol\u00f3gica e a densidade do mapa. Destacam-se aqui duas formas de \nrepresenta\u00e7\u00e3o visual propostas por (KOHONEN ET AL., 1996) (VESANTO, JUHA, \n1999) (HAYKIN, 2001): a mais simples \u00e9 reproduzir graficamente os vetores de pesos \nsin\u00e1pticos em um espa\u00e7o de coordenadas; e a outra forma \u00e9 a matriz de dist\u00e2ncia entre \nos vetores de pesos sin\u00e1pticos que reproduz uma imagem (fotografia) do mapa. \n\n3.5.4.1 Algoritmo de teste  \n\nEste algoritmo \u00e9 importante para se extrair resultados do SOM.  \n\nSeja T o conjunto de padr\u00f5es de entrada de teste composto pelos vetores xk, k = 1,..., \nm, onde m \u00e9 a quantidade de vetores de teste. Tem-se o seguinte algoritmo:  \n\nPara cada Tk ?x  fa\u00e7a \nLocalizar o neur\u00f4nio vencedor i seguindo o crit\u00e9rio da \ndist\u00e2ncia euclidiana (Equa\u00e7\u00e3o 3); \nEscrever na sa\u00edda o peso sin\u00e1ptico do neur\u00f4nio vencedor; \nEscrever na sa\u00edda o \u00edndice do neur\u00f4nio vencedor; \nEscrever na sa\u00edda o valor da dist\u00e2ncia euclidiana como erro de \nquantiza\u00e7\u00e3o; \n\nFim \nEscrever na sa\u00edda o valor do erro de quantiza\u00e7\u00e3o m\u00e9dio. \n\n3.5.4.2 Vetores de pesos sin\u00e1pticos no espa\u00e7o Rd  \n\nPara o caso da dimens\u00e3o dos vetores de pesos sin\u00e1pticos ser d?3, pode-se adotar o \nuso destes como coordenadas de um produto cartesiano em um espa\u00e7o dimensional Rd \npara \u00e0 visualiza\u00e7\u00e3o da organiza\u00e7\u00e3o dos neur\u00f4nios.  \n\nSeja a Figura 3.10 a sequ\u00eancia de treinamento, em que foram reproduzidas \ngraficamente as coordenadas dos neur\u00f4nios em \u00e9pocas diferentes, em uma dimens\u00e3o \nd=2. A imagem superior \u00e0 esquerda, corresponde ao mapa inicializado aleatoriamente \nrevelando nenhuma uniformidade. Durante o treinamento, pode-se visualizar a \nconverg\u00eancia para um estado de equil\u00edbrio formando uma grade. Como resultado final \ndesse treinamento, ap\u00f3s v\u00e1rias \u00e9pocas, \u00e9 visualizada, na imagem inferior \u00e0 direita, uma \nforma\u00e7\u00e3o mais uniforme da rede e oposta \u00e0 inicial. Isso deve-se ao SOM atingir um \nponto de equil\u00edbrio durante o treinamento. \n\n\n\n \n\n \n\n \n\n \n\n68 \n\n \n\nFigura 3.10: Exemplo de sequ\u00eancia de treinamento, representando os pesos sin\u00e1pticos \nde um SOM em \u00e9pocas diferentes.  \n\n3.5.4.3 Matriz de dist\u00e2ncia unificada  \n\nPara os casos em que \u00e9 necess\u00e1rio avaliar as forma\u00e7\u00f5es topol\u00f3gicas dos neur\u00f4nios no \nmapa, quando a dimens\u00e3o dos vetores de pesos sin\u00e1pticos \u00e9 d>3, o m\u00e9todo utilizado \u00e9 o \nda matriz de dist\u00e2ncias unificada (U-Matrix \u2013 Unified Distance Matrix) (VESANTO, \nJUHA, 1999) (ENDO ET AL., 2000) (SILVA, 2004). A U-Matrix \u00e9 uma matriz \ncomposta pelas dist\u00e2ncias entre todos os neur\u00f4nios vizinhos, em que tais dist\u00e2ncias s\u00e3o \nobtidas pela m\u00e9dia aritm\u00e9tica entre os pesos sin\u00e1pticos de toda a vizinhan\u00e7a do neur\u00f4nio \ne de seu pr\u00f3prio peso.  \n\nA U-Matrix \u00e9 representada por uma imagem do mapa, em que o n\u00edvel de intensidade \nde cada pixel corresponde a uma dist\u00e2ncia calculada. Um mapa 2-D, de dimens\u00e3o NxM, \ngera uma imagem (2N-1)x(2M-1).  \n\nNa imagem, a colora\u00e7\u00e3o dos pixels \u00e9 de acordo com a intensidade de cada \ncomponente da matriz. Valores altos (cores vermelhas) correspondem a neur\u00f4nios \nvizinhos dissimilares, que equivale \u00e0 forma\u00e7\u00e3o de fronteiras no mapa. Valores baixos \n(cores azuis) correspondem a neur\u00f4nios vizinhos similares, correspondendo \u00e0 forma\u00e7\u00e3o \nde vales onde se agrupam neur\u00f4nios com padr\u00f5es semelhantes. \n\nNa Figura 3.11, \u00e9 apresentado o exemplo de uma U-Matrix, para uma rede neural \ntreinada para classifica\u00e7\u00e3o das subesp\u00e9cies da planta \u00cdris, um problema cl\u00e1ssico de redes \nneurais. Na figura, \u00e9 vis\u00edvel a exist\u00eancia de fronteiras de separa\u00e7\u00e3o entre agrupamentos. \nQuanto mais dissimilares forem os agrupamentos em rela\u00e7\u00e3o aos vizinhos, maior ser\u00e1 a \ndistin\u00e7\u00e3o entre eles e a fronteira. Essa t\u00e9cnica \u00e9 importante para a descoberta de \nsimilaridades entre os agrupamentos. \n\nUtilizar a U-Matrix como sa\u00edda tem por objetivo permitir a detec\u00e7\u00e3o visual das \nrela\u00e7\u00f5es topol\u00f3gicas dos neur\u00f4nios (SILVA, 2004). Essa t\u00e9cnica \u00e9 extremamente \u00fatil \nquando os vetores de pesos sin\u00e1pticos t\u00eam dimens\u00e3o superior a tr\u00eas.  \n\nPelo fato da U-Matrix ser uma imagem relativamente complexa para alguns \nproblemas, pode ser dif\u00edcil a visualiza\u00e7\u00e3o e a interpreta\u00e7\u00e3o para usu\u00e1rios pouco \n\n\n\n \n\n \n\n \n\n \n\n69 \n\nexperientes. Existem alguns estudos que visam realizar um processamento sobre o \nmapa, a fim de fazer uma detec\u00e7\u00e3o autom\u00e1tica da forma\u00e7\u00e3o dos agrupamentos por meio \nde t\u00e9cnicas de processamento de imagens (SILVA, 2004). \n\n \n\nFigura 3.11: Exemplo de visualiza\u00e7\u00e3o pela U-Matrix. (a) visualiza\u00e7\u00e3o padr\u00e3o em duas \ndimens\u00f5es e (b) visualiza\u00e7\u00e3o em tr\u00eas dimens\u00f5es. \n\n3.6 Mapa Temporal de Kohonen  \nA proposta original de Kohonen em criar o SOM foi baseada no processamento de \n\ndados est\u00e1ticos, que s\u00e3o relacionados espacialmente. Contudo, tamb\u00e9m pode existir \numa correla\u00e7\u00e3o temporal entre esses dados, para o caso dos padr\u00f5es que ocorrem \nsequencialmente no tempo, em que um padr\u00e3o individual n\u00e3o tenha significado sozinho. \nPara tais padr\u00f5es, denominados temporais ou din\u00e2micos, a ordem em que eles s\u00e3o \nobservados no tempo e o conjunto de dados que precedem ou seguem, tem um papel \nfundamental e deve ser levado em considera\u00e7\u00e3o pelo modelo de processamento neural \n(BASTOS, 2007).  \n\nDessa forma, \u00e9 importante utilizar, neste trabalho, um caso de rede neural que tenha \nincorporado opera\u00e7\u00f5es de processamento temporal, pois muitas das tarefas no mundo \nreal acontecem em tempos diferentes. Por exemplo, nos sistemas industriais as tarefas \ns\u00e3o desempenhadas por equipamentos eletr\u00f4nicos que analisam vari\u00e1veis de sensores \nem instantes de tempo diferentes e acionam atuadores em tempos diversos (usina \nhidroel\u00e9trica, computador, autom\u00f3vel, sistema de um avi\u00e3o, etc.). Al\u00e9m disso, os seres \nhumanos tamb\u00e9m tomam decis\u00f5es e t\u00eam respostas comportamentais a est\u00edmulos \nocorridos no espa\u00e7o e no tempo (vis\u00e3o, fala, decis\u00f5es empresariais, economia, etc.). A \ncapacidade de processar tais padr\u00f5es temporais deve ser uma propriedade relevante em \num sistema inteligente.  \n\nNos \u00faltimos anos, as pesquisas se concentraram em redes neurais com base no \naprendizado supervisionado para processarem informa\u00e7\u00f5es temporais, entre elas cita-se \na Rede Elman (ELMAN, 1990). Todavia, existem alguns modelos para lidar com \nsequ\u00eancias temporais em redes n\u00e3o-supervisionadas, apenas recentemente essa classe de \nredes neurais tem recebido aten\u00e7\u00e3o dos pesquisadores.  \n\n\n\n \n\n \n\n \n\n \n\n70 \n\nNeste trabalho, adotou-se seguir a mesma linha de racioc\u00ednio e utilizar uma rede \nneural baseada na aprendizagem n\u00e3o-supervisionada para tratar a quest\u00e3o temporal. \nSeus conceitos e fundamentos s\u00e3o apresentados a seguir.  \n\n3.6.1 Conceitos b\u00e1sicos de s\u00e9ries temporais  \n\nDe acordo com (BARRETO, 1998) (BARRETO, 2002) (BARRETO ET AL., \n2001), um padr\u00e3o temporal \u00e9 uma sequ\u00eancia espa\u00e7o-temporal formada por um conjunto \nfinito e ordenado no tempo, composto por N vetores de caracter\u00edsticas. Para o prop\u00f3sito \ncomputacional, assume-se que uma sequ\u00eancia temporal \u00e9 composta de componentes \ndiscretos ordenados no tempo: \n\n{ }N)(t)(t)(t(t)X N ???= xxxx ,,2,1, L , (9) \n\nonde cada componente \u00e9 denotado por [ ]Tn(t),x(t),(t),xx(t) L21=x e a vari\u00e1vel t \u00e9 \nusada para representar um instante particular de tempo. \n\nO termo processamento de s\u00e9ries temporais diz respeito a algumas das seguintes \ntarefas:  \n\n\u2022 Classifica\u00e7\u00e3o: a rede produz um sinal em resposta a uma sequ\u00eancia de \nentrada quando esta encontrar similaridade com algum padr\u00e3o na rede. Pode \nser chamada tamb\u00e9m de reconhecimento de sequ\u00eancias. \n\n\u2022 Teste: a rede deve reproduzir previamente a sequ\u00eancia aprendida na ordem \ntemporal correta. \n\n\u2022 Predi\u00e7\u00e3o: estimar itens do futuro de uma dada sequ\u00eancia de entrada com base \nnos valores observados no passado. \n\nAs s\u00e9ries temporais t\u00eam algumas propriedades devido \u00e0 diversidade dos sinais \ntemporais. O conhecimento dessas propriedades \u00e9 \u00fatil para entender as aplica\u00e7\u00f5es \nenvolvidas nas redes neurais temporais: \n\n1. Ordem: posi\u00e7\u00e3o relativa de cada item da sequ\u00eancia em rela\u00e7\u00e3o ao outro. \n\n2. M\u00e9trica: dura\u00e7\u00e3o de um padr\u00e3o no tempo em rela\u00e7\u00e3o a outros padr\u00f5es da \nsequ\u00eancia. \n\n3. Densidade: n\u00famero de vetores de caracter\u00edsticas que comp\u00f5em uma \nsequ\u00eancia, ou seja, a taxa de amostragem. \n\n4. Assimetria: sentido do tempo n\u00e3o pode ser invertido. \n\n5. Contexto temporal: \u00e9 a menor subsequ\u00eancia formada por itens passados que \npossibilitam determinar sem ambiguidades o item atual da sequ\u00eancia. \n\n6. Grau: n\u00famero de itens que comp\u00f5em o contexto temporal. \n\nEssas propriedades est\u00e3o envolvidas geralmente na constru\u00e7\u00e3o do modelo, sendo \ncodificadas como par\u00e2metros.  \n\n3.6.1.1 Mem\u00f3ria de curta dura\u00e7\u00e3o \n\nPara estabelecer associa\u00e7\u00f5es e extrair correla\u00e7\u00f5es temporais entre padr\u00f5es \nconsecutivos de uma dada sequ\u00eancia, uma rede neural deve ser capaz de reter e manter \nprovisoriamente informa\u00e7\u00f5es sobre itens de um passado pr\u00f3ximo. O mecanismo de \n\n\n\n \n\n \n\n \n\n \n\n71 \n\nreten\u00e7\u00e3o \u00e9 denominado de mem\u00f3ria de curto prazo (STM \u2013 short-term memory) e \u00e9 \namplamente utilizado no processamento de sequ\u00eancias temporais (BARRETO, 2002). \n\nBasicamente, mem\u00f3rias de curto prazo convertem informa\u00e7\u00e3o temporal em espacial, \npossibilitando que redes est\u00e1ticas convencionais sejam empregadas em tarefas de \nprocessamento de informa\u00e7\u00e3o temporal. Essa abordagem proporciona construir um \nsistema din\u00e2mico n\u00e3o-linear, que forne\u00e7a uma clara separa\u00e7\u00e3o de responsabilidades: a \nrede est\u00e1tica respons\u00e1vel pela n\u00e3o-linearidade e a mem\u00f3ria respons\u00e1vel pelo tempo. \n\nUma mem\u00f3ria de curto prazo n\u00e3o tem nenhum tipo de aprendizado e, por essa raz\u00e3o, \no seu comportamento \u00e9 totalmente determinado pelos par\u00e2metros de funcionamento do \nmodelo.  \n\nEm (BARRETO, 2002) \u00e9 apresentado um modelo de mem\u00f3ria de curto prazo, \nbaseado na utiliza\u00e7\u00e3o de integradores na entrada ou na sa\u00edda da rede. Tem-se que o \nvetor de entrada da rede passa a ser representado por (t)x e os itens atuais da sequ\u00eancia \npor x(t), ent\u00e3o a fun\u00e7\u00e3o que expressa a rela\u00e7\u00e3o com as entradas anteriores em um \ninstante t fica: \n\n( ) ( ) ( ) ( )ttt xxx ?? +??= 11 , (10) \nonde ? \u00e9 a constante de integra\u00e7\u00e3o e 0<??1 \u00e9 chamada de profundidade da mem\u00f3ria, \npois determina o grau de influ\u00eancia das entradas anteriores sobre a entrada atual. A \ndetermina\u00e7\u00e3o desse par\u00e2metro \u00e9 feita por tentativa e erro em experimentos emp\u00edricos. \n\nQuando a rede TKM est\u00e1 com o par\u00e2metro (?=1), ela se comporta como um SOM \nconvencional com entradas est\u00e1ticas. Quando a rede TKM est\u00e1 com o par\u00e2metro \n(0<??1), ela se comporta dinamicamente. No primeiro caso, separa-se de um conjunto \nde treinamento as categorias, de acordo com semelhan\u00e7as espaciais, enquanto no \nsegundo, separam-se os vetores de entrada por uma combina\u00e7\u00e3o de semelhan\u00e7a espacial \ne proximidade temporal, em que a contribui\u00e7\u00e3o relativa dos dois fatores \u00e9 determinada \npelo par\u00e2metro ?. \n\nEm (KANGAS, 1990), ao utilizar a rede SOM original, foi substitu\u00eddo o vetor de \nentrada original x(t) por uma vers\u00e3o temporal de acordo com a Equa\u00e7\u00e3o 10. O SOM \nmodificado (inser\u00e7\u00e3o de uma mem\u00f3ria de curto prazo) foi aplicado no problema de \nreconhecimento de fonemas e obteve taxa de acertos superiores ao SOM convencional. \n\nPara mais detalhes sobre os principais conceitos de s\u00e9ries temporais e modelos de \nmem\u00f3rias de curto prazo relatados na literatura, consultar os trabalhos de (MOSER, \n2004) (BASTOS, 2007) (BARRETO, 1998) (BARRETO, 2002) (BARRETO ET AL., \n2001).  \n\n3.6.2 Algoritmo de Treinamento \n\nNeste trabalho, foi adotada a utiliza\u00e7\u00e3o do Mapa Temporal de Kohonen (TKM \u2013 \nTemporal Kohonen Map), que \u00e9 uma proposta de (CHAPPEL; TAYLOR, 1993). Eles \nmodificaram o SOM original por meio da inclus\u00e3o de uma mem\u00f3ria de curto prazo, com \nbase em integradores na sa\u00edda de cada neur\u00f4nio da rede (Equa\u00e7\u00e3o 10).  \n\nA rede agora apresenta uma t\u00e9cnica que mant\u00e9m o hist\u00f3rico de ativa\u00e7\u00f5es ai(t) para \ncada um dos neur\u00f4nios da seguinte forma: \n\n( ) ( ) ( ) ( )\n2\n\n)(\n2\n\n1\n11 tttata jjj wx ????= ? , (11) \n\n\n\n \n\n \n\n \n\n \n\n72 \n\nonde 0<??1 \u00e9 a profundidade da mem\u00f3ria, x(t) \u00e9 o item atual da sequ\u00eancia e wj(t) \u00e9 o \nvetor de peso sin\u00e1ptico do neur\u00f4nio j. Um neur\u00f4nio da rede TKM calcula sua ativa\u00e7\u00e3o \nno instante t, que decai a uma taxa dada pela constante de tempo |1/(1- ?)|.  \n\nO neur\u00f4nio vencedor \u00e9 calculado e localizado pela m\u00e1xima ativa\u00e7\u00e3o dos dados no \nhist\u00f3rico, que s\u00e3o formados pela entrada atual e pelos vetores de entrada pr\u00e9vios. Ent\u00e3o, \ncada sequ\u00eancia \u00e9 processada mapeando um vetor por instante de tempo, em que o \n\u00faltimo neur\u00f4nio vencedor serve para representar a sequ\u00eancia inteira. O c\u00e1lculo do \nvencedor \u00e9 conforme a equa\u00e7\u00e3o: \n\n{ } ( ){ }tati j\nj ??\n\n= max)(x , (12) \n\nonde, a vizinhan\u00e7a topol\u00f3gica e a atualiza\u00e7\u00e3o dos pesos sin\u00e1pticos s\u00e3o ajustadas da \nmesma forma em que o SOM convencional, conforme visto na se\u00e7\u00e3o 3.5.  \n\nO algoritmo de treinamento para o TKM segue as mesmas etapas vistas na se\u00e7\u00e3o \n3.5. Entretanto, com uma modifica\u00e7\u00e3o no momento da escolha dos neur\u00f4nios \nvencedores, em que al\u00e9m de se calcular a dist\u00e2ncia euclidiana, tamb\u00e9m \u00e9 realizada uma \navalia\u00e7\u00e3o da combina\u00e7\u00e3o espa\u00e7o-temporal da s\u00e9rie de entrada. \u00c9 importante lembrar que \nno TKM a entrada da rede neural, agora, \u00e9 composta por uma sequ\u00eancia de dados, e n\u00e3o \napenas por um dado est\u00e1tico como no SOM convencional. \n\nA estrat\u00e9gia utilizada pelo TKM resulta em neur\u00f4nios que respondem a sequ\u00eancias \nespec\u00edficas. (CHAPPEL; TAYLOR, 1993) aplicaram o TKM com sucesso no \nreconhecimento de fonemas que ocorrem em uma mesma posi\u00e7\u00e3o, por\u00e9m em contextos \ndiferentes. Por exemplo, as sequ\u00eancias a-b-c-d e r-s-t-d s\u00e3o classificadas como distintas \npor que a letra d tem claramente contextos temporais distintos.  \n\nEntretanto, o TKM apresenta algumas falhas na identifica\u00e7\u00e3o de sequ\u00eancias que \nrequerem informa\u00e7\u00e3o contextual de longo prazo e gera ambiguidade em todos os casos \nque tenham a mesma m\u00e9dia m\u00f3vel. Isso ocorre porque a determina\u00e7\u00e3o do neur\u00f4nio \nvencedor depende principalmente das entradas mais recentes e a profundidade da \nmem\u00f3ria \u00e9 limitada pelo par\u00e2metro ?. \n\nEm (BARRETO ET AL., 2001), \u00e9 apresentadao uma revis\u00e3o das principais \naplica\u00e7\u00f5es para o qual o TKM foi utilizado para solucionar problemas. Por exemplo, o \nTKM foi aplicado em uma arquitetura de controle adaptativa para aprender um trajeto \nde um caminho percorrido por um rob\u00f4. Tamb\u00e9m foi aplicado para localizar objetos de \nduas dimens\u00f5es em imagens que s\u00e3o captadas em tempo real por uma linha de produ\u00e7\u00e3o \npara classifica\u00e7\u00e3o de produtos. \n\n3.6.3 Algoritmo de Teste  \n\nSeja T uma s\u00e9rie de padr\u00f5es de entrada para teste, com janela temporal t, composta \npelos vetores xk, k = 1,... , t, tem-se o seguinte algoritmo:  \n\nPara cada s\u00e9rie T?  fa\u00e7a \nPara cada k de 1 at\u00e9 t fa\u00e7a \n\nCalcular a dist\u00e2ncia euclidiana entre kx  e os neur\u00f4nios; \nCalcular ativa\u00e7\u00e3o para os neur\u00f4nios, utilizando as ativa\u00e7\u00f5es \npassadas, conforme Equa\u00e7\u00e3o 11. \n\nFim \nLocalizar o neur\u00f4nio com a maior ativa\u00e7\u00e3o e defini-lo como \nvencedor, conforme Equa\u00e7\u00e3o 12; \nEscrever na sa\u00edda o peso sin\u00e1ptico do neur\u00f4nio vencedor; \n\n\n\n \n\n \n\n \n\n \n\n73 \n\nEscrever na sa\u00edda o \u00edndice do neur\u00f4nio vencedor; \nFim \n\n \n\n3.6.4 Resultados do TKM  \n\nA interpreta\u00e7\u00e3o dos resultados para o TKM \u00e9 realizada da mesma forma como \u00e9 \nrealizada no SOM convencional. Como resultados a serem extra\u00eddos t\u00eam-se, os pesos \nsin\u00e1pticos como coordenadas em um gr\u00e1fico, ou a imagem da matriz de dist\u00e2ncia \nunificada (U-Matrix). \n\nA principal diferen\u00e7a entre os resultados do TKM e o SOM convencional est\u00e1 na \ncorrela\u00e7\u00e3o espa\u00e7o-temporal entre cada amostra de entrada. Para o caso da U-Matrix, \npode-se projetar a trajet\u00f3ria da forma\u00e7\u00e3o dos neur\u00f4nios vencedores, que proporciona \nvisualizar o caminho percorrido pelos dados entre os agrupamentos. Nesse caso, pode-\nse identificar uma tend\u00eancia (ou padr\u00e3o) de comportamento, acompanhando a evolu\u00e7\u00e3o \nem um per\u00edodo de tempo. Ver Figura 3.12(a). \n\n0 5 10 15 20 25 30\n0\n\n10\n\n20\n\n30\n\n40\n\n50\n\n60\n\n70\n\n\u00cdn\nd\nic\ne \nd\no\n n\neu\nr\u00f4\nn\nio\n\nTempo\n\nTrajet\u00f3ria x Tempo\n\nTrajet\u00f3ria dos \nneur\u00f4nios \nvencedores\n\n1\n\n11\n\n56\n\n66\n(a) (b)  \n\nFigura 3.12: (a) Visualiza\u00e7\u00e3o da trajet\u00f3ria dos neur\u00f4nios vencedores e (b) localiza\u00e7\u00e3o da \ntrajet\u00f3ria em cada instante de tempo.  \n\nO TKM tamb\u00e9m pode ser interpretado por meio da proje\u00e7\u00e3o em um gr\u00e1fico da \nrela\u00e7\u00e3o entre os vencedores para cada s\u00e9rie em um per\u00edodo de tempo. Al\u00e9m disso, \nproporciona a observa\u00e7\u00e3o do instante em que ocorrem as mudan\u00e7as de vencedores, \nidentificando uma tend\u00eancia para a classifica\u00e7\u00e3o das s\u00e9ries. Geralmente, quando ocorre \na troca de vencedores, quer dizer que a s\u00e9rie de entrada tamb\u00e9m sofreu modifica\u00e7\u00f5es em \nrela\u00e7\u00e3o a seus valores pr\u00e9vios. Isso \u00e9 importante para analisar as mudan\u00e7as de \ncomportamento do sistema. Ver Figura 3.12(b). \n\nOutra an\u00e1lise que pode ser feita sobre o gr\u00e1fico da rela\u00e7\u00e3o entre os vencedores, em \num per\u00edodo de tempo, \u00e9 avaliar a generaliza\u00e7\u00e3o do TKM para diferentes amostras de um \nmesmo tipo de dado. Essas amostras podem ter sofrido ru\u00eddos externos. Quando o \ngr\u00e1fico \u00e9 produzido, a generaliza\u00e7\u00e3o do TKM \u00e9 avaliada comparando o resultado de \ncada s\u00e9rie com as outras, onde deve-se obter a mesma sequ\u00eancia de neur\u00f4nios \nvencedores entre elas.  \n\n\n\n \n\n \n\n \n\n \n\n74 \n\nIsso diz respeito ao TKM ter a capacidade de reconhecer e identificar corretamente \nas s\u00e9ries de amostras, mesmo pertencendo a situa\u00e7\u00f5es semelhantes e com incid\u00eancia de \nru\u00eddos deve apresentar o mesmo comportamento.  \n\n3.6.5 Compara\u00e7\u00e3o entre o SOM e TKM  \n\nAs redes neurais SOM e TKM t\u00eam muitas semelhan\u00e7as entre si. Do ponto de vista \ndo algoritmo de treinamento, a \u00fanica etapa que apresenta diferen\u00e7as no algoritmo \u00e9 a de \ncompeti\u00e7\u00e3o, em que ocorre a escolha do neur\u00f4nio vencedor.  \n\nDo ponto de vista do tratamento dos dados de entrada, o SOM convencional \ntrabalha com dados est\u00e1ticos e processa um padr\u00e3o de entrada por vez. J\u00e1 o TKM \nprocessa uma s\u00e9rie de padr\u00f5es de entrada, em que o neur\u00f4nio vencedor \u00e9 escolhido \nsempre quando o \u00faltimo padr\u00e3o da s\u00e9rie \u00e9 apresentado para a rede. \n\nA etapa de teste tamb\u00e9m apresenta diferen\u00e7as significativas, em que no SOM \npadr\u00e3o usa-se basicamente a dist\u00e2ncia euclidiana, e no TKM necessita-se, al\u00e9m da \ndist\u00e2ncia euclidiana, do c\u00e1lculo do hist\u00f3rico de ativa\u00e7\u00f5es para cada neur\u00f4nio. \n\nNa Tabela 3.2, \u00e9 apresentada uma compara\u00e7\u00e3o evidenciando as principais \ndiferen\u00e7as entre as duas abordagens.  \n\nTabela 3.2: Compara\u00e7\u00e3o entre SOM e TKM. \n\n SOM TKM \n\nPadr\u00f5es de entrada Trata os padr\u00f5es de entrada \ncomo dados independentes.  \n\nTrata s\u00e9ries de dados como \npadr\u00f5es de entrada arranjados \nem um per\u00edodo de tempo. \n\nTratamento dos dados Dados avaliados apenas nas \nquest\u00f5es espaciais. \n\nDados avaliados nas quest\u00f5es \nespaciais e temporais. \n\nNeur\u00f4nio vencedor Menor dist\u00e2ncia euclidiana \nem rela\u00e7\u00e3o ao padr\u00e3o de \nentrada e os neur\u00f4nios. \n\nCrit\u00e9rio da maior ativa\u00e7\u00e3o \npara uma s\u00e9rie como entrada \nem rela\u00e7\u00e3o aos neur\u00f4nios. \n\nCompeti\u00e7\u00e3o  Calcular a dist\u00e2ncia \neuclidiana para todos os \nneur\u00f4nios do mapa. Escolhe \no neur\u00f4nio vencedor. \n\nAl\u00e9m da dist\u00e2ncia euclidiana \nentre todos os neur\u00f4nios do \nmapa, s\u00e3o calculadas as \nativa\u00e7\u00f5es.  \n\nCoopera\u00e7\u00e3o Defini\u00e7\u00e3o da vizinhan\u00e7a de \nforma\u00e7\u00e3o topol\u00f3gica. \n\nIdem ao SOM. \n\nAdapta\u00e7\u00e3o Atualiza\u00e7\u00e3o dos pesos \nsin\u00e1pticos dos neur\u00f4nios. \n\nIdem ao SOM. \n\nRecupera\u00e7\u00e3o Baseada na menor dist\u00e2ncia \neuclidiana. \n\nBaseada na maior ativa\u00e7\u00e3o. \n\n3.7 Motiva\u00e7\u00e3o de usar o SOM para Analisar Falhas \nSegundo (KOHONEN ET AL., 1996) o SOM tem algumas caracter\u00edsticas \n\nimportantes que proporcionam o monitoramento da ocorr\u00eancia de falhas em processos \ndin\u00e2micos. Por exemplo, um processo de produ\u00e7\u00e3o industrial, em que, devido \u00e0 grande \n\n\n\n \n\n \n\n \n\n \n\n75 \n\nquantidade de vari\u00e1veis e dados coletados, as falhas se mostram dif\u00edceis de analisar. \nEnt\u00e3o, \u00e9 necess\u00e1rio um processamento nesses dados que viabilize o estudo das rela\u00e7\u00f5es \nentre as informa\u00e7\u00f5es adquiridas.  \n\nO modelo do SOM implementa uma proje\u00e7\u00e3o n\u00e3o-linear de caracter\u00edsticas de um \nespa\u00e7o sensorial em um arranjo de neur\u00f4nios com dimens\u00e3o reduzida. Al\u00e9m de mapear \nsinais de entrada com dimens\u00e3o elevada em uma estrutura com dimens\u00e3o inferior, o \nSOM assegura a forma ordenada dos dados, durante o mapeamento, preservando as \nrela\u00e7\u00f5es topol\u00f3gicas no dom\u00ednio do sinal. Devido a isso, tende a criar agrupamentos de \ninforma\u00e7\u00f5es e relacionamentos dos dados de entrada em uma representa\u00e7\u00e3o espacial \nformando um mapa.  \n\nA mais importante caracter\u00edstica do SOM \u00e9 a visualiza\u00e7\u00e3o de sistemas e processos \ncom dimens\u00f5es elevadas e a descoberta de categorias e abstra\u00e7\u00f5es nos dados de entrada \n(KOHONEN ET AL., 1996) (D\u00cdAZ, IGNACIO ET AL., 2008). \n\nPara exemplificar uma aplica\u00e7\u00e3o-chave do SOM em casos reais, cita-se o campo da \nengenharia, que envolve muitas \u00e1reas da vida do ser humano, como as ind\u00fastrias, os \nve\u00edculos, as aeronaves, os equipamentos m\u00e9dicos, etc. Uma importante aplica\u00e7\u00e3o do \nSOM no campo da engenharia \u00e9 seu uso na identifica\u00e7\u00e3o e no monitoramento de falhas, \ncuja ideia \u00e9 acompanhar a evolu\u00e7\u00e3o dos estados de opera\u00e7\u00e3o em m\u00e1quinas ou processos \ncomplexos, que s\u00e3o muito dif\u00edceis de observar e interpretar (KOHONEN ET AL., \n1996). Neste trabalho, \u00e9 abordada a aplica\u00e7\u00e3o do SOM em ambientes industriais, \nsobretudo, no processo de transporte em uma refinaria de petr\u00f3leo.  \n\nEm uma planta ou m\u00e1quina industrial complexa, os poss\u00edveis estados de suas \nvari\u00e1veis, durante a opera\u00e7\u00e3o, podem ser de ordem num\u00e9rica muito elevada e serem \nexpressos de uma forma n\u00e3o-linear. Entretanto, \u00e9 muito dif\u00edcil elaborar um modelo \nanal\u00edtico que reflita todas as particularidades de comportamento do processo. Como o \nSOM \u00e9 um m\u00e9todo de proje\u00e7\u00e3o n\u00e3o-linear, as caracter\u00edsticas de cada estado podem ser \nprocessadas e passam a ser conhecidas pelo SOM sem a necessidade de uma \nmodelagem expl\u00edcita de todo o comportamento do sistema a ser monitorado (D\u00cdAZ, \nIGNACIO ET AL., 2008). \n\nMuitas das pesquisas que focam na an\u00e1lise do comportamento de processos \n(monitorar o estado, detectar, identificar e diagnosticar as falhas e, em trabalhos mais \nrecentes, prever estados ou falhas), t\u00eam adotado princ\u00edpios de aprendizagem n\u00e3o-\nsupervisionada para resolver tais problemas. Essa tend\u00eancia \u00e9 fun\u00e7\u00e3o principalmente de \nn\u00e3o existirem informa\u00e7\u00f5es dispon\u00edveis a priori sobre as situa\u00e7\u00f5es de falhas. \n\nNas se\u00e7\u00f5es a seguir, ser\u00e3o apresentados alguns trabalhos relacionados ao uso do \nSOM em problemas de engenharia, que visam detectar e diagnosticar falhas, monitorar \ne prever comportamentos futuros em sistemas industriais. \n\n3.7.1 Detectar falhas \n\nDurante o treinamento do SOM, os pesos sin\u00e1pticos dos neur\u00f4nios se adaptam de \nacordo com o dom\u00ednio do espa\u00e7o de estados refletidos pelas amostras adquiridas. \nAssim, o espa\u00e7o dos estados pode ser dividido em duas partes: espa\u00e7o reconhecido pelo \nSOM e o espa\u00e7o complementar. Por exemplo, no SOM treinado com dados normais, \nsomente situa\u00e7\u00f5es que incluem dados normais ser\u00e3o identificadas (espa\u00e7o reconhecido), \ncaso seja alguma situa\u00e7\u00e3o de falha, esta ser\u00e1 alocada em algum lugar nas bordas do \nmapa (espa\u00e7o complementar). \n\n\n\n \n\n \n\n \n\n \n\n76 \n\nDevido a tal comportamento do SOM, a detec\u00e7\u00e3o de falhas pode ser baseada na \nmedida do erro de quantiza\u00e7\u00e3o (ver Equa\u00e7\u00e3o 8), lembrando que \u00e9 preciso utilizar \napenas um \u00fanico vetor de entrada por vez. Na maioria dos trabalhos que utiliza o SOM \npara detectar anomalias ou falhas no sistema, este \u00e9 treinado apenas para reconhecer os \ndados do modo de opera\u00e7\u00e3o normal. Quando for apresentado na entrada um vetor \ndiferente de normal, este ter\u00e1 uma grande dissimilaridade em rela\u00e7\u00e3o \u00e0s informa\u00e7\u00f5es \narmazenadas pelo SOM.  \n\nConsidere que uma sequ\u00eancia de vetores de entrada, que correspondam a \ninforma\u00e7\u00f5es medidas e coletadas no sistema, \u00e9 apresentada \u00e0 entrada do SOM. Cada \nvetor da sequ\u00eancia \u00e9 comparado com o peso sin\u00e1ptico de todos os neur\u00f4nios do mapa. \nSe a menor dist\u00e2ncia euclidiana calculada exceder um limite predeterminado, isso \u00e9 um \nind\u00edcio de que o processo est\u00e1, provavelmente, em situa\u00e7\u00e3o de falha.  \n\nEssa conclus\u00e3o est\u00e1 baseada na hip\u00f3tese de que um erro de quantiza\u00e7\u00e3o grande \ncorresponde a um ponto de opera\u00e7\u00e3o pertencente ao espa\u00e7o complementar n\u00e3o coberto \npelos dados utilizados no treinamento (QIU, HAI ET AL., 2003).  \n\nPara concluir, a detec\u00e7\u00e3o de falhas ou de qualquer outra anomalia est\u00e1 baseada na \nafirma\u00e7\u00e3o de que tudo o que n\u00e3o \u00e9 normal \u00e9 considerado como anormal. Geralmente, \nesta t\u00e9cnica \u00e9 aplicada juntamente com a de diagn\u00f3stico de falhas, que visa identificar \nqual a falha ocorrida no sistema ap\u00f3s a detec\u00e7\u00e3o. \n\nA seguir, s\u00e3o apresentados alguns trabalhos relacionados que fazem uso da detec\u00e7\u00e3o \nde falhas utilizando o SOM como ferramenta: \n\n\u2022 Em (BARRETO ET AL., 2004), o SOM \u00e9 utilizado como ferramenta para \ndetec\u00e7\u00e3o de falhas em infraestrutura de transmiss\u00e3o de dados em redes de \ncelulares 3G. A detec\u00e7\u00e3o \u00e9 realizada pelo erro de quantiza\u00e7\u00e3o, que extrai um \nvalor como principal medida da rela\u00e7\u00e3o entre as falhas. Para uma falha ser \ndetectada, \u00e9 preciso que o erro de quantiza\u00e7\u00e3o extrapole um limite \npreestabelecido. \n\n\u2022 Outro trabalho que utiliza a dist\u00e2ncia euclidiana \u00e9 o de (QIU; LEE, 2004), \nque utiliza o SOM para detectar a degrada\u00e7\u00e3o e estimar o tempo restante de \nvida \u00fatil de equipamentos mec\u00e2nicos que utilizam rolamentos. O sinal de \nvibra\u00e7\u00e3o \u00e9 adquirido nos rolamentos por meio de um aceler\u00f4metro e s\u00e3o pr\u00e9-\nprocessados pela transformada Wavelet. O erro de quantiza\u00e7\u00e3o \u00e9 utilizado \npara detectar a degrada\u00e7\u00e3o e as falhas que ocorrerem no sistema. O \ntreinamento do SOM utiliza sinais em condi\u00e7\u00f5es normais de funcionamento. \nVale ressaltar que a medida do erro de quantiza\u00e7\u00e3o tamb\u00e9m \u00e9 utilizada como \ntaxa de degrada\u00e7\u00e3o do sistema e, mais tarde, para calcular o tempo de vida \nrestante do equipamento.  \n\n\u2022 Outro trabalho interessante que utiliza o SOM para detectar falhas em \nrolamentos internos de motores de indu\u00e7\u00e3o \u00e9 apresentado por (ZHONG ET \nAL., 2005). S\u00e3o coletados sinais de vibra\u00e7\u00e3o dos rolamentos e projetados \nquatro casos de teste para experimentos, um utilizando rolamentos normais e \ntr\u00eas rolamentos com falhas injetadas. Os sinais s\u00e3o pr\u00e9-processados pela \nTransformada de Fourier (FFT). No trabalho, o SOM \u00e9 treinado com um \nconjunto de dados referentes aos modos de comportamento normal e com \nfalhas nos rolamentos. As falhas s\u00e3o detectadas monitorando o n\u00edvel do erro \nde quantiza\u00e7\u00e3o ao longo do tempo. \n\n\n\n \n\n \n\n \n\n \n\n77 \n\n\u2022 Outra t\u00e9cnica \u00e9 apresentada por em (WONG ET AL., 2006) para detectar \nanomalias em sistemas. O SOM detecta falhas em sistemas industriais que \ntenham partes mec\u00e2nicas rotativas por meio de an\u00e1lise dos sinais de \nvibra\u00e7\u00e3o. No trabalho, existe um mapa para cada tipo de falha. O sinal \u00e9 pr\u00e9-\nprocessado pela FFT e a seguir aplicado como entrada no SOM. \nModificando-se o SOM de forma a apresentar como resposta n\u00e3o apenas um \nneur\u00f4nio vencedor, mas todos aqueles neur\u00f4nios que perten\u00e7am \u00e0 sua \nvizinhan\u00e7a topol\u00f3gica. Estes s\u00e3o aplicados em uma compara\u00e7\u00e3o que utiliza \numa nova medida, a dist\u00e2ncia de Mahalanobis, que substitui a dist\u00e2ncia \neuclidiana para defini\u00e7\u00e3o dos vencedores. \n\n3.7.2 Diagnosticar falha  \n\nPara o diagn\u00f3stico de falhas pelo SOM \u00e9 preciso que a rede neural tenha capacidade \nde identificar e \u201cdiscernir\u201d as condi\u00e7\u00f5es de opera\u00e7\u00e3o do sistema em an\u00e1lise. \u00c9 desej\u00e1vel \nque seja capaz de separar entre os estados de opera\u00e7\u00e3o normal, degrada\u00e7\u00e3o e falha .  \n\nO principal problema do diagn\u00f3stico est\u00e1 em como determinar se uma informa\u00e7\u00e3o \u00e9 \nanormal. As falhas podem ser muito raras de ocorrer, mas quando ocorrem podem \ncausar grandes problemas e preju\u00edzos. Para o SOM ter condi\u00e7\u00f5es de classificar uma \nfalha, \u00e9 preciso que tais informa\u00e7\u00f5es estejam dispon\u00edveis para treinamento, a fim de que \nos neur\u00f4nios se adaptem ao dom\u00ednio de falhas, criando, assim, um espa\u00e7o de opera\u00e7\u00e3o \nreconhecido pelo SOM, que forma o espa\u00e7o das falhas.  \n\nS\u00f3 que em alguns casos, as informa\u00e7\u00f5es sobre degrada\u00e7\u00e3o e falhas n\u00e3o est\u00e3o \ndispon\u00edveis, devido a muitas circunst\u00e2ncias, como custo, falta de conhecimento t\u00e9cnico, \ndificuldade em coletar sinal, etc. Desse modo, produzir um conjunto de falhas \nabrangente para o caso de processos industriais e grandes m\u00e1quinas, pode exigir um \ncusto muito elevado, inviabilizando todo o projeto. Entretanto, existe a alternativa em \nque muitas das situa\u00e7\u00f5es em degrada\u00e7\u00e3o ou falha podem ser produzidas por uma \nferramenta de simula\u00e7\u00e3o.  \n\nSe a situa\u00e7\u00e3o da falha e suas raz\u00f5es s\u00e3o conhecidas, \u00e9 poss\u00edvel simular tais dados \npara serem utilizados para o treinamento do SOM. Em (KOHONEN ET AL., 1996), s\u00e3o \napresentados alguns dos tipos mais comuns de falhas que podem ocorrer no campo da \nengenharia: \n\n1. Suspens\u00e3o do fornecimento de um sinal, resultando em uma queda abrupta \ndo servi\u00e7o. \n\n2. Dist\u00farbios pesados no sinal, causando uma grande mudan\u00e7a espor\u00e1dica no \nfornecimento do servi\u00e7o. \n\n3. Perturba\u00e7\u00e3o nas medidas de um valor, frequentemente causada por uma falha \nmec\u00e2nica no equipamento de medi\u00e7\u00e3o, que prejudica o fornecimento do \nservi\u00e7o. \n\n4. Piora da qualidade dos sinais, devido \u00e0 degrada\u00e7\u00e3o (envelhecimento) natural \ndo dispositivo, causando perda de desempenho no fornecimento do servi\u00e7o. \n\n5. Mudan\u00e7as repentinas em alguns valores de par\u00e2metros previamente \nregulados, indicando uma falha no controle do mecanismo. \n\nTodos esses tipos de falhas mencionadas s\u00e3o poss\u00edveis de ser simulado, mas \u00e9 claro \nque depende muito da situa\u00e7\u00e3o, do tipo do equipamento, das causas da falha, etc. \n\n\n\n \n\n \n\n \n\n \n\n78 \n\nAssumindo que seja poss\u00edvel construir um modelo matem\u00e1tico para simular o \ncomportamento de falhas, pode-se criar artificialmente os vetores de caracter\u00edsticas \nusados para treinamento do SOM. Por meio do simulador, pode-se, por exemplo, causar \ndist\u00farbios mec\u00e2nicos ou el\u00e9tricos no modelo do equipamento, gerar sinais para situa\u00e7\u00f5es \n\u201cperigosas\u201d ou at\u00e9 mesmo injetar falhas \u00fanicas. \n\nCaso as informa\u00e7\u00f5es sobre as falhas mais t\u00edpicas estejam dispon\u00edveis, o SOM pode \nser usado como uma ferramenta classificadora das do sistema (KOHONEN ET AL., \n1996).  \n\nEm muitos trabalhos que fazem uso do SOM para diagnosticar falhas, este \u00e9 \nutilizado em dois n\u00edveis para realizar uma an\u00e1lise completa das situa\u00e7\u00f5es de falhas. O \nprimeiro n\u00edvel, a detec\u00e7\u00e3o de falhas, \u00e9 baseado no erro de quantiza\u00e7\u00e3o, em que se aplica \na mesma t\u00e9cnica vista na subse\u00e7\u00e3o anterior. O segundo n\u00edvel utiliza um mapa mais \ndetalhado (pode-se chamar de \u201catlas\u201d, pois apresenta todas as situa\u00e7\u00f5es poss\u00edveis) que \u00e9 \nusado para identificar a raz\u00e3o da ocorr\u00eancia de uma falha. Quando um sinal \u00e9 \nidentificado em uma regi\u00e3o do mapa, e essa regi\u00e3o est\u00e1 rotulada como falha (X ou Y) ou \ndegrada\u00e7\u00e3o (X ou Y), \u00e9 poss\u00edvel classificar o sinal apresentado na entrada como \npertencente \u00e0 classe da falha rotulada no mapa.  \n\nO diagn\u00f3stico de falhas faz uso de um SOM treinado com um conjunto completo de \ninforma\u00e7\u00f5es sobre a situa\u00e7\u00e3o normal, degrada\u00e7\u00e3o (caso exista) e a falha (essencial). Em \num mesmo mapa, falhas m\u00faltiplas podem ser inseridas, uma diferente da outra, \nproporcionando ao mapa o poder de classificar um n\u00famero maior de falhas (QIU, HAI \nET AL., 2003).  \n\nPara concluir, o segredo do diagn\u00f3stico do SOM est\u00e1 ligado diretamente ao conjunto \nde informa\u00e7\u00f5es utilizadas para o treinamento, ou seja, quanto mais completas e \nabrangentes forem \u00e0s caracter\u00edsticas para as diversas falhas, melhor ser\u00e1 o diagn\u00f3stico. \n\nPara realizar a classifica\u00e7\u00e3o, o SOM faz uso do algoritmo de teste (se\u00e7\u00e3o 3.5.4.1), \npara identifica qual grupo pertence o sinal, apresentando como sa\u00edda o \u00edndice do \nneur\u00f4nio vencedor. Tamb\u00e9m pode-se utilizar o mapa de caracter\u00edsticas visto pelo U-\nMatrix (se\u00e7\u00e3o 3.5.4.3) em que \u00e9 poss\u00edvel visualizar a localiza\u00e7\u00e3o espacial do neur\u00f4nio \nque classificou a falha. \n\nA seguir, ser\u00e3o apresentados alguns trabalhos relacionados que fazem uso da \ndetec\u00e7\u00e3o e classifica\u00e7\u00e3o para diagnosticar falhas em um sistema utilizando o SOM como \nferramenta: \n\n\u2022 No trabalho de Vachkov (VACHKOV ET AL., 2004), o SOM \u00e9 utilizado \npara diagnosticar falhas em partes hidr\u00e1ulicas de m\u00e1quinas retro-\nescavadeiras, analisando vari\u00e1veis de velocidade do motor, for\u00e7a exercida \npara levantar a p\u00e1, press\u00e3o de \u00f3leo e consumo de combust\u00edvel. A detec\u00e7\u00e3o de \nfalhas tamb\u00e9m \u00e9 realizada atrav\u00e9s da medida da dist\u00e2ncia euclidiana. Para o \ndiagn\u00f3stico de falhas, utiliza-se o mesmo sinal de entrada apresentado \ndurante a detec\u00e7\u00e3o e \u00e9 aplicado para a classifica\u00e7\u00e3o pelo SOM. Durante o \ntreinamento, os sinais s\u00e3o mapeados em agrupamentos separados que \nrepresentam cada um, um modo de opera\u00e7\u00e3o do equipamento. Foram feitos \nexperimentos por meio de uma ferramenta de simula\u00e7\u00e3o, em raz\u00e3o do alto \ncusto de injetar falhas em uma retro-escavadeira real. \n\n\u2022 Outro trabalho que analisa falhas em ambientes industriais \u00e9 o de (SAXENA; \nSAAD, 2004), em que o SOM \u00e9 utilizado para classificar as falhas em \n\n\n\n \n\n \n\n \n\n \n\n79 \n\nrolamentos industriais e, ao mesmo tempo, monitorar a condi\u00e7\u00e3o de \nfuncionamento ao longo do tempo. O SOM \u00e9 treinado com dados de vibra\u00e7\u00e3o \ncoletados de rolamentos em boas condi\u00e7\u00f5es e demais que apresentam falhas \ninjetadas. O diagn\u00f3stico e monitoramento da condi\u00e7\u00e3o s\u00e3o feitos com base \nno uso da trajet\u00f3ria dos neur\u00f4nios vencedores, que apresenta a evolu\u00e7\u00e3o de \numa tend\u00eancia para o funcionamento dos rolamentos, possibilitando \nidentificar para qual grupo de falhas est\u00e1 se deslocando o comportamento do \nrolamento (diagn\u00f3stico). N\u00e3o utiliza rede neural temporal.  \n\n\u2022 Uma proposta de modifica\u00e7\u00e3o no funcionamento do SOM foi apresentada \npor (YANG, B. S. ET AL., 2004), em que uma nova rede neural, chamada de \nART-SOM, \u00e9 aplicada para diagnosticar falhas em m\u00e1quinas rotativas \n(rolamentos e mancais), analisando dados de vibra\u00e7\u00e3o. O ART-SOM tem \numa mudan\u00e7a na sua din\u00e2mica de funcionamento, pois aplica t\u00e9cnicas para \ntreinamentos subsequentes de uma forma adaptativa durante a etapa de testes \nda rede, o que possibilita que o treinamento e o diagn\u00f3stico de falhas sejam \nrealizados juntos. Durante o treinamento dessa rede, s\u00e3o criados os \nagrupamentos que aprender\u00e3o os dados de entrada, possibilitando identificar \ne classificar os padr\u00f5es de falhas. Foram realizados experimentos reais e uma \ntaxa de refer\u00eancia foi calculada para avaliar o sucesso da classifica\u00e7\u00e3o das \nfalhas. \n\n\u2022 O trabalho de (ZHONG ET AL., 2005), apresentado na se\u00e7\u00e3o anterior, \ntamb\u00e9m realiza o diagn\u00f3stico de falhas em rolamentos internos de motores \nde indu\u00e7\u00e3o. S\u00e3o utilizados os mesmos sinais de vibra\u00e7\u00e3o e pr\u00e9-processados \npela Transformada de Fourier (FFT). O SOM \u00e9 treinado com um conjunto de \ndados referente a todos os modos de opera\u00e7\u00e3o dos rolamentos, efetuando o \naprendizado dos sinais normais e das falhas. Durante o treinamento, s\u00e3o \nformados agrupamentos distintos para cada tipo de falha injetada. O \ndiagn\u00f3stico das falhas \u00e9 realizado pela identifica\u00e7\u00e3o espacial de qual \nagrupamento o sinal foi mapeado, baseado no crit\u00e9rio da menor dist\u00e2ncia \neuclidiana. \n\n\u2022 Uma an\u00e1lise comparativa de tr\u00eas t\u00e9cnicas para classifica\u00e7\u00e3o de falhas foi \napresentado por (YANG, BO-SUK ET AL., 2005). O estudo de caso foi feito \ncom base na ocorr\u00eancia de falhas em compressores de refrigera\u00e7\u00e3o, por meio \nda an\u00e1lise de ru\u00eddo e vibra\u00e7\u00e3o presentes no equipamento. O trabalho \u00e9 focado \nem uma compara\u00e7\u00e3o entre tr\u00eas t\u00e9cnicas de redes neurais para classifica\u00e7\u00e3o de \npadr\u00f5es, SOM, LVQ (Learning Vector Quantization) e SVM (Support \nVector Machine). Todas as redes neurais s\u00e3o treinadas com sinais iguais e \npr\u00e9-processadas pela Transformada Wavelet. Os resultados dos experimentos \nmostraram que o SOM apresentou resultados satisfat\u00f3rios para a \nclassifica\u00e7\u00e3o de falhas, mas a que obteve os melhores resultados foi a rede \nneural SVM, e o menos satisfat\u00f3rio foi a LVQ.  \n\n\u2022 Com os avan\u00e7os tecnol\u00f3gicos e principalmente a inser\u00e7\u00e3o da Internet em \nredes industriais, o trabalho de (DOM\u00cdNGUEZ, M. ET AL., 2007) apresenta \numa proposta de arquitetura para um sistema distribu\u00eddo de monitoramento \nda condi\u00e7\u00e3o de equipamentos, tendo como principal fun\u00e7\u00e3o a detec\u00e7\u00e3o e \ndiagn\u00f3stico de falhas. Essa arquitetura \u00e9 baseada nos padr\u00f5es atuais de \ntecnologia de desenvolvimento de sistemas, sendo um sistema totalmente \n\n\n\n \n\n \n\n \n\n \n\n80 \n\npara a Web, que visa utilizar a Internet como canal de comunica\u00e7\u00e3o para \nfornecer flexibilidade, interoperabilidade e escalabilidade ao sistema. O \nSOM \u00e9 inserido em uma camada localizada no meio, entre o Cliente \n(hardware e aquisi\u00e7\u00e3o de sinais) e o Servidor (Sistema de Monitoramento \nCentral), em que a camada do SOM tem a tarefa de realizar o treinamento da \nrede neural, detec\u00e7\u00e3o e diagn\u00f3stico de falhas. A detec\u00e7\u00e3o de falhas tamb\u00e9m \u00e9 \nfeita pelo erro de quantiza\u00e7\u00e3o, semelhante ao apresentado na se\u00e7\u00e3o anterior. \nO diagn\u00f3stico \u00e9 realizado por uma proje\u00e7\u00e3o da trajet\u00f3ria utilizada para \nmonitorar a condi\u00e7\u00e3o de opera\u00e7\u00e3o do equipamento ao longo do tempo de \nopera\u00e7\u00e3o.  \n\n\u2022 No trabalho de (G\u00c9RMEN ET AL., 2007), o SOM \u00e9 utilizado para detectar e \nclassificar falhas de quebra de rotores e problemas mec\u00e2nicos em motores de \nindu\u00e7\u00e3o, que s\u00e3o largamente utilizados nas ind\u00fastrias. O sinal utilizado \u00e9 a \namostra de corrente nominal do motor, que \u00e9 pr\u00e9-processado e utilizado \ncomo entrada para treinamento ou testes do SOM. A classifica\u00e7\u00e3o dos sinais \npelo SOM \u00e9 feita por meio do algoritmo LVQ (Learning Vector \nQuantization), uma t\u00e9cnica desenvolvida por Kohonen para delimitar e \najustar a forma\u00e7\u00e3o de fronteiras nos agrupamentos formados no mapa. O \ntrabalho apresenta experimentos reais aplicados em motores com boas \ncondi\u00e7\u00f5es e motores com falhas injetadas fisicamente (causando dano no \nmotor). O resultado alcan\u00e7ado foi de 100% de acerto na classifica\u00e7\u00e3o de \nfalhas ocorridas nos testes.  \n\n3.7.3 Predi\u00e7\u00e3o e Monitoramento do comportamento  \n\nEntender e modelar as rela\u00e7\u00f5es complexas entre as diversas vari\u00e1veis que formam \num grande sistema \u00e9 uma tarefa que exige muito esfor\u00e7o e de grande dificuldade.  \n\nSegundo (D\u00cdAZ, IGNACIO ET AL., 2008), as informa\u00e7\u00f5es que s\u00e3o adquiridas por \num sistema de aquisi\u00e7\u00e3o de dados, produzem uma enorme quantidade de informa\u00e7\u00f5es \nao longo do tempo, que se torna muito dif\u00edcil ou mesmo imposs\u00edvel de ser interpretada. \nEm tal situa\u00e7\u00e3o, o m\u00ednimo conhecimento a respeito de alguma caracter\u00edstica do sistema \nse torna muito \u00fatil.  \n\nNo entanto existem t\u00e9cnicas de processamento de dados que auxiliam nesta an\u00e1lise. \nAs informa\u00e7\u00f5es coletadas podem ser convertidas em uma forma que auxilie na simples \nvisualiza\u00e7\u00e3o e compreens\u00e3o, em que mesmo com uma poss\u00edvel redu\u00e7\u00e3o da \ndimensionalidade, preserva os relacionamentos estat\u00edsticos entre as vari\u00e1veis do \nsistema. Com esse tipo de transforma\u00e7\u00e3o dispon\u00edvel seria poss\u00edvel: \n\n\u2022 O operador visualizar e acompanhar o desenvolvimento dos estados do \nsistema ao longo do tempo. \n\n\u2022 A compreens\u00e3o dos dados facilita a estimativa de comportamentos futuros do \nsistema. \n\n\u2022 Anormalidade no comportamento presente ou previsto do processo torna \nposs\u00edvel a detec\u00e7\u00e3o de situa\u00e7\u00f5es de falhas.  \n\n\u2022 O controle do sistema pode ser baseado na an\u00e1lise dos estados. \n\nCom a utiliza\u00e7\u00e3o do SOM, \u00e9 poss\u00edvel atender a essas afirma\u00e7\u00f5es. \u00c9 uma ferramenta \nimportante para monitorar o comportamento de sistemas complexos, possibilita analisar \n\n\n\n \n\n \n\n \n\n \n\n81 \n\ne localizar rela\u00e7\u00f5es entre as vari\u00e1veis e da din\u00e2mica do processo. Al\u00e9m disso, abre um \ncampo de pesquisa sobre an\u00e1lise explorat\u00f3ria do comportamento de processos n\u00e3o-\nlineares e n\u00e3o-estacion\u00e1rios (KOHONEN ET AL., 1996) (GOH ET AL., 2006).  \n\nOs m\u00e9todos de visualiza\u00e7\u00e3o presentes no SOM s\u00e3o uma poderosa ferramenta para \ndescobrir relacionamentos nas estruturas gerais do espa\u00e7o de dados de entrada, al\u00e9m de \nrevelar o comportamento do sistema. No mapa resultante do SOM, cada neur\u00f4nio passa \na representar um estado de comportamento local do processo.  \n\nPara monitorar o comportamento, o SOM faz uso das mesmas informa\u00e7\u00f5es e formas \nde treinamento utilizadas para o diagn\u00f3stico de falhas visto na subse\u00e7\u00e3o anterior. A \nnovidade est\u00e1 em se projetar uma trajet\u00f3ria percorrida pelos neur\u00f4nios vencedores. A \ntrajet\u00f3ria \u00e9 formada pelo armazenamento da sequ\u00eancia de neur\u00f4nios vencedores, cujos \nvetores de entrada s\u00e3o apresentados seguindo uma ordem temporal (KOHONEN ET \nAL., 1996). \n\nUma trajet\u00f3ria consiste em formar um conjunto de imagens sucessivas a respeito dos \nestados de opera\u00e7\u00e3o do sistema. A trajet\u00f3ria pode ser desenhada e visualizada no mapa \nde caracter\u00edsticas do SOM (U-Matrix), indicando os estados percorridos pelo sistema ao \nlongo do tempo. Al\u00e9m disso, percorrendo esse caminho, pode-se, por exemplo, inferir \nos valores futuros dos estados do processo, pois a tend\u00eancia se concretiza no decorrer do \ntempo. Isso possibilita analisar com mais detalhes o comportamento do processo antes e \ndurante a ocorr\u00eancia da falha.  \n\nPara concluir, a principal ideia de monitorar o comportamento \u00e9 identificar a \ncondi\u00e7\u00e3o atual do sistema e a tend\u00eancia do que acontecer\u00e1 caso o sistema continue se \ndesviando da normalidade. Para realizar o monitoramento e projetar a trajet\u00f3ria de \ntend\u00eancia, o SOM faz uso dos princ\u00edpios do diagn\u00f3stico e a proje\u00e7\u00e3o da imagem U-\nMatrix para desenhar a trajet\u00f3ria espacial.  \n\nA seguir, ser\u00e3o apresentados alguns trabalhos relacionados que fazem uso do SOM \npara realizar o monitoramento do comportamento para evitar falhas em um sistema: \n\n\u2022 Um trabalho aplicado integralmente em um problema real de uma empresa \npetroqu\u00edmica foi apresentado por (J\u00c4MS\u00c4-JOUNELA ET AL., 2003). O \nSOM foi utilizado para monitorar o funcionamento de um processo de \nprodu\u00e7\u00e3o em uma empresa petroqu\u00edmica, a fim de evitar as falhas que \nprovocam paradas na produ\u00e7\u00e3o. No trabalho, os sinais s\u00e3o processados para \nque a rede neural aprenda a probabilidade do estado mais prov\u00e1vel do \nsistema. Entretanto, a principal contribui\u00e7\u00e3o do trabalho \u00e9 a de desenvolver \num prot\u00f3tipo de um sistema para monitoramento em software, em que \u00e9 \napresentado aos usu\u00e1rios uma aplica\u00e7\u00e3o que mostra o mapa do SOM (U-\nMatrix), gr\u00e1ficos de tend\u00eancia, falhas ativas num instante, hist\u00f3rico de falhas, \numa interface para treinamento, ajustes de par\u00e2metros e formulas utilizadas \npelo algoritmo do SOM. O diagn\u00f3stico de falhas \u00e9 baseado em uma s\u00e9rie de \nregras condicionais que conferem os n\u00edveis de probabilidade de uma falha \nocorrer. \n\n\u2022 O SOM tamb\u00e9m \u00e9 apresentado como uma ferramenta para representa\u00e7\u00e3o \nvisual de processos din\u00e2micos no trabalho elaborado por (VACHKOV ET \nAL., 2004). Pelo mapa resultante, cada neur\u00f4nio representa um modo de \ncomportamento local da condi\u00e7\u00e3o do processo. Isso proporciona analisar e \nlocalizar rela\u00e7\u00f5es entre as vari\u00e1veis e da din\u00e2mica do processo, abrindo \n\n\n\n \n\n \n\n \n\n \n\n82 \n\nespa\u00e7o de pesquisa para an\u00e1lise explorat\u00f3ria do comportamento em \nprocessos n\u00e3o-lineares e n\u00e3o-estacion\u00e1rios. Devido \u00e0s caracter\u00edsticas \nintr\u00ednsecas do SOM, como a redu\u00e7\u00e3o da dimensionalidade e visualiza\u00e7\u00e3o de \ndados com alta dimens\u00e3o, ele tem sido aplicado com sucesso em problemas \nde engenharia, como na an\u00e1lise e supervis\u00e3o de processos industriais. O \ntrabalho focou no uso do SOM para revelar a distribui\u00e7\u00e3o de par\u00e2metros do \nprocesso para os diferentes estados alcan\u00e7\u00e1veis durante sua opera\u00e7\u00e3o. Foram \napresentados resultados pr\u00e1ticos para um estudo de caso de um sistema de \ncontrole do n\u00edvel de l\u00edquidos em um reservat\u00f3rio.  \n\n\u2022 O monitoramento da condi\u00e7\u00e3o em sistemas possibilita tamb\u00e9m analisar a \nforma\u00e7\u00e3o de uma tend\u00eancia e, com isso, estimar o tempo de vida restante de \nfuncionamento do processo. No trabalho de (QIU, HAI ET AL., 2006), o \nSOM \u00e9 utilizado para monitorar a degrada\u00e7\u00e3o e estimar o tempo de vida \u00fatil \nrestante do equipamento. Como estudo de caso foram utilizados mancais \ncom rolamentos. O sinal de vibra\u00e7\u00e3o \u00e9 adquirido por um aceler\u00f4metro e s\u00e3o \npr\u00e9-processados pela Transformada Wavelet Packet. O erro de quantiza\u00e7\u00e3o \u00e9 \nutilizado para detectar o comportamento da degrada\u00e7\u00e3o no sistema. A \ntrajet\u00f3ria percorrida pelos neur\u00f4nios vencedores \u00e9 utilizada para monitorar os \nestados de opera\u00e7\u00e3o do equipamento. A principal contribui\u00e7\u00e3o do trabalho \u00e9 \nutilizar a medida do erro de quantiza\u00e7\u00e3o, que tamb\u00e9m \u00e9 utilizada como \nreferencial da taxa de degrada\u00e7\u00e3o, para calcular o tempo de vida restante do \nequipamento. Utilizando essa t\u00e9cnica, \u00e9 necess\u00e1rio ter informa\u00e7\u00f5es a priori \nde todo o ciclo de vida do rolamento, pois as informa\u00e7\u00f5es coletadas devem \nrefletir os sinais desde o in\u00edcio da opera\u00e7\u00e3o, deteriorando at\u00e9 falhar \nnaturalmente. Como experimentos, foram apresentados quatro casos de testes \nreais, em que foram coletadas informa\u00e7\u00f5es de todo o ciclo de vida. Com base \nnessas informa\u00e7\u00f5es, foi calculado o tempo de vida \u00fatil e um valor limite que \no rolamento possa desempenhar suas fun\u00e7\u00f5es dentro de condi\u00e7\u00f5es normais, \nsem prejudicar o fornecimento de servi\u00e7os.  \n\n\u2022 A integra\u00e7\u00e3o de outras redes neurais ao SOM tamb\u00e9m foi estudada por \nalguns pesquisadores. Em (HUANG, R. ET AL., 2007), a rede neural back \npropagation \u00e9 integrada na sa\u00edda do SOM. Essa ideia consiste em monitorar \no comportamento, al\u00e9m de detectar e diagnosticar as falhas, fazer uma \nestima\u00e7\u00e3o do tempo de vida \u00fatil restante do equipamento. S\u00e3o analisados \nsinais de vibra\u00e7\u00e3o em rolamentos mec\u00e2nicos. Para estimar o tempo restante, \nutiliza-se o erro de quantiza\u00e7\u00e3o do SOM, que revela o comportamento da \ndegrada\u00e7\u00e3o at\u00e9 a ocorr\u00eancia de falhas (quando exceder um limite \npredeterminado). A rede neural back propagation \u00e9 treinada utilizando o erro \nde quantiza\u00e7\u00e3o como sa\u00edda do SOM para fazer uma aproxima\u00e7\u00e3o de fun\u00e7\u00e3o \ndesses sinais, possibilitando, com isso, estimar o valor em qualquer tempo. \u00c9 \nimportante lembrar que a aquisi\u00e7\u00e3o de dados foi feita com a utiliza\u00e7\u00e3o de um \nequipamento real, a partir de todo o ciclo de vida, desde o in\u00edcio at\u00e9 a \nocorr\u00eancia da falha. Esse trabalho \u00e9 uma continua\u00e7\u00e3o das pesquisas de (QIU, \nHAI ET AL., 2003). \n\n\n\n \n\n \n\n \n\n \n\n83 \n\n3.8 Resumo do Cap\u00edtulo \nNeste cap\u00edtulo, foi abordada uma grande quantidade de informa\u00e7\u00f5es referentes a \n\nconceitos, fundamentos e t\u00e9cnicas de implementa\u00e7\u00e3o de detec\u00e7\u00e3o, diagn\u00f3stico, predi\u00e7\u00e3o \ne monitoramento de falhas aplicadas em sistemas. Tais conceitos s\u00e3o uma parte das \npesquisas do campo da toler\u00e2ncia a falhas em sistemas que podem ser aplicados tamb\u00e9m \nem sistemas industriais, que \u00e9 o foco deste trabalho. Todavia, n\u00e3o se limitam \u00e0 aplica\u00e7\u00e3o \napenas na \u00e1rea de engenharia, pois podem, inclusive, abranger qualquer ambiente onde \nse deseja aumentar os \u00edndices de confiabilidade.  \n\nAumentar a confiabilidade em sistemas industriais tem se mostrado um grande \ndesafio para os engenheiros projetistas desses ambientes. Entretanto, uma tarefa de \ngrande import\u00e2ncia que aumenta esses \u00edndices nos sistemas industriais \u00e9 a de manter \numa pol\u00edtica de manuten\u00e7\u00e3o sempre atualizada. Hoje, conta-se com sistemas de \nmanuten\u00e7\u00e3o inteligente, que s\u00e3o sistemas computacionais espec\u00edficos para monitorar \npartes do processo industrial, em busca de anomalias que possam afetar o correto \ndesempenho e causar preju\u00edzos ao sistema produtivo. Esses sistemas inteligentes s\u00e3o \nutilizados pelos engenheiros para auxiliar a equipe de manuten\u00e7\u00e3o e para estarem \nsempre \u00e0 frente das manifesta\u00e7\u00f5es de falhas.  \n\nOs ambientes industriais s\u00e3o conhecidos por ser estarem sujeitos a muitas \ninterfer\u00eancias externas que causam degrada\u00e7\u00e3o no desempenho, prejudicam o correto \nfuncionamento, a paralisa\u00e7\u00e3o casual, etc. A manuten\u00e7\u00e3o \u00e9 uma t\u00e9cnica que visa reparar \nou restaurar o correto funcionamento dos processos industriais, retornando ao \ndesempenho especificado no projeto. \n\nO foco do presente trabalho est\u00e1 no estudo e projeto de ferramentas alternativas para \nmelhorar o desempenho das a\u00e7\u00f5es de manuten\u00e7\u00e3o sobre os equipamentos. A motiva\u00e7\u00e3o \nb\u00e1sica \u00e9 que, descobrindo com anteced\u00eancia a possibilidade de ocorr\u00eancia de falha e \nsabendo onde esta se manifestar\u00e1, tem-se uma informa\u00e7\u00e3o muito valiosa para a equipe \nrespons\u00e1vel pelos reparos nos equipamentos.  \n\nCom a implanta\u00e7\u00e3o de sistemas de manuten\u00e7\u00e3o inteligente, \u00e9 poss\u00edvel aumentar a \nconfiabilidade nos sistemas industriais, ou seja, aplicar t\u00e9cnicas de toler\u00e2ncia a falhas. A \nprincipal fun\u00e7\u00e3o desses sistemas \u00e9 a detec\u00e7\u00e3o, diagn\u00f3stico, predi\u00e7\u00e3o e monitoramento de \nfalhas que podem ocorrer nos equipamentos que comp\u00f5em um processo industrial. \n\nExistem diversas abordagens que podem ser utilizadas para solucionar cada um dos \nproblemas nos ambientes industriais, mas, neste trabalho, adotou-se o uso de um \nsistema embarcado computacionial. Este tem por tarefa aplicar t\u00e9cnicas de intelig\u00eancia \nartificial para realizar os conceitos de toler\u00e2ncia a falhas. \n\nUm Sistema de DDF ou DDPF proporciona ganhos significativos no desempenho do \nprocesso industrial, melhorando a disponibilidade, confiabilidade, seguran\u00e7a e \nmantenabilidade dos processos produtivos. Esse sistema tamb\u00e9m tem como objetivo a \npreven\u00e7\u00e3o, a toler\u00e2ncia, a remo\u00e7\u00e3o, o diagn\u00f3stico, o monitoramento e a predi\u00e7\u00e3o das \nfalhas em processos industriais. \n\nUm Sistema de DDPF aplica t\u00e9cnicas autom\u00e1ticas para detectar e estimar a \ndegrada\u00e7\u00e3o no desempenho de sistemas f\u00edsicos, antecipar a ocorr\u00eancia de falhas futuras, \ne calcular o tempo restante de vida do sistema, mantendo-o em um estado operacional \naceit\u00e1vel. Essa proposta tem uma modifica\u00e7\u00e3o em rela\u00e7\u00e3o ao sistema DDF, que \u00e9 a \nadi\u00e7\u00e3o de uma estrutura para aquisi\u00e7\u00e3o de conhecimentos ou hist\u00f3ricos sobre o \ncomportamento passado do sistema. \n\n\n\n \n\n \n\n \n\n \n\n84 \n\nPor meio de conhecimentos adquiridos, a priori, sobre o funcionamento f\u00edsico e \ncomportamento dos equipamentos, pode-se criar um modelo matem\u00e1tico capaz de \nreproduzir o hist\u00f3rico de comportamentos do sistema. Deste modo, o Sistema DDPF \npode ser implementado pelo uso de redes neurais, que s\u00e3o utilizadas para armazenar os \nconhecimentos ou hist\u00f3ricos. As redes neurais aprendem o comportamento do sistema, \nadquirindo conhecimento a partir dos estados passados. Assume-se que o processo \nindustrial apresenta o mesmo comportamento em tempos futuros. \n\nNo presente trabalho, foi adotado o uso da rede neural conhecida por mapas auto-\norganiz\u00e1veis (SOM) como ferramental capaz de adquirir conhecimento sobre \ninforma\u00e7\u00f5es do ambiente e que possui caracter\u00edsticas que possibilitam detectar, \ndiagnosticar e, com algumas modifica\u00e7\u00f5es, at\u00e9 prever a ocorr\u00eancia das falhas. O SOM \u00e9 \numa rede neural n\u00e3o-supervisionada que \u00e9 baseada apenas nas informa\u00e7\u00f5es presentes \nnos dados de entrada utilizados para treinamento. \n\nOutras caracter\u00edsticas importantes para a escolha do SOM foram:  \n\n\u2022 Capacidade de tratar dados em grandes quantidades (geralmente dados \nhist\u00f3ricos aparecem em grande quantidade). \n\n\u2022 \u00d3tima aproxima\u00e7\u00e3o do espa\u00e7o de entrada,  \n\n\u2022 Preserva a ordem topol\u00f3gica dos dados de entrada mesmo com redu\u00e7\u00e3o da \ndimensionalidade,  \n\n\u2022 Descoberta de novas caracter\u00edsticas nos dados de entrada (revelando os \nrelacionamentos presentes entre os dados de entrada).  \n\nTamb\u00e9m foi apresentada a rede neural para tratamento de informa\u00e7\u00f5es temporais, \nque leva em considera\u00e7\u00e3o, durante opera\u00e7\u00e3o, a ordem de tempo em que os dados s\u00e3o \nobservados. O Temporal Kohonen Maps (TKM) \u00e9 uma proposta baseada no SOM, pois \ncom algumas modifica\u00e7\u00f5es \u00e9 poss\u00edvel tratar dados temporais. Foram apresentados \nconceitos b\u00e1sicos de tempo e mem\u00f3ria de curto prazo, que s\u00e3o importantes para o \nentendimento dessa rede neural. \n\nPor fim, foram apresentados alguns trabalhos pr\u00e1ticos encontrados na literatura \ncient\u00edfica que utilizam o SOM como ferramenta para analisar as falhas em processos \nindustriais.  \n\n \n\n \n\n \n\n\n\n4 PROPOSTA DE PROT\u00d3TIPO DE UM SISTEMA DE \nMANUTEN\u00c7\u00c3O INTELIGENTE PARA ATUADORES \nEL\u00c9TRICOS \n\n4.1 Introdu\u00e7\u00e3o \nNeste cap\u00edtulo, apresenta-se a constru\u00e7\u00e3o de um prot\u00f3tipo em uma plataforma de \n\nsistema embarcado, com o objetivo de aplicar as t\u00e9cnicas de manuten\u00e7\u00e3o inteligente em \numa v\u00e1lvula el\u00e9trica utilizada em redes dutovi\u00e1rias para transporte de petr\u00f3leo. A \nplataforma adotada para o sistema embarcado \u00e9 baseada na tecnologia de FPGA.  \n\nEsse prot\u00f3tipo foi projetado de modo a ser reutilizado e integrado por outras \nferramentas ou plataformas, e a ser inserido no projeto geral do sistema de manuten\u00e7\u00e3o \ninteligente. \n\nPrimeiro, foi definida a arquitetura do sistema de detec\u00e7\u00e3o, diagn\u00f3stico e predi\u00e7\u00e3o \nde falhas, do ponto de vista da utiliza\u00e7\u00e3o do SOM como t\u00e9cnica computacional para \nrealizar essa tarefa. Ao longo deste cap\u00edtulo, s\u00e3o apresentados, com detalhes, cada um \ndos algoritmos respons\u00e1veis por realizar as tarefas de toler\u00e2ncia a falhas, preparando a \nbase para o desenvolvimento do prot\u00f3tipo em um sistema embarcado. \n\nEm segundo lugar, foi desenvolvido um conjunto de ferramentas em software para \nMATLAB, a fim de possibilitar a simula\u00e7\u00e3o do funcionamento integral do sistema de \nmanuten\u00e7\u00e3o inteligente. Por meio de experimentos, validou-se a arquitetura do sistema \nde detec\u00e7\u00e3o, diagn\u00f3stico e predi\u00e7\u00e3o e realizou-se a avalia\u00e7\u00e3o nos conjuntos de dados \nutilizados para treinamento e testes do SOM. \n\nAp\u00f3s a valida\u00e7\u00e3o do projeto em software, foi iniciada a constru\u00e7\u00e3o do prot\u00f3tipo do \nsistema de manuten\u00e7\u00e3o inteligente. Ademais, foi definida a utiliza\u00e7\u00e3o da plataforma \nFPGA para o sistema embarcado, pois possibilita o desenvolvimento em descri\u00e7\u00e3o \nVHDL e a reutiliza\u00e7\u00e3o dos componentes computacionais internos da plataforma. O \ndesenvolvimento do prot\u00f3tipo do hardware do SOM foi baseado na metodologia de \nprojeto para sistemas em FPGA. \n\nComo a rede neural SOM faz parte do sistema de manuten\u00e7\u00e3o inteligente, foi um \ndesafio o projeto de implanta\u00e7\u00e3o desta em um sistema de hardware, diga-se FPGA. \nSabe-se que as redes neurais exigem muitos recursos computacionais para treinamento, \nentre eles o elevado uso de mem\u00f3ria para armazenar os pesos sin\u00e1pticos dos neur\u00f4nios. \n\n\n\n \n\n \n\n \n\n \n\n86 \n\nGrande parte deste custo computacional \u00e9 devido \u00e0 din\u00e2mica de funcionamento do \nalgoritmo do SOM, pois nas implementa\u00e7\u00f5es de redes neurais \u00e9 assumido que os \nrecursos computacionais s\u00e3o \u201cinfinitos\u201d. Isso exige t\u00e9cnicas para limitar os requisitos do \nalgoritmo, como o uso de mem\u00f3ria e treinamento, para que possa ser executado num \nsistema embarcado.  \n\nAp\u00f3s a finaliza\u00e7\u00e3o do projeto do hardware do SOM e validado o seu \nfuncionamento, este foi integrado em um sistema embarcado computacional. Este \u00e9 \ncomposto por microprocessador, mem\u00f3ria e barramento e executa um sistema \noperacional embarcado. Por meio de um software aplica\u00e7\u00e3o foram aplicados casos de \nteste.  \n\nNas pr\u00f3ximas se\u00e7\u00f5es, ser\u00e1 apresentada cada uma das etapas necess\u00e1rias para projetar \na rede neural SOM em hardware e como integr\u00e1-la ao sistema embarcado, formando, \nem n\u00edvel mais alto, o sistema de manuten\u00e7\u00e3o inteligente que pode ser integrado \u00e0 \nv\u00e1lvula el\u00e9trica. \n\n4.2 Proposta do Sistema para Manuten\u00e7\u00e3o Inteligente \nApresenta-se, nesta se\u00e7\u00e3o, uma vis\u00e3o geral do Sistema de Manuten\u00e7\u00e3o Inteligente \n\npara V\u00e1lvulas El\u00e9tricas. Esse prot\u00f3tipo ser\u00e1 implantado em uma v\u00e1lvula que controla o \nfluxo de petr\u00f3leo pela rede dutovi\u00e1ria (oleodutos) de uma Refinaria da Petrobras. \n\nO Sistema de Manuten\u00e7\u00e3o Inteligente (SMI) tem como fun\u00e7\u00e3o quatro tarefas: \n\n\u2022 Monitorar em tempo real as condi\u00e7\u00f5es de opera\u00e7\u00e3o do sistema. \n\n\u2022 Estimar uma tend\u00eancia no comportamento do processo ao longo do tempo \nat\u00e9 a manifesta\u00e7\u00e3o da falha. \n\n\u2022 Detectar desvios no comportamento de normalidade, evitar falhas. \n\n\u2022 Classificar e diagnosticar as causas das falhas.  \n\nNa Figura 4.1, \u00e9 apresentada a estrutura do SMI proposto no presente trabalho, \nmostrando um panorama dos componentes e tarefas que comp\u00f5em o sistema. \n\nEssa estrutura do SMI foi baseada na Figura 3.4 que apresentou uma estrutura b\u00e1sica \ne geral para um sistema de DDPF aplicado para um problema qualquer. A proposta, na \nFigura 4.1, apresenta poucas diferen\u00e7as em rela\u00e7\u00e3o \u00e0 original utilizada como base. Entre \nas modifica\u00e7\u00f5es, destacam-se a inser\u00e7\u00e3o de uma tarefa para o Processamento de Sinais e \numa mudan\u00e7a na estrutura interna do Processo de Detec\u00e7\u00e3o, Diagn\u00f3stico e Predi\u00e7\u00e3o de \nFalhas. \n\nO SMI realiza a opera\u00e7\u00e3o de aquisi\u00e7\u00e3o de dados no Processo de Transporte por \nOleodutos e, em seguida, s\u00e3o extra\u00eddas as informa\u00e7\u00f5es sobre o torque exercido pelo \nmotor (neste caso assume-se apenas este sinal) do atuador el\u00e9trico presente na v\u00e1lvula. \nO sinal de torque \u00e9 aplicado ao Processamento de Sinais para extra\u00e7\u00e3o da energia dos \ncomponentes que formam o sinal. Estes dados s\u00e3o utilizados como padr\u00e3o de entrada \npara os demais componentes do sistema. Ap\u00f3s essas etapas de pr\u00e9-processamento, o \nsinal est\u00e1 pronto e adequado para alimentar o Processo de DDPF.  \n\nNo Processo de DDPF e no Banco de Conhecimento ou Hist\u00f3rico, est\u00e1 o segredo da \nt\u00e9cnica de toler\u00e2ncia a falha, em que s\u00e3o feitas as an\u00e1lises e infer\u00eancias sobre o sinal \nadquirido. \n\n\n\n \n\n \n\n \n\n \n\n87 \n\n \n\nFigura 4.1: Vis\u00e3o geral do Sistema de Manuten\u00e7\u00e3o Inteligente para Atuadores El\u00e9tricos.  \n\nA seguir, ap\u00f3s a an\u00e1lise do sinal, \u00e9 aplicada a Avalia\u00e7\u00e3o no resultado obtido, que \nser\u00e1 utilizada como informa\u00e7\u00e3o v\u00e1lida para a etapa de Tomada de Decis\u00e3o. Por fim, o \nSMI realimenta o Processo de Transporte por Oleodutos e fecha-se o ciclo de \nmonitoramento cont\u00ednuo das condi\u00e7\u00f5es de funcionamento do equipamento industrial.  \n\nDepois da apresenta\u00e7\u00e3o deste panorama que forma o SMI, ser\u00e3o exploradas, com \nmais detalhes, as demais estruturas internas que comp\u00f5em o projeto, em especial a etapa \ndo Processo de DDPF e do Banco de Conhecimentos ou Hist\u00f3rico. Essas partes formam \na base do SMI e s\u00e3o compostas pela aplica\u00e7\u00e3o de redes neurais (SOM) como ferramenta \npara solucionar o problema da toler\u00e2ncia a falhas, conforme a Figura 4.2.  \n\nComo o SMI \u00e9 formado por dois componentes b\u00e1sicos, em primeiro lugar ser\u00e3o \nabordados os componentes que formam o Banco de Conhecimento ou Hist\u00f3rico: \n\n\u2022 SOM para Detec\u00e7\u00e3o de Anormalidade: fun\u00e7\u00e3o de armazenar informa\u00e7\u00f5es \nde uma rede neural SOM, que capacite o SMI a aprender o comportamento \ndo modo de opera\u00e7\u00e3o normal do sistema. \u00c9 a base para a detec\u00e7\u00e3o de \nanormalidades. \n\n\u2022 SOM para Diagn\u00f3stico de Falha: fun\u00e7\u00e3o de armazenar informa\u00e7\u00f5es de uma \nrede neural SOM, que capacite o SMI a aprender os padr\u00f5es que possam \ndistinguir uma falha das outras. \u00c9 importante notar que quanto mais \ncompleto for o conjunto de padr\u00f5es aprendidos, melhores dever\u00e3o ser as \nclassifica\u00e7\u00f5es das falhas. \u00c9 a base para a classifica\u00e7\u00e3o e diagn\u00f3stico de \nfalhas. \n\n\u2022 TKM para Predi\u00e7\u00e3o do Comportamento: fun\u00e7\u00e3o de armazenar \ninforma\u00e7\u00f5es de uma rede neural TKM, que capacite o sistema a aprender o \nciclo de vida completo (normal, degrada\u00e7\u00e3o e falha) para cada uma das \nfalhas que ser\u00e3o identificadas pelo sistema. \u00c9 a base para o monitoramento \nda condi\u00e7\u00e3o e para projetar uma trajet\u00f3ria de opera\u00e7\u00e3o ao longo do tempo.  \n\n\n\n \n\n \n\n \n\n \n\n88 \n\nBanco de \nConhecimento \nou Hist\u00f3rico\n\nProcesso de Detec\u00e7\u00e3o, \n\nDiagn\u00f3stico e Predi\u00e7\u00e3o de \n\nFalhas\n\nDiagn\u00f3stico \nde Falha\n\nPredi\u00e7\u00e3o do \nComportamento\n\nDetec\u00e7\u00e3o de \nAnormalidade\n\nDegrada\u00e7\u00e3o Falha\n\nSOM para \nDetec\u00e7\u00e3o de \nAnormalidade\n\nSOM para \nDiagn\u00f3stico de \n\nFalha\n\nTKM para \nPredi\u00e7\u00e3o do \n\nComportamento\n\n \n\nFigura 4.2: Composi\u00e7\u00e3o interna das partes do Sistema de Manuten\u00e7\u00e3o Inteligente para \nAtuadores El\u00e9tricos, em que o SOM \u00e9 utilizado como base. \n\nEm segundo lugar, ser\u00e3o abordados os componentes que formam o Processo DDPF: \n\n\u2022 Detec\u00e7\u00e3o de Anormalidade: fun\u00e7\u00e3o de monitorar o processo at\u00e9 ser \ndetectada alguma condi\u00e7\u00e3o de anormalidade (poss\u00edveis desvios no \ncomportamento). Quando for detectada uma condi\u00e7\u00e3o anormal, mesmo que \nm\u00ednima, o sistema deve avaliar essa situa\u00e7\u00e3o como uma poss\u00edvel \nmanifesta\u00e7\u00e3o de falha ou tend\u00eancia de degrada\u00e7\u00e3o. Caso o SMI julgue como \nfalha, ser\u00e1 acionada a tarefa de Diagn\u00f3stico de Falha. Se o SMI julgar como \nprinc\u00edpio de degrada\u00e7\u00e3o, ser\u00e1 acionada a tarefa de Predi\u00e7\u00e3o do \nComportamento.  \n\n\u2022 Diagn\u00f3stico de Falha: fun\u00e7\u00e3o de classificar e diagnosticar uma falha \ndetectada. Essa tarefa consiste em identificar qual falha ocorreu com base  \nnos padr\u00f5es armazenados no Banco de Conhecimento ou Hist\u00f3rico, a fim de \nidentificar uma nova falha que seja semelhante \u00e0 ocorrida no passado. \nDepois de identificar a falha, \u00e9 realizado o diagn\u00f3stico, apresentando as \nposs\u00edveis causas e danos que a falha pode causar ao processo. Essa etapa est\u00e1 \nligada diretamente ao conhecimento de um especialista sobre as \nmanifesta\u00e7\u00f5es das falhas. \n\n\u2022 Predi\u00e7\u00e3o do Comportamento: fun\u00e7\u00e3o de monitorar a evolu\u00e7\u00e3o da \ndegrada\u00e7\u00e3o ao longo do tempo, apontando uma tend\u00eancia de \ncomportamentos futuros, acompanhando as condi\u00e7\u00f5es dos estados de \nopera\u00e7\u00e3o do sistema. Para avaliar o comportamento do sistema, \u00e9 utilizado o \nBanco de Conhecimento ou Hist\u00f3rico, que para cada falha identificada, \napresenta informa\u00e7\u00f5es do ciclo de vida completo. Ademais, a predi\u00e7\u00e3o \npossibilita, por exemplo, estimar o tempo restante at\u00e9 a mudan\u00e7a do estado \nde degrada\u00e7\u00e3o para falha.  \n\nAp\u00f3s explana\u00e7\u00e3o das funcionalidades de cada parte que comp\u00f5e o SMI, ser\u00e1 descrito \ncomo estas partes foram implementadas. Na Figura 4.3, s\u00e3o apresentadas as redes \nneurais que comp\u00f5em o Banco de Conhecimento ou Hist\u00f3rico.  \n\n\n\n \n\n \n\n \n\n \n\n89 \n\nSOM para \nDetec\u00e7\u00e3o de \nAnormalidade\n\nSOM para \nDiagn\u00f3stico de \n\nFalha\n\nTKM para \nPredi\u00e7\u00e3o do \n\nComportamento\n\nX1 X2 XN\n\nWij\nZ-1\n\nZ-1\n\nZ-1\n\nZ-1\n\nZ-1\n\nTKM treinado com s\u00e9rie de dados de \ncomportamento normal, degrada\u00e7\u00e3o e falha\n\nX1 X2 XN\n\nWij\n\nSOM treinado com dados de \ncomportamento normal\n\nSOM treinado com dados de \ncomportamento normal, degrada\u00e7\u00e3o e falha\n\nX1 X2 XN\n\nWij\n\n \n\nFigura 4.3: Composi\u00e7\u00e3o do Banco de Conhecimento ou Hist\u00f3rico.  \n\nO Banco de Conhecimento ou Hist\u00f3rico \u00e9 composto por tr\u00eas redes neurais, duas \nSOM e uma TKM. Essas redes neurais t\u00eam por fun\u00e7\u00e3o armazenar o conhecimento sobre \no hist\u00f3rico de comportamento do processo em monitoramento. Cada uma delas tem \ncaracter\u00edsticas \u00fanicas dentro do processo de toler\u00e2ncia a falhas: \n\n\u2022 SOM para Detec\u00e7\u00e3o de Anormalidade: cont\u00e9m uma rede neural do tipo \nSOM, que utiliza um conjunto de dados que representam o comportamento \nnormal de opera\u00e7\u00e3o do sistema. Esses dados s\u00e3o utilizados para o \ntreinamento desse SOM, a fim de aprender a identificar apenas dados de \nnormalidade. Esse tipo de treinamento segue os princ\u00edpios dos trabalhos \nrelacionados, apresentados na Se\u00e7\u00e3o 3.7.1. \n\n\u2022 SOM para Diagn\u00f3stico de Falha: cont\u00e9m uma rede neural do tipo SOM, \nque utiliza um conjunto de dados que representam o ciclo completo de vida \nde um componente do sistema que ser\u00e1 monitorado. Esse ciclo deve \nrepresentar o comportamento normal, degrada\u00e7\u00e3o e falha. Esses dados s\u00e3o \nutilizados para treinamento desse SOM, a fim de aprender a classificar as \ncaracter\u00edsticas de um componente de forma separada. Esse princ\u00edpio \u00e9 \nbaseado na classifica\u00e7\u00e3o de padr\u00f5es, capaz de identificar os padr\u00f5es de \nentrada comparando-os com os dados armazenados nos neur\u00f4nios. Esse tipo \nde treinamento segue os princ\u00edpios dos trabalhos relacionados, apresentados \nna Se\u00e7\u00e3o 3.7.2. \n\n\u2022 TKM para Predi\u00e7\u00e3o do Comportamento: cont\u00e9m uma rede neural do tipo \nTKM, que utiliza s\u00e9rie de dados para representar o ciclo completo de vida de \num componente do sistema que ser\u00e1 monitorado por um per\u00edodo de tempo. \nEsse ciclo de vida deve representar o comportamento normal, degrada\u00e7\u00e3o e \n\n\n\n \n\n \n\n \n\n \n\n90 \n\nfalha ao longo do tempo. Esses dados s\u00e3o utilizados para treinamento do \nTKM, a fim de aprender a classificar os padr\u00f5es temporais de cada s\u00e9rie de \ndados separadamente. Esse princ\u00edpio \u00e9 baseado na classifica\u00e7\u00e3o de padr\u00f5es \nda s\u00e9rie temporal pelo TKM. Esse tipo de treinamento segue os algoritmos \napresentados na se\u00e7\u00e3o 3.6.  \n\nAp\u00f3s defini\u00e7\u00e3o das redes neurais que integram o SMI, ser\u00e1 abordado como foram \nimplementadas as partes que extraem os resultados necess\u00e1rios das redes. Na Figura 4.4, \nestas partes s\u00e3o apresentadas: Processo de Detec\u00e7\u00e3o, Diagn\u00f3stico e Predi\u00e7\u00e3o de Falhas:  \n\n \n\nFigura 4.4: Partes internas que comp\u00f5es o Processo de Detec\u00e7\u00e3o, Diagn\u00f3stico e \nPredi\u00e7\u00e3o de Falhas. \n\nO Processo de Detec\u00e7\u00e3o, Diagn\u00f3stico e Predi\u00e7\u00e3o de Falhas \u00e9 composto por tr\u00eas \nalgoritmos para extrair resultados das redes neurais, a fim de analisar o comportamento \ndos estados do sistema em monitoramento. Esses algoritmos s\u00e3o baseados nas equa\u00e7\u00f5es \nvistas na Se\u00e7\u00e3o 3.5.1, em especial o algoritmo da Dist\u00e2ncia Euclidiana, que \u00e9 o ponto-\nchave para todos os c\u00e1lculos de processamento do SOM ou TKM. Cada um dos \nalgoritmos apresentados desempenha uma fun\u00e7\u00e3o especial: \n\n\u2022 Detec\u00e7\u00e3o de Anormalidade: utiliza o SOM para Detec\u00e7\u00e3o de \nAnormalidade, aplicando-se o algoritmo de teste (ver Se\u00e7\u00e3o 3.5.4.1). A \ndetec\u00e7\u00e3o \u00e9 feita pela avalia\u00e7\u00e3o dos erros de quantiza\u00e7\u00e3o para cada padr\u00e3o de \nentrada. Quando o valor para o erro de quantiza\u00e7\u00e3o estiver se desviando da \nregi\u00e3o de normalidade, ent\u00e3o provavelmente estar\u00e1 se dirigindo a uma regi\u00e3o \nde degrada\u00e7\u00e3o ou falha. Isso significa que os dados de entrada n\u00e3o foram \nreconhecidos pelo SOM, porque ele apenas reconhece os dados normais. \nEssa fun\u00e7\u00e3o est\u00e1 baseada nos trabalhos relacionados, apresentados na Se\u00e7\u00e3o \n3.7.1. \n\n\n\n \n\n \n\n \n\n \n\n91 \n\n\u2022 Diagn\u00f3stico de Falha: utiliza o SOM para Diagn\u00f3stico de Falha e o modo \nde visualiza\u00e7\u00e3o U-Matrix (Se\u00e7\u00e3o 3.5.4.3). Durante o treinamento, s\u00e3o criados \nagrupamentos que identificam as classes de dados para as quais os padr\u00f5es \nde comportamento foram mapeados. Pelo \u00edndice do neur\u00f4nio vencedor \u00e9 \nposs\u00edvel identificar a que classe o dado pertence. Essa ser\u00e1 uma informa\u00e7\u00e3o \n\u00fatil para classificar o padr\u00e3o de entrada com base no conhecimento adquirido \npelo SOM. Essa fun\u00e7\u00e3o faz uso do algoritmo de teste (Se\u00e7\u00e3o 3.5.4.1) e est\u00e1 \nbaseada em conceitos dos trabalhos relacionados, conforme Se\u00e7\u00e3o 3.7.2.  \n\n\u2022 Predi\u00e7\u00e3o do Comportamento: utiliza o TKM para Predi\u00e7\u00e3o do \nComportamento e o modo de visualiza\u00e7\u00e3o U-Matrix (Se\u00e7\u00e3o 3.5.4.3). Durante \no treinamento, s\u00e3o criados os agrupamentos seguindo os padr\u00f5es temporais \ndas s\u00e9ries. Com isso, possibilita-se a identifica\u00e7\u00e3o de uma tend\u00eancia no \ncomportamento dos padr\u00f5es ao longo do tempo. Isso \u00e9 feito pelo \u00edndice do \nneur\u00f4nio vencedor, sendo poss\u00edvel acompanhar o seu movimento e \nidentificar a forma\u00e7\u00e3o da tend\u00eancia para as s\u00e9ries de dados apresentadas na \nentrada. Essa ser\u00e1 a informa\u00e7\u00e3o utilizada para identificar a tend\u00eancia no \ncomportamento, baseando-se no conhecimento adquirido pelo TKM. \nIdentificando com anteced\u00eancia para onde est\u00e1 se direcionando o estado do \nsistema e, talvez, calcular um tempo at\u00e9 alcan\u00e7ar o estado \u201ccr\u00edtico\u201d. Essa \nfun\u00e7\u00e3o utiliza o algoritmo de recupera\u00e7\u00e3o do TKM visto na Se\u00e7\u00e3o 3.6.4. \n\n4.2.1 Algoritmos base do SOM \n\nAs tr\u00eas etapas necess\u00e1rias para implementar um SMI, utilizando o SOM e TKM \ncomo ferramenta de redes neurais, possibilitam a aquisi\u00e7\u00e3o de conhecimento sobre o \ncomportamento do sistema em monitoramento. Para implementar estes algoritmos, \u00e9 \nnecess\u00e1rio entender o funcionamento do SOM. \n\nO SOM \u00e9 baseado nas equa\u00e7\u00f5es estudadas na Se\u00e7\u00e3o 3.5.1. Em especial, a principal \nbase do algoritmo para treinamento e teste do SOM \u00e9 o calculo da Dist\u00e2ncia Euclidiana. \nEsta medida de dist\u00e2ncia \u00e9 o ponto-chave para o funcionamento da rede neural, pois faz \nparte de todas as etapas do algoritmo.  \n\nNesta se\u00e7\u00e3o, ser\u00e1 apresentado o algoritmo de teste do SOM e a aplica\u00e7\u00e3o deste para \nimplementar as fun\u00e7\u00f5es de toler\u00e2ncia a falhas ao SMI. N\u00e3o ser\u00e1 apresentado o algoritmo \nde treinamento, pois no SMI ser\u00e1 utilizado o SOM j\u00e1 treinado por uma fun\u00e7\u00e3o externa. \n\nA primeira parte do algoritmo \u00e9 calcular a Dist\u00e2ncia Euclidiana, o que \u00e9 ilustrado na \nFigura 4.5. Esse algoritmo \u00e9 baseado na Equa\u00e7\u00e3o 4 e ser\u00e1 utilizado na etapa de teste do \nSOM, a equa\u00e7\u00e3o ser\u00e1 redefinida com base nos dados de entrada apresentado na figura, \nconforme a seguir: \n\n( ) ( ) ( )2222\n2\n\n11 kkkk wxwxwxwxD ?++?+?=?= L , (13) \n\nonde x e w s\u00e3o os dados de entrada do algoritmo e k representa a dimens\u00e3o do vetor de \nentrada. \n\nA segunda parte do algoritmo consiste em implementar a etapa de teste ou \nrecupera\u00e7\u00e3o, que tem por fun\u00e7\u00e3o utilizar a Dist\u00e2ncia Euclidiana para encontrar o \nneur\u00f4nio vencedor e calcular o valor do erro de quantiza\u00e7\u00e3o, ver Figura 4.6. Esse \nalgoritmo \u00e9 baseado na Equa\u00e7\u00e3o 3 e utilizado pelo SOM nas etapas de treinamento e de \n\n\n\n \n\n \n\n \n\n \n\n92 \n\nteste, esta equa\u00e7\u00e3o ser\u00e1 redefinida com base nos dados de entrada apresentados na \nfigura, conforme a seguir: \n\nj\n\njj\n\n=\n\n?=\n\n)(BMU\n\nminarg)(ERRO\n\nx\n\nwxx\n, (14) \n\nonde x \u00e9 o vetor de entrada do SOM, w s\u00e3o os pesos sin\u00e1pticos dos neur\u00f4nios do SOM, \ne j representa o \u00edndice do neur\u00f4nio na rede. \n\n \n\nFigura 4.5: Algoritmo de c\u00e1lculo da Dist\u00e2ncia Euclidiana (D). \n\n \n\nFigura 4.6: Algoritmo de recupera\u00e7\u00e3o (teste) do SOM \n\nO algoritmo da Figura 4.6 realiza uma varredura em todos os neur\u00f4nios do SOM \npara localizar aquele que apresenta a menor Dist\u00e2ncia Euclidiana (D) em rela\u00e7\u00e3o ao \nvetor de entrada x. Na sa\u00edda do algoritmo, s\u00e3o apresentados o erro de quantiza\u00e7\u00e3o \n(menor Dist\u00e2ncia Euclidiana) e o \u00edndice do neur\u00f4nio vencedor. \n\nCom esses dados dispon\u00edveis, \u00e9 poss\u00edvel aplic\u00e1-los para implementar as etapas de \ntoler\u00e2ncia a falhas, construindo um SMI. Nas se\u00e7\u00f5es posteriores, ser\u00e1 detalhado o \nfuncionamento de cada uma dessas etapas. Al\u00e9m disso, ser\u00e1 mostrado como aplicar o \nalgoritmo de recupera\u00e7\u00e3o no SOM, desde a apresenta\u00e7\u00e3o do padr\u00e3o de entrada at\u00e9 a \nsa\u00edda da informa\u00e7\u00e3o \u00fatil para o SMI. \n\n4.2.2 Detec\u00e7\u00e3o de Anormalidade \n\nA primeira etapa a ser implementada \u00e9 a de Detec\u00e7\u00e3o de Anormalidade. Ela ser\u00e1 \ndetalhada, nesta parte do trabalho, com a apresenta\u00e7\u00e3o de todo o funcionamento do \nalgoritmo necess\u00e1rio para implement\u00e1-la. \n\nConforme visto anteriormente, essa etapa visa detectar qualquer anormalidade que \nocorrer na entrada da rede, com base no conhecimento adquirido durante o treinamento. \n\n\n\n \n\n \n\n \n\n \n\n93 \n\nPara essa detec\u00e7\u00e3o, \u00e9 fundamental estabelecer um valor limite para detec\u00e7\u00e3o, de forma \nque tudo que exceder esse valor ser\u00e1 considerado como anormal.  \n\nSeja x(t) o vetor de entrada de teste no tempo t, ent\u00e3o o seguinte algoritmo \u00e9 \nproposto:  \n\nApresentar o vetor x(t) na entrada do SOM; \nEnquanto x(t) for apresentado na entrada fa\u00e7a: \n\nExecutar o algoritmo de teste conforme a Figura 4.6; \nEncontrar o neur\u00f4nio vencedor j; \nCalcular o erro de quantiza\u00e7\u00e3o; \nEscrever na sa\u00edda o erro de quantiza\u00e7\u00e3o (ERRO); \nSe ERRO >= Limite de Anormalidade ent\u00e3o, \n\nAnormalidade detectada, sistema em condi\u00e7\u00f5es anormais; \nSen\u00e3o, \n\nAnormalidade n\u00e3o-detectada, Sistema em condi\u00e7\u00f5es normais; \nFim \n\nFim \n\nNa Figura 4.7, \u00e9 apresentada a vis\u00e3o geral do algoritmo de detec\u00e7\u00e3o, do ponto de \nvista da aplica\u00e7\u00e3o do SOM, como ferramenta para solucionar o problema.  \n\n \n\nFigura 4.7: Vis\u00e3o geral do algoritmo de detec\u00e7\u00e3o usando o SOM. \n\nO processo de detec\u00e7\u00e3o \u00e9 executado do seguinte modo: \n\n1. A etapa de treinamento realiza o mapeamento dos estados de opera\u00e7\u00e3o do \nprocesso para o SOM.  \n\n2. Um sinal x(t) \u00e9 extra\u00eddo do processo e apresentado na entrada do SOM. O \nalgoritmo de teste inicia a execu\u00e7\u00e3o e realiza o mapeamento do padr\u00e3o de \nentrada para um agrupamento no SOM. \n\n3. O neur\u00f4nio vencedor (BMU) \u00e9 calculado e a sa\u00edda \u00e9 apresentada. Na Figura \n4.7, dentro do Espa\u00e7o de dados do SOM, s\u00e3o vistas duas representa\u00e7\u00f5es, uma \nda arquitetura do SOM e outra a proje\u00e7\u00e3o espacial das coordenadas do peso \nsin\u00e1ptico dos neur\u00f4nios. Nessas duas representa\u00e7\u00f5es, \u00e9 poss\u00edvel visualizar o \nneur\u00f4nio vencedor calculado e sua localiza\u00e7\u00e3o no espa\u00e7o de caracter\u00edsticas. \n\n4. \u00c9 apresentado como sa\u00edda do algoritmo de teste o valor do erro de \nquantiza\u00e7\u00e3o (ERRO ou Eq) para o vetor de entrada. Este \u00e9 comparado com \num valor predefinido de Limite de Anormalidade para julgar se o processo \nencontra-se normal ou anormal. Qualquer valor do erro que extrapolar o \nlimite \u00e9 considerado como anormal. \n\n5. Se forem considerados todos os valores de erro de quantiza\u00e7\u00e3o ao longo do \ntempo, pode-se projetar um gr\u00e1fico. Neste, pode-se visualizar o \n\n\n\n \n\n \n\n \n\n \n\n94 \n\ncomportamento das anormalidades e os exatos momentos em que foram \ndetectadas pelo SMI. \n\n6. Esse algoritmo tem funcionamento cont\u00ednuo, em todo o tempo de opera\u00e7\u00e3o \ndo SMI. Como essa tarefa \u00e9 a primeira etapa do SMI a ser executada, a partir \ndela, s\u00e3o acionadas as demais, diagn\u00f3stico e predi\u00e7\u00e3o. \n\n4.2.3 Diagn\u00f3stico de Falha \n\nAp\u00f3s a detec\u00e7\u00e3o de anormalidade, \u00e9 aplicada a etapa de Diagn\u00f3stico. Ela ser\u00e1 \ndetalhada, nesta parte do trabalho, com a apresenta\u00e7\u00e3o do funcionamento do algoritmo \nnecess\u00e1rio para implement\u00e1-la. \n\nComo j\u00e1 visto, essa etapa visa diagnosticar as falhas ocorridas no processo. Caso um \nespecialista, que conhe\u00e7a os comportamentos do processo, esteja dispon\u00edvel, pode-se, \npor seu interm\u00e9dio, diagnosticar o que as falhas identificadas podem causar ao processo \ncomo um todo. \n\nSeja x(t) o vetor de entrada de teste no tempo t, ent\u00e3o o seguinte algoritmo \u00e9 \nproposto:  \n\nApresentar o vetor x(t) na entrada do SOM; \nEnquanto x(t) for apresentado na entrada fa\u00e7a: \n\nExecutar o algoritmo de teste conforme a Figura 4.6; \nEncontrar o neur\u00f4nio vencedor j; \nCalcular o erro de quantiza\u00e7\u00e3o; \nEscrever na sa\u00edda o \u00edndice do neur\u00f4nio vencedor (BMU); \nLocalizar a quais dos agrupamentos o BMU pertence; \nEscrever na sa\u00edda o r\u00f3tulo do agrupamento; \n\nFim \n\nNa Figura 4.8, \u00e9 apresentada a vis\u00e3o geral do algoritmo de diagn\u00f3stico, do ponto de \nvista da aplica\u00e7\u00e3o do SOM, como ferramenta para solucionar o problema.  \n\nF\na\nlh\na\n 2\n\nF\na\nlh\na\n 1\n\n \n\nFigura 4.8: Vis\u00e3o geral do algoritmo de diagn\u00f3stico usando o SOM.  \n\nTodo o processo de diagn\u00f3stico \u00e9 executado do seguinte modo: \n\n1. A etapa de treinamento realiza o mapeamento dos estados de opera\u00e7\u00e3o do \nprocesso para o SOM, formando os agrupamentos para os estados de cada \ncomponente monitorado.  \n\n2. Um sinal x(t) \u00e9 extra\u00eddo do processo e apresentado na entrada do SOM. O \nalgoritmo de teste inicia a execu\u00e7\u00e3o e realiza o mapeamento do padr\u00e3o de \nentrada para um agrupamento no SOM.  \n\n3. O neur\u00f4nio vencedor (BMU) \u00e9 calculado e a sa\u00edda \u00e9 apresentada. Na Figura \n4.8, dentro do Espa\u00e7o de dados do SOM, s\u00e3o vistas as representa\u00e7\u00f5es do \n\n\n\n \n\n \n\n \n\n \n\n95 \n\nSOM, onde pode ser visualizada a arquitetura e a proje\u00e7\u00e3o espacial, \nrevelando a forma\u00e7\u00e3o topol\u00f3gica dos agrupamentos utilizados para \nclassifica\u00e7\u00e3o.  \n\n4. \u00c9 apresentado, como sa\u00edda do algoritmo de teste, o \u00edndice do neur\u00f4nio \nvencedor (BMU) para o vetor de entrada. Esse valor \u00e9 utilizado para \nlocalizar, dentro da lista de agrupamentos, em qual local o vetor de entrada \nfoi mapeado.  \n\n5. Como sa\u00edda do algoritmo de diagn\u00f3stico, \u00e9 apresentado o r\u00f3tulo do \nagrupamento (tipo do padr\u00e3o que representa o agrupamento) que classificou \no padr\u00e3o de entrada. Os r\u00f3tulos s\u00e3o dependentes dos padr\u00f5es utilizados para \ntreinamento, por exemplo, falha X ou falha Y, que para o caso do SMI, \nseparam os tipos de falhas para cada componente do processo.  \n\n6. Ap\u00f3s identificar o r\u00f3tulo que classifica o padr\u00e3o de entrada, o \u00edndice do \nneur\u00f4nio vencedor \u00e9 utilizado no algoritmo de visualiza\u00e7\u00e3o do SOM, \nseguindo o formato do U-Matrix. No lado direito da Figura 4.8, \u00e9 \napresentada a U-Matrix, destacado o neur\u00f4nio para o qual o padr\u00e3o de \nentrada foi mapeado e os agrupamentos, assim como os devidos r\u00f3tulos. \n\n7. Esse algoritmo tem seu funcionamento acionado pela etapa de Detec\u00e7\u00e3o. \nEssa tarefa pode executar em conjunto com a etapa de predi\u00e7\u00e3o.  \n\n4.2.4 Predi\u00e7\u00e3o do Comportamento \n\nAp\u00f3s a detec\u00e7\u00e3o de anormalidade, \u00e9 aplicada a etapa de Predi\u00e7\u00e3o e Monitoramento \nda tend\u00eancia de comportamento do SMI. Ela ser\u00e1 detalhada, nesta parte do trabalho, \ncom a apresenta\u00e7\u00e3o do funcionamento do algoritmo necess\u00e1rio, como uma proposta de \nimplementa\u00e7\u00e3o. Essa etapa n\u00e3o ser\u00e1 implementada neste trabalho, apenas ser\u00e3o feitas \nalgumas simula\u00e7\u00f5es em software para analisar resultados. \n\nConforme j\u00e1 visto, essa etapa visa realizar a predi\u00e7\u00e3o de estados futuros de opera\u00e7\u00e3o \ndo processo. Isso \u00e9 feito pelo monitoramento cont\u00ednuo dos estados de opera\u00e7\u00e3o e pela \nidentifica\u00e7\u00e3o de uma tend\u00eancia durante o tempo de opera\u00e7\u00e3o do processo, baseando-se \nno conhecimento adquirido no treinamento.  \n\nSeja { }N)(t)(t)(t(t)X N ???= xxxx ,,2,1, L  uma s\u00e9rie de vetores de entrada para \nrecupera\u00e7\u00e3o (teste) no intervalo de tempo N. Mesmo recebendo como entrada um \nconjunto formado por v\u00e1rios vetores em tempo diferentes, o TKM \u00e9 capaz de processar \napenas um padr\u00e3o por instante de tempo, ent\u00e3o a s\u00e9rie de entrada deve ser decomposta \nem partes distintas para processamento. Seja o seguinte algoritmo:  \n\nApresentar a s\u00e9rie de dados Xn na entrada do TKM; \nEnquanto Xn existir s\u00e9rie de entrada fa\u00e7a: \n\nPara cada x(t) fa\u00e7a: \nExecutar algoritmo de teste do TKM, ver Se\u00e7\u00e3o 3.6.2; \nEncontrar o neur\u00f4nio vencedor j; \nEscrever na sa\u00edda o \u00edndice do neur\u00f4nio vencedor (BMU); \nArmazenar o BMU numa lista para o tempo t; \n\nFim \nFim \n\nNa Figura 4.9, \u00e9 apresentada a vis\u00e3o geral do algoritmo de predi\u00e7\u00e3o, do ponto de \nvista da aplica\u00e7\u00e3o do TKM, como ferramenta para solucionar o problema.  \n\n\n\n \n\n \n\n \n\n \n\n96 \n\nN)(t)(t)(t(t) ??? xxxx ,,2,1, L\n\n \n\nFigura 4.9: Vis\u00e3o geral do algoritmo de predi\u00e7\u00e3o usando o TKM. \n\nO processo de predi\u00e7\u00e3o para identificar uma tend\u00eancia no comportamento do \nprocesso deve ser executado do seguinte modo: \n\n1. A etapa de treinamento realiza o mapeamento das s\u00e9ries de estados de \nopera\u00e7\u00e3o do processo para o TKM. \n\n2. Um sinal N)(t)(t)(t(t) ??? xxxx ,,2,1, L  para certo per\u00edodo de tempo N \u00e9 \nextra\u00eddo do processo em monitoramento e apresentado na entrada da rede. \nEste, por sua vez, extrai um vetor x(t) e apresenta na entrada do TKM. O \nalgoritmo de teste inicia a execu\u00e7\u00e3o e realiza o mapeamento do padr\u00e3o de \nentrada para um agrupamento no TKM. \u00c9 importante lembrar que o este \nalgoritmo de teste \u00e9 diferente do SOM. Para localizar o neur\u00f4nio vencedor \nque represente toda a s\u00e9rie de entrada, s\u00e3o executados novos testes para cada \npadr\u00e3o da s\u00e9rie.  \n\n3. O neur\u00f4nio vencedor (BMU) \u00e9 calculado e apresentado na sa\u00edda. Na Figura \n4.9, dentro do Espa\u00e7o de dados do TKM, s\u00e3o vistas duas representa\u00e7\u00f5es. A \narquitetura do TKM \u00e9 apresentada com suas mem\u00f3rias de curto prazo e na \nproje\u00e7\u00e3o espacial dos neur\u00f4nios visualiza-se a trajet\u00f3ria percorrida pelos \nneur\u00f4nios vencedores no decorrer do tempo. \n\n4. Ap\u00f3s a execu\u00e7\u00e3o do algoritmo de teste do TKM, \u00e9 apresentado na sa\u00edda o \n\u00edndice do neur\u00f4nio vencedor (BMU), possibilitando identificar em qual \nagrupamento a s\u00e9rie de entrada foi classificada. Ao longo do tempo, os \nBMUs devem ser armazenados em uma lista, pois isso permite projetar a \ntrajet\u00f3ria que revela a tend\u00eancia de comportamento dos estados do sistema. \n\n5. Com a proje\u00e7\u00e3o da trajet\u00f3ria e classifica\u00e7\u00e3o dos r\u00f3tulos dos agrupamentos \npelo algoritmo de diagn\u00f3stico, \u00e9 poss\u00edvel identificar uma tend\u00eancia no \ncomportamento dos estados de opera\u00e7\u00e3o do processo. Por meio dessa \ntend\u00eancia projetada, ao longo do tempo, pode-se, por exemplo, antecipar a \nocorr\u00eancia de um estado de falha para onde a proje\u00e7\u00e3o tende (agrupamento \nde falha X). Em alguns casos, pode-se, inclusive, calcular o tempo restante \nat\u00e9 atingir o agrupamento, caso seja conhecido o n\u00edvel de degrada\u00e7\u00e3o das \npartes monitoradas do processo. \n\n6. Ap\u00f3s, \u00e9 aplicado o algoritmo de visualiza\u00e7\u00e3o do SOM no formato do U-\nMatrix, j\u00e1 que o TKM, depois de treinado, se comporta como o SOM. No \nlado direito da Figura 4.9, \u00e9 apresentada a U-Matrix e s\u00e3o destacados os \nneur\u00f4nios da lista de vencedores e \u00e9 projetada entre eles a trajet\u00f3ria \n\n\n\n \n\n \n\n \n\n \n\n97 \n\npercorrida, revelando a tend\u00eancia de comportamento dos estados do \nprocesso. \n\n7. Esse algoritmo tem seu funcionamento acionado pela etapa de Detec\u00e7\u00e3o. \nEssa tarefa pode ser executada em conjunto com a etapa de diagn\u00f3stico.  \n\n4.3 Projeto para Simula\u00e7\u00f5es do SOM em Software \nAntes de iniciar o projeto do prot\u00f3tipo para a plataforma de hardware, \u00e9 interessante \n\nrealizar alguns experimentos em software que possam auxiliar na simula\u00e7\u00e3o de alguns \ncasos de uso do SMI. \n\nEssa ferramenta de simula\u00e7\u00e3o tem por objetivo realizar experimentos dos algoritmos \napresentados na Se\u00e7\u00e3o 4.1, pelo uso do SOM como ferramenta de toler\u00e2ncia a falhas. As \nsimula\u00e7\u00f5es s\u00e3o importantes para comprovar a efic\u00e1cia do SOM em detectar e \ndiagnosticar as falhas do processo em monitoramento, validando-se a t\u00e9cnica para \nrealizar, a seguir, as demais etapas do projeto. \n\nEmbora o algoritmo padr\u00e3o do SOM seja conceitualmente simples, a implementa\u00e7\u00e3o \nrequer uma s\u00e9rie de cuidados fundamentais para garantir a converg\u00eancia e generaliza\u00e7\u00e3o \ndos dados durante o treinamento. Devido a isso, o pesquisador Teuvo Kohonen5, \nprofessor do Laborat\u00f3rio de Ci\u00eancia da Computa\u00e7\u00e3o e Informa\u00e7\u00e3o na Universidade \nTecnol\u00f3gica de Helsinki, \u00e9 o idealizador e criador de uma implementa\u00e7\u00e3o para \nexperimentos no SOM (KOHONEN, 2001).  \n\nKohonen afirma que a maioria das implementa\u00e7\u00f5es n\u00e3o atende a todos os requisitos \ndo processo de constru\u00e7\u00e3o do algoritmo do SOM. Ciente do problema, a equipe de \npesquisa desenvolveu dois pacotes de softwares com a implementa\u00e7\u00e3o da rede neural, \nque est\u00e3o dispon\u00edveis para a comunidade cient\u00edfica como c\u00f3digo aberto.  \n\nEm primeiro lugar, foi projetado o SOM_PAK, desenvolvido em linguagem C e, \nap\u00f3s, foi lan\u00e7ada uma vers\u00e3o com mais recursos para o MATLAB, sendo conhecido por \nSOM Toolbox6 (VESANTO, J. ET AL., 2000) (VESANTO, J. ET AL., 1999). Ambos \ns\u00e3o licenciados como softwares livres. Esses softwares s\u00e3o largamente difundidos entre \nos pesquisadores que trabalham com intelig\u00eancia artificial, em especial redes neurais e \nminera\u00e7\u00e3o de dados. \n\nSegundo (VESANTO, J. ET AL., 2000), o software do SOM deve apresentar um \nconjunto m\u00ednimo de requisitos importantes para realizar experimentos, tais como:  \n\n\u2022 Possibilidade de a rede (mapa ou arranjo de neur\u00f4nios) ter dimens\u00e3o \ndin\u00e2mica. \n\n\u2022 Defini\u00e7\u00e3o autom\u00e1tica da dimens\u00e3o da rede, com base em fun\u00e7\u00e3o dos \nautovalores da matriz de correla\u00e7\u00e3o dos vetores de entrada. \n\n\u2022 Disposi\u00e7\u00e3o dos neur\u00f4nios no arranjo, em forma hexagonal e retangular. \n\n\u2022 Algoritmo de aprendizagem-padr\u00e3o (sequencial) ou em lote. \n\n\u2022 Fun\u00e7\u00e3o de vizinhan\u00e7a topol\u00f3gica gaussiana ou bolha. \n\n                                                 \n5 P\u00e1gina web do professor Kohonen: http://www.cis.hut.fi/research/som-research/teuvo.html \n6 P\u00e1gina web do SOM Toolbox: http://www.cis.hut.fi/projects/somtoolbox/ \n\n\n\n \n\n \n\n \n\n \n\n98 \n\n\u2022 Inicializa\u00e7\u00e3o linear ou aleat\u00f3ria. \n\n\u2022 Algoritmos de visualiza\u00e7\u00e3o de resultados. \n\n\u2022 Resultados de c\u00e1lculos dos erros de quantiza\u00e7\u00e3o e topol\u00f3gico. \n\nVista a lista de requisitos, torna-se invi\u00e1vel reimplementar o SOM, a partir do zero, \napenas para o trabalho em quest\u00e3o. Ent\u00e3o, ser\u00e1 utilizado, neste trabalho, o SOM \nToolbox para MATLAB (vers\u00e3o 7). Reutilizar esse programa possibilita simula\u00e7\u00f5es em \nsoftware do treinamento, testes de verifica\u00e7\u00e3o e valida\u00e7\u00e3o para os estudos de caso do \nSMI.  \n\nInicialmente a ferramenta SOM Toolbox foi utilizada para aprender mais sobre o \nfuncionamento do algoritmo do SOM e realizar diversos experimentos, a princ\u00edpio \napenas como quest\u00e3o did\u00e1tica, utilizando exemplos demonstrativos do software. \n\nAp\u00f3s o desenvolvimento de um grau de aprendizado sobre o funcionamento do \nSOM, inicia-se a etapa de experimentos utilizando os dados coletados no processo \nmonitorado pelo SMI. Essa parte do trabalho visa realizar um conjunto de experimentos \na fim de aprender a utilizar o SOM Toolbox para processar os sinais coletados no \nprocesso. \n\nComo o SOM cont\u00e9m diversos par\u00e2metros de configura\u00e7\u00e3o, o algoritmo de \ntreinamento \u00e9 realizado de modo emp\u00edrico. Foram experimentadas diversas \nconfigura\u00e7\u00f5es para buscar a que melhor se adaptava ao conjunto de dados utilizados \npara treinamento adquiridos do processo.  \n\nPara auxiliar na realiza\u00e7\u00e3o de todos os experimentos para o estudo de caso de um \nSMI para atuadores el\u00e9tricos, foi desenvolvida uma ferramenta que utiliza o SOM \nToolbox. Essa ferramenta tem como fun\u00e7\u00e3o principal a entrada de dados e sa\u00edda de \nresultados extra\u00eddos do SOM para a implementa\u00e7\u00e3o das etapas de detec\u00e7\u00e3o, diagn\u00f3stico \ne predi\u00e7\u00e3o de falhas, conforme os algoritmos apresentados nas se\u00e7\u00f5es 4.1.2 a 4.1.4. \n\nNa Figura 4.10, \u00e9 apresentada uma imagem da tela da ferramenta de simula\u00e7\u00e3o \nutilizando o SOM Toolbox para o MATLAB. A ferramenta executa os algoritmos de \ntreinamento, teste e visualiza\u00e7\u00e3o de resultados do SOM Toolbox.  \n\nPara exemplificar um algoritmo em MATLAB que utilize o SOM Toolbox, ser\u00e1 \napresentado o algoritmo para Detec\u00e7\u00e3o de Anormalidades conforme o c\u00f3digo-fonte: \n\n//ler conjunto de dados de entrada para treinamento \ntreinar = som_read_data('dados_normais.dat'); \n//executar algoritmo de treinamento do SOM e ajustar par\u00e2metros \nsMap = som_make(treinar,'training','long','size',[13 5]); \n//ler conjunto de dados de entrada para teste \nteste = som_read_data('dados_teste.dat'); \n//vetor para armazenar erros de quantiza\u00e7\u00e3o \nqerr = []; \n//calcular \u00edndices dos neur\u00f4nios vencedores - BMU \nbmus = som_bmus(sMap,teste.data);  \nfor i=1:length(bmus),  \n\n//calcular Dist\u00e2ncia Euclidiana entre BMU e Teste \ndx = sMap.codebook(bmus(i),:)-teste.data(i,:); \nqerr(i) = sqrt(sum(dx.^2));    \n\nend \n//proje\u00e7\u00e3o do erro de quantiza\u00e7\u00e3o para os dados de teste \nplot(qerr); \n \n\n\n\n \n\n \n\n \n\n \n\n99 \n\nAs demais etapas, diagn\u00f3stico de falhas (classifica\u00e7\u00e3o) e carga de dados, tamb\u00e9m \nforam implementadas e integradas na ferramenta de simula\u00e7\u00e3o para o MATLAB. \n\n \n\nFigura 4.10: Tela da ferramenta de simula\u00e7\u00e3o em software para detec\u00e7\u00e3o e diagn\u00f3stico \nde falhas. \n\nPara possibilitar o projeto do sistema embarcado em hardware, foi preciso \ndesenvolver um script para converter dados do SOM treinado para um modelo em \nrepresenta\u00e7\u00e3o bin\u00e1ria que o hardware possa interpretar.  \n\nOs resultados obtidos pela ferramenta s\u00e3o utilizados no projeto do prot\u00f3tipo do \nsistema embarcado em hardware, como ser\u00e1 visto nas pr\u00f3ximas se\u00e7\u00f5es.  \n\n4.4 Projeto do SOM em Hardware \nFoi adotada, neste trabalho, a plataforma-alvo de FPGA (XILINX, 2008) para o \n\ndesenvolvimento do componente de hardware que implementa as funcionalidades do \nalgoritmo de teste do SOM. Assim foi decidido, devido \u00e0 disponibilidade de um FPGA \nno laborat\u00f3rio de pesquisa e ao desenvolvimento de prot\u00f3tipo de um componente para \nser integrado em um chip para ser implantado no futuro em cada atuador el\u00e9trico. \n\nA metodologia de projeto do hardware do SOM adotada neste trabalho \u00e9 baseada no \nfluxo de projeto apresentado na Figura 4.11 e em projeto de sistemas digitais (CARRO, \n2001). A partir da especifica\u00e7\u00e3o dos algoritmos de detec\u00e7\u00e3o, diagn\u00f3stico e predi\u00e7\u00e3o, \npode-se definir que todos eles fazem o uso de um mesmo algoritmo: o de teste ou \nrecupera\u00e7\u00e3o do SOM. \n\nNa se\u00e7\u00e3o 4.2.1, est\u00e1 especificado e detalhado o algoritmo de teste do SOM, que foi \ndesenvolvido em hardware, utilizando uma descri\u00e7\u00e3o VHDL para FPGA da Xilinx. A \npartir do algoritmo, foi projetado um modelo em VHDL com parte operativa e de \ncontrole. \n\nAp\u00f3s o desenvolvimento do modelo em VHDL, a pr\u00f3xima etapa \u00e9 elaborar um \nconjunto de sinais para realizar o teste funcional no circuito, criando um outro projeto \nchamando de Testbench. Este gera est\u00edmulos as entrada do circuito para verificar o \n\n\n\n \n\n \n\n \n\n \n\n100 \n\ncorreto funcionamento atrav\u00e9s dos sinais de sa\u00edda. Ent\u00e3o, a primeira simula\u00e7\u00e3o de teste \nrealizada foi a baseada nos sinais comportamentais do projeto. \n\n \n\nFigura 4.11: Fluxo de projeto para desenvolvimento de um sistema digital em FPGA.  \n\nAp\u00f3s a valida\u00e7\u00e3o baseada na simula\u00e7\u00e3o comportamental, foi feita a s\u00edntese do \nmodelo VHDL para a tecnologia FPGA, levando em considera\u00e7\u00e3o as restri\u00e7\u00f5es e \nrequisitos t\u00e9cnicos da tecnologia selecionada. Como resultado, tem-se uma \nespecifica\u00e7\u00e3o do modelo de VHDL em n\u00edvel de portas l\u00f3gicas. \n\nOutra etapa importante \u00e9 a valida\u00e7\u00e3o da descri\u00e7\u00e3o em n\u00edvel de portas l\u00f3gicas. Por \nmeio da realiza\u00e7\u00e3o da simula\u00e7\u00e3o temporal (com atrasos), que leva em considera\u00e7\u00e3o os \natrasos f\u00edsicos presentes nos componentes el\u00e9tricos (portas l\u00f3gicas) do FPGA, \u00e9 \nverificado o funcionamento do circuito em condi\u00e7\u00f5es reais. Essa etapa \u00e9 fundamental \npara validar o modelo VHDL, tamb\u00e9m aplicando teste funcional ao projeto agora em \num ambiente mais realista. \n\nAp\u00f3s a valida\u00e7\u00e3o pela simula\u00e7\u00e3o temporal, pode ser realizada a s\u00edntese f\u00edsica para \ncriar o bitstream para, por fim, ser poss\u00edvel configurar o FPGA e desempenhar a fun\u00e7\u00e3o \ndescrita no modelo VHDL. \n\nNa pr\u00f3xima se\u00e7\u00e3o ser\u00e1 aprofundado o projeto do algoritmo de teste do SOM. \n\n4.4.1 Arquitetura do Hardware do SOM \n\nO modelo da descri\u00e7\u00e3o em VHDL para o algoritmo de teste do SOM \u00e9 apresentado \nna Figura 4.12, revelando a rela\u00e7\u00e3o entre os componentes de hardware, registradores e \nbarramentos para transfer\u00eancias de dados.  \n\nNessa estrutura, os vetores de peso (wi) dos neur\u00f4nios, que comp\u00f5em a arquitetura \ndo SOM, est\u00e3o armazenados na mem\u00f3ria interna BRAM. O vetor de entrada \u00e9 \napresentado \u00e0 rede neural pela porta de entrada (xj). Os demais componentes s\u00e3o o \nc\u00e1lculo da Dist\u00e2ncia Euclidiana e um comparador utilizado para identificar o valor da \nmenor dist\u00e2ncia (D). \n\nO projeto foi baseado no conceito de implementa\u00e7\u00e3o em s\u00e9rie, em que registradores \ns\u00e3o utilizados para armazenar os estados intermedi\u00e1rios do sistema. Foi definido \nimplementar desse modo, devido aos vetores do SOM apresentarem dimens\u00f5es (N). \nAssim, os vetores de entrada e os pesos dos neur\u00f4nios devem ser sincronizados de modo \na serem apresentados no mesmo instante de tempo. \n\n \n\n\n\n \n\n \n\n \n\n \n\n101 \n\n \n\nFigura 4.12: Vis\u00e3o geral da estrutura necess\u00e1ria para o projeto em hardware do \nalgoritmo de teste do SOM. \n\nA M\u00e1quina de Estados implementa o funcionamento do algoritmo de teste do SOM, \nem que s\u00e3o programados os estados para a transfer\u00eancia de dados entre os componentes \nque formam o sistema de hardware. \n\nNa Figura 4.13, \u00e9 apresentado o bloco de entradas e sa\u00eddas para o projeto de \nhardware do algoritmo de teste do SOM. A largura de barramento dos sinais x e ERRO \ns\u00e3o de 32 bits devido a internamente utilizar a representa\u00e7\u00e3o num\u00e9rica de Ponto \nFlutuante IEEE 754. Os c\u00e1lculos internos de compara\u00e7\u00e3o e Dist\u00e2ncia Euclidiana \ntamb\u00e9m utilizam componentes nesta representa\u00e7\u00e3o num\u00e9rica.  \n\n \n\nFigura 4.13: Entradas e sa\u00eddas do componente de hardware do algoritmo de teste do \nSOM. \n\nA entrada do sinal start \u00e9 utilizada para inicializar o funcionamento do componente. \nA entrada carregar \u00e9 utilizada para sincronizar os sinais do vetor de entrada, de acordo \ncom a dimens\u00e3o (N). Para cada componente do vetor apresentado esse sinal deve ser \nacionado. A sa\u00edda novo \u00e9 utilizada para informar a solicita\u00e7\u00e3o do pr\u00f3ximo valor do vetor \nde entrada x. Esse sinal de sa\u00edda \u00e9 sincronizado com a entrada carregar. A sa\u00edda pronto \ninforma o final dos c\u00e1lculos do SOM e apresenta nas sa\u00eddas ERRO e BMU os valores \ncalculados durante o funcionamento do bloco. A sa\u00edda BMU \u00e9 de nove bits, devido a \numa defini\u00e7\u00e3o interna no projeto de suportar um SOM com no m\u00e1ximo 512 neur\u00f4nios. \n\n4.4.1.1 Projeto do componente para c\u00e1lculo da Dist\u00e2ncia Euclidiana \n\nO primeiro componente fundamental para o algoritmo de teste do SOM \u00e9 calcular a \nDist\u00e2ncia Euclidiana entre dois vetores (conforme algoritmo detalhado na Se\u00e7\u00e3o 4.2.1).  \n\nA parte operativa do hardware pode ser vista na Figura 4.14. Neste projeto, foram \nreutilizados componentes que implementam opera\u00e7\u00f5es num\u00e9ricas (soma, subtra\u00e7\u00e3o e \nextra\u00e7\u00e3o de raiz quadrada) para o formato num\u00e9rico de Ponto Flutuante IEEE 754, que \npossuem largura de barramento de 32 bits. Os componentes est\u00e3o inclusos na biblioteca \ninterna da ferramenta de projeto da Xilinx (XILINX, 2005a).  \n\n\n\n \n\n \n\n \n\n \n\n102 \n\n \n\nFigura 4.14: Parte operativa para o c\u00e1lculo da Dist\u00e2ncia Euclidiana. \n\nA parte de controle do hardware, onde \u00e9 implementada a M\u00e1quina de Estados, gera \nos sinais de controle e o fluxo de dados entre os componentes e registradores, pode ser \nvista na Figura 4.15. \n\n \n\nFigura 4.15: M\u00e1quina de Estados para o controle do c\u00e1lculo da Dist\u00e2ncia Euclidiana. \n\nO hardware para c\u00e1lculo da Dist\u00e2ncia Euclidiana foi projetado com base na \nimplementa\u00e7\u00e3o em forma serial (SUDHA ET AL., 2003). Cada componente dos vetores \nx e w para um \u00edndice i \u00e9 apresentado na entrada do circuito, seguindo uma sincroniza\u00e7\u00e3o \nat\u00e9 serem apresentados os N valores do vetor. Os sinais de controle aplicam uma s\u00e9rie \nde c\u00e1lculos numa sequ\u00eancia de subtra\u00e7\u00e3o, multiplica\u00e7\u00e3o e acumula\u00e7\u00e3o em um \nsomat\u00f3rio. Quando o \u00edndice i atingir a dimens\u00e3o N, \u00e9 feito o c\u00e1lculo para extrair a raiz \nquadrada do valor acumulado no somat\u00f3rio. Por fim, \u00e9 apresentado, na sa\u00edda do \nhardware, o valor da dist\u00e2ncia euclidiana (D). \n\n\n\n \n\n \n\n \n\n \n\n103 \n\n4.4.1.2 Projeto do algoritmo de teste do SOM \n\nO algoritmo de teste do SOM utiliza o componente da Dist\u00e2ncia Euclidiana como \nfun\u00e7\u00e3o b\u00e1sica nos c\u00e1lculos. Desse modo, a segunda parte do projeto do hardware \u00e9 \nintegrar o componente aos demais para implementar o algoritmo de teste conforme visto \nna Se\u00e7\u00e3o 4.2.1. Essa parte do projeto diz respeito ao bloco apresentado na Figura 4.13.  \n\nNa Figura 4.16, \u00e9 apresentada a parte operativa do algoritmo de teste do SOM. A \nentrada principal de dados \u00e9 a apresenta\u00e7\u00e3o dos vetores xi, para i=0,1,2, ..., N, sendo N a \ndimens\u00e3o dos vetores de entrada.  \n\n \n\nFigura 4.16: Parte operativa do algoritmo de teste do SOM. \n\nA fun\u00e7\u00e3o b\u00e1sica desse bloco \u00e9 identificar o neur\u00f4nio do SOM que apresenta a menor \nDist\u00e2ncia Euclidiana em rela\u00e7\u00e3o ao vetor de entrada. Portanto, foi necess\u00e1rio utilizar um \ncomponente que implementa a opera\u00e7\u00e3o de compara\u00e7\u00e3o para o formato num\u00e9rico de \nPonto Flutuante IEEE 754. \n\nNa parte operativa, \u00e9 visto um componente chamado de BRAM. Esse componente \u00e9 \numa mem\u00f3ria interna do FPGA, utilizada para armazenar os pesos sin\u00e1pticos de todos \nos neur\u00f4nios que formam o SOM j\u00e1 treinado em software. Os neur\u00f4nios s\u00e3o alocados na \nmem\u00f3ria de forma linear e cont\u00ednua conforme visto na Figura 4.17.  \n\n \n\nFigura 4.17: Armazenamento dos pesos sin\u00e1pticos de cada neur\u00f4nio na BRAM. \n\nCada c\u00e9lula da mem\u00f3ria armazena um componente i do vetor de peso sin\u00e1ptico \nwi+j,com dados de 32 bits, sendo N a dimens\u00e3o dos vetores de peso sin\u00e1ptico e M a \nquantidade de neur\u00f4nios do SOM acessado pelo \u00edndice j.  \n\n\n\n \n\n \n\n \n\n \n\n104 \n\nCada componente do vetor de peso dos neur\u00f4nios pode ser acessado de forma direta, \npelo endere\u00e7o da mem\u00f3ria, em que cada componente wi+j diz respeito a um valor da \ncomponente peso sin\u00e1ptico do neur\u00f4nio j na posi\u00e7\u00e3o i. \n\nTamb\u00e9m s\u00e3o utilizados dois registradores importantes para o funcionamento do \nalgoritmo na parte operativa. Um registrador importante \u00e9 o que armazena o menor \nvalor para o erro de quantiza\u00e7\u00e3o (menor ERRO) e outro \u00e9 utilizado para armazenar o \n\u00edndice j deste neur\u00f4nio (BMU). Ambos t\u00eam seus valores atualizados pelo componente \ncomparador que autoriza a escrita neles. \n\nA parte de controle do hardware \u00e9 implementada por uma m\u00e1quina de estados que \ngera os sinais de controle internos, fluxo de dados entre os registradores e componente \nda Dist\u00e2ncia Euclidiana, conforme mostra a Figura 4.18. \n\n \n\nFigura 4.18: M\u00e1quina de Estados para o algoritmo de teste do SOM. \n\nO hardware do algoritmo de teste do SOM foi projetado com base na \nimplementa\u00e7\u00e3o serial. Cada componente do vetor de entrada x para um \u00edndice i \u00e9 \napresentado na entrada do circuito, e ao mesmo tempo tamb\u00e9m \u00e9 apresentado o vetor de \npeso sin\u00e1ptico do neur\u00f4nio j obtido pela BRAM. Ambos s\u00e3o sincronizados.  \n\nPara cada vetor de entrada x \u00e9 executado M vezes o c\u00e1lculo da Dist\u00e2ncia Euclidiana \ne sempre, ao t\u00e9rmino de cada c\u00e1lculo, \u00e9 verificado se o novo valor do erro \u00e9 menor do \nque aquele armazenado no registrador. Caso seja, o registrador \u00e9 atualizado. Isso \nacontece porque o algoritmo precisa localizar qual \u00e9 o menor valor entre todos os \nneur\u00f4nios que constituem o SOM.  \n\nPor fim, ap\u00f3s a execu\u00e7\u00e3o de todos os estados, a Dist\u00e2ncia Euclidiana \u00e9 calculada \npara todos os neur\u00f4nios do SOM e localiza o neur\u00f4nio que apresenta o menor erro de \nquantiza\u00e7\u00e3o. Como sa\u00edda do circuito, ser\u00e3o apresentados o valor desse erro (ERRO) e o \n\u00edndice do neur\u00f4nio (BMU). \n\n\n\n \n\n \n\n \n\n \n\n105 \n\n4.4.2 Resultados de Projeto do Hardware do SOM \n\nO projeto de hardware do SOM foi realizado utilizando um conjunto de ferramentas \nda Xilinx para FPGA, o ISE para projeto e s\u00edntese (XILINX, 2005a), o ModelSIM7 para \nsimula\u00e7\u00f5es comportamentais e temporais e o XPower para simula\u00e7\u00e3o de consumo de \npot\u00eancia (incluso no ISE). \n\nOs resultados apresentados, nesta se\u00e7\u00e3o foram adquiridos adotando a plataforma \nFPGA da Xilinx, modelo XUP Virtex 2 PRO utilizada para s\u00edntese da descri\u00e7\u00e3o VHDL \n(XILINX, 2008) (XILINX, 2005b). \n\nPrimeiro, foram definidos os par\u00e2metros para especifica\u00e7\u00e3o de um SOM conforme a \nTabela 4.1. Adotou-se um mapa com dimens\u00e3o de 15 linhas por 6 colunas, com um total \nde 90 neur\u00f4nios (valor adequado para os experimentos), em que o vetor para cada \nneur\u00f4nio \u00e9 composto por 20 elementos, sendo que cada elemento armazena um valor \nnum\u00e9rico de 32 bits, ocupando um espa\u00e7o total de 56,35 KBytes para armazenamento \nna mem\u00f3ria BRAM. Esse SOM foi treinado e os vetores de pesos sin\u00e1pticos dos \nneur\u00f4nios foram salvos em separado para serem gravados na mem\u00f3ria BRAM.  \n\nTabela 4.1: Especifica\u00e7\u00e3o do SOM treinado. \n\nPar\u00e2metro Valor \nDimens\u00e3o do mapa 15 linhas X 6 colunas \nN\u00famero de neur\u00f4nios 90 Neur\u00f4nios \nDimens\u00e3o do vetor 20 elementos \nCada elemento do vetor 32 bits \nUso de mem\u00f3ria 56,35 Kbytes \n\n \n\nOs vetores salvos foram processados por um script para transform\u00e1-los em \nrepresenta\u00e7\u00e3o bin\u00e1ria e serem carregados na BRAM interna do circuito. No momento da \ns\u00edntese do circuito, os valores bin\u00e1rios dos pesos dos neur\u00f4nios s\u00e3o armazenados na \nBRAM e est\u00e3o prontos para execu\u00e7\u00e3o do algoritmo de recupera\u00e7\u00e3o.  \n\nUtilizando a ferramenta ISE como base para o projeto, foi adicionado o conjunto de \narquivos que descrevem o hardware do SOM. A descri\u00e7\u00e3o reutilizou alguns \ncomponentes da biblioteca interna do FPGA para implementar as opera\u00e7\u00f5es num\u00e9ricas \nde Ponto Flutuante 754, soma/subtra\u00e7\u00e3o, multiplica\u00e7\u00e3o, raiz quadrada e compara\u00e7\u00e3o.  \n\nNa Tabela 4.2, s\u00e3o apresentados os resultados de \u00e1rea obtidos ap\u00f3s a s\u00edntese do \ncircuito. Esses resultados s\u00e3o referentes ao espa\u00e7o f\u00edsico ocupado dentro do FPGA, \nrevelando a quantidade e a propor\u00e7\u00e3o de componentes utilizados pelo projeto.  \n\nTabela 4.2: Resultados de \u00e1rea do circuito obtidos na s\u00edntese. \n\nPar\u00e2metro Utilizados Dispon\u00edvel Utiliza\u00e7\u00e3o \nFlip-flops 2597 27392 9% \nSlices 2158 13696 15% \nLUTS 2664 27392 9% \nIOBS 79 556 14% \nBRAM 29 136 21% \n\n                                                 \n7 ModelSim Xilinx Edition-III Details: http://www.xilinx.com/ise/verification/mxe_details.html \n\n\n\n \n\n \n\n \n\n \n\n106 \n\nNa Tabela 4.3, s\u00e3o apresentados os resultados de desempenho obtidos ap\u00f3s a s\u00edntese \ndo circuito. Esses resultados revelam a frequ\u00eancia de clock m\u00e1ximo, que pode ser \naplicado no circuito, e as caracter\u00edsticas de tempo dos registradores. \n\nTabela 4.3: Resultados de desempenho do circuito obtidos na s\u00edntese. \n\nPar\u00e2metro Valor \nFrequ\u00eancia de opera\u00e7\u00e3o 152 MHz \nTempo m\u00ednimo de chegada da entrada \nantes do clock (setup time) \n\n2.520 ns \n\nTempo m\u00e1ximo de sa\u00edda necess\u00e1rio \ndepois do clock (hold time) \n\n3.636 ns \n\nAp\u00f3s a s\u00edntese do circuito e a valida\u00e7\u00e3o pela simula\u00e7\u00e3o comportamental, s\u00e3o \nexecutadas as etapas de mapeamento e roteamento do circuito. Depois de finalizada essa \nparte, \u00e9 feita a simula\u00e7\u00e3o temporal, que visa avaliar se o circuito est\u00e1 em condi\u00e7\u00f5es de \ngerar o bitstream, pois leva em considera\u00e7\u00e3o os atrasos f\u00edsicos de cada componente do \ncircuito em n\u00edvel el\u00e9trico. \n\nNa Figura 4.19, \u00e9 apresentado o resultado em formas de onda da simula\u00e7\u00e3o \ntemporal, comprovando o correto funcionamento do projeto. Vale destacar que o tempo \nde execu\u00e7\u00e3o para calcular o BMU e o ERRO para apenas um vetor de entrada \u00e9 de  \naproximadamente de 864560 ns.  \n\n \n\nFigura 4.19: Simula\u00e7\u00e3o temporal do circuito do SOM e tempo de execu\u00e7\u00e3o. \n\nNa Tabela 4.4, s\u00e3o apresentados os resultados de pot\u00eancia obtidos ap\u00f3s a s\u00edntese do \ncircuito por meio da ferramenta XPower. Esses resultados revelam o consumo de \nenergia do circuito. Vale destacar que foi utilizada uma mem\u00f3ria BRAM, nesta \nsimula\u00e7\u00e3o, com capacidade de armazenamento de 512 Kbytes, pois o projeto do SOM \nfoi definido para suportar no m\u00e1ximo 512 neur\u00f4nios de no m\u00e1ximo 32 elementos por \nvetor.  \n\nTabela 4.4: Resultados de pot\u00eancia do circuito do SOM ap\u00f3s mapeamento. \n\nPar\u00e2metro Valor \nPot\u00eancia est\u00e1tica 0.02813 W \nPot\u00eancia din\u00e2mica 0.06805 W \nPot\u00eancia total 0.09618 W \n\nCom a aplica\u00e7\u00e3o de todas as simula\u00e7\u00f5es e a valida\u00e7\u00e3o pelo testbench para os casos \nde teste comportamental e temporal, foi validado o funcionamento do projeto do \ncircuito do SOM, baseando-se em teste funcional. A partir de agora, pode-se gerar o \nbitstream para programar o FPGA.  \n\n\n\n \n\n \n\n \n\n \n\n107 \n\nO circuito do SOM ainda n\u00e3o est\u00e1 em condi\u00e7\u00f5es de ser usado como prot\u00f3tipo, antes \n\u00e9 preciso definir um sistema embarcado que seja capaz de utilizar esse circuito e extrair \nas informa\u00e7\u00f5es necess\u00e1rias para o Sistema de Manuten\u00e7\u00e3o Inteligente em Atuadores \nEl\u00e9tricos. Na pr\u00f3xima se\u00e7\u00e3o, ser\u00e1 estudado o projeto do Sistema Embarcado. \n\n4.5 Sistema Embarcado para Manuten\u00e7\u00e3o Inteligente \nSegundo (CARRO; WAGNER, 2003) um sistema embarcado \u00e9 definido como uma \n\ncombina\u00e7\u00e3o de componentes de hardware e software, projetados para desempenhar uma \ndeterminada tarefa. Normalmente, \u00e9 formado por microprocessador, mem\u00f3ria e \nperif\u00e9ricos para executar uma determinada aplica\u00e7\u00e3o. A diferen\u00e7a entre um sistema \nembarcado E um computador de prop\u00f3sito geral (desktop) est\u00e1 nos requisitos e \naplica\u00e7\u00f5es alvo para as quais \u00e9 projetado. \n\nPode-se dizer que os sistemas embarcados est\u00e3o inseridos em v\u00e1rias aplica\u00e7\u00f5es do \ncotidiano das pessoas, por exemplo, telefones celulares, com c\u00e2mera fotogr\u00e1fica digital, \nsistemas de caixa em supermercado, quiosques banc\u00e1rios, eletrodom\u00e9sticos, sistemas de \nfreios ABS e muito mais. \n\nUm sistema embarcado consiste na combina\u00e7\u00e3o entre hardware e software \nprojetados para desempenhar uma determinada aplica\u00e7\u00e3o. Os processadores embarcados \npodem ser de tipos diversos dependendo da aplica\u00e7\u00e3o. O software da aplica\u00e7\u00e3o pode ser \ncomposto por m\u00faltiplos processos. \n\nDevido ao grande espa\u00e7o de projeto em sistemas embarcados, a diversidade de \nsolu\u00e7\u00f5es para a implementa\u00e7\u00e3o de uma determinada aplica\u00e7\u00e3o torna o processo muito \ncomplexo. Por isso, o reuso de plataformas de hardware e software pode permitir uma \nredu\u00e7\u00e3o no espa\u00e7o de solu\u00e7\u00f5es e, portanto, no tempo de projeto.  \n\nUma plataforma \u00e9 uma arquitetura de hardware e software espec\u00edfica para \ndeterminado dom\u00ednio de aplica\u00e7\u00e3o. \u00c9 altamente parametriz\u00e1vel quanto ao n\u00famero de \ncomponentes, na estrutura de comunica\u00e7\u00e3o, no tamanho da mem\u00f3ria, nos dispositivos \nde entrada e sa\u00edda, etc. O reuso dos componentes da plataforma pode ser ainda \nrefor\u00e7ado pela ado\u00e7\u00e3o de padr\u00f5es na arquitetura e projeto do sistema. \n\nDo ponto de vista do hardware, de um sistema embarcado \u00e9 formado por um \nm\u00ednimo de componentes (CARRO; WAGNER, 2003), basicamente por:  \n\n\u2022 Microprocessador: \u00e9 a unidade de processamento (CPU) e geralmente \nprojetada para um dom\u00ednio de uso espec\u00edfico (baixo consumo de \u00e1rea, \npot\u00eancia e mem\u00f3ria). \n\n\u2022 Mem\u00f3rias: s\u00e3o as unidades de armazenamento de softwares (RAM, FLASH, \netc.). \n\n\u2022 Barramento de comunica\u00e7\u00e3o: \u00e9 respons\u00e1vel pelo transporte dos sinais e \ndados entre os componentes que formam o sistema.  \n\n\u2022 Perif\u00e9ricos: s\u00e3o todos os componentes externos integrados ao sistema, que \ndesempenham uma fun\u00e7\u00e3o especifica, por exemplo, porta serial, ethernet, \nconversor D/A, interfaces de comunica\u00e7\u00e3o, etc. \n\nDo ponto de vista do software, este \u00e9 geralmente armazenado em uma mem\u00f3ria que \ncomp\u00f5e a plataforma. O software \u00e9 compilado para a plataforma-alvo e est\u00e1 diretamente \nligado \u00e0 arquitetura do microprocessador adotado. \n\n\n\n \n\n \n\n \n\n \n\n108 \n\nO projeto do software embarcado \u00e9 influenciado por algumas caracter\u00edsticas \nimportantes que o diferenciam dos softwares tradicionais:  \n\n\u2022 Limite na mem\u00f3ria dispon\u00edvel. \n\n\u2022 Limite no desempenho do processador (pode exigir maior paralelismo). \n\n\u2022 Limite no consumo de pot\u00eancia.  \n\nDevido \u00e0 complexidade do projeto de software embarcado surgiu o conceito de \nutiliza\u00e7\u00e3o de Sistema Operacional Embarcado (SOE) para controlar e desempenhar \ntodas as fun\u00e7\u00f5es no dispositivo. Um SOE \u00e9 classificado como um software embarcado \nespec\u00edfico que tem alta intera\u00e7\u00e3o com o hardware. \u00c9 composto por um conjunto de \nimplementa\u00e7\u00f5es em diferentes n\u00edveis de abstra\u00e7\u00e3o, desde a linguagem de m\u00e1quina at\u00e9 a \nde mais alto n\u00edvel. \n\nUm SOE dedicado a aplica\u00e7\u00f5es de sistemas embarcados deve estar sujeito aos \nrequisitos naturais exigidos por esses sistemas. As principais restri\u00e7\u00f5es no projeto s\u00e3o: \nlimite de mem\u00f3ria dispon\u00edvel, desempenho e consumo de pot\u00eancia. \n\nAs principais caracter\u00edsticas de um SOE ser\u00e3o apresentadas nas pr\u00f3ximas se\u00e7\u00f5es. A \nseguir, ser\u00e1 apresentada a constru\u00e7\u00e3o do sistema embarcado, revelando as ferramentas e \netapas necess\u00e1rias para o projeto de hardware e software. \n\n4.5.1 Hardware do Sistema Embarcado \n\nConforme (XILINX, 2008), FPGAs s\u00e3o chips que suportam a implementa\u00e7\u00e3o de \ncircuitos l\u00f3gicos de hardware. O FPGA se comporta como um hardware program\u00e1vel. \nO dispositivo consiste de um arranjo de c\u00e9lulas l\u00f3gicas configur\u00e1veis associadas a uma \ninfraestrutura de interconex\u00f5es, em que cada c\u00e9lula pode ser programada. O FPGA pode \nser utilizado para a implementa\u00e7\u00e3o de fun\u00e7\u00f5es l\u00f3gicas definidas pelo usu\u00e1rio. \n\nA arquitetura interna de um FPGA \u00e9 constitu\u00edda por: \n\n\u2022 Blocos l\u00f3gicos program\u00e1veis (CLBs): implementam toda a l\u00f3gica \ncombinacional e sequencial de um circuito. S\u00e3o constitu\u00eddos por flip-flops e \nLUTs.  \n\n\u2022 Blocos de entrada e sa\u00edda (IOBs): s\u00e3o respons\u00e1veis pela interface dos CLBs \ncom os pinos de entrada e sa\u00edda do encapsulamento do FPGA e com o \nbarramento de interconex\u00f5es. S\u00e3o formados por buffers, que funcionar\u00e3o \ncomo um canal bidirecional de entrada/sa\u00edda. \n\n\u2022 Interconex\u00f5es program\u00e1veis: s\u00e3o trilhas ou barramentos para conectar as \nentradas e sa\u00eddas dos CLBs e IOBs. O processo de escolha das interconex\u00f5es \n\u00e9 feito durante o roteamento. Cada fabricante de FPGA determina o n\u00famero \ndispon\u00edvel de interconex\u00f5es. \n\n\u2022 Bloco de mem\u00f3ria (BRAM): em alguns modelos de FPGA, est\u00e1 dispon\u00edvel \num banco de mem\u00f3ria para implementa\u00e7\u00e3o de fun\u00e7\u00f5es l\u00f3gicas mais \ncomplexas ou apenas para armazenar dados. \n\nAtualmente, existe no mercado uma grande variedade de modelos de FPGA de \ndiversos fabricantes. Alguns exemplos de fabricantes importantes s\u00e3o Altera, Actel e \nXilinx, entre outros. Estes oferecem dispositivos com capacidades de programa\u00e7\u00e3o \ndistintas, conjuntos de caracter\u00edsticas espec\u00edficas, tais como desempenho, consumo de \n\n\n\n \n\n \n\n \n\n \n\n109 \n\nenergia, testabilidade, diferentes m\u00e9todos de programa\u00e7\u00e3o, diferentes arranjos de \ninterconex\u00f5es e funcionalidades b\u00e1sicas distintas dos CLB. \n\nNo presente trabalho, foi adotado um modelo de FPGA que tem a programa\u00e7\u00e3o das \nc\u00e9lulas baseada na tecnologia de SRAM. O bitstream (dados de configura\u00e7\u00e3o ou \nprograma do FPGA) \u00e9 carregado na SRAM, que configura os blocos l\u00f3gicos do circuito. \nDevido \u00e0 volatilidade da mem\u00f3ria, o FPGA precisa de uma mem\u00f3ria externa n\u00e3o-vol\u00e1til \npara recarregar a configura\u00e7\u00e3o em cada momento que \u00e9 energizado. \n\nO FPGA pode ser utilizado para implementar praticamente qualquer projeto de \nhardware. Um dos usos mais comuns \u00e9 a utiliza\u00e7\u00e3o do FPGA para a prototipa\u00e7\u00e3o de \ncircuitos digitais, que posteriormente pode ser implementado em um chip espec\u00edfico. No \nentanto, o FPGA est\u00e1 sendo cada vez mais inserido como produto final no mercado \ndevido ao seu baixo custo de inser\u00e7\u00e3o no mercado.  \n\nFoi adotado, neste trabalho, utilizar o FPGA do modelo Virtex-2 PRO, fabricado \npela empresa Xilinx. Este foi acoplado a uma plataforma de desenvolvimento em uma \nplaca fabricada pela Digilent (Virtex 2 Pro Development System)8 (XILINX, 2005b). \nEssa placa \u00e9 um hardware utilizado para experimentos e desenvolvimento de projetos \nde sistemas embarcados. \n\nA placa apresenta uma arquitetura prop\u00edcia para projetos experimentais de sistemas \nembarcados, pois \u00e9 totalmente configur\u00e1vel por meio do FPGA, utiliza perif\u00e9ricos \nbastante difundidos no mercado e padronizados. Esta cont\u00e9m os seguintes perif\u00e9ricos \ndispon\u00edveis: uma porta 10/100 Ethernet, porta USB, porta serial RS-232, porta de sa\u00edda \nde v\u00eddeo VGA, um leitor para cart\u00e3o de mem\u00f3ria, interface para disco r\u00edgido, \nconversores A/D e D/A, interface para mem\u00f3ria RAM DDR, entre outros. \u00c9 um sistema \ncomputacional completo, explorando v\u00e1rias partes da \u00e1rea de arquitetura de \ncomputadores. Uma foto da placa pode ser vista na Figura 4.20.  \n\nO chip do FPGA inclu\u00eddo na placa \u00e9 o modelo Virtex-2 PRO (XC2VP30) (XILINX, \n2008) com 30816 blocos l\u00f3gicos program\u00e1veis (CLB), 136 multiplicadores de 18-bits, \n2448 Kb de mem\u00f3ria BRAM e dois processadores PowerPC integrados. \n\nDesse modo, tem-se definido para este trabalho a plataforma de hardware que ser\u00e1 \nutilizada para a prototipa\u00e7\u00e3o do sistema embarcado para a manuten\u00e7\u00e3o inteligente.  \n\nNa Figura 4.21, \u00e9 apresentada a arquitetura do sistema embarcado para prototipar o \nsistema de manuten\u00e7\u00e3o inteligente.  \n\nO sistema embarcado ser\u00e1 composto por um barramento de comunica\u00e7\u00e3o entre todos \nos componentes de hardware, um processador MicroBlaze (XILINX, 2003), mem\u00f3ria \nRAM para armazenar dados, interface de comunica\u00e7\u00e3o com usu\u00e1rio (porta serial) e \ninterface de E/S (para acionar atuadores ou ler sensores). Essa arquitetura foi \nprogramada no FPGA da placa de desenvolvimento, para configurar e formar o sistema \nembarcado necess\u00e1rio para os experimentos. \n\nO projeto do sistema embarcado foi realizado por meio da ferramenta XPS (Xilinx \nPlatform Studio) (XILINX, 2005c) desenvolvida pela Xilinx. Essa ferramenta \u00e9 \nespec\u00edfica para o projeto de sistemas embarcados utilizando plataformas com FPGA. \nPossibilita, de forma automatizada, a adi\u00e7\u00e3o ou remo\u00e7\u00e3o de componentes \ncomputacionais ao sistema, entre eles, processadores, barramentos, mem\u00f3rias, \n\n                                                 \n8 Digilent Inc. Products: http://www.digilentinc.com/Products/Detail.cfm?Prod=XUPV2P \n\n\n\n \n\n \n\n \n\n \n\n110 \n\nperif\u00e9ricos, etc. Ou seja, \u00e9 uma ferramenta para o desenvolvimento r\u00e1pido de sistemas \nembarcados que usa a tecnologia de FPGA, com softwares de simula\u00e7\u00e3o e teste, e uma \nvasta biblioteca de componentes de hardware \n\n \n\nFigura 4.20: Placa de desenvolvimento Digilent Virtex-2 PRO. \n\n \n\nFigura 4.21: Arquitetura do sistema embarcado para projetar o Sistema de Manuten\u00e7\u00e3o \nInteligente. \n\n\n\n \n\n \n\n \n\n \n\n111 \n\nJ\u00e1 que ser\u00e1 usado o SOE, optou-se por utilizar o microprocessador MicroBlaze como \npadr\u00e3o. O SOE adotado tem todos os drivers necess\u00e1rios aos dispositivos presentes na \nplataforma j\u00e1 validados e ser\u00e1 apresentado na pr\u00f3xima se\u00e7\u00e3o.  \n\nDesse modo, foi projetado um sistema embarcado (JESMAN ET AL., 2006) \ncentrado no uso do microprocessador MicroBlaze (XILINX, 2005b), acoplando os \nperif\u00e9ricos da placa a um barramento de comunica\u00e7\u00e3o de dados com base no padr\u00e3o \nOPB (On-chip Peripheral Bus) (XILINX, 2002) (XILINX, 2005d). Os seguintes \ncomponentes de hardware foram utilizados para o projeto da arquitetura do sistema \nembarcado: \n\n\u2022 Microprocessador MicroBlaze de 100MHz, com mem\u00f3ria cache de 8Kb. \n\n\u2022 M\u00f3dulo para debug, verifica\u00e7\u00e3o e grava\u00e7\u00e3o de dados na mem\u00f3ria. \n\n\u2022 Porta RS232 para comunica\u00e7\u00e3o serial e para interface com o usu\u00e1rio, \npermitindo comunica\u00e7\u00e3o com PC. \n\n\u2022 M\u00f3dulos de perif\u00e9ricos: leds, bot\u00f5es e chaves. \n\n\u2022 M\u00f3dulo de mem\u00f3ria SRAM com 512MB para programa e dados. \n\n\u2022 Timer de 32bits para o escalonamento do SOE. \n\n\u2022 Barramento de dados para perif\u00e9ricos OPB de 100MHz. \n\n\u2022 M\u00f3dulo de controle de interrup\u00e7\u00e3o. \n\n\u2022 M\u00f3dulo do hardware do SOM acoplado ao barramento OPB. \n\n\u2022 Entre outros m\u00f3dulos extras. \n\nOs perif\u00e9ricos conversores A/D e D/A est\u00e3o dispon\u00edveis na placa de \ndesenvolvimento, mas n\u00e3o foram utilizados nos experimentos no prot\u00f3tipo do sistema \nembarcado. \n\nNa Tabela 4.5, s\u00e3o apresentados os resultados de \u00e1rea total obtidos por meio da \ns\u00edntese do prot\u00f3tipo do sistema embarcado que foi projetado com base na Figura 4.21. \nEsses foram extra\u00eddos da ferramenta XPS (XILINX, 2005c). Na parte inferior da tabela, \ns\u00e3o apresentadas as taxas de utiliza\u00e7\u00e3o do FGPA na plataforma. Em m\u00e9dia foram \nutilizados 28% da \u00e1rea total.  \n\nNota-se que, nestes resultados, foram adicionados todos os circuitos extras \nnecess\u00e1rios para constru\u00e7\u00e3o do sistema embarcado. Na coluna par\u00e2metro, s\u00e3o \napresentada as \u00e1reas ocupadas por cada um dos cores utilizados.  \n\nTabela 4.5: Resultados de \u00e1rea total ocupada pelo sistema embarcado no FPGA. \n\nPar\u00e2metro Flip-flops Slices LUTS IOBS BRAMS \nsystem - - - 134 - \nmicroblaze 988 1344 2029 - 12 \nmb_opb 11 168 288 - - \ndebug_module 118 72 45 - - \nilmb 1 1 1 - - \ndlmb 1 1 1 - - \ndlmb_cntlr 1 3 5 - - \nilmb_cntlr 1 3 5 - - \n\n\n\n \n\n \n\n \n\n \n\n112 \n\nlmb_bram - - - - 4 \nrs232_uart 60 51 92 - - \nleds_4bit 50 37 29 - - \ndipsws_4bit 33 26 23 - - \npushbottons_5bit 36 29 23 - - \nddr_512mb 671 795 738 - - \nopb_timer 245 224 196 - - \nopb_intc 133 90 72 - - \nfsl_v20 7 22 44 - - \nsom_core 3406 2858 2775 - 26 \nTotal 5762 5724 6366 134 42 \n      \n\nDispon\u00edvel 27392 13696 27392 556 136 \nUtiliza\u00e7\u00e3o 21,04% 41,80% 23,25% 24% 30,90% \n\nO m\u00f3dulo do hardware do SOM desenvolvido neste projeto foi acoplado ao \nbarramento OPB e ser\u00e1 chamado som_core. Fez-se necess\u00e1rio criar um wrapper para \nintegrar o novo componente aos sinais e padr\u00f5es adotados pelo barramento. Essa \nintegra\u00e7\u00e3o visa possibilitar o acesso ao dispositivo pelas instru\u00e7\u00f5es de programa que \nser\u00e3o executadas pelo microprocessador.  \n\nO wrapper foi desenvolvido utilizando a ferramenta Peripheral Wizard do XPS \n(XILINX, 2002) (JESMAN ET AL., 2006), que visa auxiliar na constru\u00e7\u00e3o de \n\u201cesqueletos\u201d para integra\u00e7\u00e3o com padr\u00f5es de outros componentes. Durante a constru\u00e7\u00e3o \ndo wrapper, adotou-se a vincula\u00e7\u00e3o das entradas e sa\u00eddas do som_core em registradores \nmapeados em mem\u00f3ria. Assim, as escritas e leituras nos registradores servem para \ncontrolar os comandos de opera\u00e7\u00f5es do som_core e podem ser acessadas pelo software \natrav\u00e9s de um endere\u00e7o na mem\u00f3ria. \n\nNa Figura 4.22, \u00e9 apresentada a parte operativa do wrapper do som_core, que  \nintegra o hardware do SOM ao barramento OPB. Na figura, s\u00e3o apresentados os \nregistradores de dados, canais de comunica\u00e7\u00e3o, entradas e sa\u00eddas do dispositivo. \n\n \n\nFigura 4.22: Parte operativa do wrapper para integra\u00e7\u00e3o do som_core ao barramento \nOPB do sistema embarcado. \n\n\n\n \n\n \n\n \n\n \n\n113 \n\nForam utilizados quatro registradores de 32 bits mapeados em mem\u00f3ria para \ncontrolar o dispositivo: \n\n1. Registrador de Controle: registrador de leitura e escrita. Controla o sinal de \nSTART do SOM (para inicializar o funcionamento) e l\u00ea o sinal de PRONTO \ndo SOM (quando o c\u00e1lculo estiver conclu\u00eddo). Utiliza apenas dois bits. \n\n2. Registrador de Entrada (x): registrador somente de escrita. Escreve o sinal \nde entrada, armazenando os dados apresentados no barramento OPB no \nregistrador e apresenta o sinal na entrada x do SOM. Utiliza 32bits. \n\n3. Registrador de Sa\u00edda (BMU): registrador somente de leitura. L\u00ea os dados \ncoletados na sa\u00edda BMU do SOM. Utiliza 32bits. \n\n4. Registrador de Sa\u00edda (ERRO): registrador somente de leitura. L\u00ea os dados \ncoletados na sa\u00edda ERRO do SOM. Utiliza 32bits. \n\nOs sinais de RESET e CLOCK do SOM s\u00e3o vinculados aos demais sinais de \ncontrole do barramento OPB. \n\nAs escritas e leituras nos registradores que visam controlar o SOM s\u00e3o realizadas a \npartir do barramento OPB. S\u00e3o utilizados os canais de comunica\u00e7\u00e3o BUS2IP_Data \n(entradas) e IP2BUS_ Data (sa\u00eddas) para ler e escrever dados nos registradores de \n32bits. O canal de sele\u00e7\u00e3o dos registradores BUS2IP_WrCE (escrita) e  BUS2IP_RdCE \n(leitura) \u00e9 usado para selecionar qual registrador ser\u00e1 manipulado. \n\nNa Tabela 4.6, s\u00e3o apresentados os resultados de compara\u00e7\u00e3o da \u00e1rea ocupada entre \no hardware do SOM (Tabela 4.2) e o som_core. Os resultados foram obtidos pela \ns\u00edntese do prot\u00f3tipo do sistema embarcado completo, com base na Figura 4.21. Ocorreu \num aumento na \u00e1rea ocupada (overhead) pelo som_core em rela\u00e7\u00e3o ao SOM. Isso \u00e9 \ndevido \u00e0 adi\u00e7\u00e3o de componentes extras ao wrapper para integrar o componente ao \nbarramento OPB, possibilitando a intera\u00e7\u00e3o com os demais componentes do sistema \nembarcado. \n\nTabela 4.6: Resultados de \u00e1rea do hardware do SOM obtidos na s\u00edntese. \n\nPar\u00e2metro SOM SOM_CORE Overhead \nFlip-flops 2597 3406 31,15% \nSlices 2158 2858 32,44% \nLUTS 2664 2775 4,16% \nIOBS 79 - - \nBRAM 29 26 - 11,65% \n\nCom a integra\u00e7\u00e3o do hardware do SOM ao barramento OPB, foi criado o som_core. \nEste possibilita por meio do software embarcado acessar o dispositivo de hardware. \nPara isso, deve ser desenvolvido um driver que abstraia e oculte os comandos e as \ninstru\u00e7\u00f5es necess\u00e1rias para controlar, escrever e ler os registradores do novo dispositivo. \nEsse driver pode ou n\u00e3o ser integrado ao SOE. \n\nDe acordo com a metodologia de fluxo de projeto em FPGA, deveriam ser feitas \nsimula\u00e7\u00f5es temporais e an\u00e1lise de consumo de pot\u00eancia. Entretanto, devido \u00e0 \ndificuldade e ao grande custo computacional necess\u00e1rio, a etapa de simula\u00e7\u00e3o temporal \nn\u00e3o foi realizada. O principal motivo foi a utiliza\u00e7\u00e3o de componentes j\u00e1 validados e \ntestados na plataforma, n\u00e3o necessitando de uma nova simula\u00e7\u00e3o de todos eles. Como \n\n\n\n \n\n \n\n \n\n \n\n114 \n\nconsequ\u00eancia, a an\u00e1lise de consumo de pot\u00eancia tamb\u00e9m n\u00e3o foi realizada, pois utiliza \ndados resultantes da simula\u00e7\u00e3o temporal. \n\nAp\u00f3s a conclus\u00e3o do sistema embarcado na ferramenta XPS, pode-se gerar os dados \nde bitstream e programar o FPGA para funcionamento. Agora resta a etapa de \nconfigura\u00e7\u00e3o do software embarcado (SOE e aplica\u00e7\u00f5es) para ser carregado na mem\u00f3ria \ndo sistema.  \n\n4.5.2 Software do Sistema Embarcado \n\nO software utilizado para aplica\u00e7\u00f5es em sistemas embarcados \u00e9 fortemente \ninfluenciado pelas restri\u00e7\u00f5es exercidas pela plataforma de hardware utilizada. De \nacordo com (CARRO; WAGNER, 2003), o projeto de software embarcado deve atender \naos seguintes requisitos:  \n\n\u2022 Limite da mem\u00f3ria dispon\u00edvel: dependendo da aplica\u00e7\u00e3o e da plataforma de \nhardware, pode estar dispon\u00edvel mem\u00f3ria na ordem de apenas kilobytes (Kb) \npara programa e dados. Essa \u00e9 uma restri\u00e7\u00e3o muito forte, pois, caso \ncomparado com a disponibilidade de mem\u00f3ria \u201cinfinita\u201d por parte de \nsistemas desktop, a constru\u00e7\u00e3o de um software embarcado pode ser muito \ndif\u00edcil. Para alcan\u00e7ar essa redu\u00e7\u00e3o de mem\u00f3ria, o software deve apenas \ndesempenhar as tarefas m\u00ednimas exigidas pela aplica\u00e7\u00e3o. \n\n\u2022 Limite do desempenho do processador: devido a limita\u00e7\u00f5es impostas durante \na constru\u00e7\u00e3o do processador, como reduzir o consumo de pot\u00eancia e ocupar \nmenos \u00e1rea, o processador pode apresentar um desempenho muito inferior, \nse comparado a um desktop. Desse modo, tenta-se exigir um n\u00edvel maior de \nparalelismo no sistema, como por exemplo, em aplica\u00e7\u00f5es cl\u00e1ssicas de \nsistemas embarcados como processamento de imagens, automa\u00e7\u00e3o industrial, \ntelecomunica\u00e7\u00f5es, etc. \n\n\u2022 Limite no consumo de pot\u00eancia: est\u00e1 diretamente ligado aos dois requisitos \nanteriores. A quantidade e o desempenho da mem\u00f3ria dispon\u00edvel tem forte \nimpacto na pot\u00eancia, j\u00e1 que mem\u00f3rias mais r\u00e1pidas consomem mais energia. \nUm processador com frequ\u00eancia reduzida consome menos energia, mas pode \nn\u00e3o satisfazer o desempenho exigido pela aplica\u00e7\u00e3o. Dependendo da \naplica\u00e7\u00e3o, o consumo de pot\u00eancia pode ser o requisito mais importante a ser \ntratado, por exemplo, no caso de aparelhos port\u00e1teis como celulares e \nlaptops. \n\n\u2022 Maior custo de projeto do software: os requisitos anteriores influenciam nos \nrecursos de projeto dispon\u00edveis (ferramentas, linguagens, plataformas, etc.) \nque ser\u00e3o utilizados durante o desenvolvimento. As ferramentas n\u00e3o s\u00e3o \ntotalmente integradas em uma metodologia de engenharia de software, como \nnos sistemas convencionais. Al\u00e9m disso, as ferramentas para modelagem, \ncompiladores, debugers, programa\u00e7\u00e3o e as plataformas s\u00e3o muito distintas \ndas de softwares convencionais. Geralmente, o reuso de softwares \nconvencionais migrados para embarcados n\u00e3o \u00e9 trivial e demanda um esfor\u00e7o \nextra. Em raz\u00e3o disso, as aplica\u00e7\u00f5es embarcadas resultam em mais custos e \numa demanda maior de tempo durante o projeto do software. \n\nDevido \u00e0 complexidade do projeto de software embarcado, foi desenvolvida uma \nplataforma de software que objetiva criar uma camada de abstra\u00e7\u00e3o dos conceitos de \n\n\n\n \n\n \n\n \n\n \n\n115 \n\nhardware e facilitar a intera\u00e7\u00e3o do software com o hardware. Isso pode ser feito por \nmeio de uma camada de alto n\u00edvel que tem por fun\u00e7\u00e3o tratar cada aplica\u00e7\u00e3o como sendo \numa tarefa a ser executada pelo hardware. \n\nEsse software utilizado como camada de abstra\u00e7\u00e3o \u00e9 um Sistema Operacional \nEmbarcado (SOE) (SILBERSCHATZ, 2008) (CARRO; WAGNER, 2003). Ele \u00e9 \nclassificado como um software embarcado espec\u00edfico que tem alta intera\u00e7\u00e3o com o \nhardware. Al\u00e9m disso, \u00e9 composto por um conjunto de softwares implementados em \ndiferentes n\u00edveis de abstra\u00e7\u00e3o, desde a linguagem de m\u00e1quina at\u00e9 a de mais alto n\u00edvel. \n\nPor ser, geralmente, dedicado a aplica\u00e7\u00f5es embarcadas, o SOE tamb\u00e9m est\u00e1 sujeito \naos mesmos requisitos naturais exigidos pelos sistemas embarcados. \n\nConforme (SILBERSCHATZ, 2008)(CARRO; WAGNER, 2003), um SOE deve \nsuportar a execu\u00e7\u00e3o de m\u00faltiplos programas ou tarefas, apresentando, aparentemente, \numa execu\u00e7\u00e3o concorrente, em que cada programa em execu\u00e7\u00e3o \u00e9 abstra\u00eddo para uma \ntarefa sob o dom\u00ednio do sistema operacional. A seguir est\u00e3o algumas das vantagens do \nuso de um SOE: \n\n\u2022 Multitarefa e comunica\u00e7\u00e3o entre processos permitem que  as aplica\u00e7\u00f5es \nsejam particionadas em um conjunto menor e mais gerenci\u00e1vel. \n\n\u2022 Com particionamento do software, proporciona um teste f\u00e1cil, redu\u00e7\u00e3o do \ntempo de projeto e reuso de c\u00f3digo. \n\n\u2022 No c\u00f3digo da aplica\u00e7\u00e3o, podem-se utilizar diversas plataformas de software \npara programa\u00e7\u00e3o, como linguagens C/C++, POSIX, JAVA, etc. \n\n\u2022 Temporiza\u00e7\u00e3o e sequenciamento podem ser removidos do c\u00f3digo da \naplica\u00e7\u00e3o e passam a ser responsabilidade do sistema operacional, incluindo \nmais transpar\u00eancia ao desenvolvedor. \n\n\u2022 Garantia no atendimento de deadlines em processos cr\u00edticos da aplica\u00e7\u00e3o. \n\nSegundo (SILBERSCHATZ, 2008)(CARRO; WAGNER, 2003), para fornecer as \nfuncionalidades de um SOE, o sistema operacional deve prover alguns servi\u00e7os para as \naplica\u00e7\u00f5es, entre eles: \n\n\u2022 Ger\u00eancia de processos: inclui aspectos como a cria\u00e7\u00e3o, carga e o controle da \nexecu\u00e7\u00e3o de processos (escalonamento). \n\n\u2022 Comunica\u00e7\u00e3o entre processos: deve fornecer servi\u00e7os de sincroniza\u00e7\u00e3o, \ndetec\u00e7\u00e3o, tratamento de deadlocks e mecanismos de trocas de mensagens. \nIsso visa esconder detalhes de mais baixo n\u00edvel da infraestrutura de \ncomunica\u00e7\u00e3o da aplica\u00e7\u00e3o. \n\n\u2022 Ger\u00eancia de mem\u00f3ria: inclui a cria\u00e7\u00e3o, remo\u00e7\u00e3o e prote\u00e7\u00e3o de dados \nmanipulados pelo sistema. \n\n\u2022 Ger\u00eancia de E/S: \u00e9 respons\u00e1vel pelo controle de comunica\u00e7\u00e3o com \nperif\u00e9ricos e o tratamento de interrup\u00e7\u00f5es do hardware. Tamb\u00e9m deve \noferecer drivers para perif\u00e9ricos, escondendo detalhes das interfaces e da \ninfraestrutura do hardware da aplica\u00e7\u00e3o. \n\nUm SOE, al\u00e9m de oferecer os servi\u00e7os j\u00e1 vistos, deve tamb\u00e9m atender requisitos \ntemporais associados \u00e0 execu\u00e7\u00e3o de processos, tais como deadline, execu\u00e7\u00e3o de \nprocessos peri\u00f3dicos, escalonamento previs\u00edvel e baixa lat\u00eancia. Esses requisitos \n\n\n\n \n\n \n\n \n\n \n\n116 \n\ndependem da aplica\u00e7\u00e3o exigir tratamentos de recursos de tempo real \n(SILBERSCHATZ, 2008).  \n\nA principal consequ\u00eancia das restri\u00e7\u00f5es temporais est\u00e1 no escalonamento de tarefas, \npois em um SOE, as tarefas t\u00eam prioridades associadas para garantir o atendimento das \nrestri\u00e7\u00f5es temporais, al\u00e9m de serem preemptivas. A quest\u00e3o das prioridades \u00e9 crucial em \nsistemas temporais, caso uma prioridade n\u00e3o seja atendida em tempo h\u00e1bil, pode ocorrer \no vencimento do deadline e, dependendo da aplica\u00e7\u00e3o, causar danos s\u00e9rios na aplica\u00e7\u00e3o.  \n\nOs sistemas embarcados est\u00e3o inseridos nas mais diversas aplica\u00e7\u00f5es do cotidiano \nhumano, como avi\u00f5es, carros, eletrodom\u00e9sticos, celulares, instrumentos m\u00e9dicos, etc. \nEsses sistemas s\u00e3o caracterizados por serem limitados fisicamente pela mem\u00f3ria \nreduzida, consumo de pot\u00eancia, interfaces n\u00e3o-amig\u00e1veis, desempenho reduzido, etc. \nEm geral, todos esses sistemas utilizam algum SOE, que al\u00e9m de ser limitado \nfisicamente pelo hardware, \u00e9 respons\u00e1vel por toda a execu\u00e7\u00e3o dos softwares da \naplica\u00e7\u00e3o. \n\nNeste trabalho, foi adotado o SOE, conhecido como PetaLinux9, para ser utilizado \ncomo plataforma de software no sistema embarcado para o Sistema de Manuten\u00e7\u00e3o \nInteligente. \n\n4.5.2.1 Sistema Operacional PetaLinux \n\nO PetaLinux (WILLIAMS; PETALOGIX, 2008) \u00e9 um sistema operacional para \naplica\u00e7\u00f5es embarcadas (SOE) que trata restri\u00e7\u00f5es como mem\u00f3ria dispon\u00edvel e \ndesempenho de processamento.  \n\nO PetaLinux \u00e9 um sistema operacional para processadores de pequeno desempenho \ne para executar sobre a arquitetura do processador MicroBlaze em FPGA. Os requisitos \nm\u00ednimos de hardware exigidos para execu\u00e7\u00e3o do PetaLinux s\u00e3o: \n\n\u2022 Processador MicroBlaze em FPGA. \n\n\u2022 Timer. \n\n\u2022 Controlador de interrup\u00e7\u00e3o. \n\n\u2022 Dispositivo de entrada e sa\u00edda padr\u00e3o (RS-232). \n\n\u2022 Mem\u00f3ria RAM. \n\n\u2022 Mem\u00f3ria FLASH (opcional). \n\nPetaLinux tem sua origem no sistema operacional GNU/Linux, sendo uma \ncustomiza\u00e7\u00e3o do sistema operacional para sistemas embarcados uCLinux10. A principal \ncaracter\u00edstica desse projeto est\u00e1 na execu\u00e7\u00e3o sobre microprocessadores sem Unidade de \nGerenciamento de Mem\u00f3ria (MMU \u2013 Memory Management Unit) e o tamanho reduzido \nda imagem do kernel. \n\nComo o PetaLinux \u00e9 baseado nos padr\u00f5es de opera\u00e7\u00e3o do GNU/Linux e originou-se \ndo uCLinux, o kernel do sistema continua sendo licenciado como solu\u00e7\u00e3o de software \nlivre e de c\u00f3digo-fonte aberto. Contudo, \u00e9 importante notar que os scripts para \n\n                                                 \n9 Site oficial do projeto PetaLinux - www.petalogix.com  \n10 Site oficial do projeto uCLinux - www.uclinux.org  \n\n\n\n \n\n \n\n \n\n \n\n117 \n\nconfigura\u00e7\u00e3o e compila\u00e7\u00e3o do kernel s\u00e3o propriet\u00e1rios da empresa que administra o \nPetaLinux, n\u00e3o permitindo a modifica\u00e7\u00e3o destes. \n\nAl\u00e9m de ser um sistema operacional, o PetaLinux \u00e9 uma plataforma de projeto de \nsoftware para sistemas embarcados, integrando um SOE a uma plataforma de hardware \nbaseada em FPGA. Como em um FPGA o hardware pode ser customizado ao gosto do \nprojetista, o PetaLinux pode customizar o sistema operacional para as necessidades de \ncada sistema embarcado projetado. \n\nDesse modo, o PetaLinux \u00e9 integrado na ferramenta XPS, visto na se\u00e7\u00e3o anterior, \npara o projeto do hardware do sistema embarcado. Essa integra\u00e7\u00e3o permite configurar \nos par\u00e2metros do sistema operacional de acordo com os requisitos do sistema \nembarcado projetado.  \n\nDe acordo com o tutorial (WILLIAMS; PETALOGIX, 2008), o XPS \u00e9 uma \nferramenta voltada para o hardware em torno do FPGA, ele apresenta como sa\u00edda para \no PetaLinux um arquivo com as configura\u00e7\u00f5es do hardware e do software (sistema \noperacional). Esse arquivo deve ser utilizado durante a compila\u00e7\u00e3o da imagem do \nkernel, dentro do ambiente do PetaLinux, uma vez disponibilizada informa\u00e7\u00f5es, como \nquais componentes de hardware s\u00e3o utilizados, seus endere\u00e7os de mapeamento, \nmem\u00f3ria dispon\u00edvel, configura\u00e7\u00e3o de timer e clock, configura\u00e7\u00e3o de entrada e sa\u00edda \npadr\u00e3o, entre outros. \n\nA plataforma do PetaLinux deve ser instalada em ambiente GNU/Linux, para o \ndesenvolvimento das aplica\u00e7\u00f5es, da configura\u00e7\u00e3o, compila\u00e7\u00e3o da imagem do kernel, dos \nlinks para bibliotecas do kernel e bibliotecas-padr\u00e3o. Ademais, fornece as ferramentas \ncl\u00e1ssicas de programa\u00e7\u00e3o, como compilador, debuger e editor de c\u00f3digo-fonte.  \n\nNo PetaLinux, \u00e9 fornecido um ambiente de desenvolvimento cross compiler, que \npossibilita compilar softwares de uma paltaforma-alvo diferente daquela utilizada para \ncompila\u00e7\u00e3o. A partir de um PC rodando GNU/Linux, pode-se compilar softwares para \nMicroBlaze. Isso \u00e9 importante para compilar a imagem do kernel e tamb\u00e9m para o \ndesenvolvimento das aplica\u00e7\u00f5es.  \n\nAp\u00f3s uma breve apresenta\u00e7\u00e3o da plataforma do PetaLinux, agora o foco s\u00e3o as \nparticularidades do sistema operacional adotado (YAGHMOUR, 2008) (NIKKANEN, \n2003) (NAGARAJAN; ASOKAN, 2007). O PetaLinux tem herdado muitas \ncaracter\u00edsticas do GNU/Linux convencional, como a pilha TCP/IP e os diversos \nprotocolos de comunica\u00e7\u00e3o. Tamb\u00e9m suporta diversos sistemas de arquivos, al\u00e9m dos \nespeciais para sistemas embarcados. O PetaLinux foi projetado para manter \ncompatibilidade com as aplica\u00e7\u00f5es desenvolvidas nos padr\u00f5es do GNU/Linux. \n\nPara manter o n\u00edvel de compatibilidade das aplica\u00e7\u00f5es do PetaLinux com o \nGNU/Linux convencional, \u00e9 utilizada uma vers\u00e3o reduzida das bibliotecas-padr\u00e3o do C \n(conhecida por libc) utilizada pelo GNU/Linux convencional. Desse modo, foi utilizada \nno PetaLinux a biblioteca uClibc (com origem do uClinux), que mant\u00e9m \ncompatibilidade com o padr\u00e3o de arquitetura do GNU/Linux e foi projetada para ocupar \nmenos espa\u00e7o e suportar processadores sem MMU. Com isso, o PetaLinux proporciona \naos desenvolvedores reutilizarem aplica\u00e7\u00f5es j\u00e1 desenvolvidas, seguindo o mesmo \npadr\u00e3o POSIX do GNU/Linux. \n\nAs duas principais diferen\u00e7as do PetaLinux comparando-o com o GNU/Linux \nconvencional \u00e9 a aus\u00eancia de MMU e o tamanho da imagem do kernel. Todavia, a \n\n\n\n \n\n \n\n \n\n \n\n118 \n\nprincipal vantagem que o PetaLinux oferece em rela\u00e7\u00e3o ao GNU/Linux \u00e9 o tamanho da \nimagem do kernel (YAGHMOUR, 2008).  \n\nA imagem do kernel \u00e9 um arquivo que armazena todas as instru\u00e7\u00f5es do kernel \ncompilado em um formato compactado. Por exemplo, um kernel compilado somente \ncom as op\u00e7\u00f5es necess\u00e1rias para uma arquitetura de um processador, sistema de arquivos \ne dispositivos perif\u00e9ricos, pode ocupar aproximadamente 400 KBytes de mem\u00f3ria. Ap\u00f3s \no boot, a imagem final do kernel (incluindo as aplica\u00e7\u00f5es) j\u00e1 carregada na mem\u00f3ria, \npode ocupar aproximadamente 2MB da mem\u00f3ria. \n\nAp\u00f3s a compila\u00e7\u00e3o e gerada a imagem do kernel, o arquivo da imagem deve ser \ncarregado e gravado na mem\u00f3ria do sistema embarcado para inicializar o processo de \nboot.  \n\nPara o estudo de caso adotado no presente trabalho, a imagem do kernel \u00e9 carregada \ne gravada diretamente no espa\u00e7o da mem\u00f3ria RAM. O m\u00e9todo mais simples para \nefetuar boot \u00e9 executar diretamente a imagem do kernel no espa\u00e7o de mem\u00f3ria. Para \nisso, \u00e9 preciso endere\u00e7ar o fluxo de execu\u00e7\u00e3o do processador para a primeira instru\u00e7\u00e3o \ndo kernel. Pode-se correr o risco de todas as configura\u00e7\u00f5es de inicializa\u00e7\u00e3o do hardware \nn\u00e3o serem realizadas antes da execu\u00e7\u00e3o do kernel. Esse m\u00e9todo pode ser utilizado \nquando uma mem\u00f3ria n\u00e3o-vol\u00e1til (FLASH), para armazenar a imagem do kernel, assim \ncomo um bootloader, estiverem indispon\u00edveis.  \n\nOutro m\u00e9todo de boot pode ser por meio de um pequeno programa, conhecido por \nbootloader, que \u00e9 uma op\u00e7\u00e3o mais segura e flex\u00edvel. Este \u00e9 o primeiro programa a ser \nexecutado pelo processador e trata com anteced\u00eancia as configura\u00e7\u00f5es de inicializa\u00e7\u00e3o \ndo hardware, al\u00e9m de carregar a imagem do kernel para a mem\u00f3ria, a partir de uma \nmem\u00f3ria n\u00e3o-vol\u00e1til, link de Internet, porta serial, etc. Existem diversos programas \nutilizados como bootloader, cada um com suas vantagens e desvantagens. Esses \nprogramas exigem um espa\u00e7o de armazenamento muito pequeno e possibilitam uma \nseguran\u00e7a maior durante a inicializa\u00e7\u00e3o do sistema operacional (YAGHMOUR, 2008). \n\nComo neste trabalho foi adotado utilizar o m\u00e9todo mais simples de boot, um \ninconveniente foi detectado. Em cada instante que o hardware \u00e9 energizado, uma nova \nrecarga da imagem do kernel para mem\u00f3ria RAM se torna necess\u00e1rio. Ent\u00e3o, nesse \ncaso, foi utilizada a ferramenta XPS para desempenhar essa tarefa.  \n\nDurante o projeto do sistema embarcado, foi utilizado um m\u00f3dulo para debug do \nprocessador (debug_module), que possibilita ler e escrever todos os registradores, \nexecutar instru\u00e7\u00f5es diretamente no processador e acessar a mem\u00f3ria. Por meio dessa \nferramenta, a imagem do kernel \u00e9 carregada para a posi\u00e7\u00e3o de mem\u00f3ria configurada \ncomo in\u00edcio do sistema operacional. Ap\u00f3s, o registrador PC (Program Counter) do \nprocessador \u00e9 modificado para apontar para o endere\u00e7o onde est\u00e3o as instru\u00e7\u00f5es de \ninicio da imagem do kernel. Desse modo, o boot do sistema operacional PetaLinux \nneste trabalho \u00e9 executado. \n\nComo o boot \u00e9 o primeiro programa executado pelo processador, \u00e9 respons\u00e1vel por \ndescompactar a imagem do kernel, carreg\u00e1-la para a mem\u00f3ria e iniciar a execu\u00e7\u00e3o. \nDurante o boot, s\u00e3o realizadas uma s\u00e9rie de tarefas importantes de preparo do hardware \npara a execu\u00e7\u00e3o correta do sistema operacional. \n\nA inicializa\u00e7\u00e3o do kernel no PetaLinux segue o mesmo padr\u00e3o de funcionamento do \nboot do GNU/Linux convencional. Durante o carregamento do sistema, a execu\u00e7\u00e3o visa \ndetectar e inicializar todos os dispositivos de hardware. Ser\u00e3o configuradas as rotinas \n\n\n\n \n\n \n\n \n\n \n\n119 \n\nde tratamento de interrup\u00e7\u00f5es e carga dos drivers de dispositivos de hardware \n(YAGHMOUR, 2008).  \n\nAp\u00f3s a configura\u00e7\u00e3o do hardware \u00e9 carregado o m\u00f3dulo de execu\u00e7\u00e3o dos scripts de \ninicializa\u00e7\u00e3o (programas de configura\u00e7\u00e3o do software), que s\u00e3o executados apenas uma \nvez durante o boot. A \u00faltima etapa do boot \u00e9 executar os scripts para carga de \naplica\u00e7\u00f5es nativas do sistema, que s\u00e3o programas importantes para colocar o dispositivo \nem ambiente de trabalho, por exemplo, montar as parti\u00e7\u00f5es de sistemas de arquivos, \nconfigurar a interface de rede e executar as aplica\u00e7\u00f5es do usu\u00e1rio. \n\nAp\u00f3s a execu\u00e7\u00e3o de todo o processo de boot, o sistema est\u00e1 pronto para ser utilizado \ncomo um ambiente de trabalho para a aplica\u00e7\u00e3o. Entretanto, para que isso se consolide, \nalgumas etapas precisam ser esclarecidas, como o sistema de arquivos \u00e9 utilizado e \ncomo s\u00e3o desenvolvidas as aplica\u00e7\u00f5es para o sistema. \n\nO PetaLinux suporta diversos sistemas de arquivos padr\u00f5es em ambientes \nGNU/Linux, al\u00e9m de incluir os especiais para sistemas embarcados. Geralmente, em um \nsistema embarcado, \u00e9 utilizado uma combina\u00e7\u00e3o de diferentes unidades de \narmazenamento, com mem\u00f3ria FLASH, RAM e discos r\u00edgidos. Isso exige utilizar um \nsistema de arquivos espec\u00edfico para cada unidade de armazenamento. \n\nDurante a execu\u00e7\u00e3o dos scripts para carga de aplica\u00e7\u00f5es nativas pelo boot do \nsistema, \u00e9 criado e montado um sistema de arquivos cl\u00e1ssicos em ambientes \nGNU/Linux, o RAMFS. O RAMFS (YAGHMOUR, 2008). \u00e9 um sistema de arquivos \npara mem\u00f3ria RAM, que cria uma parti\u00e7\u00e3o de dados cont\u00edguos no espa\u00e7o de mem\u00f3ria \nap\u00f3s o endere\u00e7o final do kernel. A parti\u00e7\u00e3o \u00e9 criada utilizando o sistema de arquivos do \ntipo ext2, muito comum em ambientes GNU/Linux. O ext2 \u00e9 um sistema de arquivos \nsimples, eficiente, com alto desempenho e tem suporte a links entre os arquivos.  \n\nA parti\u00e7\u00e3o RAMFS geralmente \u00e9 utilizada para armazenar arquivos de logs \n(hist\u00f3ricos) produzidos pelas aplica\u00e7\u00f5es e como espa\u00e7o de arquivos para o usu\u00e1rio. A \nconfigura\u00e7\u00e3o da parti\u00e7\u00e3o \u00e9 feita antes da compila\u00e7\u00e3o do kernel, quando \u00e9 ajustado o \ntamanho da parti\u00e7\u00e3o. Como neste estudo de caso n\u00e3o est\u00e1 dispon\u00edvel uma mem\u00f3ria \nFLASH, apenas uma mem\u00f3ria RAM, a parti\u00e7\u00e3o RAMFS foi adotada como sistema de \narquivos-padr\u00e3o neste trabalho. \n\nCom a parti\u00e7\u00e3o de usu\u00e1rio dispon\u00edvel para uso, pode-se desenvolver e executar os \nsoftwares de aplica\u00e7\u00e3o do usu\u00e1rio e utilizar normalmente a parti\u00e7\u00e3o como uma unidade \nde armazenamento.  \n\nO desenvolvimento das aplica\u00e7\u00f5es do usu\u00e1rio deve ser feito antes da compila\u00e7\u00e3o do \nkernel, pois s\u00e3o inseridas dentro da imagem gerada.  \n\nA plataforma do PetaLinux (WILLIAMS; PETALOGIX, 2008) disponibiliza um \nambiente de building completo para desenvolvimento de softwares para aplica\u00e7\u00f5es, que \npodem utilizar todos os recursos dispon\u00edveis pelas bibliotecas (uclibc) e pelo sistema \noperacional, como processamento multitarefas, reutiliza\u00e7\u00e3o de outros programas ou \npartes de c\u00f3digo, etc. \n\nNo entanto, \u00e9 preciso aten\u00e7\u00e3o especial ao desenvolver as aplica\u00e7\u00f5es, devido \u00e0 \naus\u00eancia de MMU no PetaLinux. Essa caracter\u00edstica influencia diretamente o trabalho \ndo programador. \n\nConforme (SILBERSCHATZ, 2008) o MMU, quando dispon\u00edvel, \u00e9 utilizado pelo \nsistema operacional para realizar o mapeamento em tempo de execu\u00e7\u00e3o dos endere\u00e7os \n\n\n\n \n\n \n\n \n\n \n\n120 \n\nl\u00f3gicos (endere\u00e7o gerado por instru\u00e7\u00f5es) para f\u00edsicos (endere\u00e7os na mem\u00f3ria f\u00edsica). \nAssim, na associa\u00e7\u00e3o de endere\u00e7os em tempo de execu\u00e7\u00e3o, os endere\u00e7os l\u00f3gicos e \nf\u00edsicos s\u00e3o diferentes. O MMU faz essa convers\u00e3o transparente para o programador.  \n\nComo neste trabalho foi adotado o processador MicroBlaze (XILINX, 2003), que \nn\u00e3o tem MMU, a associa\u00e7\u00e3o de endere\u00e7os \u00e9 feita em tempo de compila\u00e7\u00e3o. Desse \nmodo, a associa\u00e7\u00e3o de endere\u00e7os l\u00f3gicos e f\u00edsicos tem valores id\u00eanticos.  \n\nQuando o m\u00f3dulo de MMU est\u00e1 dispon\u00edvel, este fornece um n\u00edvel de prote\u00e7\u00e3o para \nas aplica\u00e7\u00f5es executadas e cria um modelo de mem\u00f3ria virtual (SILBERSCHATZ, \n2008). Prov\u00ea uma t\u00e9cnica para proteger o sistema operacional contra aplica\u00e7\u00f5es do \nusu\u00e1rio e protege as pr\u00f3prias aplica\u00e7\u00f5es dos usu\u00e1rios umas das outras. Isso melhora o \ngerenciamento dos recursos de mem\u00f3ria, criando a ideia de a mem\u00f3ria ser \u201cilimitada e \n\u00fanica\u201d, al\u00e9m de o gerenciamento do uso da mem\u00f3ria ser totalmente transparente ao \nprogramador.  \n\nQuando o m\u00f3dulo de MMU est\u00e1 indispon\u00edvel, os recursos de mem\u00f3ria se tornam \nescassos e o gerenciamento se torna muito mais custoso e de alta responsabilidade por \nparte do programador (SILBERSCHATZ, 2008). Ent\u00e3o, quando se trabalha sem a \nMMU, significa que todos os programas da mem\u00f3ria est\u00e3o literalmente mapeados em \numa sequ\u00eancia f\u00edsica no espa\u00e7o de mem\u00f3ria. Isso \u00e9 chamado de modelo de mem\u00f3ria \nflat, em que os dados s\u00e3o gravados em um espa\u00e7o linear e acessados diretamente pelo \nendere\u00e7o. Este \u00e9 um m\u00e9todo simples de mapeamento, comparando com os modelos de \npagina\u00e7\u00e3o ou segmentados.  \n\nNesse caso, n\u00e3o existe prote\u00e7\u00e3o por parte do sistema operacional ao espa\u00e7o de \nmem\u00f3ria. Por exemplo, um ponteiro para um endere\u00e7o inv\u00e1lido da mem\u00f3ria acessado \npor uma aplica\u00e7\u00e3o do usu\u00e1rio pode causar um erro no endere\u00e7amento e corromper o \nfluxo de execu\u00e7\u00e3o do processador ou paralisar a execu\u00e7\u00e3o. Ou ainda uma aplica\u00e7\u00e3o \npode acessar espa\u00e7o de mem\u00f3ria de outra aplica\u00e7\u00e3o e corromper os dados. \n\nEsses exemplos mostram a import\u00e2ncia que o programador tem com o teste correto \ndo c\u00f3digo-fonte implementado antes de validar aplica\u00e7\u00e3o. Esses problemas podem \nacontecer porque o sistema operacional permite que a aplica\u00e7\u00e3o possa acessar qualquer \nendere\u00e7o no espa\u00e7o de mem\u00f3ria e modific\u00e1-lo, o que pode prejudicar o fluxo de \nexecu\u00e7\u00e3o do sistema. \n\nComo neste estudo a MMU n\u00e3o est\u00e1 dispon\u00edvel. Em fun\u00e7\u00e3o desse requisito, deve-se \nmudar o paradigma de programa\u00e7\u00e3o das aplica\u00e7\u00f5es, pois exige modifica\u00e7\u00f5es e \nadapta\u00e7\u00f5es a algumas chamadas ao sistema e, claro, o programador se torna respons\u00e1vel \npelo gerenciamento do uso da mem\u00f3ria. \n\nQuando for reutilizar softwares que se originaram em sistemas com MMU, as partes \ndo c\u00f3digo-fonte, que utilizam aloca\u00e7\u00e3o din\u00e2mica de mem\u00f3ria, devem obrigatoriamente \ngarantir que todos os espa\u00e7os de mem\u00f3ria alocados sejam desalocados e, dependendo do \ncaso, at\u00e9 mesmo essas partes do c\u00f3digo devem ser reprogramadas.  \n\nNas pr\u00f3ximas se\u00e7\u00f5es, ser\u00e3o abordados o desenvolvimento do software da aplica\u00e7\u00e3o \ndo Sistema de Manuten\u00e7\u00e3o Inteligente utilizando a plataforma do PetaLinux. \n\n4.5.2.2 Integra\u00e7\u00e3o do som_core ao PetaLinux \n\nNo sistema embarcado para o Sistema de Manuten\u00e7\u00e3o Inteligente visto na Figura \n4.21, o componente som_core precisa ser integrado ao sistema operacional PetaLinux. \n\n\n\n \n\n \n\n \n\n \n\n121 \n\nEssa integra\u00e7\u00e3o \u00e9 feita pelo desenvolvimento de um device driver (YAGHMOUR, \n2008), que tem por fun\u00e7\u00e3o tornar transparente, para o programador, os acessos de \ncontrole do hardware. De acordo com o componente som_core apresentado na Figura \n4.22, s\u00e3o utilizados quatro registradores mapeados em mem\u00f3ria (XILINX, 2005d). Estes \ncontrolam e armazenam os resultados de opera\u00e7\u00e3o do dispositivo. \n\nO device driver tem que operar o componente som_core por meio de escrita e leitura \nnos registradores. As seguintes opera\u00e7\u00f5es precisam ser realizadas para controlar o \ncomponente: \n\n1. START: a entrada de dados \u00e9 feita mediante escrita no Registrador de \nControle, que comandar\u00e1 o sinal de START do SOM (para inicializar o \nfuncionamento do componente). \u00c9 utilizado o bit 0 (menos significativo). \n\n2. PRONTO: a sa\u00edda de dados \u00e9 feita mediante leitura do Registrador de \nControle, que armazenar\u00e1 o sinal de PRONTO do SOM (fim de opera\u00e7\u00e3o e \nresultado dispon\u00edvel). \u00c9 utilizado o bit 1 (menos significativo). \n\n3. X: a entrada de dados (elementos dos vetores de entrada) \u00e9 feita mediante \nescrita no Registrador de Entrada (x), que armazenar\u00e1 o dado a ser \napresentado ao sinal x do SOM (carregar vetores de entrada). \n\n4. BMU: a sa\u00edda de dados, como resultado do SOM, \u00e9 feita mediante leitura \ndo Registrador de Sa\u00edda (BMU) do SOM (\u00edndice do neur\u00f4nio vencedor). \n\n5. ERRO: a sa\u00edda de dados, como resultado do SOM, \u00e9 feita mediante leitura \ndo Registrador de Sa\u00edda (ERRO) do SOM (erro de quantiza\u00e7\u00e3o). \n\n6. RESET: a entrada de dados \u00e9 feita mediante a execu\u00e7\u00e3o de comando no \nbarramento OPB, que enviar\u00e1 o sinal de RESET para o SOM (para \nreinicializar o componente). \n\nDo ponto de vista do programador, o device driver deve fornecer fun\u00e7\u00f5es em \nsoftware, desenvolvidos em linguagem C, para que possa desempenhar as tarefas de \ncontrole das opera\u00e7\u00f5es do componente. Isso possibilita ao programador trabalhar com \nos sinais de tratamento do dispositivo de um modo mais transparente e em alto n\u00edvel. \n\nNa Tabela 4.7, s\u00e3o apresentadas as fun\u00e7\u00f5es do device driver desenvolvidas em \nlinguagem C, que devem ser utilizadas para programa\u00e7\u00e3o de aplica\u00e7\u00f5es dentro do \nambiente do PetaLinux. Nota-se que todas as fun\u00e7\u00f5es t\u00eam uma entrada em comum, o \nendere\u00e7o-base com a posi\u00e7\u00e3o do componente do SOM na mem\u00f3ria. \n\nTabela 4.7: Fun\u00e7\u00f5es implementadas em linguagem C do device driver. \n\nFun\u00e7\u00e3o Entrada Sa\u00edda Defini\u00e7\u00e3o \nSOM_CORE_start  Valor do sinal \n\npara start \nValor no \nregistrador, \nbit (0) \n\nProgramar o sinal de in\u00edcio de \nfuncionamento do dispositivo \n\nSOM_CORE_reset  - - Programar o sinal para \nreinicializar o dispositivo \n\nSOM_CORE_readStatus  - Valor no \nregistrador, \nbit(1) \n\nLer sinal de fim de \nfuncionamento e dados \nprontos para a leitura \n\nSOM_CORE_writeX  Valor de um \nelemento do \n\n- Inserir elemento do vetor de \nentrada no dispositivo \n\n\n\n \n\n \n\n \n\n \n\n122 \n\nvetor x \nSOM_CORE_compute  Ponteiro de \n\nmem\u00f3ria para o \nin\u00edcio do vetor \nde entrada x \n\n- Realiza todo o c\u00e1lculo do \nalgoritmo do SOM, inserindo \no vetor de entrada no \ndispositivo, e aguarda o fim \ndos c\u00e1lculos at\u00e9 o resultado \n\nSOM_CORE_readBMU  - Valor do \nBMU \n\nLer o valor na sa\u00edda do BMU \n\nSOM_CORE_readError  - Valor do \nERRO \n\nLer o valor na sa\u00edda do ERRO \n\nDentre as fun\u00e7\u00f5es, a \u00fanica que n\u00e3o realiza exclusivamente escrita ou leitura dos \nregistradores \u00e9 a fun\u00e7\u00e3o SOM_CORE_compute. Essa fun\u00e7\u00e3o realiza a carga do vetor de \nentrada do SOM e controla a opera\u00e7\u00e3o de separar cada elemento do vetor de entrada. O \nalgoritmo implementado em linguagem C \u00e9 apresentado a seguir: \n\nchar SOM_CORE_compute(Xuint32 BaseAddress, Xuint32 *x){ \nint i,k; \nXuint32 ready; \n//NEURONS - constante que representa a quantidade de neur\u00f4nios do SOM \n//SIZE - constante de dimens\u00e3o do vetor de entrada \nfor (k=0; k<NEURONS; k++){ //la\u00e7o para varrer todos os neur\u00f4nios \n\n for (i=0; i<SIZE; i++){ //la\u00e7o para varrer elementos do vetor \nSOM_CORE_writeX(BaseAddress, x[i]); //apresenta vetor ao SOM \n\n } \n} \n//Verificar o sinal de finaliza\u00e7\u00e3o do c\u00e1lculo, aguardando hardware \nready = SOM_CORE_readStatus(BaseAddress); \nwhile (!ready){ \n\n ready = SOM_CORE_readStatus(BaseAddress); \n} \nreturn 0; \n\n} \nPor meio dessas fun\u00e7\u00f5es do device driver, que integram o som_core ao sistema \n\noperacional PetaLinux, \u00e9 poss\u00edvel fazer o desenvolvimento de aplica\u00e7\u00f5es. Isso ser\u00e1 visto \nna pr\u00f3xima se\u00e7\u00e3o.  \n\n4.5.2.3 Projeto da aplica\u00e7\u00e3o  \n\nPara o desenvolvimento da aplica\u00e7\u00e3o, est\u00e3o dispon\u00edveis todos os recursos que um \nambiente GNU/Linux oferece, proporcionando maior flexibilidade ao programador. \n\nNeste trabalho, a aplica\u00e7\u00e3o n\u00e3o tem apenas a finalidade de implementar um estudo \nde caso para o Sistema de Manuten\u00e7\u00e3o Inteligente, mas tamb\u00e9m apresentar um caso \nconcreto de como utilizar o device driver dentro de uma aplica\u00e7\u00e3o no PetaLinux.  \n\nNo contexto do Sistema de Manuten\u00e7\u00e3o Inteligente, visou-se implementar uma \naplica\u00e7\u00e3o que utilize o som_core para detectar e diagnosticar falhas. A aplica\u00e7\u00e3o pode \nrealizar ao mesmo tempo a detec\u00e7\u00e3o e o diagn\u00f3stico de falhas, mas depende dos dados \nutilizados para o treinamento do SOM. \n\nDevido \u00e0 caracter\u00edstica do som_core, a base de treinamento da rede neural pode ser \nsomente para detec\u00e7\u00e3o ou diagn\u00f3stico. Assim, a aplica\u00e7\u00e3o ter\u00e1 como sa\u00edda apenas um \ndos casos. Portanto, para a aplica\u00e7\u00e3o realizar a detec\u00e7\u00e3o, o som_core deve ser treinado \ncom dados que visam a detec\u00e7\u00e3o, e para diagn\u00f3stico, treinado com dados que visam o \ndiagn\u00f3stico. \n\n\n\n \n\n \n\n \n\n \n\n123 \n\nUma sugest\u00e3o para realizar as duas opera\u00e7\u00f5es ao mesmo tempo, seria existirem no \nsom_core duas redes neurais, uma para detec\u00e7\u00e3o e outra para diagn\u00f3stico. Nesse caso, a \naplica\u00e7\u00e3o poderia extrair as duas informa\u00e7\u00f5es juntamente. \n\nDo ponto de vista da aplica\u00e7\u00e3o, o que diferencia a detec\u00e7\u00e3o do diagn\u00f3stico s\u00e3o \napenas as sa\u00eddas utilizadas do som_core. A implementa\u00e7\u00e3o da aplica\u00e7\u00e3o pode ser \u00fanica, \npois o custo computacional para detec\u00e7\u00e3o ou classifica\u00e7\u00e3o \u00e9 igual, j\u00e1 que apenas s\u00e3o \nlidos os registradores no som_core (BMU ou ERRO).  \n\nNeste estudo de caso, foi adotada a leitura de dois registradores de sa\u00edda. O mesmo \nc\u00f3digo de programa pode ser aplicado tanto para a detec\u00e7\u00e3o quanto para o diagn\u00f3stico, \no que muda entre eles \u00e9 apenas o treinamento do SOM. \n\nA aplica\u00e7\u00e3o foi implementada em linguagem C. Foram utilizados alguns recursos \ntradicionais do sistema operacional, como acesso a arquivos, fun\u00e7\u00e3o de convers\u00e3o \nnum\u00e9rica e ponteiros de mem\u00f3ria (sem uso de aloca\u00e7\u00e3o din\u00e2mica). A seguir, segue um \ntrecho do c\u00f3digo-fonte implementado: \n\n#include&lt;stdio.h> \n#include&lt;stdlib.h> \n#include \"xparameters.h\" \n#include&lt;linux-2.6.x/drivers/xilinx_common/xio.h> \n#include \"som_core.h\" //Defini\u00e7\u00e3o dos endere\u00e7os de mem\u00f3ria do som_core \nconst int SIZE = 20; //dimens\u00e3o do vetor de entrada \nconst int NEURONS = 90; //quantidade de neur\u00f4nios do SOM \nint main( ){ \n\nFILE *f, *fbmu, *ferro; \nchar *fim; \nfloat *erro; //armazenar erro de quantiza\u00e7\u00e3o do som_core \nfloat vetor[SIZE]; \nXuint32 result; //armazena as sa\u00eddas do som_core \n//Realizar reset do som_core \n\nSOM_CORE_reset(XPAR_SOM_CORE_0_BASEADDR); \n//Ler dados dos vetores de entrada e criar arquivos de sa\u00edda \n\nf = fopen(\"/home/teste.txt\", \"rt\"); \nferro = fopen(\"/tmp/resultado_erro.txt\", \"wt\"); \nfbmu = fopen(\"/tmp/resultado_bmu.txt\", \"wt\"); \n//Ler um vetor de entrada por vez e armazenar na mem\u00f3ria \n\nfim = getVetorEntrada(vetor,f); \nwhile (fim != NULL){ \n\n //Calcular BMU e ERRO para um vetor de entrada \n SOM_CORE_start(XPAR_SOM_CORE_0_BASEADDR, 1); \n SOM_CORE_start(XPAR_SOM_CORE_0_BASEADDR, 0); \n //Inicia o algoritmo para calcular o algoritmo do SOM \n SOM_CORE_compute(XPAR_SOM_CORE_0_BASEADDR, vetor); \n //Ler registrador de sa\u00edda do BMU e armazenar em vari\u00e1vel \n result = SOM_CORE_readBMU(XPAR_SOM_CORE_0_BASEADDR); \n fprintf(fbmu, \"%d \\n\\r\", result); \n //Ler registrador de sa\u00edda do ERRO e armazenar em vari\u00e1vel \n result = SOM_CORE_readError(XPAR_SOM_CORE_0_BASEADDR); \n erro = &amp;result; //cast para transformar em n\u00famero real \n fprintf(ferro, \"%e \\n\\r\", *erro); \n //Realizar reset do som_core para pr\u00f3ximo vetor de entrada \n SOM_CORE_reset(XPAR_SOM_CORE_0_BASEADDR); \n //Carregar pr\u00f3ximo vetor de entrada \n fim = getVetorEntrada(vetor,f); \n\n} \nfclose(f); fclose(ferro); fclose(fbmu);  \nreturn 0; \n\n} \n\n\n\n \n\n \n\n \n\n \n\n124 \n\nEssa implementa\u00e7\u00e3o \u00e9 apenas um exemplo para um caso de teste da aplica\u00e7\u00e3o que \nfaz uso do componente som_core. O componente foi implementado de forma que, antes \nde entrar em cada la\u00e7o de itera\u00e7\u00e3o, um vetor de entrada completo \u00e9 lido. Ap\u00f3s, um \nponteiro para o in\u00edcio desses dados \u00e9 repassado para a fun\u00e7\u00e3o de carga de vetores ao \nSOM. Os resultados s\u00e3o salvos e repete-se novamente esse ciclo at\u00e9 n\u00e3o existirem mais \nvetores de entrada. \n\nEssa aplica\u00e7\u00e3o funciona de forma a simular dados de entrada por meio de um \narquivo de teste (teste.txt) que cont\u00e9m os vetores de entrada. Os resultados da \naplica\u00e7\u00e3o tamb\u00e9m foram armazenados em um arquivo (resultado_erro.txt e \nresultado_bmu.txt) para posterior transfer\u00eancia a um PC e para fazer as devidas \nan\u00e1lises em MATLAB.  \n\nPara um prot\u00f3tipo de uma poss\u00edvel aplica\u00e7\u00e3o real (testar esse sistema embarcado em \num atuador el\u00e9trico real), seria necess\u00e1rio incrementar o sistema embarcado. Esses \nnovos recursos seriam: utilizar entradas e sa\u00eddas anal\u00f3gicas para leitura dos sensores, \nimplementar a etapa de processamento de sinais e implementar uma interface homem-\ncomputador para a apresenta\u00e7\u00e3o de resultados. \n\n4.6 Resumo do Cap\u00edtulo \nNeste cap\u00edtulo, foram abordados os passos necess\u00e1rios para a constru\u00e7\u00e3o do \n\nprot\u00f3tipo de um sistema embarcado para um Sistema de Manuten\u00e7\u00e3o Inteligente de \nv\u00e1lvulas el\u00e9tricas. Esse prot\u00f3tipo visa implementar t\u00e9cnicas computacionais de redes \nneurais, que tem como objetivo tolerar falhas na aplica\u00e7\u00e3o-alvo. \n\nAs t\u00e9cnicas de toler\u00e2ncia a falhas definidas para o trabalho foram: a detec\u00e7\u00e3o, o \ndiagn\u00f3stico e a predi\u00e7\u00e3o de falhas. Estas foram utilizadas para aumentar a \nconfiabilidade do sistema industrial.  \n\nO objetivo do prot\u00f3tipo \u00e9 desempenhar a fun\u00e7\u00e3o de um sistema de monitoramento \non-line do equipamento industrial. Por meio da aplica\u00e7\u00e3o de t\u00e9cnicas computacionais, \nesse sistema pode ler os sinais coletados, processar e apresentar informa\u00e7\u00f5es na sa\u00edda \ncomo: descobrir com anteced\u00eancia a ocorr\u00eancia de uma falha, identificando onde ela \nocorrer\u00e1 e informar \u00e0 equipe de manuten\u00e7\u00e3o. \n\nPara possibilitar esse monitoramento on-line do equipamento industrial, \u00e9 necess\u00e1rio \nque o prot\u00f3tipo seja implementado em uma plataforma de sistema embarcado. Desse \nmodo, a ferramenta de monitoramento pode ser acoplada ao ch\u00e3o de f\u00e1brica, \ndiretamente no equipamento, para realizar as tarefas de monitoramento. \n\nComo visto neste cap\u00edtulo, foi definida uma estrutura para o sistema de manuten\u00e7\u00e3o \ninteligente, do ponto de vista de toler\u00e2ncia a falhas, para projeto do sistema embarcado. \nEssa estrutura apresenta as ferramentas para detec\u00e7\u00e3o, diagn\u00f3stico e predi\u00e7\u00e3o de falhas, \nque utilizam o SOM como t\u00e9cnica computacional. Al\u00e9m disso, foram apresentados os \ndetalhes de cada algoritmo para desempenhar cada uma das tarefas. \n\nEm seguida, essa estrutura foi implementada em software, utilizando a ferramenta \nMATLAB. Isso foi necess\u00e1rio para realizar simula\u00e7\u00f5es do funcionamento das partes da \nestrutura do Sistema de Manuten\u00e7\u00e3o Inteligente, pois por meio desses experimentos foi \nposs\u00edvel validar a estrutura e comparar com os resultados do sistema embarcado. \n\nAp\u00f3s valida\u00e7\u00e3o do sistema em software, foi iniciado o projeto do prot\u00f3tipo em \nhardware. Foi adotada a plataforma de FPGA da Xilinx, utilizando a placa de \n\n\n\n \n\n \n\n \n\n \n\n125 \n\ndesenvolvimento para experimentos fabricada pela Digilent, XUP Virtex-2 PRO. Essa \nplataforma de hardware apresenta muitos recursos computacionais dispon\u00edveis para \nexplorar o espa\u00e7o de projeto do sistema embarcado. \n\n\u00c9 importante destacar que a prototipa\u00e7\u00e3o das t\u00e9cnicas de toler\u00e2ncia a falhas na \nplataforma de FPGA visa implantar nela a rede neural SOM. As t\u00e9cnicas de toler\u00e2ncia a \nfalhas implementadas em FPGA foram a detec\u00e7\u00e3o e o diagn\u00f3stico de falhas. A etapa de \npredi\u00e7\u00e3o foi apenas validada em software, utilizando o MATLAB, e ser\u00e1 prototipada em \nhardware, em trabalhos futuros. \n\nFoi desenvolvido um prot\u00f3tipo em VHDL da rede neural SOM. O algoritmo do \nSOM foi detalhado e criado um porte para o hardware. Para desempenhar as tarefas de \ndetec\u00e7\u00e3o e diagn\u00f3stico, foi implementado apenas o algoritmo de teste em VHDL e \nutilizado um SOM j\u00e1 treinado por software. \n\nDurante o projeto do algoritmo de recupera\u00e7\u00e3o, foi definida a parte operativa dos \ncomponentes de hardware e a M\u00e1quina de Estados para controlar o dispositivo. Este foi \ntestado e validado na plataforma de FPGA.  \n\nDurante o desenvolvimento do hardware em VHDL, foram vencidas muitas \nbarreiras de projeto, como a mem\u00f3ria dispon\u00edvel, o desempenho e a din\u00e2mica de \nfuncionamento do algoritmo. Tais barreiras se originam em caracter\u00edsticas particulares \ndo algoritmo do SOM, como o custo computacional de treinamento, a suposi\u00e7\u00e3o de \nmem\u00f3ria \u201cilimitada\u201d e por ser um algoritmo para avalia\u00e7\u00e3o de resultados puramente \nemp\u00edricos. \n\nMesmo com essas dificuldades no projeto, o prot\u00f3tipo do SOM em hardware foi \naprovado em todas as etapas da metodologia de projeto em FPGA. Foram realizadas \nsimula\u00e7\u00f5es de n\u00edvel comportamental, de n\u00edvel temporal (com atrasos) e de consumo de \npot\u00eancia. Para realizar tais simula\u00e7\u00f5es, foram utilizadas as ferramentas dispon\u00edveis pela \nXilinx, o ISE e o ModelSim. Por fim, o projeto foi aprovado em todas as simula\u00e7\u00f5es, \nestando pronto para ser implantado em um sistema embarcado mais complexo. \n\nO sistema embarcado foi projetado utilizando uma plataforma de desenvolvimento \nda Xilinx e uma placa de desenvolvimento fabricada pela Digilent. Essa plataforma \ndisponibiliza processadores, mem\u00f3rias, barramentos e demais recursos computacionais \npara prototipa\u00e7\u00e3o.  \n\nAdemais, foi definida uma arquitetura m\u00ednima do sistema embarcado necess\u00e1rio \npara implementar o Sistema de Manuten\u00e7\u00e3o Inteligente. Este \u00e9 composto por \nmicroprocessador, mem\u00f3ria, barramento, perif\u00e9ricos e o hardware do SOM (som_core). \n\nDevido aos requisitos de um sistema embarcado (limite de mem\u00f3ria, limite de \ndesempenho e consumo de pot\u00eancia), decidiu-se projetar um hardware m\u00ednimo que \npossibilite a execu\u00e7\u00e3o de um sistema operacional embarcado (SOE). \n\nFoi definido utilizar o microprocessador MicroBlaze e demais perif\u00e9ricos \ncompat\u00edveis (barramento OPB, timer, comunica\u00e7\u00e3o, etc). Todos esses recursos s\u00e3o \nfornecidos e est\u00e3o dispon\u00edveis na plataforma de FPGA. Assim, o sistema computacional \nembarcado projetado, deve fornecer os recursos necess\u00e1rios para executar o sistema \noperacional. \n\nCom a defini\u00e7\u00e3o do sistema embarcado, foi adicionado ao projeto o componente de \nhardware do SOM. Para que este opere corretamente, foi preciso desenvolver um \nwrapper que fa\u00e7a a convers\u00e3o dos sinais do componente para o padr\u00e3o de comunica\u00e7\u00e3o \n\n\n\n \n\n \n\n \n\n \n\n126 \n\ndo barramento. Esse wrapper foi desenvolvido e acoplado ao sistema, al\u00e9m de ter sido \nvalidado e testado. \n\nCom a s\u00edntese de todo o sistema embarcado para o FPGA, foi tamb\u00e9m realizada uma \navalia\u00e7\u00e3o da \u00e1rea ocupada pelo sistema como um todo e feita uma compara\u00e7\u00e3o \nparticular entre a \u00e1rea ocupada do hardware do SOM com o wrapper. O wrapper levou \num aumento de \u00e1rea da ordem de 28%, que \u00e9 referente aos componentes de integra\u00e7\u00e3o \nao barramento. \n\nCom o hardware do sistema embarcado pronto, foram iniciados os trabalhos de \ninstala\u00e7\u00e3o, customiza\u00e7\u00e3o e compila\u00e7\u00e3o do sistema operacional adotado, o PetaLinux. \nEsse sistema operacional \u00e9 uma vers\u00e3o customizada especialmente para executar sobre a \nplataforma FPGA, com microprocessador MicroBlaze, e drivers para os perif\u00e9ricos da \nplaca de desenvolvimento. \n\nForam apresentados conceitos b\u00e1sicos de software para sistemas embarcados e \ntamb\u00e9m sobre o sistema operacional PetaLinux. Como este \u00e9 derivado do GNU/Linux, \neles t\u00eam muitos conceitos em comum, mas a principal diferen\u00e7a est\u00e1 na mem\u00f3ria \nocupada pelo kernel. Al\u00e9m disso, as caracter\u00edsticas internas e particularidades do \nPetaLinux que afetam o desenvolvimento de aplica\u00e7\u00f5es tamb\u00e9m foram apresentadas. \nPara o desenvolvimento de softwares, devem ser vencidas algumas limita\u00e7\u00f5es devido ao \nsistema n\u00e3o ter MMU, o que transfere muitas responsabilidades de seguran\u00e7a e \nconfiabilidade do software para o programador. \n\nPor fim, foi apresentado o desenvolvimento do device driver, necess\u00e1rio para acessar \no hardware do SOM pelo software, al\u00e9m da apresenta\u00e7\u00e3o de  um exemplo de aplica\u00e7\u00e3o \nem software que utiliza o componente.  \n\n \n\n\n\n5 EXPERIMENTOS E RESULTADOS \n\n5.1 Introdu\u00e7\u00e3o \nNeste cap\u00edtulo, ser\u00e3o apresentados os experimentos e resultados utilizando as \n\nferramentas apresentadas e desenvolvidas no capitulo anterior. \n\nO objetivo dos experimentos \u00e9 comprovar, por meio de resultados, que o Sistema de \nManuten\u00e7\u00e3o Inteligente funciona para o caso de teste. Al\u00e9m disso, tamb\u00e9m se deve \navaliar o prot\u00f3tipo do hardware comparando-o com os resultados obtidos pelas \nsimula\u00e7\u00f5es em software.  \n\nPrimeiro, ser\u00e1 apresentada a metodologia para realizar os experimentos. Esta pode \nser aplicada para qualquer estudo de caso, j\u00e1 que \u00e9 apresentada em termos gerais.  \n\nEm segundo, ser\u00e1 apresentado o estudo de caso adotado neste trabalho. Ser\u00e3o \nabordados os problemas no transporte de derivados de petr\u00f3leo, na ind\u00fastria petrol\u00edfera \ne como este trabalho ajuda a resolver tais problemas. Com base neste estudo de caso, \nser\u00e3o desenvolvidos os experimentos. \n\nNa terceira etapa, ser\u00e1 apresentado o modelo matem\u00e1tico que \u00e9 utilizado para \nsimular o comportamento f\u00edsico do processo industrial. A abordagem \u00e9 a de \nconhecimento a priori, em que por meio de um conhecimento especializado sobre as \nrela\u00e7\u00f5es f\u00edsicas do processo \u00e9 poss\u00edvel especificar o modelo. Este serve como base para \naquisi\u00e7\u00e3o de dados quantitativos, como valores ou sinais de caracter\u00edsticas do \ncomportamento do equipamento. \n\nEm quarto, ser\u00e1 apresentado como realizar o treinamento das redes neurais, \nutilizando o simulador do modelo matem\u00e1tico como gerador de sinais ou valores. Esses \nsinais s\u00e3o tratados como dados de hist\u00f3rico, em que grandes quantidades desses dados \ndevem estar dispon\u00edveis. Eles ser\u00e3o aplicados a uma t\u00e9cnica de processamento de sinais \npara extrair determinadas caracter\u00edsticas importantes. A partir disso, ser\u00e3o utilizados \ncomo vetores de entrada na rede neural tanto para treinamento quanto para testes.  \n\nAp\u00f3s, ser\u00e3o apresentadas as aplica\u00e7\u00f5es desenvolvidas para avaliar os resultados para \ndetec\u00e7\u00e3o, classifica\u00e7\u00e3o e predi\u00e7\u00e3o de falhas. Nestas, ser\u00e3o avaliados apenas os \nresultados adquiridos por meio das simula\u00e7\u00f5es em software por interm\u00e9dio da \nferramenta MATLAB. \n\nPor \u00faltimo, ser\u00e3o realizados experimentos de detec\u00e7\u00e3o e diagn\u00f3stico utilizando o \nprot\u00f3tipo do sistema embarcado. Este ser\u00e1 comparado aos resultados obtidos da \n\n\n\n \n\n \n\n \n\n \n\n128 \n\nsimula\u00e7\u00e3o em software, em MATLAB, para avaliar se os resultados do sistema \nembarcado est\u00e3o corretos. \n\nNas pr\u00f3ximas se\u00e7\u00f5es, ser\u00e3o apresentadas as etapas dos experimentos para o sistema \nembarcado de manuten\u00e7\u00e3o inteligente. \n\n5.2 Metodologia dos Experimentos \nO prop\u00f3sito dos experimentos \u00e9 aplicar as t\u00e9cnicas e ferramentas vistas no Cap\u00edtulo \n\n4, utilizando o conjunto de dados ou sinais de entrada para testar e simular o Sistema de \nManuten\u00e7\u00e3o Inteligente.  \n\nPara realizar os experimentos, assume-se de antem\u00e3o que esteja dispon\u00edvel um \nconjunto de dados ou sinais de entrada, que ser\u00e3o utilizados para treinamento e testes. \u00c9 \nimportante que esses dados reflitam as informa\u00e7\u00f5es de um per\u00edodo hist\u00f3rico do processo \nem an\u00e1lise. \n\nCaso n\u00e3o estejam dispon\u00edveis os dados de entrada, pode-se utilizar uma ferramenta \nauxiliar para produzi-los. Nos experimentos, aqui apresentados, foi utilizada uma \nferramenta para simular o comportamento do processo. \n\nOs experimentos ser\u00e3o feitos com base inteiramente na proposta de um Sistema de \nManuten\u00e7\u00e3o Inteligente (SMI) apresentada na Se\u00e7\u00e3o 4.2. Nesse sistema, s\u00e3o utilizadas \nredes neurais do tipo Mapas Auto-organiz\u00e1veis (SOM) para aprender as caracter\u00edsticas \ncomportamentais do processo a ser monitorado. \n\nOs experimentos foram divididos de dois modos: \n\n\u2022 Experimentos em software: ser\u00e1 utilizada a ferramenta implementada em \nMATLAB e apresentada na Se\u00e7\u00e3o 4.3.  \n\n\u2022 Experimentos em hardware: ser\u00e1 utilizado o prot\u00f3tipo do sistema embarcado \ndesenvolvido e apresentado na Se\u00e7\u00e3o 4.5.  \n\nOs experimentos em software t\u00eam a finalidade de avaliar os resultados do ponto de \nvista do SOM. Isso ser\u00e1 realizado pela utiliza\u00e7\u00e3o de sinais que sejam realistas e \nrepresentativos do processo industrial. Ser\u00e3o feitos experimentos para avaliar as tarefas \nde detec\u00e7\u00e3o, diagn\u00f3stico e predi\u00e7\u00e3o de falhas.  \n\nAs fases a serem realizadas no experimento em software s\u00e3o: \n\n1. Aquisi\u00e7\u00e3o de dados: um banco de dados deve estar dispon\u00edvel a fim \nde refletir o hist\u00f3rico de comportamento do processo. Este deve \nfornecer dois conjuntos de dados: um para treinamento (hist\u00f3ria do \nprocesso) e um para teste. \n\n2. Treinamento: utilizar os dados de treinamento para treinar as redes \nneurais, pois cada tarefa do SMI (detec\u00e7\u00e3o, diagn\u00f3stico e predi\u00e7\u00e3o) \nutiliza uma rede neural em particular. Por isso, necessita-se separar os \ndados mais adequados para cada caso conforme algoritmo \napresentado na Se\u00e7\u00e3o 4.2. \n\n3. Teste: utilizar os dados de teste para avaliar a generaliza\u00e7\u00e3o da rede \nneural. Para cada tarefa do SMI, devem-se separar os dados de teste \nmais adequados para cada caso conforme apresentado na se\u00e7\u00e3o 4.1. \n\n4. Resultados: para cada caso do SMI extrair os seguintes resultados: \n\n\n\n \n\n \n\n \n\n \n\n129 \n\n? Detec\u00e7\u00e3o: obter da rede neural o gr\u00e1fico do erro de \nquantiza\u00e7\u00e3o para cada vetor de teste. \n\n? Diagn\u00f3stico: obter da rede neural a visualiza\u00e7\u00e3o por U-Matrix \nrevelando o mapeamento e as taxas de acertos para cada vetor \nde teste. \n\n? Predi\u00e7\u00e3o: extrair da rede neural a visualiza\u00e7\u00e3o por U-Matrix \ncom a proje\u00e7\u00e3o da trajet\u00f3ria percorrida pelos neur\u00f4nios \nvencedores. Tamb\u00e9m extrair o gr\u00e1fico da rela\u00e7\u00e3o entre os \nvetores vencedores e o tempo de chegada da amostra. \n\nOs experimentos em hardware visam avaliar e validar o sistema embarcado do \nponto de vista do SOM. Isso ser\u00e1 realizado pelos mesmos sinais utilizados para o caso \nde experimentos em software. Al\u00e9m disso, ser\u00e3o feitos experimentos para avaliar as \ntarefas de detec\u00e7\u00e3o e diagn\u00f3stico de falhas. \n\nComo o SOM foi implementado no sistema embarcado, algumas etapas anteriores \nn\u00e3o est\u00e3o dispon\u00edveis, como a aquisi\u00e7\u00e3o de sinais pela entrada anal\u00f3gica e a etapa de \nprocessamento de sinais. Devido a isso, esses experimentos t\u00eam a finalidade apenas de \nsimular o funcionamento do SOM na pr\u00e1tica pelo uso de dados est\u00e1ticos salvos na \nmem\u00f3ria. Estes fazem o papel de simular a aquisi\u00e7\u00e3o de dados para testes e executar o \nsistema embarcado na placa de desenvolvimento. \n\nAs fases a serem realizadas no experimento em hardware s\u00e3o: \n\n1. Aquisi\u00e7\u00e3o de dados: neste experimento n\u00e3o ser\u00e1 tratada a aquisi\u00e7\u00e3o \nde dados em tempo real. Os dados para treinamento e testes ser\u00e3o \niguais aos utilizados pelo experimento em software e devem estar \ndispon\u00edveis. Esses dados ser\u00e3o gravados de forma est\u00e1tica no sistema \nembarcado para realizar a simula\u00e7\u00e3o. \n\n2. Treinamento: ser\u00e1 utilizado o mesmo SOM treinado pelo \nexperimento em software e apenas para as tarefas de detec\u00e7\u00e3o e \ndiagn\u00f3stico. Os vetores de pesos sin\u00e1pticos dos neur\u00f4nios devem ser \nseparados e salvos, em separado, em um arquivo chamado de mapa. \n\n3. Convers\u00e3o: converter os valores do mapa para a representa\u00e7\u00e3o \nnum\u00e9rica bin\u00e1ria, seguindo o padr\u00e3o de Ponto Flutuante IEEE 754. \n\n4. S\u00edntese: o arquivo do mapa em bin\u00e1rio \u00e9 utilizado durante a s\u00edntese \ndo sistema embarcado. O mapa \u00e9 utilizado como entrada de dados \npara mem\u00f3ria interna (BRAM) do componente conforme apresentado \nna Se\u00e7\u00e3o 4.4.1.2. \n\n5. Programa de teste: os dados de teste para avaliar os resultados do \nSOM, s\u00e3o inseridos no programa da aplica\u00e7\u00e3o na imagem do kernel \ndo PetaLinux. Estes s\u00e3o salvos em um arquivo-texto na mem\u00f3ria do \nsistema para simular a aquisi\u00e7\u00e3o de dados para testes. \n\n6. Resultados: dependendo da tarefa para qual o SOM foi treinado, \nextrair os seguintes resultados em cada caso: \n\n? Detec\u00e7\u00e3o: obter os resultados do erro de quantiza\u00e7\u00e3o \ncoletados na sa\u00edda ERRO do componente som_core e \narmazenados em um arquivo de sa\u00edda. Esse arquivo deve ser \n\n\n\n \n\n \n\n \n\n \n\n130 \n\ntransferido para um PC, a fim de processar os dados de \nresultados e gerar o gr\u00e1fico do erro de quantiza\u00e7\u00e3o. \n\n? Diagn\u00f3stico: obter os resultados dos neur\u00f4nios vencedores \ncoletados na sa\u00edda BMU do componente som_core e \narmazenados em um arquivo de sa\u00edda. Esse arquivo deve ser \ntransferido para o PC para processar os dados de resultados. \nAdemais, gerar a representa\u00e7\u00e3o de visualiza\u00e7\u00e3o por U-Matrix \ncom destaque para o mapeamento e calcular as taxas de \nacertos para cada vetor de teste. \n\nNota-se uma fase em comum entre os experimentos em software e hardware: a fase \nde treinamento. Esta foi definida ao ser executada no PC, utilizando o MATLAB, \ndevido \u00e0 reutiliza\u00e7\u00e3o da implementa\u00e7\u00e3o do SOM Toolbox (ver se\u00e7\u00e3o 4.3). O reuso desse \nsoftware j\u00e1 trata de todos os requisitos intr\u00ednsecos do algoritmo de treinamento do SOM \ne, claro, evita transferir o custo computacional de treinamento para o sistema \nembarcado. \n\nNas pr\u00f3ximas etapas, ser\u00e3o apresentados os experimentos para cada um dos modos \n(software e hardware) e em cada um delas ser\u00e3o apresentadas as tarefas do ponto de \nvista do Sistema de Manuten\u00e7\u00e3o Inteligente. \n\n5.3 Estudo de Caso  \nO estudo de caso adotado nos experimentos vem de um setor muito importante para \n\na ind\u00fastria petrol\u00edfera: o transporte e distribui\u00e7\u00e3o de derivados de petr\u00f3leo.  \n\nO processo de transporte de derivados de uma plataforma de extra\u00e7\u00e3o at\u00e9 uma \nrefinaria \u00e9 realizado por uma rede dutovi\u00e1ria ou gasodutos. Estes s\u00e3o tubula\u00e7\u00f5es \nespeciais para transportar os derivados de um local de origem para um destino. \n\nO gasoduto pode percorrer milhares de quil\u00f4metros e tamb\u00e9m interligar \nequipamentos do processo dentro da refinaria. Em todo o seu percurso podem ser \nencontradas centenas ou at\u00e9 milhares de v\u00e1lvulas, que s\u00e3o utilizadas para controlar o \nfluxo do processo durante o transporte.  \n\nAs v\u00e1lvulas s\u00e3o equipamentos industriais que tem a finalidade de controlar o fluxo \nde flu\u00eddos, como derivados de petr\u00f3leo, \u00e1gua, esgoto, etc. A v\u00e1lvula efetua o trabalho de \nabrir ou fechar o obturador de fluxo. Este estudo de caso se concentra na v\u00e1lvula. \n\nQuando uma v\u00e1lvula falha de forma indesejada, esta pode interromper ou abrir total \nou parcialmente o obturador, que pode causar grandes preju\u00edzos no processo produtivo. \nPor exemplo, a interrup\u00e7\u00e3o de um gasoduto pode cessar o processo de refino e gerar \npreju\u00edzos financeiros alt\u00edssimos, em fun\u00e7\u00e3o do tempo de parada. Outro exemplo, uma \nfalha em um obturador pode interromper o funcionamento de uma adutora e o \nfornecimento de \u00e1gua para uma cidade por um determinado tempo. \n\nEnt\u00e3o, a v\u00e1lvula foi escolhida como estudo de caso por ser um equipamento \nimportante no processo de transporte de derivados de petr\u00f3leo, segundo a equipe de \nmanuten\u00e7\u00e3o da empresa Transpetro, subsidi\u00e1ria da Petrobras. \n\nNeste estudo de caso, foi adotada uma v\u00e1lvula movida eletricamente, em que o \nobturador \u00e9 acionado por um atuador motorizado. O modelo escolhido \u00e9 fabricado pela \n\n\n\n \n\n \n\n \n\n \n\n131 \n\nempresa Coester Automa\u00e7\u00e3o S.A.11, e o modelo do atuador (motor) \u00e9 o CSR25 que \u00e9 \nacoplado a uma v\u00e1lvula do tipo gaveta.  \n\nO atuador \u00e9 respons\u00e1vel por movimentar a haste da v\u00e1lvula, abrindo ou fechando o \nobturador. Na Figura 5.1, podem ser vistas as partes que comp\u00f5em a v\u00e1lvula adotada \nnos experimentos.  \n\n \n\nFigura 5.1: Vis\u00e3o geral da v\u00e1lvula e do atuador adotado nos experimentos. \n\nNo conjunto v\u00e1lvula e atuador, \u00e9 poss\u00edvel monitorar o torque mec\u00e2nico exercido \npelo motor, durante a realiza\u00e7\u00e3o do movimento de abertura e/ou fechamento da v\u00e1lvula, \ne a posi\u00e7\u00e3o que se encontra o obturador da v\u00e1lvula. Nesses experimentos ser\u00e3o adotadas \nambas vari\u00e1veis, torque e posi\u00e7\u00e3o. \n\nJ\u00e1 que os dados de hist\u00f3rico para um caso real de utiliza\u00e7\u00e3o do equipamento n\u00e3o \nest\u00e3o dispon\u00edveis, ent\u00e3o deve-se utilizar uma ferramenta para simula\u00e7\u00e3o do \ncomportamento f\u00edsico do conjunto atuador e v\u00e1lvula. Na pr\u00f3xima se\u00e7\u00e3o, ser\u00e1 abordada a \nferramenta de simula\u00e7\u00e3o e inje\u00e7\u00e3o de falhas. \n\n5.4 Modelo para Simula\u00e7\u00e3o  \nPara desenvolver uma ferramenta de simula\u00e7\u00e3o de todos os par\u00e2metros e \n\ncomportamentos esperados para o conjunto atuador e v\u00e1lvula, necessita-se de um grande \nesfor\u00e7o de projeto. Para isso, \u00e9 preciso conhecer as caracter\u00edsticas e o comportamento \nf\u00edsico de cada componente que forma o conjunto e as rela\u00e7\u00f5es entre cada uma das \npartes. \n\nA constru\u00e7\u00e3o de modelos \u00e9 baseada no conhecimento a priori dos princ\u00edpios f\u00edsicos \nque governam o comportamento do sistema. Na ferramenta de simula\u00e7\u00e3o, com base em \nmodelagem f\u00edsica, o comportamento do sistema e os valores de sa\u00edda s\u00e3o modelados \ncomo um sistema matem\u00e1tico.  \n\n                                                 \n11 Site da empresa Coester Automa\u00e7\u00e3o S.A. - http://www.coester.com.br/  \n\n\n\n \n\n \n\n \n\n \n\n132 \n\nEnt\u00e3o, o modelo \u00e9 inteiramente baseado no conhecimento detalhado das rela\u00e7\u00f5es \nf\u00edsicas e das caracter\u00edsticas dos componentes que integram o sistema. No final obt\u00eam-se \num conjunto de equa\u00e7\u00f5es matem\u00e1ticas (equa\u00e7\u00f5es diferenciais, sistemas alg\u00e9bricos, etc.), \nque ser\u00e1 chamado de modelo matem\u00e1tico. \n\nO modelo matem\u00e1tico \u00e9 implementado como uma ferramenta de simula\u00e7\u00e3o, em que \nser\u00e3o feitos os ajustes dos par\u00e2metros e das vari\u00e1veis que governam o modelo. Essa \nferramenta apresentar\u00e1 uma sa\u00edda de dados com os resultados esperados.  \n\nA constru\u00e7\u00e3o do modelo matem\u00e1tico, para simula\u00e7\u00f5es deste estudo de caso, foi \nrealizada por (GON\u00c7ALVES ET AL., 2007) (GON\u00c7ALVES ET AL., 2008) no Grupo \nde Pesquisa em Manuten\u00e7\u00e3o Inteligente, da Universidade Federal do Rio Grande do Sul. \nEm Anexo nesta disserta\u00e7\u00e3o est\u00e1 o artigo apresentando maiores detalhes a respeito das \nequa\u00e7\u00f5es que governam a constru\u00e7\u00e3o do modelo matem\u00e1tico. \n\nDurante as pesquisas para elabora\u00e7\u00e3o do modelo matem\u00e1tico, foram estudadas, com \ndetalhes, as rela\u00e7\u00f5es f\u00edsicas de constru\u00e7\u00e3o entre as partes que formam o atuador e a \nv\u00e1lvula. O atuador \u00e9 composto por um conjunto el\u00e9trico e mec\u00e2nico. As principais \npartes (ver Figura 5.2) s\u00e3o: \n\n\u2022 Motor el\u00e9trico: motor de indu\u00e7\u00e3o trif\u00e1sico do tipo gaiola de esquilo. \n\n\u2022 Redu\u00e7\u00e3o mec\u00e2nica: sistema de transmiss\u00e3o mec\u00e2nica por engrenagens.  \n\n\u2022 Acoplamento: interface do atuador com a haste rotativa da v\u00e1lvula.  \n\n\u2022 Sensor de torque: c\u00e9lula de carga eletr\u00f4nica.  \n\n\u2022 Sensor de posi\u00e7\u00e3o e movimento: potenci\u00f4metro.  \n\nA v\u00e1lvula \u00e9 composta por um conjunto mec\u00e2nico. As principais partes (ver parte \ninferior na Figura 5.1) s\u00e3o: \n\n\u2022 Acoplamento: interface rotativa da haste com o atuador. \n\n\u2022 Haste: sistema rotativo para movimentar obturador.  \n\n\u2022 Obturador: dispositivo que bloqueia o fluxo no canal de vaz\u00e3o.  \n\n\u2022 Canal de vaz\u00e3o: local onde passa o fluido, sendo a interface da v\u00e1lvula com a \ntubula\u00e7\u00e3o.  \n\nComo pode-se notar, a constru\u00e7\u00e3o do conjunto atuador e v\u00e1lvula \u00e9 feita para \ninterligar todas essas partes entre si. Para isso, \u00e9 necess\u00e1rio estudar todas as quest\u00f5es \nf\u00edsicas dessa rela\u00e7\u00e3o e construir um modelo matem\u00e1tico para simul\u00e1-las. \n\nConforme (GON\u00c7ALVES ET AL., 2008), durante o funcionamento do conjunto, \nexiste um forte relacionamento entre as partes do conjunto: atuador, v\u00e1lvula, tubula\u00e7\u00e3o e \nfluido: uma rela\u00e7\u00e3o entre a determina\u00e7\u00e3o da posi\u00e7\u00e3o do obturador em rela\u00e7\u00e3o \u00e0 vaz\u00e3o do \nfluido pela tubula\u00e7\u00e3o; uma rela\u00e7\u00e3o entre a transmiss\u00e3o do torque do motor e a redu\u00e7\u00e3o \nmec\u00e2nica, para movimentar o obturador at\u00e9 uma posi\u00e7\u00e3o indicada que controlar\u00e1 a \nvaz\u00e3o pela tubula\u00e7\u00e3o; etc. \n\nDurante o processo de transmiss\u00e3o do torque at\u00e9 o obturador, uma s\u00e9rie de for\u00e7as \ndevem ser tratadas pelo modelo matem\u00e1tico. Essas for\u00e7as influenciam diretamente no \nmovimento de abertura ou fechamento do obturador da v\u00e1lvula. Na Figura 5.1 ao lado \ndireito, s\u00e3o apresentadas as dire\u00e7\u00f5es dessas for\u00e7as. \n\n\n\n \n\n \n\n \n\n \n\n133 \n\n \n\nFigura 5.2: Principais partes do atuador el\u00e9trico. \n\nA for\u00e7a exercida pelo motor el\u00e9trico do atuador deve vencer as demais contr\u00e1rias. A \nfor\u00e7a de atrito corresponde ao atrito existente entre a haste e a gaxeta (pe\u00e7a utilizada \npara veda\u00e7\u00e3o). A for\u00e7a da mola corresponde ao movimento do obturador at\u00e9 sua posi\u00e7\u00e3o \ninicial, na aus\u00eancia de energia el\u00e9trica. A for\u00e7a do flu\u00eddo passa pela tubula\u00e7\u00e3o \nexercendo press\u00e3o sobre o obturador.  \n\nAs sa\u00eddas do modelo matem\u00e1tico devem ser as mesmas do sistema de controle do \natuador, com sinal de torque e posi\u00e7\u00e3o do obturador. A sa\u00edda de torque do modelo \u00e9 para \nsimular os dados oriundos do sensor de torque (medida do torque de sa\u00edda exercida pelo \nmotor el\u00e9trico). A sa\u00edda de posi\u00e7\u00e3o corresponde a simular o sensor de posi\u00e7\u00e3o e \nmovimento (medida do percentual de movimento do obturador no canal de vaz\u00e3o). \n\n5.4.1 Modelo Matem\u00e1tico \n\nDurante o processo de modelagem matem\u00e1tica deste estudo de caso, (GON\u00c7ALVES \nET AL., 2008) o dividiu em duas etapas fundamentais: defini\u00e7\u00e3o e modelagem. O \nmodelo matem\u00e1tico foi implementado de forma a ser um simulador computacional e \nsuportar recursos para inje\u00e7\u00e3o de falhas. Para maiores detalhes consultar o Anexo. \n\nA etapa de defini\u00e7\u00e3o consiste na identifica\u00e7\u00e3o dos fatores que influenciam na \ndin\u00e2mica de funcionamento e no comportamento do sistema. Al\u00e9m disso, implica em \nescolher adequadamente os princ\u00edpios f\u00edsicos, aplicar considera\u00e7\u00f5es e simplifica\u00e7\u00f5es, \nal\u00e9m da escolha das vari\u00e1veis que descrevem o sistema. O modelo matem\u00e1tico \u00e9 \nconstitu\u00eddo por um conjunto de equa\u00e7\u00f5es diferenciais e alg\u00e9bricas n\u00e3o-lineares. \n\nPara a modelagem, foram consideradas as seguintes partes do conjunto atuador, \nv\u00e1lvula e tubula\u00e7\u00e3o, que descrevem o comportamento do sistema: \n\n\u2022 Motor el\u00e9trico. \n\n\u2022 O sistema de redu\u00e7\u00e3o mec\u00e2nica (engrenagens). \n\n\u2022 O fluxo do fluido que passa pela tubula\u00e7\u00e3o e v\u00e1lvula. \n\n\u2022 A posi\u00e7\u00e3o, velocidade e acelera\u00e7\u00e3o da haste. \n\n\u2022 As for\u00e7as envolvidas no movimento do motor e obturador. \n\n\n\n \n\n \n\n \n\n \n\n134 \n\nA partir das considera\u00e7\u00f5es e separando cada caso em particular, foi desenvolvido um \nconjunto de equa\u00e7\u00f5es para cada uma das partes isoladas do sistema. As equa\u00e7\u00f5es s\u00e3o \ninterligadas por vari\u00e1veis comuns em cada parte, construindo um sistema de equa\u00e7\u00f5es. \n\nAs equa\u00e7\u00f5es e os m\u00e9todos num\u00e9ricos utilizados para solucionar as equa\u00e7\u00f5es \ndiferenciais e alg\u00e9bricas que descrevem as rela\u00e7\u00f5es e os comportamentos f\u00edsicos do \nconjunto atuador e v\u00e1lvula podem ser vistos com mais detalhes em (GON\u00c7ALVES ET \nAL., 2008). \n\n\u00c9 importante notar que esse modelo matem\u00e1tico ainda encontra-se em fase de \nvalida\u00e7\u00e3o. Necessita-se ainda definir alguns par\u00e2metros importantes, que devem ser \nfornecidos pelo fabricante do equipamento, e validar utilizando experimentos para um \ncaso real. \n\nNa Figura 5.3, \u00e9 apresentada a ferramenta de simula\u00e7\u00e3o desenvolvida por \n(GON\u00c7ALVES ET AL., 2008). \u00c9 um simulador de din\u00e2mica de sistemas n\u00e3o-lineares, \nutilizado para simular o modelo matem\u00e1tico do estudo de caso. Foi desenvolvido em \nMATLAB. Gera o conjunto de sinais necess\u00e1rios para realizar os experimentos para o \nSistema de Manuten\u00e7\u00e3o Inteligente. \n\n \n\nFigura 5.3: Ferramenta de simula\u00e7\u00e3o para experimentos no conjunto atuador e v\u00e1lvula. \n\n5.5 Inje\u00e7\u00e3o de Falhas \nNesta se\u00e7\u00e3o, ser\u00e1 apresentada a aplica\u00e7\u00e3o da ferramenta de simula\u00e7\u00e3o para \n\nexperimentos de inje\u00e7\u00e3o de falhas no atuador el\u00e9trico, a fim de gerar conjunto de dados \ncom hist\u00f3ricos de comportamento do atuador. Esses dados s\u00e3o importantes para o \ntreinamento e os testes das redes neurais do Sistema de Manuten\u00e7\u00e3o Inteligente. \n\nSer\u00e3o simuladas duas falhas que ocorrem no conjunto atuador e v\u00e1lvula. Essas falhas \ns\u00e3o: obstru\u00e7\u00e3o do obturador por ac\u00famulo de sedimentos ou por materiais s\u00f3lidos \ntransportados pela tubula\u00e7\u00e3o at\u00e9 a v\u00e1lvula e desgastes originados nas engrenagens, \ncausando folgas ao longo do tempo. \n\n\n\n \n\n \n\n \n\n \n\n135 \n\nA simula\u00e7\u00e3o dessas falhas \u00e9 importante para gerar o conjunto de dados de hist\u00f3rico \nque deve representar tr\u00eas tipos de comportamentos do atuador: normal, degrada\u00e7\u00e3o e \nfalha.  \n\nOs dados de hist\u00f3rico poderiam ter sido coletados em um ensaio real, em que se \ntenta imitar as situa\u00e7\u00f5es normais, a de degrada\u00e7\u00e3o e de falha. Entretanto, em alguns \nprocessos industriais, muitas das situa\u00e7\u00f5es de falhas n\u00e3o podem ser ensaiadas, uma vez \nque h\u00e1 a necessidade de uma incis\u00e3o f\u00edsica para for\u00e7ar uma anormalidade (como quebra \nou desgaste de pe\u00e7as) (VENKATASUBRAMANIAN; RENGASWAMY; KAVURI; \nET AL., 2003). Nesse caso, quando se causa degrada\u00e7\u00e3o ou falha, t\u00eam-se custos \nelevados de tempo e dinheiro, e isso inviabiliza a realiza\u00e7\u00e3o dos ensaios.  \n\nUma op\u00e7\u00e3o mais vi\u00e1vel \u00e9 simular as diversas situa\u00e7\u00f5es normais, de degrada\u00e7\u00e3o e de \nfalha por meio de um simulador utilizando um PC. No entanto, esta \u00e9 aplic\u00e1vel somente \nquando a ferramenta de simula\u00e7\u00e3o est\u00e1 dispon\u00edvel. Neste estudo de caso, esta op\u00e7\u00e3o est\u00e1 \n\u00e0 disposi\u00e7\u00e3o e \u00e9 ser\u00e1 aplicada neste trabalho. \n\nComo o objetivo deste trabalho \u00e9 aplicar t\u00e9cnicas de toler\u00e2ncia a falhas de detec\u00e7\u00e3o, \ndiagn\u00f3stico e predi\u00e7\u00e3o, necessita-se a priori do conjunto de dados de hist\u00f3rico de \ncomportamento. Para gerar o conjunto de dados pelo simulador, foi utilizado, como \nsa\u00edda, o sinal de torque do atuador e a posi\u00e7\u00e3o do obturador da v\u00e1lvula.  \n\nPara fins de valida\u00e7\u00e3o da t\u00e9cnica de toler\u00e2ncia a falhas proposta neste trabalho, foi \nsimulada uma s\u00e9rie de experimentos para a gera\u00e7\u00e3o de amostras de dados, formando um \nconjunto de dados de hist\u00f3rico.  \n\nTamb\u00e9m foi definido o modelo do atuador CSR25, fabricado pela empresa Coester, \nque tem um motor el\u00e9trico de 5HP, fabricado pela empresa WEG, e com torque nominal \nde 250Nm. Como o atuador tem uma prote\u00e7\u00e3o interna contra o aumento repentino do \ntorque, ent\u00e3o foi definido como valor de sobre-torque 275Nm e ap\u00f3s isso ele \u00e9 \ndesligado. A v\u00e1lvula adotada cont\u00e9m um obturador do tipo gaveta.  \n\nCom esses par\u00e2metros definidos, j\u00e1 \u00e9 poss\u00edvel simular os comportamentos normal, \nde degrada\u00e7\u00e3o e de falhas que podem ser observados no conjunto atuador e v\u00e1lvula. \n\nPor exemplo, as causas de algumas das falhas que podem ser simuladas s\u00e3o o \naumento gradual do torque ou a dificuldade em movimentar o obturador por estar mais \nr\u00edgido e bloqueado. Essas falhas influenciam diretamente o valor do torque e a posi\u00e7\u00e3o \ndo obturador. Tudo isso \u00e9 feito por meio de ajustes em par\u00e2metros no modelo \nmatem\u00e1tico do simulador. \n\nPara realizar os experimentos de abertura e o fechamento do obturador, foram \nsimuladas falhas em dois par\u00e2metros do modelo matem\u00e1tico. A inje\u00e7\u00e3o de falhas foi \nfeita mediante modifica\u00e7\u00e3o gradual dos par\u00e2metros nas equa\u00e7\u00f5es do modelo \nmatem\u00e1tico. Deste modo pode-se simular a degrada\u00e7\u00e3o nas partes do sistema at\u00e9 atingir \no teto de sobre-torque em 275Nm, considerado como falha. Os dois par\u00e2metros s\u00e3o: \n\n\u2022 K2: corresponde a falhas observadas no segundo sistema de redu\u00e7\u00e3o \ncinem\u00e1tica. Trata-se da quebra da engrenagem sem-fim. Por ser uma pe\u00e7a \nfr\u00e1gil do sistema de redu\u00e7\u00e3o, pode sofre degrada\u00e7\u00e3o ou at\u00e9 mesmo romper-se \nquando receber um esfor\u00e7o mec\u00e2nico adicional, causando um sobre-torque.  \n\n\u2022 Km: corresponde \u00e0 degrada\u00e7\u00e3o da elasticidade da mola na v\u00e1lvula. Esta, ao \nlongo do tempo, vai se degradando, perdendo suas caracter\u00edsticas iniciais e \nalterando sua a\u00e7\u00e3o, modificando a posi\u00e7\u00e3o do obturador. \n\n\n\n \n\n \n\n \n\n \n\n136 \n\nA modifica\u00e7\u00e3o gradual dos par\u00e2metros utilizados para inje\u00e7\u00e3o de foi foram feita at\u00e9 \nalcan\u00e7ar o teto de sobre-torque conforme a Tabela 5.1: \n\nTabela 5.1: Configura\u00e7\u00e3o dos par\u00e2metros para inje\u00e7\u00e3o de falhas. \n\nPar\u00e2metro Faixa Taxa \nK2 11,00 \u2013 12,00 0,0033 \nKm 4,215 \u2013 5,215 0,0033 \n\n \n\nA modifica\u00e7\u00e3o gradual desses par\u00e2metros visa simular uma situa\u00e7\u00e3o de degrada\u00e7\u00e3o \nprogressiva dos componentes at\u00e9 a ocorr\u00eancia da falha. Por exemplo, quando o \npar\u00e2metro K2 est\u00e1 na faixa de 11,00 (250Nm) est\u00e1 em situa\u00e7\u00e3o normal de opera\u00e7\u00e3o, mas \nquando come\u00e7a a desviar-se em dire\u00e7\u00e3o a 12,00, inicia-se um processo de degrada\u00e7\u00e3o \ndo componente. Sempre que este atingir o teto 12,00 (275Nm), configura-se situa\u00e7\u00e3o de \nsobre-torque, o componente j\u00e1 sofreu muito esfor\u00e7o extra e \u00e9 considerado \ncomportamento de falha. Observa-se que a ocorr\u00eancia dessa falha \u00e9 em raz\u00e3o do \ndesgaste natural das engrenagens, simuladas nesse experimento. Na Figura 5.4, \u00e9 \napresentada a sa\u00edda do simulador para este caso de teste. \n\n0 10 20 30 40 50 60 70 80 900 100\n0\n\n25\n\n50\n\n75\n\n100\n\n125\n\n150\n\n175\n\n200\n\n225\n\n250\n\n275\n\n300\n\nT\no\nrq\nu\ne \n[N\n\nm\n]\n\nTempo [s]\n\nFalha\n\nNormal\n\n \n\nFigura 5.4: Sa\u00edda do simulador para o sinal de torque e falha injetada no par\u00e2metro K2. \n\nPode-se tamb\u00e9m simular, por exemplo, a perda da elasticidade na mola devido ao \ndesgaste natural da pe\u00e7a. Isso pode ser simulado pelo par\u00e2metro Km sofrendo uma \nmudan\u00e7a gradual (alterando-se de 4,215 at\u00e9 5,215). O efeito disso \u00e9 que a mola se \ntornar\u00e1 mais r\u00edgida e por consequ\u00eancia ser\u00e1 exigido mais torque do motor, que n\u00e3o \nconseguir\u00e1 movimentar o obturador at\u00e9 sua posi\u00e7\u00e3o inicial, deixando o canal de vaz\u00e3o \nparcialmente aberto ou fechado, por consequ\u00eancia, em estado falha. Na Figura 5.5, \u00e9 \napresentada a sa\u00edda do simulador para este caso de teste. \n\nUm grande exemplo para esses eventos \u00e9 o sistema de transporte de \u00e1gua de \nadutoras ou tubula\u00e7\u00f5es de esgoto, que \u00e9 muito comum no saneamento b\u00e1sico das \ncidades. Nesse sistema, pode-se observar uma situa\u00e7\u00e3o de falha que \u00e9 normalmente \n\n\n\n \n\n \n\n \n\n \n\n137 \n\ncausada pelo ac\u00famulo de sedimentos (ou res\u00edduos) na base da v\u00e1lvula. Esses res\u00edduos \npodem ser areia, terra ou at\u00e9 pequenas part\u00edculas (como galhos ou pedras), que \ndecantam no fundo das tubula\u00e7\u00f5es e podem se concentrar nas conex\u00f5es das v\u00e1lvulas. \nNesse caso, para que a v\u00e1lvula se feche por completo (sem vazamentos), \u00e9 necess\u00e1rio \nque o atuador forne\u00e7a um torque maior, que, muitas vezes, pode atingir o sobre-torque e \nir degradando as engrenagens ao longo do tempo devido ao grande esfor\u00e7o exercido. \n\n0   10 20 30 40 50 60 70 80 90 100\n0\n\n10\n\n20\n\n30\n\n40\n\n50\n\n60\n\n70\n\n80\n\n90\n\n100\n\n \n\nFigura 5.5: Sa\u00edda do simulador para o sinal de posi\u00e7\u00e3o do obturador e falha injetada no \npar\u00e2metro Km. \n\nCom a simula\u00e7\u00e3o das falhas para os par\u00e2metros K2 e Km j\u00e1 \u00e9 poss\u00edvel gerar todos os \nconjuntos de dados de hist\u00f3rico necess\u00e1rios para os experimentos. Foram gerados \namostras de dados para treinamento e para testes. \n\nPara treinar as redes neurais com os dados gerados, primeiro \u00e9 preciso aplic\u00e1-los a \numa ferramenta de processamento de sinais. Os dados foram inseridos na ferramenta \nWatchdog Agent (DJURDJANOVIC ET AL., 2003) que aplica uma fus\u00e3o nos sinais \n(torque e posi\u00e7\u00e3o) e extrai as caracter\u00edsticas deste sinal, a partir da an\u00e1lise da energia, \nobtido pela Transformada Wavelet Packet (QIU, HAI ET AL., 2006). Ap\u00f3s o pr\u00e9-\nprocessamento, os dados est\u00e3o prontos para os experimentos no Sistema de Manuten\u00e7\u00e3o \nInteligente. \n\n5.6 Treinamento das Redes Neurais \nO treinamento \u00e9 a parte mais importante do preparo do SOM para aprender sobre o \n\ncomportamento do sistema. Nesta se\u00e7\u00e3o, ser\u00e1 apresentado como utilizar os dados \ngerados pelo simulador de inje\u00e7\u00e3o de falhas para treinamento das redes neurais que \nser\u00e3o utilizadas durante os experimentos em software e hardware. \n\n\n\n \n\n \n\n \n\n \n\n138 \n\n5.6.1 Treinamento para experimento em software \n\nNesta se\u00e7\u00e3o, ser\u00e1 apresentado como treinar as redes neurais para realizar os \nexperimentos em software, utilizando os dados gerados pelo simulador. \n\nTodos os experimentos em software s\u00e3o feitos com base em simula\u00e7\u00f5es executadas \nno PC. Essas simula\u00e7\u00f5es incluem as etapas de treinamentos e testes. \n\nPara auxiliar nos experimentos, foi adotado o ambiente MATLAB 7 para executar o \nSOM Toolbox (VESANTO, J. ET AL., 1999) (VESANTO, J. ET AL., 2000). Al\u00e9m \ndisso, foi adotada uma ferramenta para experimentos de toler\u00e2ncia a falhas, baseado no \nSOM Toolbox, que ser\u00e1 utilizada para treinamentos, testes e coleta de resultados.  \n\nEssa ferramenta faz o carregamento de dados de entrada para treinamento e gera\u00e7\u00e3o \nde resultados extra\u00eddos do SOM. \u00c9 focada nas etapas de detec\u00e7\u00e3o, diagn\u00f3stico e \npredi\u00e7\u00e3o de falhas, como nos algoritmos apresentados nas se\u00e7\u00f5es 4.2.1 a 4.2.4. \n\nEm virtude de o SOM conter diversos par\u00e2metros para configura\u00e7\u00e3o do algoritmo de \ntreinamento, foram adotadas as mesmas configura\u00e7\u00f5es utilizadas para treinamento do \nprot\u00f3tipo de hardware do SOM, conforme visto na se\u00e7\u00e3o 4.4.2, e os par\u00e2metros \nadotados conforme Tabela 4.1. \n\nNa Figura 5.6, \u00e9 apresentado o modelo de treinamento para esses experimentos. \n\nT\nNEEE ],...,,[ 21=E\n\n \n\nFigura 5.6: Modelo de treinamento para experimentos em software.  \n\nO modelo de treinamento \u00e9 baseado nas sa\u00eddas geradas pelo Simulador do Modelo \nMatem\u00e1tico (GON\u00c7ALVES ET AL., 2008). O simulador realiza a tarefa de injetar \nfalhas em partes espec\u00edficas no modelo do atuador (limitando-se ao dom\u00ednio das falhas \nmais cr\u00edticas), possibilitando gerar um conjunto de dados rico em informa\u00e7\u00f5es de \ncomportamento do atuador. Esses dados s\u00e3o utilizados para treinar o SOM, a fim de \naprender o comportamento das partes onde as falhas foram injetadas. \n\nComo s\u00e3o utilizadas tr\u00eas redes neurais, cada amostra de dados necess\u00e1rios para o \ntreinamento deve ser gerada pelo Simulador do Modelo Matem\u00e1tico. Estes dados \nseguem o modelo apresentado na se\u00e7\u00e3o 4.2, por meio das Figuras 4.2 e 4.3. \n\nOs sinais gerados s\u00e3o apresentados \u00e0 ferramenta de Processamento de Sinais, que \nretorna, como sa\u00edda, um vetor com a energia do sinal E=[E1, E2, ..., EN], onde EN \u00e9 a \n\n\n\n \n\n \n\n \n\n \n\n139 \n\nenergia de cada banda de frequ\u00eancia. Esses dados s\u00e3o aprendidos e armazenados pelas \nredes neurais do Banco de Conhecimentos ou Hist\u00f3ricos.  \n\nAp\u00f3s o treinamento, os algoritmos de Detec\u00e7\u00e3o de Anormalidade, Diagn\u00f3stico de \nFalha e Predi\u00e7\u00e3o do Comportamento utilizar\u00e3o as redes neurais j\u00e1 treinadas para \naplicarem as t\u00e9cnicas de toler\u00e2ncia a falhas no atuador el\u00e9trico.  \n\nA partir disso, os dados de testes j\u00e1 podem ser apresentados para simular o \nfuncionamento do Sistema de Manuten\u00e7\u00e3o Inteligente. \n\n5.6.2 Treinamento para experimento no prot\u00f3tipo em hardware \n\nNesta se\u00e7\u00e3o, ser\u00e1 apresentado como treinar as redes neurais para realizar os \nexperimentos no sistema embarcado (hardware) usando as amostras geradas pelo \nsimulador. Espera-se que, com esses resultados, os experimentos atinjam os mesmos \nobjetivos alcan\u00e7ados em software, somente para os casos de detec\u00e7\u00e3o e diagn\u00f3stico de \nfalhas. \n\nO treinamento para os experimentos em hardware reutiliza as mesmas redes neurais \ntreinadas nos experimentos em software. Isso \u00e9 devido ao hardware do SOM n\u00e3o \nsuportar o treinamento das redes neurais internas.  \n\nPara auxiliar nos experimentos, \u00e9 necess\u00e1rio utilizar as ferramentas ISE e XPS, da \nXilinx, para programa\u00e7\u00e3o do sistema embarcado e da placa de desenvolvimento do \nprot\u00f3tipo. \n\nNa Figura 5.7, \u00e9 apresentado o modelo de treinamento para os experimentos. \n\nProcessamento de Sinais pela \nTransformada Wavelet\n\nPC\n\nSimulador do Modelo Matem\u00e1tico\n\nTe, a\n\nSOM Treinado \n\nSOM para \nDetec\u00e7\u00e3o de \nAnormalidade\n\nSOM para \nDiagn\u00f3stico de \n\nFalha\n\nBanco de Conhecimentos ou \nHist\u00f3ricos \n\nT\nNEEE ],...,,[ 21=E\n\nAtuador \nEl\u00e9trico\n\nSinal de \nTorque e \nPosi\u00e7\u00e3o\n\nV\net\no\nr \nE\nn\ntr\nad\na:\n\n1\n0\n0\n1\n0\n1\n1\n0\n1\n0\n0\n0\n1\n..\n.\n\nProcessamento de Sinais\n\nSistema Embarcado de Manuten\u00e7\u00e3o Inteligente\n\nxj\n\nM\u00e1quina de \nEstados\n\n(Controle)\n\nBRAM\n(W)\n\nwi\n\nComparador \n<\n\nDist\u00e2ncia \nEuclidiana\n\nBMU\n\nERRO\n\nD\n\nInje\u00e7\u00e3o \nde Falha\n\n \n\nFigura 5.7: Modelo de treinamento para experimentos no sistema embarcado.  \n\nO modelo de treinamento tamb\u00e9m \u00e9 baseado nas sa\u00eddas geradas pelo Simulador do \nModelo Matem\u00e1tico, que, nesse caso, reutilizar\u00e1 as redes neurais j\u00e1 treinadas pelo \nexperimento em software. Como o hardware do SOM funciona para apenas um dos \ncasos, deve-se selecionar qual rede neural utilizar, isto \u00e9, ou para detec\u00e7\u00e3o, ou para \ndiagn\u00f3stico em cada um dos experimentos.  \n\n\n\n \n\n \n\n \n\n \n\n140 \n\nOs pesos sin\u00e1pticos dos neur\u00f4nios do SOM devem ser exportados, de forma que \npossam ser armazenados na mem\u00f3ria interna (BRAM) do sistema embarcado. Desse \nmodo, estes s\u00e3o convertidos por meio de um script do padr\u00e3o num\u00e9rico decimal para o \nbin\u00e1rio, em que cada elemento do vetor de pesos sin\u00e1pticos \u00e9 convertido para a \nrepresenta\u00e7\u00e3o bin\u00e1ria, seguindo a formata\u00e7\u00e3o num\u00e9rica de Ponto Flutuante IEEE 754.  \n\nA etapa de transfer\u00eancia dos vetores do SOM j\u00e1 treinado, para o sistema embarcado, \n\u00e9 realizada antes da s\u00edntese pela ferramenta ISE. Durante a s\u00edntese, \u00e9 criado o \ncomponente BRAM, que armazena os dados referentes ao SOM treinado.  \n\nA pr\u00f3xima etapa \u00e9 sintetizar todo o sistema embarcado conforme visto na se\u00e7\u00e3o \n4.5.1. Neste, \u00e9 criada toda a plataforma necess\u00e1ria do Sistema Embarcado de \nManuten\u00e7\u00e3o inteligente j\u00e1 com o SOM adequado para cada caso. \n\nAp\u00f3s a prepara\u00e7\u00e3o do sistema embarcado, os algoritmos de Detec\u00e7\u00e3o de \nAnormalidade ou Diagn\u00f3stico de Falha utilizar\u00e3o o SOM treinado para aplicar as \nt\u00e9cnicas de toler\u00e2ncia a falhas no atuador el\u00e9trico. A partir da\u00ed a execu\u00e7\u00e3o de tarefas de \ntestes \u00e9 realizada por uma aplica\u00e7\u00e3o em software executada na plataforma.  \n\nCom o sistema embarcado definido, o software de aplica\u00e7\u00e3o com a etapa de teste do \nSistema de Manuten\u00e7\u00e3o Inteligente precisa ser carregado. Essa aplica\u00e7\u00e3o far\u00e1 a leitura \ndos sinais de torque coletados no atuador el\u00e9trico, realizar\u00e1 o processamento de sinais e \npreparar\u00e1 os vetores de entrada. Esses vetores s\u00e3o apresentados na entrada do hardware \ndo SOM, que realizar\u00e1 a tarefa de detec\u00e7\u00e3o ou diagn\u00f3stico das falhas em tempo real. \n\nPara gerar os resultados do experimento, as sa\u00eddas do hardware do SOM s\u00e3o \narmazenadas na mem\u00f3ria dispon\u00edvel no sistema embarcado. Esses dados s\u00e3o enviados \npara o PC, e ser\u00e3o processados pelo MATLAB para converter em gr\u00e1ficos de erro de \nquantiza\u00e7\u00e3o ou U-Matrix. Essa parte \u00e9 necess\u00e1ria, pois o sistema embarcado ainda n\u00e3o \ntem uma IHC (Interface Humano-Computador).  \n\n5.7 Resultados para experimentos em software \nOs resultados visam apresentar alguns casos de teste, para comprovar a efic\u00e1cia do \n\nSOM em detectar, diagnosticar e prever as falhas no atuador el\u00e9trico. \n\nEles s\u00e3o baseados nos algoritmos apresentados na se\u00e7\u00e3o 4.2, em que para cada uma \ndas etapas obt\u00e9m-se um resultado diferente. Para a Detec\u00e7\u00e3o de Anormalidades, ver \nalgoritmo na se\u00e7\u00e3o 4.2.2, para Diagn\u00f3stico de Falhas, ver algoritmo na se\u00e7\u00e3o 4.2.3 e \npara Predi\u00e7\u00e3o de Falhas, ver algoritmo na se\u00e7\u00e3o 4.2.4. \n\nOs experimentos foram realizados analisando as falhas K2 (referente a falhas na \nengrenagem do sem-fim) e Km (referente \u00e0 degrada\u00e7\u00e3o na mola) e utilizando os dados de \ntestes gerados pelo Simulador do Modelo Matem\u00e1tico. \n\n5.7.1 Detec\u00e7\u00e3o de Anormalidades \n\nOs gr\u00e1ficos de resultados para o Erro de Quantiza\u00e7\u00e3o (Eq), utilizado para detectar \nanormalidades, s\u00e3o apresentados nas Figuras 5.8 e 5.9. Foram simulados o \nfuncionamento, no primeiro caso, para o componente K2 e, no segundo caso, para o \ncomponente Km.  \n\nNestas figuras, o Erro de Quantiza\u00e7\u00e3o (Eq) foi apresentado em rela\u00e7\u00e3o aos Ciclos de \nOpera\u00e7\u00e3o, ou seja, corresponde \u00e0 aquisi\u00e7\u00e3o de um conjunto de amostras para uma \ndeterminada situa\u00e7\u00e3o de comportamento ao longo do tempo. \n\n\n\n \n\n \n\n \n\n \n\n141 \n\n0 50 100 150 200 250 300\n0\n\n0.01\n\n0.02\n\n0.03\n\n0.04\n\n0.05\n\n \n\nFigura 5.8: Resultado de Detec\u00e7\u00e3o de Anormalidades para falha em K2. \n\n0 50 100 150 200 250 300\n0\n\n0.01\n\n0.02\n\n0.03\n\n0.04\n\n0.05\n\n \n\nFigura 5.9: Resultado de Detec\u00e7\u00e3o de Anormalidades para falha em Km. \n\nAs amostras utilizadas para teste foram definidas na seguinte ordem: \n\n\u2022 Amostras de 1 \u2013 100: comportamento normal.  \n\n\u2022 Amostras de 101 \u2013 200: comportamento em degrada\u00e7\u00e3o.  \n\n\u2022 Amostras de 201 \u2013 300: comportamento de falha. \nDurante as 100 primeiras amostras, por serem simuladas, sabe-se, a princ\u00edpio, que \n\ns\u00e3o referentes ao comportamento normal. Desse modo, o algoritmo de Detec\u00e7\u00e3o de \nAnormalidades conseguiu identificar corretamente as anormalidades testadas no sistema \nque ocorreram a partir da 101a amostra. \n\n5.7.2 Diagn\u00f3stico de Falhas \n\nO resultado do diagn\u00f3stico de falhas \u00e9 visualizado pela U-Matrix, que revela a \nclassifica\u00e7\u00e3o das amostras de acordo com a classe a que pertence. Na Figura 5.10, \u00e9 \n\n\n\n \n\n \n\n \n\n \n\n142 \n\napresentada a U-Matrix do SOM treinado, revelando as regi\u00f5es de classifica\u00e7\u00e3o para \ncada modo de comportamento que possibilita o diagn\u00f3stico destes. \n\nForam simulados comportamentos de teste para os componentes K2 e Km. As \namostras utilizadas para teste em cada componente foram definidas na seguinte ordem: \n\n\u2022 Amostras de 1 \u2013 50: comportamento normal.  \n\n\u2022 Amostras de 51 \u2013 100: comportamento em degrada\u00e7\u00e3o.  \n\n\u2022 Amostras de 101 \u2013 150: comportamento de falha. \n\n \n\nFigura 5.10: Visualiza\u00e7\u00e3o do SOM treinado para diagn\u00f3stico dos componentes K2.e Km.  \n\nNa Figura 5.11, s\u00e3o apresentados os resultados de diagn\u00f3stico. Nesse caso, o SOM \nrevela a classifica\u00e7\u00e3o dos modos de comportamento dos dados de teste, projetando-os \ndentro dos agrupamentos a qual pertence. \n\n \n\nFigura 5.11: Resultado de diagn\u00f3stico de falhas para os dados de testes nos \ncomponentes K2.e Km.  \n\n\n\n \n\n \n\n \n\n \n\n143 \n\nNota-se pela an\u00e1lise visual do resultado que, em geral, a classifica\u00e7\u00e3o dos modos de \ncomportamento para K2 e Km foram acertadas corretamente pelo SOM. Desse modo, o \nSOM foi capaz de identificar em qual modo de comportamento pertence o sinal de \nentrada.  \n\nEntretanto, durante o diagn\u00f3stico, o SOM tamb\u00e9m est\u00e1 sujeito \u00e0 ocorr\u00eancia de erros \nna classifica\u00e7\u00e3o. Isso pode ocorrer quando s\u00e3o utilizados poucos dados para \ntreinamento, n\u00e3o refletindo todos os casos necess\u00e1rios para generalizar o problema. \nOutra vari\u00e1vel que pode influenciar a classifica\u00e7\u00e3o \u00e9 a presen\u00e7a de ru\u00eddo nos sinais. \n\nQuando se utiliza apenas os r\u00f3tulos dos neur\u00f4nios (Figura 5.10 da direita) como \nt\u00e9cnica para classificar, em alguns casos, a classifica\u00e7\u00e3o pode apresentar erros. No \nentanto, quando levam em considera\u00e7\u00e3o as regi\u00f5es de comportamentos comuns (Figura \n5.10 da esquerda), os erros diminuem. \n\nNo experimento da Figura 5.11, foram utilizadas 150 amostras em cada componente. \nQuando se utiliza os r\u00f3tulos do SOM para classifica\u00e7\u00e3o, ocorre 1 erro para K2 (menor \nque 1%) e 4 erros para Km (menor que 3%). \n\nEm ambos os experimentos, quando se utiliza as regi\u00f5es de comportamentos para \nclassifica\u00e7\u00e3o, todos os casos acertam a classifica\u00e7\u00e3o em 100%. Isso ocorre porque \nalguns neur\u00f4nios vizinhos n\u00e3o recebem um r\u00f3tulo, mas observando a forma\u00e7\u00e3o das \nregi\u00f5es, pode-se notar pela similaridade dos neur\u00f4nios que estes tamb\u00e9m classificam os \ndados para a mesma classe. \n\n5.7.3 Predi\u00e7\u00e3o e Monitoramento de Falhas \n\nO resultado para predi\u00e7\u00e3o e monitoramento de falhas \u00e9 apresentado pela proje\u00e7\u00e3o de \numa trajet\u00f3ria na U-Matrix. Por meio dela, \u00e9 revelado visualmente o caminho percorrido \npelos neur\u00f4nios vencedores, proporcionando monitorar todo o ciclo de vida do sistema \nem an\u00e1lise.  \n\nNa Figura 5.12, \u00e9 apresentada a U-Matrix para um TKM treinado, que \u00e9 utilizado \npara monitorar a trajet\u00f3ria dos modos de comportamento ao longo do tempo decorrido. \n\n \n\nFigura 5.12: Visualiza\u00e7\u00e3o do TKM treinado para monitorar os componentes K2.e Km. \n\n\n\n \n\n \n\n \n\n \n\n144 \n\nForam utilizados os mesmos dados de teste do experimento da se\u00e7\u00e3o anterior para \nsimular o comportamento dos componentes K2 e Km, ao longo do tempo. A partir de \nagora, os ciclos de opera\u00e7\u00e3o ser\u00e3o ordenados na ordem de chegada das amostras e ser\u00e3o \nchamados de s\u00e9rie temporal.  \n\nNa s\u00e9rie temporal utilizada para teste de cada componente, a ordem de tempo \nadotada \u00e9 referente a um conjunto de dados adquiridos que representa uma determinada \nsitua\u00e7\u00e3o de comportamento ocorrida no tempo. A s\u00e9rie foi definida na seguinte ordem: \n\n\u2022 Amostras de 1 \u2013 50: comportamento normal.  \n\n\u2022 Amostras de 51 \u2013 100: comportamento em degrada\u00e7\u00e3o.  \n\n\u2022 Amostras de 101 \u2013 150: comportamento de falha. \n\nOs par\u00e2metros de configura\u00e7\u00e3o do TKM foram ajustados do seguinte modo: as \ndimens\u00f5es do mapa seguem o mesmo padr\u00e3o do SOM utilizado anteriormente, o \nhist\u00f3rico de ativa\u00e7\u00f5es (ai) foi ajustado para 5 amostras e a profundidade da mem\u00f3ria (?) \npara 0,07. Estes valores dos par\u00e2metros foram definidos empiricamente. \n\nNas Figuras 5.13 e 5.14, s\u00e3o apresentados os resultados para predi\u00e7\u00e3o e \nmonitoramento do comportamento para os componentes K2 e Km.  \n\n0 20 40 60 80 100 120 140\n0\n\n10\n\n20\n\n30\n\n40\n\n50\n\n60\n\n70\n\n80\n\n90\n\n \n\nFigura 5.13: Visualiza\u00e7\u00e3o da trajet\u00f3ria para TKM e a dire\u00e7\u00e3o da tend\u00eancia para caso de \nteste K2, sendo (a) Caminho do trajeto percorrido pelos neur\u00f4nios vencedores e (b) \n\nRela\u00e7\u00e3o dos neur\u00f4nios vencedores para cada instante de tempo. \n\nNesses resultados, nota-se a correla\u00e7\u00e3o espa\u00e7o-temporal entre os dados da s\u00e9rie de \nteste. A trajet\u00f3ria percorrida revela a dire\u00e7\u00e3o da tend\u00eancia nos comportamentos \nobservados e que est\u00e3o sendo mapeados nos agrupamentos. Tamb\u00e9m \u00e9 poss\u00edvel \nidentificar um padr\u00e3o no comportamento da trajet\u00f3ria no per\u00edodo de tempo. \n\nAl\u00e9m disso, no gr\u00e1fico da rela\u00e7\u00e3o dos neur\u00f4nios vencedores com o tempo, pode-se \nobservar o instante em que ocorreram as mudan\u00e7as de comportamento e identificar uma \ntend\u00eancia na classifica\u00e7\u00e3o da s\u00e9rie temporal. Quando ocorre uma mudan\u00e7a de um \n\n\n\n \n\n \n\n \n\n \n\n145 \n\nneur\u00f4nio vencedor para outro do mesmo agrupamento, significa que a s\u00e9rie de testes j\u00e1 \nsofreu modifica\u00e7\u00f5es em rela\u00e7\u00e3o a seus valores de hist\u00f3rico. \n\n0 20 40 60 80 100 120 140\n0\n\n10\n\n20\n\n30\n\n40\n\n50\n\n60\n\n70\n\n80\n\n90\n\n \n\nFigura 5.14: Visualiza\u00e7\u00e3o da trajet\u00f3ria para TKM e a dire\u00e7\u00e3o da tend\u00eancia para caso de \nteste Km, sendo (a) Caminho do trajeto percorrido pelos neur\u00f4nios vencedores e (b) \n\nRela\u00e7\u00e3o dos neur\u00f4nios vencedores para cada instante de tempo. \n\nA informa\u00e7\u00e3o importante para a predi\u00e7\u00e3o de comportamento que pode ser obtida dos \nresultados vistos, nas Figuras 5.13 e 5.14, s\u00e3o os instantes finais antes da mudan\u00e7a para \no comportamento em falha.  \n\nPara o caso do componente K2 (Figuras 5.13), o instante de tempo em que se revela \na tend\u00eancia para falha \u00e9 somente a partir da amostra 91, quando j\u00e1 estiver muito \npr\u00f3ximo da manifesta\u00e7\u00e3o da falha, mas, ainda sim, existe um tempo de toler\u00e2ncia at\u00e9 a \nmanifesta\u00e7\u00e3o da falha.  \n\nPara o caso do componente Km (Figuras 5.14), a tend\u00eancia at\u00e9 a falha \u00e9 mais \ndefinida do que em K2, pois os neur\u00f4nios vencedores seguem um padr\u00e3o constante de \nmudan\u00e7a de comportamento. A partir da amostra 85, come\u00e7a a se concretizar a transi\u00e7\u00e3o \npara um comportamento de falha, em que a partir da amostra 100 ocorre realmente a \nmanifesta\u00e7\u00e3o da falha. \n\nO importante \u00e9 identificar em qual neur\u00f4nio ocorre a mudan\u00e7a de um estado de \ndegrada\u00e7\u00e3o para a falha, deste modo pode-se calcular o tempo restante at\u00e9 a \nmanifesta\u00e7\u00e3o da falha. \n\nPara ambos os casos, pode-se emitir um sinal de alarme para a equipe de \nmanuten\u00e7\u00e3o quando a s\u00e9rie temporal de testes for classificada para alguns desses \nneur\u00f4nios vencedores. Esses neur\u00f4nios podem ser considerados como \u201ccr\u00edticos\u201d, pois \nest\u00e3o situados em regi\u00f5es onde ocorre a transi\u00e7\u00e3o para outra situa\u00e7\u00e3o de \ncomportamento, ou seja, uma situa\u00e7\u00e3o de poss\u00edvel falha. \n\n\n\n \n\n \n\n \n\n \n\n146 \n\n5.8 Resultados para Experimento no Prot\u00f3tipo em Hardware \nPara o experimento de Detec\u00e7\u00e3o de Anormalidade e Diagn\u00f3stico de Falhas em \n\nhardware foi utilizado um prot\u00f3tipo implementado em uma placa de desenvolvimento \n(XILINX, 2005b) e, para gerar resultados, foram executados os softwares de testes \nsobre o sistema operacional do sistema embarcado (WILLIAMS; PETALOGIX, 2008).  \n\nDesse modo, os experimentos objetivam utilizar o hardware do SOM, que armazena \nna mem\u00f3ria interna do som_core a rede neural treinada. Os resultados foram coletados \nna placa de experimentos e enviados para o PC, onde s\u00e3o processados pelo MATLAB, a \nfim de gerar os gr\u00e1ficos do erro de quantiza\u00e7\u00e3o e apresenta\u00e7\u00e3o da U-Matrix para \navalia\u00e7\u00f5es. \n\nTamb\u00e9m foram realizados experimentos comparativos entre os resultados obtidos \npelo hardware do SOM em rela\u00e7\u00e3o aos experimentos anteriores em software. Isso \u00e9 \nimportante para validar o correto funcionamento do projeto do sistema embarcado. \n\nPara o experimento de Detec\u00e7\u00e3o de Anormalidades, foram utilizados os mesmos \ndados para testes do experimento em software, al\u00e9m de utilizar a mesma rede neural \ntreinada. Os resultados foram praticamente os mesmos quando comparados aos do \nsoftware.  \n\nPara avaliar o quanto foram pr\u00f3ximos os resultados obtidos em hardware e \nsoftware, foi calculada a diferen\u00e7a entre os dois e calculado o valor de m\u00e1xima e \nm\u00ednima diferen\u00e7a. Na Tabela 5.2, s\u00e3o apresentados os resultados da diferen\u00e7a:  \n\nTabela 5.2: Diferen\u00e7a da m\u00e1xima amostra entre os resultados de hardware e software \npara Detec\u00e7\u00e3o de Anormalidades. \n\nPar\u00e2metro Diferen\u00e7a \nK2 5,9332.10\n\n-7  \nKm 5,9332.10\n\n-7  \n\nDevido aos resultados serem muito pr\u00f3ximos entre si, a diferen\u00e7a m\u00e1xima entre os \nerros de quantiza\u00e7\u00e3o \u00e9 1.10-7. Isso comprova que os resultados obtidos pelo hardware \ndo SOM est\u00e3o corretos em rela\u00e7\u00e3o \u00e0s simula\u00e7\u00f5es em software, apresentando valores \npraticamente iguais. \n\nPara o experimento de Diagn\u00f3stico de Falhas, tamb\u00e9m foram utilizados os mesmos \ndados dos testes do experimento em software, al\u00e9m de utilizar a mesma rede neural \ntreinada. Os resultados foram os mesmos quando comparados aos do software.  \n\nForam comparadas as amostras de cada ciclo de opera\u00e7\u00e3o, do hardware em rela\u00e7\u00e3o \nao software, verificando se os neur\u00f4nios vencedores (BMU) obtidos foram os mesmos. \nEm 100% dos casos, o hardware do SOM classificou corretamente as amostras de teste, \napresentando os mesmos resultados do software. \n\nEm fun\u00e7\u00e3o de os resultados serem iguais entre o hardware e software, n\u00e3o ser\u00e3o \napresentados aqui os resultados de visualiza\u00e7\u00e3o obtidos pelo sistema embarcado \n(gr\u00e1ficos para Erro de Quantiza\u00e7\u00e3o e a U-Matrix). \n\nComo no sistema embarcado foi instalado um sistema operacional, este tem suporte \na uma interface de entrada e sa\u00edda padr\u00e3o, que pode ser visualizada pelo software \nHiperTerminal (programa do Windows que interpreta a interfaces de comunica\u00e7\u00e3o com \n\n\n\n \n\n \n\n \n\n \n\n147 \n\no sistema operacional embarcado), por meio da porta RS-232 conectado ao sistema \nembarcado. \n\nNa Figura 5.15, \u00e9 apresentado um screenshot, que mostra a ferramenta XPS da \nXilinx para programar o FPGA e as mensagens, durante o boot do PetaLinux, vistas na \ntela do HyperTerminal. \n\n \n\nFigura 5.15: Screenshot da tela do PC mostrando a ferramenta XPS da Xilinx e as \nmensagens de boot no HyperTerminal. \n\nNa Figura 5.16, \u00e9 apresentada a execu\u00e7\u00e3o de um programa de teste na plataforma do \nsistema embarcado. Esse programa realiza execu\u00e7\u00f5es infinitas, apresentando entradas de \ndados para teste no dispositivo do SOM at\u00e9 ser interrompido pelo usu\u00e1rio. Nessa figura, \ntamb\u00e9m s\u00e3o apresentados os resultados coletados no dispositivo, mostrando o \u00edndice do \nneur\u00f4nio vencedor (BMU) e o valor do erro de quantiza\u00e7\u00e3o (ERRO). \n\nNa Figura 5.17, \u00e9 apresentada a execu\u00e7\u00e3o do programa utilizado para gerar os \nresultados avaliados neste experimento. Esse programa realiza a carga de todos os \nvetores de entrada (obtidos pelo simulador), apresenta-os ao dispositivo do hardware do \nSOM e armazena todos os resultados (BMU e ERRO) em um arquivo texto na mem\u00f3ria \ndo sistema. Nessa figura, \u00e9 apresentada a execu\u00e7\u00e3o dos dois programas, um para \ndetec\u00e7\u00e3o e outro para diagn\u00f3stico, e tamb\u00e9m apresenta o tempo de execu\u00e7\u00e3o para cada \ncaso. \n\n5.9 Resumo do Cap\u00edtulo \nNeste cap\u00edtulo, foram abordadas as etapas necess\u00e1rias para realiza\u00e7\u00e3o dos \n\nexperimentos para a implementa\u00e7\u00e3o do SOM aplicado no Sistema de Manuten\u00e7\u00e3o \n\n\n\n \n\n \n\n \n\n \n\n148 \n\nInteligente de atuadores el\u00e9tricos. Os casos de teste desses experimentos visam simular \no funcionamento para a abordagem em software e hardware. \n\n \n\nFigura 5.16: Screenshot do HyperTerminal mostrando a execu\u00e7\u00e3o de um programa de \nteste e valores de sa\u00eddas do dispositivo coletado do som_core.  \n\n \n\nFigura 5.17: Screenshot do HyperTerminal mostrando a execu\u00e7\u00e3o do programa utilizado \npara gerar os resultados avaliados neste experimento.  \n\nO objetivo fundamental do cap\u00edtulo foi comprovar que o SOM \u00e9 uma ferramenta \nimportante na implementa\u00e7\u00e3o do Sistema de Manuten\u00e7\u00e3o Inteligente, o que foi provado \npelos resultados obtidos. \n\nFoi definida uma metodologia para a realiza\u00e7\u00e3o dos experimentos em que s\u00e3o \napresentados os passos necess\u00e1rios para simular tanto em software como em hardware. \n\nUm estudo de caso foi definido e apresentado para ser o ambiente de simula\u00e7\u00e3o para \no Sistema de Manuten\u00e7\u00e3o Inteligente, cuja aplica\u00e7\u00e3o situa-se nas v\u00e1lvulas e nos \natuadores utilizados em tubula\u00e7\u00f5es para transporte de derivados de petr\u00f3leo. Foram \napresentadas as principais caracter\u00edsticas de funcionamento do conjunto atuador e \n\n\n\n \n\n \n\n \n\n \n\n149 \n\nv\u00e1lvula. Foram tamb\u00e9m definidas as vari\u00e1veis de interesse a serem utilizadas nos \nexperimentos, o torque exercido pelo motor do atuador e a posi\u00e7\u00e3o do obturador.  \n\nJ\u00e1 que n\u00e3o existe um banco de dados com informa\u00e7\u00f5es hist\u00f3ricas de funcionamento \ndo atuador e v\u00e1lvula, foi necess\u00e1rio utilizar uma ferramenta para simular as condi\u00e7\u00f5es \nde opera\u00e7\u00e3o e gerar amostras de dados para treinamentos e testes. A ferramenta foi \ndesenvolvida pelo Grupo de Pesquisa de Manuten\u00e7\u00e3o Inteligente da UFRGS. \n\nComo a ferramenta de simula\u00e7\u00e3o est\u00e1 dispon\u00edvel, foi apresentada a t\u00e9cnica para \ninje\u00e7\u00e3o de falhas no conjunto atuador e v\u00e1lvula, que consiste em mudar gradualmente os \npar\u00e2metros no modelo matem\u00e1tico, a fim de simular mudan\u00e7as no comportamento f\u00edsico \ndo atuador. Nesse caso, foi definido simular falhas no sistema de engrenagens (sem-fim) \ne na abertura e no fechamento do obturador (mola). \n\nComo as vari\u00e1veis definidas para coleta de sinais do atuador s\u00e3o o torque exercido \npelo motor e a posi\u00e7\u00e3o do obturador, foram definidos valores para representar a \ncondi\u00e7\u00e3o normal de opera\u00e7\u00e3o, e valores-teto que representem condi\u00e7\u00e3o de falha. Com \nesses sinais dispon\u00edveis, torna-se poss\u00edvel a simula\u00e7\u00e3o de comportamentos normais, de \ndegrada\u00e7\u00e3o (mudan\u00e7a gradual de normal at\u00e9 a falha) e de falhas, que foram aplicados \ncomo entradas no SOM.  \n\nCom os dados hist\u00f3ricos prontos, foi apresentada a metodologia para o treinamento \ndo SOM nos casos de simula\u00e7\u00f5es em software e hardware. A diferen\u00e7a entre ambos \nest\u00e1 no experimento em hardware, em que utiliza a mesma rede neural treinada em \nsoftware, mas, nesse caso, os pesos sin\u00e1pticos do SOM devem ser transformados para o \nformato num\u00e9rico bin\u00e1rio do sistema embarcado.  \n\nCom todas as amostras de dados e sistemas para testes prontos, foram realizados, em \nprimeiro lugar, os experimentos em software. Estes s\u00e3o importantes para gerar \nresultados \u00fateis para posterior compara\u00e7\u00e3o com rela\u00e7\u00e3o aos resultados obtidos em \nhardware. Tamb\u00e9m foram executados experimentos para Detec\u00e7\u00e3o de Anormalidades \n(gr\u00e1fico do erro de quantiza\u00e7\u00e3o), Diagn\u00f3stico de Falhas (visualiza\u00e7\u00e3o da U-Matrix) e \nPredi\u00e7\u00e3o e Monitoramento de Falhas (visualiza\u00e7\u00e3o da U-Matrix com o trajeto dos \nneur\u00f4nios vencedores). \n\nAp\u00f3s obter os resultados de software, foram executados experimentos na plataforma \nde sistemas embarcados em hardware. Nesse caso, foram executados os experimentos \npara Detec\u00e7\u00e3o de Anormalidades e Diagn\u00f3stico de Falhas.  \n\nCom os resultados obtidos do sistema embarcado, comprovou-se que a \nimplementa\u00e7\u00e3o do hardware est\u00e1 correta em rela\u00e7\u00e3o aos resultados do software, \ncomprovando a correta implementa\u00e7\u00e3o do SOM.  \n\nOs resultados obtidos para Detec\u00e7\u00e3o de Anormalidades apresentaram diferen\u00e7as \nmuito pequenas e insignificantes quando comparados com do software. Os resultados \nobtidos para o Diagn\u00f3stico de Falhas foram os mesmos resultados do software. \n\nAl\u00e9m disso, tamb\u00e9m foram apresentadas algumas imagens da sa\u00edda obtida por meio \nda entrada e sa\u00edda padr\u00e3o do sistema embarcado, observados no programa \nHyperTerminal. Nas sa\u00eddas, s\u00e3o apresentados as chamadas para os programas de teste e \nos resultados obtidos pela leitura nos registradores do hardware do SOM. \n\nA principal vantagem desse prot\u00f3tipo \u00e9 o fato de levar menos tempo para a execu\u00e7\u00e3o \ne utilizar menos recursos computacionais, pois, nesse caso, n\u00e3o exige a utiliza\u00e7\u00e3o de um \n\n\n\n \n\n \n\n \n\n \n\n150 \n\nPC industrial em cada equipamento em que se deseja implantar o Sistema de \nManuten\u00e7\u00e3o Inteligente. Este prot\u00f3tipo pode ser aprimorado, para isso seria necess\u00e1rio:  \n\n\u2022 Implementar tratamento para os casos de overflow e underflow nos c\u00e1lculos \nfeitos pelos componentes de opera\u00e7\u00f5es matem\u00e1ticas (soma, adi\u00e7\u00e3o, \nmultiplica\u00e7\u00e3o e raiz quadrada).  \n\n\u2022 Substituir os componentes que realizam c\u00e1lculos matem\u00e1ticos em ponto \nflutuante por ponto fixo, para acelerar o tempo de execu\u00e7\u00e3o dos c\u00e1lculos e \nreduzir a \u00e1rea ocupada pelo projeto.  \n\n\u2022 Substituir o algoritmo que calcula a dist\u00e2ncia entre dois vetores, a Dist\u00e2ncia \nEuclidiana, por um algoritmo de menor custo com a Dist\u00e2ncia de Manhattan \n(HIKAWA, 2005), pois grande parte do custo da Dist\u00e2ncia Euclidiana est\u00e1 \nvinculada ao c\u00e1lculo da raiz quadrada.  \n\n\u2022 Implementar tratamento de falhas, durante o funcionamento do hardware do \nSOM, j\u00e1 que podem ocorrer alguns casos de falhas, como a falta de algum \ndado na mem\u00f3ria, overflow, fluxo de execu\u00e7\u00e3o entrar em loop infinito ou \nerro nos par\u00e2metros de configura\u00e7\u00e3o. \n\n\u2022 Implementar uma interface para utilizar o recurso de interrup\u00e7\u00e3o do sistema \nembarcado, para por exemplo, informar ao sistema operacional o fim dos \nc\u00e1lculos ou solicitar um novo vetor de entrada.  \n\n\u2022 Retirar a mem\u00f3ria interna BRAM e passar a armazenar o SOM treinado na \nmem\u00f3ria SRAM do sistema embarcado. Desse modo, n\u00e3o precisaria \nresintetizar todo o sistema embarcado cada vez que mudar os dados de \ntreinamento, o que possibilita utilizar um mesmo algoritmo do SOM para \nv\u00e1rias propostas de treinamentos. Na situa\u00e7\u00e3o atual do trabalho, isso n\u00e3o \u00e9 \nposs\u00edvel.  \n\n\u2022 O hardware do SOM deve acessar os vetores de entrada diretamente na \nmem\u00f3ria SRAM do sistema embarcado, evitando o gargalo que pode ocorrer \ndurante a carga dos vetores pelo programa de teste em software, pois \u00e9 \nsubmetido ao escalonamento de tarefas pelo sistema operacional. \n\n \n\n\n\n6 CONCLUS\u00d5ES E TRABALHOS FUTUROS \n\nEsta disserta\u00e7\u00e3o teve como objetivo maior o projeto de um prot\u00f3tipo de um sistema \nembarcado que implemente t\u00e9cnicas de manuten\u00e7\u00e3o inteligente, utilizando os Mapas \nAuto-Organiz\u00e1veis (SOM) para aplicar t\u00e9cnicas de toler\u00e2ncia a falhas em atuadores \nel\u00e9tricos na rede dutovi\u00e1ria da Transpetro. Cinco foram as \u00e1reas envolvidas nesta \npesquisa: (1) manuten\u00e7\u00e3o inteligente, (2) testes e toler\u00e2ncia a falhas, (3) redes neurais \nartificiais, em especial o SOM, (4) projeto de circuitos digitais em FPGA e (5) projeto \nde sistemas embarcados em hardware e software. Tomando por base essa divis\u00e3o, o \ntexto foi escrito de forma a distribuir os assuntos visando facilitar o entendimento e \nencadeando os principais conceitos relacionados com cada uma das \u00e1reas citadas. Em \ntodos os cap\u00edtulos, procurou-se apresentar pontos que fossem fundamentais para o \nprojeto proposto e para os trabalhos futuros. \n\nO Cap\u00edtulo 1 fez uma breve explana\u00e7\u00e3o do contexto geral do trabalho, apresentando \no contexto do problema, a motiva\u00e7\u00e3o, os objetivos, as contribui\u00e7\u00f5es e a organiza\u00e7\u00e3o do \nrestante da disserta\u00e7\u00e3o.  \n\nNo Cap\u00edtulo 2, foi tratada a apresenta\u00e7\u00e3o do problema da manuten\u00e7\u00e3o na ind\u00fastria, \nos conceitos e a metodologia de manuten\u00e7\u00e3o inteligente. O problema abordado como \nestudo de caso nessa disserta\u00e7\u00e3o \u00e9 o de falhas em atuadores el\u00e9tricos de v\u00e1lvulas em \ndutos da Transpetro.  \n\nPode-se concluir do Cap\u00edtulo 2 que a estrat\u00e9gia de manuten\u00e7\u00e3o inteligente pode \noferecer novos benef\u00edcios para o planejamento da manuten\u00e7\u00e3o nas empresas, a fim de \nantecipar a interven\u00e7\u00e3o antes da ocorr\u00eancia da falha. Para o estudo de caso, \u00e9 \nimprescind\u00edvel o planejamento de reparos nos diversos atuadores distribu\u00eddos ao longo \nde toda a rede dutovi\u00e1ria. \n\nNo Cap\u00edtulo 3, foram apresentados conceitos, fundamentos e t\u00e9cnicas de toler\u00e2ncia a \nfalhas para detec\u00e7\u00e3o, diagn\u00f3stico, predi\u00e7\u00e3o e monitoramento de falhas, focando no uso \ndas redes neurais. Al\u00e9m disso, foi definida a utiliza\u00e7\u00e3o do SOM e TKM como \nferramentas computacionais para implementar as tarefas de toler\u00e2ncia a falhas, em que \nforam apresentados os princ\u00edpios te\u00f3ricos e trabalhos relacionados.  \n\n\u00c9 poss\u00edvel inferir, a partir do Cap\u00edtulo 3, a ideia de uma arquitetura geral para o \ndesenvolvimento de um Sistema de Detec\u00e7\u00e3o, Diagn\u00f3stico e Predi\u00e7\u00e3o de Falhas e as \nferramentas de redes neurais como t\u00e9cnicas computacionais para implement\u00e1-lo. \nConclu\u00ed-se que o SOM tem as caracter\u00edsticas essenciais para desenvolver esse sistema, \npois \u00e9 geralmente aplicado \u00e0 classifica\u00e7\u00e3o de padr\u00f5es (forma\u00e7\u00e3o de agrupamentos), trata \n\n\n\n \n\n \n\n \n\n \n\n152 \n\nde grande quantidade de dados, a aprendizagem n\u00e3o supervisionada preserva as rela\u00e7\u00f5es \nestat\u00edsticas dos dados de entrada, e a ferramenta se presta \u00e0 visualiza\u00e7\u00e3o de processos \ndin\u00e2micos, al\u00e9m, claro, da vasta aplica\u00e7\u00e3o dessa rede neural na literatura para solu\u00e7\u00e3o \nde problemas semelhantes ao do presente trabalho. \n\nOs cap\u00edtulos anteriores mostraram o estado da arte necess\u00e1rio para compreender \ncomo se implementar um sistema de manuten\u00e7\u00e3o inteligente. A partir dos conceitos e \ndas defini\u00e7\u00f5es extra\u00eddos desses cap\u00edtulos, foram propostos os pr\u00f3ximos cap\u00edtulos que \nest\u00e3o relacionados com a constru\u00e7\u00e3o do prot\u00f3tipo do sistema embarcado para \nmanuten\u00e7\u00e3o inteligente. \n\nNo Cap\u00edtulo 4, foi abordada a constru\u00e7\u00e3o do prot\u00f3tipo do sistema embarcado para o \nSistema de Manuten\u00e7\u00e3o Inteligente, proposto para monitorar falhas em atuadores \nel\u00e9tricos. Tamb\u00e9m foi definida a estrutura do sistema, mostrando como aplicar e utilizar \nas redes neurais para realizar a detec\u00e7\u00e3o, diagn\u00f3stico e predi\u00e7\u00e3o de falhas. Al\u00e9m disso, \nforam implementados softwares para experimentos de simula\u00e7\u00e3o em MATLAB e, a \nseguir, apresentada a constru\u00e7\u00e3o do prot\u00f3tipo do SOM em hardware, em plataforma \nFPGA. \u00c9 importante ressaltar que foram prototipadas apenas em hardware as t\u00e9cnicas \nde detec\u00e7\u00e3o e diagn\u00f3stico de falhas. \n\nPara constru\u00e7\u00e3o do prot\u00f3tipo, os algoritmos do SOM foram implementados VHDL, \nsintetizados em FPGA e apresentados resultados de \u00e1rea ocupada, desempenho e \nconsumo de pot\u00eancia do circuito digital. Ap\u00f3s, foi definida a arquitetura do sistema \nembarcado, que visa utilizar o componente de hardware do SOM a ser acoplado em um \nsistema computacional, a fim de realizar experimentos mistos de software e hardware. \nPor fim, foi implantando neste, um sistema operacional embarcado baseado em \nGNU/Linux para executar experimentos de casos de testes utilizando softwares \nembarcados. Esse prot\u00f3tipo tem o objetivo de, no futuro, ser implantado no atuador \nel\u00e9trico. \n\nA partir do Cap\u00edtulo 4 \u00e9 poss\u00edvel concluir que o prot\u00f3tipo implementou a rede neural \nSOM em FPGA e tornou dispon\u00edvel uma plataforma para experimentos de manuten\u00e7\u00e3o \ninteligente. Essa contribui\u00e7\u00e3o \u00e9 necess\u00e1ria para realizar experimentos de detec\u00e7\u00e3o e \ndiagn\u00f3stico de falhas, simulando situa\u00e7\u00f5es reais de monitoramento on-line da condi\u00e7\u00e3o \nde opera\u00e7\u00e3o de atuadores el\u00e9tricos. Outro aspecto a ressaltar \u00e9 o espa\u00e7o dispon\u00edvel no \nFPGA, pois possibilita embarcar as outras etapas da metodologia de manuten\u00e7\u00e3o \ninteligente, como o processamento de sinais e a tomada de decis\u00e3o.  \n\nA prototipa\u00e7\u00e3o em um sistema embarcado \u00e9 importante para fornecer subs\u00eddios para \natua\u00e7\u00e3o local, j\u00e1 que o sistema passa a ser aut\u00f4nomo e pode vir a ser auto-reconfigurar \ncom a incid\u00eancia de falhas. Outro ponto importante \u00e9 que evita-se o envio de muitas \ninforma\u00e7\u00f5es para operadores humanos, como nos sistemas supervis\u00f3rios, que, muitas \nvezes, n\u00e3o os tratam de forma adequada. Nesse prot\u00f3tipo embarcado, o sistema envia \numa mensagem aos gerentes de manuten\u00e7\u00e3o, informando a detec\u00e7\u00e3o de anormalidade, \ndiagn\u00f3stico da causa e uma predi\u00e7\u00e3o at\u00e9 a manifesta\u00e7\u00e3o da falha, o que auxilia na \ntomada de decis\u00e3o para planejar as a\u00e7\u00f5es de manuten\u00e7\u00e3o corretiva ou preventiva. \n\nNo Cap\u00edtulo 5, s\u00e3o apresentados os resultados experimentais para o sistema de \nmanuten\u00e7\u00e3o inteligente divididos em duas etapas: simula\u00e7\u00e3o em software e execu\u00e7\u00e3o do \nprot\u00f3tipo em hardware. Al\u00e9m disso, foi detalhado o estudo de caso dos atuadores \nel\u00e9tricos em v\u00e1lvulas de dutos da Transpetro.  \n\n\n\n \n\n \n\n \n\n \n\n153 \n\nEm geral, para a realiza\u00e7\u00e3o dos experimentos, os dados de torque do atuador e \nposi\u00e7\u00e3o do obturador da v\u00e1lvula foram simulados por um modelo matem\u00e1tico \nimplementado em MATLAB. Contudo, condi\u00e7\u00f5es de comportamento do atuador e \nv\u00e1lvula (normal, degrada\u00e7\u00e3o e falha) foram reproduzidas em uma ferramenta de inje\u00e7\u00e3o \nde falhas no modelo matem\u00e1tico. Os experimentos foram divididos em detec\u00e7\u00e3o e \ndiagn\u00f3stico. Para cada caso, foi apresentada a estrutura de inje\u00e7\u00e3o de falhas para treinar \nsua rede neural. Finalmente, foram realizados os experimentos para avaliar a capacidade \ndas redes neurais em detectar, diagnosticar e prever falhas no sistema de manuten\u00e7\u00e3o \ninteligente, validando as t\u00e9cnicas para o estudo de caso. \n\nA partir dos experimentos realizados no Cap\u00edtulo 5, validou-se o uso do SOM para \ndetec\u00e7\u00e3o e diagn\u00f3stico e do TKM para predi\u00e7\u00e3o (com ressalvas). Nos experimentos \ntanto em software quanto no prot\u00f3tipo em hardware, foram avaliadas simula\u00e7\u00f5es com \ndados oriundos do modelo matem\u00e1tico. De acordo com os resultados obtidos em \nsoftware, comprovou-se o uso do SOM para desempenhar as tarefas de detec\u00e7\u00e3o de \nanormalidades e diagn\u00f3stico de falhas e do uso do TKM para predi\u00e7\u00e3o de \ncomportamentos futuros (necessita de uma pesquisa mais minuciosa). Al\u00e9m disso, a \nvalida\u00e7\u00e3o dessas t\u00e9cnicas possibilitou avan\u00e7ar para a prototipa\u00e7\u00e3o, pois os algoritmos \nfuncionam para desempenhar o especificado e foram utilizados como padr\u00e3o \ncomparativo para valida\u00e7\u00e3o do prot\u00f3tipo. \n\nJ\u00e1 nos experimentos no prot\u00f3tipo em hardware, os resultados foram comparados \n\u00e0queles obtidos pelos experimentos em software. A partir disso, comprovou-se o correto \nprojeto do prot\u00f3tipo do SOM em hardware para desempenhar as tarefas de detec\u00e7\u00e3o e \ndiagn\u00f3stico, bem como o exato funcionamento do prot\u00f3tipo do sistema embarcado \nimplementado em placa de desenvolvimento.  \n\nCom a valida\u00e7\u00e3o da t\u00e9cnica do SOM para a detec\u00e7\u00e3o de anormalidades, diagn\u00f3stico \nde falhas e do TKM para predi\u00e7\u00e3o do comportamento, assim como a prototipa\u00e7\u00e3o do \nSOM para detec\u00e7\u00e3o e diagn\u00f3stico em sistema embarcado, fica dispon\u00edvel uma \nplataforma para novos experimentos sobre o atuador el\u00e9trico. \n\nO presente trabalho atingiu os objetivos esperados, propondo uma solu\u00e7\u00e3o para o \nproblema de detectar, diagnosticar e prever falhas em sistemas ou processos industriais \ne, em especial, uma proposta inicial de um prot\u00f3tipo em sistema embarcado para o \natuador el\u00e9trico. \u00c9 claro que esse sistema proposto tem limita\u00e7\u00f5es e ainda precisa passar \npor novos testes e melhorias, sobretudo a parte de predi\u00e7\u00e3o. Para tornar o sistema \ncompleto, \u00e9 necess\u00e1rio implementar as demais etapas de um sistema de manuten\u00e7\u00e3o \ninteligente, como a aquisi\u00e7\u00e3o de sinais, processamento digital de sinais, tomada de \ndecis\u00e3o e reconfigura\u00e7\u00e3o, que ser\u00e3o abordados em trabalhos futuros. \n\nDurante o desenvolvimento do presente trabalho, surgiram in\u00fameras possibilidades \npara amplia\u00e7\u00e3o da proposta. Devido \u00e0 complexidade e abrang\u00eancia dos objetivos \ntra\u00e7ados e das \u00e1reas da ci\u00eancia a serem exploradas, muitas da ideia permanecem como \nposs\u00edveis trabalhos futuros. A seguir, s\u00e3o discutidos os principais desdobramentos e \ndire\u00e7\u00f5es para o encaminhamento de pesquisas futuras: \n\n\u2022 Realizar mais treinamentos e testes no SOM, aumentando-se o dom\u00ednio de \nfalhas do atuador a serem exploradas. Os casos de teste simples adotados e \nrealizados comprovam o potencial do SOM. No entanto, os experimentos \ncertamente n\u00e3o foram exaustivos e seria interessante abranger um n\u00famero \nsuperior de falhas e avaliar o comportamento do SOM na generaliza\u00e7\u00e3o \ndessas informa\u00e7\u00f5es. Al\u00e9m disso, aumentar a riqueza dos sinais de \n\n\n\n \n\n \n\n \n\n \n\n154 \n\ntreinamento, com informa\u00e7\u00f5es de ru\u00eddo, vibra\u00e7\u00e3o, temperatura, an\u00e1lise de \ncorrente, etc. \n\n\u2022 Pesquisar de forma mais aprofundada o algoritmo do TKM para predi\u00e7\u00e3o do \ncomportamento, realizar mais experimentos com outros dados de entrada, \nbem como gerar amostras de teste de formas diferentes para avaliar a \ngeneraliza\u00e7\u00e3o da predi\u00e7\u00e3o. Al\u00e9m, claro, de explorar outras alternativas para \npredi\u00e7\u00e3o, pois as pesquisas sobre representa\u00e7\u00e3o temporal existentes ainda s\u00e3o \npouco exploradas. \n\n\u2022 Aprimorar o prot\u00f3tipo do sistema embarcado conforme descrito no final da \nse\u00e7\u00e3o 5.9. \n\n\u2022 Pesquisar e implementar a etapa de tomada de decis\u00e3o, que visa processar as \ninforma\u00e7\u00f5es obtidas pelos algoritmos de toler\u00e2ncia a falhas, a fim de \nfornecer decis\u00f5es para a equipe de manuten\u00e7\u00e3o planejar interven\u00e7\u00f5es de \nreparos nos equipamentos, antecipando as falhas. \n\n\u2022 Pesquisar e implementar a etapa de reconfigura\u00e7\u00e3o local no equipamento, \nassim como implant\u00e1-la no sistema embarcado. Essa etapa \u00e9 fundamental \npara tornar o sistema de manuten\u00e7\u00e3o inteligente, de forma proativa, para que \nseja integrado com a tomada de decis\u00e3o. \n\n\u2022 Implantar no sistema embarcado os algoritmos da etapa de processamento \ndigital de sinais. \n\n\u2022 Pesquisar e implantar, no sistema embarcado, a etapa de aquisi\u00e7\u00e3o de dados. \nSeria interessante que esses dados fossem fornecidos por um sistema \nsupervis\u00f3rio externo para formar uma base de dados com hist\u00f3ricos. \n\n\u2022 Realizar um estudo e experimentos em um contexto geral de todo o sistema \nde manuten\u00e7\u00e3o inteligente, de forma a avaliar as caracter\u00edsticas presentes no \ntrabalho, de acordo com conceitos apresentados na Se\u00e7\u00e3o 3.5.5. \n\n\u2022 Aplicar a proposta vista no presente trabalho em outros estudos de casos, por \nexemplo, rolamentos, motores em geral, rob\u00f4s, etc. \n\n \n\n\n\nREFER\u00caNCIAS \n\nAGARWAL, M.; PAUL, B. C.; ZHANG, M.; MITRA, S. Circuit Failure and Its \nApplication to Transistor Aging. 25th IEEE VLSI Test Symposium, v. 1, n. 1, p. 277\u2013\n286. doi: Berkeley, 2007. \n\nALMEIDA, M. T. Manuten\u00e7\u00e3o Preditiva: Confiabilidade e Qualidade. MTA \nEngenharia de Vibra\u00e7\u00f5es . Recuperado Mar\u00e7o 3, 2009, de \nhttp://www.mtaev.com.br/download/mnt1.pdf, 2007. \n\nAVIZIENIS, A.; LAPRIE, J.; RANDELL, B.; LANDWEHR, C. Basic concepts and \ntaxonomy of dependable and secure computing. Dependable and Secure Computing, \nIEEE Transactions on, v. 1, n. 1, p. 11-33. doi: 10.1109/TDSC.2004.2, 2004. \n\nBARRETO, G.; ARAUJO, A.; RITTER, H. Time in self-organizing maps: An overview \nof models. International Journal of Computer Research, v. 10, n. 2, p. 139-179, \n2001. \n\nBARRETO, G. A. Redes neurais n\u00e3o-supervisionadas para processamento de \nsequ\u00eancias temporais. Disserta\u00e7\u00e3o de Mestrado. Mestrado em Engenharia El\u00e9trica., \nUSP, 1998. \n\nBARRETO, G. A. Redes neurais nao-supervisionadas temporais para identifica\u00e7\u00e3o \ne controle de sistemas din\u00e2micos. Tese de doutorado. Doutorado em Engenharia \nEl\u00e9trica., USP, 2002. \n\nBARRETO, G. A.; MOTA, J. C. M.; SOUZA, L. G. M.; ET AL. A New Approach to \nFault Detection and Diagnosis in Cellular Systems Using Competitive Learning. \nProceedings of the VII Brazilian Symposium on Neural Networks (SBRN04), 2004. \n\nBASTOS, E. N. F. Uma rede neural Auto-Organiz\u00e1vel construtiva para \naprendizado perp\u00e9tuo de padr\u00f5es espa\u00e7o-temporais. Disserta\u00e7\u00e3o de Mestrado, \nMestrado em Ci\u00eancia da Computa\u00e7\u00e3o, UFRGS, 2007. \n\nBENGTSSON, M. Condition Based Maintenance System Technology \u2013 Where is \nDevelopment Heading? Proceedings of the 17th European Maintenance Congress, \nEUROMAINTENANCE 2004, v. 17, n. 1, p. 82-91. doi: Barcelona, 2004. \n\nCARRO, L. Projeto de Prototipa\u00e7\u00e3o de Sistemas Digitais. v. 1, p.234. Porto Alegre: \nEditora da UFRGS, 2001. \n\n\n\n \n\n \n\n \n\n \n\n156 \n\nCARRO, L.; WAGNER, F. Sistemas Computacionais Embarcados. Cap\u00edtulo 2 das \nJornadas de Atualiza\u00e7\u00e3o em Inform\u00e1tica, XXII JAI 2003 - Sociedade Brasileira de \nComputa\u00e7\u00e3o, v. 1, p. 45-94, 2003. \n\nCHAPPEL, G. J.; TAYLOR, J. G. The temporal kohonen map. IEEE Transactions on \nNeural Networks, v. 6, 1993. \n\nD\u00cdAZ, I.; DOM\u00cdNGUEZ, M.; CUADRADO, A. A.; FUERTES, J. J. A new approach to \nexploratory analysis of system dynamics using SOM. Applications to industrial \nprocesses. Expert Systems with Applications, v. 34, n. 4, p. 2953-2965. doi: \n10.1016/j.eswa.2007.05.031, 2008. \n\nDJURDJANOVIC, D.; LEE, J.; NI, J. Watchdog Agent\u2014an infotronics-based \nprognostics approach for product performance degradation assessment and prediction. \nAdvanced Engineering Informatics, v. 17, n. 3-4, p. 109-125. doi: \n10.1016/j.aei.2004.07.005, 2003. \n\nDOM\u00cdNGUEZ, M.; FUERTES, J.; REGUERA, P.; D\u00cdAZ, I.; CUADRADO, A. \nInternet-based remote supervision of industrial processes using self-organizing maps. \nEngineering Applications of Artificial Intelligence, v. 20, n. 6, p. 757-765. doi: \n10.1016/j.engappai.2006.11.017, 2007. \n\nELMAN, J. L. Finding structure in time. Cognitive Science, v. 14, n. 2, p. 179-211, \n1990. \n\nENDO, M.; UENO, M.; TANABE, T.; YAMAMOTO, M. Clustering method using \nself-organizing map. In: Neural Networks for Signal Processing X, 2000. Proceedings \nof the 2000 IEEE Signal Processing Society Workshop.  Anais... . v. 1, p.261-270 vol.1. \ndoi: 10.1109/NNSP.2000.889417, 2000. \n\nENDRENYI, J.; ABORESHEID, S.; ALLAN, R.; ET AL. The present status of \nmaintenance strategies and the impact of maintenance on reliability. IEEE \nTransactions on Power Systems, v. 16, n. 4, p. 638-646. doi: 10.1109/59.962408, \n2001. \n\nG\u00c9RMEN, E.; ECE, D. G.; GEREK, \u00d6. N. Self Organizing Map (SOM) Approach for \nClassification of Mechanical Faults in Induction Motors. Lecture Notes in Computer \nScience, v. 4507, n. 1, p. 855-861. doi: Eskisehir, 2007. \n\nGOH, K.; TJAHJONO, B.; BAINES, T.; SUBRAMANIAM, S. A Review of Research \nin Manufacturing Prognostics. In:  Anais... . p.417-422. doi: \n10.1109/INDIN.2006.275836, 2006. \n\nGON\u00c7ALVES, L. F.; BOSA, J. L.; HENRIQUES, R. V. B.; LUBASZEWSKI, M. S. \nDesign of an embedded system for the proactive maintenance of electrical valves. In: \nProceedings of the 22nd Annual Symposium on Integrated Circuits and System Design: \nChip on the Dunes.  Anais... . p.1-6. Natal, Brazil: ACM. doi: \n10.1145/1601896.1601906, 2009. \n\nGON\u00c7ALVES, L. F.; BOSA, J. L.; LUBASZEWSKI, M. S.; PEREIRA, C. E.; \nHENRIQUES, R. V. B. Um m\u00e9todo de classifica\u00e7\u00e3o de falhas em atuadores el\u00e9tricos \n\n\n\n \n\n \n\n \n\n \n\n157 \n\nbaseado em mapas auto-organiz\u00e1veis. Anais do 8 Congresso Brasileiro de \nAutom\u00e1tica - CBA2008. doi: Juiz de Fora, 2008. \n\nGON\u00c7ALVES, L. F.; LAZZARETTI, E. P.; LUBASZEWSKI, M. S.; ET AL. \nDesenvolvimento de um Sistema de Manuten\u00e7\u00e3o Inteligente para V\u00e1lvulas Eletr\u00f4nicas. \nAnais do XIX Congresso Internacional de Engenharia Mec\u00e2nica - COBEM, p. 8, \n2007. \n\nHAYKIN, S. Redes neurais: princ\u00edpios e pr\u00e1tica. 2 ed. S\u00e3o Paulo: Bookman, 2001. \n\nHIKAWA, H. FPGA implementation of self organizing map with digital phase locked \nloops. Neural Networks, v. 18, n. 5-6, p. 514-522. doi: 10.1016/j.neunet.2005.06.012, \n2005. \n\nHUANG, R.; XI, L.; LI, X.; ET AL. Residual life predictions for ball bearings based on \nself-organizing map and back propagation neural network methods. Mechanical \nSystems and Signal Processing, v. 21, n. 1, p. 193-207. doi: \n10.1016/j.ymssp.2005.11.008, 2007. \n\nISERMANN, R. Supervision, fault-detection and fault-diagnosis methods \u2014 An \nintroduction. Control Engineering Practice, v. 5, n. 5, p. 639-652. doi: \n10.1016/S0967-0661(97)00046-4, 1997. \n\nJ\u00c4MS\u00c4-JOUNELA, S. -.; VERMASVUORI, M.; END\u00c9N, P.; HAAVISTO, S. A \nprocess monitoring system based on the Kohonen self-organizing maps. Control \nEngineering Practice, v. 11, n. 1, p. 83-92. doi: 10.1016/S0967-0661(02)00141-7, \n2003. \n\nJARDINE, A. K.; LIN, D.; BANJEVIC, D. A review on machinery diagnostics and \nprognostics implementing condition-based maintenance. Mechanical Systems and \nSignal Processing, v. 20, n. 7, p. 1483-1510. doi: 10.1016/j.ymssp.2005.09.012, 2006. \n\nJESMAN, R.; VALLINA, F. M.; SANIIE, J. MicroBlaze Tutorial creating a simple \nembedded system and adding custom peripherals using Xilinx EDK Software tools. . \nEmbedded Computing and Signal Processing Laboratory, Illinois Institute of \nTechnology. Recuperado de http://ecasp.ece.iit.edu/mbtutorial.pdf, 2006. \n\nKANGAS, J. Time-delayed self-organizing maps. In:  Anais... . v. 2, p.331-336. doi: \n10.1109/IJCNN.1990.137735, 1990. \n\nKARDEC, A.; NASCIF, J. Manuten\u00e7\u00e3o: fun\u00e7\u00e3o estrat\u00e9gica. Rio de Janeiro: \nQualitymark, 2001. \n\nKATIPAMULA, S.; BRAMBLEY, M. R. Methods for Fault Detection, Diagnostics, \nand Prognostics for Building Systems\u2014A Review, Part I. International Journal of \nHVAC&amp;R Research, v. 11, n. 1, p. 3-25, 2005. \n\nKOHONEN, T. The self-organizing map. Proceedings of the IEEE, v. 78, n. 9, p. \n1464-1480. doi: 10.1109/5.58325, 1990. \n\nKOHONEN, T. Self-organizing maps. Springer, 2001. \n\n\n\n \n\n \n\n \n\n \n\n158 \n\nKOHONEN, T.; OJA, E.; SIMULA, O.; VISA, A.; KANGAS, J. Engineering \napplications of the self-organizing map. Proceedings of the IEEE, v. 84, n. 10, p. \n1358-1384. doi: 10.1109/5.537105, 1996. \n\nKOTHAMASU, R.; HUANG, S.; VERDUIN, W. System health monitoring and \nprognostics \u2014 a review of current paradigms and practices. The International Journal \nof Advanced Manufacturing Technology, v. 28, n. 9, p. 1012-1024. doi: \n10.1007/s00170-004-2131-6, 2006. \n\nLEBOLD, M.; THURSTON, M. Open standards for condition-based maintenance and \nprognostic systems. In:  Anais... . p.6\u20139, 2001. \n\nLEE, J.; QIU, H.; NI, J.; DJURDJANOVI, D. Infotronics technologies and predictive \ntools for next-generation maintenance systems. In:  Anais... . Salvador, Brasil, 2004. \n\nLEE, J. E-manufacturing\u2014fundamental, tools, and transformation. Robotics and \nComputer-Integrated Manufacturing, v. 19, n. 6, p. 501-507. doi: 10.1016/S0736-\n5845(03)00060-7, 2003. \n\nLEE, J.; NI, J.; DJURDJANOVIC, D.; QIU, H.; LIAO, H. Intelligent prognostics tools \nand e-maintenance. Computers in Industry, v. 57, n. 6, p. 476-489. doi: \n10.1016/j.compind.2006.02.014, 2006. \n\nMAR\u00c7AL, R. F. Um m\u00e9todo para detectar falhas incipientes em m\u00e1quinas \nrotativas baseado em an\u00e1lise de vibra\u00e7\u00e3o e l\u00f3gica fuzzy. Doutorado, Programa de \nP\u00f3s-Gradua\u00e7\u00e3o em Engenharia de Minas, Metal\u00fargica, e de Materiais - PPGEM, \nUniversidade Federal do Rio Grande do Sul  - UFRGS, 2000. \n\nMARCORIN, W. R.; LIMA, C. R. C. An\u00e1lise dos Custos de Manuten\u00e7\u00e3o e de N\u00e3o-\nmanuten\u00e7\u00e3o de Equipamentos Produtivos. Revista de Ci\u00eancia &amp; Tecnologia, v. 11, n. \n22, p. 35-42, 2003. \n\nMIRSHAWKA, V.; OLMEDO, N. Manuten\u00e7\u00e3o-Combate aos Custos da N\u00e3o-Efic\u00e1cia-\nA Vez do Brasil. S\u00e3o Paulo: MacGraw-Hill, 1999. \n\nMOSER, L. C. Modelo de um neur\u00f4nio diferenciador-integrador para \nrepresenta\u00e7\u00e3o temporal em arquiteturas conexionistas. Disserta\u00e7\u00e3o de Mestrado, \nMestrado em Ci\u00eancia da Computa\u00e7\u00e3o, UFRGS, 2004. \n\nMULLER, A.; MARQUEZ, A.; IUNG, B. On the concept of e-maintenance: Review \nand current research. Reliability Engineering &amp; System Safety, v. 93, n. 8, p. 1165-\n1187. doi: 10.1016/j.ress.2007.08.006, 2008. \n\nMURTY, A.; NAIKAN, V. Availability and maintenance cost optimization of a \nproduction plant. International Journal of Quality &amp; Reliability Management, v. 12, \nn. 2, p. 28 - 35. doi: 10.1108/02656719510080596, 1995. \n\nNAGARAJAN, R.; ASOKAN, V. Getting started with uClinux on the MicroBlaze \nProcessor. Xilinx Application Notes, p. 34, 2007. \n\nNIKKANEN, K. uClinux as an Embedded Solution. Bachelor's Thesis, Turku \nPolytechnic, 2003. \n\n\n\n \n\n \n\n \n\n \n\n159 \n\nNUNES, E. L. Manuten\u00e7\u00e3o centrada em confiabilidade (MCC) - An\u00e1lise da \nimplanta\u00e7\u00e3o em uma sistem\u00e1tica de manuten\u00e7\u00e3o preventiva consolidada. \nDisserta\u00e7\u00e3o de Mestrado, Programa de P\u00f3s-Gradua\u00e7\u00e3o em Engenharia El\u00e9trica, \nUniversidade Federal de Santa Catarina, 2001. \n\nOTANI, M.; MACHADO, W. V. A proposta de desenvolvimento de gest\u00e3o da \nmanuten\u00e7\u00e3o industrial na busca da excel\u00eancia ou classe mundial. Revista Gest\u00e3o \nIndustrial, v. 4, n. 2, 2008. \n\nQIU, H.; LEE, J. Feature Fusion and Degradation Detection Using Self-Organizing \nMap. International Conference on Machine Learning and Applications, v. 1, n. 1, p. \n107- 114. doi: Milwaukee, 2004. \n\nQIU, H.; LEE, J.; LIN, J.; YU, G. Robust performance degradation assessment methods \nfor enhanced rolling element bearing prognostics. Advanced Engineering Informatics, \nv. 17, n. 3-4, p. 127-140. doi: 10.1016/j.aei.2004.08.001, 2003. \n\nQIU, H.; LEE, J.; LIN, J.; YU, G. Wavelet filter-based weak signature detection method \nand its application on rolling element bearing prognostics. Journal of Sound and \nVibration, v. 289, n. 4-5, p. 1066-1090. doi: 10.1016/j.jsv.2005.03.007, 2006. \n\nSAXENA, A.; SAAD, A. Fault diagnosis in rotating mechanical systems using self-\norganizing maps. Artificial Neural Networks in Engineering (ANNIE04), 2004. \n\nSHIKARI, B.; SADIWALA, C. M.; DWIVEDI, R. K. Automation in Condition Based \nMaintenance using vibration analysis. Mechanical Engineering Department - \nMaulana Azad National Institute of Technology, 2004. \n\nSILBERSCHATZ, A. Sistemas Operacionais Com Java. 7 ed., v. 1, p.696. Campus, \n2008. \n\nSILVA, M. A. Mapas Auto-Organiz\u00e1veis na An\u00e1lise Explorat\u00f3ria de Dados \nGeoespaciais Multivariados. Disserta\u00e7\u00e3o de Mestrado, Mestrado em Computa\u00e7\u00e3o  \nAplicada., INPE, 2004. \n\nDE SOUZA, C. A.; DE FREITAS, C. M. An\u00e1lise de causas de acidentes e ocorr\u00eancias \nanormais, relacionados ao trabalho, em uma refinaria de petr\u00f3leo, Rio de Janeiro. Cad. \nSa\u00fade P\u00fablica, v. 19, n. 5, 2003. \n\nSUDHA, N.; SRIKANTHAN, T.; MAILACHALAM, B. A VLSI architecture for 3-D \nself-organizing map based color quantization and its FPGA implementation. J. Syst. \nArchit., v. 48, n. 11-12, p. 337-352, 2003. \n\nTHURSTON, M. An open standard for Web-based condition-based maintenance \nsystems. In:  Anais... . p.401-415. doi: 10.1109/AUTEST.2001.949021, 2001. \n\nVACHKOV, G.; KOMATSU, K.; FUJII, S. Classification-based behavior model for \ndetection of abnormal states in systems. In:  Anais... . p.611-616, 2004. \n\nVENKATASUBRAMANIAN, V.; RENGASWAMY, R.; KAVURI, S. N.; YIN, K. A \nreview of process fault detection and diagnosis : : Part III: Process history based \nmethods. Computers &amp; Chemical Engineering, v. 27, n. 3, p. 327-346. doi: \n10.1016/S0098-1354(02)00162-X, 2003. \n\n\n\n \n\n \n\n \n\n \n\n160 \n\nVENKATASUBRAMANIAN, V.; RENGASWAMY, R.; YIN, K.; KAVURI, S. N. A \nreview of process fault detection and diagnosis : : Part I: Quantitative model-based \nmethods. Computers &amp; Chemical Engineering, v. 27, n. 3, p. 293-311. doi: \n10.1016/S0098-1354(02)00160-6, 2003. \n\nVESANTO, J.; HIMBERG, J.; ALHONIEMI, E.; PARHANKANGAS, J. Self-\norganizing map in Matlab: the SOM toolbox. In: Proceedings of the Matlab DSP \nConference.  Anais... . v. 99, p.16\u201317, 1999. \n\nVESANTO, J.; HIMBERG, J.; ALHONIEMI, E.; ET AL. Som toolbox for matlab. \nTechn. Ber., Helsinki University of Technology, 2000. \n\nVESANTO, J. SOM-Based Data Visualization Methods. INTELLIGENT DATA \nANALYSIS, v. 3, p. 111--126, 1999. \n\nWEBER, T. S. Um roteiro para explora\u00e7\u00e3o dos conceitos b\u00e1sicos de toler\u00e2ncia a falhas. \n. Notas de Aula do Curso de Especializa\u00e7\u00e3o em Redes e Sistemas Distribuidos, Instituto \nde Inform\u00e1tica,  UFRGS, 2002. \n\nWEBER, T. S. Toler\u00e2ncia a falhas: conceitos e exemplos. Intech Brasil, v. 52, p. 32-\n42, 2003. \n\nWILLIAMS, J.; PETALOGIX, I. PetaLinux  Platform from Scratch. Petalogix \nTutorials, 2008. \n\nWONG, M.; JACK, L.; N, A.; I. Modified self-organising map for automated novelty \ndetection applied to vibration signal monitoring. Mechanical Systems and Signal \nProcessing, v. 20, n. 3, p. 593-610. doi: 10.1016/j.ymssp.2005.01.008, 2006. \n\nXILINX, I. Designing Custom OPB Slave Peripherals for MicroBlaze. Xilinx Tutorial \nEmbedded Development, p. 30, 2002. \n\nXILINX, I. EDK MicroBlaze Tutorial. Xilinx Tutorial Embedded Development, \n2003. \n\nXILINX, I. XST User Guide 8.1i. Xilinx Tutorial Embedded Development, p. 570, \n2005a. \n\nXILINX, I. EDK Base system builder (BSB) support for XUPV2P board. Xilinx \nUniversity Program, p. 23, 2005b. \n\nXILINX, I. Embedded system tools reference manual. Embedded Development Kit \nEDK 8.1i, v. 1, p. 228, 2005c. \n\nXILINX, I. Custom peripheral design guide. Xilinx Tutorial Embedded Development, \np. 82, 2005d. \n\nXILINX, I. Virtex-II Pro development system. Xilinx University Program, , n. 1, p. \n142, 2008. \n\nYAGHMOUR, K. Building Embedded Linux Systems. 2 ed., p.462. O'Reilly Media, \nInc. Recuperado Novembro 17, 2009, de http://portal.acm.org/citation.cfm?id=1096085, \n2008. \n\n\n\n \n\n \n\n \n\n \n\n161 \n\nYANG, B. S.; HAN, T.; AN, J. L. ART\u2013KOHONEN neural network for fault diagnosis \nof rotating machinery. Mechanical Systems and Signal Processing, v. 18, n. 3, p. 645-\n657. doi: 10.1016/S0888-3270(03)00073-6, 2004. \n\nYANG, B.; HWANG, W.; KIM, D.; TAN, A. C. Condition classification of small \nreciprocating compressor for refrigerators using artificial neural networks and support \nvector machines. Mechanical Systems and Signal Processing, v. 19, n. 2, p. 371-390. \ndoi: 10.1016/j.ymssp.2004.06.002, 2005. \n\nZHONG, F.; SHI, T.; HE, T. Fault diagnosis of motor bearing using self-organizing \nmaps. In:  Anais... . v. 3, p.2411-2414 Vol. 3. doi: 10.1109/ICEMS.2005.203004, 2005. \n\n \n\n\n\n\n\nANEXO \n\nComo anexo est\u00e1 o artigo publicado no Congresso Brasileiro de Autom\u00e1tica em \n2008, apresentando maiores detalhes das equa\u00e7\u00f5es para constru\u00e7\u00e3o do modelo \nmatem\u00e1tico para o conjunto atuador e v\u00e1lvula. \n\n\n\nUM ME?TODO DE CLASSIFICAC?A?O DE FALHAS EM ATUADORES ELE?TRICOS\n\nBASEADO EM MAPAS AUTO-ORGANIZA?VEIS\n\nLuiz F. Gonc?alves?, Jefferson L. Bosa?, Marcelo S. Lubaszewski?, Carlos E. Pereira?,\nRenato V. B. Henriques?\n\n?UFRGS - PPGEE - Av. Osvaldo Aranha, 103, Bom Fim, CEP:90031-190, Porto Alegre, RS, Brasil\n\nEmails: luizfg@ece.ufrgs.br, jlbosa@inf.ufrgs.br, luba@ece.ufrgs.br,\ncpereira@ece.ufrgs.br, rventura@ece.ufrgs.br\n\nAbstract\u2014 This paper presents some of the main activities developed for the implementation of an intelligent\nmaintenance embedded system in electric actuators. The main idea is to develop an intelligent maintenance\nembedded system to evaluate and determine the degradation of the of actuators performance and achieve a\nforecast and a diagnosis of failures. For this, signal processing techniques and statistical methods, but specifically,\nthe transform Wavelet Packet and the Logistic Regression method are used. Also, the developed a system of failure\nclassification and prediction using self-organizing maps will be conducted. It is expected, with the deployment\nembedded of this system, to prevent damages in actuators and reduce costs from unexpected failures. The main\nreasons, objectives and steps for the implementation of this system will also be presented.\n\nKeywords\u2014 Classification, Failures, Electric Actuators, Self-Organizing Maps.\n\nResumo\u2014 Este artigo aborda algumas das principais atividades desenvolvidas para a implantac?a?o de um\nsistema de manutenc?a?o inteligente embarcado em atuadores ele?tricos. A ide?ia principal e? desenvolver um sistema\nde manutenc?a?o inteligente embarcado para avaliar e determinar a degradac?a?o do desempenho dos atuadores\ne realizar uma previsa?o e um diagno?stico de falhas. Para isto, utilizou-se de te?cnicas de processamento de\nsinais e me?todos estat??sticos, mas especificamente a transformada Wavelet Packet e o me?todo de Regressa?o\nLog??stica. Ale?m disso, foi feito o desenvolvimento de um sistema de classificac?a?o de falhas usando mapas auto-\norganiza?veis. Espera-se, com a implantac?a?o embarcada desse sistema, evitar danos nos atuadores e reduzir os\ncustos provenientes de falhas inesperadas. As principais etapas e objetivos para a implementac?a?o desse sistema\ntambe?m sa?o apresentadas.\n\nPalavras-chave\u2014 Classificac?a?o, Falhas, Atuadores Ele?tricos, Mapas Auto-Organiza?veis.\n\n1 Introduc?a?o\n\nOs equipamentos ou processos industriais, a me-\ndida que sa?o utilizados, ficam sujeitos a va?rios\ntipos de degradac?a?o: desgaste, sujeira, corrosa?o,\nrachaduras, e outras anomalias. Caso na?o sejam\ntomadas algumas medidas corretivas com a inten-\nc?a?o de restaurar esses equipamentos, os mesmos\ncomec?ara?o a apresentar algum defeito.\n\nPermanecendo o defeito, na?o sendo realizada\nnenhuma ac?a?o corretiva, o equipamento ou pro-\ncesso podera? falhar, ficando indispon??vel para de-\nsempenhar sua func?a?o. A manutenc?a?o consiste\nde uma se?rie de te?cnicas e medidas de prevenc?a?o,\ncorrec?a?o e predic?a?o de falhas.\n\nEssas medidas sa?o praticadas principalmente\ncom a intenc?a?o de corrigir ou consertar os danos\nprovocados pela degradac?a?o, promover uma maior\nsustentabilidade, manter os equipamentos em fun-\ncionamento, reduzir a probabilidade de falhas e a\ndegradac?a?o de componentes.\n\nAssim, a manutenc?a?o pode ser dividida, com\nrelac?a?o a?s medidas tomadas perante as falhas, em\nquatro estrate?gias: corretiva, preventiva, predi-\ntiva e proativa (Lee et al., 2004).\n\nA estrate?gia de manutenc?a?o corretiva apre-\nsenta uma maior e?nfase no conserto dos equipa-\nmentos apo?s a ocorre?ncia de falhas. Portanto, essa\nte?cnica tradicional resulta em atrasos de operac?a?o,\nociosidade do sistema e custos adicionais.\n\nA manutenc?a?o preventiva, mais contempora?-\nnea, corresponde a?s ac?o?es previstas, preparadas\nou programadas antes do prova?vel aparecimento\nda falha (Djurdjanovic et al., 2003).\n\nEntretanto, o principal inconveniente encon-\ntrado nesse tipo de estrate?gia sa?o as constantes\nintervenc?o?es, muitas vezes desnecessa?rias em vir-\ntude das variac?o?es presentes nos materiais, pec?as,\ne frequ?e?ncia de uso dos equipamentos.\n\nJa? a manutenc?a?o preditiva ocorre quando se\naplica uma supervisa?o cont??nua dos para?metros de\ncontrole e desempenho (Qiu et al., 2006). A prin-\ncipal desvantagem dessa estrate?gia e? o custo de\nimplementac?a?o que e?, normalmente, bem elevado.\n\nEm func?a?o dos recentes avanc?os da eletro?nica,\nda computac?a?o, e dos sistemas embarcados a ma-\nnutenc?a?o proativa, em especial, tambe?m conhe-\ncida como manutenc?a?o inteligente, vem ganhando\nforc?a em todo o mundo.\n\nA manutenc?a?o proativa e? aquela que, ale?m de\nmonitorar o equipamento ou processo, diagnostica\ne quantifica a perda de desempenho do sistema ao\nlongo do tempo.\n\nA partir disso, torna-se poss??vel que, em\nfunc?a?o do desgaste identificado (degradac?a?o),\nseja programada a troca das pec?as deterioradas\nem momentos de ociosidade do equipamento ou\nmesmo a reconfigurac?a?o automa?tica do sistema de\nmodo a continuar operando, ate? a troca das pec?as\ndefeituosas.\n\n\n\nEssas grandes transformac?o?es permitem um\ndiagno?stico e ana?lise muito maior das origens das\nfalhas e dos seus efeitos, influenciando diretamente\nas atividades de manutenc?a?o, em especial, as pre-\nditivas e proativas (Djurdjanovic et al., 2003).\n\nAssim, quando sensores com dispositivos in-\nteligentes esta?o conectados em um barramento\nindustrial, ou conectados diretamente nos equi-\npamentos, e seus dados sa?o analisados continu-\namente por sofisticados sistemas embarcados in-\nteligentes e? poss??vel ir ale?m da manutenc?a?o pre-\nditiva, evoluindo para uma predic?a?o inteligente\n(proativa), localizando com exatida?o os compo-\nnentes, pec?as, ou mecanismos degradados que es-\nta?o propensos a falhar.\n\nNeste contexto, alguns centros focados na ma-\nnutenc?a?o preditiva ve?m sendo criados. O Center\nfor Intelligent Maintenance Systems (IMS Cen-\nter), em especial, esta? desenvolvendo uma soluc?a?o\nembarcada para avaliac?a?o, predic?a?o, e diagno?s-\ntico de falhas chamada Watchdog Agent (um PC\nindustrial), ale?m de uma interface implementada\npara o software Matlab, conhecida como Watch-\ndog Agent Toolbox.\n\nO presente trabalho insere-se no contexto da\ncriac?a?o de um centro de manutenc?a?o inteligente\nno Brasil, sendo esse uma parceria entre o IMS\nCenter, os Departamentos Nacionais e Regionais\nda Bahia e do Rio Grande do Sul do SENAI, e a\nUniversidade Federal do Rio Grande do Sul.\n\nEste trabalho apresenta a modelagem, as fer-\nramentas, e resultados da avaliac?a?o de desempe-\nnho e de classificac?a?o de falhas em atuadores ele?-\ntricos. Os atuadores sa?o oriundos da empresa Co-\nester Automac?a?o S.A., ver Fig. 2.\n\nAtuadores, ele?tricos ou pneuma?ticos, sa?o equi-\npamentos que permitem motorizac?a?o de va?lvulas,\ndampers, comportas e outros equipamentos simi-\nlares. Os atuadores ele?tricos, em especial, sofrem\ndiversos processos de degradac?a?o, tais como: cor-\nrosa?o, desgaste, e atrito, que ira?o provocar dife-\nrentes tipos de falhas, tais como a quebra de pe-\nc?as. A finalidade do atuador, considerada neste\nartigo, e? realizar o controle do fluxo por meio de\numa va?lvula gaveta.\n\nO principal objetivo deste trabalho, ale?m do\naprendizado da metodologia, te?cnicas e ferramen-\ntas desenvolvidas pelo IMS, e? a implantac?a?o de um\nsistema embarcado de manutenc?a?o inteligente em\natuadores ele?tricos, em conjunto com a empresa\nCoester Automac?a?o S.A.\n\nEspera-se, com a implantac?a?o desse sistema:\nquantificar a degradac?a?o do atuador ele?trico; rea-\nlizar uma predic?a?o da vida u?til; e antecipar falhas\ninesperadas, por exemplo.\n\nO sistema e? composto de tre?s blocos distin-\ntos: modelo matema?tico; ferramentas de proces-\nsamento de sinais, de extrac?a?o das caracter??sticas\ne de avaliac?a?o do desempenho; e classificac?a?o e\npredic?a?o de falhas, como visto na Fig. 1.\n\nFigura 1: Principais etapas do sistema de classifi-\ncac?a?o e predic?a?o de falhas.\n\nAs principais etapas para a implantac?a?o desse\nsistema de predic?a?o de falhas nos atuadores sa?o:\n\n1. Desenvolvimento de um modelo matema?tico;\n\n2. Simulac?a?o das principais falhas;\n\n3. Processamento de sinais;\n\n4. Extrac?a?o das caracter??sticas;\n\n5. Avaliac?a?o da degradac?a?o do desempenho;\n\n6. Classificac?a?o e predic?a?o de falhas;\n\n7. Prototipac?a?o em um sistema embarcado.\n\nInicialmente, desenvolveu-se o modelo mate-\nma?tico do atuador/va?lvula. A seguir, foram reali-\nzadas diversas simulac?o?es de comportamento nor-\nmal e de falha. Apo?s, uma se?rie de ana?lises da de-\ngradac?a?o do desempenho dessas va?lvulas, usando\nas ferramentas desenvolvidas pelo IMS, foram efe-\ntuadas. Por fim, uma classificac?a?o das falhas e\npredic?a?o da vida u?til dos atuadores, foi realizada.\n\nA ferramenta de processamento de sinais e\nextrac?a?o das caracter??sticas usada foi a transfor-\nmada Wavelet Packet. A avaliac?a?o de desempenho\nfoi feita atrave?s do me?todo de Regressa?o Log??s-\ntica. Os Mapas Auto-organiza?veis foram usados\npara classificac?a?o e predic?a?o de falhas.\n\nFez-se uso de um sistema embarcado de pro-\npo?sito mais ou menos geral, o Watchdog Agent,\npois esse apresenta imunidade a ru??do, baixo con-\nsumo, diversidade de interfaces, ferramentas ma-\ntema?ticas embutidas, opera em tempo real, e pos-\nsui facilidade de comunicac?a?o com a central de\ncontrole, por exemplo.\n\nO presente trabalho e? organizado da seguinte\nforma: a sec?a?o 2 apresenta o modelo do conjunto\natuador/va?lvula; na sec?a?o 3 sa?o descritas as ferra-\nmentas de processamento de sinais e de extrac?a?o\ndas caracter??sticas utilizadas; na sec?a?o 4 os me?to-\ndos de avaliac?a?o de desempenho sa?o apresentados;\nna sec?a?o 5 os Mapas Auto-organiza?veis sa?o abor-\ndados; na sec?a?o 6 sa?o visualizados os resultados\ndas simulac?o?es; e, por fim, na sec?a?o 7 sa?o apresen-\ntadas as concluso?es finais e os trabalhos futuros,\nale?m dos agradecimentos e refere?ncias bibliogra?fi-\ncas.\n\n\n\n2 Modelagem do Atuador\n\nO modelo de atuador CSR25 da Coester e uma\nva?lvula tipo gaveta esta?o sendo utilizados como\nestudo de caso neste trabalho.\n\nPara avaliar corretamente o comportamento\ndesse atuador, da va?lvula, e da tubulac?a?o nas mais\nvariadas situac?o?es e? necessa?rio conhecer, se pos-\ns??vel, o comportamento de cada componente do\nconjunto atuador, va?lvula e tubulac?a?o.\n\nAle?m disso, e? necessa?rio obter um conjunto de\nequac?o?es diferenciais e alge?bricas que represente\ncorretamente o comportamento do atuador, va?l-\nvula, e tubulac?a?o.\n\n2.1 Modelo de Atuador Ele?trico\n\nO modelo CSR25 e? composto por um conjunto\nele?trico e meca?nico. Seu invo?lucro apresenta uma\ncarcac?a em ferro fundido nodular com tampas em\nalum??nio.\n\nAs soluc?o?es da linha CSR se aplicam a va?l-\nvulas tipo gaveta, globo e outros equipamentos\nsimilares.\n\nDentre as principais partes dos atuadores da\nCoester, Fig. 2, pode se destacar: motor ele?trico,\ncadeia meca?nica, acoplamento de sa??da, sensor de\ntorque, sensor de posic?a?o e movimento.\n\n2.2 Forc?as Envolvidas\n\nNo comportamento do atuador ele?trico existe uma\nparte esta?tica que esta? associada com a determina-\nc?a?o da abertura associada com a vaza?o para essa\nabertura (ou posic?a?o da haste) e outra dina?mica\nque corresponde a transmissa?o do torque para que\nocorra o movimento do obturador da va?lvula e por\nconseguinte a vaza?o para o processo.\n\nNa modelagem do sistema ha? uma se?rie de for-\nc?as que devem ser levadas em considerac?a?o, para\nque ocorra o movimento de abertura/fechamento\ndo obturador da va?lvula, como visto na Fig. 2,\nonde a forc?a do atuador e? transmitida pelo motor.\n\nFigura 2: Diagrama de forc?as presentes no modelo\nde atuador/va?lvula/tubulac?a?o.\n\n2.3 Sistema de Equac?o?es\n\nFoi feita a modelagem dos principais componen-\ntes do conjunto em um sistema de equac?o?es na?o-\nlineares.\n\nUma se?rie de considerac?o?es f??sicas foram ado-\ntadas na modelagem para simplificar a representa-\nc?a?o e consequ?entemente o esforc?o computacional\nexigido.\n\nSendo assim, escolheu-se um modelo de ter-\nceira ordem para o motor de induc?a?o, pois esse\nrepresenta bem tanto as condic?o?es de regime per-\nmanente como os transito?rios.\n\nDo ponto de vista da modelagem do sistema,\ncomposto por um motor ass??ncrono, sistema de\nengrenagens, va?lvula e tubulac?a?o, foi considerada\na dina?mica do motor e da haste da va?lvula, en-\nquanto o sistema de engrenagens e a tubulac?a?o fo-\nram descritos por relac?o?es esta?ticas, Equac?o?es (1),\n(2), e (3).\n\nAs equac?o?es diferenciais 1 que descrevem o\nmotor ass??ncrono (tenso?es e escorregamento), a\nposic?a?o, velocidade e a acelerac?a?o da haste sa?o\ndadas por:\n\ns? =\n1\n\n2H\n\n(\n\nTe ? Tm\n)\n\n(1a)\n\nV?\n?\n\nd =\n?1\n\nT0\n\n[\n\nV\n?\n\nd ? Iqs(Xs ? X\n?\n\ns)\n]\n\n+ s?sV\n?\n\nq(1b)\n\nV?\n?\n\nq =\n?1\n\nT0\n\n[\n\nV\n?\n\nq + Ids(Xs ? X\n?\n\ns)\n]\n\n? s?sV\n?\n\nd(1c)\n\na? = va (1d)\n\na? = aa (1e)\n\nAs equac?o?es alge?bricas que descrevem o motor\nass??ncrono, a forc?a exercida pelo fluido, a forc?a de\natrito, a forc?a da mola, e a forc?a e torque trans-\nmitido para a haste sa?o 2:\n\nVds = V\n?\n\nd ? Rs Ids + X\n?\n\ns Iqs (2a)\n\nVqs = V\n?\n\nq ? Rs Iqs ? X\n?\n\ns Ids (2b)\n\nTe = V\n?\n\nd Ids + V\n?\n\nq Iqs (2c)\n\nTh = ?Tm KR Tmb (2d)\n\nFh =\nTh\n\nRh cos ?\n(2e)\n\nFf =\nW 2Av\n\n? N 2\nR\n\n(100 ? a)2 C2v\n(2f)\n\nFa = Ca va (2g)\n\nFm = Km a (2h)\n\naa =\n1\n\nMh\n\n(\n\nFh ? Ff ? Fa ? Fm\n\n)\n\n(2i)\n\nAinda, ha? uma se?rie de equac?o?es auxiliares\ndadas por:\n\n1Modelo de 5a ordem\n2\n?=90o\n\n\n\nT0 =\nLr + Lm\n\n?s Rr\n(3a)\n\nXs = Ls + Lm (3b)\n\nX\n?\n\ns = Ls + Lm ?\nL2m\n\nLr + Lm\n(3c)\n\nKR = K1 K2 K3 (3d)\n\n2.4 Simulac?a?o das falhas\n\nFez-se necessa?rio, na fase de simulac?a?o, uma fer-\nramenta que fosse aberta e que permitisse incluir\ndistintos modelos de va?lvulas e atuadores.\n\nAs rotinas dessa ferramenta deveriam apre-\nsentar uma flexibilidade na alterac?a?o da estrutura\ne da modelagem do sistema, permitindo a simu-\nlac?a?o de qualquer sistema e a ana?lise de va?rios\npara?metros, atuadores e va?lvulas, bem como de\ndiversas situac?o?es que possam ocorrer.\n\nAssim, utilizou-se um simulador de dina?mica\nde sistemas na?o-lineares, adaptado de (Gonc?alves,\n2004), para simular o modelo.\n\nEsse simulador foi desenvolvido com base\nno Matlab, pois esse apresenta as caracter??sticas\nmencionadas anteriormente.\n\nO modelo proposto ainda na?o esta? validado.\nContudo, ja? e? poss??vel realizar simulac?o?es de com-\nportamento normal e das consequ?e?ncias das prin-\ncipais falhas observadas no conjunto, tais como\num aumento gradual do torque devido a altera-\nc?o?es nos para?metros do modelo, e assim observar\na curva de degradac?a?o.\n\nForam realizadas uma se?rie de simulac?o?es\nonde, inicialmente, gerou-se uma se?rie de curvas\nde torque para o modelo de atuador CSR25 cujo\ncomportamento era normal, Fig. 3 (torque ma?-\nximo igual a 250Nm ou 1pu).\n\nApo?s, efetuaram-se outras simulac?o?es de com-\nportamento de degradac?a?o e de falha. Nessas si-\nmulac?o?es, aumentou-se gradualmente certos para?-\nmetros do modelo.\n\nComo consequ?e?ncia, o valor de torque para\nabrir/fechar a va?lvula aumentou ate? atingir o va-\nlor de 275Nm (10% de sobretorque, ou 1.1 pu)\ndefinido como ma?ximo valor de sobretorque ad-\nmiss??vel.\n\n0 20 40 60 80 100\n?50\n\n0\n\n50\n\n100\n\n150\n\n200\n\n250\n\n300\ncomportamento normal\n\ncomportamento de falha\n\nT\nh\n\n[N\nm\n\n]\n\nTempo [s]\n\nFigura 3: Curvas de torque da haste.\n\nForam realizados 2 tipos de simulac?o?es de\ncomportamento de falha, ver Tabela 1.\n\nTabela 1: Faixa e taxa de variac?a?o de K2 e Km.\nPara?metro Faixa Taxa\n\nK2 11.00 - 12.00 0.010\n\nKm 4.215 - 5.215 0.010\n\nForam geradas 100 amostras para cada tipo\nde degradac?a?o (variando-se gradualmente os pa-\nra?metros K2 e Km do modelo) e falha, e 100 para\ndados normais.\n\nAs falhas do tipo K2 correspondem a falhas\nno segundo sistema de reduc?a?o cinema?tica. Mais\nespecificamente, trata-se da quebra do sem-fim.\n\nA falha do tipo Km corresponde a degradac?a?o\nda mola, equivalente a perda de elasticidade da\nmola, alterando a sua ac?a?o.\n\n3 Ferramentas de Processamento de\n\nSinais e Extrac?a?o das Caracter??sticas\n\nOs sinais de torque do atuador foram analisados\nutilizando a transformada Wavelet Packet (Qiu\net al., 2006).\n\nOs valores de densidade espectral, divididos\nem bandas, obtidas a partir da transformada Wa-\nvelet Packet foram obtidos a seguir.\n\n3.1 Transformada Wavelet Packet\n\nA transformada Wavelet Packet e? uma generaliza-\nc?a?o do conceito da transformada Wavelet discreta.\nNessa, o sinal tambe?m e? dividido em coeficientes\nde aproximac?a?o e detalhamento sucessivamente.\n\nContudo, ao contra?rio da transformada Wa-\nvelet, os coeficientes de detalhamento tambe?m sa?o\nsucessivamente divididos, decompondo o sinal em\nforma de a?rvore bina?ria, chamada Wavelet Packet.\n\nEssa te?cnica foi usada para extrair caracte-\nr??sticas relevantes de sinais, melhorando o desem-\npenho dos classificadores ao obter caracter??sticas\nimportantes por meio da decomposic?a?o do sinais\nem distintas bandas de frequ?e?ncias, com diferentes\nresoluc?o?es.\n\n3.2 Energia da Wavelet Packet\n\nA energia total de um sinal pode ser decomposto\nem um somato?rio de componentes de energia da\nWP que correspondem a diferentes bandas de\nfrequ?e?ncia.\n\nNeste trabalho, fez-se se uso da energia das\ncomponentes da Wavelet Packet, E, para realizar\na extrac?a?o das caracter??sticas dos sinais de tor-\nque e a classificac?a?o de falhas, com E = X =\n(X1, X2, . . . , X2N ), onde N e? o nu?mero de ban-\ndas de frequ?e?ncia, N = 10.\n\n\n\n4 Avaliac?a?o do Desempenho\n\nOs valores de Energia foram utilizados como en-\ntradas para o algoritmo do me?todo de Regressa?o\nLog??stica, que foi usado para realizar a avaliac?a?o\ndo desempenho do atuador.\n\n4.1 Me?todo de Regressa?o Log??stica\n\nO me?todo de Regressa?o Log??stica faz parte de\numa categoria de modelos estat??sticos chamados\nde Modelos Generalizados Lineares (Djurdjanovic\net al., 2003).\n\nEsse me?todo permite obter uma sa??da dis-\ncreta, bem como uma classificac?a?o, em um grupo\nde conjunto de dados que pode ser cont??nuo, dis-\ncreto, ou bina?rio.\n\nGeralmente a resposta possui dois estados\ncomo: presenc?a/ause?ncia ou normal/falha. A Re-\ngressa?o Log??stica tenta ajustar um mapeamento\ndo espac?o de dimensa?o N para um espac?o de sa??da\nde uma u?nica dimensa?o.\n\nO estado do sistema e? medido atrave?s de um\nindicador de semelhanc?a entre o comportamento\nnormal (e de falha) e o comportamento recente-\nmente observado de equipamentos e sistemas, co-\nnhecido como Valor de Confianc?a (VC).\n\nA avaliac?a?o de desempenho, e o ca?lculo do\nVC, de pec?as e equipamentos feita pelo WA e? rea-\nlizada extraindo-se as caracter??sticas de degrada-\nc?a?o e de comportamento normal dos dispositivos\na ele conectados.\n\nAssim, pode-se dizer que VC e? um indicador\nquantitativo da qualidade do sistema. Esse, e? de-\nterminado a partir da ana?lise dos sinais de desem-\npenho observados durante o funcionamento e uso\ndo sistema em questa?o.\n\nO VC varia de zero a um, onde um valor mais\nelevado indica que o desempenho esta? mais perto\ndo normal e um valor mais pro?ximo do zero indica\numa maior proximidade da ocorre?ncia de algum\ntipo de falha, como visto na Fig. 4.\n\nFigura 4: Gra?fico do valor de confianc?a.\n\nConforme o equipamento degrada, os sinais\natuais de desempenho do equipamento va?o se di-\nferenciando dos sinais de comportamento normal,\nreduzindo o VC.\n\nO Valor de Confianc?a, quando se usa o me?-\ntodo de Regressa?o Log??stica, e? obtido a partir da\nseguinte expressa?o:\n\nCV (X) =\n1\n\n1 + e?(?0+?1 X1+...+?k Xk)\n(4)\n\nApo?s os para?metros do modelo serem obtidos\na partir de amostras de treinamento, o CV do sis-\ntema pode ser calculado.\n\n5 Classificac?a?o das falhas: Mapas\n\nAuto-organiza?veis\n\nOs Mapas Auto-organiza?veis (MAO), ou mapas de\nKohonen, pertencem a uma classe de redes neurais\nbaseadas em um paradigma de aprendizagem na?o\nsupervisionado e que utilizam te?cnicas de compe-\ntic?a?o, cooperac?a?o e adaptac?a?o.\n\nNos MAO, existe uma interac?a?o e competi-\nc?a?o entre os neuro?nios dentro de certa vizinhanc?a.\nComo resultado, apenas um neuro?nio e? declarado\ncomo vencedor (Kohonen et al., 1995).\n\nFormalmente, a principal func?a?o de um mapa\nauto-organiza?vel e? realizar um mapeamento de da-\ndos de entrada dispostos em um espac?o&lt;n em\numa matriz bidimensional, formando uma rede,\nmantendo a topologia ordenada.\n\nO vetor de entradas (energia das componen-\ntes da Wavelet Packet) X e? selecionado alea-\ntoriamente no espac?o de entrada (onde X =\n[X1, X2, . . . , X2N ]\n\nT ) e o vetor peso sina?ptico do\nneuro?nio j sera? representado por Wj , Wj =\n[Wj1, Wj2, . . . , Wj2N ]\n\nT , com j = 1, 2, . . . , L,\nonde L e? o nu?mero total de neuro?nios na grade.\n\nO processamento interno dos algoritmos do\nMAO pode ser dividido, simplificadamente, em\ntre?s etapas distintas:\n\n\u2022 Inicializac?a?o: os pesos sina?pticos da grade sa?o\ninicializados.\n\n\u2022 Treinamento: e? realizada a aquisic?a?o do co-\nnhecimento pelo mapa;\n\n\u2022 Recuperac?a?o: os dados de entrada sa?o classi-\nficados no mapa.\n\nA etapa de treinamento, pode ser dividida,\nsimplificadamente, em tre?s fases distintas:\n\n1. Competic?a?o: nessa fase procura-se encontrar\no melhor casamento (minimizando a dista?ncia\neuclidiana entre os vetores X e Wj ) do vetor\nde entrada com os vetores de pesos sina?pticos.\n\n2. Cooperac?a?o: o neuro?nio vencedor determina\na localizac?a?o espacial de uma vizinhanc?a to-\npolo?gica de neuro?nios excitados, fornecendo\nassim a base para a cooperac?a?o entre os\nneuro?nios vizinhos.\n\n3. Adaptac?a?o: o vetor de pesos sina?pticos\nWj (n), no tempo n, e? atualizado de forma\na se aproximar mais do vetor X.\n\n\n\nNa etapa de recuperac?a?o, sa?o avaliadas as for-\nmac?o?es topolo?gicas dos agrupamentos de neuro?-\nnios. O me?todo mais usado para realizar essa ava-\nliac?a?o e? a Matriz de Dista?ncias Unificada (MDU).\n\nO resultado gerado a partir da MDU sobre o\nmapa e? uma imagem em duas (ou tre?s dimenso?es),\nonde o n??vel de intensidade de cada pixel corres-\nponde a uma dista?ncia calculada.\n\nNa imagem, a colorac?a?o dos pixels varia de\nacordo com a intensidade de cada componente da\nMDU. Regio?es que apresentam baixos valores (va-\nles) agrupam neuro?nios com padro?es similares, e\nas regio?es com valores altos (picos) correspondem\na fronteiras entre os agrupamentos.\n\nAssim, as condic?o?es de comportamento nor-\nmal, de degradac?a?o, e de falha de um sistema po-\ndem ser visualizadas em distintos agrupamentos.\n\n6 Resultados\n\nOs resultados gra?ficos dos VC e dos MAO, para\ncada um dos tipos de falhas, sa?o vistos na Fig. 5.\nPode-se observar que os gra?ficos do VC obtidos\na partir das ferramentas WP e RL, retratam fi-\nelmente as condic?o?es de comportamento normal,\ndegradac?a?o, e falha simuladas.\n\n0 50 100 150 200 250 300\n0\n\n0.1\n\n0.2\n\n0.3\n\n0.4\n\n0.5\n\n0.6\n\n0.7\n\n0.8\n\n0.9\n\n1\n\nN\u00famero de ciclos\n\nV\nal\n\nor\n d\n\ne \nC\n\non\nfi\n\nan\n\u00e7a\n\nCV ? K2\n\nCV ? Km\n\nFigura 5: VC - falha do tipo K2 e Km.\n\nAtrave?s do resultado da recuperac?a?o dos\nMAO, Fig. 6, pode-se observar as tre?s regio?es de\ncomportamento: normal, degradac?a?o e falha.\n\nFigura 6: MAO - a) falha do tipo K2 e b) Km .\n\nPode-se observar na Fig. 6 que os dados fo-\nram mapeados corretamente. Sa?o vistas, na fi-\ngura, tre?s regio?es de comportamento bem distin-\ntas. Tambe?m e? vis??vel a concentrac?a?o dos dados\nde degradac?a?o no vale inferior e dos dados normais\ne de falha na parte superior do mapa.\n\nAle?m disso, os dados de falhas, K2 e Km, fo-\nram mapeados em diferentes lugares no mapa, o\nque nos permite fazer uma classificac?a?o quanto ao\ntipo de falha que ocorreu.\n\n7 Conclusa?o\n\nEste trabalho abordou algumas das atividades de-\nsenvolvidas para a implantac?a?o de um sistema de\nmanutenc?a?o inteligente embarcado nos atuadores\nele?tricos da empresa Coester Automac?a?o S.A.\n\nPara tal, fez-se uso das te?cnicas de processa-\nmento de sinais e me?todos estat??sticos desenvolvi-\ndas pelo IMS, mas especificamente a transformada\nWP e o me?todo de RL. Ale?m disso, foi realizado\no desenvolvimento de um sistema de classificac?a?o\ne predic?a?o de falhas utilizando-se MAO.\n\nOs resultados gra?ficos dos VC e dos MAO,\npara dois tipos de falhas, tambe?m foram exibi-\ndos. Pode-se observar, atrave?s dos resultados, o\ncomportamento normal, de degradac?a?o, e de fa-\nlha corretamente.\n\nEspera-se, no futuro, estimar o tempo de vida\nu?til do atuador. Para isto, pretende-se utilizar\nalgoritmos que tratam da ana?lise temporal nos\nMAOs como o Temporal Kohonen Map ou o Re-\ncurrent Self-Organazing Map, por exemplo.\n\nRefere?ncias\n\nDjurdjanovic, D., Lee, J. and Ni, J. (2003). Wat-\nchdog agent - an infotronics-based prognos-\ntic approach for product performance degra-\ndation, assessment and prediction, Advanced\nEngineering Informatics 17: 109\u2013125.\n\nGonc?alves, L. F. (2004). Contribuic?o?es para o es-\ntudo teo?rico e experimental de sistemas de ge-\nrac?a?o distribu??da, Master\u2019s thesis, Programa\nde Po?s-Graduac?a?o em Engenharia Ele?trica,\nUniversidade Federal de Rio Grande do Sul,\nPorto Alegre.\n\nKohonen, T., Hynninen, J., Kangas, J. and La-\naksonen, J. (1995). The self-organizing map\nprogram package, 3.1 edn, Springer (Springer\nSeries in Information Sciences), Rakentaja-\nnaukio, Finland.\n\nLee, J., Qiu, H., Ni, J. and Djurdjanovic, D.\n(2004). Infotronics technologies and predic-\ntive tools for next-generation maintenance\nsystems, International Federation of Auto-\nmatic Control (IFAC) .\n\nQiu, H., Lee, J., Lin, J. and Yu, G. (2006).\nWavelet filter-based weak signature detection\nmethod and its application on rolling element\nbearing prognostics, Journal of Sound and\nVibration 289: 1066\u20131090."}]}}}