{"add": {"doc": {"field": [{"@name": "docid", "#text": "BR-TU.08343"}, {"@name": "filename", "#text": "13173_270311.pdf"}, {"@name": "filetype", "#text": "PDF"}, {"@name": "text", "#text": "UNIVERSIDADE FEDERAL DE SANTA CATARINA\nCURSO DE P\u00d3S-GRADUA\u00c7\u00c3O EM ENGENHARIA MEC\u00c2NICA\nGERA\u00c7\u00c3O DE MALHAS PARA DOM\u00cdNIOS 2,5 DIMENSIONAIS USANDO TRIANGULA\u00c7\u00c3O DE DELAUNAY RESTRITA\nDISSERTA\u00c7\u00c3O SUBMETIDA \u00c0 UNIVERSIDADE FEDERAL DE SANTA CATARINA PARA A OBTEN\u00c7\u00c3O DO GRAU DE MESTRE EM ENGENHARIA\nCLOVIS RAIMUNDO MALISKA JUNIOR\nFLORIAN\u00d3POLIS, FEVEREIRO DE 2001\nGERA\u00c7\u00c3O DE MALHAS PARA DOM\u00cdNIOS 2,5 DIMENSIONAIS USANDO TRIANGULA\u00c7\u00c3O DE DELAUNAY RESTRITA\nCLOVIS RAIMUNDO MALISKA JUNIOR\nESTA DISSERTA\u00c7\u00c3O FOI JULGADA ADEQUADA PARA A OBTEN\u00c7\u00c3O DO T\u00cdTULO DE MESTRE EM ENGENHARIA ESPECIALIDADE ENGENHARIA MECANICA, \u00c1REA DE CONCENTRA\u00c7\u00c3O ENGENHARIA DE CI\u00caNCIAS T\u00c9RMICAS, APROVADA EM SUA FORMA FINAL PELO CURSO DE P\u00d3S-GRADUA\u00c7\u00c3O EM ENGENHARIA MEC\u00c2NICA\nProf. CLOVIS RAIMUNDO MALISKA, Ph. D.\nORIENTADOR\nProf. J\u00daLIO C\u00c9SAR PASSOS, Dr. Eng. Mec.\nCOORDENADOR DO CURSO DE P\u00d3S-GRADUA\u00c7\u00c3O\nBANCA EXAMINADORA\nProf. ALT AMIR DIAS, Dr. Eng. Mec.\nProf. ANTONIO CARLOS RIBEIRO, Dr. Eng. Mec.\nProf. ANTONIO F\u00c1BIO CARVALHO DA SILVA, Dr. Eng. Mec.\nDedico este trabalho a meus pais que ao longo de suas vidas nunca pouparam esfor\u00e7os para me mostrar a import\u00e2ncia do conhecimento\nAGRADECIMENTOS\nAo Prof. Clovis Raimundo Maliska, orientador, pai e exemplo pessoal de pesquisador, pela orienta\u00e7\u00e3o, motiva\u00e7\u00e3o, suporte, aten\u00e7\u00e3o, dedica\u00e7\u00e3o e paci\u00eancia proporcionados em todos os momentos do trabalho.\nA Ana Maria Maliska, m\u00e3e, que com muita sabedoria, amor e carinho proporcionou o apoio e a tranq\u00fcilidade necess\u00e1rias para superar as dificuldades existentes neste desafio.\nA Karina Maliska pela constante presen\u00e7a e alegria.\nAo amigo Marcus Vinicius F. dos Reis, pelo companheirismo a mim proporcionado nesta jornada, e em especial aos amigos Marcos Cabral Damiani e Rodrigo Machado Lucianetti, pelas longas e valiosas discuss\u00f5es sobre o problema de discretiza\u00e7\u00e3o geom\u00e9trica e de simula\u00e7\u00e3o.\nA Juliana dos Santos Faria Lichtemberg pela ajuda na corre\u00e7\u00e3o ortogr\u00e1fica do material.\nA todos os meus familiares e amigos que me apoiaram e de alguma forma se envolveram e contribu\u00edram com este trabalho.\nAos colegas do SINMEC pelo excelente ambiente de trabalho.\nAos professores do curso de p\u00f3s-gradua\u00e7\u00e3o do Departamento de Engenharia Mec\u00e2nica daUFSC.\nAo CNPq pelo financiamento do trabalho.\nSUM\u00c1RIO\n1 INTRODU\u00c7\u00c3O_________________________________________1\n1.1.\tPreliminares\t1\n1.2.\tREVIS\u00c3O BIBLIOGR\u00c1FICA\t3\n1.3.\tObjetivos e contribui\u00e7\u00f5es\t6\n1.4.\tESCOPO DO TRABALHO\t7\n1.5.\tOrganiza\u00e7\u00e3o do trabalho\t7\n1.6.\tMalhas estruturadas e n\u00e3o-estruturadas\t8\n2.\tTRIANGULA\u00c7\u00c3O - CARACTER\u00cdSTICAS_________________________________13\n2.1.\tTIPOS DE DOM\u00cdNIOS GEOM\u00c9TRICOS\t13\n2.2.\tPropriedades desejadas para uma malha\t17\n2.3.\tTriangula\u00e7\u00e3o de Delaunay-Caracter\u00edsticas\t20\n2.3.1.\tDefini\u00e7\u00e3o\t20\n2.3.2.\tPropriedades\t21\n2.3.3.\tDegenera\u00e7\u00e3o/Singularidades\t24\n2.3.4.\tTriangula\u00e7\u00e3o de Delaunay Restrita\t26\n2.4.\tOutras triangula\u00e7\u00f5es \u00f3timas\t30\n2.4.1.\tMinmax comprimento de aresta\t30\n2.4.2.\tGreedy\t30\n2.4.3.\tPonto mais distante\t31\n2.4.4.\tMaxmin da altura do tri\u00e2ngulo\t31\n2.4.5.\tMinimiza\u00e7\u00e3o do peso dos tri\u00e2ngulos (MPT)\t31\n3.\tTRIANGULA\u00c7\u00c3O - M\u00c9TODOS___________________________________________33\n3.1.\tM\u00e9todos de triangula\u00e7\u00e3o de Delaunay\t33\n3.1.1.\tM\u00e9todos Diretos\t35\n3.1.1.1.\tInvers\u00e3o de aresta\t35\n3.1.1.2.\tInser\u00e7\u00e3o de aresta\t38\n3.1.1.3.\tDivide-and-conquer\t39\n3.1.2.\tM\u00e9todos Incrementais\t41\n3.1.2.1.\tN\u00e3o-baseado em invers\u00e3o de aresta\t42\n3.1.2.2.\tBaseado em invers\u00e3o de\taresta\t44\n3.1.3.\tO Problema da adi\u00e7\u00e3o de v\u00e9rtices fora do envelope convexo\t45\n3.1.4.\tLocaliza\u00e7\u00e3o de pontos\t46\n3.2.\tOutros m\u00e9todos de triangula\u00e7\u00e3o \u00f3tima\t49\n3.2.1.\tTriangula\u00e7\u00e3o qualquer\t50\n3.2.2.\tDecomposi\u00e7\u00e3o de pol\u00edgono\t50\n3.2.3.\tAvan\u00e7o de frentes\t52\n3.2.4.\tQuadtree\t54\n3.3.\tMelhoramento de malha\t58\n3.3.1.\tGeneralidades\t58\n3.3.2.\tSuaviza\u00e7\u00e3o Laplaciana\t61\n3.3.3.\tRelaxa\u00e7\u00e3o de malha\t63\n3.3.4.\tRefinamento por divis\u00e3o quadr\u00e1tica\t64\n3.3.5.\tRefinamento de Rivara\t65\n3.3.6.\tTransforma\u00e7\u00f5es topol\u00f3gica de Canann\t66\n3.3.7.\tTransforma\u00e7\u00f5es de suaviza\u00e7\u00e3o/topol\u00f3gicas mistas\t67\n3.3.8.\tRefino de Ruppert\t67\n3.3.8.I.\tVaria\u00e7\u00f5es do m\u00e9todo\t70\n4.\tDESCRI\u00c7\u00c3O DO M\u00c9TODO IMPLEMENTADO_________________________________71\n4.1.\tTratamento do dom\u00ednio 2,5 dimensional\t72\n4.1.1.\tFornecimento do dom\u00ednio 2,5 dimensional- Hierarquia Geom\u00e9trica\t72\n4.1.2.\tSEPARA\u00c7\u00c3O DAS SUPERF\u00cdCIES PLANAS 3D EM DOM\u00cdNIOS BIDIMENSIONAIS\t76\n4.2.\tTriangula\u00e7\u00e3o dos dom\u00ednios bidimensionais\t80\n4.2.1.\tEstruturas de dados utilizadas na triangula\u00e7\u00e3o bidimensional\t80\n4.2.2.\tObten\u00e7\u00e3o da triangula\u00e7\u00e3o dos v\u00e9rtices\t83\n4.2.3.\tINSER\u00c7\u00c3O NA TRIANGULA\u00c7\u00c3O DAS ARESTAS DO DOM\u00cdNIO FORNECIDO\t89\n4.2.4.\tElimina\u00e7\u00e3o das arestas externas ao dom\u00ednio e dos furos\t91\n4.3.\tRefino da malha para obten\u00e7\u00e3o dos crit\u00e9rios de qualidade\t93\n4.4.\tUNI\u00c3O DOS DOM\u00cdNIOS BIDIMENSIONAIS\t99\n4.5.\tCaracter\u00edsticas computacionais do c\u00f3digo implementado\t100\n5.\tRESULTADOS____________________________________________________________101\n5.1.\tResultados bidimensionais\t102\n5.1.1.\tCaso 1: Quadrado com restri\u00e7\u00e3o de \u00e1rea m\u00e1xima de elementos\t102\n5.1.2.\tCaso 2: Quadrado com refino na aresta inferior e restri\u00e7\u00e3o de m\u00ednimo\n\u00e2ngulo interno de elementos\t105\n5.1.3.\tCaso 3: Quadrado com refino na aresta inferior e restri\u00e7\u00e3o de m\u00ednimo\n\u00e2ngulo interno de elementos\t108\n5.1.4.\tCaso 4: Quadrado com refino na aresta inferior e esquerda e restri\u00e7\u00e3o\nDE M\u00cdNIMO \u00e2ngulo INTERNO DE ELEMENTOS\t111\n5.1.5.\tCaso 5: Quadrado com restri\u00e7\u00e3o geom\u00e9trica interna\t114\n5.1.6.\tCaso 6: Quadrado com aresta interna e refino emna aresta\t117\n5.1.7.\tCaso7: Quadrado com aresta interna e refino em na aresta (caso 6\nrefinado)\t120\n5.1.8.\tCaso 8: Geometria qualquer com restri\u00e7\u00e3o geom\u00e9trica interna\t122\n5.1.9.\tCaso 9: Quadrado com restri\u00e7\u00e3o pontual de comprimento m\u00e1ximo de\ntri\u00e2ngulos na fronteira e m\u00ednimo \u00e2ngulo interno dos elementos\t124\n5.1.10.\tCaso 10: Quadrado com restri\u00e7\u00e3o pontual de comprimento m\u00e1ximo de tri\u00e2ngulos no interior do dom\u00ednio e m\u00ednimo \u00e2ngulo interno dos elementos 127\n5.1.11.\tCaso 11:\tAproxima\u00e7\u00e3o de fronteira curva por segmentos de reta\t129\n5.1.12.\tCaso 12:\tQuadrado com furo central\t132\n5.1.13.\tCaso 13:\tRet\u00e2ngulo com furos internos e refino vertical\t134\n5.1.14.\tCaso 14:\tGeometria do VLS com restri\u00e7\u00e3o de m\u00ednimo \u00e2ngulo interno 136\n5.1.15.\tCaso 15: Geometria do VLS com restri\u00e7\u00e3o de m\u00e1xima \u00e1rea de elementos 139\n5.1.16.\tCaso 16: Geometria do VLS com refino na regi\u00e3o de choque\t142\n5.2. Resultados 2,5 dimensionais\t145\n5.2.1.\tCaso\t17: Jun\u00e7\u00e3o de quadril\u00e1teros\t145\n5.2.2.\tCaso\t18: Jun\u00e7\u00e3o de elementos planos curvos\t149\n5.2.3.\tCaso\t19: Geometria final\t153\nREFER\u00caNCIAS\tBIBLIOGR\u00c1FICAS______________________________________155\nRESUMO\nGerar uma malha consiste em discretizar um dom\u00ednio geom\u00e9trico em pequenos elementos de forma geom\u00e9trica simplificada, como tri\u00e2ngulos e/ou quadril\u00e1teros, em duas dimens\u00f5es, e tetraedros e/ou hexaedros em tr\u00eas dimens\u00f5es. Malhas s\u00e3o utilizadas em diversas \u00e1reas, como geologia, geografia e cartografia, onde elas fornecem uma representa\u00e7\u00e3o compacta dos dados do terreno; em computa\u00e7\u00e3o gr\u00e1fica, a grande maioria dos objetos s\u00e3o mapeados por malhas antes de serem renderizados ou aplicados outros m\u00e9todos de imagens; e, em matem\u00e1tica aplicada e computa\u00e7\u00e3o cient\u00edfica, s\u00e3o essenciais na solu\u00e7\u00e3o num\u00e9rica de equa\u00e7\u00f5es diferenciais parciais, resultantes do modelamento de problemas f\u00edsicos.\nEste trabalho concentra-se no desenvolvimento de um gerador de malhas voltadas para esta \u00faltima aplica\u00e7\u00e3o, mas que podem, tamb\u00e9m, ser empregadas nas outras \u00e1reas. Mais especificamente, o interesse est\u00e1 na gera\u00e7\u00e3o de malhas de tri\u00e2ngulos n\u00e3o-estruturadas, atrav\u00e9s do processo de triangula\u00e7\u00e3o de Delaunay, para aplica\u00e7\u00f5es na solu\u00e7\u00e3o de problemas de transfer\u00eancia de calor em superf\u00edcies planas tridimensionais. Devido \u00e0 utiliza\u00e7\u00e3o do m\u00e9todo CVFEM (Control Volume based Finite Element Method) para a modelagem num\u00e9rica, um paralelo entre a Triangula\u00e7\u00e3o de Delaunay e Diagramas de Voronoi \u00e9 delineado, apresentando suas propriedades e aplica\u00e7\u00f5es.\nS\u00e3o estudados os m\u00e9todos de gera\u00e7\u00e3o de triangula\u00e7\u00f5es de Delaunay para superf\u00edcies planas de invers\u00e3o de aresta, divide-and-conquer e incremental. A estrutura de dados utilizada \u00e9 a triangular, e o m\u00e9todo de refino para garantia de qualidade de malha \u00e9 baseado no algoritmo de Ruppert. Restri\u00e7\u00f5es geom\u00e9tricas s\u00e3o tratadas de forma que a malha gerada obede\u00e7a as intersec\u00e7\u00f5es e conex\u00f5es entre diversas superf\u00edcies.\nA contribui\u00e7\u00e3o fundamental do presente trabalho est\u00e1 na extens\u00e3o de m\u00e9todos de triangula\u00e7\u00e3o de Delaunay e de refino de malha bidimensionais para dom\u00ednios 2,5 dimensionais compostos, isto \u00e9 m\u00faltiplos planos interconectados no espa\u00e7o tridimensional tratados simultaneamente. Otimiza\u00e7\u00e3o de \u00e2ngulos internos, tamanho e forma dos elementos atrav\u00e9s da especifica\u00e7\u00e3o de par\u00e2metros, conferem ao gerador desenvolvido versatilidade e generalidade.\nLISTA DE FIGURAS\nFig. 1 - Exemplos de malhas bi [1][55] e tridimensionais [99][55]......................2\nFig. 2 - Malha estruturada e n\u00e3o-estruturada de tri\u00e2ngulos [99]........................8\nFig. 3 - Exemplo de malhas 3D com tetraedros, hexaedros, prismas e pir\u00e2mides [55]......9\nFig. 4 - Exemplo de malha cartesiana e polar..........................................10\nFig. 5 - Dom\u00ednio real e discretiza\u00e7\u00e3o estruturada e n\u00e3o-estruturada [99]..............11\nFig. 6 - Primitivas geom\u00e9tricas utilizadas............................................14\nFig. 7 - Envelope convexo de um conjunto de pontos em duas (a) e tr\u00eas dimens\u00f5es (b)...14\nFig. 8 - Tipos de dom\u00ednios geom\u00e9tricos triangulados sem pontos adicionais (superiores) e\ncom pontos adicionais (inferiores) [11]..........................................16\nFig. 9 - Aproxima\u00e7\u00e3o de curvas por segmentos de retas.................................17\nFig. 10 - Varia\u00e7\u00e3o do tamanho de elemento [1].........................................17\nFig. 11 - Fun\u00e7\u00e3o interpola\u00e7\u00e3o no elemento.............................................18\nFig. 12 - Triangula\u00e7\u00e3o e seu dual.....................................................19\nFig. 13 - Diagrama de Voronoi [73]....................................................20\nFig. 14 - M\u00ednimo \u00e2ngulo (a), m\u00e1ximo circunc\u00edrculo (b) e m\u00ednimo c\u00edrculo de conten\u00e7\u00e3o (c)..22 Fig. 15 - Ortogonalidade local entre a triangula\u00e7\u00e3o de Delaunay e o diagrama de Voronoi... 23 Fig. 16\t- Aresta de Delaunay no envelope convexo..........................23\nFig. 17\t- Triangula\u00e7\u00e3o de Delaunay e seus respectivos circunc\u00edrculos [99].............24\nFig. 18\t- Triangula\u00e7\u00e3o de Delaunay degenerada [99].........................25\nFig. 19\t- Degenera\u00e7\u00e3o do diagrama de Voronoi............................26\nFig. 20 - Problemas adicionais da triangula\u00e7\u00e3o de Delaunay............................27\nFig. 21 - Aresta (a) e tri\u00e2ngulo (b) de Delaunay restritos............................28\nFig. 22 - Etapas de obten\u00e7\u00e3o de uma triangula\u00e7\u00e3o de Delaunay restrita.................29\nFig. 23 - Triangula\u00e7\u00e3o local do m\u00e9todo de invers\u00e3o de aresta ........................ 35\nFig. 24 - Invers\u00e3o de aresta sem melhora do crit\u00e9rio de otimiza\u00e7\u00e3o\t[11]...............37\nFig. 25 - Processo de inser\u00e7\u00e3o de uma aresta em uma triangula\u00e7\u00e3o......................38\nFig. 26 - Etapa intermedi\u00e1ria da jun\u00e7\u00e3o de duas triangula\u00e7\u00f5es disjuntas...............40\nFig. 27 - Etapas do algoritmo de Bowyer/Watson....................................... 42\nFig. 28 - Sensibilidade do algoritmo de Bowyer/Watson.................................43\nFig. 29 - Etapas do algoritmo de Lawson [69] ........................................ 44\nFig. 30 - Adi\u00e7\u00e3o de v\u00e9rtices fora do envelope convexo.................................46\nFig. 31 - Esquemas do grafo de conflito [26]..........................................47\nFig. 32 - Esquema do grafo de conflito simplificado [99]..............................48\nFig. 33 - Diagonal de um pol\u00edgono qualquer............................................50\nFig. 34 - Triangula\u00e7\u00e3o gerada por decomposi\u00e7\u00e3o de pol\u00edgono [11].......................51\nFig. 35 - Encontro de frentes de avan\u00e7o...............................................52\nFig. 36 - Malha gerada por frente de avan\u00e7o [11]......................................54\nFig. 37 - Estrutura de uma quadtree com (a) e sem (b) o crit\u00e9rio de balan\u00e7o...........55\nFig. 38 - Padr\u00f5es para o preenchimento de uma quadtree [14]...........................55\nFig. 39 - Malha gerada pelo m\u00e9todo quadtree [11]......................................56\nFig. 40 - Triangula\u00e7\u00e3o de um GPSR obtida pelo m\u00e9todo quadtree [80]....................57\nFig. 41 - Malha gerada com o algoritmo de refino de Shaw [97].........................60\nFig. 42 - Deslocamento de v\u00e9rtice do m\u00e9todo de suaviza\u00e7\u00e3o Laplaciana..................62\nFig. 43 - Malha de tri\u00e2ngulos obtida pelo m\u00e9todo quadtree, antes (superior) e ap\u00f3s (inferior) a aplica\u00e7\u00e3o do m\u00e9todo de suaviza\u00e7\u00e3o Laplaciana [55].............................. 62\nFig. 44 - Invers\u00e3o de aresta do m\u00e9todo de relaxa\u00e7\u00e3o de malha..........................63\nFig. 45 - Esquema do m\u00e9todo de divis\u00e3o quadr\u00e1tica.....................................64\nFig. 46 - Esquema do refino de Rivara [85][89]........................................65\nFig. 47 - Transforma\u00e7\u00f5es topol\u00f3gicas de Canann [19]...................................66\nFig. 48 - Triangula\u00e7\u00f5es de Delaunay de um GPSR [45]...................................68\nFig. 49 - Esquema de defini\u00e7\u00e3o da geometria 2,5 dimensional...........................73\nFig. 50 - Base local para as entidade geom\u00e9tricas pol\u00edgono (a) e segmento\tde reta (b).74\nFig. 51 - Ortogonaliza\u00e7\u00e3o do vetor jo da base local do pol\u00edgono.......................76\nFig. 52 - Transfer\u00eancia das coordenadas para os espa\u00e7os bidimensionais................78\nFig. 53 - Exemplo de geometria bidimensional (a) e os objetos de sua estrutura de dados (b)\n...............................................................................81\nFig. 54 - Esquema das estruturas de dados quadedge e triangular.......................82\nFig. 55 - Exemplo de triangula\u00e7\u00e3o bidimensional (a) e os objetos de sua estrutura (b).83\nFig. 56 - Ordena\u00e7\u00e3o dos pontos no m\u00e9todo divide-and-conquer...........................84\nFig. 57 - Divis\u00e3o do dom\u00ednio em uma \u00e1rvore bin\u00e1ria....................................85\nFig. 58 - Duas triangula\u00e7\u00f5es disjuntas................................................86\nFig. 59 - Tangentes iniciais do m\u00e9todo divive-and-conquer.............................87\nFig. 60 - Primeira etapa da uni\u00e3o das triangula\u00e7\u00f5es disjuntas ....................... 8 8\nFig. 61 - Segunda etapa da uni\u00e3o das triangula\u00e7\u00f5es disjuntas..........................88\nFig. 62 - Terceira etapa da uni\u00e3o das triangula\u00e7\u00f5es disjuntas ....................... 89\nFig. 63 - Etapas da inser\u00e7\u00e3o de aresta..................................................91\nFig. 64 - Triangula\u00e7\u00e3o de Delaunay e tri\u00e2ngulos indesejados.............................92\nFig. 65 - Modifica\u00e7\u00e3o do \u00e2ngulo com a adi\u00e7\u00e3o do novo v\u00e9rtice no circuncentro............94\nFig. 66 - Inser\u00e7\u00e3o de v\u00e9rtice...........................................................95\nFig. 67 - Exemplo de refino.............................................................98\nFig. 68 - Esquema explodido das conex\u00f5es entre dom\u00ednios................................100\nFig. 69 - Caso 1:\tGr\u00e1fico dos resultados obtidos......................................102\nFig. 70 - Caso 1:\tvisualiza\u00e7\u00e3o das triangula\u00e7\u00f5es obtidas...............................104\nFig. 71 - Caso 2:\tGr\u00e1fico dos resultados obtidos.......................................105\nFig. 72 - Caso 2:\tVisualiza\u00e7\u00e3o das triangula\u00e7\u00f5es obtidas...............................107\nFig. 73 - Caso 3:\tGr\u00e1fico dos resultados obtidos.......................................108\nFig. 74 - Caso 3:\tvisualiza\u00e7\u00e3o das triangula\u00e7\u00f5es obtidas...............................110\nFig. 75 - Caso 4:\tGr\u00e1fico dos resultados obtidos.......................................111\nFig. 76 - Caso 4:\tvisualiza\u00e7\u00e3o das triangula\u00e7\u00f5es obtidas...............................113\nFig. 77 - Caso 5:\tGr\u00e1fico dos resultados obtidos.......................................114\nFig. 78 - Caso 5:\tvisualiza\u00e7\u00e3o das triangula\u00e7\u00f5es obtidas...............................116\nFig. 79 - Caso 6:\tGr\u00e1fico dos resultados obtidos.......................................117\nFig. 80 - Caso 6:\tvisualiza\u00e7\u00e3o das triangula\u00e7\u00f5es obtidas...............................119\nFig. 81 - Caso 7:\tGr\u00e1fico dos resultados obtidos.......................................120\nFig. 82 - Caso 7:\tvisualiza\u00e7\u00e3o das triangula\u00e7\u00f5es obtidas...............................121\nFig. 83 - Caso 8:\tgeometria do dom\u00ednio fornecido.......................................122\nFig. 84 - Caso 8:\tvisualiza\u00e7\u00e3o da triangula\u00e7\u00e3o obtida..................................123\nFig. 85 - Caso 9:\tGr\u00e1fico dos resultados obtidos.......................................124\nFig. 86 - Caso 9:\tvisualiza\u00e7\u00e3o das triangula\u00e7\u00f5es obtidas...............................126\nFig. 87 - Caso 10:\tGr\u00e1fico dos resultados obtidos......................................127\nFig. 88 - Caso 10:\tvisualiza\u00e7\u00e3o das triangula\u00e7\u00f5es obtidas..............................128\nFig. 89 - Caso 11:\tGr\u00e1fico dos resultados obtidos......................................129\nFig. 90 - Caso 11:\tvisualiza\u00e7\u00e3o das triangula\u00e7\u00f5es obtidas..............................131\nFig. 91 - Caso 12:\tGr\u00e1fico dos resultados obtidos......................................132\nFig. 92 - Caso 12:\tvisualiza\u00e7\u00e3o das triangula\u00e7\u00f5es obtidas..............................133\nFig. 93 - Caso 13:\tGr\u00e1fico dos resultados obtidos......................................134\nFig. 94 - Caso 13:\tvisualiza\u00e7\u00e3o das triangula\u00e7\u00f5es obtidas..............................135\nFig. 95 - Caso 14:\tGr\u00e1fico dos resultados obtidos......................................136\nFig. 96 - Caso 14:\tvisualiza\u00e7\u00e3o das triangula\u00e7\u00f5es obtidas..............................138\nFig. 97 - Caso 15: Gr\u00e1fico dos resultados obtidos........................................139\nFig. 98 - Caso 15: visualiza\u00e7\u00e3o das triangula\u00e7\u00f5es obtidas................................141\nFig. 99 - Caso 16: Gr\u00e1fico dos resultados obtidos........................................142\nFig. 100 - Caso 16: visualiza\u00e7\u00e3o das triangula\u00e7\u00f5es obtidas...............................144\nFig. 101 -\tCaso 17:\tJun\u00e7\u00e3o\tde quadril\u00e1teros\tcom 20 arestas na conex\u00e3o.......146\nFig. 102 -\tCaso 17:\tJun\u00e7\u00e3o\tde quadril\u00e1teros\tcom 50 arestas na conex\u00e3o.......147\nFig. 103 -\tCaso 17:\tJun\u00e7\u00e3o\tde quadril\u00e1teros\tcom 100 arestas na conex\u00e3o......148\nFig. 104 -\tCaso 18:\tGr\u00e1fico dos resultados obtidos......................................149\nFig. 105 - Caso 18: visualiza\u00e7\u00e3o das triangula\u00e7\u00f5es obtidas...............................151\nFig. 106 - Caso 18: visualiza\u00e7\u00e3o ampliada das triangula\u00e7\u00f5es obtidas......................152\nFig. 107 - Caso 19: visualiza\u00e7\u00e3o das triangula\u00e7\u00f5es obtidas...............................154\n1.1.Preliminares\nA discretiza\u00e7\u00e3o de geometrias complexas em entidades de forma geom\u00e9trica simplificada \u00e9 um requisito presente em diversas aplica\u00e7\u00f5es como geometria computacional, interpola\u00e7\u00e3o, computa\u00e7\u00e3o gr\u00e1fica, modelagem s\u00f3lida, descri\u00e7\u00e3o topogr\u00e1fica, m\u00e9todos num\u00e9ricos, entre outras. A discretiza\u00e7\u00e3o realizada para m\u00e9todos num\u00e9ricos para a solu\u00e7\u00e3o de equa\u00e7\u00f5es diferenciais parciais (EDP's), tamb\u00e9m denominada de gera\u00e7\u00e3o da malha, \u00e9 a que apresenta maiores dificuldades em fun\u00e7\u00e3o das exig\u00eancias destes m\u00e9todos em rela\u00e7\u00e3o a qualidade da malha. se conseguirmos obter malhas que satisfa\u00e7am este tipo de aplica\u00e7\u00e3o, todas as outras aplica\u00e7\u00f5es estar\u00e3o, automaticamente, contempladas.\nDentre os diversos m\u00e9todos num\u00e9ricos que usam discretiza\u00e7\u00e3o da superf\u00edcie ou do volume, os mais estudados e utilizados s\u00e3o os m\u00e9todos de Volumes Finitos e Elementos Finitos. Estes m\u00e9todos s\u00e3o utilizados para simular uma classe bastante ampla de fen\u00f4menos em transfer\u00eancia de calor, escoamento de fluidos, deforma\u00e7\u00f5es mec\u00e2nicas, propaga\u00e7\u00e3o de ondas eletromagn\u00e9ticas e mec\u00e2nica qu\u00e2ntica. Para se obter estas solu\u00e7\u00f5es, costuma-se efetuar a discretiza\u00e7\u00e3o do dom\u00ednio de estudo utilizando-se tri\u00e2ngulos e/ou quadril\u00e1teros, para geometrias 2D, e tetraedros e/ou hexaedros, para geometrias 3D, conforme mostra a Fig. 1. Estes m\u00e9todos aproximam as EDP's atrav\u00e9s de fun\u00e7\u00f5es polinomiais segmentadas, cada parte associada a um elemento da malha. Por elemento da malha, entende-se os elementos geom\u00e9tricos de forma simplificada que a comp\u00f5e, e que, no presente estudo, s\u00e3o tri\u00e2ngulos. Desta forma, um sistema de equa\u00e7\u00f5es alg\u00e9bricas, lineares ou n\u00e3o-lineares deve ser resolvido para se obter a solu\u00e7\u00e3o aproximada das EDP's.\nComo o tempo de execu\u00e7\u00e3o para obter as solu\u00e7\u00f5es utilizando estes m\u00e9todos \u00e9 proporcional ao tamanho da malha, procura-se gerar malhas representativas com o menor n\u00famero poss\u00edvel de elementos. Como veremos ao longo do texto, o conceito de representatividade da malha para aplica\u00e7\u00f5es em simula\u00e7\u00e3o, n\u00e3o \u00e9 apenas quanto \u00e0 fidelidade de representa\u00e7\u00e3o da geometria, mas tamb\u00e9m quanto ao problema f\u00edsico que est\u00e1 sendo simulado. Al\u00e9m disto, \u00e9 sabido que a estabilidade num\u00e9rica e a converg\u00eancia destes m\u00e9todos\n\u00e9 diretamente afetada pela forma dos elementos: elementos muito longos e estreitos poder\u00e3o gerar solu\u00e7\u00f5es com grandes erros e de dif\u00edcil obten\u00e7\u00e3o, conforme mostrado por Freitag e Ollivier-Gooch [45].\nFig. 1 - Exemplos de malhas bi [1][55] e tridimensionais [99][55]\nEm resumo, o problema de gera\u00e7\u00e3o de malha \u00e9 bem mais complexo do que o simples particionamento do dom\u00ednio geom\u00e9trico com o menor n\u00famero de elementos poss\u00edveis ou do controle da forma destes elementos. A dificuldade maior est\u00e1 em se considerar, simultaneamente, aspectos [99], como:\n\u2022\tn\u00famero de elementos;\n\u2022\ttamanho e forma dos elementos, e\n\u2022\tconforma\u00e7\u00e3o das fronteiras da malha \u00e0 geometria desejada.\n\u00c9 importante tamb\u00e9m observar que os crit\u00e9rios para o tamanho e a forma dos elementos podem ser muito complexos, envolvendo aspectos como:\n\u2022\ttipo do problema sendo resolvido;\n\u2022\tprecis\u00e3o desejada da solu\u00e7\u00e3o;\n\u2022\tcomportamento da solu\u00e7\u00e3o, e\n\u2022\tcondi\u00e7\u00f5es de contorno aplicadas.\nUm exemplo de como estes crit\u00e9rios podem ser diversos est\u00e1 na solu\u00e7\u00e3o de problemas de escoamento de fluidos com dire\u00e7\u00e3o preferencial e em problemas em meios n\u00e3o-isotr\u00f3picos. Conforme as condi\u00e7\u00f5es de contorno aplicadas ou condi\u00e7\u00f5es do meio, em uma mesma geometria f\u00edsica, a malha que melhor se adapta \u00e0 solu\u00e7\u00e3o dos problemas pode ser totalmente diferente. Simuladores com suporte para malhas adaptativas buscam exatamente este tipo de comportamento de forma autom\u00e1tica, com a menor interfer\u00eancia poss\u00edvel do analista num\u00e9rico. Novamente, recai sobre o gerador de malhas tamb\u00e9m esta tarefa.\nEstes coment\u00e1rios mostram que o desenvolvimento de geradores de malhas que apresentem caracter\u00edsticas que atendam aos requisitos das \u00e1reas de simula\u00e7\u00e3o de fen\u00f4menos f\u00edsicos \u00e9 um desafio semelhante, ou maior, que o pr\u00f3prio desenvolvimento das metodologias num\u00e9ricas.\nNos itens seguintes ser\u00e3o apresentados, com objetivo introdut\u00f3rio, aspectos gerais da gera\u00e7\u00e3o de malha e, mais especificamente, de malhas n\u00e3o-estruturadas compostas de tri\u00e2ngulos. A seguir, a revis\u00e3o bibliogr\u00e1fica espec\u00edfica do assunto tratado nesta disserta\u00e7\u00e3o \u00e9 apresentada, ou seja, aquela relacionada diretamente \u00e0 triangula\u00e7\u00e3o de Delaunay em superf\u00edcies 2D (bidimensionais definidas no plano (x,y)) e dom\u00ednios 2.5D (bidimensionais planas definidas no espa\u00e7o (x,y,z)). A revis\u00e3o detalhada da literatura \u00e9 feita integrada no Cap. 2 e 3 onde os tipos de triangula\u00e7\u00e3o e seus m\u00e9todos de obt\u00ea-las s\u00e3o descritos.\n1.2.Revis\u00e3o bibliogr\u00e1fica\nOs primeiros trabalhos na \u00e1rea de geometria computacional datam do come\u00e7o do s\u00e9culo. Voronoi [110], em 1907, prop\u00f4s uma estrutura geom\u00e9trica, hoje denominada de diagramas de Voronoi, que foi o primeiro passo no sentido de definir-se o tipo de triangula\u00e7\u00e3o utilizada neste trabalho. Delaunay [28], em 1934, formalizou os conceitos do que hoje \u00e9 denominado de triangula\u00e7\u00e3o de Delaunay. A presente revis\u00e3o bibliogr\u00e1fica tem o\nobjetivo apenas de apresentar os principais trabalhos realizados nesta \u00e1rea, sendo que uma revis\u00e3o mais detalhada dos m\u00e9todos de gera\u00e7\u00e3o ser\u00e1 feita no cap\u00edtulo 3.\nOs primeiros trabalhos computacionais utilizando a triangula\u00e7\u00e3o de Delaunay datam da d\u00e9cada de 70, onde o pioneiro foi Duppe [34], em 1970, com estudos na \u00e1rea de interpola\u00e7\u00e3o. Em 1977, LAWSON [63] fez importantes contribui\u00e7\u00f5es, tanto nos estudos te\u00f3ricos de m\u00e9todos incrementais para a obten\u00e7\u00e3o da triangula\u00e7\u00e3o de Delaunay (que veremos ao longo do trabalho, s\u00e3o de vital import\u00e2ncia para simuladores adaptativos) quanto na implementa\u00e7\u00e3o de m\u00e9todos de interpola\u00e7\u00e3o.\nOs primeiros trabalhos de aplica\u00e7\u00e3o da triangula\u00e7\u00e3o de Delaunay para simula\u00e7\u00e3o num\u00e9rica foi de Babuska e Aziz [5], em 1976, onde apresentou-se um estudo emp\u00edrico do efeito do \u00e2ngulo interno dos elementos no m\u00e9todo de elementos finitos. Os primeiros trabalhos na \u00e1rea de volumes finitos, utilizando malhas n\u00e3o-estruturadas foram de Baliga e Patankar [8], em 1980. Estes, no entanto, n\u00e3o aplicam a triangula\u00e7\u00e3o de Delaunay, mas uma triangula\u00e7\u00e3o qualquer. Sabe-se hoje, que a conjuga\u00e7\u00e3o da triangula\u00e7\u00e3o de Delaunay com o m\u00e9todo de CVFEM, proposto por estes autores, simplifica consideravelmente a realiza\u00e7\u00e3o dos balan\u00e7os das propriedades nos volumes de controle.\nTalvez uma das maiores contribui\u00e7\u00f5es para a obten\u00e7\u00e3o de triangula\u00e7\u00e3o de Delaunay tenha sido dada por Guibas e Stolfi [53], em 1985, com a formaliza\u00e7\u00e3o dos m\u00e9todos dispon\u00edveis e das estruturas de dados utilizadas em triangula\u00e7\u00f5es. Poucos anos depois, em 1987, Fortune [42], com um estudo te\u00f3rico bastante denso e de grande contribui\u00e7\u00e3o na \u00e1rea de diagramas de Voronoi, apresentou um novo m\u00e9todo de gera\u00e7\u00e3o de malha denominado sweepline.\nOs primeiros trabalhos na \u00e1rea de escoamento externo de fluidos utilizando malhas n\u00e3o estruturadas apareceram no in\u00edcio da d\u00e9cada de 90. Um dos pioneiros foi Mavriplis [80], em 1991, utilizando um m\u00e9todo de avan\u00e7o de frente para localiza\u00e7\u00e3o dos pontos e defini\u00e7\u00e3o dos tri\u00e2ngulos. No entanto, aparentemente, nenhum trabalho de escoamento de fluidos, utilizando volumes finitos, tinha considerado at\u00e9 o presente momento a triangula\u00e7\u00e3o de Delaunay como base para a discretiza\u00e7\u00e3o geom\u00e9trica.\nOs primeiros estudos na \u00e1rea de otimiza\u00e7\u00e3o de triangula\u00e7\u00f5es foram feitos por Bern e Eppstein [13], em 1992. Neste trabalho, Bern e Eppstein apresentaram o m\u00e9todo de triangula\u00e7\u00e3o \u00f3tima quadtree, analisando seu comportamento e par\u00e2metros de otimiza\u00e7\u00e3o.\nUm dos trabalhos precursores na \u00e1rea de simula\u00e7\u00e3o num\u00e9rica utilizando diagramas de Voronoi foi Palagi [87], com sua tese de doutorado em 1992. Neste trabalho Palagi estuda a influ\u00eancia da ortogonalidade local das malhas obtidas com os diagramas de Voronoi, denominadas de PEBIGrids, na simula\u00e7\u00e3o num\u00e9rica de meios porosos para aplica\u00e7\u00f5es de petr\u00f3leo.\nEm 1993 Maliska Jr. [75] prop\u00f5e um novo m\u00e9todo de gera\u00e7\u00e3o de diagramas de Voronoi, baseado em premissas de robustez. Utilizando este gerador, em 1994, Maliska e Maliska Jr [74], desenvolvem um estudo na simula\u00e7\u00e3o de escoamento de tra\u00e7adores em meios porosos bidimensionais de geometria arbitr\u00e1ria. Neste mesmo ano, Marcondes [78] tamb\u00e9m utiliza as malhas de Voronoi criadas pelo gerador de Maliska Jr para efetuar estudos de escoamento de fluidos em reservat\u00f3rios de petr\u00f3leo.\nEm 1995, Ruppert [92] prop\u00f5e o primeiro m\u00e9todo de refino para triangula\u00e7\u00e3o de Delaunay com demonstra\u00e7\u00e3o te\u00f3rica da garantia de obten\u00e7\u00e3o dos crit\u00e9rios impostos. O trabalho, dada a inova\u00e7\u00e3o da sua abordagem, definiu um novo grupo de m\u00e9todos de refino denominados refinos de Delaunay.\nEste hist\u00f3rico mostra que, a maioria esmagadora das aplica\u00e7\u00f5es da triangula\u00e7\u00e3o de Delaunay at\u00e9 hoje, foram na \u00e1rea de interpola\u00e7\u00e3o, e n\u00e3o de simula\u00e7\u00e3o. Como as aplica\u00e7\u00f5es de interpola\u00e7\u00e3o utilizam sempre dom\u00ednios bi ou tridimensionais, poucos desenvolvimentos na \u00e1rea de triangula\u00e7\u00e3o 2,5D, considerando triangula\u00e7\u00f5es de Delaunay, foram feitos. O mais importante exemplo de aplica\u00e7\u00e3o da triangula\u00e7\u00e3o de Delaunay para dom\u00ednios 2,5D \u00e9 atribu\u00eddo \u00e0 Marcum e Weatherill [79], em 1994. Por incr\u00edvel que pare\u00e7a, neste trabalho, primeiramente se cria uma malha de triangula\u00e7\u00e3o de Delaunay 3D, para ent\u00e3o, utilizar-se os elementos obtidos na fronteiras do dom\u00ednio (as superf\u00edcies 3D) como par\u00e2metro inicial de um processo de gera\u00e7\u00e3o de malha 3D, baseado na t\u00e9cnica de avan\u00e7o de frentes. Como n\u00e3o existe ainda uma fundamenta\u00e7\u00e3o te\u00f3rica suficiente para desenvolver-se um triangulador de Delaunay baseado em par\u00e2metros \u00f3timos, tal m\u00e9todo n\u00e3o garante nenhuma otimiza\u00e7\u00e3o na malha gerada nas superf\u00edcies 3D.\nO trabalho desenvolvido nesta disserta\u00e7\u00e3o \u00e9, dentro do conhecimento do autor, um dos primeiros trabalho de triangula\u00e7\u00e3o de Delaunay em dom\u00ednios 2,5 dimensionais, baseado na otimiza\u00e7\u00e3o de par\u00e2metros da malha. Esta otimiza\u00e7\u00e3o \u00e9 conseguida pela extens\u00e3o do m\u00e9todo de refino de Ruppert para este tipo de dom\u00ednio geom\u00e9trico.\n1.3.Objetivos e contribui\u00e7\u00f5es\nO presente trabalho tem como objetivo principal o desenvolvimento de um gerador de malhas para dom\u00ednios denominados 2,5D, considerando restri\u00e7\u00f5es geom\u00e9tricas e qualidade de malha. Como objetivos secund\u00e1rios, tem-se a revis\u00e3o dos principais problemas e aspectos envolvidos com a gera\u00e7\u00e3o de malhas n\u00e3o-estruturadas, al\u00e9m de uma revis\u00e3o sobre os diversos m\u00e9todos de gera\u00e7\u00e3o dispon\u00edveis na literatura.\nA principal contribui\u00e7\u00e3o encontra-se na extens\u00e3o para dom\u00ednios de dimens\u00e3o 2,5D de um m\u00e9todo de triangula\u00e7\u00e3o bidimensional baseado na t\u00e9cnica de solu\u00e7\u00e3o de problemas divide-and-conquer e do m\u00e9todo de refino de Ruppert [92]. Este m\u00e9todo ser\u00e1 aqui denominado de m\u00e9todo de triangula\u00e7\u00e3o divide-and-conquer, e sua extens\u00e3o para dom\u00ednios 2,5D \u00e9 feita atrav\u00e9s de uma abordagem inovadora baseada em camadas topol\u00f3gicas. O m\u00e9todo de camadas topol\u00f3gicas \u00e9 um m\u00e9todo que permite a extens\u00e3o, para dom\u00ednios 2,5D, de qualquer algoritmo de triangula\u00e7\u00e3o bidimensional que utilize apenas informa\u00e7\u00f5es topol\u00f3gicas para a defini\u00e7\u00e3o da conectividade dos elementos. o gerador de malhas desenvolvido neste trabalho pode ser empregado em:\n\u2022\tM\u00e9todos de elementos finitos que usam a triangula\u00e7\u00e3o como base de discretiza\u00e7\u00e3o;\n\u2022\tM\u00e9todos de volumes finitos que usam, tanto o elemento triangular, como o dual da triangula\u00e7\u00e3o de Delaunay como volume de realiza\u00e7\u00e3o dos balan\u00e7os.\nTamb\u00e9m temos observado que \u00e9 comum a limita\u00e7\u00e3o dos desenvolvimentos num\u00e9ricos em malhas n\u00e3o estruturadas em institui\u00e7\u00f5es acad\u00eamicas pela falta de trianguladores de f\u00e1cil uso. isto \u00e9 particularmente verdade na comunidade dos usu\u00e1rios do m\u00e9todo de volumes finitos, cuja tradi\u00e7\u00e3o \u00e9 o uso de malhas estruturadas. Espera-se que os desenvolvimentos deste trabalho possam contribuir neste aspecto, disponibilizando-se um gerador vers\u00e1til e de f\u00e1cil uso.\nO gerador de malhas desenvolvido neste trabalho tamb\u00e9m est\u00e1 presente no programa SATER100 [40], que \u00e9 um programa geral de an\u00e1lise t\u00e9rmica de sistemas que resolve problemas condutivo-radiativos em estruturas delgadas definidas no espa\u00e7o. Neste programa o gerador discretiza as superf\u00edcies 2,5D que s\u00e3o empregadas com o m\u00e9todo de volumes finitos para a solu\u00e7\u00e3o das equa\u00e7\u00f5es da condu\u00e7\u00e3o e radia\u00e7\u00e3o de calor.\n1.4.Escopo do trabalho\nA grande maioria dos trabalhos sobre geradores de malhas, especialmente triangula\u00e7\u00f5es, encontra-se na \u00e1rea de geometria computacional que, naturalmente, possui todo um rigorismo matem\u00e1tico de defini\u00e7\u00e3o dos entes geom\u00e9tricos. O presente autor tem dedicado grande parte de suas atividades acad\u00eamicas no desenvolvimento de geradores de malhas, visualizadores, computa\u00e7\u00e3o gr\u00e1fica, etc., mas n\u00e3o se classifica como um integrante da \u00e1rea de geometria computacional. Ao contr\u00e1rio, seu aperfei\u00e7oamento formal \u00e9 na \u00e1rea de simula\u00e7\u00e3o num\u00e9rica. Portanto, dosar, neste trabalho, os ingredientes das duas \u00e1reas n\u00e3o foi uma tarefa f\u00e1cil. Por isso, em todo o trabalho o autor preocupou-se em conectar as quest\u00f5es de gera\u00e7\u00e3o de malha com a \u00e1rea de aplica\u00e7\u00e3o de interesse, a simula\u00e7\u00e3o num\u00e9rica. Mesmo assim, os cap\u00edtulos fundamentais do trabalho consideram a triangula\u00e7\u00e3o como uma aplica\u00e7\u00e3o geral e n\u00e3o espec\u00edfica para a \u00e1rea num\u00e9rica. Para os especialistas na \u00e1rea num\u00e9rica interessados em gera\u00e7\u00e3o de malha, uma extensa lista de artigos, teses e apostilas podem ser encontradas nas refer\u00eancias bibliogr\u00e1ficas.\n1.5.Organiza\u00e7\u00e3o do trabalho\nEste trabalho est\u00e1 dividido em seis cap\u00edtulos. O cap\u00edtulo introdut\u00f3rio, Cap. 1, apresenta a motiva\u00e7\u00e3o do trabalho, a revis\u00e3o bibliogr\u00e1fica e uma r\u00e1pida apresenta\u00e7\u00e3o dos tipos de malhas empregadas em simula\u00e7\u00e3o.\nO Cap. 2 apresenta as caracter\u00edsticas de uma triangula\u00e7\u00e3o qualquer, os tipos de dom\u00ednios geom\u00e9tricos aceitos pelo triangulador desenvolvido e as propriedades desejadas para uma malha. Em seguida dedica-se, mais profundamente para a triangula\u00e7\u00e3o de Delaunay, caracter\u00edstica da triangula\u00e7\u00e3o do m\u00e9todo implementado.\nO Cap. 3 apresenta os m\u00e9todos dispon\u00edveis na literatura que obt\u00e9m a triangula\u00e7\u00e3o de Delaunay. Este cap\u00edtulo cont\u00e9m toda a discuss\u00e3o te\u00f3rica empregada no m\u00e9todo desenvolvido e, apesar de ser de leitura mais dif\u00edcil, \u00e9 imprescind\u00edvel para, al\u00e9m de identificar o estado da arte no assunto, descrever os m\u00e9todos existentes e suas conex\u00f5es com os desenvolvimentos. No final deste capitulo s\u00e3o apresentados tamb\u00e9m outros m\u00e9todos de triangula\u00e7\u00e3o \u00f3tima e uma\nbreve descri\u00e7\u00e3o dos m\u00e9todos de p\u00f3s-processamento para melhoramento da qualidade das malhas.\nO Cap. 4 descreve em detalhes o algoritmo desenvolvido nesta disserta\u00e7\u00e3o, iniciando com a maneira de fornecimento ao triangulador do dom\u00ednio a ser discretizado, at\u00e9 os detalhes do m\u00e9todo usado para o refino da malha. Procurou-se, para cada etapa do algoritmo, fazer a sua descri\u00e7\u00e3o geom\u00e9trica para facilitar \u00e0queles que pretendam reproduzir o algoritmo.\nO Cap. 5 apresenta os resultados obtidos com o gerador de triangula\u00e7\u00f5es de Delaunay para superf\u00edcies tridimensionais com restri\u00e7\u00f5es geom\u00e9tricas, utilizando o m\u00e9todo de refino de Ruppert. Diversos resultados, desde problemas mais simples concebidos para mostrar as caracter\u00edsticas do m\u00e9todo at\u00e9 problemas em superf\u00edcies 3D mais complexas, s\u00e3o apresentados para mostrar a generalidade e versatilidade do triangulador.\nO Cap. 6 encerra o trabalho com as conclus\u00f5es e sugest\u00f5es para estudos e trabalhos futuros em gera\u00e7\u00e3o de malhas n\u00e3o-estruturadas de tri\u00e2ngulos em dom\u00ednios 2.5 dimensionais.\n1.6.Malhas estruturadas e n\u00e3o-estruturadas\nExistem dois tipos principais de malhas de grande uso em simula\u00e7\u00e3o num\u00e9rica, as estruturadas e as n\u00e3o-estruturadas. Este trabalho dedica-se apenas ao segundo tipo, mas uma apresenta\u00e7\u00e3o destes tipos \u00e9 aqui feita com objetivo de introdu\u00e7\u00e3o ao assunto.\n(b)\nFig. 2 - Malha estruturada e n\u00e3o-estruturada de tri\u00e2ngulos [99]\n(a)\nMalhas estruturadas s\u00e3o, basicamente, quadril\u00e1teros quaisquer em duas dimens\u00f5es e hexaedros quaisquer em tr\u00eas dimens\u00f5es. Estes quadril\u00e1teros e hexaedros s\u00e3o \u201cencaixados\u201d entre si (quatro vizinhos atrav\u00e9s de cada aresta no 2D e seis vizinhos atrav\u00e9s de cada face no 3D) com uma ordem de forma\u00e7\u00e3o que permite encontrar-se diretamente, atrav\u00e9s de uma f\u00f3rmula fechada, os vizinhos para qualquer elemento da malha que esteja sendo visitado. Pode-se, no entanto, construir malhas estruturadas utilizando-se, por exemplo, apenas tri\u00e2ngulos. A Fig. 2(a) apresenta um exemplo de uma malha estruturada de tri\u00e2ngulos.\nPor outro lado, as malhas n\u00e3o-estruturadas s\u00e3o, normalmente, uma composi\u00e7\u00e3o de quadril\u00e1teros e tri\u00e2ngulos em duas dimens\u00f5es e hexaedros e tetraedros em tr\u00eas dimens\u00f5es. Em dom\u00ednios 3D, utilizam-se tamb\u00e9m prismas e pir\u00e2mides para se compor encaixes e forma\u00e7\u00f5es especiais para capta\u00e7\u00e3o de fen\u00f4menos espec\u00edficos, como camada limite, por exemplo. Nas Fig. 2(b) e Fig. 5(c) podem ser vistos exemplos de malhas n\u00e3o-estruturadas bidimensionais, e na Fig. 3 exemplos de malhas n\u00e3o-estruturadas volum\u00e9tricas tridimensionais. A malha da Fig. 3(b) mostra a forma\u00e7\u00e3o de prismas perto da parede para capta\u00e7\u00e3o dos efeitos de camada limite. Nestas malhas n\u00e3o existe uma ordem de forma\u00e7\u00e3o para os vizinhos, portanto n\u00e3o \u00e9 poss\u00edvel descobrir-se os mesmos diretamente. Deve-se, ent\u00e3o, armazenar em mem\u00f3ria uma matriz com os \u00edndices dos elementos vizinhos (conectividades), consumindo-se, assim, maior recurso computacional.\n(a)\t(b)\nFig. 3 - Exemplo de malhas 3D com tetraedros, hexaedros, prismas e pir\u00e2mides [55]\nAl\u00e9m das caracter\u00edsticas topol\u00f3gicas (conex\u00f5es entre os elementos), alguns tipos de malhas estruturadas podem fornecer simplifica\u00e7\u00f5es para descobrir-se tamb\u00e9m as coordenadas\nespaciais de cada v\u00e9rtice (atrav\u00e9s de f\u00f3rmulas fechadas). \u00c9 o caso das malhas cartesianas, polares, cil\u00edndricas e esf\u00e9ricas, sejam elas igualmente ou n\u00e3o-igualmente espa\u00e7adas. Na Fig. 4 podem ser vistos exemplos destes tipos de malhas estruturadas. Com isto, \u00e9 poss\u00edvel otimizar ainda mais a utiliza\u00e7\u00e3o dos recursos computacionais. Al\u00e9m disto, devido \u00e0s caracter\u00edsticas topol\u00f3gicas destas malhas, o controle sobre o tamanho e forma dos elementos \u00e9 bastante simplificado, permitindo que o usu\u00e1rio efetue refinos com razo\u00e1vel facilidade. Outra vantagem deste tipo de malha \u00e9 a facilidade de se efetuar o particionamento do dom\u00ednio para paraleliza\u00e7\u00e3o do m\u00e9todo [93].\n(b)\nFig. 4 - Exemplo de malha cartesiana e polar\nA grande desvantagem do uso de malhas estruturadas, no entanto, est\u00e1 na flexibilidade \u00e0 conforma\u00e7\u00e3o com geometrias complexas. Diversas t\u00e9cnicas foram desenvolvidas ao longo dos anos, de forma a se obter malhas estruturadas coincidentes com a geometria: mapeamento conforme [16], malhas generalizadas [100][108][72], blocagem de elementos [45] e outros. Um exemplo \u00e9 a utiliza\u00e7\u00e3o de blocagem de malhas cartesianas, no qual a malha resultante possui \u201cescadas\u201d na fronteira do dom\u00ednio, exatamente onde a solu\u00e7\u00e3o pode ser cr\u00edtica. A simplifica\u00e7\u00e3o do dom\u00ednio pode ser obtida pelo seu particionamento onde seja poss\u00edvel obter-se uma malha estruturada razo\u00e1vel para cada subdom\u00ednio [100]. Esta \u00faltima t\u00e9cnica, chamada de multi-blocos, pode ser considerada uma n\u00e3o-estrutura\u00e7\u00e3o em n\u00edvel macro (ou uma estrutura\u00e7\u00e3o por partes). Mesmo com estas e diversas outras t\u00e9cnicas, \u00e9 poss\u00edvel encontrar geometrias complexas onde n\u00e3o \u00e9 poss\u00edvel definir-se uma malha estruturada que se conforme \u00e0 geometria. Por isso, malhas n\u00e3o-estruturadas s\u00e3o cada vez mais usadas.\nAl\u00e9m da facilidade de conforma\u00e7\u00e3o \u00e0 geometria, a facilidade de conforma\u00e7\u00e3o \u00e0s propriedades do meio \u00e9 uma caracter\u00edstica fundamental presente nas malhas n\u00e3o-estruturadas.\nEm aplica\u00e7\u00f5es de estudo de reservat\u00f3rios de petr\u00f3leo como mapeamento geol\u00f3gico ou engenharia de reservat\u00f3rio, a forma dos elementos da malha constitui uma informa\u00e7\u00e3o extremamente importante na representa\u00e7\u00e3o do meio. A Fig. 5(a), por exemplo, mostra uma forma\u00e7\u00e3o geol\u00f3gica com diferentes propriedades, onde as linhas mostradas identificam estas regi\u00f5es. A malha estruturada da Fig. 5(b) n\u00e3o poder\u00e1 representar adequadamente as camadas geol\u00f3gicas, e c\u00e1lculos que sejam realizados nas regi\u00f5es de descontinuidades ser\u00e3o imprecisos ou requerer\u00e3o esquemas especiais de interpola\u00e7\u00e3o. para tentar respeitar com maior fidelidade as camadas, a malha requer um refinamento excessivo, como mostra a Fig. 5(b). A malha da Fig. 5(c), por conformar-se \u00e0s camadas geol\u00f3gicas e permitir refinamento localizado, certamente, produzir\u00e1 resultados melhores [72].\n(b)\n(c)\nFig. 5 - Dom\u00ednio real e discretiza\u00e7\u00e3o estruturada e n\u00e3o-estruturada [99]\nNeste problema, devido a n\u00e3o-flexibilidade de distribui\u00e7\u00e3o dos elementos da malha estruturada, a mesma possui cinco vezes mais elementos que sua correspondente n\u00e3o-estruturada. Mesmo considerando a necessidade do armazenamento em mem\u00f3ria da matriz dos vizinhos, a malhas n\u00e3o-estruturada, al\u00e9m de melhor representar este problema f\u00edsico, utiliza muito menos mem\u00f3ria que a malha estruturada. Da mesma forma, o problema poder\u00e1 ser resolvido em um menor tempo de computa\u00e7\u00e3o, mostrando que, normalmente, a flexibilidade de discretiza\u00e7\u00e3o otimiza o n\u00famero de elementos e o respectivo uso dos recursos computacionais. Esta otimiza\u00e7\u00e3o costuma ser ainda de maior impacto quando se consideram dom\u00ednios tridimensionais.\nEm fun\u00e7\u00e3o das considera\u00e7\u00f5es apresentadas acima, a simula\u00e7\u00e3o num\u00e9rica tem investido grandes esfor\u00e7os no estudo de malhas n\u00e3o-estruturadas, com o objetivo de viabilizar e simplificar seu uso [4][45][106]. Apesar dos resultados at\u00e9 o momento indicarem as malhas n\u00e3o-estruturadas como o esquema de discretiza\u00e7\u00e3o que ir\u00e1 prevalecer no futuro, o uso de malhas estruturadas ainda ir\u00e1 permanecer durante muito tempo nas aplica\u00e7\u00f5es industriais, e provavelmente, nunca deixar\u00e1 de ser utilizado na pesquisa devido a sua simplicidade.\nO presente trabalho ir\u00e1 mostrar um gerador vers\u00e1til de malhas triangulares n\u00e3o-estruturada para superf\u00edcies 2.5D, que preenche as necessidades de uma grande gama de problemas da engenharia e da academia.\nOs tipos de triangula\u00e7\u00e3o s\u00e3o caracterizados pela observ\u00e2ncia de crit\u00e9rios de otimiza\u00e7\u00e3o geom\u00e9tricos da malha. Uma triangula\u00e7\u00e3o qualquer, por exemplo, relaxa qualquer tipo de exig\u00eancia na gera\u00e7\u00e3o e, como conseq\u00fc\u00eancia, pode ser obtida com facilidade. Como conseq\u00fc\u00eancia, a malha resultante pode n\u00e3o ser de boa qualidade. Por isso, quase todos os m\u00e9todos consideram triangula\u00e7\u00e3o \u00f3tima, que significa uma triangula\u00e7\u00e3o onde pelo menos um crit\u00e9rio de otimiza\u00e7\u00e3o \u00e9 observado.\nEste cap\u00edtulo discute as caracter\u00edsticas de uma triangula\u00e7\u00e3o, come\u00e7ando pelos tipos de dom\u00ednios geom\u00e9tricos aceitos pelo triangulador desenvolvido, passando pela apresenta\u00e7\u00e3o das propriedades desejadas para uma malha, concentrando-se na triangula\u00e7\u00e3o de Delaunay e, apresentando ainda, por completeza, outros tipos de triangula\u00e7\u00e3o \u00f3tima.\n2.1.Tipos de dom\u00ednios geom\u00e9tricos\nAntes da classifica\u00e7\u00e3o dos tipos de dom\u00ednios geom\u00e9tricos, \u00e9 importante fazer algumas defini\u00e7\u00f5es quanto \u00e0s primitivas geom\u00e9tricas ilustradas na Fig. 6.\n1.\tPonto - o menor elemento no dom\u00ednio geom\u00e9trico;\n2.\tV\u00e9rtice - ponto no dom\u00ednio geom\u00e9trico, a partir do qual a triangula\u00e7\u00e3o \u00e9 constru\u00edda e referenciada;\n3.\tSegmento - uma linha que une dois pontos quaisquer no dom\u00ednio geom\u00e9trico;\n4.\tAresta - uma linha que une dois v\u00e9rtices quaisquer da triangula\u00e7\u00e3o;\n5.\tElemento - qualquer tri\u00e2ngulo que une tr\u00eas v\u00e9rtices da triangula\u00e7\u00e3o.\nFig. 6 - Primitivas geom\u00e9tricas utilizadas\n(b)\nOutra defini\u00e7\u00e3o de import\u00e2ncia \u00e9 a de envelope convexo. O envelope convexo de um conjunto de pontos p no plano \u00e9 o pol\u00edgono convexo c, contido no plano de p, que engloba todos os pontos de p, e formado apenas por v\u00e9rtices em p. A mesma defini\u00e7\u00e3o \u00e9 diretamente estendida para n-dimens\u00f5es. A Fig. 7 apresenta exemplos de envelopes convexos em duas e tr\u00eas dimens\u00f5es.\nFig. 7 - Envelope convexo de um conjunto de pontos em duas (a) e tr\u00eas dimens\u00f5es (b)\nFeitas estas defini\u00e7\u00f5es, podemos classificar os tipos de dom\u00ednios geom\u00e9tricos. Os dom\u00ednios bidimensionais s\u00e3o aqui classificados em quatro grupos [11], os quais podem ser vistos, de forma gen\u00e9rica, como uma regi\u00e3o poligonal do dom\u00ednio, mais um conjunto de\nrestri\u00e7\u00f5es pontuais. Isto porque a fronteira do dom\u00ednio, quando existente, \u00e9 formada apenas por segmentos de reta (veremos mais sobre esta aproxima\u00e7\u00e3o nesta mesma se\u00e7\u00e3o). O objetivo \u00e9 obter-se um conjunto de tri\u00e2ngulos que mapeiem por completo tal dom\u00ednio, e que possuam arestas e v\u00e9rtices comuns a este. Tais tri\u00e2ngulos, por sua vez, podem ou n\u00e3o obedecer a crit\u00e9rios de otimiza\u00e7\u00e3o definidos pelo usu\u00e1rio. Para todos os quatro tipos de dom\u00ednios descritos a seguir, o n\u00famero de v\u00e9rtices \u00e9 um \u00edndice de complexidade do sistema. A Fig. 8 ilustra os quatro tipos de dom\u00ednios geom\u00e9tricos e suas triangula\u00e7\u00f5es com e sem pontos adicionais. Como o nome j\u00e1 explica, pontos adicionais, ou pontos de Steiner, s\u00e3o pontos inseridos, al\u00e9m do conjunto fornecido pelo usu\u00e1rio, para melhorar, ou mesmo permitir, a triangula\u00e7\u00e3o.\na)\tDom\u00ednio geom\u00e9trico definido por um conjunto de pontos\nNeste tipo de dom\u00ednio, o dado fornecido ao triangulador \u00e9 um conjunto de pontos p no plano. Sem a utiliza\u00e7\u00e3o de v\u00e9rtices adicionais na triangula\u00e7\u00e3o t, os v\u00e9rtices de t s\u00e3o exatamente os pontos de p, e as fronteiras de t, o envelope convexo de p. Utilizando-se v\u00e9rtices adicionais em t, os v\u00e9rtices de t s\u00e3o um super-conjunto de p, e as fronteiras de t uma regi\u00e3o convexa que pode exceder o envelope convexo de p.\nb)\tDom\u00ednio geom\u00e9trico definido por uma curva poligonal simples\nNesta classifica\u00e7\u00e3o, a fronteira do dom\u00ednio \u00e9 uma curva poligonal simples fechada c, e cada segmento de reta de c deve se constituir em uma aresta da triangula\u00e7\u00e3o t. Caso sejam utilizados v\u00e9rtices adicionais na triangula\u00e7\u00e3o, tais v\u00e9rtices podem ser adicionados ao interior e \u00e0s fronteiras de t, fazendo com que cada segmento de reta de c seja mapeado por uma ou mais arestas colineares de t.\nc)\tDom\u00ednio geom\u00e9trico definido por uma curva poligonal com furos\nEsta classifica\u00e7\u00e3o difere da anterior apenas pelo fato das fronteiras do dom\u00ednio geom\u00e9trico serem formadas por duas ou mais curvas poligonais disjuntas de Jordan. Estas curvas, al\u00e9m de definirem as fronteiras externas, definem tamb\u00e9m os furos no interior do dom\u00ednio.\nd)\tDom\u00ednio geom\u00e9trico definido por um grafo planar de segmentos de reta (GPSR)\nEste \u00e9 o caso mais geral dos dom\u00ednios geom\u00e9tricos tratados no presente trabalho. Os dados fornecidos s\u00e3o um conjunto de pontos p e segmentos de retas r, os quais podem se interseccionar apenas nos seus pontos extremos (para o caso de uma seq\u00fc\u00eancia cont\u00ednua de segmentos). Na triangula\u00e7\u00e3o resultante t, r \u00e9 um subconjunto das arestas de t, ep um subconjunto dos v\u00e9rtices de t. Caso seja utilizado v\u00e9rtices adicionais em t, cada segmento de r pode ser formado por um conjunto de arestas colineares de t. Esta classifica\u00e7\u00e3o tem a habilidade de lidar, simultaneamente, com m\u00faltiplos dom\u00ednios, al\u00e9m de poder representar interfaces internas ao dom\u00ednio geom\u00e9trico, entre diferentes\nmateriais presentes na defini\u00e7\u00e3o do problema f\u00edsico.\n(a)\n(b)\t(c)\nFig. 8 - Tipos de dom\u00ednios geom\u00e9tricos definidos anteriormente, triangulados sem pontos adicionais (superiores) e com pontos adicionais (inferiores) [11]\nDom\u00ednios reais, no entanto, s\u00e3o normalmente compostos por curvas e superf\u00edcies n\u00e3o planas. Dentre os diversos modelos de representa\u00e7\u00e3o geom\u00e9trica, NURBS (Non-Uniform Rational B-Splines) \u00e9 o que vem se destacando e tornando-se padr\u00e3o na ind\u00fastria. Este modelo tem a habilidade de representar entidades geom\u00e9tricas anal\u00edticas (quadril\u00e1teros, c\u00edrculos, elipses, esferas, torus, etc.) de forma exata e com uma quantidade bastante reduzida de informa\u00e7\u00f5es.\nNo entanto, a gera\u00e7\u00e3o de malhas considerando dom\u00ednios compostos por curvas \u00e9 um desafio bastante complexo, e n\u00e3o ser\u00e1 tratado neste trabalho. Para podermos manipular com tais dom\u00ednios, ser\u00e1 adotada uma simplifica\u00e7\u00e3o, onde as curvas s\u00e3o previamente convertidas em conjuntos de segmentos de reta cont\u00ednuos, pass\u00edveis de representa\u00e7\u00e3o atrav\u00e9s de um GPSR. Esta \u00e9 uma considera\u00e7\u00e3o razo\u00e1vel, pois resolve grande n\u00famero de problemas pr\u00e1ticos\ne cont\u00e9m todos os elementos necess\u00e1rios para o estudo de problemas de triangula\u00e7\u00e3o. A Fig.\n9 apresenta um exemplo de aproxima\u00e7\u00e3o de curva por segmentos de retas.\n2.2.Propriedades desejadas para uma malha\nAs propriedades desejadas de uma malha s\u00e3o, em geral, definidas pelo n\u00famero, forma e tamanho dos elementos. O tempo de CPU para obter a malha e a mem\u00f3ria utilizada pelo triangulador tamb\u00e9m s\u00e3o par\u00e2metros importantes, mas s\u00e3o propriedades do triangulador e n\u00e3o da malha resultante. Satisfazer aos crit\u00e9rios da malha e do triangulador s\u00e3o tarefas antag\u00f4nicas, pois aumentar a qualidade da malha significa, quase sempre, aumentar o esfor\u00e7o computacional. Da\u00ed a fertilidade para pesquisas na \u00e1rea de gera\u00e7\u00e3o de malhas.\nA mais simples das restri\u00e7\u00f5es que deve ser observada \u00e9 a correta representa\u00e7\u00e3o das fronteiras externas do dom\u00ednio, tanto em geometrias simples como multiplamente conexas. Crescendo em complexidade, outra restri\u00e7\u00e3o importante \u00e9 o tamanho dos elementos, n\u00e3o apenas como limita\u00e7\u00e3o a um valor constante, mas limitando tamanhos em determinadas\nregi\u00f5es com especifica\u00e7\u00e3o de crescimento por progress\u00f5es. A Fig. 10 apresenta um exemplo de malha n\u00e3o-estruturada com uma grande varia\u00e7\u00e3o de tamanho de elemento em uma curta dist\u00e2ncia, mas com uma varia\u00e7\u00e3o controlada do tamanho de elementos adjacentes.\nOutra fundamental caracter\u00edstica que os problemas f\u00edsicos exigem dos geradores de malhas, e certamente a mais dif\u00edcil de se conseguir, \u00e9 o controle sobre a forma dos elementos, o que significa a habilidade de gerar malhas com elementos pouco esbeltos, ou com rela\u00e7\u00f5es de aspecto pr\u00f3ximas a unidade, ou com \u00e2ngulos internos pr\u00e9-determinados. Elementos com pequenos \u00e2ngulos internos normalmente resultam em solu\u00e7\u00f5es num\u00e9ricas com grandes erros e de dif\u00edcil obten\u00e7\u00e3o. \u00c2ngulos internos muito pequenos [16] ou muito pr\u00f3ximos de 180\u00b0 [4], podem levar a solu\u00e7\u00f5es inconsistentes. Este comportamento deve-se, normalmente, a problemas de inconsist\u00eancia da interpola\u00e7\u00e3o dentro dos elementos, fato ilustrado na Fig. 11. Utilizando-se uma m\u00e9dia aritm\u00e9tica entre os pontos com valores 22 e 80, obtemos um resultado de 51 para o valor no centro da aresta inferior. Se tal interpola\u00e7\u00e3o for utilizada para calcular uma derivada na dire\u00e7\u00e3o transversal, com os valores 48 e 51, o c\u00e1lculo da derivada ter\u00e1 um erro de truncamento muito diferente do erro de truncamento de uma derivada calculada entre 22 e 80. Isto \u00e9, malhas com refinamento completamente diferentes nas duas dire\u00e7\u00f5es est\u00e3o sendo usadas no mesmo elemento, gerando coeficientes do sistema linear muito anisotr\u00f3picos.\n48\n22 ' 80\n51\nFig. 11 - Fun\u00e7\u00e3o interpola\u00e7\u00e3o no elemento\nOutra caracter\u00edstica importante do triangulador \u00e9 a capacidade de gerar malhas com o menor n\u00famero poss\u00edvel de elementos e, ao mesmo tempo, satisfazer os crit\u00e9rios de otimiza\u00e7\u00e3o nesta condi\u00e7\u00e3o. Isto \u00e9 desej\u00e1vel porque a obten\u00e7\u00e3o de uma malha refinada a partir de uma grosseira requer um processo mais simples de particionamento.\nA dualidade planar da triangula\u00e7\u00e3o [25], tamb\u00e9m \u00e9 de muito interesse na \u00e1rea de simula\u00e7\u00e3o. O dual de uma triangula\u00e7\u00e3o s\u00e3o volumes que podem ser empregados para realiza\u00e7\u00e3o de balan\u00e7os no m\u00e9todo dos volumes finitos. Por exemplo, o m\u00e9todo dos volumes finitos baseado no volume de controle (CVFEM) de Baliga e Patankar [8], utilizam o dual de uma triangula\u00e7\u00e3o qualquer como volumes de controle. Os trabalhos de Palagi [87],\nMarcondes e Maliska [77] e Maliska e Maliska Jr. [74], entre outros, utilizam o dual de uma triangula\u00e7\u00e3o de Delaunay, que s\u00e3o os diagramas de Voronoi, como volumes de controle. A Fig. 12 apresenta um exemplo de triangula\u00e7\u00e3o e seu dual. Note que nesta figura, no dual, os segmentos de reta que est\u00e3o conectados \u00e0 estrutura por apenas um v\u00e9rtice representam a conex\u00e3o de um elemento da triangula\u00e7\u00e3o com o dom\u00ednio externo.\nFig. 12 - Triangula\u00e7\u00e3o e seu dual\nA Fig. 13 mostra os diagramas de Voronoi obtidos com um outro algoritmo desenvolvido pelo autor [75], onde pode-se constatar a versatilidade da triangula\u00e7\u00e3o de Voronoi para gerar volumes de controles hexagonais e polares. Neste m\u00e9todo, tamb\u00e9m incorporado ao algoritmo geral desenvolvido neste trabalho, os diagramas de Voronoi s\u00e3o inicialmente obtidos para depois obter-se a triangula\u00e7\u00e3o de Delaunay. Portanto, um procedimento geom\u00e9trico totalmente diferente do utilizado neste trabalho.\nFinalmente, n\u00e3o se pode deixar de comentar sobre mais uma outra importante caracter\u00edstica desej\u00e1vel em um gerador de malhas: obter a malha de acordo com o problema f\u00edsico. Atualmente isto \u00e9 feito externamente ao gerador, isto \u00e9, tendo-se no\u00e7\u00e3o da f\u00edsica do problema geramos uma malha que atenda de forma geral ao problema. O desej\u00e1vel seria integrar as condi\u00e7\u00f5es de contorno e natureza da equa\u00e7\u00e3o diferencial com o gerador no n\u00edvel de concep\u00e7\u00e3o deste \u00faltimo. Este \u00e9, entretanto, um objetivo dif\u00edcil de ser conseguido. Um paliativo para isso s\u00e3o os geradores acoplados explicitamente com os simuladores, que geram sucessivas malhas enquanto a solu\u00e7\u00e3o avan\u00e7a, conhecidos como m\u00e9todos adaptativos. Em fun\u00e7\u00e3o da import\u00e2ncia que os m\u00e9todos adaptativos tem hoje na simula\u00e7\u00e3o num\u00e9rica, neste\ntrabalho teve-se sempre a preocupa\u00e7\u00e3o de desenvolver um algoritmo que facilmente possa integrar um m\u00e9todo adaptativo.\nFig. 13 - Diagrama de Voronoi [73]\n2.3.Triangula\u00e7\u00e3o de Delaunay-Caracter\u00edsticas\nA triangula\u00e7\u00e3o de Delaunay foi primeiramente introduzida por Delaunay [23] em 1934, e sua defini\u00e7\u00e3o para tal diagrama, conforme [13], \u00e9 apresentada na se\u00e7\u00e3o seguinte.\n2.3.1.\tDefini\u00e7\u00e3o\n\u201cPara definir-se uma triangula\u00e7\u00e3o de Delaunay D de um conjunto de v\u00e9rtices V no plano, define-se primeiramente as seguintes propriedades:\n1.\tQualquer c\u00edrculo em tal plano \u00e9 dito vazio caso este n\u00e3o contenha nenhum v\u00e9rtice de V no seu interior;\n2.\tV\u00e9rtices localizados sobre a circunfer\u00eancia n\u00e3o s\u00e3o considerados no interior do c\u00edrculo, n\u00e3o invalidando, portanto, o crit\u00e9rio anterior;\n3.\tSejam u e v dois v\u00e9rtices quaisquer de V. Um circunc\u00edrculo, ou c\u00edrculo circunscrito, da aresta uv \u00e9 qualquer c\u00edrculo que passe pelos pontos u e v. Qualquer aresta possui infinitos circunc\u00edrculos.\nCom isto, pode-se dizer que a triangula\u00e7\u00e3o D \u00e9 o grafo que respeita a seguinte regra: a aresta uv encontra-se na triangula\u00e7\u00e3o D se, e somente se, existe um circunc\u00edrculo vazio de uv. A aresta que satisfaz esta propriedade tamb\u00e9m \u00e9 chamada de aresta de Delaunay.\u201d\n2.3.2.\tPropriedades\nA triangula\u00e7\u00e3o de Delaunay otimiza simultaneamente os seguintes crit\u00e9rios:\n1.\tmaxmin \u00e2ngulo (maximiza\u00e7\u00e3o do m\u00ednimo \u00e2ngulo interno dos tri\u00e2ngulo);\n2.\tminmax circunc\u00edrculo (minimiza\u00e7\u00e3o do m\u00e1ximo circunc\u00edrculo das arestas);\n3.\tminmax min-c\u00edrculo de conten\u00e7\u00e3o (minimiza\u00e7\u00e3o do m\u00e1ximo m\u00ednimo-c\u00edrculo de conten\u00e7\u00e3o das arestas), conforme pode ser visto na Fig. 14(c).\nO respeito a estes tr\u00eas crit\u00e9rios no processo de gera\u00e7\u00e3o, d\u00e1 origem \u00e0 malhas que s\u00e3o adequadas para a simula\u00e7\u00e3o num\u00e9rica. Esta triangula\u00e7\u00e3o, composta de tri\u00e2ngulos \u201cbem comportados\u201d, pode ser usada em diversas aplica\u00e7\u00f5es, sendo largamente empregada em elementos finitos. Conforme j\u00e1 salientado, esta triangula\u00e7\u00e3o possui um dual de interesse especial para a discretiza\u00e7\u00e3o de equa\u00e7\u00f5es diferenciais utilizando o m\u00e9todo dos volumes finitos. E a raz\u00e3o \u00e9 devido a ortogonalidade local entre a triangula\u00e7\u00e3o e seu dual, conforme pode ser visto na Fig. 15. Nesta figura o pol\u00edgono abcde \u00e9 o diagrama de Voronoi, usado como volume de controle para realiza\u00e7\u00e3o dos balan\u00e7os. As propriedades a serem determinadas pela simula\u00e7\u00e3o est\u00e3o armazenadas nos pontos 1, 2, 3, 4, 5 e 6, centros dos diagramas de Voronoi (volumes de controle). Observe que a linha 1-3 corta b-c ortogonalmente, o que deixa o c\u00e1lculos de derivadas normal \u00e0 face c-b extremamente simples. Al\u00e9m disso, b-c corta 1-3 exatamente na metade, o que facilita a avalia\u00e7\u00e3o de propriedades na interface do volume de controle. Em resumo, a ortogonalidade local reduz o m\u00e9todo num\u00e9rico em um m\u00e9todo muito semelhante ao cartesiano, mas com todas as versatilidade de um m\u00e9todo de malhas n\u00e3o-estruturas que se conformam com a fronteira do dom\u00ednio.\nm\u00ednimos c\u00edrculos de conten\u00e7\u00e3o\n(c)\nFig. 14 - M\u00ednimo \u00e2ngulo (a), m\u00e1ximo circunc\u00edrculo (b) e m\u00ednimo c\u00edrculo de conten\u00e7\u00e3o (c)\nA triangula\u00e7\u00e3o de Delaunay conforme definida anteriormente, de um dado conjunto de pontos, \u00e9 \u00fanica. Isto porque se obt\u00e9m uma forma fechada e n\u00e3o-amb\u00edgua, para se determinar a presen\u00e7a ou n\u00e3o, de uma aresta de Delaunay entre dois pontos quaisquer do conjunto de pontos fornecido. Uma r\u00e1pida an\u00e1lise mostra que qualquer aresta pertencente ao envelope convexo de um conjunto de pontos tamb\u00e9m ir\u00e1 pertencer \u00e0 triangula\u00e7\u00e3o de Delaunay de tais pontos. Para demonstrar, basta iniciarmos com um c\u00edrculo de tamanho igual \u00e0 dist\u00e2ncia entre os dois pontos da aresta e crescermos com tal c\u00edrculo para fora da triangula\u00e7\u00e3o. Quanto mais aumentarmos o raio do c\u00edrculo, menos curvo (mais pr\u00f3ximo de um segmento de reta) torna-se o arco de circunfer\u00eancia formado entre os dois pontos. Como o envelope convexo \u00e9 a curva poligonal convexa que, necessariamente, engloba todos os pontos, sempre existe um raio no qual nenhum ponto da triangula\u00e7\u00e3o reside dentro da circunfer\u00eancia supracitada, mostrando\nque tal aresta faz parte da triangula\u00e7\u00e3o de Delaunay. A Fig. 16 complementa a explica\u00e7\u00e3o anterior.\nFig. 15 - Ortogonalidade local entre a triangula\u00e7\u00e3o de Delaunay e o diagrama de Voronoi\nDa mesma forma, toda a aresta que conecta os dois v\u00e9rtices mais pr\u00f3ximos \u00e9 uma aresta de Delaunay. Isto porque o c\u00edrculo diametral da aresta formada pelos dois v\u00e9rtices necessariamente n\u00e3o engloba nenhum outro v\u00e9rtice, pois este c\u00edrculo tem o di\u00e2metro igual a menor dist\u00e2ncia entre dois v\u00e9rtices da triangula\u00e7\u00e3o, e por sua vez, a aresta \u00e9 Delaunay.\nUma propriedade n\u00e3o t\u00e3o simples de ser mostrada, e de fundamental import\u00e2ncia, \u00e9 a de que o conjunto das arestas de Delaunay de um dado conjunto de pontos, forma uma triangula\u00e7\u00e3o v\u00e1lida. Para a defini\u00e7\u00e3o anterior, no entanto, esta propriedade s\u00f3 \u00e9 verdade, quando os pontos est\u00e3o em uma configura\u00e7\u00e3o denominada posi\u00e7\u00e3o geral. Por posi\u00e7\u00e3o geral entende-se que n\u00e3o existem quaisquer quatro pontos do conjunto de pontos fornecido que\nresidam sobre a mesma circunfer\u00eancia A demonstra\u00e7\u00e3o de tal propriedade \u00e9 algo n\u00e3o intuitivo e de razo\u00e1vel complexidade, fora do escopo deste trabalho, e pode ser encontrada em [11].\nOutra propriedade interessante da triangula\u00e7\u00e3o de Delaunay \u00e9 a propriedade do circunc\u00edrculo vazio. \u00c9 denominado de circunc\u00edrculo de um tri\u00e2ngulo o c\u00edrculo \u00fanico que passa pelos tr\u00eas v\u00e9rtices de tal tri\u00e2ngulo. Esta propriedade define que, assim como uma aresta, um tri\u00e2ngulo \u00e9 dito de Delaunay se, e apenas se, o seu circunc\u00edrculo for vazio. Isto significa dizer que n\u00e3o existe um \u00fanico v\u00e9rtice da triangula\u00e7\u00e3o que resida dentro de tal tri\u00e2ngulo. A defini\u00e7\u00e3o de circunc\u00edrculo de Delaunay, por sua vez, decorre de forma bastante direta da defini\u00e7\u00e3o de aresta de Delaunay. A Fig. 17 apresenta graficamente esta propriedade.\nFig. 17 - Triangula\u00e7\u00e3o de Delaunay e seus respectivos circunc\u00edrculos [99]\n2.3.3.\tDegenera\u00e7\u00e3o/Singularidades\nDos poucos problemas apresentados pela triangula\u00e7\u00e3o de Delaunay, provavelmente a degenera\u00e7\u00e3o \u00e9 o principal deles. Este comportamento aparece nesta estrutura geom\u00e9trica quando existem quatro ou mais pontos cocirculares no conjunto dos pontos de entrada. Nesta situa\u00e7\u00e3o singular, a triangula\u00e7\u00e3o de tais v\u00e9rtices n\u00e3o \u00e9 \u00fanica e por isso cont\u00e9m arestas cruzadas, invalidando a mesma. T\u00e9cnicas relativamente simples podem resolver o problema das arestas cruzadas, e conseq\u00fcentemente o problema da invalidade da triangula\u00e7\u00e3o [31][35][85]. No entanto, n\u00e3o existe solu\u00e7\u00e3o para o principal problema acarretado pela degenera\u00e7\u00e3o: pequenas perturba\u00e7\u00f5es morfol\u00f3gicas nos pontos de entrada acarretam mudan\u00e7as topol\u00f3gicas na triangula\u00e7\u00e3o final. Este comportamento faz com que os m\u00e9todos falhem com\nfreq\u00fc\u00eancia na obten\u00e7\u00e3o de triangula\u00e7\u00f5es com combina\u00e7\u00f5es de pontos deste tipo, e devido a isso, diz-se que tal triangula\u00e7\u00e3o sofre uma degenera\u00e7\u00e3o.\nA Fig. 18 ilustra um exemplo de uma triangula\u00e7\u00e3o de Delaunay degenerada, onde vemos 6 pontos co-circulares, originando triangula\u00e7\u00e3o com arestas cruzadas (Fig. 18(a)). Para evitar que as arestas de uma triangula\u00e7\u00e3o de Delaunay cruzem-se na gera\u00e7\u00e3o de triangula\u00e7\u00f5es com pontos co-circulares, normalmente adota-se uma defini\u00e7\u00e3o modificada para tal malha. Algumas delas eliminam as arestas cruzadas, resultando em pol\u00edgonos com mais de tr\u00eas lados dentro da malha (Fig. 18(b)). Estas defini\u00e7\u00f5es modificadas s\u00e3o interessantes por representar corretamente a topologia do relativo diagrama de Voronoi. No entanto, tal triangula\u00e7\u00e3o continua ainda inv\u00e1lida, n\u00e3o sendo interessante para aplica\u00e7\u00f5es pr\u00e1ticas.\n(a)\t(b)\t(c)\nFig. 18 - Triangula\u00e7\u00e3o de Delaunay degenerada [99]\nA modifica\u00e7\u00e3o na defini\u00e7\u00e3o original da triangula\u00e7\u00e3o de Delaunay a torna robusta e de utilidade pr\u00e1tica, por sua vez, consiste na elimina\u00e7\u00e3o das arestas cruzadas e posterior triangula\u00e7\u00e3o, por um m\u00e9todo qualquer, dos pol\u00edgonos internos remanescentes com mais de tr\u00eas lados, conforme Fig. 18(c). Novamente, neste caso, a triangula\u00e7\u00e3o de Delaunay n\u00e3o \u00e9 \u00fanica, pois podemos escolher diferentes formas v\u00e1lidas de triangular tais pol\u00edgonos de alta ordem. Esta liberdade, no entanto, n\u00e3o invalida a defini\u00e7\u00e3o de Delaunay, pois, qualquer que seja a escolha dos tri\u00e2ngulos, esta n\u00e3o implica em nenhuma altera\u00e7\u00e3o dos par\u00e2metros \u00f3timos de tal triangula\u00e7\u00e3o.\nPara que n\u00e3o seja necess\u00e1rio considerar-se, em an\u00e1lises posteriores o caso da degenera\u00e7\u00e3o, passar-se-\u00e1 a utilizar a seguinte defini\u00e7\u00e3o de triangula\u00e7\u00e3o de Delaunay: uma aresta ou tri\u00e2ngulo \u00e9 dito fortemente Delaunay caso esta possua um circunc\u00edrculo tal que\nnenhum v\u00e9rtice resida dentro ou sobre tal circunc\u00edrculo, exceto pelos v\u00e9rtices da pr\u00f3pria aresta ou tri\u00e2ngulo.\nPortanto, sempre que n\u00e3o tivermos quatro ou mais v\u00e9rtices co-circulares nos pontos fornecidos, todas as arestas e tri\u00e2ngulos de Delaunay ser\u00e3o, necessariamente, fortemente Delaunay.\nFig. 19 - Degenera\u00e7\u00e3o do diagrama de Voronoi\nApesar de, formalmente, n\u00e3o ser considerada uma degenera\u00e7\u00e3o da triangula\u00e7\u00e3o de Delaunay, no jarg\u00e3o da \u00e1rea num\u00e9rica chama-se de degenera\u00e7\u00e3o o diagrama de Voronoi obtido com tri\u00e2ngulos que possuam \u00e2ngulos obtusos. A Fig. 19 apresenta este caso, onde a triangula\u00e7\u00e3o de Delaunay aparece em linhas tracejadas, e o \u00e2ngulo obtuso \u00e9 indicado por a. No diagrama de Voronoi, em linhas cheias, podemos observar que a linha que une os pontos nodais A e B passa externamente \u00e0 linha 1-2, \u00e9 a \u00e1rea de passagem dos fluxos da propriedade em considera\u00e7\u00e3o. Com esta configura\u00e7\u00e3o, a avalia\u00e7\u00e3o de derivadas e de valores da fun\u00e7\u00e3o nas interfaces do volume de controle estar\u00e3o fora da \u00e1rea que representam. No gerador desenvolvido neste trabalho, isto \u00e9 evitado utilizando-se um m\u00e9todo de refino, que elimina os \u00e2ngulos obtusos, conforme descrito no Cap. 4.\n2.3.4.\tTriangula\u00e7\u00e3o de Delaunay Restrita\nComo vimos anteriormente, dado um conjunto de pontos, a triangula\u00e7\u00e3o de Delaunay, em duas dimens\u00f5es, maximiza o m\u00ednimo \u00e2ngulo interno dos tri\u00e2ngulos. Ou seja, n\u00e3o existe nenhuma outra triangula\u00e7\u00e3o poss\u00edvel para o conjunto de pontos fornecido que contenha\n\u00e2ngulos maiores que a triangula\u00e7\u00e3o de Delaunay. Por que, ent\u00e3o, o problema de gera\u00e7\u00e3o de malha n\u00e3o est\u00e1 totalmente resolvido, j\u00e1 que encontramos uma malha \u00f3tima para tal crit\u00e9rio?\nExistem dois motivos, e s\u00e3o ilustrados na Fig. 20. O primeiro motivo \u00e9 que n\u00e3o basta a triangula\u00e7\u00e3o conformar-se aos pontos do dom\u00ednio fornecido. \u00c9 necess\u00e1rio levar-se tamb\u00e9m em considera\u00e7\u00e3o os segmentos. Estes segmentos, por sua vez, podem n\u00e3o estar presentes na triangula\u00e7\u00e3o, conforme pode ser visto na Fig. 20, onde a triangula\u00e7\u00e3o obtida (b) n\u00e3o cont\u00e9m todas as arestas do dom\u00ednio fornecido (a). Com isto, adapta\u00e7\u00f5es \u00e0 triangula\u00e7\u00e3o devem ser efetuadas de forma a respeitar esta restri\u00e7\u00e3o. Resumindo, queremos encontrar um algoritmo que obtenha triangula\u00e7\u00f5es de Delaunay em um dom\u00ednio do tipo GPSR (composto por pontos e segmentos de reta). O segundo motivo pode ser observado no tri\u00e2ngulo achatado da base da Fig. 20(b), o qual obedece a regra de Delaunay, mas n\u00e3o possui uma boa forma geom\u00e9trica para a simula\u00e7\u00e3o, pois possui dois \u00e2ngulos muito pequenos, e um \u00e2ngulo pr\u00f3ximo de 180o..\nFig. 20 - Problemas adicionais da triangula\u00e7\u00e3o de Delaunay\nPara cada um destes problemas, existe uma solu\u00e7\u00e3o. Para o caso da triangula\u00e7\u00e3o respeitar as arestas do dom\u00ednio fornecido, definiremos, em seguida, uma variante da triangula\u00e7\u00e3o de Delaunay: a triangula\u00e7\u00e3o de Delaunay Restrita (TDR) que utiliza-se de um novo conceito, denominado visibilidade para redefinir a regra de Delaunay para o circunc\u00edrculo. Para o problema da qualidade dos elementos da triangula\u00e7\u00e3o podem ser utilizados pontos de Steiner na triangula\u00e7\u00e3o.\nPara a defini\u00e7\u00e3o de uma TDR, consideremos um GPSR qualquer X. Dois pontos no interior deste GPSR s\u00e3o vis\u00edveis, caso o segmento de reta formado por estes dois pontos n\u00e3o interseccione nenhuma aresta de X, al\u00e9m de nos seus pontos extremos. Por sua vez, uma aresta ou tri\u00e2ngulo \u00e9 denominado de Delaunay restrito caso ele satisfa\u00e7a as duas seguintes condi\u00e7\u00f5es: primeiro, o seu interior n\u00e3o intersecciona nenhuma aresta do dom\u00ednio fornecido (a n\u00e3o ser que ela seja a pr\u00f3pria aresta do dom\u00ednio); segundo, ele possui um circunc\u00edrculo que n\u00e3o engloba nenhum v\u00e9rtice de X que seja vis\u00edvel do interior da aresta ou tri\u00e2ngulo. Uma\nTDR \u00e9 uma triangula\u00e7\u00e3o onde todas as arestas e tri\u00e2ngulos s\u00e3o Delaunay restritos. Por sua vez, uma TDR nada mais \u00e9 que uma TD com esta nova defini\u00e7\u00e3o de aresta ou tri\u00e2ngulo de Delaunay.\nA Fig. 21 apresenta dois exemplos onde a aresta e e o tri\u00e2ngulo t n\u00e3o respeitam a regra de Delaunay original, mas respeitam a regra de Delaunay restrita. Os segmentos do dom\u00ednio fornecido s\u00e3o apresentados em negrito. Apesar de e n\u00e3o possuir um circunc\u00edrculo vazio, o circunc\u00edrculo apresentado engloba apenas v\u00e9rtices que n\u00e3o s\u00e3o vis\u00edveis por e. Existem dois v\u00e9rtices dentro do circunc\u00edrculo, mas os dois s\u00e3o escondidos pelas arestas do dom\u00ednio fornecido. O mesmo ocorre para o tri\u00e2ngulo t, onde os dois v\u00e9rtices, englobados pelo circunc\u00edrculo apresentado na figura, n\u00e3o s\u00e3o vis\u00edveis do interior de t. Tais triangula\u00e7\u00e3o s\u00e3o, ent\u00e3o, ditas triangula\u00e7\u00f5es de Delaunay restritas.\n(a)\t(b)\nFig. 21 - Aresta (a) e tri\u00e2ngulo (b) de Delaunay restritos\nCom esta nova defini\u00e7\u00e3o, a TDR, podemos facilmente obter triangula\u00e7\u00f5es que respeitem os segmentos do dom\u00ednio, segmentos estes que, n\u00e3o necessariamente, est\u00e3o presentes na triangula\u00e7\u00e3o de Delaunay. Para obtermos a TDR \u00e9 bastante simples; basta se construir a TD por qualquer um dos m\u00e9todos existentes descritos no pr\u00f3ximo cap\u00edtulo e utilizar o algoritmo de inser\u00e7\u00e3o de aresta (se\u00e7\u00e3o 3.1.1.2), onde a triangula\u00e7\u00e3o dos dois pol\u00edgonos resultantes da remo\u00e7\u00e3o das arestas seccionantes da aresta inserida deve respeitar a regra de Delaunay restrita. Para a triangula\u00e7\u00e3o destes pol\u00edgonos simplesmente convexos existem algoritmos extremamente eficientes.\nOutra forma de obtermos a TDR \u00e9 com uma vers\u00e3o modificada do algoritmo de invers\u00e3o de aresta. Como o algoritmo de invers\u00e3o de aresta, por sua vez, necessita de uma triangula\u00e7\u00e3o inicial, a triangula\u00e7\u00e3o fornecida ao m\u00e9todo deve conter todas as arestas do\ndom\u00ednio fornecido. Assim, podemos come\u00e7ar o processo de triangula\u00e7\u00e3o atrav\u00e9s dos pontos do dom\u00ednio aplicando o algoritmo de triangula\u00e7\u00e3o qualquer. Ap\u00f3s este algoritmo, inserimos os segmentos do dom\u00ednio, preenchendo os pol\u00edgonos resultantes da inser\u00e7\u00e3o dos segmentos tamb\u00e9m com uma triangula\u00e7\u00e3o qualquer. Finalmente, aplica-se o algoritmo de invers\u00e3o de aresta modificado para obtermos a TDR (se\u00e7\u00e3o 3.1.1.1). O algoritmo de invers\u00e3o de aresta modificado difere do original, apenas pelo fato de que as arestas do dom\u00ednio fornecido nunca s\u00e3o adicionadas \u00e0 lista de poss\u00edveis arestas invertidas. Com isto, estas arestas nunca s\u00e3o removidas, e a GPSR \u00e9 preservada na triangula\u00e7\u00e3o.\nAssim como a TD \u00e9 o dual do diagrama de Voronoi, a TDR \u00e9 o dual do diagrama de Voronoi delimitado [67][96][111]. O diagrama de Voronoi delimitado \u00e9 uma constru\u00e7\u00e3o geometria que divide o plano em diversas c\u00e9lulas, uma para cada v\u00e9rtice fornecido, tal que cada c\u00e9lula \u00e9 delimitada pela regi\u00e3o do plano para qual a \u00e9 o ponto vis\u00edvel mais pr\u00f3ximo. Veja que esta defini\u00e7\u00e3o \u00e9 exatamente igual a do diagrama de Voronoi, exceto pela utiliza\u00e7\u00e3o do conceito de visibilidade para defini\u00e7\u00e3o do ponto mais pr\u00f3ximo.\nUm \u00faltimo exemplo \u00e9 mostrado na Fig. 22. Primeiramente, o GPSR fornecido na Fig. 22(a), a triangula\u00e7\u00e3o de Delaunay de seus v\u00e9rtices Fig. 22(b), e finalmente, a triangula\u00e7\u00e3o de Delaunay restrita Fig. 22(c). Pode-se observar que alguns dos v\u00e9rtices da TDR s\u00e3o Delaunay restritos, mas n\u00e3o s\u00e3o Delaunay. Com isto, \u00e9 importante n\u00e3o se deixar confundir pela denomina\u00e7\u00e3o, e sempre lembrar que uma triangula\u00e7\u00e3o de Delaunay restrita n\u00e3o \u00e9 necessariamente uma triangula\u00e7\u00e3o de Delaunay.\n(b)\nFig. 22 - Etapas de obten\u00e7\u00e3o de uma triangula\u00e7\u00e3o de Delaunay restrita\n(c)\n2.4.Outras triangula\u00e7\u00f5es \u00f3timas\nEsta se\u00e7\u00e3o apresenta, de forma muito sucinta, tipos de triangula\u00e7\u00f5es denominadas \u00f3timas, ou seja, que respeitam algum crit\u00e9rio de otimiza\u00e7\u00e3o da malha. Estes m\u00e9todos s\u00e3o aqui listados, principalmente para fornecimento da bibliografia sobre triangula\u00e7\u00e3o.\n2.4.1.\tMinmax comprimento de aresta\nDos diversos trabalhos no campo de otimiza\u00e7\u00e3o de crit\u00e9rios de triangula\u00e7\u00f5es, apenas alguns poucos estudos consideram o problema topol\u00f3gico, ou seja, otimiza\u00e7\u00e3o do grau dos v\u00e9rtices [58] ou da conectividade [29].\nA grande maioria das triangula\u00e7\u00f5es \u00f3timas concentra-se na otimiza\u00e7\u00e3o de par\u00e2metros morfol\u00f3gicos, como por exemplo, o comprimento de aresta e o m\u00ednimo \u00e2ngulo interno. O comprimento de aresta \u00e9 um par\u00e2metro bastante interessante, pois este afeta diretamente os erros de truncamento da aproxima\u00e7\u00e3o num\u00e9rica [100].\nUm dos primeiros trabalhos no campo de otimiza\u00e7\u00e3o foi de Edelsbrunner e Tan [35], que consideraram a minimiza\u00e7\u00e3o do m\u00e1ximo comprimento de aresta. Eles demonstraram que esta triangula\u00e7\u00e3o, assim como a triangula\u00e7\u00e3o de Delaunay, cont\u00e9m as arestas da \u00e1rvore m\u00ednima de separa\u00e7\u00e3o das arestas. A \u00e1rvore m\u00ednima de separa\u00e7\u00e3o das arestas \u00e9 a \u00e1rvore que conecta os v\u00e9rtices atrav\u00e9s da menor dist\u00e2ncia poss\u00edvel. Em raz\u00e3o disso, \u00e9 poss\u00edvel encontrarse a triangula\u00e7\u00e3o em um tempo de ordem O(n ). Com algumas opera\u00e7\u00f5es n\u00e3o triviais este tempo pode ser reduzido para O(n ).\n2.4.2.\tGreedy\nEsta triangula\u00e7\u00e3o minimiza o vetor ordenado de comprimentos de aresta, o que n\u00e3o necessariamente implica em minimizar o n\u00famero de arestas da triangula\u00e7\u00e3o [48][59]. Nesta triangula\u00e7\u00e3o, os m\u00e9todos de gera\u00e7\u00e3o s\u00e3o incrementais atrav\u00e9s da inser\u00e7\u00e3o de arestas, e n\u00e3o da inser\u00e7\u00e3o de pontos, como usualmente \u00e9 feito. Inicia-se com o conjunto de pontos que se deseja triangular, e escolhe-se, seq\u00fcencialmente, a aresta de menor dist\u00e2ncia dispon\u00edvel, sem que esta cruze as arestas j\u00e1 definidas.. Sabe-se que sem a utiliza\u00e7\u00e3o de pontos de Steiner para um dado conjunto de pontos de entrada, independente do crit\u00e9rio de otimiza\u00e7\u00e3o utilizado, o\nn\u00famero de elementos obtidos na triangula\u00e7\u00e3o \u00e9 sempre o mesmo. Isto pode ser facilmente mostrado atrav\u00e9s de uma an\u00e1lise do grau dos v\u00e9rtices de uma triangula\u00e7\u00e3o qualquer.\nPara um conjunto de pontos qualquer, as opera\u00e7\u00f5es necess\u00e1rias para obter uma triangula\u00e7\u00e3o de Greedy podem ser computadas em tempos da O(n ) atrav\u00e9s da manuten\u00e7\u00e3o continua de uma triangula\u00e7\u00e3o de Delaunay, para auxiliar a descobrir as arestas da triangula\u00e7\u00e3o de Greedy. Para dom\u00ednios poligonais convexos [59] ou conjunto de pontos rand\u00f4micos [30], \u00e9 poss\u00edvel reduzir a ordem do tempo de computa\u00e7\u00e3o para O(n).\n2.4.3.\tPonto mais distante\nOutra triangula\u00e7\u00e3o de aplica\u00e7\u00e3o pr\u00e1tica, primeiramente estudada por Eppstein [38], minimiza o m\u00ednimo \u00e2ngulo interno dos tri\u00e2ngulos. O particionamento resultante \u00e9 denominado de triangula\u00e7\u00e3o de Delaunay do ponto mais distante, e suas opera\u00e7\u00f5es, novamente, consomem um tempo de ordem O(n) [1]. Esta triangula\u00e7\u00e3o dualiza o diagrama de Voronoi do ponto mais distante (oposto ao tradicional, que poderia ser chamado de diagrama de Voronoi do ponto mais pr\u00f3ximo). Esta geom\u00e9trica \u00e9 utilizada para se descobrir o ponto mais distante de um ponto escolhido arbitrariamente no espa\u00e7o. Apesar de poder ser definida para um conjunto qualquer de pontos, normalmente esta parti\u00e7\u00e3o n\u00e3o \u00e9 uma triangula\u00e7\u00e3o v\u00e1lida, j\u00e1 que suas arestas conectam v\u00e9rtices apenas no envelope convexo e que, provavelmente, se interseccionam.\n2.4.4.\tMaxmin da altura do tri\u00e2ngulo\nConsideremos agora o problema de obten\u00e7\u00e3o de uma triangula\u00e7\u00e3o maximizando a altura m\u00ednima dos tri\u00e2ngulos. Este problema aparece no algoritmo de triangula\u00e7\u00e3o tridimensional de Mitchell e Vavasis [80], e est\u00e1 diretamente relacionado com a qualidade da aproxima\u00e7\u00e3o de curvas por segmentos de retas [50].\n2.4.5.\tMinimiza\u00e7\u00e3o do peso dos tri\u00e2ngulos (MPT)\nO problema que ainda encontra-se sem solu\u00e7\u00e3o at\u00e9 hoje em geometria computacional \u00e9 a triangula\u00e7\u00e3o de um conjunto arbitr\u00e1rio de pontos minimizando o peso dos tri\u00e2ngulos [34]. Minimizar o peso dos tri\u00e2ngulos significa minimizar o comprimento total das arestas. Por isso, os primeiros autores a trabalharem com geometria computacional costumavam\nreferenciar-se a este problema como sendo o \u201cproblema da triangula\u00e7\u00e3o \u00f3tima\u201d, j\u00e1 que trabalha conjuntamente com as tr\u00eas arestas do tri\u00e2ngulo.\nGarey e Johnson [48] inclu\u00edram o problema de MPT \u00e0 sua famosa lista de problemas sem solu\u00e7\u00e3o ou com solu\u00e7\u00e3o em tempo polinomial. Se generalizarmos o problema de MPT, de forma que o peso de cada tri\u00e2ngulo n\u00e3o seja uma fun\u00e7\u00e3o diretamente relacionada ao comprimento total das arestas, o problema de MPT passa a ser solucion\u00e1vel (no entanto, n\u00e3o necessariamente em tempo polinomial) [66]. Para esta nova defini\u00e7\u00e3o de MPT, chamamos MPT aproximado, ou MPTA, \u00e0 qual os estudos de otimiza\u00e7\u00e3o dedicaram consider\u00e1veis esfor\u00e7os.\nNo cap\u00edtulo anterior foi apresentada uma breve an\u00e1lise sobre os diversos tipos de triangula\u00e7\u00f5es, suas propriedades e m\u00e9todos de gera\u00e7\u00e3o. No presente cap\u00edtulo, focalizaremos as aten\u00e7\u00f5es em um tipo espec\u00edfico de triangula\u00e7\u00e3o, denominada triangula\u00e7\u00e3o de Delaunay. Os fundamentos desta estrutura geom\u00e9trica, m\u00e9todos de gera\u00e7\u00e3o da triangula\u00e7\u00e3o e variantes da mesma para aplica\u00e7\u00f5es pr\u00e1ticas s\u00e3o apresentados, com \u00eanfase em aspectos voltados para gera\u00e7\u00e3o de malha, considerando a qualidade dos elementos e conserva\u00e7\u00e3o das fronteiras do dom\u00ednio geom\u00e9trico fornecido. Este cap\u00edtulo tamb\u00e9m apresenta uma discuss\u00e3o sobre m\u00e9todos de melhoramento da malha, incluindo os m\u00e9todos de suaviza\u00e7\u00e3o e de refino.\n3.1.M\u00e9todos de triangula\u00e7\u00e3o de Delaunay\nDos diversos componentes que fornecem funcionalidades a um gerador de malhas, como filtros de entrada/sa\u00edda, manipulador geom\u00e9trico, algoritmo de discretiza\u00e7\u00e3o, interface gr\u00e1fica, visualiza\u00e7\u00e3o, entre outros, o principal deles, e no qual reside o desempenho do gerador, \u00e9 o algoritmo de discretiza\u00e7\u00e3o e sua respectiva estrutura de dados.\nOs diversos algoritmos de triangula\u00e7\u00e3o de Delaunay dispon\u00edveis na literatura podem ser divididos em dois grandes grupos: diretos e incrementais. Os algoritmos diretos t\u00eam como caracter\u00edstica fundamental a necessidade de saber de antem\u00e3o o conjunto completo de v\u00e9rtices envolvidos na gera\u00e7\u00e3o, enquanto os algoritmos incrementais precisam saber apenas sobre a triangula\u00e7\u00e3o atual e o novo v\u00e9rtice que ser\u00e1 adicionado. Para se adicionar um \u00fanico v\u00e9rtice utilizando um algoritmo direto, \u00e9 necess\u00e1rio recalcular-se toda a triangula\u00e7\u00e3o. Desta forma, os algoritmos diretos s\u00e3o interessantes para se obter malhas a partir apenas da defini\u00e7\u00e3o da geometria e de pontos previamente definidos, ou seja, no processo de gerar a triangula\u00e7\u00e3o inicial e n\u00e3o na etapa de refino. Nesta fun\u00e7\u00e3o, os algoritmos diretos costumam ser bem mais r\u00e1pidos que os algoritmos incrementais. \u00c9 importante lembrar que, quase sempre, a triangula\u00e7\u00e3o inicial est\u00e1 distante de ser uma malha adequada para simula\u00e7\u00e3o num\u00e9rica. Os m\u00e9todos de refino \u00e9 que transformam a triangula\u00e7\u00e3o inicial em uma malha com boas caracter\u00edsticas para simula\u00e7\u00e3o. Os algoritmos incrementais, por sua vez, s\u00e3o interessantes para\nserem utilizados em processos de refino de malha ou em simuladores adaptativos. Isto porque a adi\u00e7\u00e3o e remo\u00e7\u00e3o de pontos \u00e9 uma opera\u00e7\u00e3o meramente local, n\u00e3o envolvendo toda a malha. Modifica\u00e7\u00f5es locais \u00e0 triangula\u00e7\u00e3o s\u00e3o efetuadas de forma que esta contenha o novo v\u00e9rtice e mantenha as propriedades de Delaunay.\nOs algoritmos mais conhecidos de gera\u00e7\u00e3o de triangula\u00e7\u00e3o de Delaunay dispon\u00edveis na literatura s\u00e3o o incremental de Lawson [69], o divide-and-conquer de Lee e Schachter [64] e o plane-sweep de Fortune [42]. Os tempos de gera\u00e7\u00e3o entre estes tr\u00eas algoritmos s\u00e3o bastante similares, no entanto, o divide-and-conquer, segundo Shewchuk, [101], \u00e9 levemente mais r\u00e1pido, vindo o plane-sweep em segundo e o incremental por \u00faltimo.\nO algoritmo incremental, apesar de ser o candidato natural a ocupar o primeiro posto de performance, consome a maioria do tempo com a localiza\u00e7\u00e3o do tri\u00e2ngulo em que o novo ponto vai ser inserido. Apesar desta opera\u00e7\u00e3o poder ser otimizada com diversas t\u00e9cnicas, como \u00e1rvores de busca e caching de tri\u00e2ngulos, o m\u00e9todo incremental ainda fica em \u00faltimo lugar quando a gera\u00e7\u00e3o de triangula\u00e7\u00f5es com um grande n\u00famero de v\u00e9rtices for de interesse. Al\u00e9m disto, as t\u00e9cnicas de otimiza\u00e7\u00e3o da opera\u00e7\u00e3o de localiza\u00e7\u00e3o de ponto podem ser facilmente derrubadas atrav\u00e9s de determinados arranjos de pontos, os quais, infelizmente, acontecem com freq\u00fc\u00eancia na pr\u00e1tica (estas t\u00e9cnicas sup\u00f5em uma distribui\u00e7\u00e3o aleat\u00f3ria de pontos, o que normalmente n\u00e3o ocorre).\nApesar de n\u00e3o serem t\u00e3o eficientes, os algoritmos incrementais podem tamb\u00e9m, se desejado, ser utilizados para a gera\u00e7\u00e3o de malhas a partir de um conjunto pr\u00e9-definido de pontos, ou seja, n\u00e3o na etapa de refino. Para isto, basta criarmos uma triangula\u00e7\u00e3o vazia e adicionarmos os v\u00e9rtices, um a um. Esta abordagem \u00e9 interessante, pois existe um conjunto de algoritmos incrementais que podem ser generalizados para n-dimens\u00f5es.\nShewchuk [101] apresenta maiores informa\u00e7\u00f5es de resultados comparativos entre os m\u00e9todos citados anteriormente, com a utiliza\u00e7\u00e3o ou n\u00e3o de aritm\u00e9tica exata para o aumento da robustez. Algoritmos utilizando aritm\u00e9tica exata, apesar de serem mais lentos que os algoritmos utilizando aritm\u00e9tica de ponto flutuante, falham apenas com um n\u00famero muito grande de pontos. Maiores detalhes sobre o uso de aritm\u00e9tica exata aplicada a gera\u00e7\u00e3o de triangula\u00e7\u00f5es de Delaunay podem ser encontrados em [93][67][25][44].\nEm seguida, s\u00e3o apresentados alguns dos algoritmos de gera\u00e7\u00e3o de triangula\u00e7\u00e3o de Delaunay dispon\u00edveis na literatura, classificados como diretos e em seguida os incrementais.\n3.1.1.\tM\u00e9todos Diretos\n3.1.1.1.\tInvers\u00e3o de aresta\nO algoritmo de invers\u00e3o de aresta, assim como outros aqui apresentados, \u00e9 um algoritmo apenas de otimiza\u00e7\u00e3o, e n\u00e3o de gera\u00e7\u00e3o. Ou seja, parte-se de uma triangula\u00e7\u00e3o inicial j\u00e1 existente, modificando-a de forma a otimizar os crit\u00e9rios desejados. A triangula\u00e7\u00e3o inicial, por sua vez, pode ser obtida utilizando qualquer m\u00e9todo de gera\u00e7\u00e3o, como por exemplo, o m\u00e9todo de triangula\u00e7\u00e3o qualquer apresentado adiante em 3.2.1.\nO m\u00e9todo de invers\u00e3o de aresta \u00e9 baseado em uma otimiza\u00e7\u00e3o local, onde se utiliza a defini\u00e7\u00e3o de uma aresta localmente Delaunay, para decidir quando se deve executar uma invers\u00e3o ou n\u00e3o de uma aresta escolhida. O algoritmo funciona da seguinte forma: cria-se uma lista de arestas inicialmente vazia. Visita-se, ent\u00e3o, todas as arestas da triangula\u00e7\u00e3o realizando o seguinte teste para cada aresta e: considere o quadril\u00e1tero q formado pelas arestas externas da fus\u00e3o dos dois tri\u00e2ngulos adjacentes a aresta e (ver Fig. 23(a)). A aresta e \u00e9 inv\u00e1lida, caso ela n\u00e3o respeite a regra da aresta de Delaunay no que diz respeito \u00e0 triangula\u00e7\u00e3o local (ver Fig. 23(b)). Isto \u00e9 equivalente a dizer que a soma dos \u00e2ngulos internos dos v\u00e9rtices opostos a aresta e \u00e9 maior que 180\u00b0, ou que o menor \u00e2ngulo dos tri\u00e2ngulos utilizando a aresta e \u00e9 menor que os tri\u00e2ngulos utilizando a aresta inversa, ou finalmente, que a aresta e \u00e9 maior que a aresta inversa. Caso esta aresta seja inv\u00e1lida, ela \u00e9 adicionada \u00e0 lista de arestas.\nFig. 23 - Triangula\u00e7\u00e3o local do m\u00e9todo de invers\u00e3o de aresta\nAp\u00f3s percorrida toda a triangula\u00e7\u00e3o, a lista inicial informa quais arestas n\u00e3o respeitam a regra de Delaunay. Para cada entrada desta lista, opera-se da seguinte forma: verifica-se se a aresta respeita a regra de Delaunay ou n\u00e3o. Caso positivo, remove-se a aresta da triangula\u00e7\u00e3o. Caso negativo, reverte-se a aresta da mesma forma que o algoritmo de relaxa\u00e7\u00e3o de malha, e adiciona-se as quatro arestas vizinhas \u00e0 lista de poss\u00edveis arestas inv\u00e1lidas. Veja que as arestas vizinhas devem ser adicionadas \u00e0 lista de arestas possivelmente inv\u00e1lidas pois ocorreu uma mudan\u00e7a local na topologia da triangula\u00e7\u00e3o. Esta opera\u00e7\u00e3o \u00e9 efetuada repetidamente, at\u00e9 que n\u00e3o exista mais nenhuma aresta na lista, resultando em uma triangula\u00e7\u00e3o apenas com arestas de Delaunay, que nos leva a uma triangula\u00e7\u00e3o de Delaunay.\nUm aspecto importante a ser observado \u00e9 que a lista criada representa o conjunto das arestas possivelmente inv\u00e1lidas, e n\u00e3o certamente inv\u00e1lidas. Isto se deve ao fato de que algumas invers\u00f5es podem validar n\u00e3o apenas a aresta em quest\u00e3o, mas algumas arestas vizinhas tamb\u00e9m, deixando uma aresta v\u00e1lida em tal lista. A \u00fanica afirma\u00e7\u00e3o que pode ser feita \u00e9 que caso a aresta n\u00e3o esteja em tal lista, certamente ela \u00e9 uma aresta v\u00e1lida.\nO algoritmo de invers\u00e3o de aresta \u00e9 um exemplo de um algoritmo que otimiza um crit\u00e9rio global baseado em uma otimiza\u00e7\u00e3o local (s\u00e3o considerados apenas os dois tri\u00e2ngulos adjacentes \u00e0 aresta quando \u00e9 verificado se tal aresta respeita a regra de Delaunay). Conforme apresentado anteriormente, uma otimiza\u00e7\u00e3o local n\u00e3o necessariamente leva a uma otimiza\u00e7\u00e3o global. Neste caso, no entanto, isto sempre ocorre porque a triangula\u00e7\u00e3o de Delaunay em um espa\u00e7o de ordem mais elevada pode ser encarada como uma fun\u00e7\u00e3o monot\u00f4nica, que n\u00e3o apresenta m\u00ednimos locais, conforme discutido por Bern e Eppstein em [13]. O algoritmo de invers\u00e3o de aresta \u00e9 parecido com o m\u00e9todo de relaxa\u00e7\u00e3o de malha. Este, no entanto, baseia-se na checagem de par\u00e2metros morfol\u00f3gicos, enquanto que o m\u00e9todo de relaxa\u00e7\u00e3o de malha baseia-se na checagem de par\u00e2metros topol\u00f3gicos.\nA extens\u00e3o do algoritmo de invers\u00e3o de aresta para obter uma triangula\u00e7\u00e3o de Delaunay restrita (ver se\u00e7\u00e3o 2.3.4), mais especificamente, uma triangula\u00e7\u00e3o de Delaunay de um GPSR, basta nunca incluirmos as arestas da triangula\u00e7\u00e3o, que formam os segmentos do GPSR, \u00e0 lista de arestas possivelmente inv\u00e1lidas. Com isto, nunca ocorre a invers\u00e3o de tais arestas, e as mesmas s\u00e3o preservadas, resultando em uma triangula\u00e7\u00e3o de Delaunay restrita.\nAtrav\u00e9s de uma an\u00e1lise mais elaborada, pode-se mostrar que o algoritmo de invers\u00e3o de aresta utiliza da ordem de O(n ) invers\u00f5es para executar uma otimiza\u00e7\u00e3o de Delaunay. Ou\n2 seja, o tempo de execu\u00e7\u00e3o \u00e9 da ordem de O(n). Para triangula\u00e7\u00e3o de geometrias mais complexas ou de grande quantidade de pontos, este tempo, por sua vez, pode ser demasiadamente grande, e tornar a gera\u00e7\u00e3o invi\u00e1vel. Com isto, Lee e Schachter [64] criaram um algoritmo mais eficiente, denominado divide-and-conquer, que \u00e9 apresentado na pr\u00f3xima sec\u00e7\u00e3o.\nDado o sucesso do algoritmo de invers\u00e3o de aresta, diversos outros crit\u00e9rios, al\u00e9m do crit\u00e9rio da aresta de Delaunay, foram utilizados com o m\u00e9todo, como regra para a invers\u00e3o ou n\u00e3o da aresta (diagonal do quadril\u00e1tero - ver Fig. 23). Como exemplo de outros crit\u00e9rios, tem-se o grau do v\u00e9rtice (que \u00e9, na verdade, o m\u00e9todo de relaxa\u00e7\u00e3o de malha), m\u00e1ximo \u00e2ngulo interno dos tri\u00e2ngulos, comprimento total de aresta e raz\u00e3o das \u00e1reas do c\u00edrculo inscrito e do tri\u00e2ngulo. Nestes casos, o algoritmo de invers\u00e3o de aresta obt\u00e9m uma otimiza\u00e7\u00e3o local mas, no entanto, n\u00e3o pode garantir uma otimiza\u00e7\u00e3o global.\nO problema do algoritmo de invers\u00e3o de aresta para a otimiza\u00e7\u00e3o destes outros par\u00e2metros \u00e9 que o mesmo pode ficar preso em um \u00f3timo local, no qual a opera\u00e7\u00e3o de invers\u00e3o n\u00e3o otimiza a triangula\u00e7\u00e3o globalmente (um \u00f3timo local, por sua vez, pode estar bastante distante de um \u00f3timo global). Um exemplo pr\u00e1tico deste problema pode ser visto na Fig. 24, onde o crit\u00e9rio de otimiza\u00e7\u00e3o \u00e9 o comprimento total de aresta. Pode-se ver facilmente que o comprimento total das arestas da triangula\u00e7\u00e3o de (a) \u00e9 maior que de (b). A opera\u00e7\u00e3o de invers\u00e3o de aresta, por sua vez, n\u00e3o consegue sair de (a) e chegar em (b), falhando para a otimiza\u00e7\u00e3o de tal caso.\nFig. 24 - Invers\u00e3o de aresta sem melhora do crit\u00e9rio de otimiza\u00e7\u00e3o [11]\nA possibilidade do algoritmo de invers\u00e3o de aresta ficar preso em um \u00f3timo local deve-se ao fato de que a opera\u00e7\u00e3o de invers\u00e3o tem uma abrang\u00eancia espacial muito restrita, onde apenas os quatro pontos mais pr\u00f3ximo s\u00e3o afetados (os quatro pontos do quadril\u00e1tero, sendo dois deles v\u00e9rtices da aresta original, antes da invers\u00e3o, e os outros dois v\u00e9rtices da nova\naresta, ap\u00f3s a invers\u00e3o). Para a triangula\u00e7\u00e3o de Delaunay, o algoritmo de invers\u00e3o de aresta sempre obt\u00e9m uma otimiza\u00e7\u00e3o global, pois a derivada da fun\u00e7\u00e3o de otimiza\u00e7\u00e3o nunca troca de sinal.\n3.1.1.2.\tInser\u00e7\u00e3o de aresta\nO problema do m\u00e9todo de invers\u00e3o de aresta ficar preso a um \u00f3timo local, quando da otimiza\u00e7\u00e3o de mais par\u00e2metros, pode ser resolvido com o m\u00e9todo de inser\u00e7\u00e3o de aresta.\nA inser\u00e7\u00e3o de aresta consiste na seguinte opera\u00e7\u00e3o: incluir uma aresta e desejada na triangula\u00e7\u00e3o (Fig. 25(a)). Em seguida, elimina-se todas as arestas seccionadas pela aresta e, formando dois pol\u00edgonos simples de cada lado da aresta (Fig. 25(b)). Finalmente, este dois pol\u00edgonos simples devem ser triangulados, o que pode ser feito por um algoritmo que forne\u00e7a diretamente a triangula\u00e7\u00e3o conforme os crit\u00e9rios desejados, ou por uma triangula\u00e7\u00e3o\nqualquer, onde ser\u00e3o efetuadas otimiza\u00e7\u00f5es otimiza\u00e7\u00e3o global (Fig. 25(c)).\nposteriores na tentativa de se obter uma\n(a)\n(c)\nFig. 25 - Processo de inser\u00e7\u00e3o de uma aresta em uma triangula\u00e7\u00e3o\nObserve que dado uma aresta qualquer e, a invers\u00e3o da aresta e \u00e9 equivalente a inser\u00e7\u00e3o da aresta inversa a e, pois e ser\u00e1 a \u00fanica aresta seccionada pela aresta inversa (e, assim, removida), e os dois pol\u00edgonos resultantes n\u00e3o precisam ser triangulados, pois estes j\u00e1 s\u00e3o os pr\u00f3prios tri\u00e2ngulos.\nCom isso, em termos de algoritmo de otimiza\u00e7\u00e3o, podemos encarar a inser\u00e7\u00e3o de aresta como uma generaliza\u00e7\u00e3o do algoritmo de invers\u00e3o de aresta, onde \u00e9 poss\u00edvel, em um \u00fanico passo, atingir-se pontos mais distantes na fun\u00e7\u00e3o de otimiza\u00e7\u00e3o. A inser\u00e7\u00e3o de aresta, ent\u00e3o, pode permitir que se escape de um m\u00ednimo local, atrav\u00e9s de um grande salto na fun\u00e7\u00e3o de otimiza\u00e7\u00e3o. A aplica\u00e7\u00e3o da inser\u00e7\u00e3o de aresta, no entanto, n\u00e3o \u00e9 trivial, j\u00e1 que existem diversas op\u00e7\u00f5es de arestas a serem utilizadas (quaisquer dois v\u00e9rtices da triangula\u00e7\u00e3o formam uma aresta que pode ser inserida). Existem alguns m\u00e9todos dispon\u00edveis na literatura para se escolher tais arestas, sendo que estes, normalmente, utilizam-se v\u00e9rtices dos piores tri\u00e2ngulos, segundo o crit\u00e9rio que deseja-se otimizar, para montar tais arestas.\nUm fato importante a ser observado \u00e9 que nem sempre a inser\u00e7\u00e3o de aresta leva a um ponto melhor na fun\u00e7\u00e3o de otimiza\u00e7\u00e3o. Esta apenas leva \u00e0 um ponto diferente, distante em tal fun\u00e7\u00e3o. Caso a fun\u00e7\u00e3o de otimiza\u00e7\u00e3o avaliada ap\u00f3s a inser\u00e7\u00e3o da aresta seja pior que antes de tal inser\u00e7\u00e3o, rejeita-se tal aresta, voltando para a triangula\u00e7\u00e3o antiga e testando-se uma nova aresta a ser inserida, at\u00e9 que uma otimiza\u00e7\u00e3o dos crit\u00e9rios desejados ocorra.\nO algoritmo de inser\u00e7\u00e3o de aresta, como um algoritmo de otimiza\u00e7\u00e3o e uma generaliza\u00e7\u00e3o do algoritmo de invers\u00e3o de aresta, foi primeiramente apresentado por Edelsbrunner, Tan e Waupotitsch [34]. Estes, por sua vez, mostraram que a inser\u00e7\u00e3o de aresta obt\u00e9m uma triangula\u00e7\u00e3o \u00f3tima que o algoritmo de invers\u00e3o de aresta n\u00e3o \u00e9 capaz: uma triangula\u00e7\u00e3o minimizando o m\u00e1ximo \u00e2ngulo. Tal demonstra\u00e7\u00e3o \u00e9 razoavelmente extensa e envolve conceitos que n\u00e3o s\u00e3o de interesse do presente trabalho, e pode ser encontrada, juntamente com maiores informa\u00e7\u00f5es sobre este m\u00e9todo, em Bern, Edelsbrunner, Eppstein, Mitchell e Tan [17].\n3.1.1.3.\tDivide-and-conquer\nO algoritmo divide-and-conquer, proposto por Lee e Schachter [64], diferentemente do algoritmo de invers\u00e3o de aresta, \u00e9 um algoritmo de gera\u00e7\u00e3o da triangula\u00e7\u00e3o a partir da geometria fornecida, e n\u00e3o apenas um algoritmo de otimiza\u00e7\u00e3o. Este, por sua vez, baseia-se no conceito de subdividir recursivamente o dom\u00ednio e aplicar a gera\u00e7\u00e3o em cada parte, para ent\u00e3o reuni-las, obtendo assim a triangula\u00e7\u00e3o final.\nPara obtermos o algoritmo divide-and-conquer, a opera\u00e7\u00e3o fundamental a ser implementada \u00e9 a uni\u00e3o de duas triangula\u00e7\u00f5es. Esta opera\u00e7\u00e3o, no entanto, depende do tipo de\ntriangula\u00e7\u00e3o envolvida, j\u00e1 que os novos tri\u00e2ngulos que ser\u00e3o gerados na interface devem respeitar o tipo de triangula\u00e7\u00e3o em quest\u00e3o.\nDesta forma, devemos focar a aten\u00e7\u00e3o na opera\u00e7\u00e3o de uni\u00e3o de duas triangula\u00e7\u00f5es de Delaunay disjuntas em uma \u00fanica triangula\u00e7\u00e3o resultante, tamb\u00e9m de Delaunay. Obtido tal algoritmo, basta operarmos, primeiramente dividindo o dom\u00ednio em duas partes, atrav\u00e9s de uma linha vertical, de forma que cada uma das duas partes fique com n/2 pontos. Depois, executando a mesma opera\u00e7\u00e3o sucessivamente sobre cada parte, at\u00e9 que cada sub-parte tenha apenas tr\u00eas pontos. A triangula\u00e7\u00e3o destas partes \u00e9, ent\u00e3o, trivial (h\u00e1 apenas uma combina\u00e7\u00e3o de tri\u00e2ngulos, e esta \u00e9 a de Delaunay), e com isto basta unir as diversas partes at\u00e9 obter a triangula\u00e7\u00e3o completa. A Fig. 26 apresenta uma ilustra\u00e7\u00e3o com uma etapa intermedi\u00e1ria do processo de uni\u00e3o de duas triangula\u00e7\u00e3o de Delaunay disjuntas. Os tri\u00e2ngulos tracejados das bordas s\u00e3o os tri\u00e2ngulos que formam as fronteiras externas do dom\u00ednio, enquanto que os tracejados internos s\u00e3o os tri\u00e2ngulos criados em fun\u00e7\u00e3o da uni\u00e3o. Os tri\u00e2ngulos destacados s\u00e3o os tri\u00e2ngulos que est\u00e3o envolvidos na atual etapa de uni\u00e3o. O processo de uni\u00e3o de duas triangula\u00e7\u00f5es do m\u00e9todo divide-and-conquer ser\u00e1 explicado em detalhes no Cap. 4.\nFig. 26 - Etapa intermedi\u00e1ria da jun\u00e7\u00e3o de duas triangula\u00e7\u00f5es disjuntas\nEfetuando uma an\u00e1lise do tempo gasto para se unir duas triangula\u00e7\u00f5es disjuntas, chegamos a ordem de O(n), onde n \u00e9 o n\u00famero de arestas na interface entre as duas triangula\u00e7\u00f5es. Isto \u00e9 f\u00e1cil de ser observado, j\u00e1 que a uni\u00e3o das duas partes ir\u00e1 influenciar, necessariamente, apenas a primeira camada de tri\u00e2ngulos da interface das duas triangula\u00e7\u00f5es.\nPara obtermos as arestas corretas na conex\u00e3o, basta aplicarmos a regra de Delaunay para a aresta, que para este caso, consiste em encontrar os pares de pontos mais pr\u00f3ximos, cada ponto em uma das triangula\u00e7\u00f5es [97]. Como o n\u00famero de divis\u00f5es executadas no algoritmo divide-and-conquer \u00e9 da ordem de O(logn), onde n \u00e9 o n\u00famero de pontos da triangula\u00e7\u00e3o, obtemos um tempo total para gera\u00e7\u00e3o de uma triangula\u00e7\u00e3o de Delaunay com o algoritmo de divide-and-conquer da ordem de O(nlogn).\nPodemos aumentar a robustez deste algoritmo atrav\u00e9s da utiliza\u00e7\u00e3o de cortes verticais e horizontais alternados. Utilizando apenas cortes verticais, as sub-partes passam a ser cada vez mais esbeltas, contendo, muitas vezes, pontos bastante pr\u00f3ximos na dire\u00e7\u00e3o x, mas ao mesmo tempo bastante distantes na dire\u00e7\u00e3o y, resultando em uma dist\u00e2ncia euclidiana grande. Como sabemos que a triangula\u00e7\u00e3o de Delaunay cont\u00e9m as menores arestas poss\u00edveis na triangula\u00e7\u00e3o, muito provavelmente os tri\u00e2ngulos iniciais de cada sub-parte n\u00e3o ser\u00e3o os tri\u00e2ngulos finais da triangula\u00e7\u00e3o. A utiliza\u00e7\u00e3o de cortes alternados faz com que a dist\u00e2ncia euclidiana dos pontos em cada sub-parte diminua, reduzindo os erros de truncamento efetuados pelas opera\u00e7\u00f5es aritm\u00e9ticas de ponto flutuante e, com isto, aumentando a robustez do algoritmo. Al\u00e9m disto, aumenta a probabilidade dos tri\u00e2ngulos de cada sub-parte serem os tri\u00e2ngulos finais da triangula\u00e7\u00e3o. Com tal combina\u00e7\u00e3o, uma triangula\u00e7\u00e3o com mais de um milh\u00e3o de pontos pode ser facilmente computada em menos de um minuto em uma esta\u00e7\u00e3o de trabalho de m\u00e9dio porte (SUN SparcStation Ultra 60 300Mhz). A utiliza\u00e7\u00e3o de cortes alternados \u00e9 uma modifica\u00e7\u00e3o do m\u00e9todo divide and conquer, implementada neste trabalho.\nA extens\u00e3o do m\u00e9todo divide-and-conquer para dom\u00ednios do tipo GPSR \u00e9 bastante simples. Para isto, basta considerarmos dois aspectos: primeiramente, os segmentos de retas definidos no dom\u00ednio fornecido devem estar sempre presentes em qualquer triangula\u00e7\u00e3o das sub-partes; ao mesmo tempo, precisamos considerar a regra da visibilidade (ver se\u00e7\u00e3o 2.3.4) no momento de calcularmos os pares de pontos mais pr\u00f3ximos, obtendo as arestas de Delaunay respons\u00e1veis pela uni\u00e3o das duas triangula\u00e7\u00f5es.\n3.1.2.\tM\u00e9todos Incrementais\nO grupo dos algoritmos incrementais pode ser dividido em dois sub-grupos: baseados e n\u00e3o-baseados em invers\u00e3o de aresta. Os algoritmos n\u00e3o-baseados em invers\u00e3o de aresta t\u00eam como aspecto positivo, em rela\u00e7\u00e3o aos outros, a possibilidade de extens\u00e3o para dimens\u00f5es\narbitr\u00e1rias. O primeiro m\u00e9todo n\u00e3o-baseado em invers\u00e3o de aresta, foi introduzido por Bowyer [18] e Watson [111], enquanto que o baseado em invers\u00e3o de aresta foi introduzido por Lawson [69]. Nas se\u00e7\u00f5es seguintes, tais algoritmos ser\u00e3o apresentados com maiores detalhes.\n3.1.2.1.\tAlgoritmo n\u00e3o-baseado em invers\u00e3o de aresta\nO algoritmo de Bowyer [18] e Watson [111] \u00e9 extremamente simples. Quando um novo v\u00e9rtice \u00e9 adicionado (Fig. 27(a)), os tri\u00e2ngulos nos quais seu circunc\u00edrculo cont\u00e9m tal v\u00e9rtice, perdem a propriedade de Delaunay, e com isto, devem ser corrigidos (Fig. 27(b)). Esta corre\u00e7\u00e3o consiste em eliminar tais tri\u00e2ngulos e conectar o novo v\u00e9rtice com os v\u00e9rtices do pol\u00edgono remanescente atrav\u00e9s de novas arestas (Fig. 27(c)). Este pol\u00edgono, formado pela uni\u00e3o de todos os pol\u00edgonos removidos, \u00e9 denominado de pol\u00edgono de inser\u00e7\u00e3o.\n(a)\t(b)\t(c)\nFig. 27 - Etapas do algoritmo de Bowyer/Watson\nNo entanto, diversos detalhes devem ser observados: depois de criada a lista, n\u00e3o podemos eliminar os tri\u00e2ngulos atrav\u00e9s da elimina\u00e7\u00e3o de suas tr\u00eas arestas, pois estas arestas tamb\u00e9m s\u00e3o parte de tri\u00e2ngulos vizinhos, e estar\u00edamos, ent\u00e3o, eliminando tais tri\u00e2ngulos tamb\u00e9m. A elimina\u00e7\u00e3o dos tri\u00e2ngulos, na verdade, consiste em um processo no qual se elabora uma lista dos tri\u00e2ngulos, cujos circunc\u00edrculos cont\u00eam tal v\u00e9rtice, e depois eliminam-se todas as arestas comuns de dois tri\u00e2ngulos que estejam nesta lista. Com isto, a elimina\u00e7\u00e3o destas arestas transforma os diversos tri\u00e2ngulos no denominado pol\u00edgono de inser\u00e7\u00e3o.\nUma primeira abordagem, natural, mas extremamente demorada, para a montagem da lista de tri\u00e2ngulos a serem removidos, \u00e9 visitar todos os tri\u00e2ngulos da triangula\u00e7\u00e3o, checando se o novo v\u00e9rtice \u00e9 contido ou n\u00e3o pelo seu circunc\u00edrculo. Uma outra abordagem, baseada em uma busca topol\u00f3gica recursiva atrav\u00e9s da triangula\u00e7\u00e3o, e que reduz o processo de ordem O(n) para ordem O(1), \u00e9 a montagem desta lista de forma recursiva, iniciando-se pelo tri\u00e2ngulo que cont\u00e9m o novo v\u00e9rtice. O tri\u00e2ngulo que cont\u00e9m o novo v\u00e9rtice, por sua vez,\nnecessariamente faz parte da lista, pois seu circunc\u00edrculo cont\u00e9m tal v\u00e9rtice. Encontrado tal tri\u00e2ngulo, este \u00e9 inclu\u00eddo na lista (\u00e9 o primeiro), e seus tr\u00eas vizinhos s\u00e3o tamb\u00e9m testados. Caso um dos tr\u00eas vizinhos testados seja inclu\u00eddo na lista, os outros dois vizinhos (apenas dois, e n\u00e3o tr\u00eas, pois o terceiro vizinho necessariamente j\u00e1 foi inserido na lista). Isto cria um processo recursivo em \u00e1rvore, onde, para cada tri\u00e2ngulo inserido na lista, testam-se outros dois vizinhos. Quando nenhum dos vizinhos testados \u00e9 inserido, tal ramo da \u00e1rvore encerra sua recursividade.\nA abordagem anterior transforma o processo de car\u00e1ter global em local, onde o tempo de computa\u00e7\u00e3o para se inserir um novo v\u00e9rtice na triangula\u00e7\u00e3o independe do n\u00famero de v\u00e9rtices da triangula\u00e7\u00e3o, a n\u00e3o ser pelo processo de localiza\u00e7\u00e3o do tri\u00e2ngulo que cont\u00e9m o novo v\u00e9rtice. Este, por sinal, \u00e9 o gargalo que torna os algoritmos incrementais pouco atrativos para aplica\u00e7\u00f5es de gera\u00e7\u00e3o completa de malha.\nO atrativo principal do algoritmo de Bowyer/Watson, por sua vez, \u00e9 a extens\u00e3o direta para n-dimens\u00f5es. Todos os processos anteriormente descritos para duas dimens\u00f5es podem ser facilmente reescritos para n-dimens\u00f5es: localiza\u00e7\u00e3o de tetraedro, remo\u00e7\u00e3o de tetraedro, obten\u00e7\u00e3o do poliedro de inser\u00e7\u00e3o, conex\u00e3o do novo v\u00e9rtice com os v\u00e9rtices e arestas do poliedro de inser\u00e7\u00e3o atrav\u00e9s de arestas, faces e etc. Onde anteriormente considerava-se um c\u00edrculo, passa-se \u00e0 considerar seus semelhantes em maiores dimens\u00f5es, como a esfera em 3D, ou uma hiper-esfera em 4D. A seq\u00fc\u00eancia de opera\u00e7\u00f5es definidas pelo algoritmo n\u00e3o muda, independentemente da dimens\u00e3o de gera\u00e7\u00e3o da malha de Delaunay.\n(a)\t(b)\nFig. 28 - Sensibilidade do algoritmo de Bowyer/Watson\nPor outro lado, o algoritmo de Bowyer/Watson, em sua forma primitiva, utilizando aritm\u00e9tica de ponto flutuante, \u00e9 bastante sens\u00edvel a erros de arredondamento. A obten\u00e7\u00e3o de triangula\u00e7\u00f5es com conjunto de pontos cocirculares (Fig. 28(a)) pode levar a malhas\ninconsistentes, impossibilitando a continuidade do processo (Fig. 28(b)). Este problema, por sua vez, pode ser bastante reduzido em duas dimens\u00f5es, atrav\u00e9s da utiliza\u00e7\u00e3o do algoritmo de Lawson [69], apresentado em seguida.\n3.1.2.2.\tAlgoritmo baseado em invers\u00e3o de aresta\nO m\u00e9todo de Lawson [69] \u00e9 bastante parecido com o m\u00e9todo de Bowyer/Watson, no entanto, difere deste pelo fato de que nenhuma lista recursiva de tri\u00e2ngulos de Delaunay inv\u00e1lidos \u00e9 montada. Um processo recursivo, por sua vez, baseado em invers\u00e3o de aresta, \u00e9 executado de forma a serem mantidas as propriedades de Delaunay na nova triangula\u00e7\u00e3o.\nO processo inicia-se com a localiza\u00e7\u00e3o do tri\u00e2ngulo t (em destaque na Fig. 29(a)) que cont\u00e9m o novo v\u00e9rtice v. Ap\u00f3s isto, v \u00e9 adicionado \u00e0 triangula\u00e7\u00e3o, juntamente com outras tr\u00eas arestas que ligam v com os tr\u00eas vertices do tri\u00e2ngulo t (Fig. 29(b)). Com isto, a triangula\u00e7\u00e3o remanescente n\u00e3o garante a manuten\u00e7\u00e3o das propriedades de Delaunay. Para nos assegurarmos disto, utiliza-se o m\u00e9todo de Lawson de invers\u00e3o de aresta.\nO processo de garantia da propriedade de Delaunay \u00e9 iniciado atrav\u00e9s da verifica\u00e7\u00e3o das tr\u00eas arestas do tri\u00e2ngulo que originalmente continha o novo v\u00e9rtice. Para cada aresta testada e invertida, outras duas arestas devem ser tamb\u00e9m testadas, criando uma \u00e1rvore recursiva bastante parecida com a \u00e1rvore de tri\u00e2ngulos inv\u00e1lidos do m\u00e9todo de Bowyer/Watson (Fig. 29(c) e Fig. 29(d)). Quando mais nenhuma aresta testada \u00e9 revertida, a propriedade de Delaunay \u00e9 assegurada para a nova triangula\u00e7\u00e3o (Fig. 29(e)).\n(a)\t(b)\t(c)\n(d)\t(e)\nFig. 29 - Etapas do algoritmo de Lawson [69]\nDesconsiderando-se os erros de arredondamento, o m\u00e9todo de Lawson obt\u00e9m exatamente o mesmo resultado que o m\u00e9todo de Bowyer/Watson, assim como o esperado de qualquer outro m\u00e9todo de inser\u00e7\u00e3o de v\u00e9rtice em uma triangula\u00e7\u00e3o de Delaunay. No entanto, devido \u00e0 manuten\u00e7\u00e3o da consist\u00eancia topol\u00f3gica da triangula\u00e7\u00e3o ao longo de todo o processo de inser\u00e7\u00e3o de v\u00e9rtice de Lawson, tal m\u00e9todo \u00e9 bem mais robusto, quando utilizando aritm\u00e9tica de ponto flutuante, \u00e0 gera\u00e7\u00e3o de triangula\u00e7\u00f5es de Delaunay degeneradas ou com v\u00e9rtices cocirculares. Outra caracter\u00edstica interessante, que deve ser levada em considera\u00e7\u00e3o, \u00e9 que o algoritmo de Lawson \u00e9 razoavelmente mais f\u00e1cil de ser implementado que o algoritmo de Bowyer/Watson.\nUm aspecto negativo, j\u00e1 mencionado anteriormente, do m\u00e9todo de Lawson \u00e9 a sua n\u00e3o extensibilidade direta para n-dimens\u00f5es. Isto se deve ao fato de que o algoritmo de invers\u00e3o de aresta em dimens\u00f5es maiores que dois \u00e9 bastante complexo.\n3.1.3.\tO Problema da adi\u00e7\u00e3o de v\u00e9rtices fora do envelope convexo\nNos dois algoritmos analisados anteriormente, est\u00e1 impl\u00edcita a hip\u00f3tese de que para o v\u00e9rtice que est\u00e1 sendo inserido sempre existe um tri\u00e2ngulo, pertencente \u00e0 triangula\u00e7\u00e3o, que cont\u00e9m tal v\u00e9rtice. No entanto, quando se utilizam algoritmos incrementais para a gera\u00e7\u00e3o completa de malha, isto pode n\u00e3o ocorrer, ou seja, o v\u00e9rtice adicionado pode ser localizar fora do envelope convexo da atual triangula\u00e7\u00e3o.\nUma sa\u00edda para tal problema \u00e9 a cria\u00e7\u00e3o de arestas que conectem tal v\u00e9rtice a todos os v\u00e9rtices vis\u00edveis do envelope convexo, com a posterior verifica\u00e7\u00e3o da propriedade de Delaunay atrav\u00e9s do procedimento de invers\u00e3o de aresta. Esta solu\u00e7\u00e3o, apesar de ser a solu\u00e7\u00e3o mais correta, \u00e9 a mais dif\u00edcil de ser implementada. Uma outra solu\u00e7\u00e3o para tal problema, \u00e9 a utiliza\u00e7\u00e3o de um tri\u00e2ngulo (em 2D) ou tetraedro (em 3D) como uma fronteira envolvente para todos os v\u00e9rtices da triangula\u00e7\u00e3o (Fig. 30). Com isso, o processo de triangula\u00e7\u00e3o inicia com tal fronteira e, ap\u00f3s a adi\u00e7\u00e3o de todos os v\u00e9rtices, a mesma \u00e9 removida. Com isto, n\u00e3o \u00e9 necess\u00e1rio manipular casos espec\u00edficos.\nEsta abordagem, no entanto, n\u00e3o \u00e9 interessante, e costuma n\u00e3o ser recomendada, devido \u00e0 necessidade de escolher uma fronteira que seja grande o suficiente para englobar todos os pontos, e que n\u00e3o perca nenhum tri\u00e2ngulo ao longo do processo de adi\u00e7\u00e3o de v\u00e9rtices. Outro aspecto negativo na utiliza\u00e7\u00e3o desta fronteira s\u00e3o os problemas de arredondamento e de\naritm\u00e9tica de ponto flutuante que surgem na manipula\u00e7\u00e3o com os n\u00fameros de magnitude elevada de tal fronteira. Estes erros podem se propagar para dentro da triangula\u00e7\u00e3o e resultar em comportamentos catastr\u00f3ficos.\nFig. 30 - Adi\u00e7\u00e3o de v\u00e9rtices fora do envelope convexo\n3.1.4.\tLocaliza\u00e7\u00e3o de pontos\nNos m\u00e9todos incrementais apresentados anteriormente, a opera\u00e7\u00e3o de invers\u00e3o de aresta n\u00e3o \u00e9 a \u00fanica a consumir recursos computacionais. Na verdade, a opera\u00e7\u00e3o de encontrar-se o tri\u00e2ngulo que cont\u00e9m um determinado ponto (tamb\u00e9m denominado de localiza\u00e7\u00e3o de pontos) dentro de uma triangula\u00e7\u00e3o \u00e9 a maior respons\u00e1vel pelo tempo de CPU. Felizmente, muitos dos m\u00e9todos de gera\u00e7\u00e3o de triangula\u00e7\u00f5es de Delaunay inserem pontos em locais onde j\u00e1 ocorreram manipula\u00e7\u00f5es geom\u00e9tricas ou que foram previamente identificados como precisando de refino, tornando a localiza\u00e7\u00e3o do ponto praticamente conhecida. Mesmo assim, em um m\u00e9todo de triangula\u00e7\u00e3o de Delaunay de prop\u00f3sito geral, a localiza\u00e7\u00e3o de pontos pode representar uma parcela consider\u00e1vel dos recursos computacionais consumidos.\nUm m\u00e9todo de localiza\u00e7\u00e3o de pontos baseado na manuten\u00e7\u00e3o de um grafo de conflito \u00e9 o de Clarkson e Shor [26]que, quando aplicado para duas dimens\u00f5es, reduz o tempo de localiza\u00e7\u00e3o de um ponto dentro de uma triangula\u00e7\u00e3o de ordem O(n) para ordem O(logn).\nApesar de tal ordem s\u00f3 ser atingida se todos os pontos envolvidos no processo forem conhecidos desde o in\u00edcio, Guibas, Knuth e Sharir [52] apresentam uma adapta\u00e7\u00e3o (com um desempenho razo\u00e1vel) de tal m\u00e9todo para aplica\u00e7\u00f5es, onde os pontos s\u00e3o definidos apenas ao longo do processo.\nPara uma triangula\u00e7\u00e3o com n v\u00e9rtices, os algoritmos incrementais, onde a inser\u00e7\u00e3o de um ponto sem considerar o procedimento de localiza\u00e7\u00e3o do mesmo \u00e9 executada em um tempo de ordem O(1), que \u00e9 o caso dos algoritmos apresentados anteriormente, o presente m\u00e9todo de localiza\u00e7\u00e3o de ponto permite que tais algoritmos sejam executados em tempo de ordem O(nlogn). Sem tal m\u00e9todo de localiza\u00e7\u00e3o de ponto, tais algoritmos consomem um tempo da\n2\nordem de O(n ).\nPara apresentar o m\u00e9todo, vamos, primeiramente, definir grafo de conflito. Consideremos um est\u00e1gio intermedi\u00e1rio de gera\u00e7\u00e3o de uma triangula\u00e7\u00e3o de Delaunay utilizando um algoritmo incremental, onde o n\u00famero total de v\u00e9rtices da triangula\u00e7\u00e3o \u00e9 n e o n\u00famero atual de v\u00e9rtices inseridos \u00e9 p. O n\u00famero de v\u00e9rtices n\u00e3o inseridos, por sua vez, \u00e9 n-p. Seja t um tri\u00e2ngulo da atual triangula\u00e7\u00e3o Dp, e w um dos n-p v\u00e9rtices ainda n\u00e3o inseridos. Caso w esteja dentro do circunc\u00edrculo de t, ent\u00e3o t e w est\u00e3o em conflito. Devido a isto, \u00e9 claro que t n\u00e3o pode ser um tri\u00e2ngulo da triangula\u00e7\u00e3o de Delaunay completa Dn.\nUm grafo de conflito, ent\u00e3o, \u00e9 um grafo bipartido, onde cada n\u00f3 representa um tri\u00e2ngulo ou v\u00e9rtice n\u00e3o inserido na triangula\u00e7\u00e3o, e cada aresta representa um conflito entre um v\u00e9rtice e um tri\u00e2ngulo (Fig. 31). Cada v\u00e9rtice inserido altera o grafo de conflito. Quando um v\u00e9rtice \u00e9 inserido, os tri\u00e2ngulos criados, referentes a tal v\u00e9rtice, podem conflitar com v\u00e9rtices n\u00e3o inseridos, adicionando novos conflitos ao grafo. Por outro lado, a inser\u00e7\u00e3o de um novo v\u00e9rtice na triangula\u00e7\u00e3o causa a remo\u00e7\u00e3o dos conflitos associados a tal v\u00e9rtice.\nFig. 31 - Esquemas do grafo de conflito [26]\nA implementa\u00e7\u00e3o da manipula\u00e7\u00e3o com a estrutura de dados do grafo de conflito \u00e9 algo n\u00e3o trivial, al\u00e9m de que a quantidade de informa\u00e7\u00f5es armazenadas pode se tornar bastante grande, dependendo do n\u00famero de v\u00e9rtices e da forma dos elementos. O n\u00famero esperado de conflitos de um ponto com tri\u00e2ngulos \u00e9 quatro, mesmo assim, para arranjos n\u00e3o aleat\u00f3rios de pontos, este n\u00famero pode crescer consideravelmente.\nDevido a este fato, Shewchuk [99] prop\u00f4s uma variante do grafo de conflito: o grafo de conflito simplificado. Neste grafo simplificado \u00e9 mantido apenas um conflito por v\u00e9rtice n\u00e3o inserido na triangula\u00e7\u00e3o. Os demais conflitos, apesar de ainda serem considerados conflitos, pois tal conceito n\u00e3o foi modificado, s\u00e3o omitidos. Por sua vez, o conflito de um v\u00e9rtice, mantido no grafo, \u00e9 aquele que relaciona tal v\u00e9rtice com o tri\u00e2ngulo, da atual triangula\u00e7\u00e3o, que o cont\u00e9m. Este grafo, por sua vez, poderia tamb\u00e9m ser chamado de grafo de conten\u00e7\u00e3o. A Fig. 32 apresenta uma ilustra\u00e7\u00e3o do grafo de conflito simplificado.\nFig. 32 - Esquema do grafo de conflito simplificado [99]\nComo exerc\u00edcio, consideremos um exemplo simples hipot\u00e9tico, onde iniciamos a triangula\u00e7\u00e3o com um \u00fanico tri\u00e2ngulo que envolve todos os v\u00e9rtices da triangula\u00e7\u00e3o. No inicio do processo, todos os v\u00e9rtices possuem conflitos indicando tal tri\u00e2ngulo. Conforme os v\u00e9rtices v\u00e3o sendo adicionados, novos tri\u00e2ngulos v\u00e3o sendo criados, e os conflitos v\u00e3o sendo ajustados de forma a manter o grafo correto. Se um v\u00e9rtice recai sobre uma aresta da triangula\u00e7\u00e3o, um dos dois tri\u00e2ngulos \u00e9 escolhido arbitrariamente. Para cada v\u00e9rtice n\u00e3o inserido, a estrutura de dados mant\u00e9m um ponteiro para o tri\u00e2ngulo que cont\u00e9m tal v\u00e9rtice. Da mesma forma, para cada tri\u00e2ngulo da triangula\u00e7\u00e3o, a estrutura de dados mant\u00e9m uma lista indicando os v\u00e9rtices n\u00e3o inseridos que s\u00e3o contidos por tal tri\u00e2ngulo. Com isto, a localiza\u00e7\u00e3o do tri\u00e2ngulo que cont\u00e9m qualquer v\u00e9rtice n\u00e3o inserido na triangula\u00e7\u00e3o \u00e9 uma opera\u00e7\u00e3o direta, consumindo um tempo de computa\u00e7\u00e3o da ordem de O(1).\nO resultado acima, no entanto, conflita com informa\u00e7\u00f5es fornecidas no come\u00e7o deste t\u00f3pico, onde foi afirmado que o grafo de conflito reduz o tempo de computa\u00e7\u00e3o para ordem\nde O(logn). Isto porque na an\u00e1lise acima, n\u00e3o foi considerado o tempo de computa\u00e7\u00e3o para se efetuar a atualiza\u00e7\u00e3o da lista de conflito. Quando um v\u00e9rtice v \u00e9 inserido na triangula\u00e7\u00e3o, os conflitos dos pontos associados ao tri\u00e2ngulo t, que cont\u00e9m v, tem que ser redistribu\u00eddos entre os quatro novos tri\u00e2ngulos formados pela subdivis\u00e3o de t. Ao mesmo tempo, quando uma opera\u00e7\u00e3o de invers\u00e3o de aresta \u00e9 executada, o grafo de conflito deve ser atualizado. Ou seja, para cada opera\u00e7\u00e3o de altera\u00e7\u00e3o da triangula\u00e7\u00e3o, uma atualiza\u00e7\u00e3o no grafo de conflito, refletindo tal modifica\u00e7\u00e3o, deve ser efetuada, de forma a manter o grafo sempre correto. Com isto, o custo fundamental na utiliza\u00e7\u00e3o de grafo de conflito, para localiza\u00e7\u00e3o de v\u00e9rtices, est\u00e1 na manuten\u00e7\u00e3o deste grafo. A demonstra\u00e7\u00e3o de que o custo de manuten\u00e7\u00e3o desta lista leva \u00e0 um tempo m\u00e9dio de CPU, por ponto, da ordem de O(logn), \u00e9 bastante complicada, e baseia-se em diversos teoremas e em an\u00e1lise reversa. An\u00e1lise reversa \u00e9 uma ferramenta extremamente poderosa para se efetuar estimativas dos recursos computacionais consumidos por algoritmos, mas que n\u00e3o ser\u00e1 abordado no presente texto.\nConforme mencionado anteriormente, para m\u00e9todos de triangula\u00e7\u00e3o incrementais, onde n\u00e3o se conhece todos os v\u00e9rtices de antem\u00e3o, Guibas, Knuth e Sharir [51], sugeriram uma abordagem bastante interessante denominada history dag (Direct Acyclic Graph). Esta abordagem, utilizada em conjunto com o grafo de conflito, consiste no armazenamento de todas as opera\u00e7\u00f5es de modifica\u00e7\u00e3o geom\u00e9trica efetuadas sobre a triangula\u00e7\u00e3o. Com isto, dado um v\u00e9rtice anteriormente n\u00e3o conhecido, \u00e9 poss\u00edvel rastrear-se, desde o princ\u00edpio do processo de gera\u00e7\u00e3o, o tri\u00e2ngulo que cont\u00e9m tal v\u00e9rtice. A opera\u00e7\u00e3o de rastreamento, por sua vez, confirmando a an\u00e1lise do tempo de CPU gasto pelo grafo de conflito, consome um tempo de CPU da ordem de O(logn). O uso da history dag, no entanto, pode tornar-se invi\u00e1vel para diagramas com um n\u00famero elevado de v\u00e9rtices, devido \u00e0 mem\u00f3ria utilizada pelo mesmo para o armazenamento do hist\u00f3rico completo das opera\u00e7\u00f5es geom\u00e9tricas executadas.\n3.2.Outros m\u00e9todos de triangula\u00e7\u00e3o \u00f3tima\nEsta sec\u00e7\u00e3o apresenta, de forma tamb\u00e9m breve, diversos m\u00e9todos de gera\u00e7\u00e3o de malhas bidimensionais n\u00e3o-estruturadas de tri\u00e2ngulos. O texto n\u00e3o pretende ser uma descri\u00e7\u00e3o detalhada dos m\u00e9todos, mas apenas apresentar os mesmos como uma revis\u00e3o bibliogr\u00e1fica relacionada a triangula\u00e7\u00e3o de Delaunay, foco principal deste trabalho.\n3.2.1.\tTriangula\u00e7\u00e3o qualquer\nDe todos os m\u00e9todos apresentados nesta se\u00e7\u00e3o, este \u00e9 o \u00fanico que n\u00e3o considera otimiza\u00e7\u00e3o. Para este desenvolvimento, primeiramente ser\u00e1 definido o conceito de diagonal: uma diagonal de um pol\u00edgono simples \u00e9 um segmento de reta que liga quaisquer dois v\u00e9rtices deste pol\u00edgono, que se encontra no interior deste, e que, necessariamente, intersecciona com o\nmesmo apenas nos pontos extremos (ver Fig. 33).\nDe acordo com Bern e Eppstein [11], todo pol\u00edgono com mais de tr\u00eas lados possui ao menos uma diagonal. Agora, considerando-se um pol\u00edgono qualquer, como \u00e9 sempre poss\u00edvel obter-se uma diagonal para o mesmo, esta divide tal pol\u00edgono em outros dois pol\u00edgonos quaisquer. Aplicando sucessivamente este processo, at\u00e9 que cada pol\u00edgono resultante tenha apenas 3 lados, a triangula\u00e7\u00e3o \u00e9 obtida, provando que sempre \u00e9 poss\u00edvel obter a triangula\u00e7\u00e3o de um pol\u00edgono simples.\nComo o tempo de computa\u00e7\u00e3o para se encontrar a diagonal de um pol\u00edgono \u00e9 de ordem O(n), o algoritmo descrito anteriormente triangula um pol\u00edgono qualquer com um tempo da\n2\nordem de O(n ). Analisando-se outros tipos de dom\u00ednios, veremos que o algoritmo anterior tamb\u00e9m vale para um conjunto qualquer de pontos, para pol\u00edgonos n\u00e3o-simples (multiplamente-conexos e finalmente para GPSR's.\n3.2.2.\tDecomposi\u00e7\u00e3o de pol\u00edgono\nO m\u00e9todo de decomposi\u00e7\u00e3o de pol\u00edgono \u00e9 bastante parecido com o de triangula\u00e7\u00e3o qualquer, sendo considerado uma extens\u00e3o do mesmo. A diferen\u00e7a principal est\u00e1 na utiliza\u00e7\u00e3o de pontos de Steiner, objetivando a otimiza\u00e7\u00e3o de crit\u00e9rios de qualidade escolhidos pelo\nusu\u00e1rio. Outra diferen\u00e7a, tamb\u00e9m, \u00e9 quanto \u00e0 escolha das linhas que dividem inicialmente o dom\u00ednio (normalmente um GPSR), que procuram levar em considera\u00e7\u00e3o caracter\u00edsticas intr\u00ednsecas do dom\u00ednio e n\u00e3o apenas linhas quaisquer (como na triangula\u00e7\u00e3o qualquer).\nO algoritmo de decomposi\u00e7\u00e3o de pol\u00edgono foi inicialmente proposto por Joe e Simpson [59]. Primeiramente, o dom\u00ednio (Fig. 34(a)) \u00e9 dividido em pol\u00edgonos simplesmente conexos, tamb\u00e9m denominados de pol\u00edgonos principais, definindo regi\u00f5es no dom\u00ednio (Fig. 34(b)). Em seguida, s\u00e3o efetuadas duas opera\u00e7\u00f5es buscando a otimiza\u00e7\u00e3o de malha (Fig. 34(c)): a primeira consiste na divis\u00e3o destes pol\u00edgonos principais em outros pol\u00edgonos, utilizando como crit\u00e9rio a similaridade do tamanho de aresta dentro de cada novo pol\u00edgono. A segunda consiste na sec\u00e7\u00e3o deste pol\u00edgono atrav\u00e9s de segmentos de retas, buscando eliminar pequenos \u00e2ngulos. Finalmente, os pol\u00edgonos principais s\u00e3o discretizados utilizando-se tri\u00e2ngulos de tamanhos aproximadamente iguais (Fig. 34(d)), sempre lembrando que os pontos de Steiner devem obedecer os segmentos de reta definidos na etapa de otimiza\u00e7\u00e3o.\n(c)\t(d)\nFig. 34 - Triangula\u00e7\u00e3o gerada por decomposi\u00e7\u00e3o de pol\u00edgono [11]\nAs opera\u00e7\u00f5es de otimiza\u00e7\u00e3o de malha apenas definem restri\u00e7\u00f5es geom\u00e9tricas para a adi\u00e7\u00e3o dos pontos de Steiner e os tamanhos caracter\u00edsticos dos tri\u00e2ngulos para cada regi\u00e3o a ser discretizada. Neste m\u00e9todo, \u00e9 disponibilizado dois par\u00e2metros para o controle da malha: um n\u00famero de tri\u00e2ngulos para a discretiza\u00e7\u00e3o (normalmente excedidos por uma pequena\nquantidade) e um coeficiente de suaviza\u00e7\u00e3o, que controla quantas vezes, maior ou menor, os tri\u00e2ngulos podem ser, relativo a seus vizinhos.\n3.2.3.\tAvan\u00e7o de frentes\nDos diversos m\u00e9todos apresentados at\u00e9 agora, um bastante utilizado em problemas de escoamento de fluidos [55] \u00e9 o de avan\u00e7o de frentes [45][66][69][80]. Neste m\u00e9todo, a primeira etapa a ser executada \u00e9 a divis\u00e3o do dom\u00ednio em partes simplesmente conexas. No avan\u00e7o de frentes, no entanto, diferentemente de outros m\u00e9todos, esta divis\u00e3o \u00e9 feita pelo pr\u00f3prio usu\u00e1rio, baseada no problema f\u00edsico, de forma que as fronteiras dos subdom\u00ednios fiquem mais alinhadas o poss\u00edvel com o escoamento e/ou que estas coincidam com as fronteiras s\u00f3lidas.\nDefinidos os subdom\u00ednios, camadas de pontos de Steiner s\u00e3o adicionadas, uma a uma, a partir das fronteiras em dire\u00e7\u00e3o ao centro. A triangula\u00e7\u00e3o destes pontos pode ser feita simultaneamente com a adi\u00e7\u00e3o destes ou em uma etapa posterior, de forma a obtermos o particionamento do dom\u00ednio. Quando a triangula\u00e7\u00e3o \u00e9 efetuada em etapas posteriores, qualquer m\u00e9todo de gera\u00e7\u00e3o de malha pode ser utilizado, como por exemplo, a triangula\u00e7\u00e3o de Delaunay. Com esta abordagem, o m\u00e9todo de avan\u00e7o de frente gera elementos alinhados com o escoamento, facilitando a capta\u00e7\u00e3o de diversos fen\u00f4menos e, usualmente, levando a melhores solu\u00e7\u00f5es num\u00e9ricas. Outros problemas f\u00edsicos podem tamb\u00e9m influenciar a gera\u00e7\u00e3o de malhas pelo m\u00e9todo de avan\u00e7o de frentes.\nFig. 35 - Encontro de frentes de avan\u00e7o\nEste m\u00e9todo, apesar de gerar elementos de excelente qualidade pr\u00f3ximo as fronteiras, enfrenta s\u00e9rios problemas quando no encontro destas. Caso duas frentes com grande diferen\u00e7a de tamanhos de elementos se encontrem, muito dificilmente se conseguir\u00e1 gerar elementos de qualidade aceit\u00e1vel em tal regi\u00e3o (ver Fig. 35) Por isso, este m\u00e9todo \u00e9 muito sens\u00edvel \u00e0 escolha das frentes e de seus respectivos tamanhos de elementos. Diversos autores\nconsideram este problema suficientemente limitante para que seja poss\u00edvel desenvolver algoritmos de avan\u00e7o de frente eficientes para gera\u00e7\u00e3o de malhas para problemas pr\u00e1ticos.\nA extens\u00e3o do m\u00e9todo de avan\u00e7o de frente para dom\u00ednios tridimensionais \u00e9 considerada uma tarefa complexa devido ao fato de que a simples gera\u00e7\u00e3o da malha superficial j\u00e1 representa um desafio razo\u00e1vel.\nVariantes do m\u00e9todo de avan\u00e7o de frentes, que n\u00e3o precisam necessariamente conformar-se \u00e0s fronteiras do dom\u00ednio, foram sugeridas por diversos autores. Uma delas, por exemplo, \u00e9 atribu\u00edda a Lo [70], que desenvolveu um gerador de malhas triangulares que posiciona pontos ao longo das linhas de fluxo do escoamento. Uma solu\u00e7\u00e3o inicial do escoamento \u00e9 necess\u00e1ria para podermos fazer uma pr\u00e9-localiza\u00e7\u00e3o dos pontos. Devido a este fato, este m\u00e9todo tem um perfil te\u00f3rico voltado mais para a adaptatividade de malhas do que necessariamente para um esquema de gera\u00e7\u00e3o.\nOutra variante, sugerida por Mavriplis [80], para a gera\u00e7\u00e3o de malhas triangulares para problemas de escoamento de fluidos com alto n\u00famero de Reynolds, tamb\u00e9m baseia-se no conceito de localizar pontos sobre linhas de fluxo. Este m\u00e9todo identifica linhas de maior cisalhamento do escoamento, e insere pontos, primeiramente, nestes locais. Posteriormente, malhas estruturadas s\u00e3o utilizadas para gerar os elementos nas regi\u00f5es entre estas linhas, sendo que uma triangula\u00e7\u00e3o de Delaunay \u00e9 utilizada para gerar a malha no encaixe entre as diversas malhas estruturadas, obtendo localmente elementos longos e finos, direcionados com o escoamento.\nAl\u00e9m do uso de malhas estruturadas, para a localiza\u00e7\u00e3o de pontos de Steiner nas regi\u00f5es de preenchimento, em conjunto com o avan\u00e7o de frente, Mavriplis tamb\u00e9m utilizou a triangula\u00e7\u00e3o de Delaunay. A triangula\u00e7\u00e3o de Delaunay \u00e9 uma estrutura interessante, pois a mesma fornece, de forma r\u00e1pida e precisa, a dist\u00e2ncia existente entre as diversas poss\u00edveis frentes. De posse destas informa\u00e7\u00f5es \u00e9 poss\u00edvel interromper o processo de avan\u00e7o das frentes antes destas se encontrarem, e combinar um m\u00e9todo alternativo para o preenchimento do espa\u00e7o resultante. Um exemplo de uma malha gerada com o m\u00e9todo de avan\u00e7o de frente \u00e9 apresentado na Fig. 36, obtida com o gerador de Barth e Jesperson [11]. O problema de colis\u00e3o das frentes, em geometrias deste tipo, \u00e9 minimizado devido \u00e0 gera\u00e7\u00e3o da malha ser feita para um problema de escoamento externo.\nFig. 36 - Malha gerada por frente de avan\u00e7o [11]\n3.2.4.\tQuadtree\nDentre os diversos m\u00e9todos de triangula\u00e7\u00e3o, o primeiro m\u00e9todo pr\u00e1tico desenvolvido para a triangula\u00e7\u00e3o de dom\u00ednios bidimensionais, foi o m\u00e9todo quadtree, apresentado por Bern, Eppstein e Gilbert [14].\nUm quadtree [41][93][95] consiste em uma parti\u00e7\u00e3o recursiva de um dom\u00ednio bidimensional em quadril\u00e1teros alinhados com os eixos ortogonais principais. O primeiro quadril\u00e1tero, tamb\u00e9m chamado de quadril\u00e1tero raiz, cont\u00e9m o dom\u00ednio por completo. Um quadril\u00e1tero pode ser subdividido em quatro quadril\u00e1teros filhos, seccionando-se o mesmo atrav\u00e9s dos eixos principais alinhados em seu centro. A cole\u00e7\u00e3o de quadril\u00e1teros forma uma \u00e1rvore, com quadril\u00e1teros cada vez menores em n\u00edveis mais baixos da \u00e1rvore, denominada de quadtree (\u00e1rvore de quadril\u00e1teros). Um octree \u00e9 a generaliza\u00e7\u00e3o de um quadtree para tr\u00eas dimens\u00f5es, onde cada cubo pode ser dividido em oito cubos menores. Na Fig. 37(a) pode ser visto um exemplo de quadtree.\n\u00c0 defini\u00e7\u00e3o primitiva de quadtree, pode-se adicionar um crit\u00e9rio de balan\u00e7o, onde cada quadril\u00e1tero deve ser, no m\u00e1ximo, duas vezes maior que seus respectivos vizinhos. Isto \u00e9 equivalente a dizer que a aresta de um quadril\u00e1tero nunca se sobrep\u00f5e a mais de duas arestas de um quadril\u00e1tero vizinho. Um quadtree considerando o crit\u00e9rio de balan\u00e7o pode ser visto na Fig. 37(a).\nFig. 37 - Estrutura de uma quadtree com (a) e sem (b) o crit\u00e9rio de balan\u00e7o\nPara se obter o m\u00e9todo de triangula\u00e7\u00e3o quadtree, basta utilizar a defini\u00e7\u00e3o de quadtree para um conjunto de pontos, aplicando as sucessivas subdivis\u00f5es at\u00e9 que cada ponto fornecido esteja devidamente separado de seus pontos vizinhos. Tradicionalmente, isto significa dizer que cada ponto est\u00e1 localizado no quadril\u00e1tero central de um arranjo de 5x5 quadril\u00e1teros, todos de mesmo tamanho, e n\u00e3o contendo mais nenhum ponto, a n\u00e3o ser o pr\u00f3prio ponto central. Diversos outros crit\u00e9rios, como por exemplo, tamanho m\u00e1ximo de elemento, podem ser utilizados como regra para a subdivis\u00e3o de quadril\u00e1teros.\nFig. 38 - Padr\u00f5es para o preenchimento de uma quadtree [14]\nA etapa seguinte consiste no preenchimento dos quadril\u00e1teros com tri\u00e2ngulos. Diversos m\u00e9todos utilizam padr\u00f5es de pequenas malhas triangulares para preencher os quadril\u00e1teros (ver Fig. 38). No entanto, tais m\u00e9todos n\u00e3o conservam por completo a geometria, distorcendo sua fronteira. M\u00e9todos mais avan\u00e7ados executam uma etapa intermedi\u00e1ria de conforma\u00e7\u00e3o dos v\u00e9rtices da quadtree aos pontos da triangula\u00e7\u00e3o. Nesta etapa, desloca-se o v\u00e9rtice mais pr\u00f3ximo da quadtree para o ponto da triangula\u00e7\u00e3o. Um v\u00e9rtice da quadtree n\u00e3o pode ser\nescolhido duas vezes devido \u00e0s subdivis\u00f5es feitas anteriormente. Finalmente, cada quadril\u00e1tero \u00e9 dividido em dois tri\u00e2ngulos e obt\u00e9m-se a triangula\u00e7\u00e3o final. Um exemplo de uma triangula\u00e7\u00e3o quadtree que conserva as fronteiras do dom\u00ednio fornecido por ser vista na Fig. 39.\nFig. 39 - Malha gerada pelo m\u00e9todo quadtree [11]\n\u00c9 f\u00e1cil demonstrar que, devido ao crit\u00e9rio de balan\u00e7o, para quadril\u00e1teros onde n\u00e3o foi efetuado nenhum deslocamento de v\u00e9rtices, sempre teremos \u00e2ngulos internos maiores que arctan(1/2), o que equivale a aproximadamente 26.5\u00b0. Para quadril\u00e1teros onde um dos v\u00e9rtices foi deslocado para se conformar com os pontos de entrada, \u00e9 poss\u00edvel demonstrar-se que, com a adi\u00e7\u00e3o de uma diagonal, sempre teremos \u00e2ngulos maiores que 20\u00b0. Nunca ocorre, em uma quadtree, o deslocamento de dois ou mais v\u00e9rtices de um mesmo quadril\u00e1tero. Juntamente com este limite m\u00ednimo dos \u00e2ngulos internos, Bern et al. [14] demonstraram que o n\u00famero de pontos de Steiner utilizados no m\u00e9todo de quadtree \u00e9 considerado pequeno.\nPode-se dizer, ent\u00e3o, que o m\u00e9todo de quadtree \u00e9 um algoritmo de triangula\u00e7\u00e3o que respeita o crit\u00e9rio de \u00e2ngulos pequenos, com um limitador de 20\u00b0. Como um tri\u00e2ngulo possui tr\u00eas \u00e2ngulos internos, e todos estes respeitam tal limitador m\u00ednimo, temos tamb\u00e9m um limitador para o m\u00e1ximo \u00e2ngulo interno, de magnitude 140\u00b0. Outras propriedades podem ser obtidas atrav\u00e9s de an\u00e1lises do m\u00e9todo quadtree, como a ordem do n\u00famero de quadril\u00e1teros e tri\u00e2ngulos utilizados para mapear o dom\u00ednio.\nO algoritmo de quadtree apresentado anteriormente aplica-se apenas para a triangula\u00e7\u00e3o de um conjunto de pontos. Este, no entanto, pode ser estendido para dom\u00ednios do tipo GPSR [80]. A id\u00e9ia fundamental \u00e9 duplicar-se os quadril\u00e1teros que contenham mais de um segmento do dom\u00ednio fornecido, de forma que seja poss\u00edvel conformar-se a aresta de cada quadril\u00e1tero ao segmento do GPSR o qual ele cont\u00e9m. Outra caracter\u00edstica interessante \u00e9 que tal m\u00e9todo, devido \u00e0 caracter\u00edstica de multi-escala (cada sub-divis\u00e3o pode ser considerada como uma escala de discretiza\u00e7\u00e3o) \u00e9 facilmente adaptado para o uso de aritm\u00e9tica inteira, eliminando os problemas decorrentes do uso de aritm\u00e9tica de ponto flutuante. A Fig. 40 apresenta um exemplo de triangula\u00e7\u00e3o de um dom\u00ednio do tipo GPSR atrav\u00e9s do m\u00e9todo quadtree.\nFig. 40 - Triangula\u00e7\u00e3o de um GPSR obtida pelo m\u00e9todo quadtree [80]\nUm dos maiores problemas do m\u00e9todo de quadtree \u00e9 a cria\u00e7\u00e3o de malhas com elementos que cont\u00e9m dire\u00e7\u00f5es preferenciais [100] (no caso, as dire\u00e7\u00e3o dos eixos principais). Esta prefer\u00eancia direcional, no entanto, pode ser resolvida com a utiliza\u00e7\u00e3o de m\u00e9todos de introdu\u00e7\u00e3o de deslocamentos aleat\u00f3rios de v\u00e9rtices (com o objetivo de eliminar a direcionalidade das arestas) acoplado \u00e0 um m\u00e9todo de suaviza\u00e7\u00e3o Laplaciana, para tentar garantir uma boa qualidade de malha. Outro problema, que pode ser considerado bastante grave, \u00e9 a dificuldade de extens\u00e3o de tal m\u00e9todo para dom\u00ednios tridimensionais. Esta generaliza\u00e7\u00e3o \u00e9 bastante complexa, e os resultados obtidos atrav\u00e9s de desenvolvimentos\nte\u00f3ricos n\u00e3o s\u00e3o suficientes para garantir uma boa qualidade de malha para a grande maioria dos casos pr\u00e1ticos. O algoritmo quadtree \u00e9 dito um algoritmo baseado em grades.\n3.3.Melhoramento de malha\n3.3.1.\tGeneralidades\nM\u00e9todos de melhoramento de malha s\u00e3o processos aplicados sobre uma malha completa, em etapa posterior, ou em conjunto com o processo de gera\u00e7\u00e3o, e baseiam-se, em ess\u00eancia, no deslocamento dos v\u00e9rtices e troca de arestas, com o objetivo de melhorar a forma e o tamanho dos elementos. A literatura n\u00e3o \u00e9 un\u00e2nime ao definir que tipo de opera\u00e7\u00e3o em uma malha \u00e9 definida como melhoramento. Na \u00e1rea num\u00e9rica \u00e9 mais comum interpretar-se o melhoramento como opera\u00e7\u00f5es feitas em uma malha sem alterar o n\u00famero de elementos. Em geometria computacional, como a malha obtida pelo gerador, como resultado dos pontos fornecidos como dados de entrada, \u00e9, em geral, grosseira, o refino \u00e9 um processo interpretado como melhoramento. Na \u00e1rea num\u00e9rica o refino \u00e9 mais associado ao pr\u00f3prio processo de gera\u00e7\u00e3o da malha. Neste trabalho, o refino apenas pela subdivis\u00e3o dos elementos, o refino com base em par\u00e2metros geom\u00e9tricos, o refino com base na solu\u00e7\u00e3o(refino adaptativo) e a suaviza\u00e7\u00e3o da malha sem alterar o n\u00famero de elementos, s\u00e3o todos considerados processos de melhoramento da malha. Estas defini\u00e7\u00f5es melhor se classificam quando inseridas nos m\u00e9todos dos grupos morfol\u00f3gicos, topol\u00f3gicos e mistos.\nComo j\u00e1 discutido, o tamanho, a forma, a orienta\u00e7\u00e3o e outras propriedades dos elementos de uma triangula\u00e7\u00e3o s\u00e3o de fundamental import\u00e2ncia para a gera\u00e7\u00e3o de uma malha de qualidade para simula\u00e7\u00e3o num\u00e9rica. Diversos tipos de triangula\u00e7\u00f5es foram aqui definidas, cada uma levando em considera\u00e7\u00e3o diferentes crit\u00e9rios. A triangula\u00e7\u00e3o de Delaunay, uma estrutura geom\u00e9trica que otimiza, simultaneamente, diversos par\u00e2metros, e de grande interesse para a engenharia, recebeu aten\u00e7\u00e3o especial por ser o foco do trabalho. No entanto, todos os m\u00e9todos de triangula\u00e7\u00e3o de Delaunay apresentados at\u00e9 agora, obt\u00eam a triangula\u00e7\u00e3o utilizando apenas os pontos fornecidos, ou seja, nenhum ponto adicional da triangula\u00e7\u00e3o \u00e9 utilizado. Com isto, caso o n\u00famero de pontos fornecidos seja pequeno ou o posicionamento destes inadequado, o triangulador estar\u00e1 impossibilitado de garantir determinados crit\u00e9rios de qualidade.\nO refino de malha neste contexto significa sempre o uso de pontos adicionais na triangula\u00e7\u00e3o, de forma a permitir que o triangulador garanta a obten\u00e7\u00e3o dos crit\u00e9rios de qualidade desejados. Estes pontos adicionais s\u00e3o denominados de pontos de Steiner.\nDevido aos desdobramentos e ao impacto que os m\u00e9todos de refino de malha exercem sobre os trianguladores, um n\u00famero bastante grande de pesquisadores considera o refino como o passo principal na gera\u00e7\u00e3o deste tipo de malha [10][85][45].\nUm dos primeiros m\u00e9todos, heur\u00edstico, de refino de malha \u00e9 atribu\u00eddo \u00e0 Frey [45]. Neste m\u00e9todo, pontos de Steiner s\u00e3o adicionados \u00e0 fronteira de acordo com uma fun\u00e7\u00e3o espacial que aproxima o tamanho caracter\u00edstico local. Ap\u00f3s este passo, as arestas da triangula\u00e7\u00e3o de Delaunay, para a grande maioria das geometrias, mapeiam por completo as fronteias do dom\u00ednio. Em seguida, pontos de Steiner s\u00e3o adicionados ao interior do dom\u00ednio da seguinte forma: procura-se por um tri\u00e2ngulo t que contenha o seu circuncentro; localiza-se um poss\u00edvel ponto de Steiner a entre o baricentro e o circuncentro de t; caso a n\u00e3o esteja muito perto dos v\u00e9rtices de t (onde o crit\u00e9rio de estar perto ou n\u00e3o \u00e9 definido pelo tamanho caracter\u00edstico local) adiciona-se a \u00e0 triangula\u00e7\u00e3o e reconstr\u00f3i-se a mesma.\nPosteriormente, Shaw [97] desenvolveu um algoritmo de triangula\u00e7\u00e3o baseado no refino triangular, onde o usu\u00e1rio fornece uma triangula\u00e7\u00e3o inicial bastante grosseira (Fig. 41(a)), e um tamanho caracter\u00edstico local associado a cada v\u00e9rtice desta malha. O algoritmo procede da seguinte forma: tri\u00e2ngulos maiores que o menor tamanho caracter\u00edstico local de seus v\u00e9rtices s\u00e3o divididos em quatro tri\u00e2ngulos menores semelhantes, atrav\u00e9s da adi\u00e7\u00e3o de um ponto de Steiner no seu baricentro e no ponto m\u00e9dio de suas arestas. Conseq\u00fcentemente, os tr\u00eas tri\u00e2ngulos vizinhos s\u00e3o divididos em dois tri\u00e2ngulos menores, de forma a manter a consist\u00eancia da triangula\u00e7\u00e3o (igual a [6] e [10], com o m\u00e9todo de melhoramento da divis\u00e3o quadr\u00e1tica). Com isto, o tamanho caracter\u00edstico local dos v\u00e9rtices adicionados nas arestas passa a ser a m\u00e9dia dos tamanhos caracter\u00edsticos locais dos v\u00e9rtices de tal aresta, enquanto que o tamanho caracter\u00edstico local do v\u00e9rtice central passa a ser a media dos tamanhos caracter\u00edsticos locais dos tr\u00eas v\u00e9rtices daquele tri\u00e2ngulo. O processo de divis\u00e3o de tri\u00e2ngulos \u00e9 seguido de ciclos de invers\u00e3o de aresta de Delaunay e de suaviza\u00e7\u00f5es Laplacianas ponderadas, para ent\u00e3o iniciar-se uma nova divis\u00e3o. Conforme os tri\u00e2ngulos das fronteiras v\u00e3o sendo refinados, os seus pontos s\u00e3o ajustados \u00e0 fronteira real da geometria, que pode conter curvas, por exemplo. Os resultados obtidos por Shaw s\u00e3o bastante satisfat\u00f3rios. A Fig.\n41(b) apresenta um exemplo de uma malha gerada com tal triangulador. O aspecto dos elementos finais da triangula\u00e7\u00e3o, praticamente, independe da malha inicial fornecida.\nFig. 41 - Malha gerada com o algoritmo de refino de Shaw [97]\nO primeiro algoritmo a garantir o controle do crit\u00e9rio de forma dos elementos foi apresentado por Baker, Grosse e Rafferty [7]. Este algoritmo garante que todos os tri\u00e2ngulos da malha n\u00e3o ter\u00e3o \u00e2ngulos internos obtusos (todos os tr\u00eas \u00e2ngulos ser\u00e3o menores que 90\u00b0), ao mesmo tempo que o menor \u00e2ngulo interno ter\u00e1 ao menos 13\u00b0 (isto se nenhum \u00e2ngulo interno da geometria fornecida for menor que 13\u00b0, \u00e9 claro). Estes dois limitadores, em conjunto, garantem que nenhum elemento da malha ter\u00e1 uma rela\u00e7\u00e3o de aspecto maior que\n4.6.\tA id\u00e9ia b\u00e1sica \u00e9 sobrepor uma malha cartesiana regular sobre o pol\u00edgono, com o espa\u00e7amento determinado pelo tamanho caracter\u00edstico local. Como o tamanho caracter\u00edstico local pode ser pequeno, e este determina a densidade da malha ao longo de todo o dom\u00ednio, o n\u00famero de pontos de Steiner utilizados pode ser consideravelmente grande.\nO primeiro algoritmo a garantir dois crit\u00e9rios distintos simultaneamente, a forma e o tamanho dos elementos, foi apresentado por Bern, Eppstein e Gilbert [14]. Este m\u00e9todo \u00e9 baseado no m\u00e9todo quadtree apresentado no Cap. 3, no entanto, os tri\u00e2ngulos gerados\nrespeitam a regra de Delaunay, ou seja, o m\u00e9todo de quadtree \u00e9 apenas a base para a localiza\u00e7\u00e3o dos pontos de Steiner da triangula\u00e7\u00e3o de Delaunay.\nTodas as t\u00e9cnicas citadas s\u00e3o t\u00e9cnicas baseadas em malhas. Uma outra t\u00e9cnica, conceitualmente diferente, para o refino de malha, denominada de refinamento de Delaunay, foi proposta por Chew [23]. Esta t\u00e9cnica \u00e9 denominada de refinamento de Delaunay pois os crit\u00e9rios da triangula\u00e7\u00e3o de Delaunay s\u00e3o mantidos ao longo de todo o processo, e estes s\u00e3o utilizados como guias para a localiza\u00e7\u00e3o de novos pontos. O algoritmo de Chew, al\u00e9m de garantir os \u00e2ngulos internos dos elementos entre 30\u00b0 e 120\u00b0, produz malhas uniformes, o que significa que os tri\u00e2ngulos t\u00eam, fundamentalmente, o mesmo tamanho. A triangula\u00e7\u00e3o gerada, por sua vez, \u00e9 considerada \u00f3tima quanto ao n\u00famero de tri\u00e2ngulos, apesar de existirem casos onde o n\u00famero de elementos \u00e9 maior que o necess\u00e1rio.\n3.3.2.\tSuaviza\u00e7\u00e3o Laplaciana\nUma das t\u00e9cnicas mais tradicionais de melhoramento de malha \u00e9 a suaviza\u00e7\u00e3o. \u00c9 uma t\u00e9cnica puramente morfol\u00f3gica, que se baseia na movimenta\u00e7\u00e3o de v\u00e9rtices para alterar a forma e tamanho dos elementos vizinhos.\nUma das mais conhecidas foi desenvolvida em meados dos anos 60, denominada de suaviza\u00e7\u00e3o Laplaciana [114]., pois sua f\u00f3rmula de reposicionamento dos v\u00e9rtices pode ser derivada da uma aproxima\u00e7\u00e3o num\u00e9rica da equa\u00e7\u00e3o de Laplace [51].\nNa suaviza\u00e7\u00e3o Laplaciana, um v\u00e9rtice no interior da uma malha \u00e9 movido para o centr\u00f3ide (centro de massa) de seus vizinhos (ver Fig. 42). Caso o centr\u00f3ide encontre-se fora do pol\u00edgono formado pelos vizinhos, este n\u00e3o deve ser reposicionado. V\u00e9rtices localizados na fronteira do dom\u00ednio, obviamente n\u00e3o podem ser deslocados, sendo que a nova localiza\u00e7\u00e3o deve consistir de uma proje\u00e7\u00e3o sobre tal fronteira. Alguns pontos espec\u00edficos n\u00e3o podem ser reposicionados, como, por exemplo, pontos de cantos de fronteiras. Como o reposicionamento dos pontos \u00e9 feito de forma expl\u00edcita, para se conseguir resultados razo\u00e1veis com este m\u00e9todo, deve-se executar uma s\u00e9rie de itera\u00e7\u00f5es, normalmente cinco ou seis. Uma variante do m\u00e9todo de suaviza\u00e7\u00e3o Laplaciana \u00e9 considerar pesos diferentes para os diversos vizinhos, baseando-se nas \u00e1reas dos respectivos elementos, o que \u00e9 equivalente a aproxima\u00e7\u00e3o num\u00e9rica da equa\u00e7\u00e3o de Poisson com termo fonte vari\u00e1vel no espa\u00e7o.\nFig. 42 - Deslocamento de v\u00e9rtice do m\u00e9todo de suaviza\u00e7\u00e3o Laplaciana\nO reposicionamento pela suaviza\u00e7\u00e3o Laplaciana normalmente melhora o tamanho e a forma dos elementos em duas dimens\u00f5es. J\u00e1, para tr\u00eas dimens\u00f5es, os resultados obtidos deixam bastante a desejar. A Fig. 43 apresenta um exemplo da aplica\u00e7\u00e3o da suaviza\u00e7\u00e3o Laplaciana, onde podemos ver que a malha apresenta as linhas que unem os v\u00e9rtices com caracter\u00edsticas mais suaves e tri\u00e2ngulos mais homog\u00eaneos.\nFig. 43 - Malha de tri\u00e2ngulos obtida pelo m\u00e9todo quadtree, antes (superior) e ap\u00f3s (inferior) a aplica\u00e7\u00e3o do m\u00e9todo de suaviza\u00e7\u00e3o Laplaciana [55]\nComo a suaviza\u00e7\u00e3o Laplaciana n\u00e3o \u00e9 de f\u00e1cil implementa\u00e7\u00e3o, e os tempos de execu\u00e7\u00e3o costumam ser bastante elevados, este m\u00e9todo \u00e9, atualmente, considerado obsoleto. Diversos outros m\u00e9todos de suaviza\u00e7\u00e3o bem mais eficientes foram desenvolvidos, normalmente baseados em t\u00e9cnicas de otimiza\u00e7\u00e3o com restri\u00e7\u00f5es. Na verdade, a comunidade de geometria computacional considera como atual estado da arte, os m\u00e9todos de otimiza\u00e7\u00e3o n\u00e3o baseados em suaviza\u00e7\u00e3o, ou seja, baseados em par\u00e2metros calculados durante a pr\u00f3pria gera\u00e7\u00e3o da malha, o que significa uma triangula\u00e7\u00e3o com restri\u00e7\u00f5es de suaviza\u00e7\u00e3o. O presente trabalho adota m\u00e9todos deste \u00faltimo tipo para garantir a qualidade da malha.\n3.3.3.\tRelaxa\u00e7\u00e3o de malha\nA relaxa\u00e7\u00e3o de malha, desenvolvida por Frey e Field [48], \u00e9 baseada em modifica\u00e7\u00f5es topol\u00f3gicas e varre as arestas da triangula\u00e7\u00e3o verificando o grau dos v\u00e9rtices adjacentes1. Se considerarmos o quadril\u00e1tero resultante da uni\u00e3o dos dois tri\u00e2ngulos que compartilham a mesma aresta, este m\u00e9todo inverte a diagonal daquele quadril\u00e1tero, ou seja, elimina a aresta em quest\u00e3o, criando uma nova aresta que tem grande chance de estar posicionada quase ortogonalmente a anterior (ver Fig. 44). Esta opera\u00e7\u00e3o, no entanto, s\u00f3 \u00e9 executada caso a soma do grau dos v\u00e9rtices da diagonal atual exceder em duas unidades a soma dos graus dos v\u00e9rtices da diagonal inversa.\n7\n8\t7\n(a)\t(b)\nFig. 44 - Invers\u00e3o de aresta do m\u00e9todo de relaxa\u00e7\u00e3o de malha\n1 Grau de um v\u00e9rtice \u00e9 o n\u00famero de arestas que chegam at\u00e9 ele.\nComo resultado deste m\u00e9todo, temos a regulariza\u00e7\u00e3o, ou normaliza\u00e7\u00e3o do grau dos v\u00e9rtices, o que aumenta a efici\u00eancia de um posterior m\u00e9todo de suaviza\u00e7\u00e3o Laplaciana que venha a ser aplicado.\nOutra t\u00e9cnica que utiliza troca de diagonais de quadril\u00e1teros e, portanto, semelhante a aqui descrita, \u00e9 o algoritmo de invers\u00e3o de aresta. Esta t\u00e9cnica, como veremos logo mais, \u00e9 utilizada para obtermos triangula\u00e7\u00f5es de Delaunay.\n3.3.4.\tRefinamento por divis\u00e3o quadr\u00e1tica\nAs metodologias apresentadas anteriormente executam opera\u00e7\u00f5es de melhoramento de malha baseadas em par\u00e2metros mensur\u00e1veis na pr\u00f3pria malha (forma do elemento, grau dos v\u00e9rtices e etc.). No entanto, existem casos onde \u00e9 importante o melhoramento de aspectos da malha baseados em par\u00e2metros externos a mesma. Um exemplo pr\u00e1tico disto \u00e9 o refino de malha para a obten\u00e7\u00e3o de solu\u00e7\u00f5es mais precisas em problemas de simula\u00e7\u00e3o num\u00e9rica, como capturar fen\u00f4menos espec\u00edficos que ocorram ao longo do dom\u00ednio como choques, por exemplo. [61]. Uma solu\u00e7\u00e3o inicial de um problema de simula\u00e7\u00e3o, utilizando uma malha grosseira, fornece informa\u00e7\u00f5es a respeito de regi\u00f5es de grandes gradientes, indicando um local adequado para a execu\u00e7\u00e3o de um refino. Da mesma forma, em regi\u00f5es com gradientes desprez\u00edveis, as malhas podem ser engrossadas para economia de recursos computacionais. \u00c9 vasta a literatura neste tipo de m\u00e9todos, conhecidos como adaptativos.\nO presente m\u00e9todo, proposto por Bank [6][10], refina um tri\u00e2ngulo qualquer da malha, onde a varia\u00e7\u00e3o da fun\u00e7\u00e3o solu\u00e7\u00e3o \u00e9 demasiadamente elevada, atrav\u00e9s da divis\u00e3o deste em quatro outros tri\u00e2ngulos menores semelhantes (ver Fig. 45). Da mesma forma, os tr\u00eas tri\u00e2ngulos vizinhos s\u00e3o divididos em dois, afim de manter a integridade da triangula\u00e7\u00e3o. A simplicidade deste algoritmo torna o engrossamento da malha uma opera\u00e7\u00e3o trivial.\nFig. 45 - Esquema do m\u00e9todo de divis\u00e3o quadr\u00e1tica\nEste algoritmo, aparentemente funciona bem, mas apresenta o problema de \u201ccaminhar\u201d em sentido contr\u00e1rio ao objetivo inicial do m\u00e9todo, que \u00e9 melhorar a malha de forma a obtermos uma solu\u00e7\u00e3o num\u00e9rica mais precisa. Durante o processo, quando divide-se o tri\u00e2ngulo principal em quatro tri\u00e2ngulos menores, os \u00e2ngulos internos deste elementos mant\u00eam-se inalterados, pois todos os tri\u00e2ngulos menores s\u00e3o semelhantes ao maior. Para os tri\u00e2ngulos adjacentes, no entanto, a divis\u00e3o do mesmo atrav\u00e9s de uma diagonal saindo do v\u00e9rtice oposto at\u00e9 o ponto m\u00e9dio da aresta do tri\u00e2ngulo central, faz o \u00e2ngulo no v\u00e9rtice oposto cair para metade. Se efetuarmos sucessivos refinos do tri\u00e2ngulo central, certamente o aspecto dos elementos vizinhos ficar\u00e1 bastante prejudicado, da mesma forma que a qualidade local da malha. Para amenizar este problema \u00e9 poss\u00edvel utilizar, posteriormente, algoritmos de suaviza\u00e7\u00e3o. Isto, no entanto, levaria a malhas que n\u00e3o representariam mais um refino da malha original, trazendo \u00e0 tona problemas de transporte e interpola\u00e7\u00e3o de propriedades, bem como outros aspectos importantes do processo de adaptatividade.\n3.3.5.\tRefinamento de Rivara\nNo sentido de obter m\u00e9todos de refino de malha sem prejudicar a qualidade dos elementos, Rivara [85][89] sugeriu o seguinte algoritmo recursivo: dividir o tri\u00e2ngulo onde se deseja efetuar o refino atrav\u00e9s de uma diagonal que sai do v\u00e9rtice oposto ao ponto m\u00e9dio da maior aresta. Para manter a integridade da triangula\u00e7\u00e3o, divide-se o tri\u00e2ngulo de aresta comum da mesma forma. A divis\u00e3o dos elementos provavelmente ir\u00e1 se propagar ao longo da triangula\u00e7\u00e3o, no entanto o algoritmo sempre termina, j\u00e1 que a divis\u00e3o \u00e9 efetuada na aresta maior.\n(a)\nFig. 46 - Esquema do refino de Rivara [85][89]\nEsta metodologia \u00e9 denominada de refinamento de Rivara, o qual demonstrou que repeti\u00e7\u00f5es arbitr\u00e1rias de tal algoritmo nunca produzem \u00e2ngulos menores que a metade do menor \u00e2ngulo presente na triangula\u00e7\u00e3o original. Felizmente, na pr\u00e1tica, devido \u00e0 forma de se\ndividir o elemento, o m\u00e9todo de refino de Rivara costuma, al\u00e9m do aspecto de refino da malha, melhorar tamb\u00e9m os \u00e2ngulos internos dos elementos.\n3.3.6.\tTransforma\u00e7\u00f5es topol\u00f3gica de Canann\nEm duas dimens\u00f5es, presume-se que o grau ideal dos v\u00e9rtices de uma triangula\u00e7\u00e3o seja seis (na tentativa de reproduzir uma topologia uniforme presente em uma malha de eq\u00fcil\u00e1teros). Com base nisto, Canann [19] efetuou diversos estudos e sugeriu mais uma metodologia baseada na topologia da malha, bastante similar \u00e0 relaxa\u00e7\u00e3o de malha de Frey e Field [48].\nA metodologia de Canann, no entanto, utiliza um n\u00famero consideravelmente maior de transforma\u00e7\u00f5es, as quais s\u00e3o capazes de trocar, inserir e remover v\u00e9rtices, tri\u00e2ngulos e arestas (n\u00e3o apenas a troca de diagonal, como efetuada pelo algoritmo de relaxa\u00e7\u00e3o) de forma a tornar o grau dos v\u00e9rtices envolvidos na transforma\u00e7\u00e3o igual ao valor ideal de seis. Algumas das transforma\u00e7\u00f5es poss\u00edveis no algoritmo de Canann s\u00e3o exemplificadas na Fig. 47, onde se pode observar, na primeira transforma\u00e7\u00e3o, tr\u00eas v\u00e9rtices com valores diferentes de seis serem transformados em 4 v\u00e9rtices de grau seis.\nUm dos argumentos utilizado por Canann para justificar a efici\u00eancia e performance do seu m\u00e9todo (assim como dos m\u00e9todos baseados em topologia) \u00e9 a n\u00e3o utiliza\u00e7\u00e3o de nenhum tipo de c\u00e1lculo geom\u00e9trico. Para completar o ciclo de melhoramento de malha, Canann sugere a utiliza\u00e7\u00e3o de uma suaviza\u00e7\u00e3o ap\u00f3s o processo de transforma\u00e7\u00e3o topol\u00f3gica, com o objetivo\nde remover qualquer tipo de irregularidades morfol\u00f3gica. O estudo de Canann impressiona pela grande quantidade de transforma\u00e7\u00f5es levadas em considera\u00e7\u00e3o.\n3.3.7.\tTransforma\u00e7\u00f5es de suaviza\u00e7\u00e3o/topol\u00f3gicas mistas\nOutra poss\u00edvel abordagem para o melhoramento de malha \u00e9 a a\u00e7\u00e3o combinada de m\u00e9todos morfol\u00f3gicos e topol\u00f3gicos. A execu\u00e7\u00e3o de transforma\u00e7\u00f5es topol\u00f3gicas locais seguidas de suaviza\u00e7\u00e3o dos v\u00e9rtices envolvidos pode resolver simultaneamente os problemas de n\u00e3o uniformidade do grau dos v\u00e9rtices e disparidades na forma e tamanho dos elementos.\nGolias e Tsiboukis [51] obtiveram bons resultados com passadas alternadas de suaviza\u00e7\u00e3o Laplaciana e relaxa\u00e7\u00e3o de malha. Os m\u00e9todos combinados, no entanto, costumam utilizar apenas transforma\u00e7\u00f5es topol\u00f3gicas simples, como a invers\u00e3o de diagonal. Freitag e Olliver-Gooch [45][46] foram os \u00fanicos a apresentar um trabalho que utilizasse, al\u00e9m da invers\u00e3o da diagonal, transforma\u00e7\u00f5es topol\u00f3gicas do tipo \u201ctroca de arestas\u201d, conjugadas com a suaviza\u00e7\u00e3o Laplaciana. Da mesma forma, eles reportaram bons resultados com este m\u00e9todo.\n3.3.8.\tRefino de Ruppert\nO algoritmo de refino de Ruppert [45] \u00e9 o primeiro algoritmo de refino para triangula\u00e7\u00f5es de Delaunay a garantir a otimiza\u00e7\u00e3o, simult\u00e2nea, de crit\u00e9rios de forma e tamanho. Com isto, todos os tri\u00e2ngulos da malha t\u00eam uma raz\u00e3o de aspecto limitada, e o n\u00famero de pontos utilizados est\u00e1 distante do n\u00famero m\u00ednimo necess\u00e1rio de pontos (n\u00famero \u00f3timo) por um fator constante. Outra caracter\u00edstica adicional do m\u00e9todo de Ruppert \u00e9 a capacidade de discretizar dom\u00ednios geom\u00e9tricos do tipo GPSR. Na Fig. 48 \u00e9 apresentada uma ilustra\u00e7\u00e3o, onde podemos ver o GPSR em (a), a triangula\u00e7\u00e3o de tal GPSR sem nenhum refino em (b), com refino para respeitar a restri\u00e7\u00e3o de \u00e2ngulo m\u00ednimo interno dos elementos de 20o em (c), e com refino para respeitar a restri\u00e7\u00e3o de \u00e2ngulo m\u00ednimo interno de 30o em (d).\nO m\u00e9todo utilizado neste trabalho \u00e9 uma extens\u00e3o do m\u00e9todo de Chew [23], e consiste na divis\u00e3o de tri\u00e2ngulos de m\u00e1 qualidade (tri\u00e2ngulos com \u00e2ngulos internos menores ou com \u00e1rea maior que um limite especificado pelo usu\u00e1rio) atrav\u00e9s da adi\u00e7\u00e3o de novos v\u00e9rtices no circuncentro de tais tri\u00e2ngulos, e na divis\u00e3o de segmentos que s\u00e3o invadidos por outros v\u00e9rtices da triangula\u00e7\u00e3o atrav\u00e9s da adi\u00e7\u00e3o de novos v\u00e9rtices no seu ponto m\u00e9dio. Tal m\u00e9todo permite que os tri\u00e2ngulos variem de tamanho ao longo do dom\u00ednio, e a sua explica\u00e7\u00e3o\ndetalhada, bem como de sua implementa\u00e7\u00e3o, \u00e9 apresentada no Cap.4. Esta se\u00e7\u00e3o pretende apenas apresentar as diferen\u00e7as do m\u00e9todo de Refino de Ruppert e outros m\u00e9todos, assim como suas caracter\u00edsticas principais.\n(b)\n(c)\t(d)\nFig. 48 - Triangula\u00e7\u00f5es de Delaunay de um GPSR [45]\nO m\u00e9todo de Ruppert, por sua vez, garante que todos os tri\u00e2ngulos resultantes ter\u00e3o \u00e2ngulos internos entre a e n-2a, onde a \u00e9 um par\u00e2metro controlado pelo usu\u00e1rio, e que pode ser escolhido entre 0\u00b0 e 20\u00b0. \u00c2ngulos maiores que 20\u00b0 (at\u00e9 cerca de 30\u00b0) podem ser tamb\u00e9m utilizados, no entanto, para estes \u00e2ngulos, n\u00e3o \u00e9 garantido que tal crit\u00e9rio seja contemplado.\nEm teoria, o m\u00e9todo de refino de Ruppert \u00e9 similar aos m\u00e9todos para GPSR, apresentados em [14] e [82], com as modifica\u00e7\u00f5es sugeridas em [11]. No entanto, na pr\u00e1tica, ele se distingue por fatores, como:\n1.\tA abordagem do m\u00e9todo de refino de Delaunay \u00e9 conceitualmente diferente do m\u00e9todo quadtree e a conceitua\u00e7\u00e3o \u00e9 muito mais simples. Em diversos casos a sua implementa\u00e7\u00e3o, inclusive, \u00e9 mais f\u00e1cil;\n2.\tGeralmente produz um n\u00famero menor de elementos;\n3.\t\u00c9 parametrizado: o usu\u00e1rio tem controle sobre a qualidade da malha que deseja atingir. Neste caso, o algoritmo permite diversos n\u00edveis de qualidade, trabalhando com o equil\u00edbrio entre forma/tamanho de malha;\n4.\tOs elementos da malha gerada n\u00e3o t\u00eam dire\u00e7\u00e3o preferencial. Em contraste, o m\u00e9todo quadtree obt\u00e9m elementos alinhados com os eixos principais, o que pode afetar os c\u00e1lculos utilizando tal triangula\u00e7\u00e3o;\n5.\tA malha gerada n\u00e3o depende da orienta\u00e7\u00e3o do dom\u00ednio geom\u00e9trico fornecido. Independente do sistema coordenado utilizado, a mesma geometria resulta na mesma triangula\u00e7\u00e3o.\nDiversos autores fizeram adapta\u00e7\u00f5es ao m\u00e9todo de refino de Ruppert, como por exemplo Shewchuk [1], para se obter melhor performance em aplica\u00e7\u00f5es espec\u00edficas. No entanto, o presente trabalho utilizar\u00e1 o algoritmo original de Ruppert devido a sua generalidade.\nAlgoritmos de refinamento de Delaunay para a gera\u00e7\u00e3o de malhas de tri\u00e2ngulos, que \u00e9 o caso do algoritmo aqui abordado, operam atrav\u00e9s da manuten\u00e7\u00e3o cont\u00ednua de uma triangula\u00e7\u00e3o de Delaunay (ou da sua variante, a triangula\u00e7\u00e3o de Delaunay restrita). Esta triangula\u00e7\u00e3o, por sua vez, \u00e9 refinada atrav\u00e9s da adi\u00e7\u00e3o de v\u00e9rtices estrategicamente localizados dentro da malha, at\u00e9 que esta obede\u00e7a as restri\u00e7\u00f5es impostas quanto \u00e0 forma e tamanho dos seus elementos.\nEstes algoritmos obt\u00e9m sucesso nesta fun\u00e7\u00e3o, devido ao fato de explorarem diversas caracter\u00edsticas importantes da triangula\u00e7\u00e3o de Delaunay. Uma destas caracter\u00edsticas, j\u00e1 mencionada anteriormente, obtida por Lawson [69], mostra que tal triangula\u00e7\u00e3o maximiza o m\u00ednimo \u00e2ngulo interno dos tri\u00e2ngulos entre todas as poss\u00edveis triangula\u00e7\u00f5es de um conjunto de pontos. Outra caracter\u00edstica importante \u00e9 que a adi\u00e7\u00e3o de um v\u00e9rtice em tal triangula\u00e7\u00e3o \u00e9 uma opera\u00e7\u00e3o estritamente local, fazendo com que tal processo independa do n\u00famero de elementos da malha. Da mesma forma, a adi\u00e7\u00e3o de um ponto para melhorar um elemento de\nm\u00e1 qualidade em uma determinada regi\u00e3o da malha, n\u00e3o afetar\u00e1 outra regi\u00e3o da malha que contenha apenas elementos de boa qualidade, sugerindo uma condi\u00e7\u00e3o de estabilidade ao m\u00e9todo.\nA quest\u00e3o fundamental que surge \u00e9, onde localizar os pontos que ser\u00e3o adicionados \u00e0 triangula\u00e7\u00e3o, depois de identificados os elementos de m\u00e1 qualidade. Diversos trabalhos desenvolvidos mostraram que o melhor local para se adicionar um novo ponto a uma triangula\u00e7\u00e3o de Delaunay \u00e9 o mais distante poss\u00edvel de qualquer outro ponto j\u00e1 presente na triangula\u00e7\u00e3o. Caso um v\u00e9rtice seja adicionado pr\u00f3ximo \u00e0 um outro, os elementos resultantes certamente ter\u00e3o uma raz\u00e3o de aspecto ruim. Por sua vez, a triangula\u00e7\u00e3o de Delaunay, n\u00e3o por coincid\u00eancia, \u00e9 a estrutura geom\u00e9trica ideal para se efetuar este tipo de procura, uma vez que o circuncentro de cada tri\u00e2ngulo \u00e9 o local, dentro de um tri\u00e2ngulo de Delaunay, mais distante dos tr\u00eas v\u00e9rtices simultaneamente (o circuncentro de cada tri\u00e2ngulo de Delaunay \u00e9 um v\u00e9rtice do diagrama de Voronoi).\n3.3.8.1.\tVaria\u00e7\u00f5es do m\u00e9todo\nO m\u00e9todo de refino de Ruppert, dado a sua filosofia operacional, \u00e9 extremamente simples de ser modificado. Varia\u00e7\u00f5es de tal m\u00e9todo podem ser facilmente obtidas atrav\u00e9s da mudan\u00e7a dos crit\u00e9rios de divis\u00e3o dos tri\u00e2ngulos e arestas. Este crit\u00e9rio pode ser avaliado tanto para par\u00e2metros geom\u00e9tricos da malha (qualidade de malha) como para par\u00e2metros externos, como, por exemplo, propriedades f\u00edsicas de um simulador adaptativo. Neste caso, a malha \u00e9 refinada conforme a solu\u00e7\u00e3o f\u00edsica buscada.\nOutra varia\u00e7\u00e3o poss\u00edvel do m\u00e9todo \u00e9 a mudan\u00e7a da forma de localiza\u00e7\u00e3o dos pontos adicionados. Outros pontos, diferentes do circuncentro do tri\u00e2ngulo e do ponto m\u00e9dio da aresta, podem ser adotados. Por exemplo: quando localizamos um novo v\u00e9rtice no circuncentro do tri\u00e2ngulo, os \u00e2ngulos de tal triangulo s\u00e3o multiplicados pelo fator dois. Isto, no entanto, pode criar \u00e2ngulos demasiadamente grandes (quando um \u00e2ngulo j\u00e1 for grande o suficiente antes da divis\u00e3o do tri\u00e2ngulo). Por outro lado, se localizarmos o novo ponto mais pr\u00f3ximo ao v\u00e9rtice que cont\u00e9m o \u00e2ngulo pequeno (e por sua vez, mais distante dos v\u00e9rtices que cont\u00e9m os \u00e2ngulos grandes), faremos com que o \u00e2ngulo pequeno cres\u00e7a mais, enquanto que os \u00e2ngulos grandes cres\u00e7am menos, obtendo tri\u00e2ngulos com os \u00e2ngulos internos mais equalizados. Esta abordagem pode levar \u00e0 obten\u00e7\u00e3o de malhas com um menor n\u00famero de v\u00e9rtices, que obede\u00e7am aos mesmos crit\u00e9rios de otimiza\u00e7\u00e3o.\n4. Descri\u00e7\u00e3o do m\u00e9todo implementado\nEste cap\u00edtulo descreve o m\u00e9todo de triangula\u00e7\u00e3o implementado nesta disserta\u00e7\u00e3o. O m\u00e9todo discretiza, utilizando uma triangula\u00e7\u00e3o de Delaunay, superf\u00edcies planas interconectadas no dom\u00ednio tridimensional, conforme mostrado na Fig. 49. A implementa\u00e7\u00e3o est\u00e1 dividida em quatro partes:\n1.\tTratamento do dom\u00ednio 2,5D\na.\tFornecimento do dom\u00ednio geom\u00e9trico 2,5D;\nb.\tSepara\u00e7\u00e3o das superf\u00edcies planas 3D em dom\u00ednios bidimensionais.\n2.\tTriangula\u00e7\u00e3o dos dom\u00ednios bidimensionais\na.\tObten\u00e7\u00e3o da triangula\u00e7\u00e3o dos v\u00e9rtices;\nb.\tInser\u00e7\u00e3o na triangula\u00e7\u00e3o das arestas do dom\u00ednio fornecido;\nc.\tElimina\u00e7\u00e3o das arestas externas ao dom\u00ednio e no interior de furos.\n3.\tRefino da malha para obten\u00e7\u00e3o dos crit\u00e9rios de qualidade\n4.\tUni\u00e3o dos dom\u00ednios bidimensionais em uma \u00fanica malha tridimensional\nA primeira parte \u00e9 uma contribui\u00e7\u00e3o original deste trabalho, onde foi definido um modelo geom\u00e9trico hier\u00e1rquico que fornece automaticamente as conectividades entre as diversas superf\u00edcies planas. Isto permite que a opera\u00e7\u00e3o de separa\u00e7\u00e3o das superf\u00edcies 3D em diversos dom\u00ednios bidimensionais seja uma opera\u00e7\u00e3o totalmente automatizada.\nA segunda parte \u00e9 uma adapta\u00e7\u00e3o do m\u00e9todo de divide-and-conquer de Lee e Schachter [64] para a gera\u00e7\u00e3o de uma triangula\u00e7\u00e3o de Delaunay restrita, que permite a representa\u00e7\u00e3o completa da geometria fornecida na triangula\u00e7\u00e3o.\nA terceira parte \u00e9 uma adapta\u00e7\u00e3o do m\u00e9todo de refino de Ruppert [92] para m\u00faltiplos dom\u00ednios bidimensionais com arestas com m\u00faltiplas conex\u00f5es.\nA quarta e \u00faltima, mais uma inova\u00e7\u00e3o deste trabalho, \u00e9 feita a uni\u00e3o das diversas triangula\u00e7\u00f5es dos dom\u00ednios bidimensionais em uma \u00fanica triangula\u00e7\u00e3o tridimensional.\nDas quatro etapas apresentadas, a primeira e \u00faltima s\u00e3o implementada especificamente para problemas 2,5D, enquanto que a segunda \u00e9 espec\u00edfica do problema bidimensional e a terceira pode ser aplicada tanto em dom\u00ednios bidimensionais como em dom\u00ednios 2,5D, j\u00e1 que o dom\u00ednio bidimensional \u00e9 um caso espec\u00edfico do 2,5D.\n4.1.Tratamento do dom\u00ednio 2,5 dimensional\nA primeira parte do procedimento implementado consiste no fornecimento do dom\u00ednio 2,5D, por parte do usu\u00e1rio, ao programa de triangula\u00e7\u00e3o, com a sua posterior separa\u00e7\u00e3o em diversos dom\u00ednios bidimensionais interconectados. Por dom\u00ednio 2,5 dimensional entende-se um conjunto de superf\u00edcies planas interconectadas no espa\u00e7o tridimensional.\n4.1.1.\tFornecimento do dom\u00ednio 2,5 dimensional- Hierarquia Geom\u00e9trica\nO dom\u00ednio geom\u00e9trico fornecido para o triangulador \u00e9 um conjunto de superf\u00edcies planas interconectadas dispostas no espa\u00e7o. Estas informa\u00e7\u00f5es s\u00e3o fornecidas para o triangulador atrav\u00e9s da defini\u00e7\u00e3o de uma estrutura denominada geometria hier\u00e1rquica.\nA geometria hier\u00e1rquica \u00e9 uma estrutura formada por tr\u00eas tipos de entidades geom\u00e9tricas: v\u00e9rtices, segmentos de reta e pol\u00edgonos. Os v\u00e9rtices podem ser de tr\u00eas tipos: tri, bi ou unidimensionais, e podem ser criados, respectivamente, em qualquer espa\u00e7o tri, bi ou unidimensional. Os segmentos de retas e os pol\u00edgonos, podem ser criados apenas utilizando os v\u00e9rtices dispon\u00edveis na geometria, ou seja, os v\u00e9rtices servem como \u201c\u00e2ncoras\u201d para criarmos estes elementos geom\u00e9tricos, que definem, respectivamente, um novo espa\u00e7o uni e bidimensional local.\nDesta forma, a geometria desejada \u00e9 constru\u00edda da seguinte forma: a raiz da hierarquia da geometria \u00e9 sempre um espa\u00e7o tridimensional, onde podem ser inseridos apenas v\u00e9rtices do tipo tridimensional. Sobre estes v\u00e9rtices, podem ser criados outros elementos, como um segmento de reta ou um pol\u00edgono. O segmento de reta, por sua vez, define um novo espa\u00e7o unidimensional, onde podem ser inseridos apenas pontos unidimensionais, enquanto os pol\u00edgonos definem um novo espa\u00e7o bidimensional, onde podem ser inseridos apenas pontos bidimensionais. Estes novos pontos uni e bidimensionais, podem servir de \u00e2ncoras para a\ncria\u00e7\u00e3o de novas entidades geom\u00e9tricas, utilizando, simultaneamente, pontos uni, bi e tridimensionais, se necess\u00e1rio.\nDevido a este encadeamento de espa\u00e7os e sub-espa\u00e7os, definidos pelas novas entidades geom\u00e9tricas criadas, \u00e9 que a geometria \u00e9 denominada hier\u00e1rquica. Este encadeamento, por sua vez, fornece, automaticamente, a conectividade entre os elementos, n\u00e3o exigindo mais do usu\u00e1rio esta informa\u00e7\u00e3o, que ser\u00e1 de fundamental import\u00e2ncia no processo final de refino. Do ponto de vista num\u00e9rico, a automatiza\u00e7\u00e3o das conectividades \u00e9 de aux\u00edlio extremamente valioso na programa\u00e7\u00e3o do m\u00e9todo, pois as conectividades s\u00e3o intensamente utilizadas na formula\u00e7\u00e3o do m\u00e9todo.\nFig. 49 - Esquema de defini\u00e7\u00e3o da geometria 2,5 dimensional\nNo exemplo da Fig. 49, podemos observar as seguintes propriedades:\n\u2022 Os v\u00e9rtices de a at\u00e9 g s\u00e3o v\u00e9rtices 3D;\n\u2022\tO pol\u00edgono q (que \u00e9 um quadril\u00e1tero) est\u00e1 ancorado nos v\u00e9rtices de a-b-c-d, e define um sub-espa\u00e7o bidimensional, que cont\u00e9m os v\u00e9rtices bidimensionais de h a l;\n\u2022\tO segmento de reta r, est\u00e1 ancorado nos pontos tridimensionais f e g, e define um sub-espa\u00e7o unidimensional, que cont\u00e9m o ponto unidimensional m.\n\u2022\tO pol\u00edgono t1 (que \u00e9 um tri\u00e2ngulo) est\u00e1 ancorado nos v\u00e9rtices bidimensionais j-k-l;\n\u2022\tO pol\u00edgono t2, que \u00e9 um tri\u00e2ngulo, est\u00e1 ancorado nos v\u00e9rtices b-d-e;\n\u2022\tO pol\u00edgono t3 (que \u00e9 um tri\u00e2ngulo) est\u00e1 ancorado nos v\u00e9rtices bidimensionais h e i, e no ponto unidimensional m.\nQuanto \u00e0s conex\u00f5es, podem ser observadas as seguintes propriedades:\n\u2022\tO pol\u00edgono t1 \u00e9 filho do pol\u00edgono q por conten\u00e7\u00e3o;\n\u2022\tO pol\u00edgono t2 \u00e9 irm\u00e3o do pol\u00edgono q atrav\u00e9s da aresta bd\n\u2022\tO pol\u00edgono t3 \u00e9 filho do pol\u00edgono q, atrav\u00e9s da aresta hi, e filho do segmento de reta r, atrav\u00e9s do v\u00e9rtice m.\nDentro desta triangula\u00e7\u00e3o, a entidade geom\u00e9trica de interesse para o presente trabalho s\u00e3o os pol\u00edgonos e segmentos de reta. Todas as outras informa\u00e7\u00f5es utilizadas (v\u00e9rtices 3D, 2D e 1D) servem apenas para a obten\u00e7\u00e3o autom\u00e1tica das conectividades. Como estes pol\u00edgonos e segmentos de reta definem sub-espa\u00e7os para a cria\u00e7\u00e3o interna de pontos, uma base local deve ser definida para cada um. A Fig. 50 apresenta estes vetores de base. Para o pol\u00edgono (Fig. 50(a)), os vetores de base s\u00e3o formados pelo primeiro e o \u00faltimo segmento fornecido, enquanto que para o segmento de reta (Fig. 50(b)) o vetor de base \u00e9 o pr\u00f3prio segmento.\nFig. 50 - Base local para as entidade geom\u00e9tricas pol\u00edgono (a) e segmento de reta (b)\nCom isto, as informa\u00e7\u00f5es para a cria\u00e7\u00e3o de um v\u00e9rtice s\u00e3o o local na hierarquia em que este vai se localizar e as suas coordenadas locais. De posse destas informa\u00e7\u00f5es, \u00e9 poss\u00edvel calcular-se as coordenadas de qualquer ponto da triangula\u00e7\u00e3o em rela\u00e7\u00e3o \u00e0 qualquer um dos sub-espa\u00e7os da geometria (caso este seja um pai do espa\u00e7o do ponto na hierarquia da geometria), ou do espa\u00e7o 3D global.\nDado um pol\u00edgono p, escrito na base Bg, a passagem da coordenada de um ponto bidimensional, filho deste pol\u00edgono, da base local do pol\u00edgono B, para a base Bg, pode ser obtida por\nPg = Tp x Pi\nonde pg \u00e9 o ponto descrito na base Bg, pi \u00e9 o ponto escrito na Bl, e Tp \u00e9 a matriz de transforma\u00e7\u00e3o da base do pol\u00edgono P, que \u00e9 dada por\nI I\n\u00dc\nT\np\nmx2\nonde i e j s\u00e3o os vetores de base do pol\u00edgono p, conforme apresentado na Fig. 50. Conforme pode ser visto na equa\u00e7\u00e3o anterior, a matriz Tp \u00e9 uma matriz mx2, onde m \u00e9 a dimens\u00e3o do espa\u00e7o formado pela base Bg.\nProssegue-se da mesma forma para o segmento de reta, com a \u00fanica modifica\u00e7\u00e3o que a matriz passa a ter a dimens\u00e3o mxl, j\u00e1 que o segmento de reta define um espa\u00e7o unidimensional.\nA implementa\u00e7\u00e3o da hierarquia geom\u00e9trica foi toda feita em C++, utilizando orienta\u00e7\u00e3o objeto. Esta implementa\u00e7\u00e3o est\u00e1 inserida na COI-lib 2.0 (Classes &amp; Objetcs for Interfacing) [39], disponibilizando um suporte para o desenvolvimento de posteriores softwares que necessitem do uso de geometrias 2,5 dimensionais. Nesta biblioteca est\u00e3o dispon\u00edveis tamb\u00e9m objetos para o armazenamento e leitura em disco, assim com a visualiza\u00e7\u00e3o hier\u00e1rquica da geometria, fornecendo um suporte direto para a visualiza\u00e7\u00e3o 3D.\nAo final desta primeira etapa, tem-se a geometria completa a ser discretizada, informada ao triangulador.\n4.1.2.\tSepara\u00e7\u00e3o das superf\u00edcies planas 3D em dom\u00ednios bidimensionais\nA segunda etapa do tratamento dos dom\u00ednios 2,5 dimensionais \u00e9 a passagem das superf\u00edcies planas 3D para dom\u00ednios bidimensionais. S\u00e3o consideradas as superf\u00edcies planas 3D, os pol\u00edgonos existentes na geometria 2,5D.\nA primeira opera\u00e7\u00e3o a ser executada, nesta etapa, \u00e9 a montagem de uma lista com todos os pol\u00edgonos da geometria. Para cada pol\u00edgono, deve-se obter uma base local ortogonal, que defina um sub-espa\u00e7o bidimensional para tal pol\u00edgono. A obten\u00e7\u00e3o desta base \u00e9 feita usando a base local do pol\u00edgono (conforme Fig. 50), e sua ortogonaliza\u00e7\u00e3o \u00e9 obtida atrav\u00e9s do processo de Gram-Schmidt. A ortogonaliza\u00e7\u00e3o de Gram-Schmidt, para a base Bl, de um pol\u00edgono \u00e9 dada por\njo = J - j \u2022\n( r \\ i\nonde jo \u00e9 o vetor de base j ortogonalizado em rela\u00e7\u00e3o \u00e0 i .A base ortogonal final \u00e9 formada pelo vetor i original e o vetor jo. A Fig. 51 ilustra o processo de ortogonaliza\u00e7\u00e3o de Grand-Schmidt aplicado para esta base bidimensional.\nFig. 51 - Ortogonaliza\u00e7\u00e3o do vetor jo da base local do pol\u00edgono\nUma observa\u00e7\u00e3o a ser feita \u00e9 que a triangula\u00e7\u00e3o final obtida deve ser escrita na base tridimensional raiz da geometria hier\u00e1rquica. Como os pol\u00edgonos podem estar ancorados em v\u00e9rtices de altos n\u00edveis da hierarquia, como por exemplo o v\u00e9rtice m da geometria da Fig. 49, deve ser efetuada a transfer\u00eancia das coordenadas destes v\u00e9rtices atrav\u00e9s de todos os espa\u00e7os pais, at\u00e9 chegar aos espa\u00e7o 3D raiz. Com isto, obt\u00e9m-se para cada pol\u00edgono, uma base\nortogonal centrada na origem do respectivo pol\u00edgono, escrita com rela\u00e7\u00e3o ao dom\u00ednio raiz da geometria. Cada uma dessas bases formar\u00e1 um dom\u00ednio bidimensional a ser discretizado.\nDe posse destas bases bidimensionais, a pr\u00f3xima opera\u00e7\u00e3o \u00e9 a transfer\u00eancia das diversas entidades filhas de cada pol\u00edgono, bem como do pr\u00f3prio pol\u00edgono, para a sua respectiva base bidimensional. Isto \u00e9 efetuado atrav\u00e9s da transfer\u00eancia dos diversos v\u00e9rtices escritos nesta base, da seguinte forma, para cada uma das bases bidimensionais obtidas (ilustra\u00e7\u00e3o naFig. 52):\n1.\tPara a base bidimensional em quest\u00e3o Bb, formada pelos vetores i e j , efetua-se o produto vetorial entre i e j , e obt\u00e9m-se o vetor k, criando-se, ent\u00e3o, uma nova base 3x3, denominada Bt, composta por i , j e k .\n2.\tTransfere-se, do espa\u00e7o do pol\u00edgono para o espa\u00e7o raiz da geometria, todos os seus elementos filhos. Isto significa transferir todos os v\u00e9rtices. Para o exemplo da Fig. 52, consideremos o v\u00e9rtice V;\n3.\tCom as entidades da etapa 2 descritas no espa\u00e7o raiz da geometria, transferem-se estas para o espa\u00e7o formado pela base Bt. Isto \u00e9 efetuado atrav\u00e9s do produto do vetor tridimensional, que representa a coordenada da entidade geom\u00e9trica na base raiz, pela inversa da matriz Bt, obtida na etapa 1. Isto resultar\u00e1 em um ponto tamb\u00e9m tridimensional, onde as coordenadas x,y s\u00e3o a proje\u00e7\u00e3o do ponto no plano da base Bb, e a coordenada z \u00e9 a dist\u00e2ncia entre este ponto e tal plano. Veja que a coordenada z pode n\u00e3o ser zero, dado que os v\u00e9rtices que formam um pol\u00edgono n\u00e3o precisam, necessariamente, estar no mesmo plano. Com isto, a forma como \u00e9 definida a base Bt, e a maneira como s\u00e3o executadas as transforma\u00e7\u00f5es lineares de mudan\u00e7a de base, faz com que este desvio esteja representado unicamente na coordenada z.\n4.\tIgnora-se a coordenada z do ponto obtido na etapa 3, sendo a coordenada final do ponto escrito na base Bb, o par ordenado (x,y).\nFig. 52 - Transfer\u00eancia das coordenadas para os espa\u00e7os bidimensionais\nNeste momento, disp\u00f5e-se, de diversas bases bidimensionais, uma para cada pol\u00edgono, onde esta bases est\u00e3o escritas no espa\u00e7o raiz da geometria. Cada uma destas bases representa um dos dom\u00ednios bidimensionais do processo, e para cada um destes dom\u00ednios, tem-se os v\u00e9rtices pertinentes escritos na sua base. Ou seja, toda a etapa morfol\u00f3gica do problema est\u00e1 pronta. Precisa-se agora, resolver a parte topol\u00f3gica, que diz respeito a conectividade entre estes dom\u00ednios.\nA conectividade entre os dom\u00ednios \u00e9 efetuada atrav\u00e9s do armazenamento e verifica\u00e7\u00e3o de \u00edndices. Cada entidade da geometria possui um \u00edndice \u00fanico associado. Ou seja, existe um \u00edndice para cada v\u00e9rtice, aresta e pol\u00edgono da geometria, Como existe um dom\u00ednio bidimensional para cada geometria, o \u00edndice do pol\u00edgono indica diretamente o dom\u00ednio.\nPara cada conex\u00e3o estabelecida na geometria, o objeto implementado cria, automaticamente, uma informa\u00e7\u00e3o relativa a esta conex\u00e3o. Esta informa\u00e7\u00e3o cont\u00e9m:\n1.\tUm \u00edndice de identifica\u00e7\u00e3o da conex\u00e3o;\n2.\tO n\u00famero de dom\u00ednios envolvidos na conex\u00e3o; e\n3.\tPara cada dom\u00ednio, o seu \u00edndice e o \u00edndice da aresta ou v\u00e9rtice, atrav\u00e9s do qual a conex\u00e3o \u00e9 estabelecida.\nDesta forma, quando s\u00e3o montados os diversos dom\u00ednios bidimensionais, basta se associar a cada ponto ou aresta deste dom\u00ednio, o \u00edndice da conex\u00e3o do qual este faz parte. Ser\u00e1 visto no t\u00f3pico de estrutura de dados que existe um espa\u00e7o reservado na estrutura da triangula\u00e7\u00e3o para o armazenamento da informa\u00e7\u00e3o de m\u00faltiplos \u00edndices. Este espa\u00e7o \u00e9 utilizado, aqui, para o armazenamento das conex\u00f5es.\nEstabelecido a forma de armazenamento das conex\u00f5es, apresenta-se os tipos de conex\u00f5es poss\u00edveis na geometria. As conex\u00f5es podem ser dadas atrav\u00e9s de qualquer uma das entidades geom\u00e9tricas: v\u00e9rtice, aresta ou pol\u00edgono completo. Os exemplos citados abaixo s\u00e3o pertinentes \u00e0 Fig. 49.\n\u2022\tConex\u00e3o atrav\u00e9s de v\u00e9rtice: para as conex\u00f5es atrav\u00e9s de v\u00e9rtices, a \u00fanica conex\u00e3o poss\u00edvel \u00e9 v\u00e9rtice filho de pol\u00edgono. No exemplo, o v\u00e9rtice m \u00e9 filho do pol\u00edgono t3. Da mesma forma, o v\u00e9rtice k \u00e9 filho do pol\u00edgono t1. Este no entanto, faz parte de uma conex\u00e3o por aresta, e por isto n\u00e3o \u00e9 considerado uma conex\u00e3o por v\u00e9rtice. Para a conex\u00e3o atrav\u00e9s de v\u00e9rtice, adiciona-se tal v\u00e9rtice como restri\u00e7\u00e3o geom\u00e9trica do pol\u00edgono e referencia-se o \u00edndice da conex\u00e3o no v\u00e9rtice adicionado;\n\u2022\tConex\u00f5es atrav\u00e9s de arestas: para a conex\u00e3o atrav\u00e9s de aresta, temos os seguintes tipos: pol\u00edgono irm\u00e3o de pol\u00edgono (t2 irm\u00e3o de q), segmento de reta irm\u00e3o de pol\u00edgono e segmento de reta filho de pol\u00edgono (aresta h-i do pol\u00edgono t3 \u00e9 filha do pol\u00edgono q). Quando a conex\u00e3o \u00e9 do tipo pol\u00edgono irm\u00e3o de pol\u00edgono ou pol\u00edgono irm\u00e3o de segmento de reta, basta referenciar-se, em tal aresta, o \u00edndice da conex\u00e3o, sem nenhuma modifica\u00e7\u00e3o na estrutura geom\u00e9trica. Quando a conex\u00e3o \u00e9 do tipo segmento de reta filho de pol\u00edgono, tal segmento de reta deve ser inserido como restri\u00e7\u00e3o geom\u00e9trica no pol\u00edgono filho, e o \u00edndice da conex\u00e3o referenciado na aresta adicionada.\n\u2022\tConex\u00f5es do tipo pol\u00edgono: para as conex\u00f5es do tipo pol\u00edgono temos uma \u00fanica poss\u00edvel: pol\u00edgono filho de pol\u00edgono. No exemplo, o pol\u00edgono ti \u00e9 filho do pol\u00edgono q. Nesta conex\u00e3o, o espa\u00e7o que o pol\u00edgono filho ocupa no pol\u00edgono pai deve ser removido, caso contr\u00e1rio, ir\u00e1 gerar-se duas malhas no mesmo local do espa\u00e7o. Esta conex\u00e3o, ent\u00e3o, forma um furo no pol\u00edgono pai, e o pol\u00edgono pai passa a estabelecer conex\u00f5es com o pol\u00edgono filho atrav\u00e9s das arestas deste. Com isto, deve-se adicionar as arestas do pol\u00edgono filho no pol\u00edgono pai, e a informa\u00e7\u00e3o que no\ninterior de tal pol\u00edgono n\u00e3o existe malha. Esta informa\u00e7\u00e3o \u00e9 dada pelo furo, que \u00e9 um ponto no dom\u00ednio que indica uma regi\u00e3o sem malha. Nas arestas adicionadas, deve-se referenciar o \u00edndice da conex\u00e3o;\nEfetuada esta etapa, disp\u00f5e-se das informa\u00e7\u00f5es geom\u00e9tricas dos diversos dom\u00ednios bidimensionais, e as informa\u00e7\u00f5es de conex\u00f5es estabelecidas entre eles. As informa\u00e7\u00f5es de conex\u00e3o, por sua vez, est\u00e3o armazenadas como \u00edndices, nas arestas e v\u00e9rtices, que indicam as estruturas que armazenam as informa\u00e7\u00f5es de quais entidades participam de tal conex\u00e3o.\n4.2.Triangula\u00e7\u00e3o dos dom\u00ednios bidimensionais\nA segunda parte do processo de triangula\u00e7\u00e3o implementado no presente trabalho consiste na triangula\u00e7\u00e3o, independente, de cada um dos dom\u00ednios bidimensionais obtidos na primeira parte. Esta parte \u00e9 um processo unicamente bidimensional.\n4.2.1.\tEstruturas de dados utilizadas na triangula\u00e7\u00e3o bidimensional\nAntes de prosseguirmos para a primeira etapa do processo de triangula\u00e7\u00e3o bidimensional, \u00e9 fundamental conhecermos as estruturas de dados que ser\u00e3o manipuladas neste processo.\nExistem duas estruturas de dados utilizadas no processo de triangula\u00e7\u00e3o bidimensional: a estrutura de dados da geometria bidimensional, e a estrutura de dados da triangula\u00e7\u00e3o bidimensional.\nA estrutura de dados da geometria bidimensional \u00e9 composta por 3 entidades:\n1.\tV\u00e9rtice: ponto localizado no plano, com um \u00edndice associado \u00e0 este;\n2.\tAresta: par ordenado de \u00edndice dos v\u00e9rtices que a comp\u00f5e;\n3.\tIndicador de furo: ponto localizados no plano, que define uma regi\u00e3o fechada, delimitada por arestas, que n\u00e3o cont\u00e9m elementos da triangula\u00e7\u00e3o.\nNa Fig. 53 pode-se ver um exemplo de uma estrutura geom\u00e9trica que \u00e9 entregue ao triangulador bidimensional. Tal estrutura \u00e9 formada por nove v\u00e9rtices e nove arestas, com um indicador de furo no interior do tri\u00e2ngulo central.\nFig. 53 - Exemplo de geometria bidimensional (a) e os objetos de sua estrutura de dados (b)\nAl\u00e9m das informa\u00e7\u00f5es geom\u00e9tricas apresentadas acima, os v\u00e9rtices e arestas podem armazenar uma lista de \u00edndices definidos pelo usu\u00e1rio. Estes \u00edndices que podem armazenar informa\u00e7\u00f5es pertinentes \u00e0 condi\u00e7\u00f5es de contorno, por exemplo, que ser\u00e3o aplicadas em tais arestas ou v\u00e9rtices. No presente caso, estes \u00edndices definidos pelo usu\u00e1rio s\u00e3o utilizados para indicar refer\u00eancias a conex\u00e3o estabelecidas em tal aresta ou v\u00e9rtice.\nA segunda estrutura de dados utilizada no triangulador bidimensional \u00e9 a estrutura de dados da triangula\u00e7\u00e3o. Existem duas estruturas de dados tradicionalmente utilizadas no desenvolvimento de trianguladores: quadedge e triangular.\nA estrutura quadedge, proposta por Guibas e Stolfi [53], armazena as arestas da triangula\u00e7\u00e3o e referencias para os v\u00e9rtices e arestas vizinhas, sendo, sem sombra de d\u00favidas, a estrutura mais popular utilizada no desenvolvimento de trianguladores. Esta popularidade deve-se a abordagem elegante fornecida pela quadedge, que representa, ao mesmo tempo, o grafo da triangula\u00e7\u00e3o e seu dual (e.g., triangula\u00e7\u00e3o de Delaunay e o diagrama de Voronoi). Al\u00e9m disto, Guibas e Stolfi disponibilizaram na literatura uma extensa e detalhada quantidade de rotinas que fornecem pseudo-c\u00f3digos para as opera\u00e7\u00f5es normalmente utilizadas na triangula\u00e7\u00e3o.\nA estrutura triangular, por sua vez, armazena os tri\u00e2ngulos e refer\u00eancias para os v\u00e9rtices e tri\u00e2ngulos vizinhos. Apesar de menos popular, os resultados descritos por Shewchuk [101], mostram que as implementa\u00e7\u00f5es utilizando a estrutura triangular chegam a ser duas vezes mais r\u00e1pidas que as implementa\u00e7\u00f5es utilizando a estrutura quadedge. Por outro\nlado, a sua n\u00e3o popularidade deve-se ao fato dos c\u00f3digos implementados utilizando a estrutura triangular serem mais extensos que utilizando a estrutura quadedge.\nA Fig. 54 apresenta um esquema das estruturas quadedge (Fig. 54(b)) e triangular (Fig. 54(c)), para um conjunto de quatro tri\u00e2ngulos vizinhos, conforme em Fig. 54(a).\nFig. 54 - Esquema das estruturas de dados quadedge e triangular\nA estrutura adotada no presente trabalho, por sua vez, \u00e9 uma adapta\u00e7\u00e3o da estrutura triangular. Esta adapta\u00e7\u00e3o consiste na inclus\u00e3o da entidade segmento, com o objetivo de representar, dentro da estrutura da triangula\u00e7\u00e3o, as arestas do dom\u00ednio geom\u00e9trico fornecido. A estrutura triangular modificada proposta neste trabalho \u00e9 ent\u00e3o composta pelas seguintes entidades:\n1.\tV\u00e9rtice: ponto no plano da triangula\u00e7\u00e3o, com um \u00edndice associado a este;\n2.\tSegmento: par ordenado de \u00edndice dos v\u00e9rtices que a comp\u00f5e. Al\u00e9m dos \u00edndices para os v\u00e9rtices, possui dois \u00edndices para os tri\u00e2ngulos adjacentes;\n3.\tTri\u00e2ngulo: conjunto de tr\u00eas \u00edndices dos v\u00e9rtices que a comp\u00f5e. Al\u00e9m dos \u00edndices para os v\u00e9rtices, possui tr\u00eas \u00edndices para os tri\u00e2ngulos adjacentes, e mais tr\u00eas \u00edndices para poss\u00edveis segmentos.\nDa mesma forma que a estrutura de dados da geometria, a estrutura de dados da triangula\u00e7\u00e3o \u00e9 capaz de armazenar um conjunto de \u00edndices definidos pelo usu\u00e1rio. Estes \u00edndices, ent\u00e3o, representar\u00e3o os mesmos \u00edndices informados na estrutura da geometria. Este processo \u00e9 denominado de discretiza\u00e7\u00e3o dos par\u00e2metros informados pelo usu\u00e1rio. A conex\u00e3o, por exemplo, que foi informada atrav\u00e9s de \u00edndices nas arestas da geometria, estar\u00e1 presente nos diversos segmentos que ser\u00e3o discretizados na triangula\u00e7\u00e3o.\nA Fig. 55 apresenta a triangula\u00e7\u00e3o e a estrutura de dados referente a geometria da Fig. 53. Observe que as arestas informadas na geometria est\u00e3o presentes na triangula\u00e7\u00e3o atrav\u00e9s dos objetos segmentos, e que no interior do tri\u00e2ngulo central n\u00e3o existe elementos da malha. Ou seja, n\u00e3o existe um tri\u00e2ngulo em tal local.\nDe posse das informa\u00e7\u00f5es das estruturas de dados utilizadas na triangula\u00e7\u00e3o, pode-se iniciar a obten\u00e7\u00e3o da mesma.\n4.2.2.\tObten\u00e7\u00e3o da triangula\u00e7\u00e3o dos v\u00e9rtices\nO m\u00e9todo de discretiza\u00e7\u00e3o utilizado no presente trabalho \u00e9 o divide-and-conquer, de Lee e Schachter [64], com adapta\u00e7\u00e3o para cortes horizontais e verticais, simultaneamente. O uso de cortes verticais e horizontais tem o objetivo de aumentar a robustez do m\u00e9todo.\nO m\u00e9todo divide-and-conquer \u00e9 um m\u00e9todo direto, onde todos os v\u00e9rtices precisam ser conhecidos \u00e0 priori, e o seu produto \u00e9 uma triangula\u00e7\u00e3o de Delaunay. Nesta etapa, apenas as informa\u00e7\u00f5es dos v\u00e9rtices s\u00e3o utilizadas no processo, e todos os v\u00e9rtices, e somente estes,\nestar\u00e3o presentes na triangula\u00e7\u00e3o. Desta forma, a estrutura de dados da triangula\u00e7\u00e3o, ao final desta etapa, possui apenas v\u00e9rtices e tri\u00e2ngulos. Nenhuma informa\u00e7\u00e3o de segmento est\u00e1 presente.\nAs etapas do m\u00e9todo divide-and-conquer s\u00e3o as seguintes:\n1.\tOrdena\u00e7\u00e3o dos v\u00e9rtices em ordem crescente, onde a ordenada principal de compara\u00e7\u00e3o \u00e9 x, e a secund\u00e1ria \u00e9 y;\n2.\tElimina\u00e7\u00e3o dos v\u00e9rtices repetidos;\n3.\tDivis\u00e3o do dom\u00ednio em duas partes. Esta divis\u00e3o pode ser atrav\u00e9s de um corte vertical, quando os limites da coordenada x dos v\u00e9rtices \u00e9 maior que a coordenaday, e vice-versa. Caso cada parte do dom\u00ednio tenha mais de 3 pontos, divide-se novamente cada parte. Isto gera um processo recursivo, onde cria-se uma \u00e1rvore bin\u00e1ria de divis\u00f5es dos pontos;\n4.\tTriangula\u00e7\u00e3o de cada parte. Como cada parte n\u00e3o possui mais de 3 pontos, a\ntriangula\u00e7\u00e3o \u00e9 direta;\n5.\nRetorno da recursividade,\ncom a uni\u00e3o das diversas partes, at\u00e9 que se obtenha a\ntriangula\u00e7\u00e3o completa.\nFig. 56 - Ordena\u00e7\u00e3o dos pontos no m\u00e9todo divide-and-conquer\nNa implementa\u00e7\u00e3o da primeira etapa \u00e9 utilizado o m\u00e9todo de ordena\u00e7\u00e3o quick-sort. A ordenada principal de compara\u00e7\u00e3o significa que um v\u00e9rtice \u00e9 menor que o outro se a sua coordenada x \u00e9 menor. A coordenada y \u00e9 utilizada apenas quando a coordenada x dos dois v\u00e9rtices \u00e9 exatamente igual. Na Fig. 56 podemos ver um exemplo de ordena\u00e7\u00e3o dos v\u00e9rtices. Apesar do v\u00e9rtice 8 ter a menor coordenada y que todos os outros v\u00e9rtices, ele \u00e9 colocado em \u00faltimo na lista, j\u00e1 que sua coordenada x \u00e9 a maior de todas. J\u00e1 o v\u00e9rtice 4 \u00e9 ordenado antes do v\u00e9rtice 5 pois, apesar dos dois terem a mesma coordenada x, o 4 tem coordenaday menor que o 5.\nA segunda etapa consiste na elimina\u00e7\u00e3o dos pontos repetidos. Esta \u00e9 uma opera\u00e7\u00e3o extremamente simples, j\u00e1 que os pontos est\u00e3o ordenados. Para isto, basta visitar todas as\nposi\u00e7\u00f5es do vetor de pontos, verificando se o ponto atual\n\u00e9 igual ao ponto seguinte. Caso\nverdadeiro, elimina-se o ponto seguinte,\ne desloca-se todo o restante do vetor uma posi\u00e7\u00e3o\nabaixo.\nFig. 57 - Divis\u00e3o do dom\u00ednio em uma \u00e1rvore bin\u00e1ria\nA terceira etapa, consiste na divis\u00e3o do dom\u00ednio em uma \u00e1rvore bin\u00e1ria. Conforme o exemplo da Fig. 57, onde o dom\u00ednio \u00e9 composto por 12 v\u00e9rtices, o primeiro n\u00edvel de divis\u00e3o cria duas partes, cada uma com 6 v\u00e9rtices. Como cada parte possui mais de 3 v\u00e9rtices, divide-se novamente cada parte em duas, criando 4 partes com 3 v\u00e9rtices cada. O processo de subdivis\u00e3o de cada parte \u00e9 independente. No exemplo apresentado, apesar do processo\nefetuado ser igual para cada uma das partes, poder\u00edamos ter a subdivis\u00e3o de apenas uma das partes.\nA quarta etapa da triangula\u00e7\u00e3o \u00e9 a mais simples de todas. De posse das diversas partes do dom\u00ednio, cada uma com no m\u00e1ximo 3 pontos, criam-se os tri\u00e2ngulos iniciais, em cada parte.\nA quinta e \u00faltima etapa \u00e9 o cora\u00e7\u00e3o do processo. Nesta etapa ser\u00e3o unidas as diversas triangula\u00e7\u00f5es criadas na etapa quatro. A uni\u00e3o, por sua vez, \u00e9 feita no sentido contr\u00e1rio \u00e0 divis\u00e3o do dom\u00ednio. Ou seja, percorre-se ao contr\u00e1rio a \u00e1rvore bin\u00e1ria criada na etapa tr\u00eas, de forma a se chegar na raiz desta com a triangula\u00e7\u00e3o final completa.\nA opera\u00e7\u00e3o fundamental, ent\u00e3o, a ser implementada para esta etapa \u00e9 a uni\u00e3o de duas triangula\u00e7\u00f5es disjuntas. Um exemplo de duas triangula\u00e7\u00e3o disjuntas, TL e TR, \u00e9 apresentado na Fig. 58.\nA primeira propriedade necess\u00e1ria para o correto funcionamento do processo de uni\u00e3o \u00e9 que as duas triangula\u00e7\u00f5es devem ser convexas. Isto sempre ocorre neste m\u00e9todo de triangula\u00e7\u00e3o, pois a uni\u00e3o de duas triangula\u00e7\u00f5es convexas \u00e9 uma triangula\u00e7\u00e3o convexa. Como sempre inicia-se o processo com um \u00fanico tri\u00e2ngulo, que pode ser considerada uma triangula\u00e7\u00e3o convexa, sempre teremos triangula\u00e7\u00f5es convexas ao longo do processo. Isto demonstra, tamb\u00e9m, que a triangula\u00e7\u00e3o final obtida neste processo \u00e9 convexa, conforme \u00e9 a triangula\u00e7\u00e3o de Delaunay de um conjunto de pontos.\nO processo de uni\u00e3o das duas partes, ent\u00e3o \u00e9 dividido nas seguintes etapas:\n1.\tEncontram-se os segmentos de reta inferior e superior, tangentes \u00e0s duas triangula\u00e7\u00f5es. Um exemplo \u00e9 apresentado na Fig. 59. Os dois segmentos de reta tangentes sempre conectam dois v\u00e9rtices, um em cada triangula\u00e7\u00e3o, indicados por VUL, VLL, VUR e VLR na Fig. 59, e estes ser\u00e3o, necessariamente, arestas da triangula\u00e7\u00e3o ao final do processo de uni\u00e3o;\n2.\tEm seguida, partindo-se da aresta inferior (L0R0, conforme Fig. 60), cria-se uma\naresta auxiliar R0Li, e verifica-se a propriedade de Delaunay para o quadril\u00e1tero criado. Caso a +\t, dentro do quadril\u00e1tero LoRoLL2, seja verdadeiro, a aresta\nLLi permanece. Caso contr\u00e1rio, a aresta L0L1 \u00e9 removida, e o ponto L2 passa a ser L1, e o processo de verifica\u00e7\u00e3o reinicia-se. Esta etapa encerra apenas quando o teste a + P<n for verdadeiro;\n3.\tEfetua-se o mesmo processo para o quadril\u00e1tero L0R0R2R1, para a triangula\u00e7\u00e3o do lado direito;\n4.\tQuando as arestas inv\u00e1lidas s\u00e3o todas removidas, a diagonal correta do quadril\u00e1tero L0R0R1L1 \u00e9 adicionada, conforme pode ser visto na Fig. 61. Esta diagonal, passa ent\u00e3o, a ser a nova aresta de base, e retorna-se para a etapa 2, executando-se o mesmo processo at\u00e9 que a aresta tangente superior seja atingida. Quando isto ocorre, a uni\u00e3o das duas triangula\u00e7\u00f5es foi efetuada, conforme pode ser observado na\nFig. 62.\nFig. 59 - Tangentes iniciais do m\u00e9todo divive-and-conquer\nFig. 60 - Primeira etapa da uni\u00e3o das triangula\u00e7\u00f5es disjuntas\nFig. 61 - Segunda etapa da uni\u00e3o das triangula\u00e7\u00f5es disjuntas\nFig. 62 - Terceira etapa da uni\u00e3o das triangula\u00e7\u00f5es disjuntas\nObtida a triangula\u00e7\u00e3o dos pontos, s\u00e3o transferidos aos v\u00e9rtices, os \u00edndices definidos pelo usu\u00e1rios nos v\u00e9rtices do dom\u00ednio geom\u00e9trico bidimensional.\nAo final desta etapa, temos em m\u00e3os a triangula\u00e7\u00e3o do conjunto de pontos dos diversos dom\u00ednios bidimensionais.\n4.2.3.\tInser\u00e7\u00e3o na triangula\u00e7\u00e3o das arestas do dom\u00ednio fornecido\nComo na etapa anterior a triangula\u00e7\u00e3o de Delaunay foi obtida considerando-se apenas os v\u00e9rtices do dom\u00ednio, \u00e9 poss\u00edvel que arestas presentes no dom\u00ednio bidimensional n\u00e3o estejam presentes na triangula\u00e7\u00e3o. Esta etapa, ent\u00e3o, tem dois objetivos:\n1.\tInserir tais arestas na triangula\u00e7\u00e3o, de forma a garantir que a geometria do dom\u00ednio bidimensional esteja totalmente presente na triangula\u00e7\u00e3o;\n2.\tInformar \u00e0 triangula\u00e7\u00e3o, atrav\u00e9s da inser\u00e7\u00e3o dos elementos geom\u00e9tricos segmentos, quais os limites e regi\u00f5es do dom\u00ednio geom\u00e9trico fornecido. As entidades segmentos, por sua vez, ser\u00e3o de fundamental import\u00e2ncia para a etapa seguinte do processo de triangula\u00e7\u00e3o dos dom\u00ednios bidimensionais;\nO processamento desta etapa resume-se, ent\u00e3o, a passar por todas as arestas do dom\u00ednio geom\u00e9trico, inserindo as mesma na triangula\u00e7\u00e3o. O processo de inser\u00e7\u00e3o de uma aresta na triangula\u00e7\u00e3o segue as seguintes etapas:\n1.\tLocaliza\u00e7\u00e3o dos dois v\u00e9rtices da triangula\u00e7\u00e3o que referem-se aos v\u00e9rtices do dom\u00ednio geom\u00e9trico que comp\u00f5e a aresta a ser inserida;\n2.\tElimina\u00e7\u00e3o de todos as arestas da triangula\u00e7\u00e3o que interseccionam a aresta sendo inserida. Este processo cria dois pol\u00edgonos convexos, um de cada lado da aresta, denominados pol\u00edgonos de inser\u00e7\u00e3o;\n3.\tTriangula\u00e7\u00e3o, respeitando as propriedades de Delaunay, dos dois pol\u00edgonos de inser\u00e7\u00e3o;\n4.\tAdi\u00e7\u00e3o do segmento, com as informa\u00e7\u00f5es de \u00edndices definidos pelo usu\u00e1rio.\nA primeira etapa \u00e9 bastante simples, se utilizarmos os \u00edndices que foram marcados nos v\u00e9rtices da triangula\u00e7\u00e3o durante a etapa de obten\u00e7\u00e3o da triangula\u00e7\u00e3o dos v\u00e9rtices. Na Fig. 63(a) a aresta a ser inserida na triangula\u00e7\u00e3o aparece em tracejado, com a denomina\u00e7\u00e3o de A\u00a1.\nPara a segunda etapa \u00e9 preciso processar-se a interse\u00e7\u00e3o das arestas do dom\u00ednio com A\u00bf. Se for preciso passar por todas as arestas do dom\u00ednio efetuando tal verifica\u00e7\u00e3o, ser\u00e1 um custo excessivo. Por isso, utiliza-se as informa\u00e7\u00f5es de conectividade existentes na triangula\u00e7\u00e3o atual para realizar-se uma busca recursiva em arestas de tri\u00e2ngulos vizinhos. A opera\u00e7\u00e3o de busca recursiva tem a seguinte seq\u00fc\u00eancia:\n1.\tEscolhe-se um dos v\u00e9rtices de A\u00bf, por exemplo V1, e verifica-se a intersec\u00e7\u00e3o entre Ai e a aresta oposta de todos os tri\u00e2ngulos do qual V1 faz parte. Necessariamente, apenas uma aresta ser\u00e1 interseccionada. Elimina-se, ent\u00e3o, tal aresta;\n2.\tSegue-se para o tri\u00e2ngulo que possui a aresta eliminada em comum, e verifica-se a intersec\u00e7\u00e3o entre Ai e as outras duas arestas de tal tri\u00e2ngulo. Novamente, apenas uma das arestas ser\u00e1 interseccionada. Elimina-se, ent\u00e3o, tal aresta;\n3.\tRepete-se o processo da etapa 2, at\u00e9 que seja atingido um tri\u00e2ngulo no qual V2 seja um dos seus v\u00e9rtices;\nAo final deste processo, eliminamos todas as arestas que interseccionam a aresta sendo inserida. Adiciona-se, ent\u00e3o, \u00e0 triangula\u00e7\u00e3o, o segmento dos v\u00e9rtices V1 a V2, obtendo-se dois pol\u00edgonos de inser\u00e7\u00e3o, conforme a Fig. 63(b).\nO pr\u00f3ximo passo \u00e9 triangular tais pol\u00edgonos respeitando as regras de Delaunay. Para isto, basta criar-se arestas ligando os v\u00e9rtices dos pol\u00edgonos de inser\u00e7\u00e3o aos v\u00e9rtices V1 ou V2.\nPara um dado v\u00e9rtice V no pol\u00edgono de inser\u00e7\u00e3o, conforme Fig. 63(c), escolhe-se V1 ao inv\u00e9s de V2, caso a dist\u00e2ncia entre V1 e Vseja menor que V2 e V, e vice-versa.\n(b)\t(c)\nFig. 63 - Etapas da inser\u00e7\u00e3o de aresta\nA triangula\u00e7\u00e3o criada, ent\u00e3o, n\u00e3o \u00e9 mais uma triangula\u00e7\u00e3o de Delaunay, mas uma triangula\u00e7\u00e3o de Delaunay restrita, conforme as defini\u00e7\u00f5es da se\u00e7\u00e3o [2.3.4].\nO \u00faltimo passo do processo consiste na transfer\u00eancia das informa\u00e7\u00f5es de \u00edndices criados pelo usu\u00e1rio para os segmentos inseridos na triangula\u00e7\u00e3o. Isto \u00e9 trivial porque estas informa\u00e7\u00f5es podem ser repassadas \u00e0 medida que os segmentos v\u00e3o sendo inseridos.\nAo final desta etapa, temos a triangula\u00e7\u00e3o dos diversos dom\u00ednios bidimensionais, respeitando os v\u00e9rtices e arestas e incluindo as informa\u00e7\u00f5es de \u00edndices definidos pelo usu\u00e1rio, tanto nos v\u00e9rtices quando nos segmentos inseridos.\n4.2.4.\tElimina\u00e7\u00e3o das arestas externas ao dom\u00ednio e dos furos\nComo a triangula\u00e7\u00e3o de Delaunay inicial foi obtida a partir de um conjunto de pontos, e as arestas do dom\u00ednio geom\u00e9trico foram inseridas posteriormente, a triangula\u00e7\u00e3o gerada\nnecessariamente \u00e9 convexa, conforme exposto na etapa de obten\u00e7\u00e3o da triangula\u00e7\u00e3o dos v\u00e9rtices. Esta triangula\u00e7\u00e3o, por sua vez, pode conter tri\u00e2ngulos externos ao contorno do dom\u00ednio geom\u00e9trico, j\u00e1 que o dom\u00ednio geom\u00e9trico fornecido por ser n\u00e3o convexo. Da mesma forma, a triangula\u00e7\u00e3o pode conter tri\u00e2ngulos no interior de furos definidos pelo usu\u00e1rio. Um exemplo \u00e9 apresentado na Fig. 64.\nFig. 64 - Triangula\u00e7\u00e3o de Delaunay e tri\u00e2ngulos indesejados\nEsta \u00faltima etapa do processo de triangula\u00e7\u00e3o dos dom\u00ednios bidimensionais, ent\u00e3o, consiste na elimina\u00e7\u00e3o dos tri\u00e2ngulos fora do dom\u00ednio geom\u00e9trico fornecido e no interior de furos. Somente ent\u00e3o, a triangula\u00e7\u00e3o ir\u00e1 mapear apenas o dom\u00ednio geom\u00e9trico definido pelo usu\u00e1rio.\nA elimina\u00e7\u00e3o destes tri\u00e2ngulos est\u00e1 dividida em duas etapas:\n1.\tElimina\u00e7\u00e3o dos tri\u00e2ngulo externos ao dom\u00ednio geom\u00e9trico;\n2.\tElimina\u00e7\u00e3o dos tri\u00e2ngulo no interior de furos.\nPara a primeira etapa, varre-se as arestas externas da triangula\u00e7\u00e3o, e caso em uma determinada aresta n\u00e3o esteja presente um segmento, inicia-se um processo recursivo de elimina\u00e7\u00e3o de tri\u00e2ngulo a partir do tri\u00e2ngulo que cont\u00e9m tal aresta. O processo recursivo funciona da seguinte forma: para um dado tri\u00e2ngulo, caso uma de suas tr\u00eas arestas n\u00e3o contenha um segmento, elimina-se o tri\u00e2ngulo comum com tal aresta, e utiliza-se o tri\u00e2ngulo\neliminado como base para uma nova verifica\u00e7\u00e3o de vizinhan\u00e7a. Quando mais nenhum tri\u00e2ngulo tiver arestas sem a estrutura segmento, encerra-se o processo para tal regi\u00e3o. Este processo ir\u00e1 eliminar todo um conjunto de tri\u00e2ngulo delimitados por uma poligonal fechada de segmentos.\nA primeira etapa, no entanto, s\u00f3 estar\u00e1 encerrada quando forem verificadas todas as arestas externas da triangula\u00e7\u00e3o. Assim, ao final da primeira etapa, todas as arestas externas da triangula\u00e7\u00e3o cont\u00e9m segmentos, fazendo com que a poligonal externa da triangula\u00e7\u00e3o seja exatamente a poligonal externa do dom\u00ednio geom\u00e9trico fornecido pelo usu\u00e1rio.\nPara a segunda etapa, a elimina\u00e7\u00e3o dos tri\u00e2ngulos no interior de furos, o processo \u00e9 bastante similar. Para cada um dos pontos fornecidos pelo usu\u00e1rio, que definem os furos, encontra-se o tri\u00e2ngulo que cont\u00e9m o ponto, e inicia-se no tri\u00e2ngulo o processo de elimina\u00e7\u00e3o recursiva de tri\u00e2ngulos. Feito isto para todos os pontos, encerra-se a presente etapa.\nAo final desta etapa, temos os dom\u00ednios bidimensionais triangulados, respeitando os v\u00e9rtices, arestas, n\u00e3o convexidades do dom\u00ednio geom\u00e9trico e furos interiores, al\u00e9m das informa\u00e7\u00f5es de \u00edndices definidos pelo usu\u00e1rio para os v\u00e9rtices e segmentos.\n4.3.Refino da malha para obten\u00e7\u00e3o dos crit\u00e9rios de qualidade\nA terceira parte do processo, consiste no refino da malha para a obten\u00e7\u00e3o dos crit\u00e9rios de qualidade. A presente implementa\u00e7\u00e3o permite a utiliza\u00e7\u00e3o de restri\u00e7\u00f5es m\u00ednimas de tamanhos de elemento (tanto a \u00e1rea quanto o comprimento de aresta) e restri\u00e7\u00f5es m\u00ednimas de m\u00ednimo \u00e2ngulo interno dos tri\u00e2ngulos, simultaneamente.\nO m\u00e9todo de refino utilizado \u00e9 uma adapta\u00e7\u00e3o para m\u00faltiplos dom\u00ednios bidimensionais com arestas com m\u00faltiplas conex\u00f5es do m\u00e9todo de refino de Ruppert [92]. Este por sua vez, pode ser tamb\u00e9m aplicado a dom\u00ednios bidimensionais.\nA id\u00e9ia b\u00e1sica deste m\u00e9todo \u00e9 a manuten\u00e7\u00e3o cont\u00ednua, ao longo de todo o processo, de uma triangula\u00e7\u00e3o de Delaunay v\u00e1lida. Tal triangula\u00e7\u00e3o \u00e9, ent\u00e3o, utilizada para decidir-se onde novos v\u00e9rtices ser\u00e3o inseridos de forma a remover-se tri\u00e2ngulos de m\u00e1 qualidade. Por tri\u00e2ngulos de m\u00e1 qualidade entende-se tri\u00e2ngulos com \u00e1rea maior que a m\u00ednima \u00e1rea definida\npelo usu\u00e1rio, ou com algum \u00e2ngulo interno menor que o definido. Cada adi\u00e7\u00e3o de v\u00e9rtice representa uma retriangula\u00e7\u00e3o, onde m\u00e9todos incrementais t\u00eam aplica\u00e7\u00e3o direta.\nConforme Ruppert, um local adequado para a adi\u00e7\u00e3o de um novo v\u00e9rtice \u00e9 o circuncentro de um tri\u00e2ngulo de m\u00e1 qualidade. Isto pode ser observado pela seguinte propriedade geom\u00e9trica elementar: se um tri\u00e2ngulo t = abc tem o \u00e2ngulo bca = 0, e o ponto p \u00e9 o circuncentro de t, ent\u00e3o o \u00e2ngulo bpa = 20. A Fig. 65 ilustra esta propriedade.\nFig. 65 - Modifica\u00e7\u00e3o do \u00e2ngulo com a adi\u00e7\u00e3o do novo v\u00e9rtice no circuncentro\nAs opera\u00e7\u00f5es b\u00e1sicas do m\u00e9todo de refino s\u00e3o duas:\n1.\tDivis\u00e3o de uma aresta atrav\u00e9s da adi\u00e7\u00e3o de um v\u00e9rtice no seu ponto m\u00e9dio;\n2.\tDivis\u00e3o de um tri\u00e2ngulo atrav\u00e9s da adi\u00e7\u00e3o de um v\u00e9rtice no seu circuncentro.\nUm conceito a ser definido antes de apresentar-se o algoritmo de refino, \u00e9 o conceito de invas\u00e3o de segmento. Primeiramente, vamos definir o que \u00e9 um circulo diametral: dado um segmento s, o c\u00edrculo com di\u00e2metro s \u00e9 denominado c\u00edrculo diametral. Quando um v\u00e9rtice v encontra-se dentro do c\u00edrculo diametral de s, diz-se que tal v\u00e9rtice invade o segmento s. A Fig. 66 ilustra este fato: o v\u00e9rtice a invade os segmentos s1 e s2 (apenas o c\u00edrculo diametral de s1 \u00e9 apresentado).\nNa sua ess\u00eancia, o algoritmo de refino diz que tri\u00e2ngulos de m\u00e1 qualidade (estreitos ou grandes) devem ser divididos, a menos que o circunc\u00edrculo destes invada algum outro segmento da triangula\u00e7\u00e3o (segmento s\u00e3o apenas aqueles definidos no dom\u00ednio geom\u00e9trico, e n\u00e3o qualquer aresta). Neste caso, este segmento deve ser dividido tamb\u00e9m. A divis\u00e3o destas entidades que comp\u00f5e a triangula\u00e7\u00e3o \u00e9 efetuada conforme exposto no come\u00e7o desta se\u00e7\u00e3o.\nSegue, em linguagem natural, o algoritmo de refino detalhado. Primeiramente s\u00e3o apresentadas as duas rotinas b\u00e1sicas de divis\u00e3o de segmento de reta e tri\u00e2ngulo, e ent\u00e3o o algoritmo principal, que utiliza tais rotinas.\nroutine SplitTriangle( Triangle t )\nAdd circumcenter of t to V, updating DT(V)\nroutine SplitSegment( Segment s )\nAdd midpoint of s to V, updating DT(V)\nRemove s from S, add its two halves s2 and s2 to S\nalgorithm DelaunayRefine\nINPUT:\tplanar straightline graph X;\ndesired minimum angle bound a\nOUTPUT:\ttriangulation of X, with all angles > a\nInitialize\nadd a bounding square B to X:\ncompute extremes of X: xmin, ymin, xmax, ymax\nlet span(X) = Max(xmax-xmin, ymax-ymin)\nlet B be the square of side 3 X span(X), centered on X add the four boundary segments of B to X\nlet segment list S = edges of X\nlet vertex list V = vertices of X\ncompute initial Delaunay triangulation DT(V)\nrepeat\nwhile any segment s is encroached upon:\nSplitSegment( s )\nlet t be (any) skinny triangle (min angle &lt;a)\nlet p be t circumcenter\nif p encroaches upon any segment si.......sk then\nfor i=1 to k:\nSplitSegment( s\u00b1 )\nelse\nSplitTriangle( t )\t(* adds p to V *)\nendif\nuntil no segments encroached up, and no angles &lt;a output current Delaunay triangulation DT(V)\nA Fig. 67 apresenta alguns dos passos da execu\u00e7\u00e3o do algoritmo de refino de Ruppert sobre um dom\u00ednio poligonal como exemplo. Para tornar a visualiza\u00e7\u00e3o mais clara, n\u00e3o \u00e9 apresentada a fronteira envolvente. Em cada figura, o dom\u00ednio fornecido \u00e9 mostrado com linhas em negrito, enquanto que a triangula\u00e7\u00e3o de Delaunay \u00e9 sobreposta com linhas normais.\nPodemos ver na Fig. 67(a), a geometria poligonal bidimensional fornecida pelo usu\u00e1rio. Na Fig. 67(b), a triangula\u00e7\u00e3o de Delaunay do conjunto de pontos do dom\u00ednio fornecido. Observe que s n\u00e3o \u00e9 uma aresta de Delaunay, pois esta corta o segmento pq do dom\u00ednio geom\u00e9trico. Na Fig. 67(c), o segmento s \u00e9 dividido no seu ponto m\u00e9dio em duas partes: sj e s2. Ao mesmo tempo, o tri\u00e2ngulo destacado possui o menor \u00e2ngulo interno dos elementos da triangula\u00e7\u00e3o (5.9o). A cruz indica o seu circuncentro, onde ser\u00e1 adicionado mais um v\u00e9rtice. Na Fig. 67(d), o v\u00e9rtice p j\u00e1 foi adicionado, no entanto este invade os segmentos s3 e s4. Na Fig. 67(e), os segmentos s\u00e3o ent\u00e3o divididos, nos pontos q e r. Novamente, o tri\u00e2ngulo com o menor \u00e2ngulo interno \u00e9 destacado (9.8o), e a cruz representa seu circuncentro, onde um novo v\u00e9rtice ser\u00e1 adicionado. Na Fig. 67(f), o v\u00e9rtice j\u00e1 foi adicionado, e o tri\u00e2ngulo com o menor \u00e2ngulo interno novamente \u00e9 destacado. Processando sucessivamente, at\u00e9 que n\u00e3o exista nenhum triangulo com angulo interno menor que 25o, obtemos a triangula\u00e7\u00e3o da Fig. 67(g). Esta no entanto, possui tri\u00e2ngulos fora da poligonal que define o dom\u00ednio. Na Fig. 67(h) tais tri\u00e2ngulos j\u00e1 foram removidos, e a triangula\u00e7\u00e3o final \u00e9 apresentada.\n(d)\n(e)\n(f)\n(g)\t(h)\nFig. 67 - Exemplo de refino\n\u00c9 poss\u00edvel mostrar que o m\u00e9todo de refino implementado sempre encerra com sucesso para \u00e2ngulo m\u00ednimos menores que 25o. Na pr\u00e1tica, no entanto, consegue-se normalmente gerar malhas com \u00e2ngulos internos maiores que 30o.\nA extens\u00e3o do m\u00e9todo de refino tradicional para m\u00faltiplos dom\u00ednios com m\u00faltiplas conex\u00f5es est\u00e1 exatamente no momento de divis\u00e3o de um segmento. Quando um segmento, que possui uma informa\u00e7\u00e3o de conex\u00e3o, \u00e9 dividido em dois, tal divis\u00e3o deve ser refletida em todos os outros dom\u00ednios que participam da conex\u00e3o atrav\u00e9s de tal aresta. Isto faz com que exista sempre uma concord\u00e2ncia das arestas nos segmentos que conectam os dom\u00ednios.\nPela forma que o m\u00e9todo \u00e9 concebido, este n\u00e3o leva em considera\u00e7\u00e3o nenhuma informa\u00e7\u00e3o do \u00e2ngulo entre os dom\u00ednios. Por este motivo, \u00e9 como se todos os dom\u00ednios estivessem no mesmo plano, conectados por tais segmentos, mas totalmente independente com rela\u00e7\u00e3o \u00e0 todas as informa\u00e7\u00f5es morfol\u00f3gicas. Estes dom\u00ednios bidimensionais, ent\u00e3o, podem ser vistos como um conjunto de \u201clayers\u201d conectados entre si, e por isto, o nome do m\u00e9todo \u00e9 \u201ccamadas topol\u00f3gicas\u201d.\n4.4.Uni\u00e3o dos dom\u00ednios bidimensionais\nA quarta parte, da mesma forma que a primeira, \u00e9 implementada especificamente para o problema 2,5D. Nesta parte, diversas triangula\u00e7\u00f5es bidimensionais, independentes, interligadas apenas pelas informa\u00e7\u00f5es de conex\u00e3o obtidas da geometria na primeira parte, s\u00e3o convertidas em uma \u00fanica triangula\u00e7\u00e3o tridimensional.\nA primeira opera\u00e7\u00e3o que deve ser feita, ent\u00e3o, \u00e9 a renumera\u00e7\u00e3o de todos os v\u00e9rtices e arestas e \u00edndices que referenciam-se \u00e0 tais entidades. Em seguida, as coordenadas de todos os v\u00e9rtices devem ser transferidas dos dom\u00ednios bidimensionais, de volta para o dom\u00ednio tridimensional original. Isto \u00e9 feito atrav\u00e9s da multiplica\u00e7\u00e3o das coordenadas de cada v\u00e9rtice, pela matriz, Bb, obtida na se\u00e7\u00e3o 1.1.2, conforme abaixo.\nvt = Bbx vb\nonde vb \u00e9 a coordenada do v\u00e9rtice em seu respectivo dom\u00ednio bidimensional, e vt a coordenada final do v\u00e9rtice da triangula\u00e7\u00e3o no dom\u00ednio tridimensional.\nFeitas estas transforma\u00e7\u00f5es lineares, a malha tridimensional 2,5D final foi obtida.\nUm aspecto importante a ser observado \u00e9 que os v\u00e9rtices que ocupam a mesma posi\u00e7\u00e3o espacial, mas que estavam em dom\u00ednios bidimensionais diferentes (v\u00e9rtices de segmentos com conex\u00f5es) n\u00e3o s\u00e3o \u201cfundidos\u201d em um \u00fanico v\u00e9rtice. Na verdade, al\u00e9m de serem mantidos tais v\u00e9rtices, \u00e9 adicionado um novo v\u00e9rtice, no mesmo local do espa\u00e7o que estes outros, que representa a conex\u00e3o em s\u00ed. Um esquema de uma conex\u00e3o com tr\u00eas placas pode ser vista na Fig. 68.\nEsta abordagem \u00e9 extremamente interessante para lidar-se com resist\u00eancias de contato em contados com m\u00faltiplas placas, um t\u00f3pico de grande interesse nas aplica\u00e7\u00f5es que utilizam a malha aqui obtida. No exemplo da Fig. 68, os v\u00e9rtices V1, V2, V3 e Vc est\u00e3o todos na mesma coordenada espacial. No entanto, os v\u00e9rtices V1, V2 e V3, representam tal coordenada em cada uma de suas respectivas placas, enquanto que o v\u00e9rtice Vc representa tal coordenada exatamente no contato. Se estivermos utilizando um m\u00e9todo num\u00e9rico que armazena temperaturas em tais v\u00e9rtices, \u00e9 poss\u00edvel ter-se uma temperatura para cada placa, e uma temperatura representando o contato.\nFig. 68 - Esquema explodido das conex\u00f5es entre dom\u00ednios\nAo final desta etapa, temos a triangula\u00e7\u00e3o das superf\u00edcies planas 3D, considerando-se restri\u00e7\u00f5es geom\u00e9tricas dadas pelas conex\u00f5es entre estas, e com crit\u00e9rios de qualidade de malha.\n4.5.Caracter\u00edsticas computacionais do c\u00f3digo implementado\nO c\u00f3digo descrito anteriormente foi totalmente implementado em C++, com orienta\u00e7\u00e3o objeto. Tal c\u00f3digo est\u00e1 dispon\u00edvel no m\u00f3dulo cient\u00edfico da biblioteca COI-lib 2.0, e foi aplicado no do programa SATER 100, provendo a discretiza\u00e7\u00e3o para a solu\u00e7\u00e3o do problema conjugado de condu\u00e7\u00e3o e radia\u00e7\u00e3o resolvido por tal software.\nAs triangula\u00e7\u00f5es geradas por tal trabalho tamb\u00e9m foram utilizadas no trabalho de disserta\u00e7\u00e3o de mestrado entitulado \u201cSimula\u00e7\u00e3o Num\u00e9rica da Transfer\u00eancia de Calor em Problemas Radiativos Condutivos\u201d, do aluno Marcus V. F. dos Reis.\nO presente cap\u00edtulo apresenta um conjunto de malhas obtidas com o triangulador descrito no cap\u00edtulo 4. Os resultados est\u00e3o divididos em 2 grupos: bidimensionais e 2,5 dimensionais, com os resultados bidimensionais sendo utilizados para analisar o comportamento e a flexibilidade do triangulador para adaptar-se \u00e0 geometrias diversas com diferentes restri\u00e7\u00f5es geom\u00e9tricas e crit\u00e9rios de qualidade de malha. Estes resultados fornecem uma indica\u00e7\u00e3o da capacidade do m\u00e9todo desempenhar adequadamente para geometrias 2,5 dimensionais. Os resultados 2,5 dimensionais s\u00e3o o objetivo final deste trabalho.\nOs resultados bidimensionais est\u00e3o divididos em 16 casos, e os resultados 2,5 dimensionais em 3 casos. Para cada caso, s\u00e3o apresentados os seguintes dados:\n1.\tFornecidos pelo usu\u00e1rio:\no N\u00famero de v\u00e9rtices;\no N\u00famero de arestas;\no N\u00famero de furos.\n1.\tSa\u00edda do triangulador:\no Tempo total de CPU;\no N\u00famero de v\u00e9rtices;\no N\u00famero de tri\u00e2ngulos;\no N\u00famero de arestas;\no N\u00famero de arestas presentes no contorno geom\u00e9trico.\nPara os casos onde efetua-se uma an\u00e1lise param\u00e9trica, al\u00e9m dos dados citados acima, apresenta-se os valores utilizados no par\u00e2metro estudado, assim como imagens das malhas geradas e uma an\u00e1lise dos resultados obtidos no caso em considera\u00e7\u00e3o.\nPara todos os gr\u00e1ficos apresentam-se, simultaneamente, a quantidade dos diversos tipos de entidades geom\u00e9tricas utilizadas na triangula\u00e7\u00e3o na abscissa esquerda, e o tempo total de CPU, na abscissa direita.\nTodos os resultados foram obtidos utilizando-se um microcomputador Intel Pentium II 300 Mhz, com 256 Megabytes de mem\u00f3ria RAM e sistema operacional Windows NT 4.0.\n5.1.Resultados bidimensionais\n5.1.1.\tCaso 1: Quadrado com restri\u00e7\u00e3o de \u00e1rea m\u00e1xima de elementos\nO presente caso tem o objetivo de analisar o comportamento do gerador quando imposta uma restri\u00e7\u00e3o de \u00e1rea m\u00e1xima para os tri\u00e2ngulos. A geometria \u00e9 um quadrado com lado de tamanho unit\u00e1rio, e foram impostas cinco condi\u00e7\u00f5es diferentes de tamanho de malha: \u00e1rea livre e \u00e1rea m\u00e1xima de 10-1, 10'2, 10'3 e 10'4. O n\u00famero de v\u00e9rtices fornecidos \u00e9 4, com 4 segmentos.\nCaso 1\t\t\t\t\t\nInverso da \u00e1rea\t0\t10\t100\t1000\t10000\nTempo total\t44\t60\t95\t250\t971\nV\u00e9rtices\t4\t13\t81\t545\t8321\nTri\u00e2ngulos\t2\t16\t128\t1024\t16384\nArestas\t5\t28\t208\t1568\t24704\nArestas de contorno\t4\t8\t32\t64\t256\nCaso 1\nVertices\nTri\u00e2ngulos Arestas Contorno\nTempo Total\nFig. 69 - Caso 1: Gr\u00e1fico dos resultados obtidos\nConforme pode ser observado na Fig. 69, o n\u00famero de entidades geom\u00e9tricas utilizadas pelo triangulador \u00e9 linear com rela\u00e7\u00e3o ao inverso da restri\u00e7\u00e3o de \u00e1rea m\u00e1xima imposta. O tempo de CPU tamb\u00e9m apresentou-se linear quanto \u00e0 quantidade de elementos utilizadas.\nObservando a Fig. 70, vemos que o m\u00e9todo cria malhas uniformes, refinando em escala os elementos at\u00e9 que todos os tri\u00e2ngulos satisfa\u00e7am o crit\u00e9rio imposto. Como todos os tri\u00e2ngulos s\u00e3o tri\u00e2ngulos ret\u00e2ngulos is\u00f3sceles, esta triangula\u00e7\u00e3o respeita o crit\u00e9rio de m\u00ednimo \u00e2ngulo interno com valor 45o. \u00c9 importante lembrar, no entanto, que tal crit\u00e9rio foi obtido secundariamente, e n\u00e3o era o alvo da otimiza\u00e7\u00e3o.\nFig. 70 - Caso 1: visualiza\u00e7\u00e3o das triangula\u00e7\u00f5es obtidas\n5.1.2.\tCaso 2: Quadrado com refino na aresta inferior e restri\u00e7\u00e3o de m\u00ednimo \u00e2ngulo interno de elementos\nO caso 2 tem o objetivo de analisar o comportamento do triangulador quanto \u00e0 restri\u00e7\u00e3o de m\u00ednimo \u00e2ngulo interno dos tri\u00e2ngulos. A geometria \u00e9 um quadrado com lado de tamanho 1 e com uma restri\u00e7\u00e3o na aresta inferior de comprimento m\u00e1ximo de aresta dos tri\u00e2ngulos de 2x10-2. S\u00e3o utilizados 9 valores diferentes de \u00e2ngulo interno m\u00ednimo: 0o, 5o, 10o, 15o, 20o, 25o, 30o, 32o e 34o. O n\u00famero de v\u00e9rtices fornecidos \u00e9 4, e de segmentos 4.\nCaso 2\t\t\t\t\t\t\t\t\t\n\u00c2ngulo m\u00ednimo\t0\t5\t10\t15\t20\t25\t30\t32\t34\nTempo total\t50\t51\t52\t56\t58\t60\t66\t142\t347\nV\u00e9rtices\t53\t69\t84\t97\t107\t124\t202\t301\t679\nTri\u00e2ngulos\t51\t76\t104\t130\t148\t182\t326\t521\t1249\nArestas\t103\t144\t187\t226\t254\t305\t527\t821\t1927\nArestas de contorno\t53\t60\t62\t62\t64\t64\t76\t79\t107\nCaso 2\n1000\n10\nVertices\n100\nContorno\nTempo Tota,\nTri\u00e2ngulos Arestas\nFig. 71 - Caso 2: Gr\u00e1fico dos resultados obtidos\nConforme o gr\u00e1fico de resultados obtidos, podemos observar um crescimento exponencial no n\u00famero de elementos utilizados e tempo de computa\u00e7\u00e3o com rela\u00e7\u00e3o ao m\u00ednimo \u00e2ngulo interno. Este comportamento, no entanto, s\u00f3 ocorre at\u00e9 cerca de 30o, onde ent\u00e3o, o n\u00famero de elementos utilizado passa a crescer muito rapidamente.\nA explica\u00e7\u00e3o para este comportamento pode ser encontrada nas visualiza\u00e7\u00f5es das malhas obtidas na Fig. 72. Mas malhas com at\u00e9 25o de \u00e2ngulo m\u00ednimo interno, os elementos com os piores \u00e2ngulos internos encontram-se exclusivamente na fronteira inferior. Quando a restri\u00e7\u00e3o de \u00e2ngulo chega \u00e0 cerca de 30o, os elementos nesta fronteira s\u00e3o todos tri\u00e2ngulo muito pr\u00f3ximos de eq\u00fcil\u00e1tero, que \u00e9 a forma ideal de ser encontrada em uma triangula\u00e7\u00e3o. A partir deste momento, n\u00e3o interessa mais ao triangulador refinar elementos nesta regi\u00e3o, onde ent\u00e3o o processo passa a propagar-se para dentro do dom\u00ednio, conforme pode ser visto na figura com \u00e2ngulo m\u00ednimo de 34o.\nOutra informa\u00e7\u00e3o que pode ser obtida observando-se a Fig. 72, \u00e9 que o m\u00e9todo consegue uma grande varia\u00e7\u00e3o de tamanho dos elementos em uma curta dist\u00e2ncia. Isto permite, para este caso, que a grande quantidade de elementos adicionadas em fun\u00e7\u00e3o da restri\u00e7\u00e3o de m\u00ednimo \u00e2ngulo interno fique concentrada pr\u00f3xima \u00e0 aresta inferior. Para os casos 2,5D, este comportamento \u00e9 interessante, pois minimiza a influ\u00eancia em superf\u00edcies planas adjacentes de restri\u00e7\u00f5es impostas em uma superf\u00edcie plana espec\u00edfica.\nO triangulador n\u00e3o conseguiu obter, independentemente do n\u00famero de elementos utilizados, uma malha com restri\u00e7\u00e3o de \u00e2ngulo interno de 35o.\na > 5\na> 10\na >25\ta >30\ta >34\nFig. 72 - Caso 2: Visualiza\u00e7\u00e3o das triangula\u00e7\u00f5es obtidas\n5.1.3.\tCaso 3: Quadrado com refino na aresta inferior e restri\u00e7\u00e3o de m\u00ednimo \u00e2ngulo interno de elementos\nO caso 3 tem o objetivo de verificar se os comportamentos obtidos no caso 2 mant\u00e9m-se para uma restri\u00e7\u00e3o de tamanho de aresta de tri\u00e2ngulo 10 vezes menor. A geometria \u00e9 a mesma do caso 2, mas a restri\u00e7\u00e3o de tamanho m\u00e1ximo de aresta de tri\u00e2ngulo \u00e9 de 2x10- . Os \u00e2ngulos m\u00ednimos intermos admiss\u00edveis utilizados foram 0o, 10o, 20o, 30o, 32o e 33o.\nCaso 3\t\t\t\t\t\t\n\u00c2ngulo m\u00ednimo\t0\t10\t20\t30\t32\t33\nTempo total\t121\t210\t240\t351\t500\t621\nV\u00e9rtices\t503\t784\t1022\t2005\t3411\t4391\nTri\u00e2ngulos\t501\t1048\t1522\t3473\t6265\t8199\nArestas\t1003\t1831\t2543\t5477\t9675\t12589\nArestas de contorno\t503\t518\t520\t535\t555\t581\nCaso 3\n1000\nVertices Tri\u00e2ngulos\nArestas Contorno\nTempo Total\nFig. 73 - Caso 3: Gr\u00e1fico dos resultados obtidos\nOs resultados observados no gr\u00e1fico da Fig. 73 e nas visualiza\u00e7\u00f5es da Fig. 74 confirmam um comportamento do triangulador similar ao caso 2, com destaque para o n\u00famero de arestas na fronteira superior, que manteve-se praticamente igual ao caso 2 (at\u00e9 cerca de 30o).\nNa primeira visualiza\u00e7\u00e3o da Fig. 74 n\u00e3o \u00e9 poss\u00edvel identificar-se os elementos em fun\u00e7\u00e3o da excessiva concentra\u00e7\u00e3o.\na> 10\na >20\na>32\ta>33\nFig. 74 - Caso 3: visualiza\u00e7\u00e3o das triangula\u00e7\u00f5es obtidas\n5.1.4.\tCaso 4: Quadrado com refino na aresta inferior e esquerda e restri\u00e7\u00e3o de m\u00ednimo \u00e2ngulo interno de elementos\nO caso 4 tem o objetivo de verificar o comportamento observado nos casos 2 e 3 com a imposi\u00e7\u00e3o de uma restri\u00e7\u00e3o de comprimento m\u00e1ximo de aresta dos tri\u00e2ngulos na aresta inferior e esquerda da geometria. O comprimento m\u00e1ximo imposto \u00e9 igual nas duas arestas e de valor 2x10-2, e os \u00e2ngulos m\u00ednimos internos utilizados para a an\u00e1lise param\u00e9trica foram 0o, 10o, 20o, 30o, 32o e 34o. O n\u00famero de v\u00e9rtices fornecidos na geometria \u00e9 4, e de segmentos 4.\nCaso 4\t\t\t\t\t\t\n\u00c2ngulo m\u00ednimo\t0\t10\t20\t30\t32\t34\nTempo total\t52\t58\t66\t108\t121\t230\nV\u00e9rtices\t102\t148\t191\t377\t483\t980\nTri\u00e2ngulos\t100\t184\t268\t637\t842\t1810\nArestas\t201\t331\t458\t1013\t1324\t2789\nArestas de contorno\t102\t110\t112\t115\t122\t148\nCaso 4\n1000\nVertices\nTri\u00e2ngulos\n100\nArestas\nContorno\nTempo Total\nFig. 75 - Caso 4: Gr\u00e1fico dos resultados obtidos\nOs resultados observados no gr\u00e1fico da Fig. 75 e nas visualiza\u00e7\u00f5es da Fig. 76 confirmam um comportamento do triangulador similar aos casos 2 e 3.\nComo agora as restri\u00e7\u00f5es de comprimento m\u00e1ximo de aresta dos tri\u00e2ngulos foi feita para as arestas lateral esquerda e inferior, ambas passam a ser refinadas.\na > 10\na >20\na > 32\nFig. 76 - Caso 4: visualiza\u00e7\u00e3o das triangula\u00e7\u00f5es obtidas\na> 34\na > 30\n5.1.5.\tCaso 5: Quadrado com restri\u00e7\u00e3o geom\u00e9trica interna\nO caso 5 tem o objetivo de analisar o comportamento do gerador quando imposta uma restri\u00e7\u00e3o geom\u00e9trica interna no dom\u00ednio (linha grossa nas visualiza\u00e7\u00f5es da Fig. 78). A geometria \u00e9 um quadrado com lado de tamanho 1 e com uma aresta de tamanho 0,5 posicionada de forma inclinada no interior deste quadrado. Foi efetuada uma an\u00e1lise param\u00e9trica com quatro condi\u00e7\u00f5es diferentes de m\u00ednimo \u00e2ngulo interno admitido: 0o, 10o, 20o e 30o. Al\u00e9m destas, foi gerada uma triangula\u00e7\u00e3o na mesma geometria com uma \u00e1rea m\u00e1xima de elemento admitida de 10- . O n\u00famero de v\u00e9rtices fornecido \u00e9 6, e de segmentos 5.\nCaso5\t\t\t\t\t\t\nAngulo m\u00ednimo\t0\t10\t20\t30\t\u00c1rea m\u00e1xima\t0,01\nTempo total\t77\t80\t84\t90\tTempo total\t120\nV\u00e9rtices\t6\t9\t10\t18\tV\u00e9rtices\t91\nTri\u00e2ngulos\t6\t9\t11\t22\tTri\u00e2ngulos\t148\nArestas\t11\t17\t20\t39\tArestas\t238\nContorno\t4\t7\t7\t14\tContorno\t32\nCaso 5\n100\nVertices\nContorno\nTempo Total\nTri\u00e2ngulos Arestas\nFig. 77 - Caso 5: Gr\u00e1fico dos resultados obtidos\nOs resultados do caso 5 apresentaram a capacidade do triangulador respeitar \u00e2ngulos internos m\u00ednimos de valores elevados (acima de 20o) com uma quantidade muito pequena de elementos (22 elementos para o caso de 30o). Isto indica uma depend\u00eancia do n\u00famero de tri\u00e2ngulos para com o m\u00ednimo \u00e2ngulo interno apenas quando os existem tamanhos de aresta na geometria muito diferentes. Como o caso apresentado tem tamanhos de arestas entre 0,5 e 1,0, o n\u00famero de tri\u00e2ngulo utilizado foi sempre pequeno.\nA triangula\u00e7\u00e3o obtida quando imposta a restri\u00e7\u00e3o de \u00e1rea m\u00e1xima de elemento mostra a flexibilidade do triangulador de ajustar-se simultaneamente \u00e0 este crit\u00e9rio e as restri\u00e7\u00f5es geom\u00e9tricas. Apesar do n\u00famero de elementos utilizador ser consideravelmente maior que o esperado (foram utilizador 148 tri\u00e2ngulos quando o esperado seria exatamente 100), o triangulador mostrou sua efici\u00eancia n\u00e3o precisando executar nenhum tipo de refino local em torno da restri\u00e7\u00e3o geom\u00e9trica para conseguir adequar-se a ela.\nFig. 78 - Caso 5: visualiza\u00e7\u00e3o das triangula\u00e7\u00f5es obtidas\n5.1.6.\tCaso 6: Quadrado com aresta interna e refino em na aresta\nO caso 6 tem o objetivo de analisar o comportamento do gerador apresentado nos casos 2 e 3, quando utilizada uma geometria similar a do caso 5. Enquanto que no caso 2 e 3 era imposto um refinamento na fronteira, no presente caso temos um refinamento imposto no interior do dom\u00ednio. A geometria utilizada \u00e9 exatamente igual ao caso 5, mas com uma restri\u00e7\u00e3o de comprimento m\u00e1ximo de aresta da triangula\u00e7\u00e3o de 2x10-2. Foram impostas cinco condi\u00e7\u00f5es de m\u00ednimo \u00e2ngulo interno admitido (0o, 10o, 20o, 30o, 32o e 34o). O n\u00famero de v\u00e9rtices e segmentos fornecidos s\u00e3o 6 e 5, respectivamente.\nCaso 6\t\t\t\t\t\t\n\u00c2ngulo m\u00ednimo\t0\t10\t20\t30\t32\t34\nTempo total\t44\t56\t68\t114\t159\t854\nV\u00e9rtices\t55\t118\t180\t383\t628\t3966\nTri\u00e2ngulos\t104\t220\t343\t738\t1211\t7784\nArestas\t158\t337\t522\t1120\t1838\t11749\nArestas de contorno\t4\t14\t15\t26\t43\t146\nCaso 6\n1000\nVertices\n100\nContorno\nTempo Total\nTri\u00e2ngulos Arestas\nFig. 79 - Caso 6: Gr\u00e1fico dos resultados obtidos\nOs resultados obtidos foram similares aos casos 2 e 3, onde:\n\u2022\tOs elementos adicionados pelo refino para respeitar o crit\u00e9rio de m\u00ednimo \u00e2ngulo interno localizaram-se muito pr\u00f3ximos a aresta com restri\u00e7\u00e3o de comprimento m\u00e1ximo;\n\u2022\tO n\u00famero de elementos cresce exponencialmente com o \u00e2ngulo, at\u00e9 \u00e2ngulos pr\u00f3ximos a 30o, quando ent\u00e3o o refino de malha propaga-se para o interior do dom\u00ednio, adicionando elementos longe dos pontos onde foram impostas as restri\u00e7\u00f5es;\n\u2022\tO triangulador n\u00e3o conseguiu gerar uma malha com \u00e2ngulo interno m\u00ednimo de 35o;\n\u2022\tA influ\u00eancia do refino nas arestas de fronteira \u00e9 bastante pequena at\u00e9 cerca de 30o. Isto \u00e9 interessante para o m\u00e9todo de gera\u00e7\u00e3o 2,5D pois minimiza a influ\u00eancia em dom\u00ednios vizinhos de restri\u00e7\u00f5es impostas em um determinado dom\u00ednio;\na> 10\na > 0\na > 20\na> 30\na> 32\na > 34\n5.1.7.\tCaso 7: Quadrado com aresta interna e refino em na aresta (caso 6 refinado)\nO caso 7 tem o objetivo de verificar o comportamento observado no caso 6, mas com uma restri\u00e7\u00e3o de comprimento m\u00e1ximo de aresta dos tri\u00e2ngulos 10 vezes maior. O comprimento m\u00e1ximo de aresta admitido \u00e9 2x10-3, e foram utilizados 4 valores de \u00e2ngulo interno m\u00ednimo dos tri\u00e2ngulos na an\u00e1lise param\u00e9trica: 0o, 20o, 30o e 32o. O n\u00famero de v\u00e9rtices na geometria fornecida \u00e9 6 e de segmentos 5.\nCaso 7\t\t\t\t\n\u00c2ngulo m\u00ednimo\t0\t20\t30\t32\nTempo total\t146\t473\t948\t1152\nV\u00e9rtices\t505\t1559\t3961\t6849\nTri\u00e2ngulos\t1004\t3102\t7882\t13635\nArestas\t1508\t4660\t11842\t20483\nArestas de contorno\t4\t14\t38\t61\nCaso 7\nVertices\nTri\u00e2ngulos Arestas\nContorno\nTempo Total\nFig. 81 - Caso 7: Gr\u00e1fico dos resultados obtidos\nOs resultados observados no gr\u00e1fico da Fig. 81 e nas visualiza\u00e7\u00f5es da Fig. 82 confirmam um comportamento do triangulador similar ao caso 7, com destaque para o n\u00famero de arestas na fronteira superior, que manteve-se praticamente igual ao caso 2 (at\u00e9 cerca de 30o ).\na > 0\na >20\na> 30\na> 32\n5.1.8.\tCaso 8: Geometria qualquer com restri\u00e7\u00e3o geom\u00e9trica interna\nO caso 8 tem o objetivo de demonstrar a capacidade do triangulador de conformar-se \u00e0 geometrias diversas, com m\u00faltiplas arestas interna e furos no dom\u00ednio. A geometria fornecida cont\u00e9m 23 v\u00e9rtices, 22 segmentos e 1 furo, e foram impostas restri\u00e7\u00f5es simult\u00e2neas de -2\nm\u00e1xima \u00e1rea dos tri\u00e2ngulos de 5x10- , e m\u00ednimo \u00e2ngulo interno de 30 graus.\nCaso 8\t\nTempo total\t110\nV\u00e9rtices\t603\nTri\u00e2ngulos\t1107\nArestas\t1710\nArestas de contorno\t135\nO resultado deste caso, mostrado na Fig. 84, apresenta uma triangula\u00e7\u00e3o com um tamanho uniforme de elementos e sem a utiliza\u00e7\u00e3o de nenhum tipo de refino local para respeitar-se as restri\u00e7\u00f5es geom\u00e9tricas impostas. O tempo de gera\u00e7\u00e3o pode ser considerado bastante baixo (pouco mais de um d\u00e9cimo de segundo), e a quantidade de elementos utilizada excede por pouco o esperado (1107 contra um \u00f3timo de 900 elementos, dado que a \u00e1rea da figura \u00e9 aproximadamente 45 unidades de \u00e1rea).\nFig. 84 - Caso 8: visualiza\u00e7\u00e3o da triangula\u00e7\u00e3o obtida\n5.1.9.\tCaso 9: Quadrado com restri\u00e7\u00e3o pontual de comprimento m\u00e1ximo de tri\u00e2ngulos na fronteira e m\u00ednimo \u00e2ngulo interno dos elementos\nO caso 9 tem o objetivo de analisar o comportamento do triangulador quando varia-se o comprimento de uma restri\u00e7\u00e3o geom\u00e9trica na fronteira e mant\u00e9m-se fixo o m\u00ednimo \u00e2ngulo interno admiss\u00edvel dos elementos. Estes tipo de restri\u00e7\u00e3o geom\u00e9trica serve para a aplica\u00e7\u00e3o de condi\u00e7\u00f5es de contorno em comprimentos muito pequenos nas fronteiras do dom\u00ednios. Um exemplo pr\u00e1tico da aplica\u00e7\u00e3o deste tipo de condi\u00e7\u00e3o de contorno \u00e9 a inje\u00e7\u00e3o de um fluido em um dom\u00ednio atrav\u00e9s de um pequeno orif\u00edcio ou a gera\u00e7\u00e3o localizada de calor. A geometria do presente caso \u00e9 um quadrado de lado 1, com a restri\u00e7\u00e3o geom\u00e9trica centrada na aresta esquerda. Os comprimentos utilizados na an\u00e1lise param\u00e9trica foram 2x10-1, 2x10-2, 2x10-3, 2x10-4 e 2x10-5, e a restri\u00e7\u00e3o de m\u00ednimo \u00e2ngulo interno dos elementos foi fixada em 32 graus. O n\u00famero de v\u00e9rtices da geometria fornecida \u00e9 6, e o de segmentos 6.\nCaso 9\t\t\t\t\t\nInverso da aresta\t5\t50\t500\t5000\t50000\nTempo total\t19\t39\t80\t169\t180\nV\u00e9rtices\t17\t54\t231\t487\t649\nTri\u00e2ngulos\t21\t87\t411\t897\t1207\nArestas\t37\t140\t641\t1383\t1855\nArestas de contorno\t11\t19\t49\t75\t89\nCaso 9\nInverso da aresta\nVertices\nTri\u00e2ngulos Arestas\n\u20143K\u2014 Contorno\nTempo Total\nFig. 85 - Caso 9: Gr\u00e1fico dos resultados obtidos\nOs resultados obtidos apresentaram uma varia\u00e7\u00e3o dos par\u00e2metros de sa\u00edda do triangulador linear com rela\u00e7\u00e3o ao inverso do comprimento da aresta. Novamente, de forma positiva, a influ\u00eancia do refino concentrou-se praticamente apenas na regi\u00e3o da restri\u00e7\u00e3o. \u00c9 importante lembrar que todos os resultados consideraram um \u00e2ngulo m\u00ednimo interno dos elementos de 32o, o que \u00e9 um valor quase cr\u00edtico conforme os resultados anteriores.\nd = 2x1o'1\nd = 2xl0'2\nd = 2x10'3\nd = 2x10'4\n5.1.10.\tCaso 10: Quadrado com restri\u00e7\u00e3o pontual de comprimento m\u00e1ximo de tri\u00e2ngulos no interior do dom\u00ednio e m\u00ednimo \u00e2ngulo interno dos elementos\nO caso 10 tem o objetivo de verificar se o comportamento apresentado no caso 9, onde a restri\u00e7\u00e3o geom\u00e9trica \u00e9 na fronteira, permanece quando deslocamos tal restri\u00e7\u00e3o para o interior do dom\u00ednio. A geometria utilizada \u00e9 um quadrado de lado 1, com uma restri\u00e7\u00e3o geom\u00e9trica inclinada localizada no interior de tal quadrado. Foram utilizados comprimentos de aresta de 2x10-1, 2x10-2, 2x10-3, 2x10-4 e 2x10-5 na an\u00e1lise param\u00e9trica, e restri\u00e7\u00e3o de m\u00ednimo \u00e2ngulo interno dos elementos fixa de 32 graus. A geometria fornecida possui 6 v\u00e9rtices e 5 segmentos.\nCaso 10\t\t\t\t\t\nInverso da aresta\t5\t50\t500\t5000\t50000\nTempo total\t17\t52\t166\t325\t355\nV\u00e9rtices\t12\t111\t615\t1293\t1524\nTri\u00e2ngulos\t14\t195\t1184\t2533\t3004\nArestas\t25\t305\t1798\t3825\t4527\nArestas de contorno\t8\t25\t44\t51\t42\nCaso 10\nInverso da aresta\nVertices\nTri\u00e2ngulos Arestas\nContorno\nTempo Total\nFig. 87 - Caso 10: Gr\u00e1fico dos resultados obtidos\nOs resultados observados no gr\u00e1fico da Fig. 87 e nas visualiza\u00e7\u00f5es da Fig. 88 confirmam um comportamento do triangulador similar ao caso 9.\n5.1.11.\tCaso 11: Aproxima\u00e7\u00e3o de fronteira curva por segmentos de reta\nO caso 11 tem o objetivo de analisar o comportamento do gerador para diferentes n\u00edveis de aproxima\u00e7\u00e3o de uma fronteira curva do dom\u00ednio por um conjunto de segmentos de reta. A geometria \u00e9 um quadrado com lado de tamanho 1 e com o canto superior esquerdo formado por um arco de circunfer\u00eancia de raio 0,3. Foram considerados cinco diferentes n\u00edveis de aproxima\u00e7\u00e3o da curva na an\u00e1lise param\u00e9trica, utilizando 5, 10, 50, 100 e 500 segmentos de reta, e imposta uma restri\u00e7\u00e3o de m\u00ednimo \u00e2ngulo interno dos elementos de 20o. O n\u00famero de v\u00e9rtices do dom\u00ednio geom\u00e9trico fornecido \u00e9 4 mais a quantidade de v\u00e9rtices utilizadas na aproxima\u00e7\u00e3o do arco de circunfer\u00eancia.\nCaso 11\t\t\t\t\t\nNumero de arestas\t5\t10\t50\t100\t500\nTempo total\t26\t32\t52\t67\t317\nV\u00e9rtices\t19\t31\t114\t214\t1037\nTri\u00e2ngulos\t23\t40\t164\t310\t1552\nArestas\t41\t70\t277\t523\t2588\nArestas de contorno\t13\t20\t62\t116\t520\nCaso 11\nVertices\nTri\u00e2ngulos\nArestas\nContorno\nTempo Total\nFig. 89 - Caso 11: Gr\u00e1fico dos resultados obtidos\nOs resultados obtidos para este caso s\u00e3o compat\u00edveis com os resultados apresentados nos casos anteriores. A quantidade de elementos utilizada na triangula\u00e7\u00e3o apresentou-se linear com rela\u00e7\u00e3o ao n\u00famero de segmentos de reta utilizados na aproxima\u00e7\u00e3o, e o refino de malha para respeitar o crit\u00e9rio de m\u00ednimo \u00e2ngulo interno dos tri\u00e2ngulo localizou pontos basicamente pr\u00f3ximos \u00e0 fronteira curva.\nUm aspecto interessante de ser observado, no entanto, foi com rela\u00e7\u00e3o ao tempo de CPU consumido. Este apresentou um comportamento n\u00e3o-linear, diferentemente do caso 2, por exemplo. Esta resposta deve-se ao posicionamento dos pontos de fronteira de forma cocircular. Este pontos definem uma triangula\u00e7\u00e3o inicial degenerada, a qual o triangulador consome mais tempo para efetuar os c\u00e1lculos. Passada a etapa de obten\u00e7\u00e3o da triangula\u00e7\u00e3o inicial, o m\u00e9todo de refino adiciona novos pontos para respeitar o crit\u00e9rio de m\u00ednimo \u00e2ngulo interno, e com isso eliminar tal degenera\u00e7\u00e3o.\nn = 500\n5.1.12.\tCaso 12: Quadrado com furo central\nO caso 12 tem o objetivo de verificar o comportamento observado nos casos 2, 3 e 11, mas com a aproxima\u00e7\u00e3o de uma fronteira curva no interior do dom\u00ednio. A geometria \u00e9 um quadrado com lado de tamanho 1 e um furo central aproximado por 20 segmentos de reta. Para a an\u00e1lise param\u00e9trica foram impostas restri\u00e7\u00f5es de m\u00ednimo \u00e2ngulo interno com valores variando em 0o, 10o, 20o, 30o, 32o e 34o. O n\u00famero de v\u00e9rtices na geometria fornecida \u00e9 24, e de segmentos 24.\nCaso 12\t\t\t\t\t\t\nNumero de arestas\t0\t10\t20\t30\t32\t34\nTempo total\t76\t84\t90\t97\t102\t108\nV\u00e9rtices\t24\t40\t60\t94\t98\t107\nTri\u00e2ngulos\t24\t44\t84\t138\t146\t164\nArestas\t48\t84\t144\t232\t244\t271\nArestas de contorno\t24\t36\t36\t50\t50\t50\nCaso 12\n100\n1000\nVertices\nContorno\nTempo Total\nTri\u00e2ngulos Arestas\nFig. 91 - Caso 12: Gr\u00e1fico dos resultados obtidos\nOs resultados apresentados no gr\u00e1fico da Fig. 91 e nas visualiza\u00e7\u00f5es da Fig. 92 confirmam o comportamento do caso 12 similar aos casos 2, 3 e 11, com destaque para a pequena quantidade de elementos utilizada, devido \u00e0 similaridade no comprimento das arestas da geometria fornecida.\na>0\ta >10\ta >20\na > 30\na> 34\na > 32\n5.1.13.\tCaso 13: Ret\u00e2ngulo com furos internos e refino vertical\nO presente tem o objetivo analisar o comportamento do gerador quando variando o n\u00famero de furos internos na geometria. A geometria utilizada \u00e9 um ret\u00e2ngulo de altura 1, e comprimento 1, 1.7 e 2.4 para um, dois e tr\u00eas furos, respectivamente. A aproxima\u00e7\u00e3o dos furos internos foram feitas utilizando 100 arestas em cada, e no refino vertical foram impostos uma condi\u00e7\u00e3o m\u00ednima de 30 elementos. O m\u00ednimo \u00e2ngulo interno admitido \u00e9 de 30o. A geometria fornecida possui, respectivamente, 104, 204 e 304 v\u00e9rtices, e 104, 204 e 304 segmentos.\nCaso 13\t\t\t\nN\u00famero de furos\t1\t2\t3\nTempo total\t160\t250\t331\nV\u00e9rtices\t913\t1754\t2398\nTri\u00e2ngulos\t1669\t3226\t4382\nArestas\t2582\t4981\t6781\nArestas de contorno\t157\t284\t418\nCaso 13\n&amp; o \u25a0a\nc \u25a1 \u25a1) (D\nVertices\nTri\u00e2ngulos\nArestas\nContorno\nTempo Total\nFig. 93 - Caso 13: Gr\u00e1fico dos resultados obtidos\nO triangulador, de forma bastante positiva, mostrou-se insens\u00edvel \u00e0 conexidade da geometria, com um comportamento praticamente linear nos par\u00e2metros de sa\u00edda.\nUm furo\tDois furos\nTr\u00eas furos\nFig. 94 - Caso 13: visualiza\u00e7\u00e3o das triangula\u00e7\u00f5es obtidas\n5.1.14.\tCaso 14: Geometria do VLS com restri\u00e7\u00e3o de m\u00ednimo \u00e2ngulo interno\nO caso 14, juntamente com o caso 15 e 16, representam os testes com o triangulador em geometrias reais. O caso 14 consiste na an\u00e1lise param\u00e9trica do comportamento do triangulador com rela\u00e7\u00e3o a varia\u00e7\u00e3o da restri\u00e7\u00e3o de m\u00ednimo \u00e2ngulo interno dos tri\u00e2ngulos em uma geometria externa da parte frontal do VLS (Ve\u00edculo Lan\u00e7ador de Sat\u00e9lites Brasileiro). A geometria fornecida ao gerador \u00e9 o contorno externo apresentado na figura Fig. 96, onde s\u00e3o utilizados 10 segmentos de reta para aproximar o arco de circunfer\u00eancia do bico do foguete, e 20 segmentos de reta no arco de oval do contorno externo. Os \u00e2ngulos utilizados na an\u00e1lise foram 0o, 10o, 20o, 30o e 32o, e a geometria fornecida cont\u00e9m 36 v\u00e9rtices e 36 segmentos.\nCaso 14\t\t\t\t\t\n\u00c2ngulo m\u00ednimo\t0\t10\t20\t30\t32\nTempo total\t41\t50\t60\t80\t95\nV\u00e9rtices\t36\t53\t70\t147\t220\nTri\u00e2ngulos\t34\t60\t89\t237\t376\nArestas\t69\t112\t158\t383\t595\nArestas de contorno\t36\t44\t49\t55\t62\nCaso 14\n100\n10\n<A O \u25a0D\nc D O)\n0) cn\nVertices\nTri\u00e2ngulos\nArestas\nContorno\nTempo Total\nFig. 95 - Caso 14: Gr\u00e1fico dos resultados obtidos\nConforme pode ser observado nos resultados, o n\u00famero de elementos utilizado foi baixo, demonstrando, de forma positiva, uma insensibilidade do m\u00e9todo ao tipo de geometria utilizada. Com isto, podemos concluir que as geometrias que estavam sendo testadas at\u00e9 aqui, que por praticidade e facilidade de an\u00e1lise eram geometrias quadradas, n\u00e3o invalidam as an\u00e1lises efetuadas.\nA maior parte dos elementos concentrou-se na regi\u00e3o do bico do foguete, e o n\u00famero de arestas de contorno foi praticamente igual ao valor de entrada, sendo que as arestas de contorno adicionadas est\u00e3o todas nos segmentos retos com comprimento maior e pr\u00f3ximas ao bico tamb\u00e9m.\nOs resultados confirmam mais uma vez que a depend\u00eancia do n\u00famero de elementos com o \u00e2ngulo interno m\u00ednimo existe praticamente apenas quando s\u00e3o fornecidas arestas de contorno de comprimentos bastante diferentes.\nDa mesma forma que em todos os outros casos, a malha n\u00e3o apresenta dire\u00e7\u00f5es preferenciais, o que pode ser um fator positivo ou negativo, dependendo do contexto da aplica\u00e7\u00e3o.\nUm \u00faltimo aspecto interessante de ser observado \u00e9 que para \u00e2ngulos de at\u00e9 cerca de 30o, o tamanho m\u00e9dio dos tri\u00e2ngulos obtidos \u00e9 bastante similar ao tamanho das aresta de contorno pr\u00f3ximas a este.\na > 20\na > 30\na> 32\nFig. 96 - Caso 14: visualiza\u00e7\u00e3o das triangula\u00e7\u00f5es obtidas\n5.1.15.\tCaso 15: Geometria do VLS com restri\u00e7\u00e3o de m\u00e1xima \u00e1rea de elementos\nO caso 15 tem um objetivo similar ao caso 14, mas utilizando como restri\u00e7\u00e3o o tamanho m\u00e1ximo dos elementos. A geometria \u00e9 exatamente a mesma do caso 14.\nCaso 15\t\t\t\t\t\t\nInverso \u00e1rea\t0\t0,1\t1\t10\t100\t1000\nTempo Total\t41\t52\t140\t786\t7152\t71321\nV\u00e9rtices\t36\t68\t392\t3501\t33714\t335472\nTri\u00e2ngulos\t34\t88\t680\t6726\t66536\t668176\nArestas\t69\t155\t1071\t10226\t100249\t1003647\nArestas de contorno\t36\t46\t102\t274\t890\t2766\nCaso 15\nVertices\nTri\u00e2ngulos\nArestas\nContorno\nTempo Total\no\nFig. 97 - Caso 15: Gr\u00e1fico dos resultados obtidos\nOs resultados apresentados confirmam uma independ\u00eancia do triangulador quanto a geometria tamb\u00e9m quando utilizando-se restri\u00e7\u00e3o de \u00e1rea m\u00e1xima dos tri\u00e2ngulos.\nUm detalhe interessante \u00e9 que os elementos da regi\u00e3o pr\u00f3xima ao bico do foguete (segmentos fornecidos de menor comprimento) tem \u00e2ngulos internos ruins at\u00e9 restri\u00e7\u00f5es de \u00e1reas de 10-0. Apenas quando a restri\u00e7\u00e3o de \u00e1rea de 10-1 \u00e9 aplicada, quando ent\u00e3o os elementos internos passam a ter arestas de comprimento similares \u00e0s arestas fornecidas no bico, \u00e9 que a malha passa a ter elementos de boa qualidade em todo o dom\u00ednio.\nNovamente, a malha apresentou elementos de tamanho uniforme sem nenhuma dire\u00e7\u00e3o preferencial.\n2\t3\nAs malhas para os casos de restri\u00e7\u00e3o de \u00e1rea m\u00e1ximo de tri\u00e2ngulo de 10- e 10- servem apenas para ilustrar a capacidade do triangulador de gerar malhas com uma grande quantidade de elementos. Mesmo nestes dois n\u00edveis de refino (acima de 100mil tri\u00e2ngulos), o triangulador apresentou um comportamento praticamente linear do tempo de computa\u00e7\u00e3o em rela\u00e7\u00e3o ao n\u00famero de elementos.\na<10-2\na<- iu\nFig. 98 - Caso 15: visualiza\u00e7\u00e3o das triangula\u00e7\u00f5es obtidas\n5.1.16.\tCaso 16: Geometria do VLS com refino na regi\u00e3o de choque\nO ultimo caso bidimensional apresentado neste trabalho tem o objetivo de analisar o comportamento do triangulador em uma geometria real, com restri\u00e7\u00f5es simult\u00e2neas de m\u00ednimo \u00e2ngulo interno dos elementos e refino na suposta regi\u00e3o de choque. Esta regi\u00e3o de choque pode ir sendo captada adaptativamente durante a solu\u00e7\u00e3o. A geometria utilizada \u00e9 similar aos casos 14 e 15, mas com 50 arestas na aproxima\u00e7\u00e3o do bico do foguete. Para todos os casos, o m\u00ednimo \u00e2ngulo interno admitido dos elementos \u00e9 30o, e a an\u00e1lise param\u00e9trica foi feita sobre o tamanho de elemento admitido no choque, onde foram utilizadas restri\u00e7\u00f5es de comprimento de 1x10 , 5x10- , 2,5x10- , 1x10- e 5x10- , sendo o per\u00edmetro total do oval 50. Os resultados s\u00e3o analisados contra o n\u00famero total de arestas utilizados no refino.\nCaso 16\t\t\t\t\t\nArestas no refino\t50\t100\t200\t500\t1000\nTempo Total\t121\t219\t366\t836\t1732\nV\u00e9rtices\t402\t732\t1439\t3466\t7308\nTri\u00e2ngulos\t717\t1367\t2772\t6811\t14485\nArestas\t1118\t2098\t4210\t10276\t21792\nArestas de contorno\t85\t95\t104\t119\t129\nCaso 16\nVertices\nTri\u00e2ngulos\nArestas\nContorno\nTempo Total\nFig. 99 - Caso 16: Gr\u00e1fico dos resultados obtidos\nConforme pode ser observado nos resultados apresentados no gr\u00e1fico da Fig. 99, o triangulador apresentou uma caracter\u00edstica linear quanto ao n\u00famero de arestas na regi\u00e3o do refino.\nDevido \u00e0 restri\u00e7\u00e3o de m\u00ednimo \u00e2ngulo interno de 30o para todas as malhas, desde a primeira malha a regi\u00e3o do bico do foguete possui um refino consider\u00e1vel de elementos.\nA regi\u00e3o de influ\u00eancia do refino manteve-se praticamente inalterada, independente do n\u00famero de arestas impostas em tal regi\u00e3o. Isto \u00e9 extremamente interessante pois pode-se impor tamanhos de elementos extremamente pequenos sem aumentar ou influenciar a malha em regi\u00f5es que n\u00e3o s\u00e3o de interesse. Ou seja, o refino n\u00e3o se propaga exageradamente.\nFora a regi\u00e3o do refino, onde foi imposta a condi\u00e7\u00e3o de que os elementos fossem tangentes \u00e0 curva de refino, a malha n\u00e3o apresentou dire\u00e7\u00e3o preferencial.\nDe uma forma geral, o triangulador apresentou um comportamento extremamente interessante para a sua utiliza\u00e7\u00e3o em simuladores adaptativos, lembrando que a restri\u00e7\u00e3o de m\u00ednimo \u00e2ngulo interno foi, para todas as malhas, fixa em 30o, o que \u00e9 uma condi\u00e7\u00e3o excelente de qualidade de malha para simula\u00e7\u00e3o.\nn = 50\tn = 100\nn = 200\tn = 500\nn= 1000\nFig. 100 - Caso 16: visualiza\u00e7\u00e3o das triangula\u00e7\u00f5es obtidas\n5.2.Resultados 2,5 dimensionais\n5.2.1.\tCaso 17: Jun\u00e7\u00e3o de quadril\u00e1teros\nO primeiro caso para dimens\u00e3o 2,5D procura englobar os comportamentos apresentados nos casos de 1 a 10, afim de verificar se tais comportamentos mant\u00e9m-se na adapta\u00e7\u00e3o do gerador para estes dom\u00ednios.\nA geometria utilizada s\u00e3o duas placas, uma horizontal e uma vertical. A placa horizontal \u00e9 um quadrado de lado 1, e a vertical um ret\u00e2ngulo de 0,5 por 1. A placa vertical encosta na placa horizontal de forma inclinada no seu interior, formando uma restri\u00e7\u00e3o geom\u00e9trica. Em tal restri\u00e7\u00e3o geom\u00e9trica, restri\u00e7\u00f5es de m\u00e1ximo comprimento de aresta dos tri\u00e2ngulos e m\u00ednimo \u00e2ngulo interno dos tri\u00e2ngulos foram impostas.\nA an\u00e1lise param\u00e9trica foi efetuada sobre dois par\u00e2metros. Utilizou-se tr\u00eas valores diferentes de comprimento m\u00e1ximo admitido de aresta: 5x10- , 1x10- e 5x10- . Para cada comprimento m\u00e1ximo de aresta, foi variado o m\u00ednimo \u00e2ngulo interno admitido, utilizando-se valores de 0o, 10o, 20o e 30o. O n\u00famero de v\u00e9rtices na geometria fornecida \u00e9 8, e de segmentos 8.\nOs resultados mostrados em Fig. 101, Fig. 102 e Fig. 103 apresentaram um comportamento bastante similar aos casos de 1 a 10:\n\u2022\tO triangulador tem uma resposta linear dos seus par\u00e2metros de sa\u00edda quanto ao inverso do comprimento m\u00e1ximo de aresta;\n\u2022\tO triangulador tem uma resposta exponencial dos seus par\u00e2metros de sa\u00edda quanto ao m\u00ednimo \u00e2ngulo de aresta at\u00e9 \u00e2ngulos de cerca de 30o. Para \u00e2ngulos maiores que 30o, o n\u00famero entidades utilizadas cresce demasiadamente. Para \u00e2ngulos maiores que 34o, o gerador n\u00e3o consegue obter uma triangula\u00e7\u00e3o que respeite tais crit\u00e9rios;\n\u2022\tO refino localizou-se fundamentalmente pr\u00f3ximo a aresta com restri\u00e7\u00e3o de comprimento m\u00e1ximo de elementos.\na> 10\nCaso 17 com 20 arestas na conex\u00e3o\t\t\t\t\n\u00c2ngulo m\u00ednimo\t0\t10\t20\t30\nTempo Total\t80\t120\t170\t210\nV\u00e9rtices\t48\t86\t127\t284\nTri\u00e2ngulos\t65\t128\t206\t498\nArestas\t111\t212\t331\t780\nCaso 17 com 20 arestas na conex\u00e3o\na >20\ta >30\n1000 -------------------------------------------1- 1000\n10 -I--1-----1------1----1-----1---- 10\n0\t5\t10\t15\t20\t25\t30\n\u00c2ngulo m\u00ednimo\nCaso 17 com 50 arestas na conex\u00e3o\t\t\t\t\n\u00c2ngulo m\u00ednimo\t0\t10\t20\t30\nTempo Total\t120\t150\t175\t200\nV\u00e9rtices\t108\t201\t291\t658\nTri\u00e2ngulos\t155\t329\t497\t1203\nArestas\t261\t531\t786\t1859\nCaso 17 com 50 arestas na conex\u00e3o\n0\t5\t10\t15\t20\t25\t30\n\u00c2ngulo m\u00ednimo\nVertices\nTri\u00e2ngulos\nArestas\nTempo Total\nCaso 17 com 100 arestas na conex\u00e3o\t\t\t\t\n\u00c2ngulo m\u00ednimo\t0\t10\t20\t30\nTempo Total\t120\t160\t180\t240\nV\u00e9rtices\t208\t389\t548\t1287\nTri\u00e2ngulos\t305\t647\t962\t2407\nArestas\t511\t1034\t1508\t3693\nCaso 17 com 100 arestas na conex\u00e3o\na >20\ta >30\nVertices\nTri\u00e2ngulos\nArestas\nTempo Total\n5.2.2.\tCaso 18: Jun\u00e7\u00e3o de elementos planos curvos\nO segundo caso para dimens\u00e3o 2,5D tem o objetivo de verificar o comportamento do gerador quando utilizando-se geometrias interconectados com fronteiras curvas aproximadas por segmentos de reta. A geometria \u00e9 composta por um disco com um furo quadrado, encaixado perpendicularmente com um ret\u00e2ngulo com um furo semi-circular. A circunfer\u00eancia da base \u00e9 aproximada por 200 segmentos de reta, e a semi-circunfer\u00eancia do plano vertical \u00e9 aproximada por 100 segmentos de reta. A an\u00e1lise param\u00e9trica \u00e9 efetuada sobre o m\u00ednimo \u00e2ngulo interno admitido, utilizando-se valores de 0o, 10o, 20o e 30o. A geometria fornecida contem 308 v\u00e9rtices, 308 segmentos de reta e 1 furo.\nCaso 18\t\t\t\t\nAngulo m\u00ednimo\t0\t10\t20\t30\nTempo total\t110\t170\t190\t210\nV\u00e9rtices\t311\t482\t668\t1296\nTri\u00e2ngulos\t309\t605\t957\t2175\nArestas\t619\t1082\t1620\t3466\nCaso 18\n100\n1000\nVertices Triangulos Arestas Tempo Total\nFig. 104 - Caso 18: Gr\u00e1fico dos resultados obtidos\nOs resultados obtidos com tal caso foram similares aos obtidos anteriormente, com destaque para um efeito que pode ser observado na Fig. 106: o refino dos elementos na placa vertical pr\u00f3ximo \u00e0 aresta curva, necess\u00e1rio para manter-se a condi\u00e7\u00e3o de m\u00ednimo \u00e2ngulo interno, propaga-se para a placa horizontal, onde n\u00e3o seria necess\u00e1rio um refino para manter-se tal crit\u00e9rio. Este fen\u00f4meno mostra a interconectividade entre os dom\u00ednios, onde os elementos \u00e0 serem refinados s\u00e3o escolhidos pelo m\u00e9todo nos diversos dom\u00ednios planos simultaneamente.\na> 0\na> 10\na > 20\na> 30\nFig. 105 - Caso 18: visualiza\u00e7\u00e3o das triangula\u00e7\u00f5es obtidas\na > 20\na> 30\n5.2.3.\tCaso 19: Geometria final\nO ultimo caso do presente trabalho \u00e9 uma ilustra\u00e7\u00e3o de todos os aspectos envolvidos nos casos anteriores em uma \u00fanica geometria 2,5D. A geometria cont\u00e9m 192 v\u00e9rtices, 196 arestas e 2 furos, e todos os elementos possuem \u00e2ngulos internos de no m\u00ednimo 30o.\nCaso 19\t\nTempo total\t611\nV\u00e9rtices\t3056\nTri\u00e2ngulos\t5335\nArestas\t8386\nFig. 107 - Caso 19: visualiza\u00e7\u00e3o das triangula\u00e7\u00f5es obtidas\n[1]\tAEA Technology. \u201cBuild 4.3 - users manual\u201d, 1999.\n[2]\tAGGARWAL, A., GUIBAS, L. J., SAXE, J. e SHOR, P. W. \u201cA linear-time algorithm for computing the Voronoi diagram of convex polygon\u201d. Discretization and Computational Geometry, vol. 4, p. 591-604, 1989.\n[3]\tAURENHAMMER, F. \u201cVoronoi diagrams - a survey of a fundamental geometric data structure\u201d. Anais ACM Computing Surveys, vol. 23, p. 345-405, 1991.\n[4]\tAVNAIM, F., BOISSONNAT, J-D, DEV-ILLERS, O., PREPARATA, F. P. e YVINEC, M. \u201cEvaluating signs of determinants using single-precision arithmetic\u201d,\n1995.\n[5]\tBABUSKA, I. e AZIZ, A. K. \u201cOn the angle condition in the finite element method\u201d. SIAM Journal on Numerical Analysis, vol. 13, no 2, p. 214-226, 1976.\n[6]\tBAKER, T. J. \u201dAutomatic mesh generation for complex three-dimensional regions using a constrained Delaunay triangulation\u201d. Engineering with Computers, no 5, p. 161-175, 1989.\n[7]\tBAKER, B., GROSSE, E. e RAFFERTY, C. S. \u201cNon-obtuse triangulation of polygons\u201d. Discrete and Computational Geometry, vol. 3, p. 147-168, 1988.\n[8]\tBALIGA, B. R. and PATANKAR, S. V. \u201cA new finite element formulation for convection-diffusion problems\u201d, Numerical Heat Transfer, vol. 3, p. 939-409, 1980.\n[9]\tBANK, R. E., \u201cPLTMG User's Guide\u201d. SIAM, 1990.\n[10]\tBANK, R. E., SHERMANN, A. H. e WEISER, A. \u201cRefinement algorithms and data structures for irregular local mesh refinement\u201d. R. Stepleman et al., Scientific Computing. IMACS/North-Holland, p. 3-17, 1983.\n[11]\tBARTH, T. J. e JESPERSEN, D. C. \u201cThe design and application of upwind schemes on unstructured meshes\u201d. Anais AIAA 27o Aerospace Sciences Meeting, Reno, 1989.\n[12]\tBERN, M., EDELSBRUNNER, H., EPPSTEIN, D., MITCHELL, S. e TAN, T. S. \u201cEdge-insertion for optimal triangulations\u201d. Discretization and Computational Geometry, vol. 10, p. 47-65, 1993.\n[13]\tBERN, M. e EPPSTEIN, D. \u201cMesh generation and optimal triangulation\u201d. Lecture Notes Series on Computing, vol. 1, p. 23-90, World Scientific, Singapore, 1992.\n[14]\tBERN, M. e EPPSTEIN, D. \u201cPolynomial-size non-obtuse triangulation of polygons\u201d. International Journal of Computational Geometry and Applications, vol. 2, p. 241255, 1992.\n[15]\tBERN, M., EPPSTEIN, D. e GILBERT, J. R. \u201cProvably good mesh generation\u201d. Anais 31o IEEE Symposium on Foundations of Computer Science, p. 231-241, 1990.\n[16]\tBERN, M., MITCHELL, S. e RUPPERT, J. \u201cLinear-size non-obtuse triangulation of polygons\u201d. Anais 10o ACM Symposium on Computational Geometry, p. 221-230, 1994.\n[17]\tBERN, M. e PLASSMANN, P. \u201cMesh generation\u201d. NEC Research Index Website, http://citeseer.nj.nec.com/cs, 2000.\n[18]\tBOWYER, A. \u201cComputing Dirichlet tessellations\u201d. Computer Journal, vol. 24, no 2, p. 162-166, 1981.\n[19]\tCANANN, S. A., MUTHUKRISHNAN, S. N. e PHILLIPS, R. K. \u201cTopological refinement procedures for triangular finite element meshes\u201d. Engineering with Computers, vol. 12, no 3 e 4, p. 243-255, 1996.\n[20]\tCAREY, G. F. e ODEN, J. T. \u201cFinite elements: computational aspects\u201d. Prentice-Hall, Englewood Cliffs, New Jersey, 1984.\n[21]\tCASTILLO, J. E. \u2019\u2019Mathematical aspects of numerical grid generation\u201d. SIAM, 1991.\n[22]\tCAVENDISH, J. C., FIELD, D. A. e FREY, W. H. \u201cAn approach to automatic threedimensional finite element mesh generation\u201d. International Journal for Numerical Methods in Engineering, vol. 21, no 2, p. 329-347, 1985.\n[23]\tCHEW, L. P. \u201cGuaranteed-quality triangular meshes\u201d. Technical report TR-89-983, Computer Science Department, Cornell University, 1989.\n[24]\tCHEW, L. P. \u201cGuaranteed-quality mesh generation for curved surfaces\u201d. Anais 9o ACM Symposium on Computational Geometry, p. 274-280, 1993.\n[25]\tCLARKSON, K. L. \u201cSafe and effective determinant evaluation\u201d. Anais 33o IEEE Symposium on Foundations of Computer Science, p. 387-395, 1992.\n[26]\tCLARKSON, K. L. e SHOR, P. W. \u201cApplications of random sampling in computational geometry, II\u201d. Discrete &amp; Computational Geometry, vol. 4, no 1, p. 387-421, 1989.\n[27]\tD\u2019AZEVEDO, E. F. e SIMPSON, R. B. \u201cOn optimal interpolation triangle incidences\u201d. SIAM Journal on Scientific and Statistical Computing, vol. 10, p. 10631075, 1989.\n[28]\tDELAUNAY, B. N., \u201cSur la sphere vide\u201d. Izvestia Akademia Nauk SSSR, VII Seria, Otdelenei Matematicheskii i Estestvennyka Nauk, vol. 7, p. 793-800, 1934.\n[29]\tDEY, T., DILLENCOURT, M. B. e GHOSH, S. K. \u201cTriangulating with high connectivity\u201d. Technical Report 94-24, Department of Informatics and Computer Science, UC-Irvine, 1994.\n[30]\tDICKERSON, M. T., DRYSDALE, R. L. S., McELFRESH, S. A., WELZL, E. \u201cFast greedy triangulation algorithm\u201d. Anais 10o ACM Symposium on Computational Geometry, p. 211-220, 1994.\n[31]\tDILLENCOURT, M. B. e SMITH, W. D. \u201cA simple method for resolving degeneracies in Delaunay triangulations\u201d. Anais 20o International Coloque -Automata, Languages and Programming. Springer-Verlag LNCS 700, p. 177-188, 1993.\n[32]\tDJIDJEV, H. e LINGAS, A. \u201cOn computing the Voronoi diagram for restricted planar-figures\u201d. Anais 2 o Workshop on Algorithms and Data Structures, SpringerVerlag LNCS 519, p. 54-64, 1991.\n[33]\tDOBKIN, D. P. \u201cComputational geometry and computer graphics\u201d, Technical Report, Department of Computer Science, Princeton University, 1998.\n[34]\tDUPPE, R. D. e GOTTSCHALK, H. J. \u201cAutomatische interpolation von isolinien bei willkurlichen stutzpunkten\u201d. Allgemeine Vermessungsnachrichten, vol. 77, p. 423426, 1970.\n[35]\tEDELSBRUNNER, H. e MUCKE, E. P. \u201cSimulation of simplicity, a technique to cope with degenerate cases in geometric computations\u201d. ACM Trans. Graphics, vol. 9, p. 66-104, 1990.\n[36]\tEDELSBRUNNER, H. e TAN, T. S. \u201cA quadratic time algorithm for the minmax length triangulation\u201d. Anais 32o IEEE Symposium on Foundations of Computer Science, p. 414-423, 1991.\n[37]\tEDELSBRUNNER, H., TAN, T. S. e WAUPOTITSH, R. \u201cA polynomial time algorithm for the minmax angle triangulation\u201d. SIAM Journal on Scientific and Statistical Computing, vol. 13, p. 994-1008, 1992.\n[38]\tEPPSTEIN, D. \u201cThe farthest point Delaunay triangulation minimizes angles\u201d. Computational Geometry Theory and Applications, vol. 1, p. 143-148, 1992.\n[39]\tESSS - Engineering Simulation and Scientific Software. \u201cCOI-lib 2.0 beta 9 - Users Manual\u201d, 2000.\n[40]\tESSS - Engineering Simulation and Scientific Software. \u201cSATER 100 - Users Manual\u201d, 2000.\n[41]\tFINKEL, R. A. e BENTLEY, J. L. \u201cQuadtrees: a data structure for retrieval on composite keys\u201d. Acta Informatic, vol. 4, p. 1-9, 1974.\n[42]\tFORTUNE, S. \u201cA sweepline algorithm for Voronoi diagrams\u201d. Algorithmica, vol. 2, no 2, p. 153-174, 1987.\n[43]\tFORTUNE, S. \u201cVoronoi diagrams and Delaunay triangulations\u201d. Lecture Notes Series on Computing, vol. 1, p. 193-233, World Scientific, 1992.\n[44]\tFORTUNE, S. e VAN WYK, C. J. \u201cEfficient exact arithmetic for computational geometry\u201d, Anais 9o ACM Symposium on Computational Geometry, p. 163-192, 1993.\n[45]\tFREITAG, L. A. e OLLIVIER-GOOCH, C. \u201cA comparison of tetrahedral mesh improvement techniques\u201d. Anais 5o International Meshing Roundtable, Pittsburgh, PE, p. 87-100. Sandia National Laboratories, 1996.\n[46]\tFREITAG, L. A. e OLLIVIER-GOOCH, C. \u201cTetrahedral mesh improvement using swapping and smoothing\u201d. International Journal for Numerical Methods in Engineering, 1997.\n[47]\tFREY, W. H. \u201cSelective refinement: a new strategy for automatic node placement in graded triangular meshes\u201d. International Journal for Numerical Methods in Engineering, vol. 24, no 11, p. 2183-2200, 1987.\n[48]\tFREY, W. H. e FIELD, D. A. \u201cMesh relaxation: a new technique for improving triangulations\u201d. International Journal for Numerical Methods in Engineering, vol. 31, p. 1121-1133, 1991.\n[49]\tGAREY, M. R. e JOHNSON, D. S. \u201cComputers and intractability: a guide to the theory of NP-completeness\u201d. W. H. Freeman, 1979.\n[50]\tGOLD, C., CHARTERS, T. e RAMSDEN, J. \u201cAutomated contour mapping using triangular element data structure and an interpolant over each irregular triangular domain\u201d. Anais SIGGRAPH, p. 170-175, 1977.\n[51]\tGOLIAS, N. A. e TSIBOUKUS, T. D. \u201cAn approach to refining three-dimensional tetrahedral meshes based on Delaunay transformations\u201d. International Journal for Numerical Methods in Engineering, vol. 37, p. 793-812, 1994.\n[52]\tGUIBAS, L. J., KNUTH, D. E. e SHARIR, M. \u201cRandomized Incremental construction of Delaunay and Voronoi diagrams\u201d. Algorithmica, vol. 7, no 4, p. 381413, 1992.\n[53]\tGUIBAS, L. J. e STOLFI, J. \u201cPrimitives for the manipulation of general subdivision and computation of Voronoi diagrams\u201d. ACM Transactions on Graphics, vol. 4, no 2, p. 74-123, 1985.\n[54]\tHERMANN, L. R. \u201cLaplacian-isoparametric grid generation scheme\u201d. Journal of the Engineering Mechanics Division of the American Society of Civil Engineers, vol. 102, p. 749-756, 1976.\n[55]\tICEM CFD. \u201cICEM CFD 4.1 - users manual\u201d, 2000.\n[56]\tJAMESON, A., BAKER, T. J. e WEATHERILL, N. P. \u201cCalculation of invicid transonic flow over a complete aircraft\u201d. Anais 24o AIAA Aerospace Sciences Meeting, Reno, 1986.\n[57]\tJAMET, P. \u201cEstimations d\u2019erreur pour d\u00eas elements finis droits presque degeneres\u201d. Technical Report CRM-447, Centre d\u2019Etudes de Limeil.\n[58]\tJANSEN, K. \u201cOne strike against the minmax degree triangulation problem\u201d. Computational Geometry Theory and Applications, vol. 3, p. 107-120, 1993.\n[59]\tJOE, B. \u201cDelaunay triangular meshes in convex polygons\u201d. SIAM Journal on Scientific and Statistical Computing, vol. 7, p. 514-539, 1986.\n[60]\tJOE, B. e SIMPSON, R. B. \u201cTriangular meshes for regions of complicated shape\u201d. International Journal for Numerical Methods in Engineering, vol. 23, p. 751-778,\n1986.\n[61]\tJONES, M. T. e PLASSMANN, P. E. \u201cParallel algorithms for adaptive mesh refinement\u201d. Technical Report MCS-P421-0394, Mathematics and Computer Science Division, Argonne National Laboratory, 1994.\n[62]\tKLEIN, R. e LINGAS, A. \u201cA linear-time randomized algorithm for the bounded Voronoi diagram of a simple polygon\u201d. Anais 9o ACM Symposium on Computational Geometry, p. 124-132, 1993.\n[63]\tLAWSON, C. L. \u201cSoftware for C1 surfaces interpolation\u201d. J. Rice, Academic Press, Mathematical Software III, p. 161-194, 1977.\n[64]\tLEE, D-T e SCHACHTER, B. H. \u201cAlgorithms for constructing a Delaunay triangulation\u201d. International Journal of Computer and Information Sciences, vol. 9, no 3, p. 219-242, 1980.\n[65]\tLEVCOPOULOS, C. e LINGAS, A. \u201cFast algorithms for greedy triangulation\u201d. Anais 2o Scandinavian Workshop on Algorithm Theory, Springer-Verlag LNCS, vol. 447, p. 238-250, 1990.\n[66]\tLINDHOLM, D. A. \u201cAutomatic triangular mesh generation on surfaces of polyhedra\u201d. Anais IEEE Trans. Magnetics MAG-19, p. 2539-2542, 1983.\n[67]\tLINGAS, A. \u201cVoronoi diagrams with barriers and their applications\u201d. Information Processing Lett., vol. 32, p. 191-198, 1989.\n[68]\tLLOYD, E. L. \u201cOn triangulation of a set of points in the plane\u201d. Anais 18o IEEE Symposium on Foundation of Computer Science, p. 228-240, 1977.\n[69]\tLO, S. H. \u201cA new mesh generation scheme for arbitrary planar domains\u201d. International Journal for Numerical Methods in Engineering, vol. 21, p. 1403-1426,\n1985.\n[70]\tLO, S. H. \u201cAutomatic mesh generation and adaptation by using contours\u201d. International Journal for Numerical Methods in Engineering, vol. 24, p. 1741-1756,\n1987.\n[71]\tLOHNER, R. \u201cGeneration of three-dimensional unstructured grids by the advancing front method\u201d. Anais AIAA 26o Aerospace Sciences Meeting, Reno, 1988.\n[72]\tMALISKA, C. R. \u201cTransfer\u00eancia de calor e mec\u00e2nica dos fluidos computacional\u201d. Rio de Janeiro, R. J., LTC - Livros T\u00e9cnicos e Cient\u00edficos Editora, 1995.\n[73]\tMALISKA, C. R., CZESNAT, A. F. C., LUCIANETTI, R. M. e MALISKA JR., C. R. \u201cThee-dimensional multiphase flow simulation in petroleum reservoir using the mass fractions as dependent variables\u201d, Anais 5o Latin American and Caribbean Petroleum Engineering Conference and Exhibition, 1997.\n[74]\tMALISKA, C. R. e MALISKA JR., C. R. \u201cA finite method using Voronoi grids for the solution of miscible displacement in porous media\u201d, Revista Brasileira de Ci\u00eancias Mec\u00e2nicas - RBCM, vol. 16, no 4, p. 415-422, 1994.\n[75]\tMALISKA JR., C. R. \u201cUm robusto gerador de diagramas de Voronoi para discretiza\u00e7\u00e3o de dom\u00ednios irregulares\u201d, Anais 13o CILAMCE - Congresso Ibero Latino-Americano sobre M\u00e9todos Computationais para a Engenharia, S. P., 1993.\n[76]\tMALISKA JR., C. R., e BEZERRA, L. H., \"Resolu\u00e7\u00e3o num\u00e9rica de problemas de transfer\u00eancia de calor em diagramas de Voronoi\", Anais 17o Congresso Nacional de Matem\u00e1tica Aplicada e Computacional - CNMAC, pp. 449 - 450, 1994.\n[77]\tMARCONDES, F. e MALISKA, C. R. \u201cConvec\u00e7\u00e3o natural el\u00edptica em canais de forma arbitr\u00e1ria\u201d, Anais 11o Congresso Brasileiro de Engenharia Mecanica - COBEM, p 05-08, 1991.\n[78]\tMARCONDES, F., ZAMBALDI, M. C. e MALISKA, C. R. \u201cSimula\u00e7\u00e3o num\u00e9rica de reservat\u00f3rios de petr\u00f3leo utilizando malhas de Voronoi\u201d, Anais 5o Encontro Nacional de Ci\u00eancias T\u00e9rmicas, p. 335-338, 1994.\n[79]\tMARCUM, D. L. e WEATHERILL, N. P. \u201cUnstructured grid generation using iterative point insertion and local reconnection\u201d, Anais 12o AIAA Applied Aerodynamics Conference , Colorado Springs, Colorado, no AIAA 94-1926, 1994.\n[80]\tMAVRIPLIS, D. J. \u201cAn Advancing front Delaunay triangulation algorithm designed for robustness\u201d. Technical Report 92-49, ICASE, 1992.\n[81]\tMAVRIPLIS, D. J. \u201cUnstructured and adaptive mesh generation for high Reynolds number viscous flows\u201d. ICASE Report 91-25, NASA Langley Research Center, 1991.\n[82]\tMELISSARATOS, E. e SOUVAINE, D. \u201cCoping with inconsistencies: A new approach to produce quality triangulations of polygonal domains with holes\u201d. Anais 8o ACM Symposium on Computational Geometry, p. 202-211, 1992.\n[83]\tMITCHELL, S. A. \u201cRefining a triangulation of a planar straight-line graph to eliminate large angles\u201d. Anais 34o IEEE Symposium on Foundations of Computer Science, p. 583-591, 1993.\n[84]\tMITCHELL, S. A. e VAVASIS, S. \u201cQuality mesh generation in three dimensions\u201d. Anais 8o ACM Symposium on Computation Geometry\u201d, p. 212-221, 1992.\n[85]\tMOUNT, D. M. e SAALFELD, A. \u201cGlobally-equilangular triangulations of cocircular points in O(nlogn) time\u201d. Anais 4o ACM Symposium on Computational Geometry, p. 143-152, 1988.\n[86]\tNACKMAN, L. R. e SRINIVASAN, V. \u201cPoint placement for Delaunay triangulation of polygonal domains\u201d. Anais 3o Canadian Conference on Computational Geometry, p. 37-40, 1991.\n[87]\tPALAGI, C. \u201cGeneration and application of Voronoi grid to model flow in heterogeneous reservoir\u201d, Ph.D. Thesis, Stanford University, California, EUA, 1992.\n[88]\tRIVARA, M. C. \u201cAlgorithms for refining triangular grids suitable for adaptive and multigrid techniques\u201d. International Journal on Numerical Methods for Engineering, vol. 20, p. 745-756, 1984.\n[89]\tRIPPA, S. \u201cMinimal roughness property of the Delaunay triangulation\u201d. CAGD, vol. 7, p. 489-497, 1990.\n[90]\tRIPPA, S. e SCHIFF, B. \u201cMinimun energy triangulations for elliptic problems\u201d. Computer Mething in Applied Mechanics and Engineering, vol. 84, p. 257-274, 1990.\n[91]\tRIVARA, M. C., \u201cA discussion on the triangulation refinement problem\u201d. Anais 5o Canadian Conference on Computational Geometry, p. 42-47, 1993.\n[92]\tRUPPERT, J. \u201cA Delaunay refinement algorithm for quality 2-dimensional mesh generation\u201d. Journal of Algorithms, vol. 18, no 3, p. 548-585, 1995.\n[93]\tSAALFELD, A. \u201cDelaunay edge refinements\u201d. Anais 3o Canadian Conference on Computational Geometry, p. 33-36, 1991.\n[94]\tSAMET, H. \u201cThe quadtree and related hierarchical data structures\u201d. Computing Surveys, vol. 16, p. 188-260, 1984.\n[95]\tSAMET, H. \u201cThe Design and analysis of spatial data structures\u201d. Addison-Wesley, 1990.\n[96]\tSEIDEL, R. \u201cConstrained Delaunay triangulations and Voronoi diagrams with obstacles\u201d. 1987-1988 Ten Years IIG, p. 178-191, 1988.\n[97]\tSHAMOS, M. I. e HOEY, D. \u201cClosest-point problems\u201d. Anais 16o IEEE Symposium on Foundations of Computer Science, p. 151-162, 1975.\n[98]\tSHAW, J. G. Xerox Webster Center, Webster, New York.\n[99]\tSHEWCHUK, J. R. \u201cLecture notes on Delaunay mesh generation\u201d, Technical Report, Department of Electrical Engineering and Computer Science, University of California at Berkley, 1999.\n[100]\tSHEWCHUK, J. R. \u201cRobust adaptive floating-point geometric predicates\u201d. Anais 12o ACM Symposium on Computational Geometry, 1996.\n[101]\tSHEWCHUK, J. R. \u201cTriangle: Engineering a 2D quality mesh generator and Delaunay triangulator\u201d, 1o ACM Workshop on Applied Computational Geometry,\n1996.\n[102]\tSMITH, B. F., BJORSTAD, P. E. e GROPP, W. D. \u201cDomain decomposition -parallel multilevel methods for elliptic partial differential equations\u201d, Cambridge University Press, N.Y., 1996.\n[103]\tSRINIVASAN, V., NACKMAN, L. R., TANG, J-M. e MESHKAT, S. N. \u201cAutomatic mesh generation using the symmetric axis transformation of polygonal domains\u201d. Technical Report RC 16132, Computer Science, IBM Research Division, Yorktown Heights, NY, 1990.\n[104]\tSTRANG, G. e FIX, G. J. \u201cAn Analysis of the Finite Element Method\u201d. PrenticeHall, 1973.\n[105]\tTAN, T. S. \u201cAn optimal bound for conforming quality triangulations\u201d. Anais 10o ACM Symposium on Computational Geometry, p. 240-249, 1994.\n[106]\tTHACKER, W. C. \u201cA brief review of techniques for generating irregular computational grids\u201d. International Journal for Numerical Methods in Engineering, no 15, p. 1335-1341, 1980.\n[107]\tTHOMPSON, J. F. \u201cNumerical grid generation\u201d. North-Holland, 1982.\n[108]\tTHOMPSON, J. F. e WARSI, Z. U. A. \u201cNumerical grid generation: foundations and applications\u201d. North-Holland, 1985.\n[109]\tT-SURF. \u201cgOcad - users manual\u201d, 2000.\n[110]\tVORONOI, G. \u201cNouvelles applications des param'etres continus 'a las th'eorie des formes quadratiques\u201d. J. Reine Angew. Math., vol. 133, p. 97-178, 1907.\n[111]\tWANG, C. e SCHUBERT, L. \u201cAn optimal algorithm for constructing the Delaunay triangulation of a set of line segments\u201d. Anais 3o ACM Symposium on Computational Geometry, p. 223-232, 1987.\n[112]\tWATSON, D. F. \u201cComputing the n-dimensional Delaunay tessellation with application to Voronoi polytopes\u201d. Computer Journal, vol. 24, no 2, p. 167-172, 1981.\n[113]\tWILLIAMS, R. D. \u201cAdaptive parallel meshes with complex geometry\u201d. Technical Report CRPC-91-2, Center for Research on Parallel Computation, California Institute of Technology, 1991.\n[114]\tWINSLOW, A. M. \u201cAn irregular triangle mesh generator\u201d. Report UCXRL-7880, National Technical Information Service, Springfield, VA, 1964."}]}}}