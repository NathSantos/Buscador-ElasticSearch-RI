{"add": {"doc": {"field": [{"@name": "docid", "#text": "BR-TU.12288"}, {"@name": "filename", "#text": "17883_Disserta%c3%a7%c3%a3o_Jorge%20Machado.pdf"}, {"@name": "filetype", "#text": "PDF"}, {"@name": "text", "#text": "Universidade de Aveiro\n\nAno 2012 \n\n Departamento de Engenharia Mec\u00e2nica \n\nJorge Machado Rios Temperature/Motion Feedback Loop for Fast Firing \n\n  \n\nSinteriza\u00e7\u00e3o por Aquecimento R\u00e1pido com Loop \n\nTemperatura/Posi\u00e7\u00e3o \n\n \n\n \n\n   \n\n\n\n  \n\n  \n\n\n\n  \n\n \n\nUniversidade de Aveiro \n\nAno 2012 \nDepartamento de Engenharia Mec\u00e2nica \n\nJorge Machado Rios  Temperature/Motion Feedback Loop for Fast Firing \n\n \n\n Disserta\u00e7\u00e3o apresentada \u00e0 Universidade de Aveiro para cumprimento \ndos requisitos necess\u00e1rios \u00e0 obten\u00e7\u00e3o do grau de Mestre em \nEngenharia Mec\u00e2nica, realizada sob a orienta\u00e7\u00e3o cient\u00edfica do Doutor \nDuncan Paul Fagg, Investigador Auxiliar do Centro de Tecnologia \nMec\u00e2nica e Automa\u00e7\u00e3o (TEMA) do Departamento de Engenharia \nMec\u00e2nica da Universidade de Aveiro. \n\n   \n\n   \n\n\n\n  \n\n  \n\n\n\n  \n\n \n\n \n\n  \n\n \n\n \n\n \n\n \n\n \n\n \n\no j\u00fari / the jury   \n\n \n\npresidente / president Prof.\u00aa Doutora M\u00f3nica Sandra Abrantes de Oliveira Correia \n\nProfessora Auxiliar da Universidade de Aveiro \n\n  \n\n \n\n Prof. Doutor Hern\u00e2ni Miguel Reis Lopes \n\nProfessor Auxiliar do Departamento de Engenharia Mec\u00e2nica Aplicada da Escola Superior de \nTecnologia e Gest\u00e3o do Instituto Polit\u00e9cnico de Bragan\u00e7a. \n\n  \n\n \n\n Doutor Duncan Paul Fagg \n\nEquiparado a Investigador Auxiliar do Departamento de Engenharia Mec\u00e2nica da Universidade de \n\nAveiro \n\n \n\n Doutor Jos\u00e9 Torres \n\nEquiparado a Investigador Auxiliar do Departamento de Engenharia Mec\u00e2nica da Universidade de \n\nAveiro \n\n \n\n  \n\n\n\n  \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n\n\n \n \n\n \n\n  \n\n  \n\n  \n\n \n\nagradecimentos/ \n\nacknowledgements \n\n \n\nOs meus agradecimentos \u00e0 minha fam\u00edlia que sempre me proporcionou o \n\napoio necess\u00e1rio \u00e0 minha progress\u00e3o. \n\nAos meus amigos o meu muito obrigado, pela amizade e companheirismo \n\ndemonstrados durante todos estes anos. \n\nUm especial agradecimento ao Jos\u00e9 Carlos, Jo\u00e3o Raposo, Lu\u00eds Carlos, Jorge \n\nMaio pelo apoio prestado, sem eles n\u00e3o teria conseguido terminar. \n\nAo meu orientador, Doutor Duncan Fagg, e  co-orientador, Doutor Jos\u00e9 \n\nTorres, pelo apoio e motiva\u00e7\u00e3o. \n\n\u00c0 Patr\u00edcia, por ter estado sempre ao meu lado, pela ajuda incessante e pelo \n\napoio incondicional durante toda esta aventura. \n\n\n\n \n \n\n  \n\n\n\n \n \n\n \n\n  \n\npalavras-chave \n\n \n\nDensifica\u00e7\u00e3o, Sinteriza\u00e7\u00e3o, Aquecimento R\u00e1pido, Taxa de Rampa, Feedback\n\nde posi\u00e7\u00e3o, Controlo din\u00e2mico \n\n. \n\nresumo \n\n \n\n \n\nDurante a sinteriza\u00e7\u00e3o de sistemas policristalinos ocorrem processos \u00e0s \n\npart\u00edculas do material entre os quais densifica\u00e7\u00e3o, engrossamento do gr\u00e3o, \n\ncontrolo da porosidade, segrega\u00e7\u00e3o das part\u00edculas entre outros. Estes \n\nprocessos resultam num de tr\u00eas transportes de mecanismos \n\ncondensa\u00e7\u00e3o/evapora\u00e7\u00e3o na superf\u00edcie, pela difus\u00e3o nos limites do gr\u00e3o e \n\npela difus\u00e3o da l\u00e1tice. A microestrutura final pode ser modificada ao for\u00e7ar \n\num espec\u00edfico fen\u00f3meno a ser predominante sobre os restantes durante o \n\nprocesso de sinteriza\u00e7\u00e3o. \n\nPor exemplo, o processo de sinteriza\u00e7\u00e3o por aquecimento r\u00e1pido representa \n\num procedimento onde o perfil Temperatura-Tempo (T-t) \u00e9 alterado \n\nrapidamente para atingir uma Temperatura (T) onde a densifica\u00e7\u00e3o \n\npredominante sobre o crescimento do gr\u00e3o. Desta maneira \u00e9 poss\u00edvel obter \n\num tamanho de gr\u00e3o m\u00ednimo mantendo no entanto um grau de densifica\u00e7\u00e3o \n\nelevado em materiais policristalinos. O trabalho aqui apresentado ir\u00e1 \n\nprojectar e construir um dispositivo mec\u00e2nico que permita introduzir \n\namostras cer\u00e2micas dentro de um forno com uma rampa de aquecimento \n\ncontrolada, enquanto tendo um feedback constante da posi\u00e7\u00e3o e \n\ntemperatura das amostras. \n\n \n\n  \n\n\n\n \n \n\n  \n\n\n\n \n \n\n \n\n  \n\nkeywords \n\n \n\nDensification, Sintering, Fast Firing, Ramp rate/Motion Feedback \n\nloop, Dynamic control.   \n\n \n\nabstract \n\n \n\nThe processes that occur during sintering of polycrystalline systems, \n\nare those of particle necking, densification, grain coarsening, porosity \n\ncontrol, and segregation. These processes result from three mass \n\ntransport mechanisms: surface condensation/evaporation, grain \n\nboundary diffusion, and lattice diffusion. The final microstructure can \n\nbe varied by forcing a specific phenomenon to predominate over the \n\nothers during the sintering process. For example, the fast-firing \n\nprocess represents a sintering procedure where the temperature\u2013\n\ntime (T\u2013t) profile is altered to rapidly reach the T regime where \n\ndensification dominates over grain growth. In this way, a small grain \n\nsize can be maintained while still offering a high densification of \n\npolycrystalline materials. Therefore, the current work will design and \n\nbuild a mechanical device, to introduce ceramic samples into a \n\nfurnace at a controlled ramp rate, with an instantaneous \n\ntemperature/motion feedback loop. \n\n \n\n \n\n \n\n \n\n  \n\n\n\n \n \n\n \n\n\n\nTemperature/Motion Feedback Loop for Fast Firing \n\n i \n\nList of Contents \n\n \n\n1 Introduction ................................................................................................................................ 1 \n\n1.1 Objectives .......................................................................................................................... 2 \n\n2 Bibliographic Fundaments .......................................................................................................... 3 \n\n2.1 Sintering............................................................................................................................. 3 \n\n2.1.1 Sintering stages .............................................................................................................. 5 \n\n2.1.2 Microstructure control ................................................................................................... 7 \n\n2.1.3 Mechanisms of diffusion ................................................................................................. 8 \n\n3 Controlling the Firing (Schedule) ............................................................................................... 15 \n\n3.1 Support technologies ........................................................................................................ 16 \n\n3.1.1 Physical Layer Protocols .............................................................................................. 18 \n\n3.2 Control system ................................................................................................................. 21 \n\n3.2.1 Type of system ............................................................................................................. 22 \n\n3.2.2 Microcontroller and Microprocessor ............................................................................ 23 \n\n3.2.3 Design of a microcontroller .......................................................................................... 24 \n\n3.2.4 Interface Application .................................................................................................... 26 \n\n4 Project ...................................................................................................................................... 27 \n\n4.1 Fast Firing process ........................................................................................................... 27 \n\n4.1.1 Adjustable temperature ............................................................................................... 27 \n\n4.1.2 Constant gradient of temperature ................................................................................ 28 \n\n4.2 Fast Firing Project ............................................................................................................ 29 \n\n4.3 Control system ................................................................................................................. 29 \n\n4.4 Microcontroller ................................................................................................................ 31 \n\n4.5 Bipolar stepper motor ...................................................................................................... 34 \n\n4.6 Stepper motor driver ........................................................................................................ 40 \n\n4.6.1 Integrated Circuit L297 ................................................................................................ 41 \n\n4.6.2 Integrated Circuit L298N .............................................................................................. 42 \n\n4.7 EIA-232 Driver/Receiver .................................................................................................. 45 \n\n4.8 Linear Table ..................................................................................................................... 46 \n\n4.9 Furnace ............................................................................................................................ 47 \n\n4.9.1 Thermocouple / Maxim Max31855 IC .......................................................................... 50 \n\n4.10 Mechanic equipment ........................................................................................................ 51 \n\n4.11 List of material used on the instrumentation circuit .......................................................... 54 \n\n4.11.1 Programming ............................................................................................................... 56 \n\n4.12 Assembly of the electronic equipment ............................................................................ 61 \n\n\n\nJorge Machado  \n\n                                                                                       ii   \n\n4.13 Visual Basic Application .................................................................................................... 62 \n\n4.13.1 Manual control ............................................................................................................. 63 \n\n4.13.2 Thermocouple control .................................................................................................. 64 \n\n5 Results ...................................................................................................................................... 67 \n\n6 Conclusion ................................................................................................................................ 71 \n\n7 Future works............................................................................................................................. 73 \n\n8 References ................................................................................................................................ 75 \n\n \n\n\n\nTemperature/Motion Feedback Loop for Fast Firing \n\n iii \n\nList of Figures \n\nFigure 1- Solid-state sintering (1). ...................................................................................................... 3 \n\nFigure 2- Ceramics model before sintering (5). .................................................................................. 5 \n\nFigure 3- Model of the initial stage sintering (5). ................................................................................ 6 \n\nFigure 4- Model of the intermediate stage sintering (5). ..................................................................... 6 \n\nFigure 5- Model of the final stage sintering (5). .................................................................................. 7 \n\nFigure 6- Distinct mechanisms of sintering on polycrystalline materials (3). ...................................... 8 \n\nFigure 7- Lattice diffusion by vacancy mechanism (3). .................................................................... 11 \n\nFigure 8- Lattice diffusion by interstitial mechanism (3). .................................................................. 11 \n\nFigure 9- Lattice diffusion by interstitialcy mechanism (3). ............................................................... 12 \n\nFigure 10- Lattice diffusion by ring mechanism (3). ......................................................................... 12 \n\nFigure 11- Effect of a fast heating rate on a ceramic material (3). ................................................... 15 \n\nFigure 12- Experimental results for microstructural development / grain size versus density \n\ntrajectories for fabrication by hot pressing, conventional sintering and fast firing (7)............... 16 \n\nFigure 13- Layers of OSI model (Edited from (14)). ......................................................................... 17 \n\nFigure 14- Rs-232 communication between a computer and a terminal (15). ................................. 19 \n\nFigure 15- Standard configuration for a slave device (17). .............................................................. 20 \n\nFigure 16 - Serial Peripheral Interface (16). .......................................................................................... 21 \n\nFigure 17- Basic feedback loop. ....................................................................................................... 22 \n\nFigure 18- Open-loop. ....................................................................................................................... 22 \n\nFigure 20- Design architecture of the microprocessor (20). ............................................................. 24 \n\nFigure 21- Architecture design of the microcontroller (20). .............................................................. 24 \n\nFigure 22- Method for controlling the firing of ceramics (United States Patent 6511628). .............. 28 \n\nFigure 23- HSK series fast fire furnace (Ieco). ................................................................................. 29 \n\nFigure 24- Control system scheme. .................................................................................................. 30 \n\nFigure 25- PIC 16F877 as in the datasheet (datasheet). ................................................................. 32 \n\nFigure 26- Simplified representation of Pic 16F877. ........................................................................ 33 \n\nFigure 27- Unipolar stepper motors. ................................................................................................. 35 \n\nFigure 28- Bipolar stepper motor. ..................................................................................................... 36 \n\nFigure 29- Representation of the Wave drive effect on the stepper motor coils(23). ....................... 36 \n\nFigure 30- Representation of the Full drive effect on the stepper motor coils (23). ......................... 37 \n\nFigure 31- Representation of the Full drive effect on the stepper motor coils (23). ......................... 37 \n\nFigure 32- 2-phase stepper motor Nema 23. ................................................................................... 39 \n\nFigure 33- Current waveform in the basic chopper circuit (23). ....................................................... 40 \n\nFigure 34- Integrated Circuit L297. ................................................................................................... 42 \n\nFigure 35- L297 Pin connection (Top view) ...................................................................................... 42 \n\nFigure 36- Integrated Circuit L298N. ................................................................................................ 43 \n\nFigure 37- L298N Pin connection (Top view)- .................................................................................. 43 \n\n\n\nJorge Machado  \n\n                                                                                       iv   \n\nFigure 38- Two phase bipolar stepper motor control circuit. ............................................................ 43 \n\nFigure 39-Circuit of L298N integrated circuit as a 4A single driver. ................................................. 44 \n\nFigure 40-Integrated circuit Max232. ................................................................................................ 45 \n\nFigure 41-Cad representation of linear table (Igus). ......................................................................... 46 \n\nFigure 42- Beam deflection under a load. ........................................................................................ 47 \n\nFigure 43-Cylindrical Oven. .............................................................................................................. 47 \n\nFigure 44-Entry point of view of the oven. ........................................................................................ 48 \n\nFigure 45-Ceramic cylinder connected to the Kanthal A1 wire......................................................... 49 \n\nFigure 46- Drawing of the furnace .................................................................................................... 49 \n\nFigure 47- Thermocouple Type K ..................................................................................................... 50 \n\nFigure 48- Amplifier Max31855 (25). ................................................................................................ 51 \n\nFigure 49 - technical drawing of the alumina bar .............................................................................. 52 \n\nFigure 50 \u2013 Alumina bar with fiberglass cotton ................................................................................. 52 \n\nFigure 51 \u2013 Linear guide with the support for the alumina bar ......................................................... 53 \n\nFigure 52 \u2013 Photo taken during an experiment test .......................................................................... 53 \n\nFigure 53-Material used on the electronic circuit of the developed work. ........................................ 54 \n\nFigure 54-LCD simulation provided by ISIS Proteus ........................................................................ 57 \n\nFigure 55- Flowchart. ........................................................................................................................ 60 \n\nFigure 56 \u2013 Frontal view of the control box ...................................................................................... 61 \n\nFigure 57 \u2013 Top view of the control box............................................................................................ 61 \n\nFigure 58 \u2013 Detail view of the electric circuit .................................................................................... 62 \n\nFigure 59- Main control tab ............................................................................................................... 63 \n\nFigure 60- Detailed screenshot of error/information shown when manual control is selected. ........ 64 \n\nFigure 61- Thermocouple control tab................................................................................................ 64 \n\nFigure 62- Graph obtained with a ramp of 100\u00b0C/min, at 100mm/min and the furnace set at 1000\u00b0C\n\n .................................................................................................................................................. 67 \n\nFigure 63 - Graph obtained with a ramp of 150\u00b0C/min, at 50mm/min and the furnace set at 500\u00b0C\n\n .................................................................................................................................................. 68 \n\nFigure 64- Graph obtained with a ramp of 100\u00b0C/min, at 50mm/min and the furnace set at 600\u00b0C 68 \n\nFigure 65 - Graph obtained with a ramp of 50\u00b0C/min, at 100mm/min and the furnace set at 600\u00b0C\n\n .................................................................................................................................................. 69 \n\n \n\n\n\nTemperature/Motion Feedback Loop for Fast Firing \n\n v \n\nList of Tabels \n\nTable 1- Important parameters in the sintering of ceramics (3). ......................................................... 4 \n\nTable 2- Stepping sequences ........................................................................................................... 38 \n\nTable 3- Technical data of Nema 23 stepper motor (24). ................................................................. 39 \n\nTable 4-Output data from Max31855 (25). ....................................................................................... 50 \n\n \n\nN\u00e3o foi encontrada nenhuma entrada do \u00edndice de ilustra\u00e7\u00f5es.  \n\n\n\nJorge Machado  \n\n                                                                                       vi   \n\n  \n\n\n\nTemperature/Motion Feedback Loop for Fast Firing \n\n vii \n\nNomenclature  \n\n \n\nPIC    Peripheral Interface Controller \n\nIC    Integrated Circuit \n\nLCD    Liquid Crystal Display \n\nLED    Light Emitting Diode \n\nGUI    Graphical User Interface \n\nVB    Visual Basic \n\nVBA    Visual Basic for Applications \n\n  \n\n\n\nJorge Machado  \n\n                                                                                       viii   \n\n \n\n\n\nTemperature/Motion Feedback Loop for Fast Firing \n\n 1 \n\n1 INTRODUCTION \n\nNowadays given the continued evolution of materials based technologies, has driven the need for \n\nmaterials offering a specific set of pre-determined characteristics that are often closely linked \n\nwith their microstructure. For this reason, the ability to control sintering mechanisms during the \n\ndensification of ceramics has become an essential tool with which to tailor final properties such as \n\nelectrical behavior, porosity and strength. \n\nThe objective of this work focuses on the design and construction of a mechanical device for use \n\nat a laboratorial level, which is capable of controlling the sintering of ceramic samples up to high \n\nramp rates, while recording this data for subsequent analysis.  Normally ramp rates greater than \n\n50\u00baC/min are difficult to achieve with standard furnaces due to damage to the heating elements \n\nand insulation caused by the rapid heating. In contrast, the current design avoids this limitation by \n\nmaintaining a constant furnace temperature and controlling effective temperature instead by the \n\npositioning of the sample in the hot zone. \n\nThe thesis is organized in five chapters, commencing with a bibliographic revision. In this first \n\nchapter particular focus is given to the sintering process. The theory of the sintering process is \n\ndescribed, highlighting its controlling mechanisms .Various sintering methods are briefly \n\nexplained and the salient method of this thesis, fast firing, is explained in more detail.  \n\nThe second chapter outlines the theory of the technology selected in this project for the \n\nconstruction of the fast firing device. \n\nThe third chapter is dedicated to the description of the methodology and the design of the \n\nmechanical device and the selection of the materials and equipments acquired and assembled. \n\nThis chapter also explains the operating principles for the control of the device. \n\nIn the fourth chapter, the experimental results and limitations of the device are explored as a \n\nfunction of different target temperatures and desired ramp rates  \n\nThe overall conclusions are presented in the fifth chapter. This chapter discusses the outcome of \n\nthe project and offers insight of potential future work to improve on the current performance. \n\n\n\nJorge Machado  \n\n                                                                                       2   \n\n1.1 OBJECTIVES \n\nThe developed work had as its main objective the elaboration of a device that can perform fast \n\nfiring sintering experiments with a feedback loop offering continuous control of sample \n\ntemperature. To be able to fulfill the task at hand, a number of different techniques and tools \n\nwere used. \n\n \n\ni) CAD Design of metal/ceramic joints, sample holder, sample support, motorized sample \n\ninsertion, metal/ceramic joints. \n\nii) Control of thermal shock \n\niii) Precision control of motorized sample insertion. \n\niv) Electronic circuit design and microchip programming for computer interfacing. \n\nv) The development of software for motion control and data acquisition. \n\nvi) Analysis of experimental results \n\n\n\nTemperature/Motion Feedback Loop for Fast Firing \n\n 3 \n\n2 BIBLIOGRAPHIC FUNDAMENTS  \n\n2.1 SINTERING \n\nBy definition sintering can be described as the consolidation, densification, recrystallization and \n\nbonding between agglomerated powders during or following compaction, at temperatures below \n\nthe melting point of the material (1) or as Herring defined sintering is \u201c\u2026understood to mean any \n\nchanges in shape which a small or a cluster of particles of uniform composition undergoes when \n\nheld at high temperature\u201d (2). \n\nThere are four basic types of sintering processes; they are solid-state sintering (Figure 1), liquid-\n\nphase sintering, viscous sintering and vitrification. This paper is fully dedicated to the solid-state \n\nsintering process. During this sintering process occurs particle necking, densification, grain \n\ncoarsening, porosity control and segregation. \n\n \n\n \n\nFigure 1- Solid-state sintering (1). \n\n \n\nOver the years there were experimental studies and theoretical analyses that formed an \n\nexceptional qualitative understanding of sintering in terms of the driving forces, the mechanisms, \n\nand the influence of the principal processing variables such as particle size, temperature and \n\napplied pressure (3). \n\nThere are a number of parameters that can be easily identified on the sintering process, as the \n\nTable 1 lists. \n\n \n\n \n\n \n\n \n\n\n\nJorge Machado  \n\n                                                                                       4   \n\n \n\nTable 1- Important parameters in the sintering of ceramics (3). \n\nBehavior Models Data Base \n\nGeneral morphology \nNeck growth \n\n \n\nDiffusion coefficients: anion \n\nand cation, lattice, grain \n\nboundary and surface \n\nPore evolution: size, shape, \n\ninterpore distance \n\nSurface area change \n\n \n\nSurface and interfacial \n\nenergies \n\nDensity: function of time and \n\ntemperature \nShrinkage Vapor pressure of components \n\nGrain evolution: size and shape \n\n \n\nDensification in the later \n\nstages \n\nGas solubilities and \n\ndiffusivities \n\nGrain size: function of time and \n\ntemperature \n\n \n\nGrain growth: porous and \n\ndense systems, solute drag, \n\npore drag, pore breakaway \n\nSolute diffusivities \n\nDopant effects on densification \n\nand grain growth \n\nConcurrent densification and \n\ngrain growth \nPhase equilibria \n\n \n\n \n \n\nProcessing and Material Parameters Characterization Measurements \n\nPowder preparation: particle size, shape, and \n\nsize distribution \nNeck growth \n\nDistribution of dopants or second phases Shrinkage, density, and densification rate \n\nPowder consolidation: density and pore size \n\ndistribution \nSurface area change \n\nFiring: heating rate and temperature Grain size, pore size, and interpore distance \n\nGaseous Atmosphere Dopant distribution \n\nApplied pressure \nStrength, conductivity, and other \n\nmicrostructure-dependent properties \n\n\n\nTemperature/Motion Feedback Loop for Fast Firing \n\n 5 \n\nSome of the parameters can be controlled precisely such as the sintering temperature, the \n\naverage particle size and the atmosphere while others such as the powder characteristics and \n\nparticle packing are more difficult to control but still having a significant effect on the process. \n\n2.1.1 SINTERING STAGES \n\nThe sintering process in solid-state sintering has three main stages. A sintering stage can be \n\ndescribed as an \u201cinterval of geometric change in which pore shape is totally defined (such as \n\nrounding of necks during the initial stage sintering) or an interval of time during which the pore \n\nremain constant in shape while decreasing in size\u201d (4). The sintering stages are named as initial, \n\nintermediate and final stage. \n\n \n\nFigure 2- Ceramics model before sintering (5). \n\n \n\nDuring the initial stage (Figure 3), the interparticle contact area increases by neck growth from 0 \n\nto almost 0.2. A reasonably rapid interparticle neck growth occurs in this stage either by diffusion, \n\nvapor transport, plastic flow or viscous flow. The relative density increases from 60 to 65 percent \n\n(6). The initial stage as indicated by Coble, involves no grain growth (7). \n\n\n\nJorge Machado  \n\n                                                                                       6   \n\n \n\nFigure 3- Model of the initial stage sintering (5). \n\n \n\nThe intermediate stage only begins after the pores have reached their equilibrium shapes as \n\ndictated by the surface and interfacial tensions. This stage is characterized by the continuous pore \n\nchannels that are coincident with three-grain edges (Figure 4). The densification is assumed to \n\noccur by the pores simply shrinking to reduce their cross section and by having matter diffuse \n\ntoward and vacancies away from the long cylindrical channels the relative density is increased by \n\n65 to 90 percent (5) . By the time the pores become unstable and the separation starts isolated \n\npores eventually begin to appear, this phenomena represents the ending of this stage (8). Most of \n\nthe densification and microstructures changes take place in this intermediate stage. \n\n \n\n \n\nFigure 4- Model of the intermediate stage sintering (5). \n\n \n\nWhen the pore phase eventually pinches off the final stage beings (Figure 5), it is characterized by \n\nthe absence of a continuous pore channel. In this stage the pores are supposed to shrink \n\n\n\nTemperature/Motion Feedback Loop for Fast Firing \n\n 7 \n\ncontinuously and acquire a lenticular shape if residing on the grain boundaries or rounded if \n\nresiding within a grain. The mobility of grain boundaries and pores are increased, this factor must \n\nbe controlled in order to achieve the required the theoretical density (5). \n\n \n\nFigure 5- Model of the final stage sintering (5). \n\n \n\n2.1.2 MICROSTRUCTURE CONTROL \n\nProperties, such as the size and shape of the grains, the pore size and distribution in the body and \n\nthe nature, and distribution of second phases are in the realm, of microstructure control and this \n\ngreatly influences the engineering properties of ceramics. The sintering behavior and final grain \n\nsize are affected in particular by the particle size of the starting ceramic material, the degree of \n\naccumulation and also by the microstructure of the green body, which in addition is also \n\ndetermined by the shaping technology used. \n\nUsually while sintering occurs the coarsening of the microstructure due to the densification of the \n\npolycrystalline powder, the average size of the pores and grains gets greater. This phenomenon is \n\nvery complex but simple approaches taken by engineers indicate that the achievement of high \n\ndensity and controlled grain size is dependent on reducing the grain growth rate or increasing the \n\ndensity rate (or a combination of both) (3). \n\nTo understand the sintering phenomena occurring while the sample material is at work we must \n\nfirst determine the type of densification taking place. There are various types such as solid-state, \n\nviscous, liquid-phase and vitrification sintering. The sintering process applied on the material at \n\nwork produces densification of the solid-state type. \n\n\n\nJorge Machado  \n\n                                                                                       8   \n\n2.1.3 MECHANISMS OF DIFFUSION \n\nMechanisms of sintering are the phenomenon that allows the sintering of polycrystalline \n\nmaterials; this occurs by diffusion transport of matter along definite paths. There are six diverse \n\nmechanisms of sintering in polycrystalline materials, such as surface, lattice (the effect of lattice \n\ndiffusion differs when it is located at the surface or on the grain boundary regions) and grain \n\nboundary diffusion, plastic flow and vapor transport, as can be seen in the Figure 6.  \n\n \n\nFigure 6- Distinct mechanisms of sintering on polycrystalline materials (3). \n\n \n\nBut only some lead to shrinkage or densification of the material. The distinction is usually made \n\nbetween densifying and nondensifying mechanisms. The nondensifying mechanisms are the \n\ndiffusion mechanism, lattice diffusion from the particles surfaces to the neck and vapor transport. \n\nThey belong to this group because while leading to neck growth they promote no densification of \n\nthe materials. The densifying mechanisms are the grain boundary diffusion and lattice diffusion \n\nfrom the grain boundary to the pore; these are the most important sintering mechanisms while \n\nsintering polycrystalline ceramics. Lattice diffusion from the grain boundary to the pore also leads \n\nto neck growth. Plastic flow mechanism also leads to densification but the effect is much more \n\ncommon on sintering of metal powders. \n\n\n\nTemperature/Motion Feedback Loop for Fast Firing \n\n 9 \n\nDuring the sintering process there are transport mechanisms activated by increasing the \n\ntemperature inducing then grain growth and densification on the material being sintered. The \n\navailability of several matter transport paths and the presence of grain boundaries increase the \n\ncomplexity of the sintering phenomena in polycrystalline materials over other types of sintering \n\nmethods.  \n\nDiffusion in the boundaries of polycrystalline bodies is recognized as influencing many physical \n\nand metallurgical processes such as grain growth, re-crystallization, plastic deformation and \n\nwhisker growth (8) \n\nThe major solid-state mechanisms of matter transport in sintering of polycrystalline material are \n\nlattice diffusion (also referred to as volume or bulk diffusion), grain boundary diffusion and \n\nsurface diffusion (condensation/evaporation) (9). \n\nEach mechanism of diffusion has a different impact while the sintering of polycrystalline ceramics \n\ntakes place. While coarsening and grain growth are primarily related to surface and grain \n\nboundary diffusion, the impact of lattice diffusion is mainly on densification and porosity \n\nelimination, where the grain boundary diffusion type has lower influence. By understanding the \n\nmechanism of diffusion, it is possible to influence which mechanism has the dominant effect and \n\nin this way to control the final microstructure. \n\nThe diffusion coefficient Di(T) is defined according to the next expression: \n\n \n\n      .\n0\n\n  \n\nQi\n\nRT\ni\nD D e\n\n?\n\n= \u00d7\n                            \n\n(2.1) \n\n    \n\n \n\nWhere D0 is a constant, Qi is the activation energy of the diffusion process; R is the gas constant \n\nand T the absolute temperature. The fact that the diffusion phenomena are thermally activated in \n\nsolid materials creates the possibility to control the resultant microstructure by manipulation of \n\nthe characteristic temperature dependences of each process. For polycrystalline materials the \n\ncharacteristic activation energies of each process are given as followed:  \n\n \n\ns gb l\nQ Q Q&lt;&lt;   (2.2) \n\n\n\nJorge Machado  \n\n                                                                                       10   \n\n \n\nBeing Qs the surface diffusion activation energy, Qgb the grain boundary activation energy and \n\nthe Ql the lattice diffusion activation energy (10). \n\n2.1.3.1 LATTICE DIFFUSION \n\nLattice diffusion refers to atomic diffusion within a crystalline lattice (4). The mechanism of lattice \n\ndiffusion changes according to the type of defect encountered. It can be either vacancy or \n\ninterstitial defects being the mechanism designed as vacancy mechanism or interstitial \n\nmechanism correspondently. This phenomenon involves grain bulk and involves a higher \n\nactivation energy than the surface mechanisms. Although there are four types of lattice diffusion \n\nthere are two mechanisms that have the most influence and therefore gain more importance. \n\nThese are the vacancy and interstitial mechanism, the others are the interstitialcy and the ring \n\nmechanisms (3). These mechanisms will be described briefly below. \n\n \n\n2.1.3.1.1 Vacancy mechanism \n\nAtoms on a normal lattice site exchange places with a vacant site. The vacancy concentration is \n\naffected by the temperature, solute and atmosphere. The diffusion coefficients of the atoms and \n\nthe vacancies are related but not equal. An atom can only jump if a vacancy is located on an \n\nadjacent lattice site, but a vacancy can jump to any of the occupied nearest neighbor sites. The \n\nnumber of atomic jumps will be then proportional to the fraction of sites occupied by vacancies \n\n(Cv). The relation between the coefficients atomic diffusion and vacancy diffusion can be \n\nexplained by the follow expression: \n\n \n\na v v\nD C D= \u00d7    (2.3) \n\n \n\nBeing Da, Atomic diffusion coefficient, Dv, vacancy diffusion coefficient and Cv, fraction of sites \n\noccupied by vacancies. \n\nThe Figure 7 represents the vacancy mechanism phenomenon. \n\n \n\n\n\nTemperature/Motion Feedback Loop for Fast Firing \n\n 11 \n\n \n\nFigure 7- Lattice diffusion by vacancy mechanism (3). \n\n \n\n2.1.3.1.2 Interstitial mechanism \n\nThe interstitial defect phenomenon takes place when atoms which occupy a site in the crystal \n\nstructure at which there is usually not an atom, or two or more lattice sites such that the number \n\nof atoms is larger than the number of lattice sites. This happens when the solute or regular atoms \n\nare small enough to be located in the interstitial sites of the lattice (Figure 8).  \n\n \n\nFigure 8- Lattice diffusion by interstitial mechanism (3). \n\n \n\nA relationship analogous to the equation that represents the vacancy phenomenon can still be \n\nused: \n\n \n\na i ic\nD C D= \u00d7    (2.4) \n\nBeing Dic, interstitial diffusion coefficient and Ci , concentration of the interstitial atoms. \n\n  \n\n2.1.3.1.3 Interstitialcy mechanism \n\n \n\nIf the distortion of the lattice becomes too large for interstitial diffusion to be favorable, then \n\nmovement of the interstitial atoms may occur by the interstitialcy mechanism. An atom on the \n\n\n\nJorge Machado  \n\n                                                                                       12   \n\nregular lattice site exchanges position with a neighboring interstitial atom (they do not need to be \n\nthe same type of atoms) (Figure 9). \n\n \n\n \n\nFigure 9- Lattice diffusion by interstitialcy mechanism (3). \n\n \n\n2.1.3.1.4 Ring mechanism \n\nIn ring mechanism an atom exchange takes place by rotation in a circle without the participation \n\nof a defect. Several atoms can participate in a simultaneous exchange. The significant momentary \n\ndistortion couple with the large energy changes arising from electrostatic repulsion makes this \n\nmechanism improbable in ionic solids (Figure 10). \n\n \n\n \n\nFigure 10- Lattice diffusion by ring mechanism (3). \n\n \n\nOther mechanisms of diffusion as referred before are the grain boundary diffusion and the \n\nsurface diffusion  \n\n2.1.3.2 GRAIN BOUNDARY DIFFUSION \n\n Grain boundary diffusion plays a key role (by often controlling the evolution of structure and \n\nproperties of the materials)in many processes occurring in polycrystalline bodies at elevated \n\ntemperatures, such as Coble creep, sintering, diffusion-induced GB migration (DIGM), different \n\ndiscontinuous reactions, recrystallization and grain growth (11). Grain boundaries in \n\npolycrystalline materials are the designation of the separation between crystal (also known as \n\n\n\nTemperature/Motion Feedback Loop for Fast Firing \n\n 13 \n\ngrains) from each other by regions of lattice mismatch and disorder. Grain boundary diffusion can \n\nbe swifter than the lattice diffusion in the adjacent grains because of the highly defective nature \n\nof the grain boundary. The grain boundary diffusion is affected by the grain size present in the \n\nmaterial, so to obtain a constant grain boundary width the fraction of the solid that is occupied by \n\nthe grain boundary increases with the decreasing grain size (3). Grain boundary diffusion is \n\nsensitive to the grain boundary structure and chemical composition and it the diffusion can be \n\nstudied with modern radiotracer methods without disturbing the grain boundary state (11). \n\nMost mathematical treatments of Grain boundary diffusion are based on Fisher\u00b4s model (12) \n\n2.1.3.3 SURFACE DIFFUSION \n\nThis type of diffusion plays an important part in crystal and film growth, in evaporation and \n\ncondensation, in surface chemical reaction and catalysis, in sintering as well as in other surface \n\nprocesses.  \n\n\n\nJorge Machado  \n\n                                                                                       14   \n\n  \n\n\n\nTemperature/Motion Feedback Loop for Fast Firing \n\n 15 \n\n3 CONTROLLING THE FIRING (SCHEDULE) \n\nFast Firing, also known as rapid sintering, is a sintering process where the heating cycle control \n\nsubjects the sample material to a short firing at high temperatures. For some materials, this \n\nprocess will provide equivalent densities at smaller grain sizes in a less energy consuming process. \n\nTo have benefits from the use of this process several parameters need to be known before \n\nstarting the sintering such as: The controlling mechanism for the process of densification and \n\ncoarsening and reliable data for the activation energies for the appropriate diffusion coefficients.  \n\nThe best situation to utilize the fast firing technique is when the activation energy for \n\ndensification is greater than the energy for coarsening, meaning that at higher temperatures the \n\ndensification rate would be faster than the coarsening rate (3), Figure 11. \n\n \n\nFigure 11- Effect of a fast heating rate on a ceramic material (3). \n\n \n\nThe process usually involves a rapid insertion of a specimen into a preheated furnace at high \n\ntemperatures followed by soaking at maximum temperature for shorter times than used in \n\nconventional sintering (4). \n\nDensification with lower grain growth is achieved due to the rapid passage of the sample \n\nthorough the low temperature regime where grain coarsening dominates, into the region where \n\nthe densification mechanisms prevail. A fast heat-up can provide an effective route for the \n\nformation of a dense material, while avoiding grain growth, where??? > ??.  \n\n\n\nJorge Machado  \n\n                                                                                       16   \n\nThe occurrence of heat conduction happens during the process because energy is absorbed in the \n\nsurface of the material which is then transferred into the bulk of the sample. \n\nFigure 12 shows an example of fast firing, selected from the literature. A series of experiments to \n\ntest the different fabrication process of Al2O3 doped with 200 parts-per-million (ppm) MgO were \n\nperformed. This figure illustrates clearly that choosing the right process is crucial for the \n\nmicrostructure control and the fast firing technique can provide dense samples with reduced \n\ngrain size. \n\n \n\nFigure 12- Experimental results for microstructural development / grain size versus density trajectories \n\nfor fabrication by hot pressing, conventional sintering and fast firing (7) \n\n \n\nAs stated by Bradeau (5) the temperature gradient is very significant in mass transportation, \n\nfurther analysis in this subject by Searcy suggests that temperature in driving densification during \n\nfast firing (9). Improved diffusion is then a result of fast sintering the sample as undertook \n\n3.1 SUPPORT TECHNOLOGIES \n\nTo successfully control the system a real time analysis of parameters assumes a vital importance. \n\nThe constant monitoring of the different parameters, such as temperature, position and the \n\nhuman input controls must be made instantaneously without flaws in the receiving or sending of \n\nthe data packages. Such feedback is essential for optimum control of the system and for it to be \n\nautonomous use. \n\n\n\nTemperature/Motion Feedback Loop for Fast Firing \n\n 17 \n\nTo implement the monitoring and control several technologies were considered for the \n\ndevelopment of the system. In the current section different existing protocols will be addressed to \n\nenable the communication between devices with enough functionality to control the system. The \n\nused protocols and equipments are in agreement with the model Open Systems Interconnection \n\n(OSI) (13). \n\nThe OSI model was created by the International Standards Organization (ISO) as an answer to the \n\nincreasing number of architectures of proprietary and specific communications protocols by a \n\nparticular manufacturer. This model serves as a reference by which others can be created. The \n\nOSI model was originally developed to be a detailed specification of an abstract interface. It is no \n\nmore than a description or model of reference of how the information must be transmitted \n\nbetween two equipments on a network, regardless of any hardware being used (14). This model is \n\norganized in seven layers, the order of the diverse layers can be understood by reference to the \n\nFigure 13. \n\n \n\nFigure 13- Layers of OSI model (Edited from (14)). \n\n \n\nThe application layer is responsible for the support to the user applications. This goes for either \n\nthe receiving side or the receptor. Services of files transfer (FTP), email are some of the examples \n\nof services available in the libraries of this layer. \n\n\n\nJorge Machado  \n\n                                                                                       18   \n\nThe presentation layer is responsible for the delivery and formatting the information to the \n\napplication layer for further processing or display. It relieves the application layer of concern \n\nregarding syntactical differences in data representation within the end-user systems. This layer \n\ndeals with issues of string representation. There are applications and protocols where no \n\ndistinction is made between the application and presentation layer for example, the HTTP \n\nprotocol (HyperText Transfer Protocol) generally regarded as an application layer protocol, has \n\nPresentation Layer aspects such as the ability to identify character encoding for proper \n\nconversion, which is then done in the application layer. \n\nThe session layer is the fifth layer of the OSI model of computer networking. This layer provides \n\nthe mechanism for opening, closing and managing a session between end-user application \n\nprocesses. The communication sessions consist of a request and responses that occur between \n\napplications. These services are normally used in application environments that make use of \n\nremote procedure calls (RPCs). The Session layer responds to service request from the \n\nPresentation layer and issues service request to the transport layer. The Session Layer of the OSI \n\nmodel is responsible for session checkpointing and recovery. It allows information of different \n\nstreams, perhaps originating from different sources, to be properly combined or synchronized. \n\n3.1.1 PHYSICAL LAYER PROTOCOLS \n\nThe serial standard Rs-232 was developed in 1962 by EIA (\u201cElectronic Industries Association), with \n\nthe goal to enable the communication between a computer and a modem; nowadays it is \n\navailable to a bigger range of other connections (15). This standard suffered some revisions since \n\nit was created, being the last the Rs-232-F made in 1997. As with any other serial transmission \n\nequipment, the bits are sent one by one sequentially and usually with the left bit being the less \n\nsignificant (LSB). For being an asynchronous protocol (without a clock line) it is the emitter and \n\nreceiver responsibility to coordinate the respective time cycles to start and end each bit. The \n\nsignals on a Rs-232 communication are transmitted with voltage of \u00b15V. \n\nIn its standard form the Rs-232 protocol uses two different control signals, the RTS (Ready to \n\nSend) and the CTS (Clear to Send) to manage the flux of data exchange by hardware ( Whenever \n\nthe emitter starts sending  data the RTS pin is flagged. The RTS pin being flagged makes the \n\nreceiver understand that there is data arriving the CTS pin goes to the level high (as \u201c1\u201d) \n\nconfirming the sending (\u201cAcknowledge\u201d). Only after receiving the signal from the CTS pin can the \n\nemitter start the transmission. The RS-232 standard defines the electrical, mechanical and \n\n\n\nTemperature/Motion Feedback Loop for Fast Firing \n\n 19 \n\nfunctional characteristics allowed. The transmission rate and maximum extend of the line are not \n\ndefined, but they are normally 115200 bit/s and the capacitance should not exceed 2500 pF, \n\nrespectively (15). \n\nThis standard does not define the settings to be used by the data connection. Normally seven or \n\neight bits of data are used and one start bit to initiate of the string and one or two to end the \n\nsame. Other bits may be included to control the errors (Parity bit) and the flux control by \n\nhardware or software. \n\nThe connection made by equipments is usually done through wires with connector (DB-25 or DB-\n\n9, being the last one the most used nowadays). In the Figure 14 can be seen both types of \n\nconnectors referred in a connection between two equipments. \n\n \n\nFigure 14- Rs-232 communication between a computer and a terminal (15). \n\n \n\n \n\nCurrently the Rs-232 standard communication is being gradually substituted by the USB standard \n\nfor the local connection, because the USB is faster, has easier to use connectors and possesses a \n\nbetter software support. But the Rs-232 is still being used in many vending points (bar code \n\nregisters, or magnetic tape, amongst others) and in industrial machinery (remotely controlled \n\ndevices). For this reason some computers have inbuilt Rs-232 doors (onboard, or in boards with  \n\nPCI or ISA bus enabled)  , although even if most modern computers don\u00b4t have this function \n\navailable there are USB to Rs-232 converters that fix this aspect.  \n\nThe Serial Peripheral Interface (SPI) is used primarily for a synchronous serial communication of \n\nhost processor and peripherals.  \n\n\n\nJorge Machado  \n\n                                                                                       \n\nThe SPI can be used with a wide variety of peripheral equipments and they can be subdivided into \n\nthe following categories (16): \n\n? Converters (ADC and DAC)\n\n? Memories (EEPROM and FLASH)\n\n? Real Time Clocks (RTC) \n\n? Sensors (temperature, pressure)\n\n? Others (signalmixer, potentiometer, LCD controller, UART, CAN controller, USB controller, \n\namplifier) \n\nThe standard configuration for a slave device is \n\nFigure 15- \n\n \n\nWith this configuration two control and two data lines are used. To enable this standard there \n\nmust be a master device and a slave device. The master provides a clock signal and determines \n\nthe state of the chip select lines (this function determines which slave the master is \n\ncommunicating with). Using the master/slave relationship, the master starts the communication \n\nby generating a clock and selecting the device, the data can be transferred on both directions \n\nsimultaneously (by definition data is always sent both directions but it is\n\nknow whether a received byte is meaningful or not). Within the data transferred there is at the \n\nstart a dummy byte to start the read/send functions.\n\nThe SPI requires two control lines (CS and SCLK) and two data lines (SDI and SDO, the\n\nbe known as MOSI (Master-Out-\n\nby Motorola), to select the slave devices the line is named SS (Slave\n\nWith CS (Chip-Select) the corresponding peripheral device is selected. Th\n\nlow. In the unselected state the SDO lines are hi\n\n                                                                                       20 \n\nThe SPI can be used with a wide variety of peripheral equipments and they can be subdivided into \n\nConverters (ADC and DAC) \n\nMemories (EEPROM and FLASH) \n\nSensors (temperature, pressure) \n\nOthers (signalmixer, potentiometer, LCD controller, UART, CAN controller, USB controller, \n\nThe standard configuration for a slave device is described in Figure 15. \n\n \n\n Standard configuration for a slave device (17). \n\ncontrol and two data lines are used. To enable this standard there \n\nmust be a master device and a slave device. The master provides a clock signal and determines \n\nthe state of the chip select lines (this function determines which slave the master is \n\nating with). Using the master/slave relationship, the master starts the communication \n\nby generating a clock and selecting the device, the data can be transferred on both directions \n\nsimultaneously (by definition data is always sent both directions but it is up to the devices to \n\nknow whether a received byte is meaningful or not). Within the data transferred there is at the \n\nstart a dummy byte to start the read/send functions. \n\nThe SPI requires two control lines (CS and SCLK) and two data lines (SDI and SDO, the\n\n-Slave-In) and MISO (Master-In-Slave-Out), as they were labeled \n\nby Motorola), to select the slave devices the line is named SS (Slave-Select). \n\nSelect) the corresponding peripheral device is selected. This pin is mostly active\n\nlow. In the unselected state the SDO lines are hi-Z and therefore inactive. The master decides with \n\n  \n\nThe SPI can be used with a wide variety of peripheral equipments and they can be subdivided into \n\nOthers (signalmixer, potentiometer, LCD controller, UART, CAN controller, USB controller, \n\ncontrol and two data lines are used. To enable this standard there \n\nmust be a master device and a slave device. The master provides a clock signal and determines \n\nthe state of the chip select lines (this function determines which slave the master is \n\nating with). Using the master/slave relationship, the master starts the communication \n\nby generating a clock and selecting the device, the data can be transferred on both directions \n\nup to the devices to \n\nknow whether a received byte is meaningful or not). Within the data transferred there is at the \n\nThe SPI requires two control lines (CS and SCLK) and two data lines (SDI and SDO, these can also \n\nOut), as they were labeled \n\nis pin is mostly active-\n\nZ and therefore inactive. The master decides with \n\n\n\nTemperature/Motion Feedback Loop for Fast Firing \n\n 21 \n\nwhich peripheral device it wants to communicate. The clock line SCLK is brought to the device \n\nwhether it is selected or not. The clock serves as synchronization of the data communication(18). \n\nThe majority of SPI devices provide these four lines. Sometimes it happens that SDI and SDO are \n\nmultiplexed, for example in the temperature sensor LM74, or that one of these lines is missing. A \n\nperipheral device that must or cannot be configured requires no input line, only a data output for \n\nexample the integrated circuits Max6675 or Max31885. As soon as it becomes selected it starts \n\nsending data. In some ADCs, therefore, the SDI line is missing. There are also devices that have no \n\ndata output. For example, LCD controllers that can be configured, but cannot send data or status \n\nmessages. \n\nFigure 16 describes the control over a number of slave devices by splitting the CS pins into a \n\nnumber equal to the slave devices needed, the slave enabled and consequently the one that is \n\nsending/receiving data is determined by the state of the CS pin (High or Low states) that is \n\nchanged the program sent to the microchip. \n\n \n\n \n\nFigure 16 - Serial Peripheral Interface (16). \n\n \n\n3.2 CONTROL SYSTEM \n\nThe main objective of this thesis is to create a dynamic system that enables the user to perform a \n\nfast firing operation with the samples. A dynamic system is usually a combination of two or more \n\n\n\nJorge Machado  \n\n                                                                                       \n\nsystems, currently there are electrical, fluid, mechanical a\n\nthis work are the mechanical and electrical \n\nWhile elaborating a project there are various considerations to be taken such as:\n\n? Low budget \n\n? Effects of the furnace on the materials\n\n? Time of work effects \n\n? Motor speed / Resistance \n\n? Dimensions of the system fully built \u201crather\u201d small\n\nThese conditions affected the project result especi\n\ndimensions of the system built. From the start to the end of the project every major decision will \n\nbe explained in detail in this work on the following chapters.\n\n3.2.1 TYPE OF SYSTEM\n\nThere are different types of control \n\nmethod was the On-Off with feedback control\n\nis presented. \n\n \n\n \n\nThe feedback control exists when two or more variables can affect each other\n\nAn On-Off control  with feedback \n\ndepending on the position of the controlled variable relative to the setpoint. \n\n                                                                                       22 \n\nsystems, currently there are electrical, fluid, mechanical and thermal systems. The ones used in \n\nthis work are the mechanical and electrical (19). \n\nthere are various considerations to be taken such as: \n\nEffects of the furnace on the materials \n\n \n\nMotor speed / Resistance  \n\nDimensions of the system fully built \u201crather\u201d small \n\nThese conditions affected the project result especially the low budget and the maximum \n\ndimensions of the system built. From the start to the end of the project every major decision will \n\nbe explained in detail in this work on the following chapters. \n\nYPE OF SYSTEM \n\ncontrol systems that can be applied on this work\n\nOff with feedback control. In the Figure 17 a basic linear feedback controller\n\n  \n\nFigure 17- Basic feedback loop. \n\nexists when two or more variables can affect each other  \n\n \n\nFigure 18- Open-loop. \n\n \n\nfeedback drives the manipulated variable from one state to another \n\ndepending on the position of the controlled variable relative to the setpoint. A common example \n\n  \n\nnd thermal systems. The ones used in \n\n \n\nally the low budget and the maximum \n\ndimensions of the system built. From the start to the end of the project every major decision will \n\non this work, but the chosen \n\nlinear feedback controller \n\ndrives the manipulated variable from one state to another \n\nA common example \n\n\n\n \n\nof on-off control is the temperature control in a domestic heating system. When the temperature \n\nis below the thermostat setpoint the heating system is switched on and when the temperature is \n\nabove the setpoint the heating switches off\n\nin the Figure 19.   \n\n \n\n \n\n3.2.2 MICROCONTROLLER AND \n\n \n\nA microprocessor is a general purpose digital computer central processing unit. Although it is \n\nwidely known as a \u201ccomputer on a chip\u201d the microprocessor is in no sense a complete digital \n\ncomputer. After the engineering \n\nlate 1970\u2019s the microprocessors started to gain usefulness in a very broad number of tasks such as \n\ndata gathering, machine control, human interaction and other applications that granted a limit\n\nintelligence to the machines. The bit size, cost per unit and power demanded to work are some of \n\nthe most favorable points over other types of hardware.\n\nA by-product of the microprocessor was the microcontroller. These devices possess the same \n\nfabrication techniques and programming concepts\n\nthe \u201carchitecture\u201d designs implemented because of the final use the device will have.\n\nBy comparing the attributes of each device we can extrapolate that the microprocessor i\n\nconcerned with rapid movement of code and data from external addresses to the chip and it will \n\nrequire additional parts to be operational. The microcontroller on the other hand can function as \n\na computer with the addition of no external parts and it is m\n\nbits within the chip (20). \n\nThe different on the \u201carchitecture\u201d design \n\nTemperature/Motion Feedback Loop for Fast Firing\n\n23 \n\noff control is the temperature control in a domestic heating system. When the temperature \n\now the thermostat setpoint the heating system is switched on and when the temperature is \n\nabove the setpoint the heating switches off, this example can be represented \n\nFigure 19- On-Off Control System. \n\nICROCONTROLLER AND MICROPROCESSOR \n\nA microprocessor is a general purpose digital computer central processing unit. Although it is \n\nwidely known as a \u201ccomputer on a chip\u201d the microprocessor is in no sense a complete digital \n\ncomputer. After the engineering community became aware of the 8bit processors in the middle to \n\nlate 1970\u2019s the microprocessors started to gain usefulness in a very broad number of tasks such as \n\ndata gathering, machine control, human interaction and other applications that granted a limit\n\nintelligence to the machines. The bit size, cost per unit and power demanded to work are some of \n\nthe most favorable points over other types of hardware. \n\nproduct of the microprocessor was the microcontroller. These devices possess the same \n\non techniques and programming concepts, although, they became different in some of \n\nthe \u201carchitecture\u201d designs implemented because of the final use the device will have.\n\nBy comparing the attributes of each device we can extrapolate that the microprocessor i\n\nconcerned with rapid movement of code and data from external addresses to the chip and it will \n\nrequire additional parts to be operational. The microcontroller on the other hand can function as \n\na computer with the addition of no external parts and it is mainly focused in rapid movement of \n\ntecture\u201d design can be seen on the Figure 19 and Figure \n\nTemperature/Motion Feedback Loop for Fast Firing \n\noff control is the temperature control in a domestic heating system. When the temperature \n\now the thermostat setpoint the heating system is switched on and when the temperature is \n\nrepresented with block diagram \n\n \n\nA microprocessor is a general purpose digital computer central processing unit. Although it is \n\nwidely known as a \u201ccomputer on a chip\u201d the microprocessor is in no sense a complete digital \n\ncommunity became aware of the 8bit processors in the middle to \n\nlate 1970\u2019s the microprocessors started to gain usefulness in a very broad number of tasks such as \n\ndata gathering, machine control, human interaction and other applications that granted a limited \n\nintelligence to the machines. The bit size, cost per unit and power demanded to work are some of \n\nproduct of the microprocessor was the microcontroller. These devices possess the same \n\nthey became different in some of \n\nthe \u201carchitecture\u201d designs implemented because of the final use the device will have. \n\nBy comparing the attributes of each device we can extrapolate that the microprocessor is \n\nconcerned with rapid movement of code and data from external addresses to the chip and it will \n\nrequire additional parts to be operational. The microcontroller on the other hand can function as \n\nainly focused in rapid movement of \n\nFigure 20. \n\n\n\nJorge Machado  \n\n                                                                                       24   \n\n \n\n \n\nFigure 19- Design architecture of the microprocessor (20). \n\n \n\nFigure 20- Architecture design of the microcontroller (20). \n\n \n\nThe work required on this thesis requires a microcontroller instead of a microprocessor.  This will \n\nenable the construction of a program that will control with effectiveness the sample holder \n\nposition. \n\n3.2.3 DESIGN OF A MICROCONTROLLER \n\n \n\n\n\nTemperature/Motion Feedback Loop for Fast Firing \n\n 25 \n\nThe design of the microcontroller incorporates all of the features found in a microprocessor \n\n(ALU,PC ,SP and the registers), also adding other features required to perform all the operations a \n\ncomputer can do such as ROM(read-only memory),RAM (random access memory), parallel I/O, \n\nserial I/O, counters and a clock circuit. \n\nThe main use of the microcontroller is to control the operation of a machine using a fixed \n\nprogram that is stored in ROM and that does not change over the lifetime of the system (20). The \n\ndesign it took makes it usable on many applications, it accomplishes this feat by having a very \n\nflexible and extensive repertoire of multi-byte instructions (21), the hardware configuration. \n\nThere are tools and resources needed to work with microcontrollers in this work we used a \n\nmicrochip microcontroller (Picmicro) such as: \n\n? An assembler or a high-level language compiler (C language with Hi-Tech C compiler). \n\n? A computer to run the software and develop it. \n\n? A hardware device (Programmer) that connects through the serial, parallel or USB \n\nline.  \n\n? Cables to connect the programmer to the computer and to connect the Pic to the \n\nprogrammer. \n\n? Pic microcontroller. \n\nPrototypes circuits are usually made in breadboards and we followed this \u201ctrend\u201d by building a \n\nfully operational controller in the breadboard. \n\nThere are at least a dozen manufactures of microchips in the world and each has its own assembly \n\nlanguage to program the devices, so as a result, a decade ago every time a user changed the type \n\nof the device it would have to recode/learn a new programming language before starting to \n\nelaborate a project. Nowadays, there are high-level language compilers that can translate the \n\ncode into numeric values for the PICmicro (Hexadecimal). These compilers offer many advantages \n\nto the programmer such as the multi-platforming, program maintenance, the posterior testing \n\nand the lower probability of having errors within the code. Nonetheless, it also has some short \n\ncomings such as the memory it takes on the microcontroller, the length of code becomes greater \n\nand it runs usually slower. \n\n\n\nJorge Machado  \n\n                                                                                       26   \n\n3.2.4 INTERFACE APPLICATION \n\nThe interface application is at core a program that enables the user to control and view the results \n\nthat the system is performing with each command without having to understand how the system \n\nworks or the underlying logic of the stored program. It is intended to be simple, intuitive, efficient \n\nand responsive to let the user to start working and finish the task at hand without much effort or \n\ntime needed to learn it. \n\nThis is, as a rule, called as graphical user interface (GUI). The term came into existence because \n\nthe first interactive user interfaces to computers were not graphical; they were text-and-keyboard \n\noriented and usually consisted of commands you had to remember and computer responses that \n\nwere infamously brief. The command interface of the DOS operating system (which you can still \n\nget to from your Windows operating system) is an example of the typical user-computer interface \n\nbefore GUIs arrived. An intermediate step in user interfaces between  \n\nTo create the interface application the software Microsof Visual Basic 2010 Express was used. \n\nVisual Basic 2010 Express is Microsoft\u00b4s latest version of Visual Basic.NET programming language. \n\nThis software greatest strength is its ease of use and the speed it enables the programmer to \n\ncreate Windows Forms, WPF Windows, Web and mobile devices applications among others (22). \n\nIt is an object-oriented computer programming language and it is currently supplied on two major \n\nimplementations. \n\n  \n\n\n\nTemperature/Motion Feedback Loop for Fast Firing \n\n 27 \n\n4 PROJECT \n\nAs mentioned in the state of art, to sinter samples using the method of fast-firing it is required to \n\nachieve high temperatures under a certain fraction of time. This work aims to project and build a \n\nsystem that successfully accomplishes this goal. The fast firing project had some pre-requisites \n\nhas minimum temperature on the furnace of 1250 \u00b0C and the furnace also had to be open on both \n\nsides, the linear guide to possess a speed of 200 mm/s and the real time answer of the circuit. The \n\nproject was planned in function of the process to be used, the size of the equipment and the \n\nassembly of the different would need to be clear and simple. A limited budget was also taken in \n\naccount.  \n\n \n\n4.1 FAST FIRING PROCESS \n\nThe fast firing process can be applied at least by two different ways: i) fast firing process with \n\nadjustable temperature and constant position, or ii) variable position with constant gradient of \n\ntemperature in the furnace.  \n\n4.1.1 ADJUSTABLE TEMPERATURE \n\nDuring the sintering process the samples used in the experiment are maintained in the same place \n\nwhile the temperature is controlled by a computer or a PLC. \n\nOne of the advantages of this method is the space occupied by the machine. The need for a Belt \n\nor a linear guide is non-existent since the ceramic samples are stationary. \n\nA representation of this method is explained on the following Figure 21. \n\n\n\nJorge Machado  \n\n                                                                                       28   \n\n \n\nFigure 21- Method for controlling the firing of ceramics (United States Patent 6511628). \n\n \n\n4.1.2 CONSTANT GRADIENT OF TEMPERATURE \n\nThe constant gradient of temperature consists on having a controlled belt or linear guide to move \n\nthe materials in the furnace at a given ratio. The temperature inside the furnace has a known \n\ngradient along its course. The movement/speed of the materials is calculated using the uniform \n\ntemperature distribution.  \n\nThis method allows the sintering of materials in a continuous way by allowing various materials to \n\nbe processed at the same time; this fact makes this method very useful and a reason why it is so \n\nwidely used in the industry. One example of these fast firing furnaces can be found on the Figure \n\n22. \n\n\n\nTemperature/Motion Feedback Loop for Fast Firing \n\n 29 \n\n \n\nFigure 22- HSK series fast fire furnace (Ieco). \n\n4.2 FAST FIRING PROJECT \n\nThe chosen method used on this work was the constant gradient of temperature, based on the \n\nmethod explained on the subchapter 4.1.2. This version does not reach the high costs of the \n\nexample mentioned, while performing and executing the experiment with an acceptable precision \n\nof the results. The furnace although does not have a controlled atmosphere (because it is open on \n\nboth sides) and the linear guide does not allow multiple samples to be sintered at the same time. \n\nThe project consists on controlling the Temperature/Time ramp. To this it was developed a \n\nproject which used a Thermocouple, a linear guide, a step motor, a furnace and various support \n\ncomponents. \n\n4.3 CONTROL SYSTEM \n\nThe control system designed and built for this particular work can be visualized in the scheme \n\n(Figure 23). The flow of information (data packages) between the devices can be understood by \n\ninterpretation of the scheme. \n\n \n\n\n\nJorge Machado  \n\n                                                                                       30   \n\n \n\nFigure 23- Control system scheme. \n\n \n\nThe system was designed with the objective of being both easy to understand by the usual user \n\nand the possible engineer who might want to upgrade or change any aspect or parameter of this \n\nsystem. \n\nThe flow of the information is described by the scheme presented in Figure 23.  \n\nThe measurements of the temperature at the position of the samples, is done by the \n\nthermocouple. These data are then translated into an analog signal in the microcontroller. After \n\nthis the temperature is sent to an application installed in the computer over a RS-232 \n\ncommunication as a data string (this string also includes the position of the sample holder). If \n\nusing the automated movement of the motor the user is then prompted to choose a sintering \n\nrate, then with an algorithm created with the objective of controlling the speed of the motor \n\nreceives the temperature and position of the samples and decides what is the proper speed to \n\nproduce the effect of sintering on the samples material, or the direction of the movement \n\ndepending on which mode of operation the user is working After calculating the adequate speed, \n\nthe information is transmitted to the microcontroller (again over the RS-232 communication). \n\n\n\nTemperature/Motion Feedback Loop for Fast Firing \n\n 31 \n\nAfter this step, the motor will start moving at the speed wanted and on the liquid crystal display \n\n(LCD) both the sintering rate and the current position of the samples are shown. \n\n4.4 MICROCONTROLLER  \n\nThe electrical circuit was developed with the objective to control the movement of the \u201cCAR\u201d that \n\nsupports the alumina bar carrying the samples to be sintered. This movement is controlled \n\nrigorously with a status check of the data (Temperature of the samples and the position of the \n\nCAR).  \n\nWhen building industrial or commercial machinery we can apply a multitude of procedures. We \n\ncould choose to use microcontrollers (as was opted in this case), programmable logic controllers \n\n(also known as \u201cPLC\u201d) or the use of interconnected relays designed using ladder logic. These are \n\nlogic controlled systems that may respond to switches or light, pressure sensors between others. \n\nWith the response we can have the machine do a number of tasks such as start or stop. \n\nThe microcontroller was chosen for the present device by the fact that it is lighter, smaller, but \n\nmostly because it is a much cheaper device than a programmable logic controller (PLC). Although \n\nthere are some benefits in having a PLC, such as robustness (it can endure sand and hits, which \n\nmakes it more suitable for industrial applications) and the ladder logic used is much easier to \n\nunderstand and rewrite, there are not enough reasons to justify the cost of this option in the \n\ncurrent work. \n\nThe microcontroller selected was the PIC 16F877 (Figure 24). \n\n\n\nJorge Machado  \n\n                                                                                       32   \n\n \n\nFigure 24- PIC 16F877 as in the datasheet (datasheet). \n\n \n\nSome of the characteristics it possess can be directly extracted from its name  \n\n \n\nBeing,   \n\nA: Number \u201c16\u201d which symbolizes the MID-Range devices from microchip. It belongs to the 8 bit \n\nfamily, meaning that the ALU (Arithmetic and Logique Unit) is read with words with the length \n\nhaving the maximum of 8. \n\nB: Letter \u201cF\u201d is followed by the meaning that the PIC is of the Flash type. Each line of memory is a \n\n14 word bits. \n\nC: Numbers \u201c877\u201d allows us to know exactly the PIC we have chosen between all the other series \n\nof devices. \n\n\n\nTemperature/Motion Feedback Loop for Fast Firing \n\n 33 \n\nFlash memory is non volatile, so it can be used to store the user program and for posterior use it \n\ncan be erased or reprogrammed electrically. Although there are other devices with more than 8k \n\nprogram memory it was decided that for the control system at hand it would not be need any \n\nmore memory. In the future if any data should be stored it can always be built within the circuit \n\nan EEPROM memory for data storage and for the use of the microcontroller during the process. \n\nThe organization of the pins is described in the Figure 25; with this information the \n\nbuilding/programming of the project can be started. \n\nFor this work the crystal oscillator type used was the 4Mhz, it is an electronic oscillator that uses \n\nthe mechanical resonance of a vibrating crystal of piezoelectric material to create an electrical \n\nsignal with a very precise frequency. This provides a stable clock signal for digital integrated \n\ncircuits. The oscillator belongs in the pins numbered as 13 and 14 (OSC1 / OSC2) \n\nThe Pin 1 is designed as MCLR/Vpp/THV is the mode on which the microcontroller boots in, either \n\nin programmer mode (to insert the program the developer created), master clear entry (Reset), or \n\nhigh voltage test control. It is decided the way it boots with voltage supplied to this pin, for \n\nexample to start running the program is 5V and to enable programming mode it is 4V. \n\n \n\nFigure 25- Simplified representation of Pic 16F877. \n\n \n\nI/O Port B \n\nI/O Port \n\nI/O Port D \n\nI/O Port E \n\nI/O Port A \n\n\n\nJorge Machado  \n\n                                                                                       34   \n\nIn order to reduce the confusion and to offer a better understanding it will be used in the circuit \n\ndiagrams the simplified representation of the microcontroller Pic 16F877.In this the I/O Ports are \n\norganized in order of groups and numbers inside the groups, and the voltage supplier and the \n\nground pins are not represented. \n\nSome of the I/O Ports are multiplexed with alternative functions to access features from \n\nperipheral devices, being this the main reason to have five main groups in this device (Port A, B, C, \n\nD, E). For example most I/O pins on Port A can be used as either a general I/O pin or as an analog \n\ninput (this function is being used to receive the measurements of the thermocouple), on Port C \n\nthe I/O pins RC6 and RC7 are used as the transmitter and receiver respectively of the data \n\npackages over the RS-232 communication. \n\nFor the project the general purpose of each I/O ports are as followed: \n\nPort A \u2013 Status LEDs (Light Emitting Diode) \n\nPort B \u2013 Stepper motor involved circuitry \n\nPort C \u2013 RS-232 communication and Temperature measurement \n\nPort D \u2013 LCD involved circuitry \n\nPort E \u2013 Control buttons and interrupts \n\n4.5 BIPOLAR STEPPER MOTOR \n\nAfter careful considerations, the type of motor chosen was the stepper motor. \n\nThe stepper motor is an electromechanical device that converts electrical pulses into discrete \n\nmechanical movements. The shaft or spindle of a stepper motor rotates in discrete step \n\nincrements when electrical command pulses are applied to it in the proper sequence. The motor \n\nrotation has several direct relationships to this applied pulse. The sequence of the input pulses \n\ninfluences directly the direction of the movement as well as the speed by the frequency the input \n\npulses occur, while the number of input pulses is related to the length of the motor rotation. \n\nThe stepper motor is used on a very wide number of applications thanks to its precision, \n\nreliability, precise positioning and the repetition of the same movement. The accuracy of a step \n\nmotor is of 3 \u2013 5% per step and this is error is not cumulative from one to step to the next, but it \n\nhas as a disadvantage due to the difficulty of controlling the operation at high speeds. \n\n\n\nTemperature/Motion Feedback Loop for Fast Firing \n\n 35 \n\nThere are three basic stepper motor types: \n\n? Variable-reluctance (\u201cVR\u201d) \n\n? Permanent-magnet (\u201cPM\u201d) \n\n? Hybrid \n\nThe stepper motor used in this work is a hybrid one. As the name indicates this motor is a \n\ncombination between the two other types and it groups the best features of the permanent-\n\nmagnet and the variable reluctance motor types.  The hybrid stepper motor although being more \n\nexpensive than a permanent-magnet type, provides better performance concerning step \n\nresolution, torque and speed. The range of the step angles usually vary between 3.6\u00b0 to 0.9\u00b0 (100-\n\n400 steps per revolution). The rotor is multi-toothed like the VR motor and contains an axially \n\nmagnetized concentric magnet around its shaft. The teeth on the rotor provide an even better \n\npath that helps guide the magnetic flux to preferred locations in the air gap. This further increases \n\nthe detent, holding and dynamic torque (15). \n\nThe step motors are mostly two-phase motors (the motor chosen is also a two phase motor). \n\nThese can be unipolar (Figure 26) or bipolar (Figure 27). \n\n \n\n \n\nFigure 26- Unipolar stepper motors. \n\n \n\n\n\nJorge Machado  \n\n                                                                                       36   \n\n \n\nFigure 27- Bipolar stepper motor. \n\n \n\nIn unipolar step motor there are two winding per phase. The two winding to a pole may have one \n\nlead common i.e. centre tapped. The unipolar motor so, have five, six or eight leads. In the \n\ndesigns where the common of two poles are separate but centre tapped, motor have six leads. If \n\nthe centre taps of the two poles are internally short, the motor has five leads. Eight lead unipolar \n\nfacilitates both series and parallel connection whereas five lead and six lead motors have series \n\nconnection of stator coils. The unipolar motor simplifies the operation because in operating them \n\nthere is no need to reverse the current in the driving circuit. These are also called bifilar motors. \n\nIn bipolar stepper there is single winding per pole.These are also called unfiled motors. \n\nAlthough it is easier to control the operation of a unipolar stepper motor, the bipolar motor \n\nproduces the maximum speed and torque available for the circuit at hand, this fact occurs due to \n\nthe physical space occupied by the windings. A unipolar motor has twice the amount of wire in \n\nthe same space, but only half is used at any point in time, therefore it is only 50% efficient (or in \n\nthe region of 70% of the torque output available). \n\nTo move the stepper motor there are three methods. The stepping method refers to pattern of \n\nsequence in which the stator coils are energized, they are: \n\nI. Wave drive \n\n \n\nFigure 28- Representation of the Wave drive effect on the stepper motor coils(23). \n\n\n\nTemperature/Motion Feedback Loop for Fast Firing \n\n 37 \n\n \n\nIn this drive method only a single phase is activated (or energized) at a time. Although it shares \n\nthe same number of steps as the full step drive the motor will be less powerful than it would be \n\nby using full drive. This phenomenon occurs because only one winding is energized. This is the \n\nleast used stepping method because of the mentioned disadvantage comparing with the other \n\nmethods. \n\nII. Full drive \n\n \n\n \n\nFigure 29- Representation of the Full drive effect on the stepper motor coils (23). \n\nWith this method there are always two phases energized at any given time. This full step mode \n\nresults in the angular movement as wave drive, but the mechanical position is offset by one-half \n\nof a full step.  The output torque on the motor will be maximized. \n\nIII. Half drive \n\n \n\n \n\nFigure 30- Representation of the Full drive effect on the stepper motor coils (23). \n\n\n\nJorge Machado  \n\n                                                                                       38   \n\nThe half drive combines the both methods mentioned before, meaning that the drive alternates \n\nbetween two phases on and a single phase on. But while increasing the angular resolution, the \n\nmotor will also have less torque available at the half step position because only one phase is \n\nenergized (approximately 70%). While the two phases are energized the motor will have full rated \n\ntorque. \n\nThe stepping sequences (Table 2) are presented in the following table. Note that the polarity of \n\neach terminal is indicated with \u00b1 and that in the last step of each sequence it loop again endlessly \n\nuntil indicated by the controller. To change the direction of the motor it is only needed to reverse \n\nthe stepping sequence. \n\nTable 2- Stepping sequences \n\nSequence Polarity Name \n\n0001 \n\n0010 \n\n0100 \n\n1000 \n\n- - - + \n\n- - + - \n\n- + - - \n\n+ - - - \n\n \n\nWave Drive or One-Phase \n\n0011 \n\n0110 \n\n1100 \n\n1001 \n\n- - + + \n\n- + + - \n\n+ + - - \n\n+ - - + \n\n \n\nFull Drive or Two-Phase \n\n0001 \n\n0011 \n\n0010 \n\n0110 \n\n0100 \n\n1100 \n\n1000 \n\n1001 \n\n- - - + \n\n- - + + \n\n- - + - \n\n- + + - \n\n- + - - \n\n+ + - - \n\n+ - - - \n\n+ - - + \n\n \n\nHalf-Drive or Half-Step \n\n \n\n\n\nTemperature/Motion Feedback Loop for Fast Firing \n\n 39 \n\nAs mentioned, the stepper motor chosen for this particular work is a bipolar stepper motor. It was \n\nselected according to the characteristics of a number of existing variables while the operation is \n\nrunning (values of friction between the fuse and the car, weight of the sample holder carrier, \n\ntorque needed to move, between others) with this values on hand it the Nema 23 motor was \n\nselected (Figure 31). Being a usual and standard piece of equipment, it is a component that is easy \n\nto substitute or replace if anything should happen to it. \n\n \n\n \n\nFigure 31- 2-phase stepper motor Nema 23. \n\n \n\nOn Table 3 is presented some of the most important aspects of the mechanism of the motor (for \n\nthe entire technical data see Annex E). \n\n \n\nTable 3- Technical data of Nema 23 stepper motor (24). \n\nMotor Nema 23 (distance between hubs 56mm) \n\nMaximum voltage [VDC] 60 \n\nNominal voltage [VDC] 24-48 \n\nNominal current [A] 4,2 \n\nHolding torque [Nm] 2 \n\nStep angle \u00ba 1,8 \n\nMax load axial [N] 15 \n\nMax load radial [A] 52 \n\n \n\n\n\nJorge Machado  \n\n                                                                                       40   \n\n4.6 STEPPER MOTOR DRIVER \n\nThe driver board is solely responsible to receive the signal that is sent from the computer and to \n\ntreat and amplify these signals in a way that will make the motor turn. For this project we used \n\nthe Chopper type drive circuit. This circuit provides an optimal solution both to current control \n\nand fast current build-up and reversal. Chopper drive circuits are also referred to as constant \n\ncurrent drives because they generate constant current (below the nominal maximum voltage of \n\nthe motor) in each winding rather than applying a constant high voltage. On each new step it will \n\napply a very high voltage (normally several times higher than the nominal voltage of the motor) to \n\nthe winding activating the motor all as a consequence creating movement. The ratio VM/Vsupply is \n\nusually called the overdrive ratio (Figure 32). \n\n \n\n \n\nFigure 32- Current waveform in the basic chopper circuit (23). \n\n \n\nConstant current regulation is achieved by switching the output current to the windings. This is \n\ndone by sensing the peak current through the winding via a current-sensing resistor, effectively \n\nconnected in series with the motor winding. As the current increases, a voltage develops across \n\n\n\nTemperature/Motion Feedback Loop for Fast Firing \n\n 41 \n\nthe sensing resistor, which is fed back to the comparator. At the predetermined level, defined by \n\nthe voltage at the reference input, the comparator resets the flip-flop, which turns off the output \n\ntransistor. The current decreases until the clock oscillator triggers the flip-flops, which turns on \n\nthe output transistor again, and the cycle is repeated. The advantage of the constant current \n\ncontrol is a precise control of the developed torque, regardless of power supply voltage \n\nvariations. It also gives the shortest possible current build-up and reversal time. Power dissipation \n\nis minimized, as well as supply current. Supply current is not the same as the motor current in a \n\ncopper drive. It is the motor current multiplied by the duty cycle, at standstill typically: \n\n \n\nsupply\n\nsupply\n\nI M\nM\n\nV\nI\n\nV\n= \u00d7   4.1 \n\n \n\nDepending on how the H-bridge is switched during the turn-off period, the current will either \n\nrecirculate through one transistor and one diode (path 2), giving the slow current decay, or \n\nrecirculate back through the power supply (path 3). The advantage of feeding the power back to \n\nthe power supply is the fast current decay and the ability to quickly reduce to a lower current \n\nlevel. One example is when microstepping at a negative slope, which may be impossible to follow \n\nif the current decay rate is lower than the slope demands. The disadvantage with fast current \n\ndecay is the increased current ripple, which can cause iron losses in the motor. \n\nThe stepper motor driver has three main components being them the L297 and L298N integrated \n\ncircuits. \n\n4.6.1 INTEGRATED CIRCUIT L297 \n\nThe L297 IC is a stepper motor controller that generates four phase drive signals for two phase \n\nbipolar and four phase unipolar step motors in microcomputer controlled applications. This \n\ncontroller enables the user to drive the stepper motor in every drive described before and on chip \n\nPWM chopper circuits permit switch-mode control of the current in the windings of the motor. \n\nOne advantage of this particular integrated circuit is that to work it only requires the clock, \n\ndirection and mode input signals. The phase signal is generated internally reducing consequently \n\na heavier use on the microcontroller and it simplifies the coding for the programmer. Mounted in \n\nDIP20 and SO20 packages, the L297 can be used with monolithic bridge drives such as the L298N \n\n\n\nJorge Machado  \n\n                                                                                       42   \n\nor the L293R or even discrete transistors, mosfets and darlingtons. In the Figure 32 and in the \n\nFigure 33 can be seen the L297 real representation and the pin connections, respectively. \n\n \n\nFigure 33- Integrated Circuit L297. \n\n \n\nFigure 34- L297 Pin connection (Top view) \n\n     \n\n4.6.2 INTEGRATED CIRCUIT L298N \n\nThe integrated circuit L298N has inbuilt a high current dual full-bridge and its main objective is to \n\ndrive inductive loads such as relays, solenoids, DC and stepping motors. It is a high voltage part, \n\nbut it can also be activated with a few milivolts, to the maximum voltage range of 45V. It also has \n\ntwo pin connections that enable the monitoring of the current circulation that the motor is \n\nconsuming (Pins SENSE-A and SENSE-B), by receiving the given information of the consumed \n\ncurrent. With the L297 it is also possible to control the current by limiting using a potentiometer. \n\nFor each one of the four outputs it can give an current as high as 2A or as peak current a \n\nmaximum of 4A. \n\nThis device is also known for overheating while working at high voltages and high current. Given \n\nthat the motor works at 24V and 4A it is need to fabricate an heat sink made of aluminium and a \n\nfan to keep the temperature within the working range temperature of the L298N (it situates itself \n\nin the range of  -25 \u00b0C to 130 \u00b0C at the absolute maximum ratings). In the Figure 35 and Figure 36 \n\ncan be seen the L298N real representation and the pin connections, respectively. \n\n\n\nTemperature/Motion Feedback Loop for Fast Firing \n\n 43 \n\n \n\nFigure 35- Integrated Circuit L298N. \n\n \n\nFigure 36- L298N Pin connection (Top view)- \n\n \n\nAlthough the usual circuit seen while combining L297 and the L298N (Figure 37) integrated \n\ncircuits is widely used as a stepper motor drive in this case it cannot be used given the high, \n\nbecause as referred before the maximum current output per output is of 2A. \n\n \n\n \n\nFigure 37- Two phase bipolar stepper motor control circuit. \n\n \n\nTo counter this limitation of the L298N it has decided to implement a change in how the circuit \n\nworks. \n\n\n\nJorge Machado  \n\n                                                                                       44   \n\nThe L298N device possess two separate channels (Output 1 and 4, and Output 2 and 3), each one \n\ncapable of driving 2A current loads, so by connecting them in parallel it is possible to drive the \n\nmotor with inductive loads up to 4A continuously because it will become a single 4A integrated \n\ncircuit driver, this can be achieved by following the circuit as seen on Figure 38. \n\n \n\n \n\nFigure 38-Circuit of L298N integrated circuit as a 4A single driver. \n\n \n\nBeing, W1 and W2 the one of each pair of outputs of the L297 device and J1 one of the windings \n\nin the motor. As referred before by using this implementation it is required a second L298N \n\ndevice in order to connect to the second pair of outputs of L297 and the second winding on the \n\nmotor\n\n\n\nTemperature/Motion Feedback Loop for Fast Firing \n\n 45 \n\n4.7 EIA-232 DRIVER/RECEIVER \n\n \n\nFigure 39-Integrated circuit Max232. \n\n \n\nThe MAX232 is an integrated circuit that converts signals from an RS-232 serial port to signals \n\nsuitable for use in TTL compatible digital logic circuits. The MAX232 is a dual driver/receiver and \n\ntypically converts the RX, TX, CTS and RTS signals. \n\nThe drivers provide RS-232 voltage level outputs (approx. \u00b1 7.5 V) from a single + 5 V supply via \n\non-chip charge pumps and external capacitors. This makes it useful for implementing RS-232 in \n\ndevices that otherwise do not need any voltages outside the 0 V to + 5 V range, as power supply \n\ndesign does not need to be made more complicated just for driving the RS-232 in this case. \n\nThe receivers reduce RS-232 inputs (which may be as high as \u00b1 25 V), to standard 5 V TTL levels. \n\nThese receivers have a typical threshold of 1.3 V, and a typical hysteresis of 0.5 V. \n\n  \n\n\n\nJorge Machado  \n\n                                                                                       \n\n4.8 LINEAR TABLE \n\nA linear table (which is also known as a X\n\nto accomplish the work at hand. This table allows movement on the basis of the sample holder \n\nalong the X axis (distance). The linear movement is performed with trapezoidal nuts which are \n\ndriven manually or with the use of a motor, as is done in this work.\n\n \n\nFigure 40\n\nThe 3D cad drawing of the linear table is represented in the figure\n\nacquired from IGUS and it belongs to the series SHT.\n\nThe table was chosen considering the weight of the sample holder, speed of the movement, \n\nstrength needed to move the trapezo\n\nThe maximum weight of the sample holder was projected to have a maximum value of 10Kg, even \n\nthough the weight of the sample holder is far away from this maximum the linear table was \n\nchosen thinking on future works requiring a heavier load. The deflection (term that is used to \n\ndescribe the degree to which a structural element is displaced under a load) under a loa\n\nis of 0.75mm. In the Figure 41 \n\nsuffered by the linear table. \n\n                                                                                       46 \n\nA linear table (which is also known as a X-Y table) helps to provide the horizontal motion needed \n\nto accomplish the work at hand. This table allows movement on the basis of the sample holder \n\naxis (distance). The linear movement is performed with trapezoidal nuts which are \n\ndriven manually or with the use of a motor, as is done in this work. \n\n40-Cad representation of linear table (Igus). \n\n \n\nof the linear table is represented in the figure above. This linear table was \n\nand it belongs to the series SHT. \n\nThe table was chosen considering the weight of the sample holder, speed of the movement, \n\nstrength needed to move the trapezoidal nut and the precision of the positioning.\n\nThe maximum weight of the sample holder was projected to have a maximum value of 10Kg, even \n\nthough the weight of the sample holder is far away from this maximum the linear table was \n\nworks requiring a heavier load. The deflection (term that is used to \n\ndescribe the degree to which a structural element is displaced under a load) under a loa\n\n the F1 force represents the 10kg load and the x the deflection \n\n  \n\nY table) helps to provide the horizontal motion needed \n\nto accomplish the work at hand. This table allows movement on the basis of the sample holder \n\naxis (distance). The linear movement is performed with trapezoidal nuts which are \n\n \n\nThis linear table was \n\nThe table was chosen considering the weight of the sample holder, speed of the movement, \n\nidal nut and the precision of the positioning. \n\nThe maximum weight of the sample holder was projected to have a maximum value of 10Kg, even \n\nthough the weight of the sample holder is far away from this maximum the linear table was \n\nworks requiring a heavier load. The deflection (term that is used to \n\ndescribe the degree to which a structural element is displaced under a load) under a load of 10Kg \n\nthe F1 force represents the 10kg load and the x the deflection \n\n\n\nTemperature/Motion Feedback Loop for Fast Firing \n\n 47 \n\n \n\nFigure 41- Beam deflection under a load. \n\n \n\nMore details about the linear table can be found in the Annex D. \n\n \n\n4.9 FURNACE \n\nThe furnace acquired to full the demands of this work is the one on the Figure 42. \n\n \n\n \n\nFigure 42-Cylindrical Oven. \n\n \n\n\n\nJorge Machado  \n\n                                                                                       48   \n\nWith this furnace it is possible to control both maximum temperature and the rate of heating. It is \n\na cylindrical oven with two entries (both sides are open enabling the sample holder to enter from \n\neither side) as can be seen in Figure 43. \n\n \n\n \n\nFigure 43-Entry point of view of the oven. \n\n \n\nOne of the objectives successfully obtained with this furnace is the nullification of the \n\nelectromagnetic forces while not obtaining a long hot zone while maintaining the required \n\ngradient of temperatures (the dispersion of the temperature is not homogenous) on the ceramic \n\ncylinder. This fact can be also seen on the Figure 43 by noting the increase of the temperature \n\nwith the higher distance. \n\nThe heating is produced by a resistor constructed with Kanthal A1 wire. It has 3.75mm of \n\ndiameter. The power supply of this resistor is one with low voltage. The total dissipated power \n\noutput by the heating element has a maximum value of 1.200 W. \n\n \n\n\n\n \n\nFigure 44-\n\n \n\nIn the Figure 45 it is possible to observe a simplistic interpretation of how this product (Ceramic \n\ncylinder plus the Kanthal A1 wire) is inserted in the oven.\n\nThe tube has a length off 450mm and the Kanthal \n\ntotal length of the 300mm, the diameter is of approximately 38mm\n\n \n\n \n\nTemperature/Motion Feedback Loop for Fast Firing\n\n49 \n\n \n\n-Ceramic cylinder connected to the Kanthal A1 wire. \n\nit is possible to observe a simplistic interpretation of how this product (Ceramic \n\ncylinder plus the Kanthal A1 wire) is inserted in the oven. \n\nThe tube has a length off 450mm and the Kanthal A1 wire surrounds the ceramic material with a \n\n, the diameter is of approximately 38mm. \n\nFigure 45- Drawing of the furnace \n\nTemperature/Motion Feedback Loop for Fast Firing \n\n \n\nit is possible to observe a simplistic interpretation of how this product (Ceramic \n\nA1 wire surrounds the ceramic material with a \n\n\n\nJorge Machado  \n\n                                                                                       50   \n\n4.9.1 THERMOCOUPLE / MAXIM MAX31855 IC \n\nTo measure the temperature of the sample holder a thermocouple of the type K is used. This \n\nthermocouple can read temperatures that belong to the range of -180 \u00b0C to 1300 \u00b0C. \n\n \n\nFigure 46- Thermocouple Type K \n\nThe thermocouple is connected to an integrated circuit (\"IC\") with designation max31855. The \n\nmax31855 is an IC that performs cold-junction compensation and digitalizes the signal from the \n\nthermocouple it is connected to. The output data from this IC has the format describe on Table 4. \n\n \n\nTable 4-Output data from Max31855 (25). \n\n 14-Bit Thermocouple \n\nTemperature Data \n\nRES Fault Bit 12-Bit Internal \n\nTemperature Data \n\nRES SCV \n\nBIT \n\nSCG \n\nBIT \n\nOC \n\nBIT \n\nBit D31 D30 \u2026 D18 D17 \n\n \n\nD16 \n\n \n\nD15 \n\n \n\nD14 \n\n \n\n\u2026 \n\n \n\nD4 \n\n \n\nD3 \n\n \n\nD2 \n\n \n\nD1 \n\n \n\nD0 \n\nValue Sign MSB \u2026 LSB Reserved 1 = Fault \n\n \n\nSign \n\n \n\nMSB \n\n \n\n\u2026 \n\n \n\n \n\nLSB \n\n \n\nReserved \n\n1= \n\nShort \n\nto VCC \n\n1 = \n\nShort \n\nto GND \n\n1 = \n\nOpen \n\nCircuit \n\n \n\nIt is a signed 14-bit, SPI compatible, read-only format. \n\nthe maximum temperature allowed by this IC is 1800 \u00b0C (far above the maximum required by this \n\nproject, approximately +- 1250 \u00b0C) being the minimum -270 \u00b0C, it resolves temperatures to 0.25 \n\n\u00b0C. The accuracy of the measurement of the temperature for temperatures ranging from -200 \u00b0C \n\nto +700 \u00b0C is of +-2 \u00b0C and from 700 \u00b0C to 1300 \u00b0C the range being +-4 \u00b0C. \n\n\n\nTemperature/Motion Feedback Loop for Fast Firing \n\n 51 \n\nHaving the Serial peripheral interface bus (also known as \"SPI\") implies that we have a \n\nmaster/slave combination; the master is the Pic16f877 and the slave the IC max31855. This \n\ninterface is a serial data link that operates in full duplex mode. The master device is the one to \n\nstart the transmission of data.  \n\nTo measure the temperature of the sample holder a thermocouple of the type K is used. This \n\nthermocouple can read temperatures that belong to the range of -180 \u00b0C to 1300 \u00b0C \n\n \n\n \n\nFigure 47- Amplifier Max31855 (25). \n\n \n\n4.10 MECHANIC EQUIPMENT \n\nAs it was referred previously the samples are inserted in the furnace via a cylindrical bar of \n\nAlumina. The bar needs to be hollow to insert the thermocouple and the fiberglass cotton to \n\nencompass the samples. The outer diameter must also be large enough to sustain the samples \n\nwhile not touching the walls of the furnace to not jeopardize the furnace, the experimental tests \n\nor even the alumina bar. \n\n\n\nJorge Machado  \n\n                                                                                       52   \n\n \n\nFigure 48 - technical drawing of the alumina bar \n\n \n\n \n\n \n\nFigure 49 \u2013 Alumina bar with fiberglass cotton  \n\n \n\n\n\nTemperature/Motion Feedback Loop for Fast Firing \n\n 53 \n\nTo allow simple assembly/dismantling the linear guide does not have a support beneath it, \n\ninstead it was developed in a manner to allow the movement on the Z axis (height) to adjust the \n\nheight of the center of the alumina bar with the center of the furnace. \n\n \n\n \n\nFigure 50 \u2013 Linear guide with the support for the alumina bar \n\n \n\n \n\nFigure 51 \u2013 Photo taken during an experiment test \n\n\n\nJorge Machado  \n\n                                                                                       54   \n\n4.11 LIST OF MATERIAL USED ON THE INSTRUMENTATION CIRCUIT \n\nThe following figure represents the electronic material used on the Project. \n\n \n\n \n\nFigure 52-Material used on the electronic circuit of the developed work. \n\n \n\nNumera\u00e7\u00e3o / Componente Componente escolhido \n\n1. Ceramic capacitor 0.1 uF \n\n100 uF \n\n100uF \n\n22pF \n\n2. Button  Button Normaly open \n\n3. Breadboard Breadbord is a construction base for prototyping of \n\nelectronics \n\n4. DB9 Subminiature electrical connector. \n\n5. Electronic oscillator Electronic oscillator of 4 MHz. \n\n6 . Diode In4007 \n\n7. Interruptor \n\n \n\nInterruptor normally open \n\n\n\nTemperature/Motion Feedback Loop for Fast Firing \n\n 55 \n\n8. Stepper motor controller L297 IC stepper motor controller \n\n9. H-Bridge IC  L298 H-Bridge to control step motors \n\n10. LCD 16*2 Liquid crystal display 16 characters, 2 lines \n\n11. Signal amplifier Integrated circuit that converts signals from an RS-232 \n\nserial port to signals suitable for use in TTL compatible \n\ndigital logic circuits. \n\n12. Power Supply  Power supply of 20Vdc \n\n13. Resistor 1kOhm \n\n100ohm \n\n20kOhm \n\n14. Polarized capacitor 100uF \n\n470uF \n\n15. Microcontroller PIC16f877a microcontroller. \n\n16. Adaptator Adaptator SOIC8[a] for DIP[b] to use the MAX6675 in \n\na breadboard. \n\n17. Fan 5V Fan \n\n18. Signal amplifier Thermocouple type K amplifier Max31855. \n\n19. Convertor cable Rs232 to USB cable converter \n\n20. Positive voltage regulator Continuous corrent regulator a 5V LM7805. \n\n21. Positive voltage regulator Continuous corrent regulator a 3.3V LM2937-3.3-ET. \n\n22. Leds Light emitting diodes \n\n23. Level Shifter Voltage level shifter 4050 \n\n \n\n\n\nJorge Machado  \n\n                                                                                       56   \n\n4.11.1 PROGRAMMING \n\nFor the programming of the microprocessor was used MPLAB ID v8.56 with the compiler Hi-Tech \n\nPro Lite.  \n\nThe C programming language was used to develop the program needed to accomplish the tasks \n\nthat this dissertation demands.  \n\nMPLAB uses by default the assembly language; afterwards it would translate the code into \n\nnumerical values for the PIC (hexadecimal). \n\nBut this language is specific to each device, which means that each program becomes obsolete \n\nthe moment the microcontroller families is changed, this is the main reason that was opted to use \n\nC language being it general-purpose programming language that can work on any microcontroller \n\nthat has a C compiler working for it. \n\nThe C language has also more programmers and a better library to gather research, this allows \n\nchanges more easily to  be made to the microcontroller we are using and to give it more flexibility \n\nand specifications that are not used in this dissertation. \n\nThe only fault while programming with C language is the memory which it occupies within the \n\nmicrochip. This is one of the limits of this device. The low memory the programmer as allocated to \n\ncode, means that the memory allocation on the microchip is not fully optimized. This is one \n\nproblem we would not have using the assembler language, but the memory given on the \n\nPIC16F877 is enough for the coding necessary to fulfill the task at hand. \n\nHi-Tech Pro Lite is a C language compiler, this software is free to use and it optimizes ANSI C \n\nlanguage. This compiler supports all microchip in this range PIC10,PIC 12 and PIC16 devices. \n\nThe compiler is also available on a number of popular operating systems such as Windows (32 and \n\n64-bit), Linux and Apple OS X. \n\nBeing this the free version of the Hi-Tech compiler it does not make use of the Omniscient Code \n\nGeneration (OCG) technology, it improves the compilation of the code to a degree of 40% \n\nreduction of memory allocation on the microcontroller. This allows future uses of the code \n\ngenerated for this purpose to be expanded for future uses by upgrading to the licensed version of \n\nHi-Tech Pro compiler. \n\n \n\n \n\n\n\nTemperature/Motion Feedback Loop for Fast Firing \n\n 57 \n\nThe elaboration of the circuit passed through a variety of steps to the final condition. \n\n 1) Manual control \n\n 2) Thermocouple value input \n\n 3) LCD integration \n\n 4) Encoder programming \n\n 5) Rs232 connection \n\n 6) Automatic control \n\nThe manual control of the stepper motor was created to enable the user to control the position \n\nof the sample holder without having to use the computer (Visual Basic application). Nonetheless, \n\nthe information regarding the temperature and the position of the motor will still be sent to the \n\ncomputer and the LCD, enabling the user to have a basic understanding of the system parameters.  \n\nThe movement is defined by an interrupter that creates an ON/OFF setting and an additional \n\nbutton that creates the CW (Close Wise) or CCW (Counter Clock Wise) movement of the stepper \n\nmotor to reproduce forward or backwards movement of the sample holder. Using this option the \n\nspeed of the motor is predefined and cannot be changed. \n\nThe second step will allow the use of the thermocouple to evaluate the actual temperature of the \n\nsamples.  \n\nThe LCD is used in this circuit to enable the user to have real time surveillance over the variables \n\nof the position of the sample holder and temperature of the samples the sample holder is \n\ncarrying. It is used and LCD of 16 digits per line, having the LCD a maximum of two lines. It will \n\ndisplay the values like demonstrated on the Figure 54. \n\n \n\n \n\nFigure 53-LCD simulation provided by ISIS Proteus \n\n \n\n\n\nJorge Machado  \n\n                                                                                       58   \n\nA new architecture was used on this particular LCD this means that this LCD already uses the \n\nROHS architecture implemented since 2006. The difference between versions is that we need to \n\nswitch on a transistor (PortD pin 7) to power up the LCD module; this is embedded within the \n\ncode.  \n\nThe position of the sample holder is known by creating a counter in each step the stepper motor \n\ndoes (as explained before on the working of the motor). \n\nTo control and be able to move at various different sets speeds and ramps the sample holder it is \n\nused the RS232 standard connection with a computer that would then connect to a Visual-Basic \n\napplication that would make the necessary calculations between the temperature and current \n\nposition of the sample holder to create the ratio of speed or movement wanted on the stepper \n\nmotor. \n\nAutomatic control was the last step to be made because it needed all the other functions working. \n\nThis function will allow the user to program a given set of instructions (Speed ratio and/or \n\ndirection) without having to actually control the motor manually. In this step the connection \n\nbetween the microcontroller and the computer cannot be stopped. \n\nThere are major differences embedded in the code between the two types of work (Speed ratio or \n\ndirection). By using the first type, the control of the velocity is achieved by changing the delay \n\nbetween the steps which will influence directly the velocity the motor is running. The application \n\non the computer would gather the information given by the thermocouple to determine either it \n\nshould faster or slower, and then send the information to the microcontroller. The following code \n\nexample will explain how this was achieved. \n\nInput= Getch();  // received information over Rs232 \n\nRB1=1;      //  Enable stepper motor \n\nRB0=1;      //  Direction given to the stepper motor \n\n for(i = 0; i = input;i++) \n\n{  \n\n RC0=1;      //  Stepper Clock \n\n __delay_ms(1);     // \n\n RC0=0;      // \n\n __delay_ms(1);     //   StepperClock \n\n Position_Counter= Position_Counter +1; //   Position Counter \n\n  \n\n}       //  End For \n\n \n\n\n\nTemperature/Motion Feedback Loop for Fast Firing \n\n 59 \n\nBy using the direction type of control, the speed would be at constant value but the direction \n\nwould be changed according to the needs. The control would still be using the application on the \n\ncomputer to be able to identify either the motor should be moving clock wise or counter-clock-\n\nwise. The movement would be controlled only by the type of ramp set by the user, meaning that \n\nwhen the temperature read by the thermocouple would surpass the indicated value the \n\napplication would send an order to the control to move the sample backwards while the \n\ntemperature is not below the value it should be at. This loop will continue until the allowed \n\ntemperature increases, by then the motor will keep moving forward while the temperature does \n\nnot surpass once again the set value. The following code example will explain how this was \n\nachieved. \n\nif (RE1 == 0){  \n\n    \n\n if(RCIF) {         // Receive Data from rs232, use of interrupt \n\n  input= getch();   // read a response from the user \n\n  Dir=input-0x30;                            // Conversion from Ascii to Decimal numbers \n\n}  \n\n      \n\n  else \n\n  { \n\n  __delay_ms(1);  // Does not receive data from rs232, continues program \n\n  }   \n\n  if (dir==2){ \n\nRB0=1;    //  Direction given to the stepper motor \n\n \n\n   RC0=1; \n\n   __delay_ms(5); \n\n   RC0=0; \n\n   __delay_ms(5); \n\n   Position_Counter= Position_Counter +1;    \n\n  }    // End input ==2 \n\n  if (dir==1){ \n\nRB0=0;    //  Direction given to the stepper motor \n\n   RC0=1; \n\n   __delay_ms(5); \n\n   RC0=0; \n\n   __delay_ms(5); \n\n   Position_Counter= Position_Counter -1; \n\n  }    // End input ==1 \n\n             if (dir==3){ \n\nRB1=1;   //  Disable stepper motor \n\n  }    // End input ==3 \n\n }     // End RE1 Off \n\nThe flowchart presented on the Figure 55 explains how the program works. \n\n\n\nJorge Machado  \n\n                                                                                       60   \n\n \n\nFigure 54- Flowchart. \n\n\n\nTemperature/Motion Feedback Loop for Fast Firing \n\n 61 \n\n4.12 ASSEMBLY OF THE ELECTRONIC EQUIPMENT \n\nThe control box elaborated for this project is presented on this subchapter. \n\n \n\n \n\nFigure 55 \u2013 Frontal view of the control box \n\n \n\n \n\nFigure 56 \u2013 Top view of the control box \n\n\n\nJorge Machado  \n\n                                                                                       62   \n\n \n\nFigure 57 \u2013 Detail view of the electric circuit \n\n \n\n4.13 VISUAL BASIC APPLICATION \n\n \n\nThe main focus on the prepared visual basic application was to elaborate a clean user interface \n\n(\u201cUI\u201d), while maintaining the functionality of the same.  \n\nIn the application the user is able to visualize the position and temperature at all times when \n\nconnected to the microcontroller.  \n\n \n\n\n\nTemperature/Motion Feedback Loop for Fast Firing \n\n 63 \n\n \n\nFigure 58- Main control tab \n\n \n\nIn the Figure 59is presented the main page of the interface, where: \n\n1- Open settings menu , Connect/Disconnect \n\n2- Active connection parameters \n\n3- Display of the string received by the microcontroller \n\n4- Display of the position and temperature \n\n5- Operation mode selection \n\n6- Manual control of the direction of the motor \n\nThe operation mode selection allows the selection of three modes of operation; \n\n4.13.1   MANUAL CONTROL \n\n \n\nThis mode allows the user to control the direction freely at a constant velocity. Although this \n\nmode is called Manual control, the microcontroller needs to be set up as automatic control since \n\nthe control is still not been given directly by pushing buttons but by sending information over the \n\n\n\nJorge Machado  \n\n                                                                                       64   \n\nconnection between the microcontroller and the computer. This mode work by sending a string \n\ntelling the microcontroller in which direction it should move.  \n\n \n\n \n\nFigure 59- Detailed screenshot of error/information shown when manual control is selected. \n\n \n\nThe Figure 59 shows the error that will pop up if the right order isn\u2019t entered in the text box, the \n\nerror will also explain what needs to be written to start the movement of the motor. \n\n4.13.2  THERMOCOUPLE CONTROL \n\n \n\nThis mode allows the user to insert the ramp of heating desired but the velocity will be given a \n\nconstant value as explained before. \n\n \n\nFigure 60- Thermocouple control tab. \n\n\n\nTemperature/Motion Feedback Loop for Fast Firing \n\n 65 \n\n  \n\nThe Figure 60 presents the main page of the interface, where the numbers signify: \n\n1- Furnace and sample holder \n\n2- Stage of sintering indicator \n\n3- Display of the position and temperature \n\n4- Command Buttons \n\n5- Input Settings \n\n6- Information Display \n\nA visual aid was implemented on the representation of the furnace and sample holder for the \n\nuser to help observe where the sample holder is in the furnace, since it will move accordingly to \n\nthe position it is given by the microcontroller. Of course this feature will only work with this \n\nparticular furnace or with one of a similar geometry. The stage of sintering indicator will indicate \n\nwhether the sintering is still on the heating process, the soaking time inside of the furnace or if \n\nthe sintering process is complete and the sample holder is returning to the point of origin. The \n\ncommand buttons allows the user to start the sintering process, stop it, view the graphical \n\nrepresentation of the last experimental test and it can also save or not the test. The input setting \n\nallows the choosing of the heating ramp, the soak time and the desired temperature to be \n\nreached. The information display shows the time spent on the test, the temperature to be \n\nreached, and the maximum temperature selected by the user. \n\n  \n\n\n\nJorge Machado  \n\n                                                                                       66   \n\n \n\n\n\nTemperature/Motion Feedback Loop for Fast Firing \n\n 67 \n\n5 RESULTS \n\nExperimental tests were performed at different furnace temperatures and different heating rates. \n\nThe method used in the experiments was, for any given constant motor velocity, to follow a \n\nsintering ramp with the closest possible fidelity. This was accomplished by changing the motor \n\ndirection whenever it was required to increase or decreased the temperature. The graphics show \n\nthe relationship obtained between the temperature and the time for any specific heating rate, \n\nrepresented in red. \n\n \n\n \n\n \n\n \n\nFigure 61- Graph obtained with a ramp of 100\u00b0C/min, at 100mm/min and the furnace set at 1000\u00b0C \n\n \n\nFigure 61, shows a reasonable agreement between sample temperature and desired ramp rate \n\nfor a fast firing ramp rate of 100\u00baC/min. Nonetheless, one can observe fluctuations in \n\ntemperature of the order of \u00b1100\u00baC around the intended temperature values. These temperature \n\nfluctuations arise due to slow heating and cooling of the surrounding alumina sample support \n\ntube due to its low thermal conductivity. This is discussed further in the conclusions. Control is \n\n0\n\n200\n\n400\n\n600\n\n800\n\n1000\n\n1200\n\n1\n\n2\n6\n\n5\n1\n\n7\n6\n\n1\n0\n\n1\n\n1\n2\n\n6\n\n1\n5\n\n1\n\n1\n7\n\n6\n\n2\n0\n\n1\n\n2\n2\n\n6\n\n2\n5\n\n1\n\n2\n7\n\n6\n\n3\n0\n\n1\n\n3\n2\n\n6\n\n3\n5\n\n0\n\n3\n7\n\n5\n\n4\n0\n\n0\n\n4\n2\n\n5\n\n4\n5\n\n0\n\n4\n7\n\n5\n\n5\n0\n\n0\n\n5\n2\n\n5\n\n5\n5\n\n0\n\n5\n7\n\n5\n\nT\ne\nm\n\np\ne\nra\n\ntu\nre\n\n (\n\u00baC\n\n)\n\nTime (s)\n\nRamp\n\n\n\nJorge Machado  \n\n                                                                                       68   \n\nalso observed to be difficult at the lowest temperatures due to low temperature gradients at the \n\nmouth of the furnace and, thus, the greater influence of the ambient air temperature and drafts. \n\nThis low temperature deviation is observed to be more severe at high ramp rates, Fig.63. \n\n \n\n \n\nFigure 62 - Graph obtained with a ramp of 150\u00b0C/min, at 50mm/min and the furnace set at 500\u00b0C \n\n \n\nFigure 63- Graph obtained with a ramp of 100\u00b0C/min, at 50mm/min and the furnace set at 600\u00b0C \n\n0\n\n100\n\n200\n\n300\n\n400\n\n500\n\n600\n\n1\n\n1\n2\n\n2\n3\n\n3\n4\n\n4\n5\n\n5\n6\n\n6\n7\n\n7\n8\n\n8\n9\n\n1\n0\n\n0\n\n1\n1\n\n1\n\n1\n2\n\n2\n\n1\n3\n\n3\n\n1\n4\n\n4\n\n1\n5\n\n5\n\n1\n6\n\n6\n\n1\n7\n\n7\n\n1\n8\n\n8\n\nT\ne\n\nm\np\n\ne\nra\n\ntu\nre\n\n (\n\u00b0C\n\n) \n\nTime (s)\n\nRamp\n\n0\n\n100\n\n200\n\n300\n\n400\n\n500\n\n600\n\n700\n\n3\n\n2\n3\n\n4\n3\n\n6\n3\n\n8\n3\n\n1\n0\n\n2\n\n1\n2\n\n2\n\n1\n4\n\n2\n\n1\n6\n\n2\n\n1\n8\n\n2\n\n2\n0\n\n1\n\n2\n2\n\n1\n\n2\n4\n\n1\n\n2\n6\n\n1\n\n2\n8\n\n1\n\n3\n0\n\n0\n\n3\n2\n\n0\n\n3\n4\n\n0\n\n3\n6\n\n0\n\nT\ne\n\nm\np\n\ne\nra\n\ntu\nre\n\n (\n\u00b0C\n\n) \n\nTempo (s)\n\nRamp\n\n\n\nTemperature/Motion Feedback Loop for Fast Firing \n\n 69 \n\n \n\nFigure 64 - Graph obtained with a ramp of 50\u00b0C/min, at 100mm/min and the furnace set at 600\u00b0C \n\n \n\nThe results obtained show the importance to tailor the control variables  during the ramp to \n\nachieve the most accurate response. During an experiment we can change various sintering \n\noptions such as (Temperature of the furnace, velocity of the insertion of the samples and the \n\nramp desired).  \n\n  \n\n0\n\n100\n\n200\n\n300\n\n400\n\n500\n\n600\n\n700\n\n4\n\n4\n2\n\n7\n9\n\n1\n1\n\n7\n\n1\n5\n\n4\n\n1\n9\n\n2\n\n2\n2\n\n9\n\n2\n6\n\n7\n\n3\n0\n\n4\n\n3\n4\n\n2\n\n3\n7\n\n9\n\n4\n1\n\n7\n\n4\n5\n\n5\n\n4\n9\n\n2\n\n5\n3\n\n0\n\n5\n6\n\n7\n\n6\n0\n\n5\n\n6\n4\n\n2\n\n6\n8\n\n0\n\nT\ne\n\nm\np\n\ne\nra\n\ntu\nre\n\n (\n\u00b0C\n\n) \n\nTime (s)\n\nRamp\n\n\n\nJorge Machado  \n\n                                                                                       70   \n\n \n\n\n\nTemperature/Motion Feedback Loop for Fast Firing \n\n 71 \n\n6 CONCLUSION \n\n \n\nThe work accomplished in the scope of this thesis, had as the objective of the Conception of a \n\nsystem that allows the sintering of samples on any given tubular furnace, with different \n\ndisplacements, different gradients of temperatures and different working conditions. \n\nFor the development of this work it was necessary to choose a set of equipment that allowed the \n\nfulfillment of the task at hand, the development of the programs and the methodology and to test \n\nand validate through experimental tests and analysis. \n\nOne of the crucial aspects of the described project on this thesis was the selection of the method \n\nof control of the motor while reading/analyzing the temperature. Some constrains were cost, \n\nreliability of the results and the possibility of having a permanent and fast connection between \n\nthe computer and the circuit.  \n\nAll of the selected components follow the above principle and are within the scale of work being it \n\ntemperature level or speed of analysis and to highlight the possibility of having the possibility to \n\nalso control the position manually and having an instant feedback, this fact also adds a new layer \n\nof security and use to this project. \n\nThe control system developed contains an intrinsic error in the reading of the temperature of 0.25 \n\n\u00b0C and this only represents and error off 0,02% to 0,025%  on the operative scale of the \n\ntemperatures to be used on this particular work that goes from 1000 \u00b0C to 1200 \u00b0C (note that the \n\ntemperature range can go from a minimum of 100\u00baC to a maximum of 1350 \u00b0C, with 100 \u00b0C being \n\nthe lowest temperature to do a valid operation with the program and the 1350 \u00b0C the maximum \n\ntemperature the IC max31855 can read). The monitoring of the temperature on manual setup is \n\ndone in an interval of 500 milliseconds and while on operation of 1second to avoid any errors of \n\ncommunication between the microcontroller and the amplifier of the thermocouple.  \n\nThe results show that the starting point of the sintering process shows great discrepancies on the \n\ntemperature values gathered, due to the already mentioned ambient temperature fluctuations \n\nwhich went from 15 \u00b0C to over 30 \u00b0C caused by drafts and in addition the low temperature \n\ngradient at the mouth of the furnace.  \n\nThe thermocouple cooling also affects in some degree the readings of the temperature. When the \n\nthermocouple is placed inside the alumina cylinder that carries the samples the value of the \n\n\n\nJorge Machado  \n\n                                                                                       72   \n\ntemperature takes longer to decrease/increase because it depends directly on the ability of the \n\nalumina material to follow the heating/cooling process. For more accuracy a support material of \n\nhigher thermal conductivity is, therefore, needed. \n\n \n\nBy increasing the temperature over 600 \u00b0C the resolution required on the position is below 1 \n\nmillimeter, because the temperature changes much more quickly as the thermocouple starts to \n\nget near to the core of the furnace. \n\nThe project, therefore, accomplished the objectives. However, fine tuning of the control is still \n\nneeded with respect to motor speed and thermal conductivity of the support tube.. The operation \n\ncan reach temperatures has high as 1350 \u00b0C, with sufficient speed to enable sintering rates from \n\n50\u00baC per minute to 150 \u00b0C per minute with a reliable response given the conditions of the \n\nexperimental tests. The selected components proved to be appropriate to achieve the functional \n\nconditions desired. The circuit offers an acceptable level of precision and works with consistency \n\nwith the Visual Basic application created for this work. \n\n  \n\n\n\nTemperature/Motion Feedback Loop for Fast Firing \n\n 73 \n\n7 FUTURE WORKS \n\nSince the continuity of the work presented on this thesis possess a high interest, at this point are \n\nprovided some suggestions and tasks to enhance the project. \n\n \n\ni) More tests at more specific rates of sintering to determine which control parameters \n\nare needed for which furnace temperatures and ramp rates. For example, additional \n\nparameters can be altered such as changes of backwards speed to attempt to \n\ncompensate for the slow cooling of the support tube. With this improvement the \n\nrelation Temperature/Time may possibly be improved. \n\n \n\nii)  The addition of a second thermocouple that will move at the same time the \n\nthermocouple checking the temperature of the samples. This second thermocouple \n\nwill be placed in front of the sample holder to read the temperature and store it the \n\nvisual basic application. This will change how the program functions, because instead \n\nof relying on direction changes at a constant speed, it will work with variable speeds \n\ncalculated with the displacement between the temperature taken by the second \n\nthermocouple and the sample holder one. \n\nThe second thermocouple can be applied to the already made circuit, because this \n\nconcept has been predicted for future works and the code to read two thermocouples \n\nsimulatiously has already been implemented in the code. \n\n \n\niii) The implementation of a Wifi or Bluetooth component to enable the working of this \n\ncircuit without it needing to be near the either the circuit or the furnace. \n\n \n\niv) If the same furnace is used for a long period of time it could also be create an array of \n\ndata between the temperature/position to determine the exact velocity at any point \n\nof the motor to conduct a more reliable experimental test. This method was not \n\nimplemented in this work, because the main idea was the ability to change the \n\nfurnace that the sample is supposed to be sintered with, without the need to make \n\nadditional changes to the code either in the microcontroller or in the Visual Basic \n\napplication. \n\n\n\nJorge Machado  \n\n                                                                                       74   \n\n  \n\n\n\nTemperature/Motion Feedback Loop for Fast Firing \n\n 75 \n\n8 REFERENCES \n\n1.  Gitzen WH. Alumina as a Ceramic Material. The American Ceramic Society; 1970. \n\n2.  Herring C. No Title. J. Appl. Phys. 1950;21:301\u2013303. \n\n3.  Rahaman MN. Ceramic processing and sintering. Marcel Dekker; 2003. \n\n4.  Coble RL. No Title. J. Appl. Phys. 1961;32:787-792. \n\n5.  Barsoum MW. Fundamentals of ceramics. Taylor &amp; Francis; 2003. \n\n6.  Frenkel J. No Title. J,Phys. (Moscow) 1945;5:385. \n\n7.  Shi JL. Solid state sintering of ceramics?: pore microstructure models , densification. \n\n1999;di:3801 - 3812. \n\n8.  Uhlmann, D. R. Klein, L. C. Hopper RW. No Title. Dordrecht, Holland 1975;277\u2013284. \n\n9.  Esposito V, Traversa E. Design of Electroceramics for Solid Oxides Fuel Cell Applications: \n\nPlaying with Ceria [Internet]. Journal of the American Ceramic Society 2008 \n\nApr;91(4):1037-1051.[cited 2010 Aug 25] Available from: \n\nhttp://doi.wiley.com/10.1111/j.1551-2916.2008.02347.x \n\n10.  Y. M. Chiang, D. Birnie III WDK. . In: C. Robichaud KS, editor. Physical Ceramics, Principles \n\nfor Ceramics and Engineering. New York: 1996 p. 351-428. \n\n11.  Mishin Y, Herzig C. Grain boundary diffusion: recent progress and future research \n\n[Internet]. Materials Science and Engineering: A 1999 Feb;260(1-2):55-71.Available from: \n\nhttp://linkinghub.elsevier.com/retrieve/pii/S0921509398009782 \n\n12.  J.C.Fisher. . J. Appl. Phys 1951;22:74. \n\n13.  Wikipedia F. OSI Model [Internet]. System 2005;247-315.Available from: \n\nhttp://en.wikipedia.org/wiki/existensialism \n\n\n\nJorge Machado  \n\n                                                                                       76   \n\n14.  Day JD, Zimmermann H. The OSI reference model [Internet]. Proceedings of the IEEE \n\n1983;71(12):1334-1340.Available from: \n\nhttp://portal.acm.org/citation.cfm?id=202035.202039 \n\n15.  Options C. The RS-232 Standard [Internet]. Instrumentation 2003;232-232.Available from: \n\nhttp://www.camiresearch.com/Data_Com_Basics/RS232_standard.html \n\n16.  Interface SP. Interface ( SPI ). Control 2009;(June):9509-9509. \n\n17.  Interface SP. Serial Peripheral Interface [Internet]. httpdewikipediaorg \n\n2006;0153:10.Available from: http://de.wikipedia.org/wiki/Serial_Peripheral_Interface \n\n18.  Usb NI. USB I 2 C / SPI Interface. Exchange Organizational Behavior Teaching Journal \n\n2000;3693(800) \n\n19.  Santos JP. Tecnologias de Accionamento e Comando [Internet]. 2010;[cited 2011 Feb 3] \n\nAvailable from: http://ims.mec.ua.pt/tac2010/ \n\n20.  Ayala KJ. 8051 Microcontroller: Architecture, Programming, and Applications. Delmar \n\nThomson Learning; 1999. \n\n21.  Sanchez J, Canton MP. Microcontroller programming: the microchip PIC. CRC; 2006. \n\n22.  Petroutsos E. Mastering Microsoft Visual Basic 2010. John Wiley and Sons; 2010. \n\n23.  Stepper motor [Internet]. [date unknown];Available from: \n\nhttp://www.cncroutersource.com/stepper-motor-drivers.html \n\n24.  TI. Datasheet nema23 stepper motor [Internet]. 2000;Available from: \n\nhttp://sine.ni.com/ds/app/doc/p/id/ds-311/lang/en \n\n25.  Maxim. Max31855 Datasheet. 2011;  \n\n \n\n  \n\n\n\nTemperature/Motion Feedback Loop for Fast Firing \n\n 77 \n\n \n\n \n\n \n\n \n\n \n\n \n\nAnnexes \n\n\n\nJorge Machado  \n\n                                                                                       78   \n\nAnnex A - Analysis of the circuit \n\nMotor circuit \n\n \n\n \n\n \n\n\n\nTemperature/Motion Feedback Loop for Fast Firing \n\n 79 \n\nLCD circuit \n\n \n\n \n\nRS 232 circuit \n\n \n\n \n\n\n\nJorge Machado  \n\n                                                                                       80   \n\nMax31855 with 4050 level shifter \n\n \n\n \n\n\n\nTemperature/Motion Feedback Loop for Fast Firing \n\n 81 \n\nElectric circuit \n\n  \n\n\n\nJorge Machado  \n\n                                                                                       82   \n\n \nAnnex B- Program used in microchip (C Language) \n\n \n\nFile - Main.c \n\n/********************** \nMain.c \n***********************/ \n \n \n#define _XTAL_FREQ 4000000 \n#include&lt;stdio.h> \n#include&lt;htc.h> \n#include \"lcd.h\" \n#include \"usart.h\" \n#include \"max31855.h\" \n#include \"delay.h\" \n#include \"motor.h\" \n#include&lt;stdint.h> \n \n \n \n \nvoid display_value(short long value){ \n    short long value_x1000; \n    short long digit; \n    value_x1000 = (short long)(value * 100); \n    digit = (value_x1000/1000000)%10; \n    lcd_putch( '0' + digit); \n    digit = (value_x1000/100000)%10; \n    lcd_putch( '0' + digit); \n//  lcd_putch( '.');    //decimal point \n    digit = (value_x1000/10000)%10; \n    lcd_putch( '0' + digit); \n    digit = (value_x1000/1000)%10; \n    lcd_putch( '0' + digit); \n    digit = (value_x1000/100)%10; \n    lcd_putch( '0' + digit); \n    lcd_putch('m'); \n} \n/************************************************** \n                Pins \n*************************************************/ \n \n \n/*********************** \n        Motor \n***********************/ \n \n//PortB \n \n/*********************** \n        Buttons \n***********************/ \n \n//PortE \n\n\n\nTemperature/Motion Feedback Loop for Fast Firing \n\n 83 \n\n \n/*********************** \n        Leds \n***********************/ \n \n//RA0 - ON \n//RA1 - OFF \n//RA2 - Man \n//RA3 - Aut \n//RA4 - Dir CW \n//RA5 - Dir CCW \n \n/*********************** \n        SPI \n***********************/ \n \n//RE0 - ON/OFF \n//RE1 - Man/Aut \n//RE2 - Dir CW/CCW \n \n/*********************** \n        232 \n***********************/ \n \n// RC6, RC7 \n \n/*********************** \n        LCD \n***********************/ \n//PORTD \n \n/************************************************** \n                Variables \n**************************************************/ \n \n \nunsigned int        input; \nunsigned int        converter_ascii_to_dec; \n \nvoid display_value1(short long value) \n{ \n    short long value_x1000; \n    short long digit; \n    value_x1000 = (short long)(value * 100); \n    digit = (value_x1000/100000)%10; \n    lcd_putch( '0' + digit); \n    digit = (value_x1000/10000)%10; \n    lcd_putch( '0' + digit); \n    digit = (value_x1000/1000)%10; \n    lcd_putch( '0' + digit); \n    digit = (value_x1000/100)%10; \n    lcd_putch( '0' + digit); \n} \n \n \nvoid init_PORT(void){ \n \n \n// LEDS \n\n\n\nJorge Machado  \n\n                                                                                       84   \n\n    TRISA0=0; \n    TRISA1=0; \n    TRISA2=0; \n    TRISA3=0; \n    TRISA4=0; \n    TRISA5=0; \n \n \n// Motor \n    TRISB0=0; \n    TRISB1=0; \n    TRISB2=0; \n    TRISB3=0; \n \n    TRISB5=0; \n    TRISB6=0; \n    TRISB7=0; \n \n// Buttons \n    TRISE0=1; \n    TRISE1=1; \n    TRISE2=1; \n \n    TRISC0=0; \n} \n \n \nvoid init(void){ \n \n    lcd_init(FOURBIT_MODE); \n    TRISD=0; \n \n} \n \n \nvoid sendstring(void){ \nfloat temperature = readCelsius(); \nfloat temperature2=temperature*2; \nint counter_real=motor_pos(); \nprintf(\"U\\n%04d%%%04f\\nQ\", Counter_real,temperature2); \ntester=100; \n} \n \nvolatile unsigned char outString[20]; \n \nvoid main(void){ \n \n    OpenSPI(SPI_FOSC_64,MODE_01,SMPEND); \n \n    ADCON0 = 0x3C; \n    ADCON1= 0x0F; \n    CMCON = 0x07; \n \n    init_PORT(); \n    init_comms();               // set up the USART - settings defined in \nusart.h \n    INTCON=0;                   // purpose of disabling the interrupts. \n    lcd_init();                 // Lcd StartUp \n     \n\n\n\nTemperature/Motion Feedback Loop for Fast Firing \n\n 85 \n\n \nwhile(1){ \n \nint max = 200; \n    int i; \n    for(i = 0; i &lt;max;i++){ \nif (RE0 ==0){ \n \nRA0=1; \nRA1=0; \n \n    if (RE1 ==1){ \n \nRA3=0; \nRA2=1; \n \n        lcd_goto(0);                // select first line in LCD \n        lcd_puts(\"MAN.\");       // display text in first line \n        lcd_goto(0+4);              // select first line in LCD \n        lcd_puts(\"POS:\");       // display text in first line \n        lcd_goto(0x40);             // Select second line \n        lcd_puts(\"T1: \");       // display text in second line \n        lcd_goto(0x47);             // Select second line \n        lcd_puts(\"|T2: \");      // display text in second line \n \n        if (RE2 == 1){ \nRA4=0; \nRA5=1; \n            RB1=1; \n            RB0=1; \n            RB3=1; \n            RB2=0; \n            RC0=1; \n            __delay_ms(1); \n            RC0=0; \n            __delay_ms(1); \n            Counter_inter=Counter_inter+1; \n            Counter_real=Counter_inter/40; \n                    }                   // End RE2 On \n        if(RE2 == 0) \n            { \nRA4=1; \nRA5=0; \n            RB0=1; \n            RB1=1; \n            RB3=0; \n            RB2=0; \n            RC0=1; \n            __delay_ms(1); \n            RC0=0; \n            __delay_ms(1); \n                    }                   // End RE2 0 \n                }                       // End RE1 1 \n    if (RE1 == 0){   \nRA3=1; \nRA2=0;       \n \n        lcd_goto(0);                // select first line in LCD \n        lcd_puts(\"AUT.\");       // display text in first line \n\n\n\nJorge Machado  \n\n                                                                                       86   \n\n        lcd_goto(0+4);              // select first line in LCD \n        lcd_puts(\"POS:\");       // display text in first line \n        lcd_goto(0x40);             // Select second line \n        lcd_puts(\"T1: \");       // display text in second line \n        lcd_goto(0x47);             // Select second line \n        lcd_puts(\"|T2: \");      // display text in second line \n \n         \n        if(RCIF)    {                       // Receive Data 232 \n            input= getch();                 // read a response from the \nuser \n            converter_ascii_to_dec=input-0x30; \n                    }       // Conversion from Ascii to Decimal numbers \n                    else \n                    { \n                    __delay_ms(1); \n                    }        \n        if (converter_ascii_to_dec==2){ \nRA4=0; \nRA5=1; \n            RB0=1; \n            RB1=1; \n            RB3=1; \n            RB2=0; \n \n            RC0=1; \n            __delay_ms(3); \n            RC0=0; \n            __delay_ms(3); \n                                    }          // End input ==1 \n        if (converter_ascii_to_dec==1){ \n \nRA4=1; \nRA5=0; \n            RB0=1; \n            RB1=1; \n            RB3=0; \n            RB2=0; \n            RC0=1; \n            __delay_ms(10); \n            RC0=0; \n            __delay_ms(10);                                                                                                                             \nCounter_real=Counter_inter/10; \n                                    }                       // End input \n==2 \n        if (converter_ascii_to_dec==3){ \nRA4=0; \nRA5=0; \n            RB0=0; \n                                        }                       // End \ninput ==3 \n \n}                                       // End RE1 Off \n}                                   // End RE0 \nelse \n{ \nRB0=1; \nRB5=1; \nRB1=0; \n\n\n\nTemperature/Motion Feedback Loop for Fast Firing \n\n 87 \n\n__delay_ms(1); \n}                                    \n}                                   //end While \nsetupMAX31855(ReadSPI); \nsendstring(); \nlcd_goto(0);                // select first line in LCD \nlcd_puts(\"Encoder:\");       // display text in first line \nlcd_goto(0x40);             // Select second line \nlcd_puts(\"Tempera: \");      // display text in second line \n    } \n} \n\n \n\n\n\nJorge Machado  \n\n                                                                                       88   \n\nAnnex C-Technical drawings of the control box \n\n \n\n \n\nFront View \n\n \n\nBack View \n\n \n\nCover \n\n\n\nTemperature/Motion Feedback Loop for Fast Firing \n\n 89 \n\n \n  \n\nCover \n\nSides \n\n\n\nJorge Machado  \n\n                                                                                       90   \n\nAnnex D- Linear Table \n\nAdditional information \n\n \n\n  \n\n\n\nTemperature/Motion Feedback Loop for Fast Firing \n\n 91 \n\nAnnex E- Nema 23 Detailed Specifications \n\n \n\nNEMA 17 Motor \n\nElectrical \n\nStep angle   1.8 deg \n\nSteps per revolution   200 \n\nAngular accuracy   \u00b13% \n\nPhases   2 \n\nIndustry Standards \n\nIndustrial standards   CE, UR \n\nSealing standards   IP40 \n\nRoHS Compliance   Yes \n\nPhysical \n\nOperating temperature   -20 to 40 \u00b0C \n\nShaft load (20,000 hours at 1,500 rpm) \n\nRadial   15 lb (6.8 kg) at shaft center \n\nAxial push   6 lb (2.7 kg) \n\nAxial pull   15 lb (6.8 kg) \n\nRecommended heat sink size   10 x 10 x 1/4 in. aluminum plate \n\n  \n\nNI \n\nPart \n\nNumb\n\ner \n\nManufacturer \n\nPart Number \n\nDua\n\nl \n\nSha\n\nft \n\nDrive \nAmps/Pha\n\nse \n\nHoldi\n\nng \n\nTorqu\n\ne \n\noz-in. \n\n(N . m\n\n) \n\nRotor \n\nInerti\n\na \n\noz-in.-\n\ns\n2\n \n\n(kg-m\n2\n \n\nx 10\n-3\n) \n\nPhase \n\nInductan\n\nce \n\nmH \n\nPhase \n\nResistan\n\nce \n? \u00b110% \n\nDeten\n\nt \n\nTorq\n\nue \n\noz-in. \n\n(N . m\n\n) \n\nThermal \n\nResistan\n\nce \n\n\u00b0C/watt \n\nMax \n\nSpee\n\nd \n\nrpm \n\n780067\n\n-01 \n\nCTP10ELF10MA\n\nA00 \nno \n\nP7053\n\n0 \n\n1.0 \n43  \n\n(0.30) \n\n0.0005\n\n  \n\n(0.004\n\n0) \n\n7.7 5.25 \n\n1.98  \n\n(0.014\n\n) \n\n6.21 \n\n3000 \n\n780068\n\n-01 \n\nCTP10ELF10MM\n\nA00 \nyes \n\n780069\n\n-01 \n\nCTP11ELF11MA\n\nA00 \nno \n\n1.1 \n63  \n\n(0.44) \n\n0.0008\n\n  \n\n(0.005\n\n0) \n\n11 5.19 \n\n2.55  \n\n(0.018\n\n) \n\n5.44 \n780070\n\n-01 \n\nCTP11ELF11MM\n\nA00 \nyes \n\n780071\n\n-01 \n\nCTP12ELF10MA\n\nA00 \nno \n\n1.0 \n80  \n\n(0.56) \n\n0.0011\n\n  \n\n(0.007\n\n0) \n\n12 6.51 \n\n2.97  \n\n(0.021\n\n) \n\n4.71 \n780072\n\n-01 \n\nCTP12ELF11MA\n\nA0 \nyes \n\n  \n\nTorque versus Speed \n\n\n\nJorge Machado  \n\n                                                                                       92   \n\n780067-01 and 780068-01 \n\nTorque versus Speed at 1.0 A \n\n \n\n780069-01 and 780070-01 \n\nTorque versus Speed at 1.1 A \n\n \n\n780071-01 and 780072-01 \n\nTorque versus Speed at 1.0 A \n\n \n\nDimensions and Wiring \n\n  \n\n \n\nNI Part \n\nNumber \n\nManufacturer Part \n\nNumber \n\nDual \n\nShaft \n\nMax \n\nLength A \n\nin. (mm) \n\nNet \n\nWeight \n\nlb (kg) \n\n780067-\n\n01 \nCTP10ELF10MAA00 no \n\n1.37 \n\n(34.7) \n\n0.441 \n\n(0.200) 780068-\n\n01 \nCTP10ELF10MMA00 yes \n\n780069-\n\n01 \nCTP11ELF11MAA00 no \n\n1.61 \n\n(40.9) \n\n0.573 \n\n(0.260) 780070-\n\n01 \nCTP11ELF11MMA00 yes \n\n780071-\n\n01 \nCTP12ELF10MAA00 no \n\n1.92 \n\n(48.8) \n\n0.750 \n\n(0.340) 780072-\n\n01 \nCTP12ELF11MAA0 yes \n\n  \n\nNEMA 23 Motor \n\nElectrical \n\nStep angle   1.8 deg \n\nSteps per revolution   200 \n\nAngular accuracy   \u00b13% \n\nPhases   2 \n\nIndustry Standards \n\n\n\nTemperature/Motion Feedback Loop for Fast Firing \n\n 93 \n\nIndustrial standards   CE, cUR, UR \n\nRoHS Compliance   Yes \n\nPhysical \n\nOperating temperature   -20 to 40 \u00b0C \n\nRated ambient temperature   40 \u00b0C \n\nShaft load (20,000 hours at 1,500 rpm) \n\nRadial   20 lb (9.1 kg) at shaft center \n\nAxial push   6 lb (2.7 kg) \n\nAxial pull   50 lb (22.7 kg) \n\nRecommended heat sink size   10 x 10 x 1/4 in. aluminum plate \n\nRecommended encoder   780251-01"}]}}}