{"add": {"doc": {"field": [{"@name": "docid", "#text": "BR-TU.10990"}, {"@name": "filename", "#text": "161_lavorante_lp_me_rcla.pdf"}, {"@name": "filetype", "#text": "PDF"}, {"@name": "text", "#text": "UNIVERSIDADE ESTADUAL PAULISTA \n\nInstituto de Geoci\u00eancias e Ci\u00eancias Exatas\n\nCampus de Rio Claro \n\nT\u00c9CNICAS DE MODELAGEM 3D APLICADAS A \nDADOS PALEOBATIM\u00c9TRICOS\n\nDAS BACIAS DE SANTOS E CAMPOS E \u00c0 \nSIMULA\u00c7\u00c3O DEFORMACIONAL DE\n\nOBJETOS GEOL\u00d3GICOS\n\nLuca Pallozzi Lavorante\n\nOrientador: Prof. Dr. Hans Dirk Ebert \n\nDisserta\u00e7\u00e3o de Mestrado elaborada junto ao \n\nPrograma de P\u00f3s-Gradua\u00e7\u00e3o em Geoci\u00eancias -\n\n\u00c1rea de Concentra\u00e7\u00e3o em Geologia Regional, \n\npara obten\u00e7\u00e3o do t\u00edtulo de Mestre em \n\nGeoci\u00eancias\n\nRIO CLARO (SP) \n2005\n\n\n\n550.0285   Lavorante, Luca Pallozzi \nL414t              T\u00e9cnicas de modelagem 3D aplicadas a dados paleobati- \n                  m\u00e9tricos  das bacias de Santos e Campos e \u00e0 simula\u00e7\u00e3o \n                  deformacional de objetos geol\u00f3gicos / Luca Pallozzi\n                  Lavorante. \u2013 Rio Claro : [s.n.], 2005  \n                        210 f. : il., figs., mapas + CD-ROM \n\n                        Disserta\u00e7\u00e3o (mestrado) \u2013 Universidade Estadual  Paulis- \n                  ta,  Instituto de Geoci\u00eancias e Ci\u00eancias Exatas \n                        Orientador: Hans Dirk Ebert \n\n                        1. Geologia \u2013 Programas de computador. 2. Visualiza- \n                  \u00e7\u00e3o  3D. 3. Geomodelagem. 4. Paleobatimetria. 5. Tensor. \n                  I. T\u00edtulo. \n\nFicha Catalogr\u00e1fica elaborada pela STATI \u2013 Biblioteca da UNESP \nCampus de Rio Claro/SP \n\n\n\nComiss\u00e3o Examinadora \n\nProf. Dr. Hans Dirk Ebert - Orientador  \n\nProf. Dr. Ricardo Latg\u00e9 Milward de Azevedo \n\nProf. Dr. Cl\u00e1udio Coelho de Lima \n\nLuca Pallozzi Lavorante \n- Aluno -\n\nRio Claro, 28 de Outubro de 2005\n\nResultado: Aprovado com louvor e distin\u00e7\u00e3o \n\n\n\nA Minoru e Helena Irikura, \n\nque propiciaram minha caminhada \n\nem dire\u00e7\u00e3o ao mundo acad\u00eamico\n\n\n\nAGRADECIMENTOS\n\nGostaria de agradecer a todas as pessoas que contribu\u00edram para a execu\u00e7\u00e3o \n\ndeste trabalho.\n\nEm especial, meus sinceros agradecimentos: \n\n- Ao Prof. Dr. Hans Dirk Ebert, por seu acompanhamento e ajuda em \n\ntodas as etapas deste trabalho. \n\n- Ao ge\u00f3logo Iata Anderson de Sousa, que sanou minhas d\u00favidas com \n\nadmir\u00e1vel paci\u00eancia. \n\n- A Elias Isler, Consuelo Carolina Perinotto e Gustavo Henrique Teixeira \n\nda Silva, integrantes do Laborat\u00f3rio de GeoModelagem 3D do \n\nDPM/IGCE/UNESP, cujo trabalho permitiu a resolu\u00e7\u00e3o de numerosos \n\nproblemas. \n\n- Ao Programa para a Forma\u00e7\u00e3o de Recursos Humanos para o Setor de \n\nPetr\u00f3leo e G\u00e1s (PRH), conduzido pela Ag\u00eancia Nacional do Petr\u00f3leo \n\n(ANP), pela concess\u00e3o de uma bolsa de estudo. \n\n- Ao meu pai Giuseppe, por seu incentivo e admir\u00e1vel capacidade de \n\ns\u00edntese.\n\n- Finalmente a Nena, pelo companheirismo e alegria. \n\n\n\nSUM\u00c1RIO\n\n\u00cdndice .............................................................................................................. ii\nResumo ........................................................................................................... iv\n\nAbstract .......................................................................................................... v\n\n1 Introdu\u00e7\u00e3o ................................................................................................... 1\n\n2 Objetivos ..................................................................................................... 2\n\n3 M\u00e9todos ....................................................................................................... 2\n\n4 \u00c1rea de Estudo ............................................................................................ 42\n\n5 Tensor3D: um programa para simula\u00e7\u00e3o de tensores em tr\u00eas dimens\u00f5es ... 63\n\n6 Integra\u00e7\u00e3o das bibliotecas VTK e GTK ...................................................... 132\n\n7 Modelagem 3D da paleobatimetria das bacias de Santos e Campos .......... 139\n\n8 Conclus\u00f5es .................................................................................................. 201\n\n9 Refer\u00eancias bibliogr\u00e1ficas ........................................................................... 205\n\n\n\n\u00cdNDICE\n1 Introdu\u00e7\u00e3o ........................................................................................................................ 1\n\n2 Objetivos ......................................................................................................................... 2\n\n3 M\u00e9todos ........................................................................................................................... 2\n\n3.1 Conceitos sobre computa\u00e7\u00e3o gr\u00e1fica e visualiza\u00e7\u00e3o cient\u00edfica ................................ 4\n\n3.1.1 Conceitos de modelagem e visualiza\u00e7\u00e3o de dados ......................................... 5\n\n3.2 Introdu\u00e7\u00e3o \u00e0s ferramentas de c\u00f3digo aberto ............................................................ 9\n\n3.3 O sistema operacional Linux ................................................................................... 10\n\n3.4 O sistema VTK ........................................................................................................ 11\n\n3.4.1 Estrutura fundamental do sistema VTK ......................................................... 12\n\n3.4.2 Defini\u00e7\u00e3o de modelos geom\u00e9tricos tridimensionais ....................................... 14\n\n3.4.3 Programas compilados e programas interpretados ......................................... 18\n\n3.4.4 Estrutura de arquivos de dados do VTK ......................................................... 21\n\n3.4.5 Instala\u00e7\u00e3o do VTK .......................................................................................... 24\n\n3.5 Ferramentas para o desenvolvimento de programas ................................................ 29\n\n3.5.1 O arquivo Makefile ......................................................................................... 29\n\n3.5.2 O ambiente de desenvolvimento anjuta ......................................................... 31\n\n3.5.3 A biblioteca GTK ........................................................................................... 33\n\n3.5.4 A ferramenta glade ......................................................................................... 35\n\n3.6 O programa GOCAD ............................................................................................... 36\n\n3.6.1 Intera\u00e7\u00e3o com o programa .............................................................................. 36\n\n3.6.2 Objetos dispon\u00edveis no GOCAD .................................................................... 38\n\n4 \u00c1rea de estudo ................................................................................................................. 42\n\n4.1 Contexto regional ..................................................................................................... 42\n\n4.2 Geologia das bacias de Campos e Santos ................................................................ 43\n\n5 Tensor3D: um programa para simula\u00e7\u00e3o de tensores em tr\u00eas dimens\u00f5es ....................... 63\n\n5.1 Teoria dos tensores .................................................................................................. 63\n\n5.2 Nota\u00e7\u00e3o para o tensor de tens\u00e3o .............................................................................. 64\n\nii\n\n\n\n5.3 Nota\u00e7\u00e3o para o tensor de deforma\u00e7\u00e3o ...................................................................... 66\n\n5.4 Autovalores e autovetores: eixos principais de tens\u00e3o e deforma\u00e7\u00e3o ...................... 67\n\n5.5 O c\u00edrculo de Mohr para a tens\u00e3o .............................................................................. 70\n\n5.6 O c\u00edrculo de Mohr para a deforma\u00e7\u00e3o ..................................................................... 73\n\n5.7 Obten\u00e7\u00e3o de elips\u00f3ides a partir de tensores ............................................................. 74\n\n5.8 Considera\u00e7\u00f5es sobre a simetria dos tensores de tens\u00e3o e deforma\u00e7\u00e3o .................... 76\n\n5.9 O programa Tensor3D ............................................................................................. 77\n\n5.9.1 Modelagem de glyphs ..................................................................................... 78\n\n5.9.2 Descri\u00e7\u00e3o das funcionalidades ........................................................................ 81\n\n5.9.3 Estrutura do programa .................................................................................... 96\n\n5.9.4 Instala\u00e7\u00e3o ........................................................................................................ 106\n\n5.9.5 Programas auxiliares: Object Factory 3D ...................................................... 109\n\n5.9.6 Algumas aplica\u00e7\u00f5es ........................................................................................ 113\n\n6 Integra\u00e7\u00e3o das bibliotecas VTK e GTK .......................................................................... 132\n\n6.1 Compila\u00e7\u00e3o dos m\u00f3dulos de trabalho ...................................................................... 132\n\n6.2 Gerenciamento de m\u00faltiplos ciclos de intera\u00e7\u00e3o ..................................................... 133\n\n6.3 Sincroniza\u00e7\u00e3o e comunica\u00e7\u00e3o entre processos de execu\u00e7\u00e3o (threads) .................... 135\n\n7 Modelagem 3D da paleobatimetria das bacias de Santos e Campos ............................... 139\n\n7.1 Digitaliza\u00e7\u00e3o e georreferenciamento das curvas ..................................................... 141\n\n7.2 Cria\u00e7\u00e3o de Modelos Digitais de Terreno (MDT\u00b4s) ................................................. 143\n\n7.3 Modelagem de dados complementares .................................................................... 146\n\n7.4 Visualiza\u00e7\u00e3o 3D dos modelos digitais obtidos ........................................................ 152\n\n7.5 Modelagem de superf\u00edcies paleobatim\u00e9tricas intermedi\u00e1rias .................................. 165\n\n7.6 Integra\u00e7\u00e3o com demais dados geol\u00f3gicos ................................................................ 169\n\n7.7 Modelagem de outros dados batim\u00e9tricos e paleobatim\u00e9tricos ............................... 185\n\n7.8 Discuss\u00e3o dos resultados ......................................................................................... 197\n\n8 Conclus\u00f5es ....................................................................................................................... 201\n\n9 Refer\u00eancias Bibliogr\u00e1ficas ............................................................................................... 205\n\niii\n\n\n\nRESUMO\n\nPalavras chave: Geomodelagem, visualiza\u00e7\u00e3o 3D, Bacia de Santos, Bacia de Campos,\n\npaleobatimetria, tensor. \n\nAs pesquisas em geoci\u00eancias tendem cada vez mais a utilizar grande volume de\n\ndados heterog\u00eaneos, cuja interpreta\u00e7\u00e3o integrada \u00e9 complexa devido ao envolvimento de \n\ndiferentes par\u00e2metros, bem como de rela\u00e7\u00f5es temporais e espaciais. As t\u00e9cnicas de \n\ncomputa\u00e7\u00e3o gr\u00e1fica e visualiza\u00e7\u00e3o cient\u00edfica assumem import\u00e2ncia crescente por \n\npermitirem representar e manipular dados geol\u00f3gicos tal como s\u00e3o e est\u00e3o no espa\u00e7o, isto \u00e9,\n\nem 3D. Esta disserta\u00e7\u00e3o teve por objetivo utilizar ferramentas computacionais para modelar \n\ngeometricamente e visualizar dados geol\u00f3gicos. Utilizando o programa GOCAD foram\n\nconstru\u00eddas superf\u00edcies paleobatim\u00e9tricas das bacias de Santos e Campos para o meso-\n\nNeocret\u00e1ceo a partir dos dados dispon\u00edveis na literatura. Sua integra\u00e7\u00e3o com dados \n\nlitol\u00f3gicos e estruturais em um \u00fanico ambiente de visualiza\u00e7\u00e3o 3D permitiu aumentar o \n\npotencial de interpreta\u00e7\u00e3o dos dados originalmente representados em mapas\n\nbidimensionais. Para melhor contextualizar a evolu\u00e7\u00e3o paleogeogr\u00e1fica destas bacias\n\ndurante a abertura do Atl\u00e2ntico Sul e representar analogias com ambientes de deposi\u00e7\u00e3o \n\natuais foram constru\u00eddas superf\u00edcies batim\u00e9tricas do Atl\u00e2ntico Sul do mesocret\u00e1ceo ao \n\nrecente e do Mar Vermelho. A partir da utiliza\u00e7\u00e3o de ferramentas de modelagem e\n\nvisualiza\u00e7\u00e3o 3D de dom\u00ednio p\u00fablico (VTK) foi desenvolvido um programa computacional\n\n(Tensor3D) para a simula\u00e7\u00e3o da deforma\u00e7\u00e3o de objetos geol\u00f3gicos, desde rochas, estruturas\n\ntect\u00f4nicas, domos de sal at\u00e9 bacias, a partir da modifica\u00e7\u00e3o dos componentes de \n\ncisalhamento simples e puro contidos em tensores de deforma\u00e7\u00e3o. A capacidade de \n\ndeforma\u00e7\u00e3o interativa, aliada \u00e0 possibilidade de armazenar e ler novamente resultados de \n\netapas intermedi\u00e1rias de deforma\u00e7\u00e3o tornam o programa uma ferramenta did\u00e1tica ideal para \n\nestudo da deforma\u00e7\u00e3o de corpos geol\u00f3gicos em 3D, al\u00e9m de fornecer um instrumento de\n\naux\u00edlio ao entendimento do comportamento de estruturas geom\u00e9tricas complexas durante \n\nprocessos deformacionais.\n\niv\n\n\n\nABSTRACT\n\nKeywords: Geomodelling, 3D Visualization, Santos and Campos basins, paleobathymetry,\n\ntensor.\n\nResearch in Geosciences is currently using extensive volumes of heterogeneous \n\ndata, whose integrated interpretation is complex due to the involvement of different \n\nparameters, as well as time and spatial relationships. Computer graphics and scientific \n\nvisualization techniques are assuming increasing importance as they allow the \n\nrepresentation and manipulation of geologic data exactly as they appear in 3D space. The \n\npurpose of this work is using computational tools in order to geometrically model and \n\nvisualize geologic data. Using the GOCAD program, mid-Early Cretaceus\n\npaleobathymetric surfaces have been constructed for the Santos and Campos basins, based \n\non published data. Their additional integration with lithologic and structural data in a \n\nunified 3D visualization environment, allowed an increase in the interpretative potential of \n\ndata originally represented using 2D maps. In order to provide a more general context for \n\nthe paleogeographic evolution of these basins during the opening of the South Atlantic \n\nOcean, and to represent analogies with current depositional environments,\n\npaleobathymetric surfaces have been modelled for the South Atlantic Ocean, from mid-\n\nEarly Cretaceous to present time, and for the present Red Sea. By using 3D open-source\n\nmodelling and visualization tools (VTK), a computational program (Tensor3D) has been \n\ndevoloped to simulate deformation of geologic objects, from rocks, tectonic structures, salt\n\ndomes to basins. This process is controlled by modifyng simple and pure shear components\n\ncontained in strain tensors. The consequent real time deformation, along with the feature of \n\nstoring and later retrieving geometric results from intermediate deformation steps makes\n\nthe program an ideal tool for the study of geologic bodies\u00b4 deformation in 3D. The program\n\nalso represents a useful tool for understanding the behaviour of complex geometric\n\nstructures during deformation processes. \n\nv\n\n\n\n1 Introdu\u00e7\u00e3o \n\nAs pesquisas em geoci\u00eancias tendem cada vez mais a envolver a constru\u00e7\u00e3o de \n\nmodelos geom\u00e9tricos tridimensionais, aperfei\u00e7oando a visualiza\u00e7\u00e3o de grande volume de \n\ndados e a interpreta\u00e7\u00e3o dos resultados. O volume de dados tende a aumentar constantemente e \n\no seu tratamento a ser cada vez mais sofisticado. A crescente necessidade de compreens\u00e3o do\n\ncomportamento espacial de corpos e par\u00e2metros geol\u00f3gicos demanda a integra\u00e7\u00e3o entre dados \n\nde superf\u00edcie (como mapas geol\u00f3gicos bidimensionais) e de sub-superf\u00edcie (perfis geol\u00f3gicos \n\ne geof\u00edsicos, sondagens, etc.). A modelagem 3D permite a visualiza\u00e7\u00e3o simult\u00e2nea e \n\nconseq\u00fcentemente uma interpreta\u00e7\u00e3o integrada de diferentes elementos geol\u00f3gicos como \n\ntopografia, estruturas tect\u00f4nicas, horizontes estratigr\u00e1ficos e par\u00e2metros geof\u00edsicos. As \n\nprincipais vantagens da constru\u00e7\u00e3o e da manipula\u00e7\u00e3o de modelos tridimensionais s\u00e3o:\n\n- diagnosticar erros nas interpreta\u00e7\u00f5es geom\u00e9tricas, freq\u00fcentemente impercept\u00edveis nos mapas\n\nbidimensionais;\n\n- incrementar as capacidades de interpreta\u00e7\u00e3o, atrav\u00e9s da: \n\nRepresenta\u00e7\u00e3o simult\u00e2nea em um mesmo modelo de informa\u00e7\u00f5es geom\u00e9tricas e \n\npar\u00e2metros f\u00edsicos ou qu\u00edmicos distintos; \n\nVisualiza\u00e7\u00e3o de grande volume de dados; \n\nMudan\u00e7a no ponto de observa\u00e7\u00e3o, no exagero vertical, no sombreamento, nas cores,\n\netc.;\n\nRepresenta\u00e7\u00e3o de estruturas geol\u00f3gicas que s\u00e3o tridimensionais na natureza, como \n\ncamadas, falhas, dobras, etc.; \n\nSimula\u00e7\u00e3o de processos e fen\u00f4menos, a partir da varia\u00e7\u00e3o dos par\u00e2metros adotados\n\ncom o tempo (anima\u00e7\u00e3o).\n\nA disponibilidade de antigos dados paleobatim\u00e9tricos, litol\u00f3gicos e estruturais\n\npublicados sobre as bacias de Santos e Campos, constitui importante fonte de informa\u00e7\u00f5es\n\npara a ind\u00fastria do petr\u00f3leo. Sua utiliza\u00e7\u00e3o, no entanto, restringe interpreta\u00e7\u00f5es integradas e \n\navan\u00e7adas, pois os dados encontram-se representados em mapas bidimensionais impressos e \n\nn\u00e3o georeferenciados Atrav\u00e9s do seu georeferenciamento e integra\u00e7\u00e3o em um ambiente de\n\nvisualiza\u00e7\u00e3o 3D \u00e9 poss\u00edvel aumentar seu potencial de interpreta\u00e7\u00e3o quanto \u00e0 evolu\u00e7\u00e3o destas \n\nbacias e para a aplica\u00e7\u00e3o em atividades explorat\u00f3rias mediante a inser\u00e7\u00e3o de dados de po\u00e7os e \n\nperfis s\u00edsmicos.\n\n1\n\n\n\nDentre as aplica\u00e7\u00f5es na \u00e1rea da simula\u00e7\u00e3o de processos, outro exemplo de \n\ncomplexidade que pode ser melhor caracterizada pelo potencial das ferramentas de \n\ncomputa\u00e7\u00e3o gr\u00e1fica e modelagem 3D \u00e9 a deforma\u00e7\u00e3o de corpos geol\u00f3gicos, tanto em \u00e1reas de \n\nembasamento como em coberturas sedimentares. Os regimes tect\u00f4nicos, em escala regional \n\nou de reservat\u00f3rio, s\u00e3o acomodados por mecanismos de cisalhamento simples e puro que \n\natuam em tr\u00eas dimens\u00f5es, o que geralmente dificulta sua compreens\u00e3o por n\u00e3o especialistas \n\nno tema.\n\n2 Objetivos \n\nA presente disserta\u00e7\u00e3o de mestrado visa demonstrar o potencial da utiliza\u00e7\u00e3o de \n\nferramentas de modelagem e visualiza\u00e7\u00e3o 3D para aperfei\u00e7oar as capacidades de an\u00e1lise e \n\ninterpreta\u00e7\u00e3o de dados e processos geol\u00f3gicos mediante sua aplica\u00e7\u00e3o a dois estudos\n\nespec\u00edficos:\n\na) a reconstru\u00e7\u00e3o paleogeogr\u00e1fica e paleobatim\u00e9trica das bacias de Campos e Santos, \n\ndurante o meso-Neocret\u00e1ceo, a partir de dados fisiogr\u00e1ficos, litol\u00f3gicos e estruturais\n\nobtidos da literatura e utilizando o programa GOCAD.\n\nb) a simula\u00e7\u00e3o da deforma\u00e7\u00e3o de corpos geol\u00f3gicos, desde rochas, estruturas tect\u00f4nicas,\n\ndomos de sal at\u00e9 bacias, a partir da modifica\u00e7\u00e3o dos componentes de cisalhamento\n\nsimples e puro contidos em tensores de deforma\u00e7\u00e3o. Para tanto foi desenvolvido um \n\naplicativo baseado em c\u00f3digo aberto (open-source) que permite a deforma\u00e7\u00e3o\n\ninterativa de modelos geom\u00e9tricos a partir de par\u00e2metros definidos pelo usu\u00e1rio.\n\nEste projeto constitui um exemplo do potencial de integra\u00e7\u00e3o de softwares e ambientes\n\ncomputacionais de c\u00f3digo fonte aberto com aplicativos comerciais, para suprir necessidades\n\nespec\u00edficas de processamento e visualiza\u00e7\u00e3o cient\u00edfica de dados geol\u00f3gicos em ambientes de \n\npesquisa acad\u00eamica ou explorat\u00f3ria. \n\n3 M\u00e9todos \n\nEsta disserta\u00e7\u00e3o possui car\u00e1ter fortemente metodol\u00f3gico, devido \u00e0 forma\u00e7\u00e3o do\n\nmestrando na \u00e1rea computacional, de forma que o estudo, aplica\u00e7\u00e3o e desenvolvimento das \n\nferramentas de computa\u00e7\u00e3o gr\u00e1fica 3D constituem seu foco principal. Assim, ocorrer\u00e1 uma\n\ndiscuss\u00e3o e descri\u00e7\u00e3o mais espec\u00edfica sobre estes aspectos do que sobre os temas geol\u00f3gicos\n\nabordados.\n\n2\n\n\n\nA aplica\u00e7\u00e3o de algoritmos de computa\u00e7\u00e3o gr\u00e1fica tridimensional \u00e0 visualiza\u00e7\u00e3o de \n\ndados geol\u00f3gicos abriu novos caminhos de investiga\u00e7\u00e3o cient\u00edfica aos pesquisadores, \n\npossibilitando estudar com maior aten\u00e7\u00e3o as rela\u00e7\u00f5es existentes entre diferentes partes de um \n\nconjunto tridimensional de dados. Isto permite ao pesquisador a intera\u00e7\u00e3o com seus dados, \u00e0\n\nmedida que os computadores lhe fornecem representa\u00e7\u00f5es tridimensionais das estruturas\n\nestudadas.\n\nO processamento e visualiza\u00e7\u00e3o de dados geol\u00f3gicos constituem processos bastante\n\ncomplexos e s\u00e3o caracterizados por etapas intermedi\u00e1rias de trabalho. Embora existam\n\nferramentas computacionais que conseguem solucionar a maioria das problem\u00e1ticas\n\nassociadas ao processo, \u00e9 comum se realizar a integra\u00e7\u00e3o de aplicativos distintos. Isto \u00e9 \n\nconseq\u00fc\u00eancia da inexist\u00eancia de uma ferramenta \u00fanica que resolva satisfatoriamente todas as \n\nnecessidades de modelagem e visualiza\u00e7\u00e3o. Atividades de integra\u00e7\u00e3o desta natureza s\u00e3o\n\ncomuns no Laborat\u00f3rio de GeoModelagem 3D do DPM/IGCE/UNESP, do qual este \n\nmestrando \u00e9 integrante. Neste caso, faz-se necess\u00e1rio escrever programas para realizar a \n\nconvers\u00e3o entre formatos de dados diferentes, bem como integrar aplicativos e bibliotecas \n\nespecializados na realiza\u00e7\u00e3o de sub-tarefas (pr\u00e9-processamento, modelagem, visualiza\u00e7\u00e3o,\n\naux\u00edlio \u00e0 interpreta\u00e7\u00e3o), etc. \n\nNas se\u00e7\u00f5es a seguir ser\u00e3o ilustrados alguns conceitos de computa\u00e7\u00e3o gr\u00e1fica e\n\nvisualiza\u00e7\u00e3o cient\u00edfica que constituem o embasamento do trabalho realizado neste projeto. Em \n\nseguida, ser\u00e3o descritos aplicativos para a configura\u00e7\u00e3o de um ambiente de trabalho 3D \n\ninteiramente \u201cde c\u00f3digo aberto\u201d, desde o sistema operacional at\u00e9 as ferramentas de \n\nmodelagem, visualiza\u00e7\u00e3o e intera\u00e7\u00e3o com o usu\u00e1rio. A id\u00e9ia por tr\u00e1s deste ambiente \u00e9 \n\ndisponibilizar uma ferramenta econ\u00f4mica de trabalho para os demais pesquisadores do grupo, \n\nal\u00e9m de fornecer detalhes de seu funcionamento interno para incentivar a ado\u00e7\u00e3o de uma\n\nmetodologia semelhante durante as v\u00e1rias etapas de processamento e visualiza\u00e7\u00e3o de dados \n\ngeol\u00f3gicos.\n\nSer\u00e1 tamb\u00e9m ilustrado o funcionamento de uma importante ferramenta comercial, o \n\nprograma GOCAD, utilizada em numerosos projetos de visualiza\u00e7\u00e3o do Laborat\u00f3rio de \n\nGeoModelagem 3D. Neste Mestrado, o programa foi usado para modelar e visualizar \n\nsuperf\u00edcies paleobatim\u00e9tricas 3D para as bacias de Santos e Campos, a partir de mapas 2D \n\nobtidos da literatura. \n\n3\n\n\n\n3.1  Conceitos sobre computa\u00e7\u00e3o gr\u00e1fica e visualiza\u00e7\u00e3o cient\u00edfica \n\nA computa\u00e7\u00e3o gr\u00e1fica 3D representa a base para a visualiza\u00e7\u00e3o cient\u00edfica. Consiste no\n\nprocesso de gera\u00e7\u00e3o de imagens fotorrealisticas utilizando computadores (FOLEY et al.,\n\n1996). Para tanto, usa uma t\u00e9cnica denominada renderiza\u00e7\u00e3o (rendering), cujo objetivo \u00e9\n\ntransformar dados (normalmente, informa\u00e7\u00f5es num\u00e9ricas) em primit\u00edvos gr\u00e1ficos, isto \u00e9, \n\nentidades geom\u00e9tricas represent\u00e1veis em uma imagem criada por computador. A renderiza\u00e7\u00e3o\n\n\u00e9 realizada levando-se em conta a intera\u00e7\u00e3o entre algumas entidades fundamentais. Estas s\u00e3o \n\nreferenciadas fazendo-se uma analogia com a ind\u00fastria cinematogr\u00e1fica: luzes, c\u00e2mera e \n\natores. Existem fontes de luz utilizadas para iluminar os objetos a serem mostrados. Tais\n\nobjetos s\u00e3o chamados atores. Atores representam a forma das entidades apresentadas, al\u00e9m de \n\npossuir importantes propriedades de visualiza\u00e7\u00e3o tais como cor, eventual \u00edndice de \n\ntranspar\u00eancia, material utilizado, etc. As luzes definidas iluminam os atores, utilizando \n\nmodelos matem\u00e1ticos que simulam a ilumina\u00e7\u00e3o real. Por fim, uma c\u00e2mera virtual constr\u00f3i\n\numa imagem projetando os atores em um plano 2D que ser\u00e1 exibido na tela do computador. \n\nEsta combina\u00e7\u00e3o de luzes, c\u00e2mera e atores \u00e9 denominada cena (2D ou 3D), e constitui o\n\nresultado final do processo de renderiza\u00e7\u00e3o.\n\nA visualiza\u00e7\u00e3o cient\u00edfica \u00e9 o processo de transformar dados cient\u00edficos (advindos de\n\nobserva\u00e7\u00e3o, simula\u00e7\u00e3o num\u00e9rica ou outras fontes) em primitivos gr\u00e1ficos a serem \n\nrepresentados em duas ou tr\u00eas dimens\u00f5es atrav\u00e9s de t\u00e9cnicas de computa\u00e7\u00e3o gr\u00e1fica. A id\u00e9ia \n\ncentral do processo consiste em mapear informa\u00e7\u00f5es num\u00e9ricas de teor cient\u00edfico em \n\nentidades gr\u00e1ficas, explorando a facilidade de intera\u00e7\u00e3o com objetos gr\u00e1ficos pr\u00f3pria do ser \n\nhumano. Por exemplo, informa\u00e7\u00f5es topogr\u00e1ficas de cotas referentes a uma determinada regi\u00e3o \n\ns\u00e3o de dif\u00edcil interpreta\u00e7\u00e3o quando apresentadas sob a forma de tabela num\u00e9rica (seu formato\n\noriginal). Tal dificuldade aumenta em propor\u00e7\u00e3o ao crescimento do volume de dados, e a \n\ninterpreta\u00e7\u00e3o se torna praticamente imposs\u00edvel quando v\u00e1rias ordens de informa\u00e7\u00f5es s\u00e3o \n\nconsideradas (por exemplo, medidas de grandezas distintas associadas a pontos do espa\u00e7o).\n\nEsta complexidade, contudo, \u00e9 reduzida utilizando gr\u00e1ficos 2D ou 3D para exibir os\n\npontos do conjunto de dados. Isto proporciona uma representa\u00e7\u00e3o visual cujas caracter\u00edsticas \n\nmais importantes s\u00e3o imediatamente aferidas pelo observador. Al\u00e9m disto, uma representa\u00e7\u00e3o \n\ngr\u00e1fica permite real\u00e7ar determinadas propriedades dos dados como um todo (por exemplo,\n\numa tend\u00eancia geral do conjunto). T\u00e9cnicas de computa\u00e7\u00e3o gr\u00e1ficas, como a utiliza\u00e7\u00e3o de\n\nescalas de cores para mapear a varia\u00e7\u00e3o de valores de uma determinada vari\u00e1vel,\n\nproporcionam meios para entender rapidamente qual \u00e9 o comportamento da mesma na regi\u00e3o \n\nde estudo. \n\n4\n\n\n\nUma importante vantagem da computa\u00e7\u00e3o gr\u00e1fica 3D consiste na possibilidade de\n\ninteragir com os objetos visualizados, modificando o ponto de observa\u00e7\u00e3o e simulando\n\nrota\u00e7\u00f5es no espa\u00e7o para determinar as diversas caracter\u00edsticas espaciais das entidades\n\nestudadas. Este car\u00e1ter interativo do processo representa uma exig\u00eancia fundamental da \n\nvisualiza\u00e7\u00e3o cient\u00edfica, pois muitas vezes norteia a explora\u00e7\u00e3o e interpreta\u00e7\u00e3o dos dados\n\noriginais.\n\n3.1.1 Conceitos de modelagem e visualiza\u00e7\u00e3o de dados \n\nA t\u00e9cnica mais difundida de representa\u00e7\u00e3o de dados geol\u00f3gicos tridimensionais baseia-\n\nse na constru\u00e7\u00e3o de superf\u00edcies sombreadas que delimitam corpos geol\u00f3gicos (contatos) ou \n\nque representam planos tect\u00f4nicos (falhas) (PFLUG &amp; HARBAUGH, 1992). Tal t\u00e9cnica \n\nbaseia-se na defini\u00e7\u00e3o de objetos atrav\u00e9s de um conjunto de pontos tridimensionais, isto \u00e9, \n\numa lista de coordenadas do tipo (x, y, z). A representa\u00e7\u00e3o geom\u00e9trica de uma entidade\n\nobservada na natureza (como uma superf\u00edcie topogr\u00e1fica), constitui, na verdade, uma\n\nmodelagem computacional, isto \u00e9, uma discretiza\u00e7\u00e3o do mundo real (que \u00e9 cont\u00ednuo),\n\nsimplificando-se os objetos estudados atrav\u00e9s de entidades finitas (isto \u00e9, constitu\u00eddas de um\n\nn\u00famero finito de pontos geom\u00e9tricos). Isto decorre da natureza discreta dos computadores,\n\nque possuem limites finitos quanto \u00e0 sua capacidade de processamento e armazenamento de \n\ninforma\u00e7\u00f5es, e que, portanto, trabalham com aproxima\u00e7\u00f5es num\u00e9ricas da realidade. Apesar \n\ndesta limita\u00e7\u00e3o, os modelos matem\u00e1tico-geom\u00e9tricos constru\u00eddos constituem uma poderosa \n\nferramenta de estudo. Tais modelos apresentam tamb\u00e9m a vantagem impl\u00edcita de real\u00e7ar as \n\ncaracter\u00edsticas mais importantes do objeto para concentrar a investiga\u00e7\u00e3o apenas sobre os \n\naspectos de interesse.\n\nAp\u00f3s a defini\u00e7\u00e3o do conjunto de pontos dos objetos estudados, constr\u00f3i-se uma malha\n\nde pol\u00edgonos (tri\u00e2ngulos ou quadril\u00e1teros), denominada malha vazada, para identificar a\n\ngeometria das superf\u00edcies geol\u00f3gicas sendo investigadas (por exemplo, falhas ou relevo \n\ntopogr\u00e1fico). Tal malha \u00e9 definida especificando de que maneira os pontos geom\u00e9tricos\n\ndever\u00e3o ser interconectados. Um exemplo de malha vazada usada para modelar uma falha \n\ngeol\u00f3gica \u00e9 mostrado na Figura 3.1. A t\u00e9cnica de visualiza\u00e7\u00e3o do conjunto de arestas \n\ninterconectadas \u00e9 denominada Wireframe (FOLEY et al., 1996). \n\nA t\u00e9cnica anterior real\u00e7a apenas a geometria do objeto modelado. Utilizando recursos \n\nde computa\u00e7\u00e3o gr\u00e1fica \u00e9 poss\u00edvel aplicar cores ao objeto, efetuando o seu sombreamento\n\n(Shading). As cores s\u00e3o aplicadas em cada pol\u00edgono da entidade. De modo geral, a \n\n5\n\n\n\nintensidade de cor utilizada para cada pol\u00edgono \u00e9 o resultado da intera\u00e7\u00e3o entre uma (ou mais)\n\nfonte(s) de ilumina\u00e7\u00e3o predefinida(s) e a orienta\u00e7\u00e3o da face em rela\u00e7\u00e3o \u00e0 luz. Isto \u00e9, pol\u00edgonos\n\naproximadamente normais \u00e0 dire\u00e7\u00e3o da fonte de luz recebem uma tonalidade m\u00e1xima de cor \n\n(cor mais clara), ao passo que pol\u00edgonos aproximadamente paralelos \u00e0 dire\u00e7\u00e3o da fonte de luz \n\naparecem mais escuros. Esta t\u00e9cnica \u00e9 denominada Flat Shading (Figura 3.2). \n\nPor fim, \u00e9 poss\u00edvel amenizar a apar\u00eancia discreta do objeto visualizado. Isto poderia\n\nser feito de v\u00e1rias maneiras. A primeira consiste em se utilizar um maior n\u00famero de pontos\n\npara suavizar as arestas do modelo. Isto implica uma nova digitaliza\u00e7\u00e3o das informa\u00e7\u00f5es\n\noriginais, procedimento nem sempre poss\u00edvel ou dispendioso. Alternativamente, pontos \n\nintermedi\u00e1rios podem ser obtidos interpolando as informa\u00e7\u00f5es dispon\u00edveis. Existem\n\nnumerosos algoritmos de interpola\u00e7\u00e3o linear e curvil\u00ednea para tanto. A desvantagem deste\n\nprocesso \u00e9 a adi\u00e7\u00e3o de pontos cujas caracter\u00edsticas (posi\u00e7\u00e3o e / ou valor da vari\u00e1vel associada)\n\npodem ser diferentes das encontradas na realidade, ocasionando problemas de fidelidade dos \n\nmodelos utilizados. Evidentemente, os algoritmos de interpola\u00e7\u00e3o assumem, ao adicionar \n\nnovos pontos, a continuidade das propriedades geom\u00e9tricas ou da distribui\u00e7\u00e3o de valores. \n\nUma terceira solu\u00e7\u00e3o consiste na utiliza\u00e7\u00e3o de um artif\u00edcio gr\u00e1fico de sombreamento\n\n(Gouraud Shading, FOLEY et al., 1996). O n\u00famero de pontos do modelo n\u00e3o \u00e9 aumentado,\n\nmas os pol\u00edgonos de sua representa\u00e7\u00e3o 3D s\u00e3o sombreados utilizando alguma forma de\n\ninterpola\u00e7\u00e3o crom\u00e1tica entre as cores determinadas para seus v\u00e9rtices. A diferen\u00e7a \n\nfundamental em rela\u00e7\u00e3o \u00e0 t\u00e9cnica anterior est\u00e1 no n\u00famero de cores associadas a cada \n\npol\u00edgono. No caso da modalidade Flat Shading, considera-se uma \u00fanica cor, cuja tonalidade\n\ndepende da orienta\u00e7\u00e3o da face em rela\u00e7\u00e3o \u00e0 dire\u00e7\u00e3o da fonte de luz. J\u00e1 no sombreamento de \n\ntipo Gouraud, considera-se uma tonalidade diferente da cor-base para cada v\u00e9rtice do \n\npol\u00edgono (por exemplo, tr\u00eas tonalidades para um tri\u00e2ngulo), sendo que esta informa\u00e7\u00e3o \u00e9 \n\ndeterminada considerando-se a orienta\u00e7\u00e3o dos pol\u00edgonos adjacentes em rela\u00e7\u00e3o \u00e0 dire\u00e7\u00e3o da \n\nfonte de luz. Finalmente, ser\u00e1 criada uma interpola\u00e7\u00e3o de cores entre as tonalidades\n\nassociadas aos v\u00e9rtices. Tal interpola\u00e7\u00e3o ser\u00e1 utilizada para sombrear o pol\u00edgono em quest\u00e3o\n\n(Figura 3.3). \u00c9 importante ressaltar que a t\u00e9cnica de Gouraud Shading n\u00e3o acrescenta \n\nnenhuma informa\u00e7\u00e3o geom\u00e9trica ao modelo original. Contudo, a interpola\u00e7\u00e3o crom\u00e1tica\n\ntransmite a ilus\u00e3o de uma maior defini\u00e7\u00e3o dos dados, proporcionando uma representa\u00e7\u00e3o\n\naceit\u00e1vel sem comprometer a efici\u00eancia da visualiza\u00e7\u00e3o (pois o n\u00famero de pol\u00edgonos \n\nutilizados continua o mesmo).\n\nExistem muitas t\u00e9cnicas de visualiza\u00e7\u00e3o cient\u00edfica e computa\u00e7\u00e3o gr\u00e1fica utilizadas\n\npara real\u00e7ar determinadas caracter\u00edsticas dos dados visualizados, bem como auxiliar na sua \n\n6\n\n\n\ninterpreta\u00e7\u00e3o (utiliza\u00e7\u00e3o de cores, glyphs, etc.). Exemplos destas t\u00e9cnicas ser\u00e3o fornecidos na \n\nse\u00e7\u00e3o destinada aos resultados deste trabalho. \n\nAl\u00e9m de dados constitu\u00eddos de pontos esparsos conectados atrav\u00e9s de pol\u00edgonos, \n\nexistem conjuntos de informa\u00e7\u00f5es criados usando uma ou mais vari\u00e1veis medidas ou \n\ncalculadas em pontos regularmente espa\u00e7ados ao longo de um plano (grid) ou ou de uma\n\nregi\u00e3o tridimensional (grids empilhados, ou volume). Estes dados s\u00e3o representados em 3D\n\nutilizando t\u00e9cnicas de visualiza\u00e7\u00e3o volum\u00e9trica (SCHROEDER et al., 1996). Como esta \n\ncategoria de dados cont\u00e9m mais informa\u00e7\u00f5es do que malhas vazadas, sua visualiza\u00e7\u00e3o \u00e9 \n\nrealizada atrav\u00e9s da cria\u00e7\u00e3o de uma nuvem semitransparente. Isto permite mostrar as \n\ninforma\u00e7\u00f5es contidas em qualquer parte do conjunto de dados volum\u00e9tricos.\n\nFig. 3.1 \u2013 Visualiza\u00e7\u00e3o 3D de uma falha\ngeol\u00f3gica em modalidade Wireframe.\n\nFig. 3.3 \u2013 Modalidade de sombreamento Gouraud\nShading. Cada tri\u00e2ngulo \u00e9 sombreado de acordo\ncom uma interpola\u00e7\u00e3o crom\u00e2tica entre as\ntonalidades calculadas para seus v\u00e9rtices.\n\nFig. 3.2 \u2013 Representa\u00e7\u00e3o da mesma superf\u00edcie em\nmodalidade Flat Shading. Cada tri\u00e2ngulo recebe\numa \u00fanica cor, cuja intensidade \u00e9 controlada pela\norienta\u00e7\u00e3o do mesmo em rela\u00e7\u00e3o \u00e0 fonte de luz.\n\n7\n\n\n\nUma aplica\u00e7\u00e3o de visualiza\u00e7\u00e3o volum\u00e9trica de dados geol\u00f3gicos \u00e9 mostrada em\n\nLavorante et al. (2000) (Figura 3.4). \n\n(a)\n\n(b)\n\n8\n\nFigura 3.4 \u2013 Visualiza\u00e7\u00e3o volum\u00e9trica da granulometria do preenchimento da Bacia de Curitiba usando o \nprograma GOCAD. A vari\u00e1vel assume valores de 2 a 6 (argilitos a conglomerados, respectivamente). O\nvolume foi obtido sobrepondo grids horizontais gerados a partir da interpola\u00e7\u00e3o de dados de po\u00e7os tubulares\nprofundos. (a) Visualiza\u00e7\u00e3o dos dados atrav\u00e9s de um conjunto de pontos (sombreados usando a escala de\ncores da regi\u00e3o inferior), para destacar o car\u00e1ter regular da distribui\u00e7\u00e3o de valores. (b) Cria\u00e7\u00e3o de uma\nnuvem semitransparente usando planos de corte aproximadamente perpendiculares \u00e0 dire\u00e7\u00e3o de observa\u00e7\u00e3o.\nA visualiza\u00e7\u00e3o das estruturas internas \u00e9 poss\u00edvel especificando-se uma fun\u00e7\u00e3o de transpar\u00eancia associada ao\nintervalo de valores considerado (estreitamento da escala de cores da por\u00e7\u00e3o inferior).\n\n\n\n3.2 Introdu\u00e7\u00e3o \u00e0s ferramentas de c\u00f3digo aberto\n\nUma das linhas de trabalho que este mestrando seguiu utiliza ferramentas de c\u00f3digo\n\naberto (Open Source), desde o sistema operacional at\u00e9 os programas respons\u00e1veis pelo \n\ndesenvolvimento de aplicativos. Tal filosofia baseia-se em uma licen\u00e7a de software \n\ndenominada GNU (acr\u00f4nimo de GNU\u00b4s not UNIX, uma f\u00f3rmula utilizada para diferenciar o\n\ncar\u00e1ter aberto do sistema operacional Linux em rela\u00e7\u00e3o aos sistemas UNIX tradicionais, a \n\npagamento) (GNU, 2005). De acordo com esta licen\u00e7a, o c\u00f3digo fonte dos aplicativos \n\ndisponibilizados pode ser divulgado. N\u00e3o existem, portanto, patentes aplicadas aos programas\n\nsob a licen\u00e7a GNU. Uma vantagem em se utilizar ferramentas de software livre consiste na \n\npossibilidade de divulga\u00e7\u00e3o do aplicativo resultante com a mesma licen\u00e7a, proporcionando\n\naos demais desenvolvedores a possibilidade de acessar o c\u00f3digo fonte do programa. Desta \n\nforma, podem surgir novas id\u00e9ias de trabalho ou um projeto preexistente pode ser melhorado\n\nem virtude da contribui\u00e7\u00e3o de v\u00e1rios desenvolvedores. A liberdade associada ao uso do \n\nc\u00f3digo implica a possibilidade de: \n\n- Executar um programa, para qualquer motivo.\n\n- Estudar como o programa funciona e adapt\u00e1-lo a necessidades espec\u00edficas. O acesso ao\n\nc\u00f3digo fonte \u00e9 uma condi\u00e7\u00e3o imprescind\u00edvel para isto.\n\n- Distribuir c\u00f3pias de forma a ajudar outros usu\u00e1rios. \n\n- Modificar o programa e disponibilizar eventuais melhorias para a comunidade.\n\nNovamente, o acesso ao c\u00f3digo-fonte \u00e9 fundamental.\n\nUm programa \u00e9 considerado software livre se oferecer estes quatro requisitos.\n\nDentre as vantagens do software livre sobre o software comercial, destacam-se:\n\n- a cria\u00e7\u00e3o de grupos de trabalho descentralizados que representam importantes exemplos \n\nde desenvolvimento cooperativo, j\u00e1 que o c\u00f3digo fonte pode ser livremente visionado, \n\nalterado e disponibilizado. \n\n- a velocidade de detec\u00e7\u00e3o e corre\u00e7\u00e3o de bugs (erros de programa\u00e7\u00e3o), ressaltando-se que \n\nnenhum grupo de trabalho centralizado possui a mesma agilidade encontrada em\n\ncomunidades espacialmente distribu\u00eddas. \n\n- a difus\u00e3o de t\u00e9cnicas de resolu\u00e7\u00e3o de problemas comerciais e cient\u00edficos com a \n\nconseq\u00fc\u00eancia de espalhar o conhecimento.\n\nA ideologia de software livre \u00e9 muito diferente da \u00f3tica tradicional de\n\ndesenvolvimento de software comercial, o qual \u00e9 normalmente fechado, no sentido de que a\n\nespecifica\u00e7\u00e3o e constru\u00e7\u00e3o de seus m\u00f3dulos internos permanecem prerrogativa exclusiva de \n\n9\n\n\n\num n\u00facleo protegido (empresa, centro de pesquisa). Esta caracter\u00edstica tem sua justificativa no \n\nesfor\u00e7o intelectual e computacional envolvido no desenvolvimento de um software, levando \u00e0\n\nnecessidade de prote\u00e7\u00e3o dos recursos utilizados. Al\u00e9m disto, \u00e9 necess\u00e1rio se manter uma\n\nequipe de trabalho para desenvolvimento e corre\u00e7\u00e3o de erros no aplicativo, e recursos \n\nhumanos e computacionais possuem um custo de utiliza\u00e7\u00e3o. Desta forma, este custo \u00e9 \n\nrepassado para o usu\u00e1rio final. \n\nA ado\u00e7\u00e3o de id\u00e9ias inevitavelmente contrastantes quanto \u00e0s duas filosofias de\n\ndesenvolvimento tem gerado in\u00fameras controv\u00e9rsias, muitas vezes em detrimento do pr\u00f3prio\n\nusu\u00e1rio final. Na pr\u00e1tica procura-se ferramentas econ\u00f4micas para a resolu\u00e7\u00e3o eficiente de\n\nproblemas e a atitude do centro de pesquisa neste Laborat\u00f3rio de GeoModelagem 3D tem sido \n\na de integrar ferramentas open source, normalmente de aplica\u00e7\u00e3o geral, com programas\n\ncomerciais desenvolvidos para finalidades espec\u00edficas. Um exemplo do primeiro tipo de \n\nferramenta \u00e9 o sistema VTK (VISUALIZATION TOOLKIT, 2005), que possui numerosos\n\nm\u00f3dulos para modelagem e visualiza\u00e7\u00e3o 3D, mas que, em for\u00e7a de sua generalidade, necessita\n\nde adapta\u00e7\u00f5es e configura\u00e7\u00f5es sob a forma de desenvolvimento de novos m\u00f3dulos,\n\nmodifica\u00e7\u00e3o de m\u00f3dulos preexistentes e escrita de programas para a utiliza\u00e7\u00e3o de tais \n\nm\u00f3dulos ou convers\u00e3o de dados em formatos diferentes. Como se v\u00ea, trata-se de tarefas que \n\nenvolvem um certo esfor\u00e7o. Por outro lado, como ferramenta comercial destaca-se o GOCAD\n\n(2005), especialmente desenvolvido para modelar e visualizar dados geol\u00f3gicos. Este \n\nprograma possui tamb\u00e9m m\u00f3dulos que auxiliam na interpreta\u00e7\u00e3o dos dados. O n\u00edvel de \n\nexcel\u00eancia que caracteriza tal software, bem como a redu\u00e7\u00e3o do referido esfor\u00e7o de trabalho, \n\njustificam o pagamento de uma licen\u00e7a de uso. Mas \u00e9 muitas vezes conveniente realizar uma\n\nintegra\u00e7\u00e3o entre os dois ambientes (do software livre e do software comercial), j\u00e1 que podem\n\nsurgir necessidades de modelagem espec\u00edficas que nem sempre uma \u00fanica ferramenta\n\nconsegue preencher. \n\n3.3 O Sistema Operacional Linux \n\nLinux (2005) \u00e9 um sistema operacional desenvolvido por Linus Torvalds com a ajuda \n\nde numerosos colaboradores volunt\u00e1rios localizados em diferentes pa\u00edses. Seu objetivo \u00e9 \n\nproporcionar uma ferramenta de trabalho baseada em aplicativos de c\u00f3digo fonte aberto. Foi \n\ncriado nos moldes dos sistemas operacionais UNIX comerciais (Solaris, AIX, Irix, HPUX, \n\netc.), mas com a inten\u00e7\u00e3o de funcionar em computadores com processador Intel de 32 bits \n\n(PC\u00b4s). Atualmente, o sistema pode ser utilizado em outras plataformas de hardware, como a \n\n10\n\n\n\narquitetura a 64 bits das empresas Intel e AMD, bem como equipamentos SUN, entre outros.\n\nM\u00faltiplas inst\u00e2ncias do sistema Linux s\u00e3o tamb\u00e9m utilizadas em computadores de grande \n\nporte da empresa IBM (mainframes).\n\nTodos os m\u00f3dulos que constituem este sistema possuem c\u00f3digo fonte aberto. O nome\n\nLinux, que antes indicava apenas o programa central (core, ou kernel) (LINUX KERNEL \n\nARCHIVES, 2005), respons\u00e1vel pelo gerenciamento de outros programas de usu\u00e1rio, hoje \n\ndenota um conjunto de aplicativos (ferramentas de Internet, escrit\u00f3rio, processamento gr\u00e1fico, \n\ncomputa\u00e7\u00e3o cient\u00edfica, etc.) que s\u00e3o disponibilizados em colet\u00e2neas chamadas distribui\u00e7\u00f5es.\n\nAs distribui\u00e7\u00f5es mais famosas s\u00e3o a da empresa americana Red Hat (RED HAT ENTERPRISE \n\nLINUX, 2005; FEDORA CORE, 2005), o Debian (2005), o FreeBSD (2005), o Mandrake\n\n(MANDRAKELINUX, 2005), o Conectiva (2005), etc. A maioria destas distribui\u00e7\u00f5es t\u00eam em\n\ncomum o custo nulo de aquisi\u00e7\u00e3o do software. Cada colet\u00e2nea cont\u00e9m um certo n\u00famero de \n\naplicativos de trabalho (Internet, editor de texto, etc.) tamb\u00e9m de c\u00f3digo aberto e gratuitos.\n\nApesar de existir compatibilidade em termos de c\u00f3digo bin\u00e1rio (programas execut\u00e1veis) entre\n\nas v\u00e1rias distribui\u00e7\u00f5es, cada uma possui diferentes aplicativos de configura\u00e7\u00e3o e \n\ngerenciamento do sistema, o que torna o processo de migra\u00e7\u00e3o de uma distribui\u00e7\u00e3o para outra \n\num tanto trabalhoso. Isto tamb\u00e9m determina a tend\u00eancia de um usu\u00e1rio a se especializar na \n\nconfigura\u00e7\u00e3o e uso de uma determinada distribui\u00e7\u00e3o.\n\nO sistema Linux utilizado neste projeto \u00e9 denominado Fedora Core 3 (2005),\n\ndisponibilizado pela empresa Red Hat e atualmente em sua quarta vers\u00e3o. Sua ado\u00e7\u00e3o por \n\nparte do Laborat\u00f3rio de GeoModelagem 3D deriva de uma certa tradi\u00e7\u00e3o na utiliza\u00e7\u00e3o de \n\ndistribui\u00e7\u00f5es da Red Hat, o que fez os pesquisadores deste grupo se acostumarem com suas\n\nferramentas de gerenciamento. A empresa Red Hat possui tamb\u00e9m uma vers\u00e3o comercial,\n\ndenominada Enterprise Linux, que cont\u00e9m m\u00f3dulos adicionais de seguran\u00e7a e gerenciamento\n\nde servidor desenvolvidos internamente. Tanto o Fedora Core como o Enterprise Linux est\u00e3o\n\ndispon\u00edveis para plataformas Intel (ou AMD) de 32 e 64 bits. \n\n3.4 O sistema  VTK \n\nO nome VTK  (VISUALIZATION TOOLKIT, 2005; SCHROEDER et al., 1996) denota \n\num conjunto de algoritmos de c\u00f3digo aberto que implementam as  principais t\u00e9cnicas de \n\nprocessamento de imagens e visualiza\u00e7\u00e3o cient\u00edfica atualmente utilizadas em ambientes de \n\npesquisa. Estes algoritmos foram desenvolvidos a partir da biblioteca gr\u00e1fica Open-GL \n\n(2005), que por sua vez implementa as principais t\u00e9cnicas de computa\u00e7\u00e3o gr\u00e1fica 3D. De\n\nmaneira geral, pode-se classificar o VTK como uma biblioteca gr\u00e1fica mais abstrata que \n\n11\n\n\n\nOpen-GL, j\u00e1 que o primeiro utiliza as fun\u00e7\u00f5es de computa\u00e7\u00e3o gr\u00e1fica da segunda. Trata-se, na \n\nverdade, de um ambiente de desenvolvimento que permite a r\u00e1pida visualiza\u00e7\u00e3o \n\ntridimensional e manipula\u00e7\u00e3o de superf\u00edcies poligonais e dados volum\u00e9tricos vindos de \n\ndiferentes \u00e1reas de pesquisa, como a medicina, engenharia, metereologia, geologia, etc. A\n\nvers\u00e3o atual do VTK \u00e9 a 4.2. \n\nEste sistema foi desenvolvido em C++ e utiliza as principais propriedades dos \n\nambientes de programa\u00e7\u00e3o orientados a objetos para definir e processar os dados a serem \n\nvisualizados. Isto \u00e9, as v\u00e1rias funcionalidades dispon\u00edveis no sistema est\u00e3o codificadas em\n\nm\u00f3dulos distintos mas com grande capacidade de comunica\u00e7\u00e3o e de transfer\u00eancia de dados. \u00c9\n\ntamb\u00e9m poss\u00edvel utilizar o VTK de maneira interativa, atrav\u00e9s de uma linguagem interpretada \n\nno lugar de C++. Isto permite ao usu\u00e1rio a r\u00e1pida cria\u00e7\u00e3o, modifica\u00e7\u00e3o e visualiza\u00e7\u00e3o de\n\nobjetos tridimensionais conhecendo apenas algumas funcionalidades do sistema. Desta forma,\n\nos conceitos de programa\u00e7\u00e3o avan\u00e7ada s\u00e3o reservados para aplica\u00e7\u00f5es mais complexas.\n\nA representa\u00e7\u00e3o tridimensional constitui a base do sistema de visualiza\u00e7\u00e3o do VTK, \n\nsendo que os principais algoritmos de cria\u00e7\u00e3o e elabora\u00e7\u00e3o de primitivos geom\u00e9tricos est\u00e3o\n\nenglobados em procedimentos (m\u00e9todos) de f\u00e1cil utiliza\u00e7\u00e3o. Deste modo, estruturas\n\ncomplexas podem ser visualizadas com poucas linhas de c\u00f3digo auto-explicativas. \n\n3.4.1 Estrutura fundamental do sistema VTK \n\nPode-se imaginar o VTK como um sistema de fluxos de dados que transitam entre \n\nv\u00e1rias entidades de processamento, desde a elabora\u00e7\u00e3o dos v\u00e9rtices que constituem um objeto\n\ngeom\u00e9trico, at\u00e9 sua representa\u00e7\u00e3o numa janela gr\u00e1fica interativa, sendo poss\u00edvel modificar a \n\nposi\u00e7\u00e3o do ponto de observa\u00e7\u00e3o e a dist\u00e2ncia do objeto em qualquer instante. Cada entidade \u00e9 \n\nrespons\u00e1vel pela execu\u00e7\u00e3o de uma diferente etapa no processo de visualiza\u00e7\u00e3o. A estrutura \n\norientada a objetos do VTK permite que diferentes tipos de dados sejam processados pelas \n\nmesmas classes gen\u00e9ricas de objetos, cujas inst\u00e2ncias espec\u00edficas operam nos v\u00e1rios casos. \n\nDe acordo com a nomenclatura da programa\u00e7\u00e3o orientada a objetos, a palavra classe\n\ndenota um conjunto de informa\u00e7\u00f5es (atributos) e de opera\u00e7\u00f5es que podem ser executadas \n\nsobre as mesmas (m\u00e9todos). A palavra inst\u00e2ncia indica a cria\u00e7\u00e3o de um objeto espec\u00edfico\n\npertencente a determinada classe. Considerando uma aplica\u00e7\u00e3o de modelagem n\u00e3o gr\u00e1fica, a \n\nclasse avi\u00e3o engloba o conjunto de atributos (nome, modelo, peso, velocidade m\u00e1xima,\n\nn\u00famero e tipo de turbinas, n\u00famero de assentos, posi\u00e7\u00e3o atual, etc.) e m\u00e9todos (decolar, \n\npousar, virar, ajustar pot\u00eancia de determinada turbina, etc.) que uma aeronave em geral deve \n\n12\n\n\n\nter. J\u00e1 uma inst\u00e2ncia desta classe representa determinada aeronave espec\u00edfica. Assim, na \n\nmodelagem de uma frota a\u00e9rea, determinada companhia pode possuir, por exemplo, cinco \n\naeronaves (inst\u00e2ncias) de tipo DC-10 (classe). No dom\u00ednio do sistema VTK, uma classe \n\ndenota um conjunto de atributos e m\u00e9todos para determinado objeto gr\u00e1fico ou processo de \n\nmanipula\u00e7\u00e3o de dados, ao passo que uma inst\u00e2ncia da classe corresponde a uma c\u00f3pia de tais \n\ninforma\u00e7\u00f5es explicitamente criada pelo programador e armazenada na mem\u00f3ria do\n\ncomputador. Por exemplo, dez representa\u00e7\u00f5es poligonais de esferas no espa\u00e7o 3D\n\ncorrespondem a m\u00faltiplas inst\u00e2ncias de uma mesma classe (vtkSphereSource), cada qual com \n\nsua defini\u00e7\u00e3o de posi\u00e7\u00e3o, raio, n\u00famero de meridianos, n\u00famero de paralelos, etc. (atributos). \n\nPara cada inst\u00e2ncia, \u00e9 poss\u00edvel invocar (executar) m\u00e9todos para modificar os atributos \n\ncorrespondentes (posi\u00e7\u00e3o e raio da esfera, etc.). \n\nTodas as classes utilizadas no VTK possuem nomes longos e auto-explicativos e s\u00e3o \n\nintroduzidas pela sigla \u201cvtk\u201d (vtkPolyData, vtkRenderWindow, etc). Existem algumas classes\n\nfundamentais de objetos cujas inst\u00e2ncias executam todo o processo de visualiza\u00e7\u00e3o:\n\n- vtkLight: respons\u00e1vel pela defini\u00e7\u00e3o de todas as propriedades das luzes aplicadas aos objetos \n\ngeom\u00e9tricos.\n\n- vtkCamera: especifica a maneira pela qual uma c\u00e2mara virtual dever\u00e1 visualizar os objetos. \n\nInclui par\u00e2metros importantes, como a posi\u00e7\u00e3o da c\u00e2mera, a dire\u00e7\u00e3o de observa\u00e7\u00e3o, o tipo\n\nde proje\u00e7\u00e3o (paralela ou perspectiva), etc. \n\n- vtkMapper: especifica as propriedades geom\u00e9tricas dos dados, bem como informa\u00e7\u00f5es\n\nadicionais (atributos) associadas aos pontos. Inst\u00e2ncias desta classe convertem informa\u00e7\u00f5es\n\npoligonais para primitivos gr\u00e1ficos usados pelas bibliotecas de processamento gr\u00e1fico do\n\nsistema computacional (OPEN-GL).\n\n- vtkActor: constitui um objeto representado em tr\u00eas dimens\u00f5es. S\u00e3o tamb\u00e9m definidas \n\npropriedades de ilumina\u00e7\u00e3o, cor e transpar\u00eancia da superf\u00edcie do objeto. \n\n- vtkRenderer: coordena o processo de visualiza\u00e7\u00e3o envolvendo luzes, propriedades\n\ngeom\u00e9tricas dos objetos, posi\u00e7\u00e3o da c\u00e2mera, etc. O resultado \u00e9 uma imagem 2D (cena). \n\n- vtkRenderWindow: visualiza e atualiza a janela gr\u00e1fica que exibe as informa\u00e7\u00f5es\n\ntridimensionais geradas pela classe anterior. \n\nAp\u00f3s a visualiza\u00e7\u00e3o tridimensional de um ou mais objetos, o usu\u00e1rio pode interagir\n\ncom os dados rotacionando, transladando e variando a dist\u00e2ncia entre as entidades \n\nrepresentadas e o ponto de observa\u00e7\u00e3o. Para tanto utiliza-se o mouse e o teclado. Esta \n\nintera\u00e7\u00e3o \u00e9 obtida associando uma inst\u00e2ncia da classe vtkRenderWindowInteractor \u00e0 janela de \n\nvisualiza\u00e7\u00e3o. Algumas teclas s\u00e3o utilizadas para modificar as propriedades dos objetos \n\n13\n\n\n\ndefinidos. Por exemplo, a tecla \u2018w\u2019 estabelece uma representa\u00e7\u00e3o em malha vazada\n\n(Wireframe, Figura 3.1) para cada objeto na janela de visualiza\u00e7\u00e3o, enquanto \u2018s\u2019 determina o \n\nuso de superf\u00edcies sombreadas (Flat Shading ou Gouraud Shading, Figuras 3.2 e 3.3, \n\nrespectivamente). Quando o ponteiro do mouse estiver posicionado sobre algum objeto na \n\njanela, a tecla \u2018p\u2019 permite efetuar uma sele\u00e7\u00e3o individual. \n\nOutra caracter\u00edstica relevante da classe vtkRenderWindowInteractor \u00e9 a possibilidade \n\nde executar interativamente comandos para criar ou manipular classes durante a visualiza\u00e7\u00e3o, \n\nmodificando assim as propriedades dos objetos representados. Isto ocorre apertando a tecla\n\n\u2018u\u2019 durante a visualiza\u00e7\u00e3o, o que mostrar\u00e1 uma janela pronta para aceitar comandos.\n\nCom rela\u00e7\u00e3o ao movimento dos fluxos de dados no sistema, existem tr\u00eas categorias de\n\nclasses dispon\u00edveis:\n\n- As fontes s\u00e3o respons\u00e1veis pela defini\u00e7\u00e3o geom\u00e9tricas dos dados a serem visualizados. \n\nPodem ser constitu\u00eddas por informa\u00e7\u00f5es criadas matematicamente (cubo, esfera, cone, \n\netc.), ou programas que leiam dados do disco ou da rede. Evidentemente, as fontes \n\napresentam unicamente sa\u00eddas de dados. \n\n- Os filtros elaboram dados preexistentes, gerando sa\u00eddas de natureza variada. Um exemplo\n\nde filtro \u00e9 dado pela classe vtkDelaunay2D, que constr\u00f3i uma malha de tri\u00e2ngulos a partir\n\nde um conjunto de pontos de entrada, usando o algoritmo de triangula\u00e7\u00e3o Delaunay \n\n(WATSON, 1981). \n\n- Os destinos recebem mas n\u00e3o criam dados no sistema. Representam as etapas terminais do \n\nprocessamento. Pode-se considerar o exemplo dos writers e exporters, respons\u00e1veis, \n\nrespectivamente, pela grava\u00e7\u00e3o em disco das defini\u00e7\u00f5es geom\u00e9tricas de um objeto, ou pela \n\ngrava\u00e7\u00e3o do inteiro contexto de visualiza\u00e7\u00e3o, incluindo ponto de observa\u00e7\u00e3o, fontes de \n\nilumina\u00e7\u00e3o, etc. Os exporters s\u00e3o de grande utilidade para a cria\u00e7\u00e3o de scenes (cenas ou \n\ncontextos prontos), que podem literalmente ser exportados para outros sistemas de \n\nvisualiza\u00e7\u00e3o, incluindo os navegadores utilizados para acessar a Internet. Outro exemplo \n\nimportante de classe do tipo destino \u00e9 vtkRenderWindow, que encerra um fluxo de dados \n\nadvindo de outras classes atrav\u00e9s da cria\u00e7\u00e3o de uma janela de visualiza\u00e7\u00e3o 3D. \n\n3.4.2 Defini\u00e7\u00e3o de modelos geom\u00e9tricos tridimensionais\n\nLembrando que a base para a representa\u00e7\u00e3o geom\u00e9trica de um objeto \u00e9 o conjunto de \n\npontos tridimensionais que o constituem, os sistemas de visualiza\u00e7\u00e3o destinam procedimentos\n\nespeciais \u00e0 leitura e armazenamento destes pontos. A especifica\u00e7\u00e3o do conjunto de v\u00e9rtices de\n\n14\n\n\n\num objeto define genericamente a sua geometria. No caso de um cubo, por exemplo, sua \n\ngeometria \u00e9 dada pela especifica\u00e7\u00e3o das coordenadas de oito pontos no espa\u00e7o 3D. \n\nUma outra caracter\u00edstica indispens\u00e1vel de um objeto \u00e9 sua topologia. \u00c9 necess\u00e1rio\n\nfornecer, alem do conjunto de pontos, regras para se estabelecer de que maneira estes pontos \n\nest\u00e3o relacionados (conectados). No \n\nexemplo do cubo, sua topologia \u00e9 \n\nespecificada assumindo-se seis primitivos\n\ngeom\u00e9tricos (os quadril\u00e1teros que denotam \n\nas faces). Para cada primitivo dever\u00e1 ser \n\nfornecido o conjunto de pontos que o \n\nconstituem. Isto ocorre atribuindo-se aos \n\npontos dos objetos n\u00fameros de \n\nidentifica\u00e7\u00e3o (ids), referenciados em todos \n\nos processos envolvendo topologia. \n\nNo sistema VTK, a classe\n\nvtkPolyData \u00e9 respons\u00e1vel pela defini\u00e7\u00e3o \n\nde modelos geom\u00e9tricos constitu\u00eddos de \n\npol\u00edgonos (Figura 3.5). \n\nA geometria \u00e9 especificada atrav\u00e9s de uma lista de coordenadas (x, y, z) de pontos \n\ndefinindo os v\u00e9rtices do objeto. Cada ponto possui um c\u00f3digo ou n\u00famero de identifica\u00e7\u00e3o (id)\n\nusado para referenci\u00e1-lo na estrutura da superf\u00edcie (tabela de geometria). A topologia \u00e9 a lista \n\nde todos os pol\u00edgonos que s\u00e3o constru\u00eddos usando os pontos referenciados na estrutura \n\ngeom\u00e9trica. Cada pol\u00edgono \u00e9 definido por uma lista de c\u00f3digos de pontos especificando os \n\nv\u00e9rtices do mesmo, e tamb\u00e9m possui um c\u00f3digo de identifica\u00e7\u00e3o (id) na tabela de topologia. \n\nA geometria de um objeto do tipo vtkPolyData \u00e9 constru\u00edda usando inst\u00e2ncias da\n\nclasse vtkPoints, que fornece eficientes procedimentos (m\u00e9todos) para a inser\u00e7\u00e3o e remo\u00e7\u00e3o\n\nde pontos tridimensionais. Para definir a topologia de um objeto utiliza-se a classe\n\nvtkCellArray. A classe vtkPolyData possui m\u00e9todos para obter informa\u00e7\u00f5es geom\u00e9tricas e \n\ntopol\u00f3gicas sobre  sua estrutura. Por exemplo, GetNumberOfCells( ) e GetNumberOfPoints( )\n\ninformam, respectivamente, o n\u00famero de primitivos (pol\u00edgonos) e o n\u00famero de pontos na \n\ncorrespondente tabela de geometria.\n\nFig. 3.5 \u2013 Estrutura da classe vtkPolyData usada para\nconstru\u00edr superf\u00edcies poligonais no sistema VTK. Neste\nexemplo, o modelo possui n pontos e m tri\u00e2ngulos.\n\n15\n\n\n\nNo sistema VTK os primitivos possuem dimens\u00e3o de 0 a 3 e s\u00e3o os seguintes (Figura \n\n3.6):\n\n- VTK_VERTEX. \u00c9 um ponto no espa\u00e7o. \n\n- VTK_POLY_VERTEX. Conjunto de pontos sem informa\u00e7\u00e3o topol\u00f3gica. \n\n- VTK_LINE. Segmento de linha definido por dois pontos. \n\n- VTK_POLY_LINE. Linha poligonal, resultado da jun\u00e7\u00e3o de segmentos adjacentes. \n\n- VTK_TRIANGLE. Pol\u00edgono constitu\u00eddo por tr\u00eas pontos. \n\n- VTK_TRIANGLE_STRIP. Uma faixa de tri\u00e2ngulos adjacentes. O mecanismo de \n\narmazenamento \u00e9 otimizado de modo que para a especifica\u00e7\u00e3o de n tri\u00e2ngulos s\u00e3o \n\nnecess\u00e1rios apenas n+2 pontos, ao em vez de 3n. Al\u00e9m disto, a especifica\u00e7\u00e3o de modelos\n\ngeom\u00e9tricos atrav\u00e9s de faixas de tri\u00e2ngulos permite uma visualiza\u00e7\u00e3o otimizada, pois as \n\natuais placas gr\u00e1ficas aceleradoras possuem recursos para processar faixas de tri\u00e2ngulos \n\nde forma eficiente. \n\n- VTK_POLYGON. Pol\u00edgono gen\u00e9rico constitu\u00eddo de tr\u00eas ou mais pontos coplanares.\n\n- VTK_PIXEL. Quadril\u00e1tero em que segmentos adjacentes formam \u00e2ngulos de 90 graus \n\nentre si (quadrado ou ret\u00e2ngulo). Seus lados s\u00e3o paralelos a dois eixos coordenados. \n\n- VTK_QUAD. Pol\u00edgono constitu\u00eddo por quatro pontos, sendo que os \u00e2ngulos entre \n\nsegmentos adjacentes podem ser diferentes de 90 graus. \n\n- VTK_TETRA. Primitivo tridimensional formado por quatro pontos n\u00e3o coplanares. \n\n- VTK_VOXEL. Paralelep\u00edpedo alinhado com os eixos coordenados. Neste primitivo o \n\n\u00e2ngulo entre segmentos adjacentes \u00e9 sempre de 90 graus. \n\n- VTK_HEXAHEDRON. Primitivo formado por seis quadril\u00e1teros. \u00c9 um paralelep\u00edpedo em\n\nque as faces n\u00e3o mant\u00eam necessariamente perpendiculares entre si.\n\n- VTK_WEDGE. Prisma com base triangular.\n\n- VTK_PYRAMID. Pir\u00e2mide cuja base \u00e9 um quadril\u00e1tero com \u00e2ngulos internos que podem\n\ndiferir de 90 graus. \n\n16\n\n\n\nEstes primitivos s\u00e3o denominados lineares, pois seus pontos s\u00e3o conectados por \n\nsegmentos de linhas. O VTK possui tamb\u00e9m primitivos n\u00e3o-lineares, cujos pontos s\u00e3o \n\nconectados por arcos de curvas. Tais primitivos s\u00e3o utilizados para aplica\u00e7\u00f5es mais\n\ncomplexas recentemente implementadas na biblioteca gr\u00e1fica.\n\nComo foi ilustrado, geometria e topologia representam os dois aspectos fundamentais\n\npara a defini\u00e7\u00e3o de um objeto tridimensional. Estas duas informa\u00e7\u00f5es constituem o modelo a\n\nser visualizado. Considerando que em Visualiza\u00e7\u00e3o Cient\u00edfica aos pontos no espa\u00e7o podem \n\nser associadas v\u00e1rias ordens de informa\u00e7\u00e3o (temperatura, porosidade, velocidade, etc.), surge \n\na necessidade de se acrescentar uma outra classe ao modelo. Trata-se dos atributos dos pontos \n\nou dos primitivos gr\u00e1ficos, isto \u00e9 o conjunto de informa\u00e7\u00f5es associadas aos pontos ou aos\n\nFigura 3.6 \u2013 Primitivos gr\u00e1ficos de tipo linear do sistema VTK. Os n\u00fameros ao lado dos pontos determinam\na correta ordem de sua refer\u00eancia para efeitos de intera\u00e7\u00e3o com as fontes de ilumina\u00e7\u00e3o. Pontos, linhas,\npol\u00edgonos e s\u00f3lidos possuem dimens\u00e3o 0, 1, 2 e 3, respectivamente. Primitivos com dimens\u00e3o de 0 a 2 s\u00e3o\narmazenados na classe vtkPolyData. Para primitivos de dimens\u00e3o 0 a 3 utiliza-se a classe \nvtkUnstructuredGrid. Fonte: Visualization ToolKit (2005).\n\n17\n\n\n\nprimitivos da entidade geom\u00e9trica (a palavra \u201catributo\u201d \u00e9 usada aqui com um significado mais\n\nabrangente do que no contexto da programa\u00e7\u00e3o orienta\u00e7\u00e3o a objetos). As classes usadas para \n\ntanto s\u00e3o vtkPointData (para pontos) e vtkCellData (para primitivos gr\u00e1ficos). A isosuperf\u00edcie \n\n(ou superf\u00edcie eq\u00fcipotencial) \u00e9 um exemplo de entidade geom\u00e9trica cujos pontos possuem a \n\nmesma informa\u00e7\u00e3o (mesmo valor do atributo). Em uma superf\u00edcie topogr\u00e1fica, o atributo de\n\ncada ponto \u00e9 constitu\u00eddo pela pr\u00f3pria coordenada Z (eleva\u00e7\u00e3o), o que, do ponto de vista do \n\nVTK, implica a aus\u00eancia de atributos (nenhuma inst\u00e2ncia de vtkPointData ou vtkCellData).\n\nExistem diferentes tipos de atributos. A cada ponto pode-se associar um valor escalar, \n\num vetor, um vetor unit\u00e1rio (tamb\u00e9m denominado normal) ou uma matriz 3x3 de escalares \n\n(tensor).\n\n3.4.3 Programas compilados e programas interpretados \n\nComo descrito acima, os m\u00f3dulos execut\u00e1veis que constituem o VTK foram escritos\n\nna linguagem C++ (STROUSTRUP, 2000). Isto levou \u00e0 necessidade de compilar tais\n\nm\u00f3dulos, ou seja, traduzir o c\u00f3digo fonte da linguagem de programa\u00e7\u00e3o usada para instru\u00e7\u00f5es \n\nexecut\u00e1veis pelo processador do computador (c\u00f3digo de m\u00e1quina). Efetuar a compila\u00e7\u00e3o de \n\numa classe inteira de procedimentos permite otimizar o c\u00f3digo execut\u00e1vel e proporciona o \n\nm\u00e1ximo desempenho poss\u00edvel. Por outro lado, um programa compilado n\u00e3o permite ao \n\nusu\u00e1rio a modifica\u00e7\u00e3o em tempo real do conjunto de instru\u00e7\u00f5es e informa\u00e7\u00f5es geradas. Para \n\nisto, \u00e9 necess\u00e1rio modificar o c\u00f3digo fonte e realizar uma nova compila\u00e7\u00e3o. Al\u00e9m disto, o \n\nc\u00f3digo compilado para determinado processador n\u00e3o pode ser utilizado em outro, sendo \n\nnecess\u00e1ria uma compila\u00e7\u00e3o para cada plataforma computacional. Para minimizar tal \n\ninconveniente, o sistema VTK foi estruturado de maneira a permitir a execu\u00e7\u00e3o de seus\n\nm\u00f3dulos (fun\u00e7\u00f5es de biblioteca) dentro de programas interpretados. Programas deste tipo \n\ndiferem dos compilados por serem traduzidos e executados passo a passo, isto \u00e9, um comando\n\nde cada vez. Programas interpretados s\u00e3o \u00e0s vezes chamados scripts. Tal palavra real\u00e7a a \n\nnecessidade de traduzir cada instru\u00e7\u00e3o para c\u00f3digo de m\u00e1quina em tempo de execu\u00e7\u00e3o. A \n\nlinguagem interpretada utilizada pelo VTK \u00e9 chamada Tcl/Tk (2005).\n\nUma importante vantagem das linguagens interpretadas \u00e9 sua extrema flexibilidade em\n\ntempo de execu\u00e7\u00e3o, j\u00e1 que o usu\u00e1rio pode, depois de iniciada uma sess\u00e3o de trabalho, digitar e \n\nexecutar interativamente comandos, observando o resultado de cada execu\u00e7\u00e3o parcial e \n\npodendo modificar os comandos utilizados em qualquer momento. No caso da linguagem\n\nTcl/Tk, \u00e9 poss\u00edvel modificar em tempo de execu\u00e7\u00e3o as propriedades dos objetos visualizados, \n\nacrescentar novos dados, criar representa\u00e7\u00f5es combinadas, etc. \n\n18\n\n\n\n# Criacao de um cubo em Tcl/Tk \n\npackage require vtk \n\npackage require vtkinteraction \n\n# Modelagem geometrica \n\nvtkCubeSource cubeSrc \n\nvtkPolyDataMapper cubeMpr \n\n  cubeMpr SetInput [cubeSrc GetOutput] \n\n# Visualizacao \n\nvtkActor cube1 \n\n  cube1 SetMapper cubeMpr \n\nvtkRenderer ren1 \n\n  ren1 AddActor cube1 \n\nvtkRenderWindow renWin \n\n  renWin AddRenderer ren1 \n\n  renWin Render\n\nwm withdraw . \n\n(c)\n\n(b)\n\n// Criacao de um cubo em C++ \n\n#include \"vtkRenderer.h\" \n\n#include \"vtkRenderWindow.h\" \n\n#include \"vtkCubeSource.h\" \n\n#include \"vtkPolyDataMapper.h\"\n\n#include \"vtkActor.h\" \n\nmain () \n\n{\n\n  // Modelagem geometrica \n\n  vtkCubeSource *cubeSrc =\n\n    vtkCubeSource::New(); \n\n  vtkPolyDataMapper *cubeMpr =\n\n    vtkPolyDataMapper::New(); \n\n    cubeMpr->SetInput(cubeSrc->GetOutput());\n\n  // Visualizacao \n\n  vtkActor *cube1 = vtkActor::New(); \n\n    cube1->SetMapper(cubeMpr); \n\n  vtkRenderer *ren1 = vtkRenderer::New(); \n\n    ren1->AddActor(cube1); \n\n  vtkRenderWindow *renWin = \n\n    vtkRenderWindow::New(); \n\n    renWin->AddRenderer (ren1); \n\n    renWin->Render (); \n\n  cubeSrc->Delete(); \n\n  cubeMpr->Delete(); \n\n  cube1->Delete(); \n\n  ren1->Delete(); \n\n  renWin->Delete(); \n\n} (a)\n\nFigura 3.7 \u2013 Exemplo de c\u00f3digo fonte para a modelagem e visualiza\u00e7\u00e3o de um cubo usando o sistema\nVTK. (a) Programa em C++. (b) Programa em Tcl/Tk. A segunda linguagem prov\u00ea um c\u00f3digo mais\nenxuto e que n\u00e3o requer compila\u00e7\u00e3o pr\u00e9via. (c) Diagrama de fluxo de dados entre as classes usadas no \nprograma. Classes com fundo cinza representam a origem ou destino final dos dados.\n\nUma outra caracter\u00edstica interessante das linguagens interpretadas \u00e9 que um mesmo\n\nc\u00f3digo fonte n\u00e3o precisa ser explicitamente compilado pelo programador. Tal processo \n\nocorre, obviamente, de forma impl\u00edcita quando da interpreta\u00e7\u00e3o do programa, havendo um \n\ninterpretador para cada plataforma. Contudo, do ponto de vista do programador, o mesmo\n\nc\u00f3digo pode ser executado em plataformas e sistemas operacionais distintos sem sofrer \n\nmodifica\u00e7\u00f5es.\n\nA linguagem Tcl/Tk \u00e9 composta de dois m\u00f3dulos. O primeiro (Tcl), denota a \n\nlinguagem propriamente dita: instru\u00e7\u00f5es que controlam o fluxo de execu\u00e7\u00e3o do programa,\n\ncomandos para a leitura/escrita de arquivos do disco, etc. O segundo m\u00f3dulo (Tk) constitui \n\n19\n\n\n\numa extens\u00e3o da linguagem e implementa numerosas componentes de intera\u00e7\u00e3o gr\u00e1fica com o \n\nusu\u00e1rio atrav\u00e9s de bot\u00f5es, barras de rolagem e outros objetos usados nos atuais sistemas\n\noperacionais. O programa Tensor3D, discutido mais adiante, faz amplo uso das componentes\n\ngr\u00e1ficas do m\u00f3dulo Tk. \n\nPara evidenciar a facilidade de uso da linguagem Tcl/Tk, ser\u00e1 mostrado um programa\n\npara a visualiza\u00e7\u00e3o de um cubo (Figura 3.7), tanto em C++ como em Tcl/Tk, lembrando que o\n\nprimeiro c\u00f3digo precisa ser compilado (vide se\u00e7\u00e3o 3.5.1), enquanto o segundo pode ser \n\ndiretamente digitado e executado (usando o interpretador de comandos vtk) no sistema de \n\ndesenvolvimento interativo do VTK. \n\nOs dois programas apresentados utilizam os mesmos objetos do sistema VTK. Segue \n\ndescri\u00e7\u00e3o do programa em C++ (Figura 3.7a). O in\u00edcio do processo de modelagem ocorre pela \n\ncria\u00e7\u00e3o da inst\u00e2ncia cubeSrc da classe vtkCubeSource (m\u00e9todo New()), que define as \n\ncaracter\u00edsticas geom\u00e9tricas de um cubo posicionado na origem do sistema cartesiano de \n\ncoordenadas. A inst\u00e2ncia cubeMpr da classe vtkPolyDataMapper constitui o segundo est\u00e1gio \n\ndo processo e finaliza a fase de defini\u00e7\u00e3o geom\u00e9trica do modelo. Este objeto recebe um fluxo \n\nde dados de cubeSrc atrav\u00e9s do procedimento cubeMpr->SetInput(cubeSrc->GetOutput()). O\n\npr\u00f3ximo passo, que inicia a fase de visualiza\u00e7\u00e3o, \u00e9 a defini\u00e7\u00e3o de um \u201cator\u201d gen\u00e9rico\n\ntridimensional, cube1, que referencia todas as caracter\u00edsticas geom\u00e9tricas e de ilumina\u00e7\u00e3o do\n\ncubo. Este objeto, inst\u00e2ncia da classe vtkActor, recebe o fluxo de dados relativo aos est\u00e1gios\n\nanteriores. Neste ponto, \u00e9 necess\u00e1rio transformar as informa\u00e7\u00f5es geom\u00e9tricas associadas ao \n\ncontexto de visualiza\u00e7\u00e3o em uma imagem bidimensional que ser\u00e1 a representa\u00e7\u00e3o da \u201ccena\u201d \n\nna tela do computador. Isto ocorre atrav\u00e9s de uma inst\u00e2ncia da classe vtkRenderer, ren1, a \n\nqual recebe as informa\u00e7\u00f5es relativas ao novo ator cubo atrav\u00e9s do comando renWin-\n\n>AddActor(cube1). O fluxo de informa\u00e7\u00f5es termina na inst\u00e2ncia renWin da classe \n\nvtkRenderer, respons\u00e1vel pelo gerenciamento da janela que mostrar\u00e1 o resultado do \n\nprocessamento. Antes de finalizar o programa, todas as inst\u00e2ncias de classes criadas precisam\n\nser explicitamente destru\u00eddas (m\u00e9todos Delete()) para n\u00e3o comprometer o gerenciamento de\n\nmem\u00f3ria no sistema operacional. \n\nO c\u00f3digo em Tcl/Tk (Figura 3.7b) efetua exatamente as mesmas opera\u00e7\u00f5es que o \n\nanterior, mas a cria\u00e7\u00e3o e o tratamento das inst\u00e2ncias de classes do VTK \u00e9 simplificado.  A \n\nestrutura do programa (Figura 3.7c) mostra como o funcionamento do VTK pode ser \n\nrepresentado pela transfer\u00eancia de informa\u00e7\u00f5es entre m\u00f3dulos de processamento\n\ninterconectados.\n\n20\n\n\n\nEmbora mais flex\u00edvel que C++, a linguagem Tcl/Tk n\u00e3o apresenta o mesmo\n\ndesempenho em fase de execu\u00e7\u00e3o, j\u00e1 que o interpretador deve traduzir e executar seus\n\ncomandos continuamente, o que exclui a possibilidade de efetuar otimiza\u00e7\u00e3o de c\u00f3digo\n\nexecut\u00e1vel. Al\u00e9m disto, os controles de sintaxe precisam ser realizados a cada comando, ao \n\npasso que isto s\u00f3 ocorre uma vez na compila\u00e7\u00e3o de programas em C++. \n\nOutra desvantagem da linguagem Tcl/Tk \u00e9 que n\u00e3o disp\u00f5e de m\u00e9todos eficientes para \n\no gerenciamento de estruturas complexas de dados de forma interativa, ao contr\u00e1rio do que \n\nocorre em C++. Isto implica que seu uso deveria ser restrito a aplica\u00e7\u00f5es envolvendo a \n\nvisualiza\u00e7\u00e3o de estruturas geom\u00e9tricas de f\u00e1cil defini\u00e7\u00e3o (por exemplo, atrav\u00e9s da leitura de \n\num arquivo preexistente em disco). Para a execu\u00e7\u00e3o de tarefas mais complexas, sobretudo \n\naquelas relacionadas com a modifica\u00e7\u00e3o em tempo real da geometria e topologia do modelo, \u00e9 \n\naconselh\u00e1vel o uso de programas em C++, menos flex\u00edveis em tempo de execu\u00e7\u00e3o, por\u00e9m\n\nmais poderosos. \n\nEste mestrando tem desenvolvido aplicativos de modelagem geom\u00e9trica usando tanto \n\na linguagem C++, como Tcl/Tk. No primeiro caso, foi escrito um programa para recortar \n\nmalhas vazadas representando falhas geol\u00f3gicas ao longo das linhas de interse\u00e7\u00e3o com \n\nsuperf\u00edcies topogr\u00e1ficas. Este trabalho foi realizado durante as atividades de inicia\u00e7\u00e3o \n\ncient\u00edfica junto ao Laborat\u00f3rio de GeoModelagem 3D do DPM / IGCE / UNESP (programa\n\nTricut, LINDENBECK et al., 2002). J\u00e1 o segundo trabalho, realizado durante este Mestrado, \n\nenvolveu o desenvolvimento em Tcl/Tk do programa Tensor3D para deformar em tempo real \n\na representa\u00e7\u00e3o 3D de estruturas geol\u00f3gicas (cap\u00edtulo 5). Em ambos os casos, a escolha da \n\nlinguagem dependeu da finalidade dos aplicativos: modelagem geom\u00e9trica avan\u00e7ada e \n\neficiente (Tricut) versus flexibilidade (Tensor3D).\n\n3.4.4 Estrutura de arquivos de dados do VTK \n\nO sistema VTK possui numerosos filtros destinados \u00e0 leitura / importa\u00e7\u00e3o de arquivos\n\nde dados de acordo com os principais formatos usados em computa\u00e7\u00e3o cient\u00edfica. Destaca-se\n\no formato MOVIE.BYU (MOVIE.BYU FILE FORMAT, 2005), amplamente utilizado no\n\nLaborat\u00f3rio de GeoModelagem 3D do DPM / IGCE / UNESP para o intercambio de\n\ninforma\u00e7\u00f5es entre programas de modelagem / visualiza\u00e7\u00e3o distintos. Os arquivos neste \n\nformato possuem extens\u00e3o *.g ou *.dis.\n\nO sistema VTK possui tamb\u00e9m um formato de arquivos pr\u00f3prio, extremamente\n\nflex\u00edvel, cuja estrutura ser\u00e1 descrita a seguir. Tal formato foi extensivamente utilizado para\n\n21\n\n\n\ncriar modelos digitais a serem lidos pelo programa Tensor3D e, por ser bem estruturado, pode \n\nser usado como exemplo para a especifica\u00e7\u00e3o de objetos 3D. \n\nA Figura 3.8a mostra um exemplo de modelo geom\u00e9trico visualizado com o VTK. \n\nTrata-se de uma pir\u00e2mide com base quadrada, um objeto constitu\u00eddo de cinco pontos e cinco\n\npol\u00edgonos ou faces. O arquivo *.vtk respons\u00e1vel por sua defini\u00e7\u00e3o \u00e9 mostrado na Figura 3.8b.\n\nAs primeiras duas linhas cont\u00eam informa\u00e7\u00f5es de cabe\u00e7alho necess\u00e1rias para identificar\n\narquivos de dados no formato do VTK. A terceira linha pode conter as palavras reservadas \n\nASCII ou BINARY, indicando que o arquivo poder\u00e1 ser de texto leg\u00edvel (ASCII), ou que ser\u00e1 \n\nusada a formata\u00e7\u00e3o otimizada de dados (BINARY). A segunda op\u00e7\u00e3o \u00e9 muito importante para \n\no armazenamento de grande volume de dados, proporcionando uma consider\u00e1vel economia de\n\nespa\u00e7o utilizado em disco. A quarta linha \u00e9 introduzida pela palavra reservada DATASET e \n\nindica o tipo de objeto modelado no arquivo. Um modelo geom\u00e9trico constitu\u00eddo de pol\u00edgonos\n\n\u00e9 definido atrav\u00e9s da palavra reservada POLYDATA, que corresponde \u00e0 classe de \n\narmazenamento vtkPolyData.\n\nA primeira se\u00e7\u00e3o do arquivo logo ap\u00f3s as informa\u00e7\u00f5es de cabe\u00e7alho cont\u00e9m a \n\ngeometria do modelo, isto \u00e9, a lista de coordenadas dos pontos que o definem. A se\u00e7\u00e3o \u00e9 \n\nintroduzida pela palavra reservada POINTS, seguida do n\u00famero de pontos que ser\u00e3o \n\nespecificados e do formato num\u00e9rico das coordenadas: int para valores inteiros (ocupando 4 \n\nbytes cada), float para valores decimais em precis\u00e3o simples (4 bytes cada, 6 a 9 d\u00edgitos \n\ndecimais) e double para valores decimais em precis\u00e3o dupla (8 bytes cada, 15 a 17 d\u00edgitos \n\ndecimais). O resto da se\u00e7\u00e3o cont\u00e9m as coordenadas (x, y, z) dos pontos do objeto. Na medida\n\nem que s\u00e3o lidos, os pontos recebem um n\u00famero de identifica\u00e7\u00e3o crescente n\u00e3o negativo (id),\n\n0\n\n3\n\n4\n\n2\n\n1\n\n# vtk DataFile Version 3.0 \nvtk output \nASCII\nDATASET POLYDATA \nPOINTS 5 float \n0.5 0.5 0 -0.5 0.5 0 -0.5 -0.5 0 \n0.5 -0.5 0 0 0 1.5 \n\nPOLYGONS 5 21 \n4 0 3 2 1 \n3 0 1 4 \n3 1 2 4 \n3 2 3 4 \n3 0 4 3 \n\nCELL_DATA 5 \nPOINT_DATA 5 \n\n(b)\n\nATRIBUTOS\n\nTOPOLOGIA\n\nGEOMETRIA\n\n(a)\n\nFigura 3.8 \u2013 (a) Exemplo de modelo geom\u00e9trico. (b) Arquivo *.vtk correspondente ao objeto.\n\n22\n\n\n\ncome\u00e7ando pelo valor 0. Desta forma, no exemplo da figura haver\u00e1 cinco pontos, tendo \n\nc\u00f3digos de 0 a 4, sendo o ponto N\u00ba 0 (0.5, 0.5, 0), o N\u00ba 1 (-0.5, 0.5, 0) e assim por diante. A\n\nordem de especifica\u00e7\u00e3o dos pontos \u00e9 importante e determina os c\u00f3digos atribu\u00eddos aos \n\nmesmos.\n\nA se\u00e7\u00e3o seguinte do arquivo cont\u00e9m informa\u00e7\u00f5es de topologia, isto \u00e9, conectividade\n\ndos pontos. Nesta se\u00e7\u00e3o especifica-se de que maneira os pontos s\u00e3o conectados para formar\n\npol\u00edgonos. A primeira linha consiste na palavra reservada POLYGONS, um dos primitivos de \n\nmodelagem geom\u00e9trica definidos na se\u00e7\u00e3o 3.4.2, seguida do n\u00famero de pol\u00edgonos e do\n\nn\u00famero total de valores que ser\u00e3o fornecidos nas linhas seguintes da se\u00e7\u00e3o. Esta \u00faltima\n\ninforma\u00e7\u00e3o serve para controlar a consist\u00eancia das informa\u00e7\u00f5es topol\u00f3gicas especificadas. \u00c9 \n\nposs\u00edvel verificar que na se\u00e7\u00e3o de topologia do arquivo de exemplo, 21 valores seguem a \n\nprimeira linha.\n\nO resto da se\u00e7\u00e3o destina-se \u00e0 enumera\u00e7\u00e3o dos c\u00f3digos de pontos que definem cada \n\npol\u00edgono, precedidos pelo n\u00famero de pontos do mesmo. Por exemplo, a linha 4 0 3 2 1 indica \n\nque ser\u00e1 inserido um pol\u00edgono de quatro pontos cujos c\u00f3digos s\u00e3o 0, 3, 2 e 1, de acordo com \n\nos c\u00f3digos implicitamente definidos na se\u00e7\u00e3o de geometria. Este pol\u00edgono corresponde \u00e0 base \n\nda pir\u00e2mide da Figura 3.8a. Os demais pol\u00edgonos da se\u00e7\u00e3o de topologia s\u00e3o tri\u00e2ngulos e \n\ncorrespondem \u00e0s faces laterais da pir\u00e2mide. A ordem de enumera\u00e7\u00e3o dos pontos de um\n\npol\u00edgono segue a conven\u00e7\u00e3o da biblioteca gr\u00e1fica OpenGL (2005), usada internamente pelo \n\nsistema VTK, e assume que uma seq\u00fc\u00eancia de c\u00f3digos em sentido anti-hor\u00e1rio corresponde \u00e0 \n\ndefini\u00e7\u00e3o do pol\u00edgono visto de \u201cfora para dentro\u201d (em rela\u00e7\u00e3o \u00e0 superf\u00edcie do modelo\n\nprincipal), ao passo que uma seq\u00fc\u00eancia em sentido hor\u00e1rio define o mesmo de \u201cdentro para \n\nfora\u201d. Esta distin\u00e7\u00e3o pode parecer irrelevante, mas em computa\u00e7\u00e3o gr\u00e1fica (e no sistema\n\nVTK) \u00e9 poss\u00edvel atribuir informa\u00e7\u00f5es diferentes \u00e0s duas especifica\u00e7\u00f5es de um mesmo\n\npol\u00edgono. Por exemplo, as faces da pir\u00e2mide da Figura 3.8a possuem cor verde quando\n\nobservadas de \u201cfora para dentro\u201d (ordem anti-hor\u00e1ria dos pontos especificada na se\u00e7\u00e3o de \n\ntopologia), mas as mesmas faces vistas de um ponto interno ao modelo poderiam ser \n\nsombreadas usando uma cor distinta. Esta \u00e9 uma importante propriedade que permite\n\ndiferenciar partes internas e externas de um modelo geom\u00e9trico. Os pol\u00edgonos do exemplo da \n\nfigura foram especificados levando em conta a ordem anti-hor\u00e1ria dos pontos, de forma que \n\nas faces da pir\u00e2mide s\u00e3o consideradas externas em rela\u00e7\u00e3o ao observador.\n\nA \u00faltima se\u00e7\u00e3o do arquivo de dados \u00e9 opcional \u00e9 destina-se \u00e0 especifica\u00e7\u00e3o de\n\natributos associados aos pontos ou \u00e0s faces do modelo. Tais atributos podem ser representados\n\npor valores escalares, vetores ou matrizes quadradas de tensores (vide se\u00e7\u00e3o 3.4.2). No \n\n23\n\n\n\nexemplo da figura, n\u00e3o foram definidos atributos, sendo que a se\u00e7\u00e3o limita-se a declarar cinco \n\natributos para os pontos da pir\u00e2mide e cinco para suas faces. Neste caso, o sistema VTK \n\npreenche os campos de atributos de forma autom\u00e1tica, de acordo com informa\u00e7\u00f5es gr\u00e1ficas\n\nassociadas ao modelo (cor das faces, vetores normais calculados para os pontos, etc.). \n\nO objeto cuja estrutura foi mostrada nesta se\u00e7\u00e3o \u00e9 extremamente simples. Contudo, as \n\nregras de defini\u00e7\u00e3o de geometria e topologia expostas s\u00e3o as mesmas para modelos mais\n\ncomplexos, tanto em termos de morfologia como de volume de informa\u00e7\u00f5es. A geometria,\n\ntopologia e, eventualmente, atributos s\u00e3o armazenados de forma semelhante em formatos de\n\narquivos de programas e bibliotecas gr\u00e1ficas diferentes do VTK. A descri\u00e7\u00e3o feita nesta se\u00e7\u00e3o\n\nvisou tamb\u00e9m proporcionar os conceitos fundamentais para a escrita de programas de \n\nconvers\u00e3o de e para o formato de dados do sistema VTK, caso seja necess\u00e1ria uma intera\u00e7\u00e3o \n\ndo mesmo com outros formatos n\u00e3o suportados (um exemplo \u00e9 o formato *.ts do programa\n\nGOCAD).\n\n3.4.5 Instala\u00e7\u00e3o do VTK \n\nO VTK foi inicialmente desenvolvido para ser utilizado em aplicativos no sistema\n\noperacional UNIX. Os autores da biblioteca n\u00e3o disponibilizaram c\u00f3digo pronto para ser\n\nexecutado (c\u00f3digo bin\u00e1rio ou pr\u00e9-compilado), e sim o conjunto de arquivos em C++ que \n\nconstitui o c\u00f3digo fonte do VTK. A \u00fanica exce\u00e7\u00e3o \u00e9 a vers\u00e3o pr\u00e9-compilada para o sistema\n\noperacional Windows, desenvolvida para agilizar a execu\u00e7\u00e3o dos numerosos programas de \n\nexemplo na linguagem Tcl/Tk que acompanham a biblioteca. A raz\u00e3o do VTK n\u00e3o possuir \n\nvers\u00f5es pr\u00e9-compiladas para UNIX \u00e9 que existem muitas variantes do mesmo, sendo que cada \n\ninst\u00e2ncia espec\u00edfica pode sofrer modifica\u00e7\u00f5es importantes de uma vers\u00e3o para outra. Isto \n\nsignifica que o c\u00f3digo fonte precisa ser compilado para a plataforma espec\u00edfica do usu\u00e1rio \n\n(Intel, IBM, SUN, etc.), isto \u00e9, convertido para o c\u00f3digo de m\u00e1quina (ou bin\u00e1rio) do \n\nprocessador. Este mestrando tem utilizado o VTK nos sistemas operacionais Irix (para \n\nplataforma Silicon Graphics), Solaris (plataforma SUN) e, recentemente, Linux Fedora Core 3\n\n(plataforma Intel com 32 bits). Para cada sistema, foi necess\u00e1rio realizar um processo de\n\nconfigura\u00e7\u00e3o e compila\u00e7\u00e3o. Nesta se\u00e7\u00e3o ser\u00e3o descritos os procedimentos de instala\u00e7\u00e3o para o\n\nsistema operacional Linux, utilizado durante todo o per\u00edodo do Mestrado. \n\nSer\u00e1 assumida a utiliza\u00e7\u00e3o do sistema operacional Red Hat Fedora Core 3 em \n\nplataforma Intel 32 bits. Todos os aplicativos foram instalados no diret\u00f3rio /usr/local,\n\nnormalmente usado para programas independentes do sistema operacional. A esta\u00e7\u00e3o usada \n\nfoi um Pentium 4 com 2.4 GHz de freq\u00fc\u00eancia de clock, 1 Gbyte de mem\u00f3ria RAM, 1 HD de\n\n24\n\n\n\n120 Gbytes (e outro de 80 Gbytes para realizar c\u00f3pias de seguran\u00e7a de arquivos), e uma placa \n\ngr\u00e1fica aceleradora NVIDIA GeForce FX 5600. \n\nO VTK utiliza a biblioteca gr\u00e1fica Open-GL, sendo necess\u00e1ria sua instala\u00e7\u00e3o pr\u00e9via.\n\nNas atuais placas gr\u00e1ficas aceleradoras, os recursos da biblioteca Open-GL est\u00e3o \n\nimplementados em hardware para obter o m\u00e1ximo desempenho de aplicativos 3D. Portanto, \u00e9 \n\nsuficiente instalar o driver de controle da placa aceleradora da companhia NVIDIA, o qual\n\ncont\u00e9m o software necess\u00e1rio para ativar os m\u00f3dulos Open-GL da placa. O driver para o \n\nsistema operacional Linux foi baixado da homepage da companhia (NVIDIA, 2005). Na \n\np\u00e1gina principal, s\u00e3o acessados os links \u201cDownload Drivers\u201d, \u201cLinux, FreeBSD and Solaris \n\nDrivers\u201d, e \u201c1.0-6629\u201d na se\u00e7\u00e3o Linux IA-32. O c\u00f3digo 1.0-6629 indica a vers\u00e3o do driver.\n\nEm seguida, \u00e9 exibida uma p\u00e1gina com a descri\u00e7\u00e3o dos procedimentos de instala\u00e7\u00e3o. O driver\n\nest\u00e1 contido no arquivo NVIDIA-Linux-x86-1.0-6629-pkg1.run, que pode ser acessado a partir \n\ndesta p\u00e1gina. Este arquivo \u00e9 v\u00e1lido para todos os modelos de placas da companhia NVIDIA. \n\nAp\u00f3s a grava\u00e7\u00e3o do arquivo em disco, \u00e9 necess\u00e1rio finalizar o gerenciador gr\u00e1fico do \n\nLinux e trabalhar em modalidade de texto (shell). Em seguida, como usu\u00e1rio root, deve-se \n\nexecutar o seguinte comando a partir do diret\u00f3rio onde foi gravado o arquivo: \n\n# bash ./NVIDIA-Linux-x86-1.0-6629-pkg1.run\n\nO s\u00edmbolo \u201c#\u201d \u00e9 o prompt de comandos do superusu\u00e1rio (root). Ser\u00e1 visualizado um \n\nconjunto de informa\u00e7\u00f5es e instru\u00e7\u00f5es para a correta instala\u00e7\u00e3o do driver. O procedimento n\u00e3o \n\n\u00e9 complexo, sendo apenas necess\u00e1rio selecionar a op\u00e7\u00e3o OK em todas as janelas exibidas. Em\n\nseguida, deve-se modificar o arquivo /etc/X11/xorg.conf conforme instru\u00e7\u00f5es contidas no \n\narquivo README (se\u00e7\u00e3o sec-03) que acompanha o driver da placa (arquivo \n\n/usr/share/doc/NVIDIA_GLX-1.0/README, criado ap\u00f3s a instala\u00e7\u00e3o do driver). O arquivo \n\nxorg.conf cont\u00e9m as configura\u00e7\u00f5es do gerenciador gr\u00e1fico para as distribui\u00e7\u00f5es Linux da \n\nempresa Red Hat, e \u00e9 composto por se\u00e7\u00f5es (blocos de instru\u00e7\u00f5es) destinadas ao controle de \n\ncada funcionalidade. Para modificar o arquivo \u00e9 necess\u00e1rio usar o usu\u00e1rio root e executar os \n\nseguintes passos (\u00e9 aconselh\u00e1vel fazer uma c\u00f3pia do arquivo antes de proceder): \n\n- Na se\u00e7\u00e3o \u201cDevice\u201d, identificar a linha Driver \u201cnv\u201d e substitu\u00ed-la por Driver \u201cnvidia\u201d;\n\n- Na se\u00e7\u00e3o \u201cModule\u201d, remover as linhas Load \u201cdri\u201d e Load \u201cGLcore\u201d, e acrescentar a \n\nlinha Load \u201cglx\u201d.\n\nO arquivo /usr/share/doc/NVIDIA_GLX-1.0/README cont\u00e9m uma descri\u00e7\u00e3o \n\ncompleta de todas as funcionalidade da placa aceleradora que podem ser configuradas. Sua \n\nleitura \u00e9 importante para obter o m\u00e1ximo desempenho da placa instalada, e cont\u00e9m tamb\u00e9m\n\n25\n\n\n\numa lista de solu\u00e7\u00f5es para os problemas mais comuns que podem ocorrer durante a instala\u00e7\u00e3o \n\ndo driver.\n\nPara voltar ao ambiente gr\u00e1fico do sistema Linux, \u00e9 suficiente executar o comando\n\nstartx a partir da shell de comandos (n\u00e3o \u00e9 preciso usar o usu\u00e1rio root). Dentro deste\n\nambiente, \u00e9 poss\u00edvel verificar a instala\u00e7\u00e3o do driver invocando uma janela de comandos e\n\nexecutando o programa glxgears. Trata-se de um aplicativo gr\u00e1fico 3D que simula a rota\u00e7\u00e3o\n\nde tr\u00eas engrenagens. Seu correto funcionamento significa que o driver da placa (e portanto a \n\nbiblioteca Open-GL) foi instalado com \u00eaxito. O programa glxgears exibe a informa\u00e7\u00e3o de \n\nquadros por segundo (frames per second, FPS) obtidos pela placa aceleradora e representa\n\numa medida b\u00e1sica de compara\u00e7\u00e3o de desempenho entre modelos de placas distintos. Com o \n\nmicrocomputador Pentium 4 utilizado nesta pesquisa foi obtido um valor m\u00e9dio de 1900\n\nquadros por segundo. \n\nAs primeiras vers\u00f5es do VTK apresentavam freq\u00fcentemente problemas de compila\u00e7\u00e3o\n\ndevido \u00e0 necessidade de definir manualmente o valor de numerosas vari\u00e1veis de ambiente\n\ndependentes da variante do sistema UNIX utilizada. Ao mesmo tempo, a complexidade da\n\nestrutura do sistema tem aumentado, tornando dif\u00edcil o gerenciamento dos arquivos Makefile\n\nque controlam sua compila\u00e7\u00e3o (se\u00e7\u00e3o 3.5.1). Para minimizar tais inconvenientes, as vers\u00f5es \n\nmais recentes do VTK utilizam uma ferramenta de aux\u00edlio ao processo de compila\u00e7\u00e3o,\n\ndenominada CMake (2005). Este \u00e9 um programa cuja instala\u00e7\u00e3o previa \u00e9 imprescind\u00edvel para \n\na correta compila\u00e7\u00e3o do VTK, e pode ser obtido acessando sua p\u00e1gina principal na rede\n\nInternet. Nesta p\u00e1gina, deve-se selecionar o link \u201cdownload\u201d e em seguida o arquivo cmake-\n\n2.0.6-x86-linux.tar.gz (latest release). O arquivo pode ser gravado no diret\u00f3rio tempor\u00e1rio \n\n/tmp do Linux. O sufixo .tar.gz indica que o programa \u00e9 constitu\u00eddo de uma estrutura de \n\ndiret\u00f3rios que foi convertida para um arquivo \u00fanico atrav\u00e9s do comando tar, e em seguida \n\ncompactada usando o comando gzip (isto reduz o tamanho do arquivo principal e agiliza sua \n\ntransfer\u00eancia em redes de computadores). Para expandir o diret\u00f3rio do programa, deve-se \n\nexecutar os seguintes comandos como usu\u00e1rio root:\n\n# cd /tmp \n# gunzip cmake-2.0.6-x86-linux.tar.gz \n# cd /usr/local\n# tar xvf /tmp/cmake-2.0.6-x86-linux-files.tar\n\nIsto atualizar\u00e1 os diret\u00f3rios share, doc, man e bin (dentro de /usr/local) com os \n\narquivos do CMake. O arquivo bin\u00e1rio do programa \u00e9 /usr/local/bin/cmake.\n\nPara utilizar o sistema VTK com a linguagem de programa\u00e7\u00e3o Tcl/Tk, \u00e9 necess\u00e1rio \n\nverificar que as bibliotecas da mesma tenham sido instaladas no sistema operacional Linux. \n\n26\n\n\n\nTrata-se de quatro m\u00f3dulos de instala\u00e7\u00e3o (no formato *.rpm da empresa Red Hat), a \n\nsaber: tcl-8.3.5-96.0.1, tcl-devel-8.3.5-96.0.1, tk-8.3.5-96.0.1 e tk-devel-8.3.5-96.0.1. Os \n\nn\u00fameros indicados nestes arquivos denotam a vers\u00e3o das bibliotecas e podem ser diferentes \n\ndos que foram usados neste Mestrado. Para verificar se tais m\u00f3dulos est\u00e3o instalados, pode-se \n\nusar, sempre como usu\u00e1rio root, os comandos\n\n# rpm \u2013qa | grep tcl \n# rpm \u2013qa | grep tk\n\nque exibem uma lista dos m\u00f3dulos instalados cujo nome contenha as siglas \u201ctcl\u201d e \u201ctk\u201d. Os\n\nquatro arquivos do par\u00e1grafo anterior devem estar contidos na sa\u00edda gerada pelos dois \n\ncomandos. Se os m\u00f3dulos n\u00e3o estiverem instalados, ser\u00e1 necess\u00e1rio baixar os mesmos da\n\nInternet (RPMFIND, 2005). Em seguida, dever\u00e1 ser realizada sua instala\u00e7\u00e3o manual usando \n\nos seguintes comandos (na ordem especificada), a partir do diret\u00f3rio onde os arquivos foram\n\ncopiados:\n\n# rpm \u2013ivh  tcl-8.3.5-96.0.1.rpm\n# rpm -ivh tcl-devel-8.3.5-96.0.1.rpm\n# rpm -ivh tk-8.3.5-96.0.1.rpm\n# rpm -ivh tk-devel-8.3.5-96.0.1.rpm\n\nPara verificar se as bibliotecas da linguagem Tcl/Tk foram instaladas corretamente,\n\npode-se invocar o interpretador da mesma, usando o comando /usr/bin/wish. Ser\u00e1 visualizada \n\numa janela do m\u00f3dulo Tk e a shell de comandos aguardar\u00e1 instru\u00e7\u00f5es a serem interpretadas.\n\nCom a instala\u00e7\u00e3o da biblioteca OpenGL e do interpredador da linguagem Tcl/Tk, a \n\nesta\u00e7\u00e3o est\u00e1 pronta para a configura\u00e7\u00e3o e compila\u00e7\u00e3o do VTK. A partir da p\u00e1gina principal do\n\nsistema na rede Internet (VISUALIZATION TOOLKIT, 2005), deve-se selecionar o link\n\n\u201cGet The Software\u201d. Na nova p\u00e1gina exibida, encontra-se uma se\u00e7\u00e3o chamada \u201cDownload the \n\nofficial release\u201d. A vers\u00e3o utilizada neste Mestrado foi a 4.2. Os arquivos VTK-4.2-\n\nLatestRelease.tar.gz e vtkData-4.2.tar.gz devem ser selecionados e gravados em disco. O\n\nprimeiro cont\u00e9m uma vers\u00e3o compactada de todos os arquivos necess\u00e1rios para compilar o \n\nVTK. O segundo arquivo cont\u00e9m dados usados para os programas de exemplos que \n\nacompanham a biblioteca. \u00c9 tamb\u00e9m poss\u00edvel baixar o arquivo VTKDocHtml-4.2.tar.gz, o \n\nqual cont\u00e9m uma descri\u00e7\u00e3o de todas as classes do sistema, acess\u00edvel a navegadores Web. Tal \n\nlista est\u00e1 tamb\u00e9m dispon\u00edvel na p\u00e1gina da biblioteca, na se\u00e7\u00e3o \u201cManual\u201d.\n\nAssumindo /usr/local como diret\u00f3rio de instala\u00e7\u00e3o do VTK, os arquivos devem ser \n\ndescompactados, como usu\u00e1rio root, atrav\u00e9s dos seguintes comandos:\n\n# cd /usr/local\n# tar xvfz VTK-4.2-LatestRelease.tar.gz\n# tar xvfz vtkData-4.2.tar.gz\n\n27\n\n\n\nSer\u00e3o criados os diret\u00f3rios VTK e VTKData-release-4.2 dentro de /usr/local. O \n\ndiret\u00f3rio VTK cont\u00e9m v\u00e1rios subdiret\u00f3rios de c\u00f3digo fonte em C++, divididos de acordo com\n\nas especialidades das classes (processamento de imagens, procedimentos comuns,\n\nprocessamento 3D, etc.). Existe tamb\u00e9m um arquivo chamado README.html, o qual cont\u00e9m\n\num guia de instala\u00e7\u00e3o da biblioteca com os procedimentos ilustrados nesta se\u00e7\u00e3o. Para iniciar \n\na configura\u00e7\u00e3o das vari\u00e1veis de ambiente necess\u00e1rias \u00e0 compila\u00e7\u00e3o do VTK, deve-se invocar \n\no programa CMake a partir do diret\u00f3rio /usr/local/VTK:\n\n# cmake \u2013i\n\nSer\u00e1 exibida a pergunta \u201cWould you like to see advanced options?\u201d. A resposta deve \n\nser \u201cNo\u201d. Em seguida, o programa mostrar\u00e1 uma lista de vari\u00e1veis cujo conte\u00fado deve ser \n\ndefinido de forma interativa. A maioria delas possui um valor default que n\u00e3o precisa ser \n\nmodificado. Para estes casos, \u00e9 suficiente apertar a tecla&lt;ENTER>, o que confirmar\u00e1 os\n\nvalores predefinidos. Contudo, h\u00e1 vari\u00e1veis cujo conte\u00fado deve ser especificado \n\nexplicitamente:\n\nVari\u00e1vel Valor\n\nBUILD_EXAMPLES ON\n\nBUILD_SHARED_LIBS ON\n\nCMAKE_BUILD_TYPE CMAKE_CXX_FLAGS\n\nVTK_DATA_ROOT /usr/local/VTKData-release-4-2\n\nVTK_USE_HYBRID ON\n\nVTK_USE_PATENTED ON\n\nVTK_WRAP_TCL ON\n\nAp\u00f3s a defini\u00e7\u00e3o de todas as vari\u00e1veis o programa CMake terminar\u00e1 sua execu\u00e7\u00e3o. A \n\nconfigura\u00e7\u00e3o do VTK est\u00e1 completa. O pr\u00f3ximo passo \u00e9 a compila\u00e7\u00e3o propriamente dita, que\n\ndeve ser invocada executando o comando make no diret\u00f3rio /usr/local/VTK. A compila\u00e7\u00e3o \u00e9 \n\ndemorada: sua dura\u00e7\u00e3o na m\u00e1quina descrita acima foi de trinta minutos.\n\nUma vez finalizado o processo de compila\u00e7\u00e3o, o diret\u00f3rio /usr/local/bin/VTK conter\u00e1\n\nas bibliotecas do VTK (arquivos com extens\u00e3o *.so) utiliz\u00e1veis para a compila\u00e7\u00e3o de \n\nprogramas em C++, e o interpretador de comandos do sistema (arquivo vtk). As bibliotecas\n\npodem ser utilizadas em programas (em C++) compilados, usando arquivos Makefile (se\u00e7\u00e3o\n\n3.5.1). J\u00e1 o arquivo vtk \u00e9 um execut\u00e1vel que interpreta scripts na linguagem Tcl/Tk. O\n\nsubdiret\u00f3rio Examples do VTK cont\u00e9m numerosos exemplos de programas que mostram as\n\n28\n\n\n\nfuncionalidades de modelagem e visualiza\u00e7\u00e3o do sistema. Alguns programas est\u00e3o escritos\n\nnas linguagens C++, Python e Java, sendo a grande maioria em Tcl/Tk. Para a execu\u00e7\u00e3o \n\ndestes \u00faltimos, \u00e9 suficiente invocar o comando vtk usando como argumento o nome do \n\nprograma desejado, por exemplo \u201cvtk programa.tcl\u201d. Como ser\u00e1 visto mais adiante, esta \u00e9 \n\numa forma r\u00e1pida de desenvolvimento e teste de aplicativos relativamente simples e n\u00e3o \n\nrequer o processo de compila\u00e7\u00e3o a cada altera\u00e7\u00e3o do programa-fonte.\n\n3.5 Ferramentas para o desenvolvimento de programas\n\nNesta se\u00e7\u00e3o ser\u00e3o descritas algumas ferramentas de desenvolvimento para a confec\u00e7\u00e3o \n\nde programas em C/C++ em ambiente Linux. O objetivo \u00e9 ilustrar as etapas de prepara\u00e7\u00e3o de\n\num ambiente de trabalho para o desenvolvimento, usando o sistema VTK, de aplicativos de \n\nmodelagem / visualiza\u00e7\u00e3o complexos. Estes requerem o uso de linguagens compiladas, mais\n\npoderosas e eficientes do que as linguagens interpretadas (vide se\u00e7\u00e3o 3.4.3). Todas as \n\nferramentas descritas a seguir utilizam a licen\u00e7a GNU e s\u00e3o de c\u00f3digo aberto. \n\nO sistema Linux possui numerosos aplicativos de desenvolvimento. O mais importante\n\n\u00e9 provavelmente o compilador gcc (2005), que permite compilar programas em linguagem \n\nC/C++ e \u00e9 tamb\u00e9m uma ferramenta de c\u00f3digo aberto. Um compilador de utiliza\u00e7\u00e3o livre \n\nconstitui um importante passo para promover o desenvolvimento de aplicativos, j\u00e1 que n\u00e3o \u00e9 \n\nnecess\u00e1rio pagar nenhuma licen\u00e7a para gerar m\u00f3dulos execut\u00e1veis (bin\u00e1rios) perfeitamente\n\nfuncionantes a partir de um c\u00f3digo fonte em C/C++. O compilador suporta tamb\u00e9m outras \n\nlinguagens, como Fortran77 e Java. \n\n3.5.1 O arquivo Makefile\n\nNos sistemas operacionais UNIX (incluindo Linux), a compila\u00e7\u00e3o de projetos \n\ncomplexos constitu\u00eddos de v\u00e1rios m\u00f3dulos de c\u00f3digo fonte ocorre atrav\u00e9s de um arquivo de\n\ncontrole, chamado Makefile, o qual cont\u00e9m todas as diretivas e op\u00e7\u00f5es de compila\u00e7\u00e3o a serem\n\npassadas para o compilador. Outra fun\u00e7\u00e3o do arquivo Makefile \u00e9 indicar todas as bibliotecas \n\nque ser\u00e3o utilizadas no projeto.  Segue um exemplo de arquivo Makefile.\n\n# Arquivo Makefile para compilacao de programa \n# de teste usando bibliotecas do sistema VTK \nCC = gcc \nINCLUDES = -I/usr/local/include/vtk \nCFLAGS = -Wall -O2 \nLDFLAGS =  -L/usr/local/lib/vtk \nLIBS = -lvtkCommon -lvtkRendering \u2013lvtkGraphics -lvtkIO \n\n29\n\n\n\nteste: main.o graphics.o \n$(CC) $(LDFLAGS) $(LIBS) main.o graphics.o -o teste \n\nmain.o : main.c \n$(CC) $(INCLUDES) $(CFLAGS) main.c -c \n\ngraphics.o : graphics.c \n$(CC) $(INCLUDES) $(CFLAGS) graphics.c -c \n\nall: teste \n\nEste exemplo assume que o programa a ser compilado seja constitu\u00eddo de dois \n\narquivos de c\u00f3digo fonte em C, main.c e graphics.c, sendo que o segundo cont\u00e9m comandos\n\nque invocam fun\u00e7\u00f5es da biblioteca gr\u00e1fica VTK. O programa execut\u00e1vel se chama teste. Para\n\ncri\u00e1-lo, \u00e9 necess\u00e1rio executar, dentro de um terminal shell do Linux, o comando make no \n\ndiret\u00f3rio que cont\u00e9m o arquivo Makefile. Este comando, cujo nome completo \u00e9 GNU Make \n\n(2004), consiste em um interpretador de comandos para arquivos Makefile. Trata-se de um \n\nprograma de c\u00f3digo aberto.\n\nUm arquivo Makefile \u00e9 constitu\u00eddo de duas se\u00e7\u00f5es: declara\u00e7\u00e3o de vari\u00e1veis e cl\u00e1usulas.\n\nComo mostrado no arquivo de exemplo, o Makefile utiliza algumas vari\u00e1veis definidas \n\ninternamente. A primeira, CC, indica qual compilador ser\u00e1 utilizado (no caso, o compilador \n\ngcc). Sempre que for necess\u00e1rio invocar o compilador, basta acessar o conte\u00fado da vari\u00e1vel\n\nCC, utilizando para tanto a express\u00e3o $(CC). O mesmo procedimento vale para as demais\n\nvari\u00e1veis do exemplo. INCLUDES indica o caminho dos arquivos de cabe\u00e7alho das classes do \n\nVTK. Tais arquivos fornecem a informa\u00e7\u00e3o de todas as fun\u00e7\u00f5es que a biblioteca disponibiliza.\n\nA vari\u00e1vel CFLAGS cont\u00e9m as op\u00e7\u00f5es de compila\u00e7\u00e3o, sendo que -Wall ativa todas as \n\nmensagens de alerta e -O2 determina a cria\u00e7\u00e3o de um c\u00f3digo execut\u00e1vel otimizado (mais\n\nr\u00e1pido). J\u00e1 a vari\u00e1vel LDFLAGS especifica  o diret\u00f3rio onde ser\u00e3o encontradas as bibliotecas \n\ndin\u00e2micas do VTK (arquivos com extens\u00e3o *.so) que s\u00e3o utilizadas pelo programa teste. A \n\nvari\u00e1vel LIBS cont\u00e9m uma lista destas bibliotecas (O sufixo \u201c.so\u201d n\u00e3o deve ser indicado).\n\nA segunda parte do arquivo Makefile, cont\u00e9m uma lista de cl\u00e1usulas ou regras que o \n\ncompilador deve seguir para gerar o execut\u00e1vel. Uma cl\u00e1usula assume a forma\n\n<objetivo > :&lt;componentes> \n\n&lt;comando> \n\nsendo&lt;objetivo> o nome do arquivo a ser gerado nesta regra,&lt;componentes> a lista de \n\ncomponentes necess\u00e1rios para tanto e&lt;comando> o meio para a execu\u00e7\u00e3o deste processo. No \n\narquivo de exemplo, existem tr\u00eas objetivos, isto \u00e9, arquivos a serem gerados, sendo o primeiro\n\nfinal (o programa execut\u00e1vel teste) e os demais intermedi\u00e1rios (main.o e graphics.o, tamb\u00e9m\n\nchamados c\u00f3digos objetos). Na primeira regra \u00e9 poss\u00edvel verificar que teste necessita dos \n\n30\n\n\n\narquivos intermedi\u00e1rios. De fato, tais arquivos cont\u00eam os arquivos-fonte main.c e graphics.c\n\ncompilados, isto \u00e9, traduzidos para a linguagem de m\u00e1quina do processador, mas nenhuma\n\nrefer\u00eancia \u00e0s fun\u00e7\u00f5es de biblioteca utilizadas (VTK e biblioteca padr\u00e3o da linguagem C) \u201cest\u00e1 \n\nresolvida\u201d. Isto significa que o compilador ainda n\u00e3o especificou no c\u00f3digo objeto onde \u00e9 \n\nposs\u00edvel encontrar as bibliotecas necess\u00e1rias. O problema \u00e9 solucionado atrav\u00e9s de um \n\nprocesso chamado \u201clinkedita\u00e7\u00e3o\u201d, realizado por um programa (linker) que pode ser invocado \n\na partir do compilador, como no exemplo apresentado. Na primeira cl\u00e1usula, a op\u00e7\u00e3o -o do \n\ncompilador indica qual \u00e9 o nome do arquivo a ser gerado (que coincide com o nome do \n\nobjetivo). J\u00e1 a segunda e terceira cl\u00e1usulas especificam a regra para cria\u00e7\u00e3o dos c\u00f3digos \n\nobjetos (extens\u00e3o .o) correspondentes aos c\u00f3digos fontes main.c e graphics.c. A op\u00e7\u00e3o -c\n\nindica que o arquivo a ser gerado n\u00e3o \u00e9 execut\u00e1vel, e sim objeto, isto \u00e9, intermedi\u00e1rio. Existe \n\numa quarta cl\u00e1usula, all : teste, a qual especifica qual \u00e9 o objetivo padr\u00e3o, isto \u00e9, o objetivo \n\nrequisitado ao se executar o comando make sem argumentos. A especifica\u00e7\u00e3o da componente \n\nteste para este objetivo indica que o execut\u00e1vel corresponde ao objetivo padr\u00e3o. Objetivos \n\n(arquivos) intermedi\u00e1rios podem tamb\u00e9m ser gerados especificando seus nomes como\n\nargumentos para o comando make. Por exemplo, o arquivo graphics.o \u00e9 criado atrav\u00e9s do \n\ncomando make graphics.o. Isto \u00e9 normalmente desnecess\u00e1rio, j\u00e1 que todos os objetivos \n\nintermedi\u00e1rios s\u00e3o gerados automaticamente a partir do objetivo padr\u00e3o. \n\nA utiliza\u00e7\u00e3o de arquivos Makefile para a compila\u00e7\u00e3o de programas de hierarquia \n\ncomplexa simplifica o gerenciamento de m\u00faltiplos m\u00f3dulos de c\u00f3digo fonte. Al\u00e9m disto, a \n\nutiliza\u00e7\u00e3o de vari\u00e1veis para referenciar e agrupar as entidades relevantes do programa torna \n\nmais intuitivo o estudo da estrutura de projetos de desenvolvimento complexos. Por fim, a \n\nutiliza\u00e7\u00e3o de um interpretador de arquivos Makefile de c\u00f3digo aberto, refor\u00e7a o car\u00e1ter livre \n\ndo desenvolvimento de software. \n\n3.5.2 O ambiente de desenvolvimento anjuta\n\nO compilador gcc converte arquivos de texto contendo programas em C/C++ para \n\nc\u00f3digo de m\u00e1quina execut\u00e1vel pelo computador. Estes arquivos podem ser criados utilizando \n\nqualquer editor. Contudo, quando o projeto a ser desenvolvido incluir numerosos m\u00f3dulos de \n\ntrabalho (por exemplo, gr\u00e1ficos, de interface, de controle de erro, etc.), a cria\u00e7\u00e3o de arquivos\n\nde c\u00f3digo fonte atrav\u00e9s de um editor de texto torna-se um processo demorado. Al\u00e9m disto, a \n\nintegra\u00e7\u00e3o dos v\u00e1rios m\u00f3dulos do programa torna-se mais dif\u00edcil \u00e0 medida que aumenta o \n\nn\u00famero de m\u00f3dulos a serem escritos. \n\n31\n\n\n\nPara solucionar este problema, existem ambientes de desenvolvimento integrados, os \n\nquais permitem gerenciar mais de um m\u00f3dulo de c\u00f3digo fonte ao mesmo tempo. Um exemplo\n\nde tais aplicativos \u00e9 o sistema anjuta DevStudio (2005). Este \u00e9 uma ferramenta de c\u00f3digo \n\naberto que permite o desenvolvimento de projetos complexos em C/C++ em ambiente Linux. \n\nA vers\u00e3o do ambiente utilizada neste trabalho \u00e9 a 1.2.2. Dentre as funcionalidades do anjuta \u00e9 \n\nposs\u00edvel destacar as seguintes: \n\n\u2013 Editor de texto com interessantes fun\u00e7\u00f5es de busca de palavras, colora\u00e7\u00e3o de palavras\n\nreservadas para agilizar a leitura do c\u00f3digo, autopreenchimento das express\u00f5es de \n\nprograma\u00e7\u00e3o mais utilizadas, bem como de nomes de fun\u00e7\u00f5es e vari\u00e1veis declaradas pelo\n\nprogramador.\n\n\u2013 Integra\u00e7\u00e3o de v\u00e1rios arquivos de c\u00f3digo fonte em um \u00fanico projeto, visando facilitar o\n\ngerenciamento de aplica\u00e7\u00f5es complexas. Todas as facilidades do item anterior est\u00e3o\n\ndispon\u00edveis para cada arquivo de texto que o desenvolvedor pretenda gerenciar em um \n\ndado instante. Desta forma, n\u00e3o \u00e9 preciso abrir m\u00faltiplas inst\u00e2ncias de um editor de texto \n\npara controlar mais de um m\u00f3dulo ao mesmo tempo.\n\n\u2013 Assistente de compila\u00e7\u00e3o. Todos os comandos mais importantes de compila\u00e7\u00e3o podem ser \n\ninvocados a partir do anjuta. O compilador utilizado \u00e9 o gcc, mas o anjuta proporciona \n\numa interface para a especifica\u00e7\u00e3o de arquivos de compila\u00e7\u00e3o de projetos complexos\n\n(Makefiles), bem como de bibliotecas a serem inclu\u00eddas na aplica\u00e7\u00e3o. Existe tamb\u00e9m a \n\npossibilidade de fornecer ao compilador op\u00e7\u00f5es avulsas de trabalho. \n\n\u2013 Ferramentas de debugging. Tais ferramentas permitem rastrear o c\u00f3digo fonte do projeto \n\nem busca de erros de programa\u00e7\u00e3o, durante a execu\u00e7\u00e3o do mesmo. Para tanto, \u00e9 poss\u00edvel \n\nespecificar breakpoints ou pontos de interrup\u00e7\u00e3o da execu\u00e7\u00e3o do programa para observar o \n\nconte\u00fado de vari\u00e1veis \u201csuspeitas\u201d (fontes de erros). \n\n\u2013 Integra\u00e7\u00e3o com bibliotecas para cria\u00e7\u00e3o de interfaces de trabalhos (GUI\u00b4s, ou Graphical\n\nUser Interfaces). Esta funcionalidade permite criar interfaces gr\u00e1ficas para controle do\n\naplicativo em desenvolvimento, diretamente no ambiente de trabalho do anjuta. Para tanto, \n\nutiliza-se a biblioteca GTK (descrita na pr\u00f3xima se\u00e7\u00e3o), que fornece um conjunto de\n\ncomponentes gr\u00e1ficas (como bot\u00f5es, barras de rolagem, etc.), visando tornar mais amig\u00e1vel \n\na interface com o usu\u00e1rio do aplicativo. \n\nA Figura 3.9 mostra um exemplo de utiliza\u00e7\u00e3o do anjuta. O ambiente possui v\u00e1rias \n\njanelas integradas de trabalho. Em particular, a parte superior da janela do programa mostra\n\nalguns bot\u00f5es destinados ao gerenciamento de cada m\u00f3dulo de texto. Fun\u00e7\u00f5es usuais incluem\n\na leitura e grava\u00e7\u00e3o de um arquivo em disco, a busca por palavras dentro do texto, etc. A\n\n32\n\n\n\npor\u00e7\u00e3o direita da tela (regi\u00e3o 1) exibe o conte\u00fado do arquivo de c\u00f3digo fonte (m\u00f3dulo) sendo \n\neditado. A por\u00e7\u00e3o esquerda (regi\u00e3o 2) exibe o conte\u00fado da janela de projeto (Project), a qual\n\npermite navegar pelo conjunto de m\u00f3dulos do mesmo. Nesta, \u00e9 suficiente selecionar o m\u00f3dulo\n\na ser exibido / modificado, para que seu conte\u00fado seja visualizado na janela \u00e0 direita. \n\nPor fim, a por\u00e7\u00e3o inferior da tela do programa (regi\u00e3o 3) mostra todas as mensagens de \n\nalerta e eventuais erros ocorridos durante a compila\u00e7\u00e3o do projeto. Existem outras janelas que\n\npermitem, por exemplo, observar o conte\u00fado de vari\u00e1veis durante a execu\u00e7\u00e3o para detectar \n\neventuais erros de programa\u00e7\u00e3o.\n\n3.5.3 A biblioteca GTK \n\nA biblioteca GTK (GNU TOOLKIT, 2005) \u00e9 utilizada para desenvolver todos os \n\naplicativos gr\u00e1ficos no ambiente gr\u00e1fico do Linux e implementa janelas de intera\u00e7\u00e3o gr\u00e1fica \n\natrav\u00e9s de fun\u00e7\u00f5es de biblioteca em C. Foi desenvolvida visando uma abordagem modular e \n\noferece um conjunto de objetos gr\u00e1ficos (widgets) atrav\u00e9s dos quais o usu\u00e1rio pode interagir \n\ncom um aplicativo (manipular bot\u00f5es, inserir informa\u00e7\u00f5es, etc.). O objetivo da biblioteca \u00e9 \n\n3\n\n2\n1\n\nFigura 3.9 \u2013 Ambiente de desenvolvimento integrado anjuta. 1. Janela para escrita de m\u00f3dulos em C/C++. As\npalavras reservadas da linguagem recebem cores distintas de acordo com sua categoria. Isto facilita a leitura do \nc\u00f3digo. 2. Gerenciador dos m\u00f3dulos sendo desenvolvidos. A sele\u00e7\u00e3o de um item da lista permite editar seu\nconte\u00fado na regi\u00e3o 1. 3. janela que exibe os comandos executados pelo ambiente para realizar a compila\u00e7\u00e3o do \nprojeto, bem como eventuais mensagens de erro e alerta.\n\n33\n\n\n\nproporcionar a m\u00e1xima facilidade de uso dos componentes oferecidos. Neste trabalho,\n\nutilizou-se a vers\u00e3o 2.0 da biblioteca GTK. \n\nSegue um exemplo de programa em C com os comandos necess\u00e1rios para a cria\u00e7\u00e3o da janela\n\nda Figura 3.10: \n\n#include&lt;gtk/gtk.h> \n\n/* Funcao para imprimir mensagem */ \nvoid hello( GtkWidget *widget, gpointer   data ) \n{\n    g_print (\"Hello World\\n\"); \n}\n\n/* Funcao principal */ \nint main( int   argc, char *argv[] ) \n{\n    GtkWidget *window; /* Janela */ \n    GtkWidget *button; /* Botao definido na janela */ \n\n    gtk_init (&amp;argc, &amp;argv); \n\n    /* Cria janela */ \n    window = gtk_window_new (GTK_WINDOW_TOPLEVEL); \n    gtk_container_set_border_width (GTK_CONTAINER (window), 10); \n\n    /* Cria botao */ \n    button = gtk_button_new_with_label (\"Hello World\"); \n\n    /* Indica que a funcao \u201chello\u201d deve ser executada ao se pressionar\n     o botao */ \n    g_signal_connect (G_OBJECT (button), \"clicked\", \n                      G_CALLBACK (hello), NULL); \n\n    /* Insere botao na janela */ \n    gtk_container_add (GTK_CONTAINER (window), button); \n    gtk_widget_show (button); \n    gtk_widget_show (window); \n\n    /* Inicia ciclo de interacao com o usuario */ \n    gtk_main (); \n    return 0; \n}\n\nO exemplo acima cria uma janela gr\u00e1fica com um bot\u00e3o central de teste e com todos \n\nos bot\u00f5es de gerenciamento gr\u00e1fico tradicionais (fechar, minimizar, redimensionar). Estes \n\n\u00faltimos s\u00e3o, na verdade definidos no ambiente de gerenciamento de janelas subjacente ao \n\nGTK (no caso de todos os sistemas UNIX, o gerenciador X), mas isto \u00e9 controlado pela \n\nbiblioteca de forma transparente ao usu\u00e1rio. \n\nApesar da relativa simplicidade do c\u00f3digo apresentado, o desenvolvimento de \n\ninterfaces mais elaboradas requer a defini\u00e7\u00e3o de numerosos widgets e fun\u00e7\u00f5es, tornando a \n\ntarefa mais complexa. Para tanto, os desenvolvedores de aplicativos gr\u00e1ficos de c\u00f3digo aberto \n\nFigura 3.10 \u2013 Exemplo\nde aplica\u00e7\u00e3o GTK.\n\n34\n\n\n\npara a comunidade Linux implementaram uma ferramenta gr\u00e1fica para a cria\u00e7\u00e3o de interfaces\n\nbaseadas na biblioteca GTK.\n\n3.5.4 A ferramenta glade\n\nO editor de interfaces glade (GTK+ USER INTERFACE BUILDER, 1999) tem como\n\nobjetivo facilitar a cria\u00e7\u00e3o de interfaces gr\u00e1ficas de intera\u00e7\u00e3o com o usu\u00e1rio atrav\u00e9s da \n\nbiblioteca GTK. Esta ferramenta encontra-se na vers\u00e3o 2.10.0. As v\u00e1rias janelas que \n\nconstituem o ambiente s\u00e3o mostradas na Figura 3.11. \n\nO intuito da ferramenta \u00e9 permitir que o desenvolvedor crie interfaces arrastando e \n\nposicionando componentes nas mesmas a partir de uma lista de objetos dispon\u00edveis. Al\u00e9m\n\ndisto, deve ser poss\u00edvel modificar interativamente as propriedades de visualiza\u00e7\u00e3o e \n\ncomportamento (modalidade de intera\u00e7\u00e3o com o usu\u00e1rio) de cada componente.\n\nA primeira janela do ambiente, denominada glade (em cima \u00e0 esquerda na Figura\n\n3.11), cont\u00e9m as fun\u00e7\u00f5es principais para leitura e escrita de interfaces no disco. Cada arquivo\n\nde interface possui a extens\u00e3o *.glade. A janela Palette (em baixo \u00e0 esquerda) exibe todas as \n\ncomponentes (widgets) que o desenvolvedor pode inserir em sua janela. A mais importante \u00e9\n\na componente window, que representa o formul\u00e1rio ou frame dentro do qual podem ser \n\ninseridos os demais objetos. Dentre os principais widgets dispon\u00edveis, existem bot\u00f5es, barras \n\nde rolagem, seletores de tipo checkbox ou radio button, campos para  a introdu\u00e7\u00e3o de texto, \n\netc. A janela Properties (regi\u00e3o central superior) permite modificar o conjunto de \n\npropriedades associadas a cada objeto, como seu tamanho padr\u00e3o em pixels, estado (ativado / \n\ndesativado) e  posicionamento em rela\u00e7\u00e3o aos demais objetos.\n\nNa medida em que componentes s\u00e3o inseridas para cria\u00e7\u00e3o de uma interface, a \n\nferramenta glade cria uma hierarquia de objetos que pode ser visualizada na janela Widget\n\nTree. A Figura 3.11 exibe uma interface (janela window1, regi\u00e3o central inferior) criada ap\u00f3s \n\nalguns minutos de intera\u00e7\u00e3o com o ambiente. A hierarquia de objetos definidos \u00e9 visualizada \n\nna janela Widget Tree correspondente (\u00e0 direita). \n\nAp\u00f3s a confec\u00e7\u00e3o de uma interface gr\u00e1fica, o ambiente glade permite salvar em disco\n\no c\u00f3digo em C necess\u00e1rio para sua cria\u00e7\u00e3o. Este c\u00f3digo \u00e9 gravado em um arquivo\n\ndenominado interface.c.\n\nDurante o desenvolvimento de um projeto no ambiente anjuta, \u00e9 poss\u00edvel invocar, \n\natrav\u00e9s das teclas ATL + \u201cg\u201d, o editor de interfaces gr\u00e1ficas glade. Isto permite criar\n\naplicativos gr\u00e1ficos de forma totalmente integrada ao anjuta. Uma vez desenvolvida a \n\n35\n\n\n\ninterface, ser\u00e1 criado um arquivo interface.c o qual poder\u00e1 ser adicionado aos demais\n\narquivos do projeto. \n\n3.6 O programa GOCAD \n\nO programa GOCAD (2005) \u00e9 uma ferramenta comercial de visualiza\u00e7\u00e3o e \n\nmanipula\u00e7\u00e3o de dados geol\u00f3gicos desenvolvida pela ENSGN-Ecole Nationale Sup\u00e9rieure de \n\nGeologie de Nancy, Fran\u00e7a. \u00c9 constitu\u00eddo por um conjunto de m\u00f3dulos escritos em linguagem\n\nC++. Tais m\u00f3dulos s\u00e3o continuamente atualizados por diferentes grupos de pesquisa, cujas \n\natividades s\u00e3o financiadas por um cons\u00f3rcio internacional de empresas e universidades, que\n\nno Brasil inclui a UNESP e a Petrobr\u00e1s. O programa GOCAD, dispon\u00edvel para plataforma\n\nUNIX (incluindo Linux) e Windows, cont\u00e9m m\u00f3dulos que permitem visualizar diferentes\n\ntipos de dados, desde poligonais (pontos, linhas e superf\u00edcies) at\u00e9 volum\u00e9tricos. Considerada a\n\ncomplexidade dos algoritmos de computa\u00e7\u00e3o gr\u00e1fica implementados, a visualiza\u00e7\u00e3o de dados\n\nrequer a utiliza\u00e7\u00e3o de uma placa gr\u00e1fica aceleradora. O programa utiliza a biblioteca gr\u00e1fica\n\nOpen-GL.\n\n3.6.1 Intera\u00e7\u00e3o com o programa\n\nA intera\u00e7\u00e3o com o GOCAD ocorre principalmente atrav\u00e9s do mouse. Para isto, o \n\nFigura 3.11 \u2013 O ambiente glade para desenvolvimento de interfaces gr\u00e1ficas.\n\n36\n\n\n\nprograma apresenta-se sob a forma de janelas de comandos contendo bot\u00f5es e menus\n\nfacilmente selecion\u00e1veis. A janela principal do GOCAD cont\u00e9m as seguintes regi\u00f5es (Figura\n\n3.12):\n\nFigura 3.12 \u2013 Janela Principal do programa GOCAD. 1. Regi\u00e3o de controle principal. 2. Gerenciador de\natributos. 3. Gerenciador de objetos. 4. Menu de opera\u00e7\u00f5es espec\u00edficas. 5. Ferramenta de controle da\nc\u00e2mera. 6. Janela de visualiza\u00e7\u00e3o 3D. 7. Propriedades gerais de visualiza\u00e7\u00e3o\n\n5\n\n1\n\n3\n\n4\n\n6\n\n7\n\n2\n\n1. Regi\u00e3o de controle principal: Esta se\u00e7\u00e3o cont\u00e9m comandos para manipular objetos \n\nindependente de sua estrutura espec\u00edfica. S\u00e3o presentes bot\u00f5es para ler do disco, copiar e \n\ngravar objetos tridimensionais.\n\n2. Gerenciador de atributos: Conjunto de fun\u00e7\u00f5es para modificar as op\u00e7\u00f5es de visualiza\u00e7\u00e3o \n\nde um objeto como, por exemplo, a cor de uma superf\u00edcie, modalidades de sombreamento\n\ndos tri\u00e2ngulos que a constituem, etc. O conjunto de op\u00e7\u00f5es de visualiza\u00e7\u00e3o oferecidas\n\nvaria de acordo com a natureza dos objetos (curva, superf\u00edcie, etc.). \n\n3. Gerenciador de objetos. Ferramenta utilizada para ativar / desativar a visualiza\u00e7\u00e3o dos\n\nobjetos. Apresenta uma lista dos nomes das entidades dispon\u00edveis, bem como seu tipo.\n\n4. Menu de opera\u00e7\u00f5es espec\u00edficas: conjunto de comandos espec\u00edficos associados ao objeto \n\n37\n\n\n\natualmente selecionado. Por exemplo, \u00e9 poss\u00edvel, entre outras opera\u00e7\u00f5es, recortar uma\n\nsuperf\u00edcie usando outros objetos, fechar uma curva, remover partes de um objeto, etc. \n\nNeste menu est\u00e3o presentes comandos para criar novos objetos a partir de outros, como\n\numa superf\u00edcie a partir de um conjunto de pontos ou de curvas. O conjunto de comandos \n\ndispon\u00edveis para utiliza\u00e7\u00e3o \u00e9 flex\u00edvel: os submenus e seu conte\u00fado modificam-se de \n\nacordo com a natureza do objeto sobre o qual devem ser aplicados.\n\n5. Ferramenta de controle da c\u00e2mera. Conjunto de fun\u00e7\u00f5es utilizadas para realizar o ajuste \n\nfino das propriedades da c\u00e2mera, como ponto de vista e dire\u00e7\u00e3o de observa\u00e7\u00e3o.\n\n6. Janela de visualiza\u00e7\u00e3o 3D: Esta regi\u00e3o mostra a visualiza\u00e7\u00e3o 3D de todos os objetos \n\nselecionados no gerenciador da regi\u00e3o 3. A utiliza\u00e7\u00e3o dos tr\u00eas bot\u00f5es do mouse permite\n\nrotacionar, transladar e afastar / aproximar os objetos exibidos. O controle do ponto de \n\nobserva\u00e7\u00e3o pode tamb\u00e9m ser realizado atrav\u00e9s do teclado. Por exemplo, as setas permitem\n\ntransladar a imagem na dire\u00e7\u00e3o especificada pelo usu\u00e1rio e o teclado num\u00e9rico possui \n\nfuncionalidades para modificar o ponto de observa\u00e7\u00e3o simulando um v\u00f4o panor\u00e2mico em \n\nvolta dos objetos visualizados. \n\n7. Propriedades gerais de visualiza\u00e7\u00e3o. Atrav\u00e9s destas fun\u00e7\u00f5es \u00e9 poss\u00edvel modificar\n\nalgumas propriedades associadas \u00e0 janela de visualiza\u00e7\u00e3o da regi\u00e3o 6. Por exemplo, pode-\n\nse salvar / restaurar a posi\u00e7\u00e3o e dire\u00e7\u00e3o de observa\u00e7\u00e3o da c\u00e2mera, afastar o ponto de vista\n\nde forma a visualizar todos os objetos atualmente selecionados, e gravar em disco imagens\n\nda visualiza\u00e7\u00e3o atual. \u00c9 tamb\u00e9m poss\u00edvel selecionar a cor do fundo, realizar o sele\u00e7\u00e3o \n\nentre a proje\u00e7\u00e3o paralela e a perspectiva, e habilitar a vis\u00e3o estereosc\u00f3pica (para a qual \n\ndeve-se usar um \u00f3culos especial. Por fim, o usu\u00e1rio pode especificar visadas predefinidas \n\n(em planta, Norte, Sul, etc.) e definir um fator de exagero vertical adequado \u00e0s suas \n\nnecessidades.\n\n3.6.2 Objetos dispon\u00edveis no GOCAD \n\nO programa GOCAD permite a modelagem e visualiza\u00e7\u00e3o das seguintes entidades\n\ntridimensionais:\n\n- Point Set: um conjunto de pontos independentes. N\u00e3o h\u00e1 informa\u00e7\u00e3o de conectividade\n\n(topologia).\n\n- Curve: segmentos de linhas conectados ou n\u00e3o entre si. Uma curva pode ser constitu\u00edda de \n\nm\u00faltiplas linhas poligonais n\u00e3o conectadas.\n\n- Surface: superf\u00edcie. Representa uma malha vazada de tri\u00e2ngulos.\n\n38\n\n\n\n- Voxet: malha regular tridimensional constitu\u00edda por elementos volum\u00e9tricos denominados\n\nVoxels.\n\n- Sgrid: conjunto de dados estratigr\u00e1ficos. Um SGrid \u00e9 mais sofisticado que um Voxet\n\nporque o usu\u00e1rio pode adaptar seus limites a superf\u00edcies que modelam horizontes \n\nestratigr\u00e1ficos e particion\u00e1-lo ao longo de superf\u00edcies de falha. \n\n- Channel: este objeto \u00e9 definido por uma linha poligonal atravessada por se\u00e7\u00f5es \n\npoligonais. Utiliza-se esta entidade para representar estruturas longas e meandrantes, tais\n\ncomo canais. \n\n- Well: objeto que engloba informa\u00e7\u00f5es geom\u00e9tricas e geol\u00f3gicas associadas a po\u00e7os. \n\nEntidades de mesma natureza ou heterog\u00eaneas podem ser agrupadas em estruturas \n\ndenominadas groups. Isto permite gerenciar de forma simult\u00e2nea as propriedades de\n\nnumerosos objetos. Um caso t\u00edpico \u00e9 o dos objetos de tipo Well.\n\nAlgumas entidades s\u00e3o constru\u00eddas a partir de outras, mais simples. \u00c9 o caso das\n\ncurvas, que s\u00e3o criadas a partir de um conjunto de pontos. O mesmo vale para as superf\u00edcies \n\nnas quais aos pontos tridimensionais s\u00e3o associadas informa\u00e7\u00f5es de conectividade para gerar \n\nmalhas de tri\u00e2ngulos. \n\nTodo objeto no programa GOCAD recebe um nome (mostrado na regi\u00e3o 3 da Fig. \n\n3.12) com o qual ser\u00e1 identificado durante a execu\u00e7\u00e3o.  Isto \u00e9 necess\u00e1rio porque em toda \n\nopera\u00e7\u00e3o de visualiza\u00e7\u00e3o / manipula\u00e7\u00e3o deve ser sempre poss\u00edvel identificar corretamente as \n\nentidades sobre as quais o processamento ser\u00e1 efetuado. Tal identifica\u00e7\u00e3o poderia ser feita \n\nselecionando-se o objeto visualizado na janela 3D. Mas o objeto em quest\u00e3o poderia n\u00e3o estar \n\nvis\u00edvel no momento, surgindo assim a necessidade de um c\u00f3digo (nome) para qualquer \n\nrefer\u00eancia. Este nome acompanha o objeto mesmo fora da execu\u00e7\u00e3o, pois tal informa\u00e7\u00e3o \u00e9 \n\narmazenada no arquivo de dados a ele associado.\n\nO conjunto de informa\u00e7\u00f5es e atributos dispon\u00edveis para visualiza\u00e7\u00e3o e/ou manipula\u00e7\u00e3o\n\nvaria de acordo com o objeto selecionado e \u00e9 controlado pelo Gerenciador de Atributos. \n\nAlguns atributos s\u00e3o espec\u00edficos enquanto outros, mais gerais, s\u00e3o utilizados para todos os \n\nobjetos. Por exemplo, o atributo Info fornece informa\u00e7\u00f5es sobre o n\u00famero de pontos, \n\ntri\u00e2ngulos, etc. que constituem o objeto. Nenhuma fun\u00e7\u00e3o de manipula\u00e7\u00e3o \u00e9 oferecida. O \n\natributo Graphic controla propriedades como a cor do objeto, a especifica\u00e7\u00e3o do \u00edndice de \n\nopacidade, a visualiza\u00e7\u00e3o de sua topologia sob forma de malha vazada (para entidades do tipo\n\nSurface), etc. O atributo Property permite definir escalas de cores de acordo com a varia\u00e7\u00e3o \n\ndas coordenadas X, Y ou Z e sombrear o objeto em estudo adequadamente. Por fim, atrav\u00e9s \n\n39\n\n\n\ndo atributo Contours, \u00e9 poss\u00edvel construir e visualizar conjuntos de isolinhas a serem tra\u00e7adas \n\n\u201csobre\u201d as entidades visualizadas.\n\nTodos os objetos podem ser lidos do disco a partir de arquivos em formato ASCII. \n\nEntidades constitu\u00eddas por grande quantidade de informa\u00e7\u00f5es geom\u00e9tricas podem ser \n\narmazenadas em arquivos bin\u00e1rios para obter economia de armazenamento em disco (\u00e9 o caso \n\ndos Voxets).\n\nO programa GOCAD representa uma poderosa ferramenta de modelagem e\n\nvisualiza\u00e7\u00e3o 3D. Possui numerosas funcionalidades de manipula\u00e7\u00e3o de dados, sendo poss\u00edvel \n\nmodificar interativamente os objetos visualizados. Destaca-se o recorte, a decima\u00e7\u00e3o de \n\nsuperf\u00edcies (redu\u00e7\u00e3o do n\u00famero de tri\u00e2ngulos) e a modifica\u00e7\u00e3o de uma superf\u00edcie de acordo\n\ncom um conjunto de pontos de controle (v\u00ednculos ou constrains), atrav\u00e9s de algoritmos de \n\ntopologia matem\u00e1tica (MALLET, 1989).  Outro algoritmo de computa\u00e7\u00e3o gr\u00e1fica 3D\n\nutilizado envolve a visualiza\u00e7\u00e3o de dados volum\u00e9tricos sob forma de nuvem semitransparente\n\n(volume rendering, Figura 3.4), bem como a sobreposi\u00e7\u00e3o de imagens (mapas tem\u00e1ticos)\n\nsobre Modelos Digitais de Terrenos (MDTs). \n\nResultados preliminares publicados da aplica\u00e7\u00e3o do GOCAD em modelagem 3D de \n\ndados geol\u00f3gicos no Brasil t\u00eam abordado superf\u00edcies estratigr\u00e1ficas e canais de reservat\u00f3rios \n\nturbid\u00edticos (LANZARINI &amp; GUIMAR\u00c3ES, 2000), modelos f\u00edsicos/tect\u00f4nicos experimentais\n\nde estruturas halocin\u00e9ticas (GARCIA, 1999), a paleobatimetria da Bacia de Campos (EBERT \n\n&amp; LAVORANTE, 2000), a modelagem 3D das bacias do Rec\u00f4ncavo (MENDON\u00c7A et al.,\n\n2001; ANTUNES et al., 2004) e de Camamu-Almada (ANTUNES et al., 2004). \n\nNesta disserta\u00e7\u00e3o ser\u00e3o descritos e apresentados os resultados da utiliza\u00e7\u00e3o de\n\ndiferentes aplicativos computacionais para modelar dados geol\u00f3gicos. Inicialmente ser\u00e1\n\ndescrita uma ferramenta de modelagem geom\u00e9trica 3D para realizar a visualiza\u00e7\u00e3o de objetos\n\ndeformados de acordo com informa\u00e7\u00f5es tensoriais (se\u00e7\u00e3o 5). Em seguida, ser\u00e1 mostrado um\n\nexemplo de integra\u00e7\u00e3o de aplicativos de c\u00f3digo aberto para montar um ambiente de \n\nvisualiza\u00e7\u00e3o de dados geol\u00f3gicos, visando propor uma infra-estrutura de trabalho acess\u00edvel \n\npara ambientes de pesquisa (se\u00e7\u00e3o 6). Por fim, ser\u00e1 descrito o processo de modelagem e \n\nvisualiza\u00e7\u00e3o da paleobatimetria das bacias de Santos e Campos utilizando o programa\n\ncomercial GOCAD (se\u00e7\u00e3o 7). \n\nAs atividades descritas representam um exemplo de intera\u00e7\u00e3o entre aplicativos de \n\nmodelagem computacional heterog\u00eaneos junto ao Laborat\u00f3rio de GeoModelagem 3D e\n\ndemonstram a import\u00e2ncia de se manter frentes de trabalho distintas mas integradas entre si.\n\n40\n\n\n\n4 \u00c1rea de Estudo \n\nNos \u00faltimos anos, as bacias sedimentares ao longo das margens continentais do \n\nAtl\u00e2ntico Sul t\u00eam despertado um grande interesse quanto \u00e0s atividades de explora\u00e7\u00e3o de\n\npetr\u00f3leo (Figura 4.1). Isto foi ocasionado pela descoberta de campos gigantes em ambas as \n\nmargens continentais.\n\nAs bacias das margens sul-americana e africana t\u00eam sido tradicionalmente\n\nconsideradas independentes. Por\u00e9m, a expans\u00e3o e unifica\u00e7\u00e3o das bases de conhecimento\n\npermitiram considerar ambas as margens e suas bacias como parte de um \u00fanico sistema\n\nregional maior, levando em conta a evolu\u00e7\u00e3o estrutural, tect\u00f4nica e estratigr\u00e1fica das\n\nestruturas investigadas (MOHRIAK, 2003; Figura 4.2). Estas similaridades decorrem do fato \n\ndas bacias de ambas as margens terem sofrido evolu\u00e7\u00e3o tect\u00f4nica semelhante, passando pelas \n\nfases rifte, transicional e de margem passiva durante a abertura e desenvolvimento do \n\nAtl\u00e2ntico Sul. (Figuras 4.3 e 4.4).\n\n4.1 Contexto regional \n\nAs bacias de Santos e Campos (Figura 4.5), enfocadas neste trabalho, s\u00e3o parte \n\nintegrante das bacias sedimentares situadas na margem continental que comp\u00f5e o Sistema\n\nRifte do Leste Brasileiro. Trata-se de bacias de margem continental passiva, resultado da \n\nsepara\u00e7\u00e3o da Am\u00e9rica do Sul e da \u00c1frica durante o Cret\u00e1ceo. Suas colunas estratigr\u00e1ficas\n\npermitem obter informa\u00e7\u00f5es quanto \u00e0 evolu\u00e7\u00e3o tect\u00f4nica e paleoambiental das bacias. Desta \n\nforma, auxiliam na identifica\u00e7\u00e3o de pulsos tect\u00f4nicos e deposicionais ocorridos durante a \n\nabertura e evolu\u00e7\u00e3o do Atl\u00e2ntico Sul, proporcionando importantes indica\u00e7\u00f5es sobre a \n\npaleogeografia deste ambiente ao longo do Cret\u00e1ceo. \n\nDentre os autores que estudaram a forma\u00e7\u00e3o e expans\u00e3o do Atl\u00e2ntico Sul, N\u00fcrnberg &amp; \n\nM\u00fcller (1991) realizaram uma reconstru\u00e7\u00e3o completa de sua evolu\u00e7\u00e3o tect\u00f4nica do final do \n\nJur\u00e1ssico at\u00e9 o presente. O modelo assume placas n\u00e3o-r\u00edgidas para a Am\u00e9rica do Sul e a \n\n\u00c1frica, descrevendo o gradativo processo de rifteamento entre as mesmas. Para tanto foram\n\nutilizados dados de anomalias magn\u00e9ticas e altim\u00e9tricos obtidos por sat\u00e9lite (Figuras 4.6a e \n\n4.6b). Schettino &amp; Scotese (2000) desenvolveram um programa computacional que permite\n\ngerar reconstru\u00e7\u00f5es paleogeogr\u00e1ficas usando uma interface dispon\u00edvel na rede Internet \n\n(PLATE TECTONICS ONLINE RECONSTRUCTION TOOL, 2001), a partir de idades \n\nespecificadas pelo usu\u00e1rio. As Figuras 4.7a e 4.7b mostram uma seq\u00fc\u00eancia de mapas gerados \n\npara idades contidas no Cret\u00e1ceo. Sykes et al. (1998) realizaram uma modelagem \n\n42\n\n\n\ncomputacional da paleobatimetria do hemisf\u00e9rio sul do mesocret\u00e1ceo (110 Ma) at\u00e9 o presente. \n\nA modelagem foi obtida utilizando um banco de dados contendo informa\u00e7\u00f5es de batimetria\n\natual, idades da crosta oce\u00e2nica e espessura do pacote sedimentar. Estas informa\u00e7\u00f5es foram \n\nlevantadas realizando uma compila\u00e7\u00e3o de dados geof\u00edsicos. Os mapas gerados modelam a\n\npaleobatimetria na aus\u00eancia de sedimentos e foram criados a intervalos regulares de 5 Ma. Os \n\nautores verificaram a fidelidade do modelo utilizando informa\u00e7\u00f5es de batimetria atual, idades \n\nda crosta oce\u00e2nica e espessura de camadas sedimentares obtidas de 39 po\u00e7os do DSDP e ODP \n\n(Deep Sea Drilling Project e Ocean Drilling Project; refer\u00eancias citadas no trabalho). A \n\nFigura 4.8 mostra alguns exemplos de idades modeladas.\n\n4.2 Geologia das bacias de Campos e Santos \n\nBacia de Campos \n\nA Bacia de Campos situa-se na costa norte do Estado do Rio de Janeiro e sul do\n\nEsp\u00edrito Santo, entre os paralelos 21\u00b0 e 23\u00b0 sul (Figura 4.9). Seu limite norte com a Bacia do\n\nEsp\u00edrito Santo ocorre no Alto de Vit\u00f3ria, e o limite sul com a Bacia de Santos \u00e9 no Alto de \n\nCabo Frio.\n\nA seq\u00fc\u00eancia basal (Figuras 4.10 e 4.12) \u00e9 representada por derrames bas\u00e1lticos \n\nintercalados com conglomerados cinza-esverdeados eocret\u00e1ceos, denominados Forma\u00e7\u00e3o\n\nCabi\u00fanas (MIZUSAKI et al., 1988 apud  RANGEL et al., 1994). \n\nA Forma\u00e7\u00e3o Lagoa Feia, dividida em quatro grandes ciclos de sedimenta\u00e7\u00e3o, \u00e9 \n\nrepresentada por sedimentos de plan\u00edcie aluvial ou margem de lago, constitu\u00edda por \n\nconglomerados, arenitos l\u00edticos, siltitos, folhelhos e calc\u00e1rios, recobertos por evaporitos \n\n(anidrita e halita), seguidos de f\u00e1cies transgressivas no topo, representadas por folhelhos \n\nlacustres (CASTRO &amp; AZAMBUJA, 1980 apud RANGEL et al., 1994), depositados durante \n\no Barremiano-Aptiano.\n\nA Forma\u00e7\u00e3o Maca\u00e9, depositada entre o Albiano e o eoturoniano, \u00e9 constitu\u00edda de \n\ncalcirruditos, calcarenitos e calcilutitos. Essa forma\u00e7\u00e3o representa o in\u00edcio da passagem de um \n\nambiente marinho restrito para marinho franco, iniciando-se como plataformal raso, chegando \n\na batial superior, quando num contexto de mar epicontinental (RANGEL et al., 1994). \n\nO Grupo Campos (SCHALLER, 1973 apud RANGEL et al., 1994) apresenta as\n\nseguintes forma\u00e7\u00f5es: Ubatuba, constitu\u00edda por folhelhos cinza-escuros e esverdeados,\n\nargilitos e margas cinza-claras, calcilutitos cinzas e cremes e diamictitos, depositada em \n\nambiente francamente marinho batial e abissal. Forma\u00e7\u00e3o Carapebus, constitu\u00edda de camadas\n\n43\n\n\n\nde arenito fino a conglomer\u00e1tico, resultantes da atua\u00e7\u00e3o de correntes de turbidez numa\n\nsitua\u00e7\u00e3o paleogeogr\u00e1fica de talude-bacia. Forma\u00e7\u00e3o Embor\u00e9, constitu\u00edda por arenitos e \n\ncarbonatos impuros, depositados em ambiente fl\u00favio-delta\u00edco e plataformal.\n\nEsta bacia, assim como a Bacia de Santos, pertence ao Sistema Rifte Leste Brasileiro,\n\nque se desenvolveu durante a ruptura do Gondwana, gerando duas margens distintas: a \n\nmargem norte equatorial desenvolvida em resposta a movimenta\u00e7\u00e3o \u201cstrike-slip\u201d entre \n\nAm\u00e9rica do Sul e \u00c1frica, proporcionando a forma\u00e7\u00e3o de complexas bacias dominadas por \n\ncisalhamento, e a margem leste, iniciando como rift e evoluindo para uma bacia tipo margem\n\npassiva em conseq\u00fc\u00eancia da extens\u00e3o crustal ortogonal (CHANG et al., 1992). \n\nBacia de Santos \n\nA Bacia de Santos situa-se entre os paralelos 23\u00b0 e 28\u00b0 sul e ocupa cerca de 275.000 \n\nkm2 at\u00e9 a cota batim\u00e9trica de 2.000m (Figura 4.9). Seu limite norte com a Bacia de Campos se \n\nd\u00e1 no Alto de Cabo Frio, e o limite sul com a Bacia de Pelotas se d\u00e1 na Plataforma de\n\nFlorian\u00f3polis.\n\nA Forma\u00e7\u00e3o Cambori\u00fa (OJEDA &amp; ARANHA, 1980) abrange os derrames bas\u00e1lticos \n\neocret\u00e1ceos sotopostos ao preenchimento sedimentar de praticamente toda a Bacia de Santos \n\n(Figuras 4.11 e 4.13). No Barremiano e eoaptiano ocorreu uma deposi\u00e7\u00e3o em ambiente\n\ncontinental, provavelmente sob a forma de leques aluviais progradantes sobre lagos rasos, \n\nrepresentada pela Forma\u00e7\u00e3o Guaratiba (OJEDA &amp; CESERO, 1973). Esta unidade se \n\ncaracteriza por conglomerados de matriz argilo-arenosa, arenitos m\u00e9dios a conglomer\u00e1ticos\n\nimaturos e coquinas brancas. A Forma\u00e7\u00e3o Ariri representa ambiente de deposi\u00e7\u00e3o marinha\n\nrestrito, com a forma\u00e7\u00e3o de plan\u00edcies de sabkha, e se caracteriza por espessos pacotes de \n\nhalitas, associados a anidritas, calcilutitos, folhelhos e margas.\n\nOs dep\u00f3sitos de leques aluviais albianos s\u00e3o representados pela Forma\u00e7\u00e3o\n\nFlorian\u00f3polis, constitu\u00edda por arenitos finos a grossos, folhelhos e siltitos (OJEDA &amp; \n\nCESERO, 1973 apud PEREIRA &amp; FEIJ\u00d3, 1994). A Forma\u00e7\u00e3o Guaruj\u00e1 \u00e9 constitu\u00edda de \n\ncalcarenitos ool\u00edticos gradando lateralmente para calcilutitos, e apresenta um paleoambiente\n\nde plan\u00edcie de mar\u00e9, laguna rasa, plataforma externa e mar aberto, de idade eoalbiana \n\n(PEREIRA et al., 1986). O ambiente plataformal raso a profundo e raramente batial superior, \n\n\u00e9 representado pela Forma\u00e7\u00e3o Itanha\u00e9m, e se caracteriza por folhelhos, siltitos, margas,\n\ncalcilutitos e arenitos (OJEDA &amp; ARANHA, 1980 apud PEREIRA &amp; FEIJ\u00d3, 1994), de idade \n\nneo-albiana.\n\n44\n\n\n\nO ambiente deposicional continental-transicional, na forma de leques aluviais, rios \n\nentrela\u00e7ados e deltas (PEREIRA et al., 1986) \u00e9 representado pela Forma\u00e7\u00e3o Santos, de idade \n\ncenomaniana-maastrichtiana, e \u00e9 composto por conglomerados e arenitos l\u00edticos, intercalados \n\ncom folhelhos e argilas. A Forma\u00e7\u00e3o Jur\u00e9ia \u00e9 constitu\u00edda por folhelhos, siltitos, arenitos finos \n\ne muito finos e calcilutitos, e reflete um ambiente deposicional de plataforma marinha, com \n\nidades santoniana a maastrichtiana. A Forma\u00e7\u00e3o Itaja\u00ed-A\u00e7u se caracteriza por uma espessa \n\nse\u00e7\u00e3o de cl\u00e1sticos finos (folhelhos), em ambiente deposicional de talude, com idade\n\ncenomaniana a maastrichtiana (OJEDA &amp; CESERO, 1973).\n\nO ambiente de plataforma carbon\u00e1tica, com influ\u00eancia de leques aluviais nas \u00e1reas \n\nmais proximais (PEREIRA et al., 1986), \u00e9 representado pela Forma\u00e7\u00e3o Iguape, de idade \n\nterci\u00e1ria, constitu\u00edda por calcarenitos e calcirruditos biocl\u00e1sticos. A Forma\u00e7\u00e3o Marambaia\n\nrepresenta uma deposi\u00e7\u00e3o de taludes durante o Terci\u00e1rio e \u00e9 composta por uma espessa se\u00e7\u00e3o \n\nde folhelhos e margas, com intercala\u00e7\u00e3o de arenitos finos turbid\u00edticos. No Quatern\u00e1rio, \n\nrepresentado pela Forma\u00e7\u00e3o Sepetiba, ocorreu deposi\u00e7\u00e3o em leques costeiros, constitu\u00eddos de \n\nareias grossas a finas, quartzosas, feldsp\u00e1ticas, glaucon\u00edticas, e coquinas de moluscos,\n\nbriozo\u00e1rios e foramin\u00edferos.\n\nA Figura 4.14 mostra a distribui\u00e7\u00e3o dos litotipos predominantes durante a evolu\u00e7\u00e3o\n\ngeol\u00f3gica da margem continental sudeste brasileira no Cret\u00e1ceo. Os mapas foram extra\u00eddos do\n\ntrabalho de Fran\u00e7a et al. (1995), que realiza uma integra\u00e7\u00e3o de dados geol\u00f3gicos in\u00e9ditos \n\npertencentes a diferentes companhias petrol\u00edferas da Am\u00e9rica do Sul. Os mapas refletem o \n\npaleoambiente e a paleogeografia da \u00e9poca. A regi\u00e3o mostrada cont\u00e9m as bacias de Campos e \n\nSantos.\n\nJ\u00e1 Modica e Brush (2004) elaboraram um modelo litoestratigr\u00e1fico e paleogeogr\u00e1fico \n\npara a Bacia de Santos, do mesocret\u00e1ceo ao Terci\u00e1rio, visando melhorar o entendimento da\n\nhist\u00f3ria de seu preenchimento sedimentar. Para tanto foi utilizado extenso conjunto de dados \n\ns\u00edsmicos 2D. A interpreta\u00e7\u00e3o resultante foi verificada atrav\u00e9s de dados bioestratigr\u00e1ficos. O \n\ntrabalho divide a hist\u00f3ria deposicional da bacia em 11 seq\u00fc\u00eancias. As Figuras 4.15 a 4.17 \n\nilustram a evolu\u00e7\u00e3o da Bacia de Santos durante o meso-Neocret\u00e1ceo.\n\nParte desta disserta\u00e7\u00e3o ilustra a modelagem 3D da paleobatimetria das bacias de\n\nCampos e Santos a partir de mapas de paleoambientes 2D obtidos da literatura (AZEVEDO et \n\nal., 1987; VIVIERS, 1986). Estas informa\u00e7\u00f5es, de natureza micropaleontol\u00f3gica, foram \n\nintegradas aos demais mapas descritos nos par\u00e1grafos anteriores. Foram tamb\u00e9m utilizados\n\ndados de outros trabalhos, visando construir um ambiente unificado de modelagem e\n\n45\n\n\n\nvisualiza\u00e7\u00e3o 3D da evolu\u00e7\u00e3o das bacias de Campos e Santos durante o meso-Neocret\u00e1ceo. Os \n\nresultados ser\u00e3o mostrados na se\u00e7\u00e3o 7. \n\nFigura 4.1 \u2013 Bacias sedimentares do Atl\u00e2ntico Sul. Fonte: Mohriak (2003).\n\nFigura 4.2 \u2013 Se\u00e7\u00e3o geol\u00f3gica comparando a margem continental leste brasileira e a oeste africana. MSPR: \nMegaseq\u00fc\u00eancia Pr\u00e9-Rifte; MSSR: Megaseq\u00fc\u00eancia Sin-Rifte; MST: Megaseq\u00fc\u00eancia Transicional; MSM:\nMegaseq\u00fc\u00eancia Marinha. Fonte: Mohriak (2003).\n\n46\n\n\n\nENTRE APROXIMADAMENTE 110 E 100 MILH\u00d5ES DE ANOS ATR\u00c1S \n\nFigura 4.3 \u2013 Reconstitui\u00e7\u00e3o paleogeogr\u00e1fica para o Albiano. Em cor cinza escuro, as montanhas em torno do\nAtl\u00e2ntico Sul Central; em cor cinza, as \u00e1reas continentais; em cor azul claro, os mares rasos; em azul escuro, os\noceanos ou mares mais profundos. Fonte: Azevedo (2001). \n\nFig. 4.4 - Reconstru\u00e7\u00e3o paleogeogr\u00e1fica das placas sul-americana e africana para o Barremiano (125-119 Ma)\ne Santoniano (87,5-83 Ma). Fonte: Gjelberg (2003).\n\n47\n\n\n\nFigura 4.5 \u2013 Localiza\u00e7\u00e3o das bacias de Santos e Campos no contexto das bacias sedimentares faneroz\u00f3icas do\nBrasil. Fonte: BDEP/ANP (2004).\n\n48\n\n\n\nFigura 4.6a \u2013 Reconstru\u00e7\u00e3o paleogeogr\u00e1fica da abertura e expans\u00e3o do Atl\u00e2ntico Sul (150-118,7 Ma). O\npol\u00edgono vermelho delimita a \u00e1rea deste estudo e a regi\u00e3o em laranja denota a localiza\u00e7\u00e3o da paleobatimetria\ndas bacias de Santos e Campos. As Figuras menores mostram as regi\u00f5es de sobreposi\u00e7\u00e3o (overlap, hachura\npontilhada) e espa\u00e7amento (gap, hachura em linhas) entre margens continentais ou bordas de placas. Legenda:\nAFR = \u00c1frica meridional, NWA = \u00c1frica norte-ocidental, SAM = Am\u00e9rica do Sul, PAR = Placa do Paran\u00e1,\nSAL = Placa do Salado, COL = Placa do Colorado. Fonte: N\u00fcrnberg &amp; M\u00fcller (1991). \n\n49\n\n\n\nFigura 4.6b \u2013 Reconstru\u00e7\u00e3o paleogeogr\u00e1fica da expans\u00e3o do Atl\u00e2ntico Sul entre 100 e 38,1 Ma. A linha\nexterna representa o limite da crosta continental e a linha interna o atual limite de costa como refer\u00eancia.\nFonte: N\u00fcrnberg &amp; M\u00fcller (1991).\n\n50\n\n\n\n88 Ma91 Ma\n\n97 Ma113 Ma\n\n120 Ma144 Ma\n\nFigura 4.7a \u2013 Reconstru\u00e7\u00e3o paleogeogr\u00e1fica da abertura e expans\u00e3o do Atl\u00e2ntico Sul durante o eo-\nmesocret\u00e1ceo. O pol\u00edgono vermelho delimita a \u00e1rea de estudo desta disserta\u00e7\u00e3o. Legenda na pr\u00f3xima Figura. \nFonte: Schettino &amp; Scotese (2000).\n\n51\n\n\n\n65 Ma80 Ma\n\n83 Ma87 Ma\n\nAtual\n\nFigura 4.7b \u2013 Reconstru\u00e7\u00e3o paleogeogr\u00e1fica da expans\u00e3o do Atl\u00e2ntico Sul durante o Neocret\u00e1ceo. A \u00faltima\nfigura representa a situa\u00e7\u00e3o atual. Fonte: Schettino &amp; Scotese (2000). \n\n52\n\n\n\n100 Ma\n\n85 Ma \n\n65 Ma \n\nFigura 4.8 \u2013 Detalhe de reconstru\u00e7\u00e3o paleobatim\u00e9trica do hemisf\u00e9rio sul durante o meso-Neocret\u00e1ceo (100, 85\ne 65 Ma). A modelagem computacional n\u00e3o leva em conta a deposi\u00e7\u00e3o de sedimentos. \u00c9 tamb\u00e9m exibida a\nlocaliza\u00e7\u00e3o de po\u00e7os dos projetos DSDP/ODP. Fonte: Sykes et al. (1998). \n\n53\n\n\n\nF\nig\n\nur\na \n\n4.\n9 \n\n\u2013 \nL\n\noc\nal\n\niz\na\u00e7\n\n\u00e3o\n d\n\na \n\u00e1r\n\nea\n d\n\ne \nes\n\ntu\ndo\n\n (\npo\n\nl\u00ed\ngo\n\nno\n v\n\ner\nm\n\nel\nho\n\n).\n S\n\n\u00e3o\n t\n\nam\nb\u00e9\n\nm\n e\n\nxi\nbi\n\nda\ns \n\nas\n e\n\nst\nru\n\ntu\nra\n\ns\noc\n\ne\u00e2\nni\n\nca\ns,\n\n c\non\n\nti\nne\n\nnt\nai\n\ns,\n l\n\nit\not\n\nip\nos\n\n c\nen\n\noz\n\u00f3i\n\nco\ns,\n\n r\ned\n\ne \nde\n\n d\nre\n\nna\nge\n\nns\n,\n\nin\nfo\n\nrm\na\u00e7\n\n\u00f5e\ns \n\nba\nti\n\nm\n\u00e9t\n\nri\nca\n\ns,\n b\n\nem\n c\n\no\nm\n\no \nli\n\nm\nit\n\nes\n d\n\nas\n b\n\nac\nia\n\ns \nde\n\n E\nsp\n\n\u00edr\nit\n\no \nS\n\nan\nto\n\n, C\nam\n\npo\ns,\n\n S\nan\n\nto\ns \n\ne \nP\n\nel\not\n\nas\n.\n\n\n\n\n\n\u00b4\n\u00b4\n\n\u00b4\n\nF\nig\n\nur\na \n\n4.\n10\n\n \u2013\n S\n\ne\u00e7\n\u00e3o\n\n g\neo\n\nl\u00f3\ngi\n\nca\nes\n\nqu\nem\n\n\u00e1t\nic\n\na\nda\n\nB\nac\n\nia\nde\n\n C\nam\n\npo\ns.\n\n F\non\n\nte\n: \n\nM\noh\n\nri\nak\n\n e\nt \n\nal\n.(\n\n19\n90\n\n).\n\nF\nig\n\nur\na \n\n4.\n11\n\n \u2013\n S\n\ne\u00e7\n\u00e3o\n\n g\neo\n\nl\u00f3\ngi\n\nca\nes\n\nqu\nem\n\n\u00e1t\nic\n\na\nda\n\nB\nac\n\nia\nde\n\n S\nan\n\nto\ns.\n\n F\non\n\nte\n: \n\nC\nai\n\nne\nll\n\ni \n&amp;\n\n M\noh\n\nri\nak\n\n(1\n99\n\n8)\n.\n\n\n\n\n\nFigura 4.12 - Carta estratigr\u00e1fica da bacia de Campos. Fonte: Rangel et al. (1994).\n\n\n\nFigura 4.13 - Carta estratigr\u00e1fica da bacia de Santos. Fonte: Pereira &amp; Feij\u00f3 (1994). \n\n59\n\n\n\nCret\u00e1ceo\n(Cenomaniano- Maastrichtiano)\n\nCret\u00e1ceo\n(Barremiano-Albiano)\n\nCret\u00e1ceo\n(Neocomiano)\n\nFig. 4.14 \u2013 Mapas geol\u00f3gicos ilustrando a evolu\u00e7\u00e3o cret\u00e1cica da margem continental sudeste brasileira.\nFonte: Fran\u00e7a et al. (1995). \n\n60\n\n\n\nFig. 4.15 \u2013 Bacia de Santos: litologia e paleobatimetria durante o Albiano (113-97 Ma). Os c\u00edrculos internos\nrepresentam a litologia, e os externos fornecem informa\u00e7\u00f5es paleobatim\u00e9tricas.  \u00c9 tamb\u00e9m exibido o limite\nda plataforma carbon\u00e1tica albiana (linha azul). Fonte: Modica &amp; Brush (2004).\n\nF\u00e1cies s\u00edsmicas\nconfinadas\n(\u201cponded\u201d)\n\n61\n\nFig. 4.16 \u2013 Bacia de Santos: litologia e paleobatimetria durante o Coniaciano-mesocampaniano (88,5-76 Ma). \n\u00c9 tamb\u00e9m mostrado o limite da plataforma mesocampaniana (linha amarela), indicando prograda\u00e7\u00e3o em\nrela\u00e7\u00e3o ao limite albiano (linha azul tracejada), bem como as principais zonas de transfer\u00eancia. Fonte:\nModica &amp; Brush (2004).\n\n\n\nF\u00e1cies s\u00edsmicas\nconfinadas\n(\u201cponded\u201d)\n\nFig. 4.17 \u2013 Bacia de Santos: litologia e paleobatimetria durante o neocampaniano-Maastrichtiano (76-65 Ma).\nNeste per\u00edodo iniciou-se uma concentra\u00e7\u00e3o de sedimentos silicicl\u00e1sticos nas regi\u00f5es Norte e central da bacia.\nEste processo est\u00e1 relacionado \u00e0 organiza\u00e7\u00e3o do sistema do rio Para\u00edba do Sul (paleodrenagens da regi\u00e3o \nsuperior). Os tons de marrom denotam as diferentes espessuras da paleoplataforma: marrom escuro = fino,\nmarrom-laranja = espesso. Fonte: Modica &amp; Brush (2004).\n\n62\n\n\n\n5 Tensor3D: um programa para simula\u00e7\u00e3o de tensores em tr\u00eas dimens\u00f5es\n\nA deforma\u00e7\u00e3o natural de rochas na crosta terrestre, n\u00e3o apenas em n\u00edveis crustais\n\ninferiores, como os expostos nos cintur\u00f5es orog\u00eanicos, mas tamb\u00e9m em bacias sedimentares\n\ninvertidas, \u00e9 em geral de car\u00e1ter tridimensional. Para facilitar o entendimento e a descri\u00e7\u00e3o da \n\ndeforma\u00e7\u00e3o em atividades did\u00e1ticas ou de pesquisa, recorre-se usualmente a defini\u00e7\u00f5es\n\nbidimensionais, como cisalhamento simples e cisalhamento puro. Estas, no entanto, s\u00e3o uma\n\nsimplifica\u00e7\u00e3o da realidade e freq\u00fcentemente n\u00e3o explicam a complexidade geom\u00e9trica e \n\ncinem\u00e1tica das estruturas d\u00facteis registradas em rochas deformadas.\n\nO estudo da deforma\u00e7\u00e3o tridimensional de rochas \u00e9 tamb\u00e9m importante para a\n\nind\u00fastria do petr\u00f3leo, para abordar problemas como a an\u00e1lise da deforma\u00e7\u00e3o das bacias \n\nsedimentares, a caracteriza\u00e7\u00e3o de reservat\u00f3rios e de trapas estruturais, etc.\n\nPara facilitar a an\u00e1lise conceitual e a representa\u00e7\u00e3o dos componentes de cisalhamento\n\nsimples e puro presentes simultaneamente em cada um dos tr\u00eas planos cinem\u00e1ticos, foi \n\ndesenvolvido um programa para simular deforma\u00e7\u00f5es em tr\u00eas dimens\u00f5es. Tal ferramenta visa \n\nauxiliar tanto alunos de gradua\u00e7\u00e3o e p\u00f3s-gradua\u00e7\u00e3o, como ge\u00f3logos mais experientes,\n\nexplorando os benef\u00edcios da computa\u00e7\u00e3o gr\u00e1fica 3D. \n\nEste aplicativo foi escrito utilizando a linguagem Tcl/Tk em ambiente VTK (descrito \n\nna se\u00e7\u00e3o 3.4). Possibilita assim a utiliza\u00e7\u00e3o das classes de modelagem geom\u00e9trica e \n\nvisualiza\u00e7\u00e3o cient\u00edfica presentes nesta biblioteca. Al\u00e9m disto, o uso de ferramentas de \n\ntrabalho de c\u00f3digo aberto torna esta aplica\u00e7\u00e3o ideal para ambientes de pesquisa e fins\n\ndid\u00e1ticos. A discuss\u00e3o que segue abordar\u00e1 os seguintes t\u00f3picos: \n\n- Revis\u00e3o conceitual da teoria matem\u00e1tica sobre os tensores de tens\u00e3o e de deforma\u00e7\u00e3o;\n\n- Descri\u00e7\u00e3o da ferramenta computacional, ou programa Tensor3D.\n\n5.1 Teoria dos tensores \n\nUm tensor \u00e9 uma entidade matem\u00e1tica que pode ser usada para descrever o estado ou \n\nas propriedades f\u00edsicas de um material (HOBBS et al., 1976; TWISS &amp; MOORES, 1992). \n\nEsta entidade \u00e9 representada atrav\u00e9s de um conjunto de componentes escalares associadas a \n\num sistema de coordenadas espec\u00edfico. \n\nA ordem de um tensor indica quantas componentes escalares s\u00e3o necess\u00e1rias para \n\ndescrev\u00ea-lo totalmente. O n\u00famero de componentes c \u00e9 igual \u00e0 dimens\u00e3o d do espa\u00e7o f\u00edsico \n\nelevada ao expoente dado pela ordem r do tensor. Formalmente,\n\n63\n\n\n\n(5.1)rdc\n\nPor exemplo, no espa\u00e7o tridimensional (d = 3) um escalar \u00e9 um tensor de ordem zero \n\n(r = 0) e portanto possui 30 = 1 componente. Exemplos t\u00edpicos incluem a temperatura, a massa\n\ne o volume. Escalares s\u00e3o definidos simplesmente por sua magnitude e n\u00e3o s\u00e3o afetados por \n\nmudan\u00e7as no sistema de coordenadas. \n\nUm vetor \u00e9 um tensor de ordem 1 (r = 1) com 31 = 3 componentes no espa\u00e7o \n\ntridimensional (d = 3). For\u00e7a, velocidade e acelera\u00e7\u00e3o s\u00e3o grandezas vetoriais. Vetores s\u00e3o\n\nutilizados para descrever quantidades f\u00edsicas caracterizadas por magnitude e apenas uma\n\ninforma\u00e7\u00e3o de dire\u00e7\u00e3o. As componentes do vetor s\u00e3o representadas utilizando \u00edndices, como\n\nno exemplo Fk, no qual uma for\u00e7a \u00e9 decomposta nas componentes F1, F2 e F3. Cada \n\ncomponente \u00e9 paralela a um dos eixos coordenados, sendo que os \u00edndices 1, 2 e 3 \n\ncorrespondem aos eixos X, Y e Z, respectivamente. Em duas dimens\u00f5es o \u00edndice assume\n\napenas os valores 1 e 2. Portanto, para descrever uma grandeza vetorial \u00e9 necess\u00e1rio prover d\n\ncomponentes, sendo d a dimens\u00e3o (2 ou 3) do espa\u00e7o considerado. O vetor Fk do exemplo\n\nanterior ser\u00e1 indicado atrav\u00e9s da nota\u00e7\u00e3o\n\n(5.2)Fk = (F1, F2 , F3)\n\nUm tensor de ordem 2 (r = 2) no espa\u00e7o tridimensional (d = 3) possui 32 = 9\n\ncomponentes. Em geologia estrutural, os exemplos mais importantes s\u00e3o a tens\u00e3o e a \n\ndeforma\u00e7\u00e3o. Tensores de ordem 2 s\u00e3o usados para descrever quantidades que possuem\n\nmagnitude e que s\u00e3o caracterizadas por duas informa\u00e7\u00f5es de dire\u00e7\u00e3o. Por exemplo, para o \n\ntensor de tens\u00e3o, as duas informa\u00e7\u00f5es associadas a cada componente s\u00e3o a orienta\u00e7\u00e3o da \n\nnormal ao plano sobre o qual tal componente atua e a dire\u00e7\u00e3o da componente de tens\u00e3o que \n\natua ao longo do plano. \n\nTensores de segunda ordem, como a componente de tens\u00e3o kl, s\u00e3o representados\n\natrav\u00e9s de um s\u00edmbolo com dois \u00edndices. Para o espa\u00e7o tridimensional, tanto k como l\n\nassumem os valores 1, 2, ou 3. Desta forma, para cada valor que k pode assumir, l varia entre \n\n1 e 3. Isto proporciona 3 * 3 = 9 componentes distintas. Em duas dimens\u00f5es, k e l podem \n\nassumir apenas os valores 1 e 2. Como ser\u00e1 descrito a seguir, um tensor de ordem maior do \n\nque um \u00e9 representado utilizando uma nota\u00e7\u00e3o matricial.\n\n5.2 Nota\u00e7\u00e3o para o tensor de tens\u00e3o \n\nPara representar um tensor de tens\u00e3o no espa\u00e7o 3D \u00e9 necess\u00e1rio identificar cada uma \n\ndas nove componentes que constituem esta grandeza f\u00edsica. Para tanto, os eixos coordenados \n\n64\n\n\n\nconsiderados s\u00e3o X1, X2 e X3, paralelos, respectivamente, aos eixos X, Y e Z. Para cada\n\ncomponente de tens\u00e3o kl, o primeiro \u00edndice k \u00e9 o n\u00famero do eixo coordenado perpendicular \n\nao plano sobre o qual atua a componente em quest\u00e3o. Por outro lado, o segundo \u00edndice l\n\ndenota o eixo coordenado paralelo \u00e0 componente de tens\u00e3o. Por exemplo, a componente 13 \u00e9 \n\numa tens\u00e3o cisalhante que age sobre o plano normal ao eixo X1 (plano X2X3, primeiro\n\n\u00edndice) e \u00e9 paralela ao eixo X3 (segundo \u00edndice). A componente 11 representa uma tens\u00e3o \n\nque atua sobre o plano normal ao eixo X1 e \u00e9 paralela ao mesmo eixo. Trata-se de uma tens\u00e3o \n\nnormal, sendo que sua componente cisalhante \u00e9 nula. Com efeito, as componentes de tens\u00e3o \n\nnormal possuem dois \u00edndices iguais, ao passo que na tens\u00e3o cisalhante os \u00edndices s\u00e3o distintos.\n\nAs componentes de um tensor de tens\u00e3o s\u00e3o escritas em uma ordem espec\u00edfica para\n\nformar uma matriz:\n\n333231\n\n232221\n\n131211\n\nkl (5.3)\n\nNesta representa\u00e7\u00e3o, os elementos de cada linha indicam as componentes de tens\u00e3o ao \n\nlongo de um mesmo plano e na dire\u00e7\u00e3o dos eixos coordenados. O primeiro \u00edndice, que denota \n\no plano de aplica\u00e7\u00e3o da tens\u00e3o, mant\u00e9m-se fixo. Por outro lado, os elementos de cada coluna \n\nindicam as componentes de tens\u00e3o ao longo de uma dire\u00e7\u00e3o fixa (representada pelo segundo \n\n\u00edndice) paralela a um dos eixos coordenados, mas que atuam sobre os tr\u00eas planos coordenados \n\nX2X3, X1X3 e X1X2. A Figura 5.1 mostra uma representa\u00e7\u00e3o gr\u00e1fica de cada componente do \n\ntensor de tens\u00e3o. Os eixos coordenados X1, X2 e X3 s\u00e3o representados utilizando os s\u00edmbolos\n\nx, y e z. \n\n65\n\nFigura 5.1 \u2013 Componentes do tensor de tens\u00e3o. Fonte: Twiss &amp; Moores (1992).\n\n\n\n5.3 Nota\u00e7\u00e3o para o tensor de deforma\u00e7\u00e3o \n\nConsidera\u00e7\u00f5es an\u00e1logas valem para a defini\u00e7\u00e3o da deforma\u00e7\u00e3o de um corpo, isto \u00e9,\n\nmodifica\u00e7\u00f5es em sua forma e tamanho. Para tanto, utiliza-se um tensor de segunda ordem\n\ndenominado tensor de deforma\u00e7\u00e3o.\n\nPara um sistema de coordenadas 3D ortogonal (X1, X2, X3), a extens\u00e3o de um \n\nsegmento de comprimento inicial L1 \u00e9 \n\n1\n\n1\n\n1\n\n11\n11\n\nL\n\nL\n\nL\n\nL\ne (5.4)\n\nsendo que o primeiro \u00edndice de e11 denota que o segmento \u00e9 inicialmente paralelo a X1, \n\nenquanto o segundo \u00edndice denota que a mudan\u00e7a de comprimento \u00e9 tamb\u00e9m paralela a X1. \n\nL1 \u00e9 a diferen\u00e7a entre o comprimento final ( 1) e inicial do segmento. Rela\u00e7\u00f5es semelhantes\n\nvalem para segmentos inicialmente paralelos a X2 e X3, respectivamente (Figura 5.2a). \n\nPara a componente cisalhante da deforma\u00e7\u00e3o, segmentos inicialmente paralelos aos \n\neixos X1, X2 e X3 (nota\u00e7\u00e3o mai\u00fascula) s\u00e3o, ap\u00f3s a deforma\u00e7\u00e3o, paralelos a x1, x2 e x3 \n\n(nota\u00e7\u00e3o min\u00fascula), respectivamente (Figura 5.2b). Por exemplo, as duas componentes de \n\ndeforma\u00e7\u00e3o cisalhante para a aresta do cubo paralela a X1 s\u00e3o e12 e e13:\n\n1212 tan\n2\n\n1\ne 1313 tan\n\n2\n\n1\ne (5.5)\n\nEm cada caso, o primeiro \u00edndice denota que a deforma\u00e7\u00e3o cisalhante envolve um \n\nsegmento inicialmente paralelo ao eixo X1, isto \u00e9, ocorre no plano X2X3 normal ao eixo X1. \n\nO segundo \u00edndice denota que o cisalhamento ocorre, dentro do plano considerado, nas \n\ndire\u00e7\u00f5es positivas dos eixos X2 e X3, respectivamente. Cada \u00e2ngulo 12 e 13 \u00e9 a diferen\u00e7a\n\nentre 90o e os \u00e2ngulos \u201cdeformados\u201d x1^x2 e x1^x3, respectivamente. A presen\u00e7a de dois \n\n\u00edndices em cada componente confirma a necessidade de se especificar duas informa\u00e7\u00f5es\n\ndistintas de dire\u00e7\u00e3o, de acordo com a natureza de um tensor de segunda ordem.\n\nEm virtude disto e da observa\u00e7\u00e3o da Figura 5.2, verifica-se que existem nove \n\ncomponentes de deforma\u00e7\u00e3o. Utilizando a nota\u00e7\u00e3o matricial, o tensor de deforma\u00e7\u00e3o \u00e9 \n\nesquematizado como segue: \n\n333231\n\n232221\n\n131211\n\neee\n\neee\n\neee\n\ne\nkl\n\n(5.6)\n\n66\n\n\n\n(b)(a)\n\nFigura 5.2 \u2013 Componentes do tensor de deforma\u00e7\u00e3o. (a) Componente volum\u00e9trica. O cubo menor aumenta de \nvolume em virtude da elonga\u00e7\u00e3o de todos os seus lados. (b) Componente cisalhante. A deforma\u00e7\u00e3o cisalhante \ndescreve a mudan\u00e7a de forma do cubo. O sistema de coordenadas considerado antes da deforma\u00e7\u00e3o \u00e9 (X1, X2, \nX3). Ap\u00f3s a deforma\u00e7\u00e3o, os lados do objeto s\u00e3o paralelos aos eixos (x1, x2, x3). A rela\u00e7\u00e3o entre os dois \nsistemas de coordenadas \u00e9 definida atrav\u00e9s dos \u00e2ngulos de cisalhamento . Fonte: Twiss &amp; Moores (1992).\n\nAs componentes da diagonal principal da matriz, que possuem \u00edndices iguais, s\u00e3o as\n\nextens\u00f5es (ou deforma\u00e7\u00f5es longitudinais, Figura 5.2a). As demais componentes, que possuem\n\n\u00edndices distintos, constituem as deforma\u00e7\u00f5es cisalhantes (Figura 5.2b). Os elementos de uma\n\nmesma linha denotam todas as componentes de deforma\u00e7\u00e3o que atuam sobre um plano \n\ncoordenado normal ao eixo definido pelo primeiro \u00edndice. Por exemplo, as componentes e11,\n\ne12 e e13 atuam sobre o plano X2X3 (ou YZ) perpendicular ao eixo X1 (X). Mas enquanto e11\n\nindica extens\u00e3o na dire\u00e7\u00e3o X1, e12 e e13 denotam cisalhamento nas dire\u00e7\u00f5es X2 e X3, \n\nrespectivamente. O mesmo racioc\u00ednio vale para as demais linhas da matriz. Desta forma, o \n\ntensor de deforma\u00e7\u00e3o proporciona informa\u00e7\u00e3o suficiente para determinar a deforma\u00e7\u00e3o\n\nnormal e cisalhante de um corpo orientado no espa\u00e7o tridimensional.\n\n5.4 Autovalores e autovetores: eixos principais de tens\u00e3o e deforma\u00e7\u00e3o \n\nUma matrix 3x3 pode ser caracterizada por tr\u00eas vetores em 3D, denominados\n\nautovetores (eigenvectors); e tr\u00eas escalares, denominados autovalores (eigenvalues) da matriz\n\n(SCHROEDER et al., 1996). Os autovetores formam um sistema tridimensional de \n\ncoordenadas cujos eixos s\u00e3o mutuamente perpendiculares. Em algumas aplica\u00e7\u00f5es,\n\nespecialmente em engenharia e geologia estrutural, estes eixos s\u00e3o denominados eixos\n\nprincipais e possuem importante significado f\u00edsico, como ser\u00e1 ilustrado em breve. A cada \n\nautovetor \u00e9 associado um autovalor. \n\n67\n\n\n\nMatematicamente, \u00e9 poss\u00edvel representar autovalores e autovetores como segue. Dada \n\na matriz 3x3 A correspondente a um tensor de segunda ordem, os autovetores x e autovalores \n\n devem satisfazer a rela\u00e7\u00e3o \n\n(5.7)A x = x\n\nIsto ocorre se o determinante da matriz A \u2013 I for nulo, sendo I a matriz identidade de\n\nordem 3x3 (nesta matriz, todos os elementos da diagonal principal s\u00e3o iguais a 1, enquanto os \n\ndemais elementos s\u00e3o nulos). Isto \u00e9: \n\n(5.8)det |A \u2013 I| = 0 \n\nA expans\u00e3o desta equa\u00e7\u00e3o produz um polin\u00f4mio de terceiro grau em  cujas ra\u00edzes s\u00e3o\n\nos autovalores. Desta forma existem sempre tr\u00eas autovalores (j\u00e1 que o grau do polin\u00f4mio \u00e9 3), \n\nembora nem sempre distintos. Ap\u00f3s a determina\u00e7\u00e3o dos autovalores, os autovetores\n\ncorrespondentes podem ser encontrados a partir da equa\u00e7\u00e3o 5.7. \n\n\u00c9 poss\u00edvel expressar os autovetores de uma matriz 3x3 da seguinte forma: \n\n(5.9)xi = i ei, i = 1, 2, 3 \n\nsendo ei um vetor de comprimento unit\u00e1rio na dire\u00e7\u00e3o do autovetor xi  e i o autovalor \n\ncorrespondente. Esta rela\u00e7\u00e3o mostra que cada autovetor tem como magnitude seu autovalor\n\ncorrespondente.\n\nOrdenando os autovalores de forma que 1 2 3, os autovetores associados x1, x2\n\ne x3 ser\u00e3o denominados maior, intermedi\u00e1rio e menor, respectivamente.\n\nA tens\u00e3o  em um ponto qualquer de um corpo geol\u00f3gico \u00e9 conhecida a partir da\n\ndetermina\u00e7\u00e3o das componentes normal n e cisalhante s, atuantes em um plano orientado que \n\ncont\u00e9m o ponto. Naturalmente, existe um n\u00famero infinito destes planos. Logo, \u00e9 necess\u00e1rio \n\nestabelecer qual informa\u00e7\u00e3o m\u00ednima permite determinar as componentes de tens\u00e3o em\n\nqualquer plano. Esta informa\u00e7\u00e3o \u00e9 representada graficamente por um elips\u00f3ide de tens\u00e3o \n\n(Figura 5.3), cujo centro corresponde ao ponto de aplica\u00e7\u00e3o da tens\u00e3o. Os eixos maior,\n\nintermedi\u00e1rio e menor do elips\u00f3ide s\u00e3o denominados principais. Tais eixos, denotados 1, 2\n\ne 3 (sendo que 1 2 3), s\u00e3o perpendiculares a tr\u00eas planos mutuamente ortogonais, \n\ntamb\u00e9m chamados principais, ao longo dos quais as tens\u00f5es normais possuem valores \n\nextremos e as tens\u00f5es cisalhantes s\u00e3o nulas. O ponto de aplica\u00e7\u00e3o da tens\u00e3o \u00e9 representado \n\natrav\u00e9s de um cubo infinitesimal cujas faces s\u00e3o paralelas aos planos principais e \n\nperpendiculares aos eixos principais 1, 2  e 3 (Figura 5.4).\n\n^ ^\n\n^ ^ ^ ^\n\n^ ^ ^\n\n68\n\n\n\nFigura 5.3 \u2013 Elips\u00f3ide de tens\u00e3o. Fonte: Twiss &amp; Moores (1992).\n\nFigura 5.4 \u2013 Componentes principais da tens\u00e3o. Os eixos principais s\u00e3o paralelos aos semi-eixos do elips\u00f3ide de\ntens\u00e3o da figura anterior. Fonte: Twiss &amp; Moores (1992).\n\nDo ponto de vista anal\u00edtico, o comprimento dos semi-eixos do elips\u00f3ide de tens\u00e3o \u00e9 \n\ndado pelos autovalores 1, 2 e 3 (sendo 1 2 3) do tensor de tens\u00e3o que representa o \n\nelips\u00f3ide. Por outro lado, a orienta\u00e7\u00e3o destes semi-eixos no sistema cartesiano de coordenadas \n\n(isto \u00e9, a dire\u00e7\u00e3o dos eixos principais de tens\u00e3o, representados por valores normais extremos e \n\nvalores cisalhantes nulos) \u00e9 dada pelos autovetores correspondentes no referido tensor. Isto \n\nsignifica que a especifica\u00e7\u00e3o matem\u00e1tica de um tensor de tens\u00e3o fornece todas as \n\ninforma\u00e7\u00f5es necess\u00e1rias para a representa\u00e7\u00e3o gr\u00e1fica tridimensional da configura\u00e7\u00e3o de\n\ntens\u00e3o aplicada em um ponto. \n\n69\n\n\n\nAs considera\u00e7\u00f5es expostas para a tens\u00e3o valem tamb\u00e9m para sua conseq\u00fc\u00eancia, a \n\ndeforma\u00e7\u00e3o. Neste caso, utiliza-se um tensor de deforma\u00e7\u00e3o para o qual \u00e9 poss\u00edvel encontrar\n\ndire\u00e7\u00f5es de deforma\u00e7\u00e3o principais. Assume-se que o elips\u00f3ide correspondente seja o \n\nresultado da deforma\u00e7\u00e3o de uma esfera na dire\u00e7\u00e3o dos eixos principais \u00ea1, \u00ea2 e \u00ea3 (sendo que \n\n\u00ea1  \u00ea2  \u00ea3). \u00ea1 constitui usualmente o eixo de maior estiramento (\u00ea1>1), \u00ea2 pode  indicar \n\nestiramento, encurtamento ou deforma\u00e7\u00e3o plana (\u00ea2>1, \u00ea2<1 e \u00ea2 = 1, respectivamente), ao \n\npasso que \u00ea3 indica o eixo de maior encurtamento (Figura 5.5).\n\nFigura 5.5 \u2013 Elips\u00f3ide de deforma\u00e7\u00e3o. O \u00edndice 1 dos eixos est\u00e1 associado ao estiramento, enquanto o \u00edndice 3\ndenota encurtamento. O semi-eixo intermedi\u00e1rio (\u00edndice 2) pode representar estiramento, encurtamento ou\ndeforma\u00e7\u00e3o plana. Modificado de Twiss &amp; Moores (1992). \n\n5.5 O c\u00edrculo de Mohr para a tens\u00e3o\n\nO elips\u00f3ide de tens\u00e3o sugere graficamente que as componentes normais e cisalhantes\n\nao longo de um plano devem variar progressivamente ao se modificar a orienta\u00e7\u00e3o deste. \n\nNo entanto, a rela\u00e7\u00e3o entre a orienta\u00e7\u00e3o deste plano e as componentes normais e\n\ncisalhantes da tens\u00e3o \u00e9 de dif\u00edcil determina\u00e7\u00e3o a partir da observa\u00e7\u00e3o do elips\u00f3ide. Esta \n\nrela\u00e7\u00e3o se torna mais simples quando as referidas componentes forem tra\u00e7adas em um gr\u00e1fico,\n\ncriando o chamado c\u00edrculo de Mohr (Figura 5.6). Este \u00e9 constru\u00eddo usando um diagrama em\n\nque o eixo horizontal fornece o valor da tens\u00e3o normal n, ao passo que o eixo vertical indica \n\no valor da tens\u00e3o cisalhante s.\n\nPara uma determinada configura\u00e7\u00e3o de tens\u00e3o, descrita graficamente por um elips\u00f3ide,\n\nas componentes normais e cisalhantes que atuam sobre um ponto em planos de orienta\u00e7\u00e3o \n\nqualquer s\u00e3o tra\u00e7adas como pontos de um gr\u00e1fico de forma a gerar o c\u00edrculo de Mohr. O \n\ncentro do c\u00edrculo encontra-se sobre o eixo da tens\u00e3o normal. As tens\u00f5es normais m\u00e1xima ( 1)^\n\n70\n\n\n\ne m\u00ednima ( 3) possuem valores associados aos interceptos do c\u00edrculo com o eixo horizontal \n\nn. Estes s\u00e3o os \u00fanicos pontos em que a tens\u00e3o cisalhante \u00e9 nula. \n\n^\n\nA orienta\u00e7\u00e3o de um plano P no espa\u00e7o 3D \u00e9 especificada por meio de seu vetor normal\n\nn (Figura 5.6a). O plano \u00e9 posicionado em um sistema de coordenadas cujos eixo x1 e x3\n\ncorrespondem aos eixos principais de tens\u00e3o 1 e 3. O \u00e2ngulo  que sua normal forma com o \n\nprimeiro eixo serve para definir sua orienta\u00e7\u00e3o. O plano P \u00e9 paralelo ao eixo principal 2,\n\nsendo as componentes de tens\u00e3o paralelas ao plano x1x3 ( 1 3).\n\n^ ^\n\n^ ^\n\n^\n\n^ ^ ^ ^\n\nO centro do c\u00edrculo de Mohr (Figura 5.6b) possui abscissa igual \u00e0 media aritm\u00e9tica das \n\ntens\u00f5es normais m\u00e1xima e m\u00ednima, ao passo que seu raio \u00e9 igual \u00e0 metade da diferen\u00e7a entre \n\nas mesmas. A orienta\u00e7\u00e3o do plano P no espa\u00e7o 3D, definida pelo \u00e2ngulo , \u00e9 representada, no \n\nc\u00edrculo de Mohr, usando o dobro desta medida, 2 . Desta forma, ao variar a orienta\u00e7\u00e3o do\n\nplano, os pontos no diagrama de Mohr percorrem o c\u00edrculo, fornecendo pares de valores \n\n( n\n(P), s\n\n(P)) para as tens\u00f5es normal e cisalhante que atuam sobre o plano de orienta\u00e7\u00e3o .\n\nConhecendo tal orienta\u00e7\u00e3o em rela\u00e7\u00e3o ao maior eixo principal de tens\u00e3o, \u00e9 poss\u00edvel \n\ndeterminar os valores das tens\u00f5es normal e cisalhante sobre o plano. Analiticamente:\n\n2sin\n2\n\n\u02c6\u02c6\n31\n\ns2cos\n2\n\n\u02c6\u02c6\n\n2\n\n\u02c6\u02c6\n3131\n\nn , (5.10)\n\nAs componentes de tens\u00e3o discutidas at\u00e9 agora s\u00e3o paralelas ao plano x1x3, fornecendo\n\nportanto uma informa\u00e7\u00e3o de natureza bidimensional. Para as tens\u00f5es nos outros planos \n\nprincipais, \u00e9 poss\u00edvel tra\u00e7ar os c\u00edrculos de Mohr correspondentes. Tais c\u00edrculos podem ser\n\ncombinados em um mesmo diagrama de forma a proporcionar uma informa\u00e7\u00e3o pseudo-\n\ntridimensional a respeito da distribui\u00e7\u00e3o das tens\u00f5es normais e cisalhantes sobre planos \n\norientados em rela\u00e7\u00e3o aos tr\u00eas planos coordenados principais x1x3, x1x2 e x2x3. A informa\u00e7\u00e3o\n\nrepresentada n\u00e3o \u00e9 propriamente tridimensional, pois os planos P considerados pertencem a\n\ntr\u00eas grupos bem definidos: os paralelos aos eixos principais de tens\u00e3o x2, x3 e x1,\n\nrespectivamente. Dentro de cada grupo, os planos considerados podem ter orienta\u00e7\u00e3o \n\nqualquer, especificada atrav\u00e9s dos \u00e2ngulos 1, 2 e 3 que suas normais formam com os eixos \n\nprincipais de tens\u00e3o x2 e x1 (Figura 5.7a). \n\n^ ^\n\n^ ^ ^ ^ ^ ^\n\n^ ^ ^\n\n^ ^\n\nA informa\u00e7\u00e3o \u201ctridimensional\u201d de tens\u00e3o \u00e9 representada atrav\u00e9s de tr\u00eas c\u00edrculos de\n\nMohr, cada qual correspondente ao feixe de planos paralelo a um eixo principal (Figura 5.7b). \n\nNo eixo horizontal do diagrama s\u00e3o representados simultaneamente os valores\n\nm\u00e1ximo, intermedi\u00e1rio e m\u00ednimo das tens\u00f5es normais, 1, 2  e 3. Cada um destes valores \n\ncorresponde a um ponto comum a dois c\u00edrculos de Mohr.\n\n^ ^ ^\n\n71\n\n\n\nAs equa\u00e7\u00f5es dos tr\u00eas c\u00edrculos s\u00e3o an\u00e1logas \u00e0 equa\u00e7\u00e3o (5.10), com a diferen\u00e7a que\n\ndevem ser considerados tr\u00eas pares de \u00edndices para referenciar as tens\u00f5es principais: 1 e 3; 1 e \n\n2; 2 e 3. \n\n(b)\n\nFigura 5.7 \u2013 Distribui\u00e7\u00e3o tridimensional de tens\u00f5es representada atrav\u00e9s do diagrama de Mohr. (a) Gr\u00e1fico 3D\npara a orienta\u00e7\u00e3o dos planos de aplica\u00e7\u00e3o da tens\u00e3o. n1, n2 e n3 s\u00e3o os vetores normais a tr\u00eas planos paralelos\naos eixos principais. 1, 2 e 3 s\u00e3o os \u00e2ngulos entre os eixos principais e as normais, medidos nos tr\u00eas planos\ncoordenados exibidos. (b) Diagrama de Mohr. Cada c\u00edrculo de Mohr representa a tens\u00e3o bidimensional em um\ndos planos coordenados principais. As componentes de tens\u00e3o normais e cisalhantes que agem sobre os planos\nperpendiculares a n1, n2 e n3 s\u00e3o representadas como pontos sobre os c\u00edrculos de Mohr correspondentes. Fonte:\nTwiss &amp; Moores (1992).\n\n(a) (b)\n\nFigura 5.6 \u2013 Diagrama de Mohr da tens\u00e3o aplicada sobre um plano P. (a) Rela\u00e7\u00f5es entre as componentes de\ntens\u00e3o, os eixos coordenados principais correspondentes \u00e0s tens\u00f5es normais m\u00e1xima e m\u00ednima, e o plano P com\nsua normal n. (b) Tens\u00e3o correspondente representada atrav\u00e9s do c\u00edrculo de Mohr. A nota\u00e7\u00e3o \u201c(P)\u201d indica as \ncomponentes de tens\u00e3o que agem sobre o plano P. Modificado de Twiss &amp; Moores (1992).\n\n(a)\n\nPlano P \n\n72\n\n\n\n5.6 O c\u00edrculo de Mohr para a deforma\u00e7\u00e3o \n\nO c\u00edrculo de Mohr para a deforma\u00e7\u00e3o possui finalidade an\u00e1loga ao c\u00edrculo para a \n\ntens\u00e3o e descreve como a deforma\u00e7\u00e3o normal (extens\u00e3o) e a deforma\u00e7\u00e3o cisalhante variam ao \n\nse modificar a orienta\u00e7\u00e3o de um plano em rela\u00e7\u00e3o ao elips\u00f3ide de deforma\u00e7\u00e3o. Considerando\n\na deforma\u00e7\u00e3o ao longo do plano cinem\u00e1tico XY (sendo X e Y os eixos maior e menor da\n\nelipse de deforma\u00e7\u00e3o no plano), a constru\u00e7\u00e3o do c\u00edrculo requer a determina\u00e7\u00e3o de alguns\n\npar\u00e2metros de deforma\u00e7\u00e3o:\n\n2\n1\n\n'\n1\n\n1\n\n1\n\ne\n2\n\n2\n\n'\n2\n\n1\n\n1\n\ne\n, (5.11)\n\nNestas equa\u00e7\u00f5es, \u00b41 e \u00b42 definem as elonga\u00e7\u00f5es quadr\u00e1ticas rec\u00edprocas, ao passo \n\nque (1+e1) e (1+e2) s\u00e3o, respectivamente, as elonga\u00e7\u00f5es na dire\u00e7\u00e3o dos semi-eixos principais \n\nmaior e menor da elipse de deforma\u00e7\u00e3o no plano, isto \u00e9, o comprimento de tais semi-eixos.\n\nNesta se\u00e7\u00e3o, o \u00edndice 2 est\u00e1 associado ao semi-eixo principal menor, e n\u00e3o \n\nintermedi\u00e1rio, para seguir a conven\u00e7\u00e3o de estudo bidimensional utilizada na literatura para o \n\nc\u00edrculo de Mohr de deforma\u00e7\u00e3o (Ramsay &amp; Huber, 1983). Neste caso, o elips\u00f3ide reduz-se a \n\numa elipse e n\u00e3o h\u00e1 semi-eixo intermedi\u00e1rio. \n\nOutro par\u00e2metro importante \u00e9 o \u00e2ngulo \u00b4 entre a dire\u00e7\u00e3o de um elemento  ou objeto \n\nno estado deformado e a dire\u00e7\u00e3o do eixo de maior estiramento X (eixo principal \u00ea1).\n\nDe posse destas informa\u00e7\u00f5es, \u00e9 poss\u00edvel tra\u00e7ar o c\u00edrculo de Mohr para a deforma\u00e7\u00e3o\n\n(Figura 5.8).\n\n73\n\nFigura 5.8 \u2013 Constru\u00e7\u00e3o do c\u00edrculo de Mohr para a deforma\u00e7\u00e3o. Fonte: Ramsay &amp; Huber (1983).\n\n\n\nVerifica-se que as elonga\u00e7\u00f5es quadr\u00e1ticas rec\u00edprocas \u00b41 e \u00b42, indicadas no eixo \n\nhorizontal \u00b4, s\u00e3o utilizadas para calcular o centro e o raio do c\u00edrculo. Ao se modificar o \n\n\u00e2ngulo \u00b4, um ponto gen\u00e9rico P percorre o c\u00edrculo de Mohr. As coordenadas do ponto ( \u00b4, \u00b4)\n\ns\u00e3o proporcionais \u00e0s componentes de deforma\u00e7\u00e3o normais e cisalhantes, respectivamente.\n\n\u00c9 interessante notar que as elonga\u00e7\u00f5es quadr\u00e1ticas rec\u00edprocas, \u00b41 e \u00b42, s\u00e3o\n\ninversamente proporcionais \u00e0s elonga\u00e7\u00f5es (1+e1) e (1+e2). Estas \u00faltimas medem o\n\ncomprimento dos semi-eixos maior e menor da elipse de deforma\u00e7\u00e3o no caso 2D, assim como \n\n1 e 3  medem o comprimento dos semi-eixos maior e menor do elips\u00f3ide de tens\u00e3o. ^ ^\n\nMas, se por um lado as tens\u00f5es normais m\u00e1xima e m\u00ednima s\u00e3o indicadas diretamente\n\nno eixo horizontal n do c\u00edrculo de Mohr para a tens\u00e3o (Figura 5.7), de forma que a maior\n\ntens\u00e3o normal, 1, ocorre na extremidade direita do gr\u00e1fico; por outro as deforma\u00e7\u00f5es normais\n\nm\u00e1xima e m\u00ednima (elonga\u00e7\u00f5es (1+e1) e (1+e2)) no plano considerado correspondem,\n\nrespectivamente, \u00e0s extremidades esquerda e direita do c\u00edrculo de Mohr para deforma\u00e7\u00e3o ao\n\nlongo do eixo horizontal \u00b4. Isto ocorre em virtude da utiliza\u00e7\u00e3o de elonga\u00e7\u00f5es quadr\u00e1ticas\n\nrec\u00edprocas. Tal diferen\u00e7a deve ser levada em conta ao utilizar o comprimento dos semi-eixos\n\nprincipais de tens\u00e3o e deforma\u00e7\u00e3o durante a constru\u00e7\u00e3o dos c\u00edrculos de Mohr\n\ncorrespondentes.\n\n^\n\nAs equa\u00e7\u00f5es do c\u00edrculo de Mohr para a deforma\u00e7\u00e3o s\u00e3o as seguintes: \n\n,'2cos22\n'\n\n'\n1\n\n'\n2\n\n'\n2\n\n'\n1 '2\n\n2\n'\n\n'\n1\n\n'\n2 sin (5.12)\n\nA extens\u00e3o destes conceitos para o caso tridimensional (passagem de uma elipse com\n\ndois semi-eixos para um elips\u00f3ide com tr\u00eas semi-eixos), envolve a considera\u00e7\u00e3o de tr\u00eas pares\n\nde eixos principais (\u00ea1\u00ea2 , \u00ea1\u00ea3 , \u00ea2\u00ea3), cujas extens\u00f5es quadr\u00e1ticas rec\u00edprocas s\u00e3o utilizadas nas\n\nequa\u00e7\u00f5es 5.11 e 5.12. Neste contexto, o \u00edndice 2 est\u00e1 novamente associado ao semi-eixo\n\nprincipal intermedi\u00e1rio do elips\u00f3ide de deforma\u00e7\u00e3o. Como no caso da tens\u00e3o, os tr\u00eas c\u00edrculos \n\nde Mohr constru\u00eddos se referem \u00e0 deforma\u00e7\u00e3o nos tr\u00eas planos principais (isto \u00e9, planos\n\nperpendiculares aos eixos principais). \n\n5.7 Obten\u00e7\u00e3o de elips\u00f3ides a partir de tensores \n\nOs elips\u00f3ides de tens\u00e3o e deforma\u00e7\u00e3o constituem a representa\u00e7\u00e3o gr\u00e1fica das entidades \n\nmatem\u00e1ticas tensores. A obten\u00e7\u00e3o dos elips\u00f3ides ocorre conforme procedimento a seguir. O \n\nprimeiro passo consiste na extra\u00e7\u00e3o dos autovalores e autovetores associados ao tensor. A \n\n74\n\n\n\nt\u00e9cnica anal\u00edtica de determina\u00e7\u00e3o \u00e9 dada pelas equa\u00e7\u00f5es 5.7 a 5.9. Como os autovetores s\u00e3o \n\nortogonais, estes formam um sistema local de coordenadas. Estes vetores podem ser \n\nassociados aos semi-eixos menor, intermedi\u00e1rio e maior de um elips\u00f3ide. A forma e \n\norienta\u00e7\u00e3o do elips\u00f3ide (em rela\u00e7\u00e3o ao sistema global de coordenadas) s\u00e3o determinadas,\n\nrespectivamente, atrav\u00e9s dos autovalores e dos autovetores do tensor correspondente. \n\nPara determinar o elips\u00f3ide associado a um tensor, posiciona-se uma esfera no ponto \n\nde aplica\u00e7\u00e3o deste (Figura 5.10). A esfera \u00e9 rotacionada em torno de sua origem de maneira\n\nque seu sistema local de coordenadas coincida com os autovetores. Em seguida, utiliza-se os \n\nautovalores maior, intermedi\u00e1rio e menor para realizar um redimensionamento (scaling) da \n\nesfera ao longo dos autovetores correspondentes. O resultado \u00e9 o elips\u00f3ide procurado. \n\nEm termos alg\u00e9bricos, estas transforma\u00e7\u00f5es geom\u00e9tricas s\u00e3o a conseq\u00fc\u00eancia da \n\nmultiplica\u00e7\u00e3o do conjunto de v\u00e9rtices (coordenadas (x, y, z) representadas como vetores\n\ncoluna) que define a esfera por matrizes 4x4. Em computa\u00e7\u00e3o gr\u00e1fica, uma matriz de \n\ntransforma\u00e7\u00e3o 4x4 \u00e9 respons\u00e1vel pelo deslocamento de pontos tridimensionais que constituem\n\num objeto (FOLEY et al., 1996). O resultado da aplica\u00e7\u00e3o de tais transforma\u00e7\u00f5es sobre todos\n\nos v\u00e9rtices (ou pontos) do objeto consiste em transla\u00e7\u00f5es, rota\u00e7\u00f5es ou modifica\u00e7\u00f5es de escala \n\nda entidade como um todo. Existem tamb\u00e9m deforma\u00e7\u00f5es mais complexas que podem ser \n\ndefinidas por matrizes. O cisalhamento \u00e9 um exemplo disto. \n\nA transforma\u00e7\u00e3o final T resulta da multiplica\u00e7\u00e3o das seguintes matrizes:\n\nT = TT TR TS\n\nTT \u00e9 a matriz de transla\u00e7\u00e3o do centro inicial da esfera para o ponto de aplica\u00e7\u00e3o do \n\ntensor, TR a matriz de rota\u00e7\u00e3o que faz coincidir os eixos coordenados do sistema local da \n\nesfera com os eixos principais das dire\u00e7\u00f5es dos autovetores; e TS a matriz de deforma\u00e7\u00e3o da\n\nesfera rotacionada para o elips\u00f3ide procurado. Tal deforma\u00e7\u00e3o ocorre por procedimento de \n\nscaling nas dire\u00e7\u00f5es dos novos eixos de refer\u00eancia da esfera (o sistema de coordenadas dos \n\neixos principais, ou autovetores). \u00c9 importante lembrar que n\u00e3o \u00e9 poss\u00edvel identificar de \n\nforma completa um elips\u00f3ide no espa\u00e7o 3D usando apenas TR ou TS, pois a primeira matriz\n\nindica somente orienta\u00e7\u00e3o, enquanto a segunda indica modifica\u00e7\u00e3o na forma da esfera \n\n(encurtamento ou estiramento nas dire\u00e7\u00f5es de tr\u00eas eixos ortogonais quaisquer). Um elips\u00f3ide\n\nest\u00e1 totalmente determinado ap\u00f3s fornecer informa\u00e7\u00e3o de orienta\u00e7\u00e3o (autovetores da matriz\n\ndo tensor) e de deforma\u00e7\u00e3o (autovalores da mesma matriz). A remanescente ordem de \n\ninforma\u00e7\u00e3o, a posi\u00e7\u00e3o no espa\u00e7o 3D, est\u00e1 embutida na matriz de transla\u00e7\u00e3o TT.\n\n(5.13)\n\n75\n\n\n\n5.8 Considera\u00e7\u00f5es sobre a simetria dos tensores de tens\u00e3o e deforma\u00e7\u00e3o \n\nAs rela\u00e7\u00f5es 5.3 e 5.6 mostram a esquematiza\u00e7\u00e3o das componentes dos tensores de \n\ntens\u00e3o e deforma\u00e7\u00e3o atrav\u00e9s de uma nota\u00e7\u00e3o matricial. As representa\u00e7\u00f5es utilizadas s\u00e3o:\n\n333231\n\n232221\n\n131211\n\nkl\n e \n\n333231\n\n232221\n\n131211\n\neee\n\neee\n\neee\n\ne\nkl\n\nNestas rela\u00e7\u00f5es, tensores de segunda ordem no espa\u00e7o 3D s\u00e3o representados atrav\u00e9s de \n\nmatrizes quadradas 3x3, com um total de nove componentes para cada tensor. \n\nNa verdade, a possibilidade de alterar de forma independente cada componente da \n\nmatriz do tensor representa uma abstra\u00e7\u00e3o did\u00e1tica que n\u00e3o ocorre em aplica\u00e7\u00f5es pr\u00e1ticas. Isto\n\n\u00e9 conseq\u00fc\u00eancia das considera\u00e7\u00f5es expostas a seguir. \n\nPara o tensor de tens\u00e3o aplicada em algum ponto de uma rocha, assume-se a hip\u00f3tese\n\nrealista de que o elemento se encontre em equil\u00edbrio mec\u00e2nico em rela\u00e7\u00e3o aos demais\n\nelementos da rocha (caracterizados por outros tensores de tens\u00e3o). Isto significa que a \n\nresultante das for\u00e7as que atuam sobre o ponto de aplica\u00e7\u00e3o do tensor deve ser nula (TWISS &amp;\n\nMOORES, 1992; MORAES, 2000). Esta condi\u00e7\u00e3o \u00e9 garantida atrav\u00e9s das seguintes \n\nigualdades:\n\n(5.14)12 =  21 ,  23 =  32 ,  31 =  13\n\ncuja observa\u00e7\u00e3o implica que o tensor de tens\u00e3o \u00e9 sim\u00e9trico em rela\u00e7\u00e3o \u00e0 sua diagonal \n\nprincipal, havendo apenas seis graus de liberdade (ao em vez de nove) na especifica\u00e7\u00e3o de \n\nsuas componentes. \u00c9 importante notar que a simetria envolve somente as componentes \n\ncisalhantes.\n\nConsidera\u00e7\u00f5es an\u00e1logas valem para o tensor da deforma\u00e7\u00e3o estudada em algum ponto\n\nde uma rocha. Assumindo, por exemplo, dois segmentos paralelos a x1 e x2 (Figura 5.2b), o \n\n\u00e2ngulo de cisalhamento 12 de x1 em rela\u00e7\u00e3o a x2 \u00e9 o mesmo que o \u00e2ngulo 21 de x2 em\n\nrela\u00e7\u00e3o a x1. Portanto, na representa\u00e7\u00e3o matricial do tensor de deforma\u00e7\u00e3o, mant\u00eam-se as\n\nseguintes condi\u00e7\u00f5es: \n\n(5.15)e12 = e21 , e23 = e32 , e31 = e13\n\nisto \u00e9, o tensor \u00e9 sim\u00e9trico em rela\u00e7\u00e3o \u00e0 sua diagonal principal e existem apenas seis \n\ncomponentes independentes em sua representa\u00e7\u00e3o matricial. Como no caso anterior, a \n\nsimetria envolve somente as componentes cisalhantes.\n\n76\n\n\n\nComo foi ilustrado, a utiliza\u00e7\u00e3o de tensores de segunda ordem sim\u00e9tricos em rela\u00e7\u00e3o a\n\nsua diagonal principal reduz de nove para seis o n\u00famero de componentes que podem ser \n\nmanipuladas de forma independente. Esta condi\u00e7\u00e3o, que do ponto de vista matem\u00e1tico assume\n\no car\u00e1ter de verdadeira limita\u00e7\u00e3o, \u00e9, por outro lado, fundamental para se trabalhar com\n\nrealismo em geologia estrutural. Este \u00e9 um caso t\u00edpico de diferen\u00e7a entre abrang\u00eancia da \n\nferramenta matem\u00e1tica e sua utiliza\u00e7\u00e3o em \u00e1reas aplicadas. \n\nAl\u00e9m disto, os algoritmos de \u00e1lgebra linear utilizados para determinar os eixos \n\nprincipais de tens\u00e3o e deforma\u00e7\u00e3o para matrizes de tensores (e n\u00e3o, simplesmente, para \n\nmatrizes quadradas gen\u00e9ricas), t\u00eam como pressuposto a simetria destas. Tal exig\u00eancia foi \n\nobservada tanto no ambiente de visualiza\u00e7\u00e3o do VTK, como em bibliotecas externas \n\nutilizadas para esta finalidade. Este ponto ser\u00e1 abordado em detalhe durante a explica\u00e7\u00e3o do\n\nfuncionamento do programa Tensor3D.\n\n5.9 O programa Tensor3D\n\nO programa Tensor3D \u00e9 um aplicativo de computa\u00e7\u00e3o gr\u00e1fica desenvolvido neste\n\nprojeto para visualizar a deforma\u00e7\u00e3o de objetos de acordo com as informa\u00e7\u00f5es contidas na \n\nmatriz 3x3 associada a um tensor. As exig\u00eancias fundamentais consideradas durante seu \n\ndesenvolvimento foram:\n\n- Elevado grau de interatividade. O usu\u00e1rio pode modificar cada componente do tensor e \n\nobservar instantaneamente a deforma\u00e7\u00e3o ocorrida no objeto estudado. \n\n- Visualiza\u00e7\u00e3o tridimensional. A informa\u00e7\u00e3o de deforma\u00e7\u00e3o normal ou cisalhante embutida\n\nna matriz do tensor e manipulada pelo usu\u00e1rio \u00e9 aplicada a um objeto visualizado em 3D,\n\nsendo poss\u00edvel modificar em tempo real importantes par\u00e2metros de exibi\u00e7\u00e3o, como o \n\nponto de observa\u00e7\u00e3o, a dist\u00e2ncia, etc. Esta t\u00e9cnica visa real\u00e7ar as rela\u00e7\u00f5es espaciais que \n\npodem ser aferidas atrav\u00e9s da observa\u00e7\u00e3o em tr\u00eas dimens\u00f5es da modifica\u00e7\u00e3o de \n\npar\u00e2metros de tens\u00e3o e deforma\u00e7\u00e3o.\n\nO programa foi desenvolvido usando a linguagem Tcl/Tk (2005) que independe do \n\nsistema operacional utilizado (Windows, Linux, etc.), e fazendo uso do conjunto de classes de \n\nmodelagem geom\u00e9trica e visualiza\u00e7\u00e3o cient\u00edfica do VTK (VISUALIZATION TOOLKIT,\n\n2005).\n\nA escolha da linguagem Tcl/Tk foi ditada pela necessidade de se desenvolver uma\n\nferramenta did\u00e1tica de estudo das deforma\u00e7\u00f5es em geologia estrutural, que fosse facilmente\n\nutiliz\u00e1vel em plataformas computacionais diferentes, independente do ambiente de \n\n77\n\n\n\ndesenvolvimento inicial. Esta facilidade de utiliza\u00e7\u00e3o foi particularmente observada em\n\nambiente Windows, sendo apenas necess\u00e1rio realizar a instala\u00e7\u00e3o dos m\u00f3dulos pr\u00e9-\n\ncompilados do interpretador de comandos Tcl/Tk e da biblioteca VTK. Outro argumento a \n\nfavor desta linguagem \u00e9 o seu conjunto de ferramentas gr\u00e1ficas (bot\u00f5es, barras de rolagem,\n\ncheckboxes, etc.) de intera\u00e7\u00e3o com o usu\u00e1rio. A integra\u00e7\u00e3o de tais ferramentas em programas\n\ninterativos apresenta um baixo n\u00edvel de complexidade, o que agiliza o processo de\n\ndesenvolvimento.\n\nAnalogamente, a escolha do VTK como ambiente de modelagem geom\u00e9trica e de\n\nvisualiza\u00e7\u00e3o foi orientada pela facilidade de desenvolvimento de aplica\u00e7\u00f5es 3D que este \n\nsistema proporciona, sendo poss\u00edvel escrever programas relativamente complexos com \n\nalgumas dezenas de linhas de c\u00f3digo. Como foi discutido anteriormente (se\u00e7\u00e3o 3.4), isto \u00e9\n\nconseq\u00fc\u00eancia da facilidade de instancia\u00e7\u00e3o (cria\u00e7\u00e3o) e manipula\u00e7\u00e3o de objetos e processos\n\npredefinidos (modelos 3D, algoritmos de modelagem geom\u00e9trica e de visualiza\u00e7\u00e3o, etc.) que\n\no VTK oferece. Al\u00e9m disto, os conhecimentos sobre VTK deste mestrando, iniciados e \n\nsedimentados ao longo de tr\u00eas anos de atividades como bolsista de inicia\u00e7\u00e3o cient\u00edfica junto\n\nao Laborat\u00f3rio de GeoModelagem 3D do DPM / IGCE / UNESP, apontaram como escolha \n\nnatural a utiliza\u00e7\u00e3o desta biblioteca.\n\nPor fim, a jun\u00e7\u00e3o de ferramentas de trabalho de integra\u00e7\u00e3o relativamente simples\n\npermite realizar a prototipa\u00e7\u00e3o de aplica\u00e7\u00f5es, isto \u00e9, o desenvolvimento r\u00e1pido de programas\n\nde computa\u00e7\u00e3o cient\u00edfica com elevado grau de feedback, sendo poss\u00edvel observar de forma\n\nquase instant\u00e2nea o resultado das modifica\u00e7\u00f5es realizadas durante o ciclo de\n\ndesenvolvimento. Obviamente, este est\u00e1gio de desenvolvimento n\u00e3o leva em conta \n\nproblem\u00e1ticas de robustez e toler\u00e2ncia a falhas dos programas escritos, dando-se prefer\u00eancia \n\npara a constru\u00e7\u00e3o de prot\u00f3tipos funcionantes. Em conseq\u00fc\u00eancia disto, tais exig\u00eancias de \n\nrobustez devem ser reservadas para ciclos posteriores de refinamento.\n\n5.9.1 Modelagem de glyphs\n\nEmbora o programa Tensor3D seja o resultado da inter-rela\u00e7\u00e3o (conex\u00e3o) entre \n\nnumerosos m\u00f3dulos ou classes da biblioteca VTK, destaca-se a classe vtkTensorGlyph, que \n\nutiliza as informa\u00e7\u00f5es matem\u00e1ticas contidas na representa\u00e7\u00e3o matricial de um tensor para\n\ndeformar um modelo geom\u00e9trico 3D (no ambiente VTK, uma inst\u00e2ncia da classe vtkPolyData\n\nque cont\u00e9m informa\u00e7\u00f5es geom\u00e9tricas e topol\u00f3gicas, vide se\u00e7\u00e3o 3.4.2). \n\n78\n\n\n\nAntes de considerar a classe vtkTensorGlyph, ser\u00e1 abordado o conceito gen\u00e9rico de \n\nglyph. \u00c9 comum em visualiza\u00e7\u00e3o cient\u00edfica dispor de um conjunto de dados distribu\u00eddos no \n\nespa\u00e7o tridimensional. A cada ponto (x, y, z) do conjunto considerado podem estar associados, \n\npor exemplo, atributos de natureza escalar (press\u00e3o, temperatura, porosidade, etc.), vetorial \n\n(velocidade, acelera\u00e7\u00e3o, etc.) ou tensorial (tens\u00e3o, deforma\u00e7\u00e3o, etc.). Algumas t\u00e9cnicas de\n\ncomputa\u00e7\u00e3o gr\u00e1fica utilizadas em visualiza\u00e7\u00e3o cient\u00edfica visam representar tais atributos\n\natrav\u00e9s de objetos tridimensionais posicionados nos pontos correspondentes. Tais objetos s\u00e3o \n\ndenominados glyphs e sua forma, escala, orienta\u00e7\u00e3o e cor podem ser modificadas de acordo\n\ncom as informa\u00e7\u00f5es associadas a cada ponto do conjunto de dados. Por exemplo, uma\n\ndistribui\u00e7\u00e3o de temperaturas medidas em pontos do espa\u00e7o tridimensional poderia ser \n\nrepresentada atrav\u00e9s de um conjunto de pequenas esferas posicionadas nos pontos conhecidos. \n\nEm termos de representa\u00e7\u00e3o 3D dos dados, o simples fato de identificar visualmente\n\numa esfera em determinado ponto seria ind\u00edcio de um registro de temperatura presente\n\nnaquele ponto. Mas as propriedades de visualiza\u00e7\u00e3o do objeto gr\u00e1fico considerado podem \n\nvariar de acordo com outras informa\u00e7\u00f5es. Continuando o exemplo das temperaturas, cada \n\nesfera (glyph) poderia receber uma cor associada \u00e0 temperatura do ponto correspondente, de \n\nacordo com uma escala de cores do azul para o vermelho que acompanhasse a varia\u00e7\u00e3o \n\nabsoluta de temperaturas do conjunto. Portanto, duas ordens de informa\u00e7\u00e3o num\u00e9rica\n\n(coordenadas e temperatura) teriam correspond\u00eancia direta com duas propriedades gr\u00e1ficas \n\n(posi\u00e7\u00e3o e cor de uma esfera). Mas os glyphs possuem outras propriedades, como o tamanho\n\nrelativo (escala). No exemplo considerado, as esferas poderiam ser visualizadas com \n\ntamanhos diferentes, levando em conta qu\u00e3o recente \u00e9 a informa\u00e7\u00e3o de temperatura associada\n\nao ponto correspondente: para informa\u00e7\u00f5es mais recentes poderiam ser utilizadas esferas de \n\nmaior raio. O exemplo poderia continuar levando em conta outros atributos associados aos \n\npontos. O que se deseja destacar \u00e9 a poderosa capacidade de visualizar dados \n\nmultidimensionais atrav\u00e9s de glyphs, associando-se a um atributo (escalar, vetorial, tensorial,\n\netc.) uma ou mais propriedades dos objetos 3D considerados. \n\nO sistema VTK possui uma classe, chamada vtkGlyph3D (SCHROEDER et al., 1996), \n\nque permite implementar glyphs copiando uma representa\u00e7\u00e3o geom\u00e9trica em cada ponto de \n\num conjunto de dados. A defini\u00e7\u00e3o do objeto ocorre criando inst\u00e2ncias da classe vtkPolyData\n\n(descrita na se\u00e7\u00e3o 3.4.2) e o glyph pode ser orientado de acordo com informa\u00e7\u00f5es vetoriais\n\ne/ou redimensionado de acordo com informa\u00e7\u00f5es escalares (incluindo magnitudes de vetores). \n\n A classe vtkGlyph3D \u00e9 especializada na visualiza\u00e7\u00e3o de informa\u00e7\u00f5es escalares e\n\nvetoriais, n\u00e3o sendo suportados dados tensoriais. A Figura 5.9 mostra dois exemplos de \n\n79\n\n\n\nutiliza\u00e7\u00e3o de glyphs em visualiza\u00e7\u00e3o cient\u00edfica. No primeiro caso, \u00e9 exibida a triangula\u00e7\u00e3o\n\nDelaunay de um conjunto de pontos no plano (WATSON, 1981). Os pontos foram destacados\n\nutilizando-se a representa\u00e7\u00e3o de pequenas esferas (informa\u00e7\u00e3o de posi\u00e7\u00e3o). No segundo caso,\n\nutilizou-se um conjunto de pir\u00e2mides para representar um campo vetorial ao longo da \n\nsuperf\u00edcie de uma esfera. As pir\u00e2mides est\u00e3o orientadas na dire\u00e7\u00e3o dos vetores (informa\u00e7\u00e3o de \n\nposi\u00e7\u00e3o e de orienta\u00e7\u00e3o) do campo. As pir\u00e2mides poderiam sofrer mudan\u00e7a de escala ou de\n\ncor de acordo com a intensidade do campo (magnitude dos vetores correspondente). \n\nPara grandezas tensoriais, como informa\u00e7\u00f5es de tens\u00e3o e deforma\u00e7\u00e3o em determinado\n\nponto do espa\u00e7o, utiliza-se a classe vtkTensorGlyph, que representa a extens\u00e3o da classe\n\nvtkGlyph3D para informa\u00e7\u00f5es matriciais. Como esta, a primeira copia uma representa\u00e7\u00e3o \n\ngeom\u00e9trica (novamente especificada atrav\u00e9s de uma inst\u00e2ncia da classe vtkPolyData) em cada \n\nponto de aplica\u00e7\u00e3o do tensor. O objeto considerado \u00e9 deformado (isto \u00e9, redimensionado e \n\nrotacionado) de acordo com as componentes normais e cisalhantes do tensor considerado. A\n\nmudan\u00e7a de escala e a rota\u00e7\u00e3o s\u00e3o controladas atrav\u00e9s dos autovalores e autovetores da matriz\n\n3x3 do tensor, de acordo com o procedimento ilustrado a seguir (vide se\u00e7\u00e3o 5.7). \n\nA Figura 5.10, obtida utilizando o programa Tensor3D, mostra a deforma\u00e7\u00e3o de um \n\nglyph (esfera semitransparente) usando a matriz de um tensor 3x3. Em (a) \u00e9 poss\u00edvel \n\nidentificar a esfera antes da deforma\u00e7\u00e3o, no sistema de coordenadas global XYZ. Para o \n\ntensor considerado, a classe vtkTensorGlyph calcula os autovalores e seus autovetores\n\ncorrespondentes. Em seguida, os pares (autovalor, autovetor) s\u00e3o ordenados segundo o valor \n\ndecrescente dos autovalores. A Figura 5.10b mostra o sistema de eixos principais calculado \n\npara o tensor do exemplo. Tais eixos possuem comprimentos diferentes, proporcionais aos \n\nautovalores encontrados. Desta forma \u00e9 poss\u00edvel identificar os eixos de maior estiramento\n\n(\u00ea1), intermedi\u00e1rio (\u00ea2) e de maior encurtamento (\u00ea3) do elips\u00f3ide de deforma\u00e7\u00e3o associado ao\n\ntensor. A Figura 5.10c mostra o resultado da etapa final do processo. O maior autovetor \n\nredimensiona o glyph (a esfera) na dire\u00e7\u00e3o X, o intermedi\u00e1rio na dire\u00e7\u00e3o Y e o menor na\n\ndire\u00e7\u00e3o Z. Em seguida, o objeto \u00e9 rotacionado de forma que o eixo X de seu sistema local de \n\ncoordenadas coincida com o eixo principal maior \u00ea1, o eixo Y com o eixo principal \n\nintermedi\u00e1rio \u00ea2 e o eixo Z com o eixo principal menor \u00ea3. A figura n\u00e3o mostra o sistema de \n\ncoordenadas local do objeto, sendo XYZ o sistema global. O objeto redimensionado\n\n(deformado) e rotacionado da figura coincide com o elips\u00f3ide de deforma\u00e7\u00e3o do tensor, j\u00e1 que \n\nsua forma inicial era a de uma esfera. Objetos diferentes podem ser utilizados, conforme ser\u00e1 \n\nmostrado mais adiante. \n\n80\n\n\n\n(a) (b)\n\n81\n\nFigura 5.10 \u2013 Exemplo de uso da classe vtkTensorGlyph.  (a) Esfera visualizada no sistema XYZ de eixos\ncoordenados antes da deforma\u00e7\u00e3o. (b) Visualiza\u00e7\u00e3o dos eixos principais \u00ea1\u00ea2\u00ea3 do tensor. (c) Visualiza\u00e7\u00e3o da\nsfera deformada e orientada (elips\u00f3ide) usando as informa\u00e7\u00f5es encontradas.\n\nFigura 5.9 \u2013 Utiliza\u00e7\u00e3o de glyphs para representar diferentes ordens de informa\u00e7\u00f5es (atributos) associadas a\npontos tridimensionais. (a) Esferas real\u00e7am a posi\u00e7\u00e3o dos pontos em uma malha de tri\u00e2ngulos. (b) Pir\u00e2mides s\u00e3o\nposicionadas nos pontos de aplica\u00e7\u00e3o de grandezas vetoriais e orientadas de acordo com as mesmas.\n\n(a) (b) (c)\n\ne\n\n5.9.2 Descri\u00e7\u00e3o das funcionalidades \n\nA interface de execu\u00e7\u00e3o do programa Tensor3D, exibida na Figura 5.11, \u00e9 constitu\u00edda\n\npor um conjunto de barras de rolagem destinadas a modificar as componentes de um tensor \n\n3x3 (regi\u00e3o 1), v\u00e1rios bot\u00f5es usados para controlar as principais fun\u00e7\u00f5es do aplicativo (regi\u00e3o \n\n2), bem como uma janela de visualiza\u00e7\u00e3o 3D do objeto deformado (regi\u00e3o 3). A seguir ser\u00e3o\n\ndetalhadas as funcionalidades do programa exibidas na figura. \n\nSeletores das componentes do tensor. A regi\u00e3o 1 da Figura 5.11 mostra um conjunto de \n\nbarras de rolagem alinhadas de forma a lembrar a estrutura de uma matriz de elementos 3x3.\n\nCom efeito, tal regi\u00e3o destina-se \u00e0 especifica\u00e7\u00e3o dos valores das nove componentes do tensor \n\nde tens\u00e3o/deforma\u00e7\u00e3o utilizado no programa. O usu\u00e1rio pode modificar o valor de cada \n\ncomponente \u201carrastando\u201d o indicador (ret\u00e2ngulo central) contido na barra de rolagem\n\ncorrespondente at\u00e9 alcan\u00e7ar um valor satisfat\u00f3rio. Tal valor \u00e9 visualizado na parte superior da \n\n\n\nbarra. Esta forma de intera\u00e7\u00e3o n\u00e3o permite realizar um ajuste fino da componente do tensor.\n\nPara tanto, \u00e9 poss\u00edvel selecionar com o mouse a regi\u00e3o \u00e0 direita ou esquerda do indicador. Isto \n\nresultar\u00e1 no ajuste do valor exibido com incrementos de 0.001 unidades para mais ou para \n\nmenos.\n\n2\n\n1\n\n3\n\nFigura 5.11 \u2013 Janela de execu\u00e7\u00e3o do programa Tensor3D. A regi\u00e3o 1 mostra barras de rolagem para \nmodifica\u00e7\u00e3o dos valores das componentes de um tensor 3x3. Abaixo (regi\u00e3o 2), um conjunto de bot\u00f5es para o\ncontrole das funcionalidades do programa. \u00c0 esquerda (regi\u00e3o 3), a visualiza\u00e7\u00e3o 3D de um cubo deformado de \nacordo com as informa\u00e7\u00f5es do tensor. Foi realizado um cisalhamento simples no plano XY e na dire\u00e7\u00e3o\nnegativa do eixo X (a componente \u201ce31\u201d da matriz foi modificada de 0 para -0.758). O elips\u00f3ide em roxo\nmostra a dire\u00e7\u00e3o e entidade da deforma\u00e7\u00e3o.\n\nOs valores iniciais das componentes do tensor n\u00e3o s\u00e3o iguais e dependem da \n\nmodalidade de utiliza\u00e7\u00e3o do programa: tens\u00e3o ou deforma\u00e7\u00e3o. A modalidade \u00e9 selecionada\n\npelo usu\u00e1rio, conforme ser\u00e1 descrito mais adiante. No caso da tens\u00e3o, os valores iniciais do \n\ntensor ser\u00e3o todos nulos. J\u00e1 na modalidade de deforma\u00e7\u00e3o, os valores ser\u00e3o inicializados  com \n\na seguinte matriz, que coincide com uma matriz identidade 3x3:\n\n82\n\n\n\n100\n\n010\n\n001\n\nT (5.16)\n\nEm ambos os casos, as componentes cisalhantes (fora da diagonal principal) recebem,\n\ninicialmente, valor nulo. J\u00e1 na modalidade de deforma\u00e7\u00e3o, as componentes normais (ao longo\n\nda diagonal principal) recebem o valor 1.0. Isto denota uma condi\u00e7\u00e3o de estiramento /\n\nencurtamento nulo que condiz com os conceitos de scaling utilizados em Computa\u00e7\u00e3o Gr\u00e1fica \n\n(FOLEY et al., 1996). Segundo tal nota\u00e7\u00e3o, um scaling (ou redimensionamento) unit\u00e1rio em\n\ndeterminada dire\u00e7\u00e3o significa que o objeto n\u00e3o sofreu deforma\u00e7\u00e3o naquela dire\u00e7\u00e3o, isto \u00e9, n\u00e3o\n\nsofreu estiramento nem encurtamento. Por outro lado, um scaling maior do que 1 denota \n\nestiramento, ao passo que um valor menor do que 1 indica encurtamento.\n\nA descri\u00e7\u00e3o de cada componente do tensor na janela do programa varia de acordo com\n\na modalidade de utiliza\u00e7\u00e3o. No caso da tens\u00e3o, cada componente recebe o nome \u201csAB\u201d, sendo \n\nque A e B podem assumir os valores 1, 2 e 3 (correspondentes aos eixos coordenados X, Y e\n\nZ). De forma an\u00e1loga, na modalidade de deforma\u00e7\u00e3o cada componente do tensor recebe o\n\nnome \u201ceAB\u201d, sendo que A e B variam de 1 a 3.\n\nCada componente embute duas informa\u00e7\u00f5es de dire\u00e7\u00e3o, conforme defini\u00e7\u00e3o do tensor \n\nde segunda ordem. Por exemplo, na regi\u00e3o 1 da Figura 5.11, a componente e11 indica uma\n\ndeforma\u00e7\u00e3o normal atrav\u00e9s de um estiramento na dire\u00e7\u00e3o do eixo X do sistema de eixos\n\ncoordenados. Isto significa que a componente da deforma\u00e7\u00e3o considerada atua no plano YZ \n\nperpendicular ao eixo X (primeiro \u00edndice de e11) e, ao longo do plano, na dire\u00e7\u00e3o do mesmo\n\neixo (segundo \u00edndice de e11). Outro exemplo \u00e9 a componente e31. Esta indica uma\n\ndeforma\u00e7\u00e3o cisalhante que atua no plano XY perpendicular ao eixo Z (primeiro \u00edndice de e31) \n\ne na dire\u00e7\u00e3o do eixo X (segundo \u00edndice de e31). A deforma\u00e7\u00e3o resultante \u00e9 mostrada na regi\u00e3o\n\n3 da Figura 5.11. Para as componentes cisalhantes, o plano ao longo do qual as mesmas atuam\n\nest\u00e1 indicado na regi\u00e3o superior das barras de rolagem correspondentes. \n\nFun\u00e7\u00f5es geom\u00e9tricas e de visualiza\u00e7\u00e3o. A regi\u00e3o 2 da Figura 5.11 cont\u00e9m o conjunto de \n\nbot\u00f5es que controlam todas as funcionalidades do programa Tensor3D. Tais funcionalidades \n\nest\u00e3o agrupadas de acordo com sua categoria (geom\u00e9trica, gr\u00e1fica, etc.) e s\u00e3o reconhec\u00edveis\n\natrav\u00e9s de um label (nome) azul. Segue uma discuss\u00e3o sobre os grupos de bot\u00f5es dispon\u00edveis. \n\n83\n\n\n\nMode. Este seletor permite escolher entre as modalidades geom\u00e9tricas de tens\u00e3o e de\n\ndeforma\u00e7\u00e3o. V\u00e1rias funcionalidades do programa s\u00e3o influenciadas pela modalidade de\n\ntrabalho. Em primeiro lugar os eixos principais s\u00e3o identificados com nomes diferentes de \n\nacordo com a modalidade. Al\u00e9m disto, os valores iniciais das componentes do tensor variam\n\nde forma adequada. Outra funcionalidade afetada diz respeito \u00e0 visualiza\u00e7\u00e3o do c\u00edrculo de \n\nMohr e ser\u00e1 descrita mais adiante. A Figura 5.12a mostra um exemplo de visualiza\u00e7\u00e3o de uma \n\nesfera deformada em modalidade de tens\u00e3o. Al\u00e9m do elips\u00f3ide, s\u00e3o exibidos os eixos \n\nprincipais de tens\u00e3o, \u201cs1\u201d, \u201cs2\u201d e \u201cs3\u201d, que neste exemplo n\u00e3o possuem a mesma orienta\u00e7\u00e3o \n\nque os eixos coordenados XYZ. J\u00e1 a Figura 5.12b mostra um cubo (com c\u00edrculos desenhados \n\nem cada face) em modalidade de deforma\u00e7\u00e3o usando as mesmas componentes do tensor da \n\nfigura anterior. Os eixos principais s\u00e3o agora denotados pelos s\u00edmbolos \u201ce1\u201d \u201ce2\u201d e \u201ce3\u201d. O \n\nelips\u00f3ide semitransparente no centro do objeto mostra graficamente a entidade da\n\ndeforma\u00e7\u00e3o.\n\n(b)(a)\n\nFigura 5.12 \u2013 Utiliza\u00e7\u00e3o do programa Tensor3D em modalidade de tens\u00e3o (a) e deforma\u00e7\u00e3o (b). Para deformar\nos objetos visualizados foram modificadas tanto as componentes normais como as cisalhantes do tensor de\ntens\u00e3o / deforma\u00e7\u00e3o.\n\nFigura 5.13 \u2013 Deforma\u00e7\u00e3o de uma esfera por cisalhamento simples. O resultado da deforma\u00e7\u00e3o \u00e9 um elips\u00f3ide.\nO cisalhamento ocorreu no plano XY perpendicular ao eixo Z e na dire\u00e7\u00e3o do eixo X. Para tanto, a componente\ne31 do tensor foi modificada de 0 para 0.515.\n\n84\n\n\n\nObject. Permite selecionar objetos predefinidos que ser\u00e3o deformados de acordo com \n\nas componentes do tensor. \u00c9 poss\u00edvel selecionar uma esfera cuja deforma\u00e7\u00e3o resultar\u00e1 em um\n\nelips\u00f3ide (Figuras 5.12a e 5.13); uma \u201cestrela\u201d, isto \u00e9, um conjunto de objetos lineares com \n\ndiferentes orienta\u00e7\u00f5es iniciais (Figura 5.14); um cubo cujas faces s\u00e3o grades formadas por \n\nfeixes de linhas paralelas com \u00e2ngulos de 90 graus (Figura 5.15); e um cubo com c\u00edrculos \n\ndesenhados em cada face (Figuras 5.12b e 5.16). \n\nAl\u00e9m dos objetos diretamente selecion\u00e1veis na interface gr\u00e1fica, existem numerosos\n\nmodelos que podem ser lidos a partir do disco. Tais objetos, armazenados no formato padr\u00e3o\n\nASCII do VTK (se\u00e7\u00e3o 3.4.4) podem ser carregados utilizando o primeiro bot\u00e3o \u00e0 esquerda\n\ncom o desenho de um disquete magn\u00e9tico (Figura 5.11). Exemplos de objetos prontos s\u00e3o um\n\nfeixe de planos paralelos (Figura 5.17) e o modelo de uma concha (Figura 5.18). \n\nObjetos deformados podem tamb\u00e9m ser gravados no disco, sendo poss\u00edvel, por\n\nexemplo, salvar resultados intermedi\u00e1rios de um processo deformacional para gerar \n\nanima\u00e7\u00f5es, ou aplicar diferentes tipos de deforma\u00e7\u00e3o de maneira incremental. Para tanto, \u00e9 \n\nsuficiente selecionar o segundo bot\u00e3o \u00e0 esquerda com o desenho do disquete. Os objetos \n\nsalvos podem ser relidos e novamente deformados.\n\nA possibilidade de deformar objetos lidos no formato do VTK proporciona um\n\nelevado grau de flexibilidade ao programa Tensor3D, j\u00e1 que modelos advindos de diferentes \n\nambientes de modelagem geom\u00e9trica podem ser importados (pr\u00e9via convers\u00e3o entre os \n\nformatos). Um exemplo \u00e9 representado pelos modelos digitais gerados com o programa\n\nGOCAD, que ser\u00e3o ilustrados na se\u00e7\u00e3o 5.9.6. \n\n A se\u00e7\u00e3o Object cont\u00e9m tamb\u00e9m algumas funcionalidades destinadas a controlar as\n\npropriedades de visualiza\u00e7\u00e3o do objeto deformado. O bot\u00e3o Wireframe ativa / desativa a \n\nvisualiza\u00e7\u00e3o da malha vazada do objeto, independente de sua representa\u00e7\u00e3o de superf\u00edcie \n\n(Figura 5.19). J\u00e1 a barra Opacity permite selecionar o \u00edndice de opacidade da representa\u00e7\u00e3o de\n\nsuperf\u00edcie do objeto. A sele\u00e7\u00e3o varia entre os valores 0 (objeto totalmente transparente) e 1\n\n(objeto totalmente opaco). Esta fun\u00e7\u00e3o \u00e9 extremamente \u00fatil quando h\u00e1 necessidade de se\n\nvisualizar detalhes internos ao modelo (Figura 5.20).\n\nPor fim, o bot\u00e3o Bbox exibe a caixa 3D que envolve o modelo (Bounding Box). Trata-\n\nse de um paralelep\u00edpedo cujos limites correspondem \u00e0s coordenadas m\u00ednimas e m\u00e1ximas dos\n\npontos do objeto. A caixa sofre deforma\u00e7\u00e3o junto com o modelo e a observa\u00e7\u00e3o de sua \n\nmudan\u00e7a de forma permite obter uma indica\u00e7\u00e3o visual da intensidade da deforma\u00e7\u00e3o sofrida \n\npelo objeto original (Figura 5.21). \n\n85\n\n\n\nFigura 5.14 \u2013 Deforma\u00e7\u00e3o de uma \u201cestrela\u201d por cisalhamento simples. O cisalhamento \u00e9 o mesmo considerado\nna Figura anterior. O objeto inicial \u00e9 constitu\u00eddo de um conjunto de linhas formando \u00e2ngulos de 45 graus.\n\nFigura 5.16 \u2013 Deforma\u00e7\u00e3o de um cubo por cisalhamento simples. O objeto inicial \u00e9 um cubo cujas faces s\u00e3o\nc\u00edrculos que se tornam elipses ap\u00f3s a deforma\u00e7\u00e3o. Este objeto \u00e9 \u00fatil para observar a deforma\u00e7\u00e3o ao longo dos \nplanos cinem\u00e1ticos.\n\nFigura 5.15 \u2013 Deforma\u00e7\u00e3o de um cubo por cisalhamento simples. O objeto inicial possui faces contendo dois\nfeixes de linhas paralelas, com \u00e2ngulo de 90 graus. Este objeto \u00e9 interessante para estudar a varia\u00e7\u00e3o de \u00e2ngulo\nentre as linhas ap\u00f3s a deforma\u00e7\u00e3o.\n\n86\n\n\n\nFigura 5.17 \u2013 Deforma\u00e7\u00e3o de um feixe de planos por cisalhamento simples. O objeto inicial \u00e9 constitu\u00eddo de tr\u00eas\nplanos paralelos entre si e perpendiculares ao eixo Z. A deforma\u00e7\u00e3o deste objeto mostra claramente que o \ncisalhamento ocorreu no plano XY e na dire\u00e7\u00e3o do eixo X (deslocamento do primeiro e terceiro planos).\n\nFigura 5.18 \u2013 Deforma\u00e7\u00e3o do modelo digital de uma concha (classe Cephalopoda, subclasse Nautiloidea) por\ncisalhamento simples. O modelo foi gerado analiticamente. O cisalhamento ocorreu no plano XY e na dire\u00e7\u00e3o\nnegativa do eixo Y. \n\nFigura 5.20 \u2013 Cubo semitransparente deformado\n(em azul claro) junto com seu elips\u00f3ide de\ndeforma\u00e7\u00e3o (em roxo). \n\nFigura 5.19 \u2013 Visualiza\u00e7\u00e3o de um elips\u00f3ide de\ndeforma\u00e7\u00e3o com a modalidade Wireframe\ndesativada.\n\n87\n\n\n\nFigura 5.21 \u2013 Deforma\u00e7\u00e3o de uma dobra por cisalhamento simples. O modelo foi gerado analiticamente. O \ncisalhamento ocorreu no plano XY e na dire\u00e7\u00e3o negativa do eixo X. A varia\u00e7\u00e3o de forma da caixa de limites\nmostra a intensidade da deforma\u00e7\u00e3o ocorrida.\n\nFigura 5.22 \u2013 Cisalhamento simples de tr\u00eas planos paralelos entre si e perpendiculares ao eixo Z. A deforma\u00e7\u00e3o\nocorreu no plano XY e na dire\u00e7\u00e3o negativa do eixo Y. A esfera em roxo (esquerda) sinaliza o estado \nindeformado e torna-se um elips\u00f3ide ao final do processo.\n\n Sphere. Esta se\u00e7\u00e3o cont\u00e9m bot\u00f5es para controlar a visualiza\u00e7\u00e3o de uma esfera \n\ndeformada junto com o objeto selecionado. Isto providencia uma informa\u00e7\u00e3o do n\u00edvel de\n\ndeforma\u00e7\u00e3o do objeto principal, al\u00e9m de indicar as dire\u00e7\u00f5es de estiramento / encurtamento\n\nm\u00e1ximos (elips\u00f3ide de deforma\u00e7\u00e3o). A utiliza\u00e7\u00e3o de uma esfera deformada \u00e9 tamb\u00e9m\n\nimportante para aferir o n\u00edvel de deforma\u00e7\u00e3o sofrido por objetos cujo estado indeformado n\u00e3o \n\nseja facilmente identific\u00e1vel por simples observa\u00e7\u00e3o (Figura 5.24). \n\nA esfera \u00e9 exibida em roxo. O bot\u00e3o Visible ativa / desativa sua exibi\u00e7\u00e3o. O bot\u00e3o \n\nWireframe permite visualizar a malha vazada da esfera. J\u00e1 o bot\u00e3o Fraction controla suas \n\ndimens\u00f5es como fra\u00e7\u00e3o do tamanho do objeto principal. Por fim, o bot\u00e3o Opacity controla o\n\n88\n\n\n\n\u00edndice de opacidade da esfera. As Figuras 5.11, 5.20, 5.22 e 5.24 mostram exemplos de \n\nvisualiza\u00e7\u00e3o da esfera deformada.\n\nAxes. Esta se\u00e7\u00e3o controla a visualiza\u00e7\u00e3o dos eixos coordenados XYZ e dos eixos\n\nprincipais do tensor, tanto em modalidade de tens\u00e3o como de deforma\u00e7\u00e3o. O bot\u00e3o Visible\n\nhabilita / desabilita a exibi\u00e7\u00e3o de todos os eixos. J\u00e1 com a barra de rolagem Fraction \u00e9 \n\nposs\u00edvel modificar o comprimento e espessura dos eixos relativamente \u00e0s dimens\u00f5es do objeto \n\na ser deformado. O tamanho das anota\u00e7\u00f5es dos eixos (\u201cX\u201d, \u201cY\u201d, \u201cZ\u201d, etc.) em rela\u00e7\u00e3o ao \n\nobservador \u00e9 tamb\u00e9m afetado. Esta funcionalidade \u00e9 \u00fatil quando for necess\u00e1rio visualizar\n\nobjetos com escalas diferentes.\n\n Planes. Conjunto de bot\u00f5es utilizados \n\npara visualizar planos coordenados \n\nsemitransparentes XY, YZ e XZ (Figura 5.23).\n\nFigura 5.23 \u2013 Visualiza\u00e7\u00e3o combinada de uma\nesfera deformada e dos tr\u00eas planos coordenados\nsemitransparentes.\n\n Rendering. Este grupo cont\u00e9m dois \n\nbot\u00f5es respons\u00e1veis pelo sombreamento do \n\nobjeto deformado de acordo com uma escala de\n\ncores que acompanha a varia\u00e7\u00e3o de cotas ao \n\nlongo do eixo Z. O bot\u00e3o ZColor, ativa / \n\ndesativa esta modalidade de visualiza\u00e7\u00e3o. O\n\nbot\u00e3o ColorBar exibe a legenda que mapeia a \n\nvaria\u00e7\u00e3o de cotas para a escala de cores. A\n\nFigura 5.24 mostra um exemplo de utiliza\u00e7\u00e3o\n\ndesta modalidade.\n\nFigura 5.24 \u2013 Cisalhamento simples (plano XY, dire\u00e7\u00e3o negativa do eixo Y) de uma superf\u00edcie sint\u00e9tica (gerada\nusando valores aleat\u00f3rios), sombreada de acordo com uma escala de cores, do azul para o vermelho, que\nacompanha a varia\u00e7\u00e3o topogr\u00e1fica ao longo do eixo Z. \u00c9 tamb\u00e9m vis\u00edvel o elips\u00f3ide de deforma\u00e7\u00e3o\ncorrespondente.\n\n89\n\n\n\nTensor. Este grupo cont\u00e9m bot\u00f5es que controlam as componentes num\u00e9ricas do tensor \n\nde tens\u00e3o / deforma\u00e7\u00e3o utilizado no programa.\n\nO primeiro bot\u00e3o, RESET, inicializa as componentes do tensor com valores nulos\n\n(modalidade de tens\u00e3o) ou com os valores da matriz identidade exibidos na rela\u00e7\u00e3o 5.16\n\n(modalidade de deforma\u00e7\u00e3o). Esta funcionalidade \u00e9 extremamente \u00fatil, pois permite restaurar\n\nsimultaneamente os valores originais de todas as componentes do tensor a qualquer momento.\n\n O bot\u00e3o Symmetric ativa a modalidade de simetria do tensor. Isto significa que a \n\naltera\u00e7\u00e3o de uma componente cisalhante ij ou eij (i  j) determinar\u00e1 automaticamente a \n\naltera\u00e7\u00e3o correspondente da componente ji ou eji, sim\u00e9trica em rela\u00e7\u00e3o \u00e0 diagonal principal.\n\nComo foi descrito anteriormente, a componente sim\u00e9trica possui os \u00edndices trocados. Por \n\nexemplo, utilizando um tensor sim\u00e9trico de deforma\u00e7\u00e3o, a modifica\u00e7\u00e3o do elemento e31\n\n(deforma\u00e7\u00e3o cisalhante no plano XY e na dire\u00e7\u00e3o do eixo X) para 0.455 determinar\u00e1 a \n\naltera\u00e7\u00e3o autom\u00e1tica do elemento sim\u00e9trico e13 (deforma\u00e7\u00e3o cisalhante no plano YZ e na \n\ndire\u00e7\u00e3o do eixo Z), e vice-versa. Em termos de interface gr\u00e1fica, o deslocamento da barra de\n\nrolagem associada a uma componente cisalhante do tensor determinar\u00e1 o movimento\n\nautom\u00e1tico da barra da componente sim\u00e9trica em rela\u00e7\u00e3o \u00e0 diagonal principal.\n\nAs Figuras 5.25 e 5.26 ilustram esta situa\u00e7\u00e3o para a modalidade de deforma\u00e7\u00e3o. O \n\ncaso da tens\u00e3o \u00e9 an\u00e1logo. A ativa\u00e7\u00e3o da modalidade de c\u00e1lculo do tensor sim\u00e9trico determina\n\na visualiza\u00e7\u00e3o dos eixos principais \u00ea1, \u00ea2 e \u00ea3 do elips\u00f3ide associado ao tensor. Isto decorre \n\ndas considera\u00e7\u00f5es da se\u00e7\u00e3o 5.8 a respeito da simetria de um tensor. Com efeito, os algoritmos\n\nde \u00e1lgebra linear utilizados no VTK para a determina\u00e7\u00e3o dos autovalores e autovetores de um \n\ntensor assumem que o mesmo seja sim\u00e9trico. Como os eixos principais de um elips\u00f3ide de \n\ntens\u00e3o / deforma\u00e7\u00e3o s\u00e3o paralelos aos autovetores do tensor correspondente (vide se\u00e7\u00e3o 5.7),\n\ns\u00f3 faz sentido visualiz\u00e1-los quando seja poss\u00edvel calcular tais autovetores, isto \u00e9, quando o \n\ntensor \u00e9 sim\u00e9trico.\n\nA visualiza\u00e7\u00e3o dos eixos principais de deforma\u00e7\u00e3o (nota\u00e7\u00e3o \u00ea1, \u00ea2 e \u00ea3) \u00e9 \n\nexemplificada nas Figuras 5.25 e 5.26. Na primeira, a modalidade de simetria do tensor \u00e9 \n\nativada antes de modificar qualquer componente. O programa exibe o valor num\u00e9rico do \n\ncomprimento dos tr\u00eas semi-eixos do elips\u00f3ide de deforma\u00e7\u00e3o associado ao tensor ( (1+e1), \n\n(1+e2) e (1+e3) na Figura). Todos os valores s\u00e3o unit\u00e1rios, j\u00e1 que ainda n\u00e3o ocorreu \n\ndeforma\u00e7\u00e3o alguma. A janela de visualiza\u00e7\u00e3o 3D (regi\u00e3o esquerda) mostra os eixos principais\n\ndo elips\u00f3ide de deforma\u00e7\u00e3o, \u201ce1\u201d, \u201ce2\u201d e \u201ce3\u201d. Tais eixos coincidem, em dire\u00e7\u00e3o e \n\ncomprimento, com os eixos coordenados X, Y e Z. Isto confirma graficamente que n\u00e3o h\u00e1 \n\ndeforma\u00e7\u00e3o cisalhante. \n\n90\n\n\n\nA Figura 5.26 mostra uma situa\u00e7\u00e3o diferente. A componente de tens\u00e3o cisalhante e31\n\nfoi modificada de 0 para 0.454 e a componente sim\u00e9trica, e13, assumiu o mesmo valor. O\n\nprograma calcula e exibe, em ordem decrescente, a informa\u00e7\u00e3o num\u00e9rica dos autovalores\n\nassociados a este tensor sim\u00e9trico: 1.454, 1 e 0.546. Tais autovalores correspondem ao \n\ncomprimento dos semi-eixos principais do elips\u00f3ide de deforma\u00e7\u00e3o associado ao tensor, e s\u00e3o \n\nexibidos na regi\u00e3o esquerda da janela. \u201ce1\u201d e \u201ce3\u201d, possuem agora uma nova orienta\u00e7\u00e3o, visto \n\nque a deforma\u00e7\u00e3o cisalhante implica rota\u00e7\u00e3o. Al\u00e9m disto, os semi-eixos principais possuem \n\num novo comprimento, sendo que o de e1 \u00e9 proporcional a 1.454 (estiramento, pois 1.454 > \n\n1), o comprimento de e2 \u00e9 proporcional a 1 (deforma\u00e7\u00e3o plana) e o de e3 \u00e9 proporcional a \n\n0.456 (encurtamento, pois 0.456 &lt;1). Devido \u00e0s dire\u00e7\u00f5es escolhidas para a deforma\u00e7\u00e3o (ao \n\nlongo do plano XZ), o eixo principal e2 continua paralelo ao eixo coordenado Y.\n\nA habilita\u00e7\u00e3o / desabilita\u00e7\u00e3o da modalidade de c\u00e1lculo sim\u00e9trico do tensor proporciona\n\ngrande flexibilidade. Contudo, tal funcionalidade deve ser utilizada com crit\u00e9rio. O uso de um\n\ntensor n\u00e3o sim\u00e9trico permite explorar todos os graus de liberdade poss\u00edveis na especifica\u00e7\u00e3o\n\nalg\u00e9brica de um tensor e possui maiores potencialidades em termos did\u00e1ticos. Por outro lado, \n\na necessidade de se trabalhar com situa\u00e7\u00f5es realistas estudadas em Geologia Estrutural\n\nconduz \u00e0 utiliza\u00e7\u00e3o de tensores sim\u00e9tricos. A escolha da modalidade de trabalho depender\u00e1 \n\ndas finalidades do estudo. \n\nUma importante funcionalidade da se\u00e7\u00e3o Tensor est\u00e1 associada ao bot\u00e3o Mohr, o qual \n\npermite visualizar os tr\u00eas c\u00edrculos de Mohr correspondentes aos planos formados pelos eixos \n\nprincipais de tens\u00e3o ou deforma\u00e7\u00e3o. O bot\u00e3o est\u00e1 inclu\u00eddo nesta se\u00e7\u00e3o pois os c\u00edrculos\n\nsomente podem ser desenhados na modalidade de c\u00e1lculo sim\u00e9trico do tensor. Com efeito, as \n\nequa\u00e7\u00f5es de determina\u00e7\u00e3o dos c\u00edrculos dependem dos valores de tens\u00f5es ou deforma\u00e7\u00f5es\n\nnormais m\u00e1xima, intermedi\u00e1ria e m\u00ednima. Estes valores, por sua vez, correspondem ao \n\ncomprimento dos semi-eixos dos elips\u00f3ides de tens\u00e3o ou deforma\u00e7\u00e3o e podem ser\n\ndeterminados apenas para tensores sim\u00e9tricos.\n\n91\n\n\n\n92\n\nFigura 5.25 \u2013 Deforma\u00e7\u00e3o de um cubo semitransparente usando um tensor sim\u00e9trico. Na estado indeformado, a\nativa\u00e7\u00e3o do bot\u00e3o Symmetric determina a exibi\u00e7\u00e3o de valores unit\u00e1rios para os comprimentos dos semi-eixos do\nelips\u00f3ide de deforma\u00e7\u00e3o (ret\u00e2ngulo vermelho) e a visualiza\u00e7\u00e3o destes em 3D. Inicialmente, os eixos principais\ndo elips\u00f3ide, e1e2e3, possuem mesma orienta\u00e7\u00e3o e comprimento que os eixos coordenados XYZ.\n\nFigura 5.26 \u2013 Deforma\u00e7\u00e3o de um cubo semitransparente usando um tensor sim\u00e9trico. A especifica\u00e7\u00e3o de uma\ndeforma\u00e7\u00e3o cisalhante ao longo do plano XZ (modifica\u00e7\u00e3o das componentes e31 e e13  do tensor) determina o\nc\u00e1lculo de novos valores para o comprimento dos semi-eixos do elips\u00f3ide e sua exibi\u00e7\u00e3o (ret\u00e2ngulo vermelho).\nGraficamente, esta nova situa\u00e7\u00e3o \u00e9 indicada pela modifica\u00e7\u00e3o de orienta\u00e7\u00e3o e comprimento dos eixos principais\ne1 e e3 do elips\u00f3ide associado ao tensor.\n\n\n\nOs tr\u00eas c\u00edrculos de Mohr s\u00e3o desenhados tanto para a modalidade de tens\u00e3o como para\n\na de deforma\u00e7\u00e3o. Em ambos os casos, o ponto de partida consiste nos tr\u00eas autovalores\n\ncalculados e exibidos pelo programa (Figuras 5.25 e 5.26).\n\nNo caso da tens\u00e3o, os tr\u00eas valores, ou tens\u00f5es normais m\u00e1xima, intermedi\u00e1ria e \n\nm\u00ednima 1, 2 e 3, s\u00e3o usados para calcular o centro e raio dos tr\u00eas c\u00edrculos de acordo com as\n\nindica\u00e7\u00f5es da se\u00e7\u00e3o 5.5 e a equa\u00e7\u00e3o 5.10. Os tr\u00eas c\u00edrculos s\u00e3o desenhados usando cores\n\ndiferentes, sendo o mais externo ( 1 3) vermelho, o da direita ( 1 2) vermelho claro e o da\n\nesquerda ( 2 3) cinza (Figura 5.27). \n\n^ ^ ^\n\n^^ ^ ^\n\n^ ^\n\nNo caso da deforma\u00e7\u00e3o, os tr\u00eas valores, ou elonga\u00e7\u00f5es (1+e1), (1+e2) e (1+e3), s\u00e3o \n\nusados de forma indireta para calcular o centro e raio dos tr\u00eas c\u00edrculos. Com efeito, utiliza-se\n\npara o c\u00e1lculo as elonga\u00e7\u00f5es quadr\u00e1ticas rec\u00edprocas da equa\u00e7\u00e3o 5.11 (se\u00e7\u00e3o 5.6). Trata-se do \n\ninverso do quadrado das elonga\u00e7\u00f5es. Portanto, a elonga\u00e7\u00e3o quadr\u00e1tica rec\u00edproca ( \u00b41)\n\ncorrespondente ao semi-eixo maior do elips\u00f3ide (comprimento (1+e1)) ter\u00e1 valor m\u00ednimo, ao \n\npasso que para o semi-eixo menor (comprimento (1+e3)) seu valor ( \u00b43) ser\u00e1 m\u00e1ximo. Como\n\nno caso da tens\u00e3o, os tr\u00eas c\u00edrculos s\u00e3o desenhados usando cores distintas: vermelho ( \u00b43 \u00b41),\n\nvermelho claro ( \u00b43 \u00b42) e cinza ( \u00b42 \u00b41) (Figura 5.28). \n\n ViewPoint. Este grupo de bot\u00f5es permite selecionar visadas perpendiculares aos \n\nplanos coordenados XY, XZ e YZ. Existe tamb\u00e9m um bot\u00e3o, denominado Iso (representa\u00e7\u00e3o\n\nisom\u00e9trica), o qual posiciona o ponto de vista ao longo da dire\u00e7\u00e3o cujos pontos s\u00e3o \n\neq\u00fcidistantes dos eixos coordenados. (Figuras 5.21 e 5.25). \n\n Main. Se\u00e7\u00e3o destinada ao controle de execu\u00e7\u00e3o do programa. Atualmente, a \u00fanica \n\nfuncionalidade implementada \u00e9 o bot\u00e3o Exit que termina a execu\u00e7\u00e3o do Tensor3D.\n\n93\n\n\n\nFig. 5.27 \u2013 C\u00edrculos de Mohr para a tens\u00e3o representada graficamente pelo elips\u00f3ide azul. Os centros e raios dos\nc\u00edrculos s\u00e3o determinados usando o comprimento dos semi-eixos principais \u201cs1\u201d, \u201cs2\u201d e \u201cs3\u201d (valores no\nret\u00e2ngulo vermelho \u00e0 direita) do elips\u00f3ide de tens\u00e3o (esquerda).\n\n-\nFig. 5.28 \u2013 C\u00edrculos de Mohr para a deforma\u00e7\u00e3o de um cubo semitransparente. Os centros e raios dos c\u00edrculos\ns\u00e3o determinados usando o inverso do quadrado do comprimento dos semi-eixos principais \u201ce1\u201d, \u201ce2\u201d e \u201ce3\u201d\n(valores no ret\u00e2ngulo vermelho \u00e0 direita) do elips\u00f3ide de deforma\u00e7\u00e3o (esquerda).\n\n94\n\n\n\nJanela de visualiza\u00e7\u00e3o 3D. A regi\u00e3o 3 da Figura 5.11 e todas as figuras seguintes mostram o \n\nconte\u00fado de uma janela 3D de visualiza\u00e7\u00e3o inserida na por\u00e7\u00e3o esquerda da janela principal do\n\nprograma Tensor3D. Esta janela tem como objetivo exibir objetos deformados em 3D de \n\nacordo com as especifica\u00e7\u00f5es do usu\u00e1rio. As altera\u00e7\u00f5es realizadas nas componentes do tensor \n\ns\u00e3o instantaneamente exibidas sob a forma de uma nova deforma\u00e7\u00e3o do objeto selecionado.\n\nComo foi poss\u00edvel observar nas figuras anteriores, o programa visualiza os seguintes objetos: \n\n- Eixos coordenados globais. Adotou-se a conven\u00e7\u00e3o de utilizar a cor vermelha para o eixo \n\nX, amarela para o eixo Y e verde para o eixo Z. A anota\u00e7\u00e3o de cada eixo \u00e9 realizada \n\nusando seu s\u00edmbolo (X, Y ou Z), visualizado de forma a ser sempre leg\u00edvel pelo usu\u00e1rio \n\nindependente do ponto de vista selecionado. Em outras palavras, independente da \n\norienta\u00e7\u00e3o dos eixos, as anota\u00e7\u00f5es dos mesmos ser\u00e3o sempre mostradas de frente para o \n\nobservador.\n\n- Objeto principal. \u00c9 o objeto que ser\u00e1 deformado de acordo com as componentes do tensor. \n\n\u00c9 visualizado usando a cor azul. Normalmente, s\u00e3o exibidas duas representa\u00e7\u00f5es \n\nsimult\u00e2neas: uma superf\u00edcie e uma malha vazada (em cinza escuro), que real\u00e7a os \n\ncontornos e as caracter\u00edsticas morfol\u00f3gicas do modelo.\n\n- Elips\u00f3ide de deforma\u00e7\u00e3o (Figura 5.22). Trata-se de um objeto secund\u00e1rio, visualizado em\n\nroxo, que sugere visualmente a intensidade da deforma\u00e7\u00e3o do objeto selecionado, al\u00e9m\n\ndas dire\u00e7\u00f5es de estiramento / encurtamento m\u00e1ximos. No estado indeformado o elips\u00f3ide \n\nse reduz a uma esfera posicionada no centro do sistema de coordenadas.\n\n- Caixa de limites (Bounding Box, Figura 5.21). Trata-se de um paralelep\u00edpedo constru\u00eddo \n\nusando as coordenadas m\u00ednimas e m\u00e1ximas dos pontos do objeto, nas tr\u00eas dire\u00e7\u00f5es dos \n\neixos coordenados. Este objeto, cujas arestas s\u00e3o pretas, sofre a deforma\u00e7\u00e3o junto com o \n\nmodelo principal. Sua exibi\u00e7\u00e3o tamb\u00e9m permite obter uma informa\u00e7\u00e3o visual da \n\nintensidade da deforma\u00e7\u00e3o normal ou cisalhante ocorrida.\n\n- Eixos principais do tensor (Figuras 5.27 e 5.28). Trata-se dos semi-eixos maior,\n\nintermedi\u00e1rio e menor do elips\u00f3ide de tens\u00e3o ou deforma\u00e7\u00e3o associado ao tensor, de \n\nacordo com a modalidade selecionada na se\u00e7\u00e3o Mode. Na janela 3D, s\u00e3o denotados pelos \n\ns\u00edmbolos \u201cs1\u201d, \u201cs2\u201d e \u201cs3\u201d (tens\u00e3o) ou \u201ce1\u201d, \u201ce2\u201d e \u201ce3\u201d (deforma\u00e7\u00e3o). Sua orienta\u00e7\u00e3o\n\ndepende dos autovetores extra\u00eddos da matriz 3x3 do tensor, enquanto seu comprimento \u00e9 \n\nproporcional aos autovalores correspondentes. Na aus\u00eancia de tens\u00e3o ou deforma\u00e7\u00e3o \n\ncisalhante, estes eixos possuem a mesma orienta\u00e7\u00e3o que os eixos coordenados. Neste \n\n95\n\n\n\ncaso, seu comprimento depende apenas das componentes normais do tensor. Os eixos \n\nprincipais s\u00e3o exibidos somente na modalidade de simetria, ativada atrav\u00e9s do bot\u00e3o \n\nSymmetric.\n\nA janela 3D permite v\u00e1rios graus de intera\u00e7\u00e3o com o usu\u00e1rio. Estas funcionalidades\n\ns\u00e3o implementadas na classe vtkRenderWindowInteractor, ilustrada na se\u00e7\u00e3o 3.4.1. Atrav\u00e9s\n\ndo mouse, \u00e9 poss\u00edvel rotacionar, transladar e afastar / aproximar (zoom) o objeto visualizado. \n\nPara tanto utiliza-se, respectivamente, os bot\u00f5es esquerdo, central e direito. Caso haja apenas \n\ndois bot\u00f5es, o bot\u00e3o central poder\u00e1 ser emulado usando a tecla SHIFT e o bot\u00e3o esquerdo. As \n\nfun\u00e7\u00f5es de rota\u00e7\u00e3o, transla\u00e7\u00e3o e zoom s\u00e3o ativadas em propor\u00e7\u00e3o \u00e0 dist\u00e2ncia do ponteiro do \n\nmouse do centro da janela 3D. Por exemplo, a sele\u00e7\u00e3o do bot\u00e3o esquerdo quando o ponteiro \n\nestiver posicionado exatamente no centro da janela n\u00e3o produz rota\u00e7\u00e3o alguma. Afastando-se\n\ngradualmente o ponteiro do centro (e mantendo-se o bot\u00e3o pressionado), haver\u00e1 uma lenta \n\nrota\u00e7\u00e3o do objeto na dire\u00e7\u00e3o selecionada. Afastando-se o ponteiro at\u00e9 o limite da janela 3D, a \n\nvelocidade de rota\u00e7\u00e3o ser\u00e1 m\u00e1xima.\n\nAtrav\u00e9s do teclado, s\u00e3o ativadas outras funcionalidades. Destaca-se a tecla \u00b4w\u00b4, que \n\npermite visualizar todos os objetos da janela em modalidade Wireframe (malha vazada,\n\nFigura 3.1); \u00b4s\u00b4 que habilita a modalidade de superf\u00edcies sombreadas (Flat Shading, Figura \n\n3.2); \u00b4t\u00b4 e \u00b4j\u00b4 que controlam a sensibilidade do mouse quanto \u00e0 rota\u00e7\u00e3o do objeto; e \u00b4q\u00b4 ou \u00b4e\u00b4\n\nque terminam a execu\u00e7\u00e3o do programa.\n\n5.9.3 Estrutura do programa\n\nO funcionamento do programa Tensor ocorre em virtude de uma troca de informa\u00e7\u00f5es\n\nentre m\u00f3dulos (classes) do sistema VTK especializados na execu\u00e7\u00e3o de tarefas dedicadas: \n\nobten\u00e7\u00e3o de informa\u00e7\u00f5es do usu\u00e1rio, processamento dos dados obtidos, modifica\u00e7\u00e3o\n\ncorrespondente de entidades geom\u00e9tricas, visualiza\u00e7\u00e3o das mesmas, etc. O tr\u00e1fego de\n\ninforma\u00e7\u00f5es ocorre ao longo de um sistema de fluxos de dados (pipeline) que se inicia nas\n\nclasses respons\u00e1veis pela cria\u00e7\u00e3o / leitura do disco da geometria e topologia de objetos 3D, e \n\ntermina nas classes destinadas \u00e0 atualiza\u00e7\u00e3o do conte\u00fado da janela de visualiza\u00e7\u00e3o do\n\nprograma. Esta se\u00e7\u00e3o descreve as classes principais do VTK utilizadas para tanto, bem como\n\nsuas interconex\u00f5es.\n\nO diagrama de fluxo de informa\u00e7\u00f5es e interconex\u00e3o entre as classes utilizadas \u00e9 \n\nmostrado na Figura 5.29. Existem sete blocos de processamento principais, delimitados por \n\nlinhas azuis pontilhadas. Segue a descri\u00e7\u00e3o dos mesmos:\n\n96\n\n\n\n(1) Cria\u00e7\u00e3o e deforma\u00e7\u00e3o de objetos de acordo com informa\u00e7\u00f5es matem\u00e1ticas do tensor. Este\n\nbloco l\u00ea do disco as informa\u00e7\u00f5es geom\u00e9tricas e topol\u00f3gicas do objeto a ser deformado, al\u00e9m \n\nde criar os modelos 3D para a esfera acess\u00f3ria que se tornar\u00e1 um elips\u00f3ide e a caixa de limites\n\ndo objeto principal (Figuras 5.21 e 5.26). Objetos armazenados em disco s\u00e3o lidos pela classe \n\nvtkPolyDataReader, ao passo que a esfera \u00e9 criada atrav\u00e9s da classe vtkSphereSource. A\n\nrepresenta\u00e7\u00e3o interna de todos os objetos 3D \u00e9 armazenada na classe vtkPolyData (n\u00e3o\n\nrepresentada no diagrama da Figura 5.29, mas usada internamente), que \u00e9 o formato de troca \n\nde informa\u00e7\u00f5es entre vtkPolyDataReader / vtkSphereSource e a classe vtkTensorGlyph. Esta \n\nrealiza a deforma\u00e7\u00e3o dos objetos de acordo com a especifica\u00e7\u00e3o matem\u00e1tica de um tensor. Tal\n\nespecifica\u00e7\u00e3o ocorre definindo-se simplesmente um vetor (lista) de nove n\u00fameros em ponto \n\nflutuante (as componentes do tensor) na classe vtkFloatArray. Uma classe interm\u00e9diaria entre \n\nvtkFloatArray e vtkTensorGlyph \u00e9 vtkStructuredPoints, normalmente utilizada para armazenar\n\ninforma\u00e7\u00f5es volum\u00e9tricas, isto \u00e9, dados posicionados em malhas de intervalos regulares nas \n\ndire\u00e7\u00f5es X, Y e Z. Neste caso, considera-se como entrada da classe vtkTensorGlyph, um\n\nvolume composto por um \u00fanico ponto, localizado no centro do sistema de coordenadas \n\ncartesianas e contendo a informa\u00e7\u00e3o matricial das nove componentes escalares do tensor. \n\n A classe vtkTensorGlyph realiza a deforma\u00e7\u00e3o do objeto e sua sa\u00edda \u00e9 enviada para \n\ndois filtros distintos: vtkEctractEdges e vtkElevationFilter. O primeiro extrai as arestas do \n\nobjeto deformado para posterior visualiza\u00e7\u00e3o da malha vazada do mesmo. J\u00e1 \n\nvtkElevationFilter realiza um mapeamento entre a varia\u00e7\u00e3o de eleva\u00e7\u00e3o de coordenadas do \n\nobjeto (ao longo do eixo Z) e uma escala de cores predefinidas do azul para o vermelho.\n\nOutra inst\u00e2ncia da classe vtkTensorGlyph recebe as mesmas informa\u00e7\u00f5es tensoriais\n\narmazenadas em vtkStructuredPoints e a especifica\u00e7\u00e3o geom\u00e9trica / topol\u00f3gica de uma esfera \n\npara criar um elips\u00f3ide de deforma\u00e7\u00e3o. Por fim, uma terceira inst\u00e2ncia da classe \n\nvtkTensorGlyph recebe como entrada a caixa de limites (Bounding Box) do objeto lido do \n\ndisco, al\u00e9m das informa\u00e7\u00f5es tensoriais advindas de vtkStructuredPoints.A caixa de limites \u00e9 \n\ngerada pelo filtro vtkOutlineFilter, diretamente conectado \u00e0 classe de leitura\n\nvtkPolyDataReader. A classe vtkOutlineFilter cria um objeto poligonal correspondente ao \n\nBounding Box do modelo. A caixa, inicialmente um paralelep\u00edpedo, ser\u00e1 deformada de acordo \n\ncom as componentes do tensor.\n\n As classes vtkExtractEdges, vtkElevationFilter e vtkTensorGlyph (duas inst\u00e2ncias)\n\nenviam seu processamento para inst\u00e2ncias da classe vtkPolyDataMapper, que transformam as \n\ninforma\u00e7\u00f5es geom\u00e9tricas em primitivos gr\u00e1ficos a serem utilizados pelo hardware dedicado \n\n97\n\n\n\n(placa aceleradora), para visualiza\u00e7\u00e3o posterior. Em seguida, tais primitivos s\u00e3o repassados \n\npara inst\u00e2ncias da classe vtkActor, as quais definem as propriedades finais de visualiza\u00e7\u00e3o de \n\ncada objeto (cor, \u00edndice de opacidade, rela\u00e7\u00e3o com as fontes de luz, etc). Mais\n\nespecificamente, as propriedades dos objetos s\u00e3o definidas atrav\u00e9s de inst\u00e2ncias da classe \n\nvtkProperty (n\u00e3o representadas no diagrama), havendo uma inst\u00e2ncia para cada ator. Tal \n\ninst\u00e2ncia \u00e9 criada automaticamente pelo VTK, junto com o ator correspondente. \n\n(2) Cria\u00e7\u00e3o dos eixos coordenados. O sistema VTK possui uma classe pronta, vtkAxes, para \n\ncriar a representa\u00e7\u00e3o geom\u00e9trica de um sistema de eixos coordenados XYZ. Cada eixo recebe\n\numa cor distinta (vermelho para o eixo X, amarelo para o eixo Y e verde para o eixo Z).\n\nComo os eixos s\u00e3o representados por linhas, sua visualiza\u00e7\u00e3o pode ser prejudicada quando a \n\nc\u00e2mera n\u00e3o estiver posicionada pr\u00f3ximo das mesmas. Para resolver este problema,\n\nconstroem-se objetos cil\u00edndricos em volta dos eixos coordenados, que desta forma adquirem \n\numa apar\u00eancia s\u00f3lida (\u201ctubos\u201d) e s\u00e3o mais facilmente vis\u00edveis. A classe utilizada para tanto, \u00e9 \n\nvtkTubeFilter. Esta permite especificar a resolu\u00e7\u00e3o lateral dos cilindros (tubes), isto \u00e9 o\n\nn\u00famero de suas faces laterais. O programa Tensor3D usa oito faces laterais. Finalmente, as\n\ninforma\u00e7\u00f5es geom\u00e9tricas geradas para os eixos s\u00e3o repassadas para uma inst\u00e2ncia da classe \n\nvtkPolyDataMapper e em seguida \u00e9 criado o ator correspondente. \n\n(3) Cria\u00e7\u00e3o dos eixos principais do tensor. Os eixos principais do tensor, isto \u00e9, os semi-eixos\n\ndo elips\u00f3ide de tens\u00e3o / deforma\u00e7\u00e3o que possuem a mesma orienta\u00e7\u00e3o que os autovetores do \n\ntensor, constituem um sistema de coordenadas diferente do sistema global XYZ. Sua cria\u00e7\u00e3o \n\nn\u00e3o pode ser realizada atrav\u00e9s da classe vtkAxes, j\u00e1 que esta n\u00e3o permite orientar os eixos\n\nseparadamente em rela\u00e7\u00e3o os sistema global. Portanto, cada eixo foi criado atrav\u00e9s de uma\n\ninst\u00e2ncia da classe vtkLineSource. Esta define o ponto inicial (a origem do sistema de\n\ncoordenadas) e final de um segmento de linha no espa\u00e7o 3D. Inicialmente, quando n\u00e3o h\u00e1 \n\ndeforma\u00e7\u00e3o normal nem cisalhante especificadas no tensor do programa, os eixos principais \n\n\u201cs1\u201d, \u201cs2\u201d e \u201cs3\u201d ou \u201ce1\u201d, \u201ce2\u201d e \u201ce3\u201d, coincidem com os eixos coordenados XYZ (Figura \n\n5.25). Mas durante a execu\u00e7\u00e3o do programa, a orienta\u00e7\u00e3o dos eixos principais pode mudar\n\n(Figura 5.26), sendo necess\u00e1rio modificar o ponto final definido em cada inst\u00e2ncia de \n\nvtkLineSource. Tais segmentos de linha s\u00e3o transformados em cilindros como foi ilustrado no \n\ncaso do bloco (2), para os eixos coordenados, mas antes \u00e9 necess\u00e1rio realizar um \n\nredimensionamento das linhas criadas de acordo com o fator de escala utilizado no programa.\n\nPara tanto, a sa\u00edda da classe vtkLineSource \u00e9 enviada para a classe\n\n98\n\n\n\nvtkTransformPolyDataFilter, a qual permite realizar rota\u00e7\u00e3o, transla\u00e7\u00e3o e scaling de um \n\nobjeto vtkPolyData (no caso, os segmentos de linha dos eixos principais). A transforma\u00e7\u00e3o\n\nutilizada \u00e9 definida em uma classe separada, vtkTransform, que cont\u00e9m a matriz 4x4 a ser \n\nempregada. O redimensionamento aplicado aos eixos principais do tensor resulta em um\n\naumento de comprimento. O fator de escala para todos os eixos \u00e9 proporcional \u00e0s dimens\u00f5es\n\ndo modelo e pode ser modificado pelo usu\u00e1rio. \n\nOs eixos principais possuem cores distintas, ligeiramente mais escuras que as cores\n\nutilizadas para os eixos coordenados: vermelho para s1 / e1, amarelo para s2 / e2 e verde para \n\ns3 / e3.\n\nNovamente, ap\u00f3s a cria\u00e7\u00e3o dos cilindros em torno dos eixos (atrav\u00e9s de inst\u00e2ncias da \n\nclasse vtkTubeFilter), as informa\u00e7\u00f5es geom\u00e9trica s\u00e3o convertidas em primitivos gr\u00e1ficos \n\n(classe vtkPolyDataMapper) e s\u00e3o gerados tr\u00eas atores (vtkActor) para a visualiza\u00e7\u00e3o.\n\n(4) Cria\u00e7\u00e3o de anota\u00e7\u00f5es para os eixos coordenados. Como foi visto, a cada eixo coordenado\n\n\u00e9 associada uma cor espec\u00edfica. Al\u00e9m disto, a exibi\u00e7\u00e3o de uma letra (ou anota\u00e7\u00e3o: \u201cX\u201d, \u201cY\u201d e \n\n\u201cZ\u201d) na janela de visualiza\u00e7\u00e3o 3D permite a identifica\u00e7\u00e3o imediata de cada eixo (Figura 5.11 e \n\nseguintes). Para criar a representa\u00e7\u00e3o geom\u00e9trica das anota\u00e7\u00f5es dos eixos, foram utilizadas\n\ninst\u00e2ncias da classe vtkVectorText, a qual permite transformar facilmente strings de texto\n\n(seq\u00fc\u00eancias de caracteres) em objetos poligonais. \n\nUm problemas das anota\u00e7\u00f5es \u201cX\u201d, \u201cY\u201d e \u201dZ\u201d geradas pela classe vtkVectorText \u00e9 que \n\nsua orienta\u00e7\u00e3o \u00e9 fixa no espa\u00e7o tridimensional. Isto significa que modificando seu ponto de \n\nobserva\u00e7\u00e3o no espa\u00e7o, o usu\u00e1rio pode olhar \u201catr\u00e1s\u201d de cada anota\u00e7\u00e3o, j\u00e1 que a mesma \u00e9, na \n\nverdade, um objeto contido em um plano. A orienta\u00e7\u00e3o din\u00e2mica de cada anota\u00e7\u00e3o, de forma\n\nque a mesma exiba sempre a mesma face para o observador, \u00e9 realizada atrav\u00e9s da classe\n\nvtkFollower, que substitui a classe vtkActor.\n\n(5) Cria\u00e7\u00e3o de anota\u00e7\u00f5es para os eixos principais do tensor. O conjunto de classes utilizadas\n\nneste bloco \u00e9 o mesmo que foi descrito no bloco anterior. As strings de anota\u00e7\u00e3o utilizadas \n\npara os eixos principais de tens\u00e3o s\u00e3o \u201cs1\u201d, \u201cs2\u201d e \u201cs3\u201d (Figura 5.27), enquanto para os eixos \n\nprincipais de deforma\u00e7\u00e3o as anota\u00e7\u00f5es s\u00e3o \u201ce1\u201d, \u201ce2\u201d e \u201ce3\u201d (Figura 5.28).\n\n99\n\n\n\nF\nig\n\nur\na\n\n5.\n29\n\n\u2013\nD\n\nia\ngr\n\nam\na \n\nde\n i\n\nnt\ner\n\nco\nne\n\nx\u00e3\no\n\nde\n c\n\nla\nss\n\nes\n d\n\no\np\n\nro\ng\n\nra\nm\n\na\nT\n\ne\nn\n\nso\nr3\n\nD\n. \n\nA\ns \n\nca\nix\n\nas\n p\n\nre\nta\n\ns \nin\n\ndi\nca\n\nm\n a\n\ns \ncl\n\nas\nse\n\ns \ndo\n\nV\nT\n\nK\n u\n\nti\nli\n\nza\nda\n\ns.\n C\n\nla\nss\n\nes\n c\n\nom\n f\n\nun\ndo\n\n c\nin\n\nza\n s\n\n\u00e3o\n f\n\non\nte\n\ns\no\n\nu\nd\n\nes\nti\n\nn\no\n\ns \nfi\n\nn\nai\n\ns \nd\n\ne \nin\n\nfo\nrm\n\na\u00e7\n\u00f5\n\nes\n t\n\nra\nfe\n\ng\nan\n\nd\no\n\n n\no\n\np\nip\n\ne\nli\n\nn\ne\n.\n\nA\ns \n\nse\nta\n\ns\nv\n\ner\nm\n\nel\nh\n\nas\n m\n\no\nst\n\nra\nm\n\n a\n i\n\nn\nte\n\nrc\no\n\nn\nex\n\n\u00e3o\n e\n\n a\n d\n\nir\ne\u00e7\n\n\u00e3o\nd\n\no\n \n\nfl\nu\n\nx\no\n\nd\ne \n\nin\nfo\n\nrm\na\u00e7\n\n\u00f5\nes\n\n \nen\n\ntr\ne \n\nas\n \n\ncl\nas\n\nse\ns.\n\nO\ns\n\nb\nlo\n\nco\ns\n\nde\nli\n\nm\nit\n\nad\nos\n\n p\nor\n\n l\nin\n\nha\ns\n\np\non\n\nti\nlh\n\nad\nas\n\n a\nzu\n\nis\n i\n\nde\nnt\n\nif\nic\n\nam\n o\n\ns\ngr\n\nup\nos\n\nde\n c\n\nla\nss\n\nes\n r\n\nes\npo\n\nns\n\u00e1v\n\nei\ns \n\npe\nla\n\n c\nri\n\na\u00e7\n\u00e3o\n\n d\nos\n\n o\nbj\n\net\nos\n\npr\nin\n\nci\npa\n\nis\n e\n\n s\nua\n\n v\nis\n\nua\nli\n\nza\n\u00e7\u00e3\n\no.\n\n\n\n(6) Cria\u00e7\u00e3o de planos semitransparentes. Os tr\u00eas planos coordenados XY, XZ e YZ, \n\nmostrados na Figura 5.23, foram criados utilizando tr\u00eas inst\u00e2ncias da classe vtkPlaneSource.\n\nEsta classe permite especificar a orienta\u00e7\u00e3o de um plano no espa\u00e7o atrav\u00e9s de seu vetor \n\nnormal. O vetor normal ao plano XY \u00e9 (0, 0, 1), o eixo Z. O vetor normal ao plano XZ \u00e9 (0, 1, \n\n0), isto \u00e9, o eixo Y. Por fim, o vetor normal ao plano YZ \u00e9 (1, 0, 0), o eixo X. A classe \n\nvtkPlaneSource gera a representa\u00e7\u00e3o geom\u00e9trica de um plano (na estrutura da classe \n\nvtkPolydata) a partir de sua defini\u00e7\u00e3o matem\u00e1tica. A opacidade de cada plano coordenado foi \n\ndefinida utilizando m\u00e9todos espec\u00edficos da classe vtkProperty associada ao ator \n\ncorrespondente. Adotou-se uma opacidade de 30%, isto \u00e9, uma transpar\u00eancia de 70%. \n\n(7) Visualiza\u00e7\u00e3o 3D. Os blocos de processamento descritos at\u00e9 agora terminam com a cria\u00e7\u00e3o \n\nde \u201catores\u201d (se\u00e7\u00e3o 3.4.1), que devem ser exibidos em tr\u00eas dimens\u00f5es. Como mostra a Figura \n\n5.29, as informa\u00e7\u00f5es contidas em cada ator confluem para uma importante classe, chamada \n\nvtkRenderer. Esta cria uma cena 3D a partir da defini\u00e7\u00e3o geom\u00e9trica de atores, propriedades \n\nde visualiza\u00e7\u00e3o dos mesmos, posi\u00e7\u00e3o e propriedades da c\u00e2mera (ponto de observa\u00e7\u00e3o do \n\nusu\u00e1rio), posi\u00e7\u00e3o e propriedades das fontes de ilumina\u00e7\u00e3o definidas, etc. Todas estas \n\ninforma\u00e7\u00f5es s\u00e3o gerenciadas e integradas de forma a obter a visualiza\u00e7\u00e3o final. \n\n A cena criada \u00e9 exibida em uma janela gr\u00e1fica atrav\u00e9s da classe vtkRenderWindow,\n\nque cont\u00e9m todos os m\u00e9todos e atributos necess\u00e1rios para gerenciar janelas gr\u00e1ficas no \n\nsistema operacional escolhido. Por fim, a interatividade proporcionada pelo programa \n\nTensor3D, isto \u00e9, a possibilidade de modificar a cena exibida interagindo com o teclado ou \n\nmouse, \u00e9 implementada pela classe vtkRenderWindowInteractor. Esta \u00e9 um gerenciador de \n\neventos, que aguarda comandos do usu\u00e1rio e invoca m\u00e9todos de atualiza\u00e7\u00e3o do pipeline de\n\nfluxo de dados (na dire\u00e7\u00e3o contr\u00e1ria \u00e0 das setas que confluem para a classe vtkRenderer), \n\nprovocando a redefini\u00e7\u00e3o do conte\u00fado da janela 3D de visualiza\u00e7\u00e3o.\n\n\n\nF\nig\n\nu\nra\n\n 5\n.3\n\n0\n \u2013\n\n D\nia\n\ng\nra\n\nm\na\n\nd\ne\n\nin\nte\n\nrc\no\n\nn\nex\n\n\u00e3o\n d\n\ne\ncl\n\nas\nse\n\ns \nd\n\no\n m\n\n\u00f3\nd\n\nu\nlo\n\n p\nar\n\na\nv\n\nis\nu\n\nal\niz\n\na\u00e7\n\u00e3o\n\n d\no\n\ns \nc\u00ed\n\nrc\nu\n\nlo\ns \n\nd\ne \n\nM\no\n\nh\nr.\n\n\n\n(8) O subconjunto de classes do VTK destinado \u00e0 exibi\u00e7\u00e3o dos c\u00edrculos de Mohr representa \n\num pipeline separado de dados (Figura 5.30), cujo destino final \u00e9 uma outra janela gr\u00e1fica. O \n\nsistema VTK possui uma classe completa para a cria\u00e7\u00e3o de gr\u00e1ficos 2D, vtkXYPlotActor.\n\nContudo este mestrando optou pela constru\u00e7\u00e3o ex novo do diagrama de Mohr para ter um \n\nmaior controle sobre suas componentes. O resultado, exibido nas janelas das Figuras 5.27 e \n\n5.28, \u00e9 uma visualiza\u00e7\u00e3o em planta (no plano XY do sistema global de coordenadas) de \n\nobjetos que na verdade s\u00e3o tridimensionais. Na Figura 5.30, os blocos delimitados por linhas \n\nazuis pontilhadas agrupam as classes respons\u00e1veis pela cria\u00e7\u00e3o das principais componentes do \n\ngr\u00e1fico.\n\n(8.1) Eixos coordenados. Os eixos foram constru\u00eddos usando duas inst\u00e2ncias da classe \n\nvtkLineSource, definindo-se a representa\u00e7\u00e3o geom\u00e9trica de uma linha horizontal e outra \n\nvertical. Os eixos do gr\u00e1fico correspondem \u00e0s informa\u00e7\u00f5es de tens\u00e3o / deforma\u00e7\u00e3o normal \n\n(eixo horizontal) e cisalhante (eixo vertical), respectivamente. \n\n(8.2) Marcas dos eixos. Trata-se de um conjunto de marcas utilizadas para indicar valores ao \n\nlongo dos eixos do diagrama. As marcas possuem a apar\u00eancia de pequenos quadrados, mas na \n\nverdade estes s\u00e3o cubos criados usando inst\u00e2ncias da classe vtkCubeSource. A Figura 5.30 \n\nexibe apenas duas inst\u00e2ncias (uma horizontal e outra vertical) por simplicidade de \n\nrepresenta\u00e7\u00e3o, mas ao todo foram utilizadas 25 inst\u00e2ncias para cada eixo, sendo que os \n\nintervalos de valores representados variam de -6.0 a 6.0, com incremento de 0.5 unidades. Os \n\ncubos foram posicionados corretamente ao longo dos eixos utilizando m\u00e9todos pr\u00f3prios da \n\nclasse vtkCubeSource.\n\n(8.3) Anota\u00e7\u00f5es dos eixos. As anota\u00e7\u00f5es s\u00e3o indica\u00e7\u00f5es de valores associadas \u00e0s v\u00e1rias \n\nmarcas posicionadas sobre os eixos. Sua representa\u00e7\u00e3o poligonal foi criada usando a classe \n\nvtkVectorText. O texto criado \u00e9 sempre posicionado no centro do sistema de coordenadas, o \n\nque levou \u00e0 necessidade de se realizar uma transla\u00e7\u00e3o do mesmo para efetuar seu alinhamento \n\ncom as marcas dos eixos. A transla\u00e7\u00e3o \u00e9 definida atrav\u00e9s da classe vtkTransform, e \u00e9 realizada \n\npor inst\u00e2ncias de vtkTransformPolyDataFilter, que reposicionam adequadamente as \n\nanota\u00e7\u00f5es das marcas. A Figura 5.30 mostra apenas duas inst\u00e2ncias da classe vtkVectorText,\n\nmas na verdade foram utilizadas 49 inst\u00e2ncias, uma para cada marca. \n\n\n\n(8.4) C\u00edrculos de Mohr. Os tr\u00eas c\u00edrculos do diagrama foram constru\u00eddos usando inst\u00e2ncias da \n\nclasse vtkDiskSource,  a qual especifica o modelo poligonal de um disco (c\u00edrculo preenchido) \n\nque possui dois raios, um interno e outro externo. Quando o valor dos raios coincidir, o disco \n\nconstru\u00eddo \u00e9 totalmente preenchido, ao passo que um raio interno menor que o externo \n\npermite criar um \u201cburaco\u201d circular no disco, sendo assim poss\u00edvel modelar apenas uma\n\ncircunfer\u00eancia de espessura vari\u00e1vel. Esta foi a t\u00e9cnica utilizada para construir os c\u00edrculos de \n\nMohr. A classe vtkDiskSource possui m\u00e9todos para especificar o tamanho dos discos, mas n\u00e3o\n\nsua posi\u00e7\u00e3o. Mais uma vez, foi necess\u00e1rio efetuar transla\u00e7\u00f5es atrav\u00e9s das classes \n\nvtkTransform e vtkTransformPolyDataFilter. As posi\u00e7\u00f5es e raios dos c\u00edrculos de Mohr \n\ndependem do comprimento dos semi-eixos do elips\u00f3ide de tens\u00e3o / deforma\u00e7\u00e3o e s\u00e3o\n\nmodificados dinamicamente a cada altera\u00e7\u00e3o das componentes do tensor na janela do \n\nprograma Tensor3D.\n\n(8.5) Composi\u00e7\u00e3o de objetos. Como \u00e9 poss\u00edvel verificar na Figura 5.30, de todas as entidades \n\nmencionadas at\u00e9 agora, apenas os tr\u00eas c\u00edrculos de Mohr s\u00e3o processados at\u00e9 o n\u00edvel de atores,\n\ncriando-se tr\u00eas diferentes inst\u00e2ncias da classe vtkActor. Os demais objetos (eixos \n\ncoordenados, marcas ao longo dos mesmos, anota\u00e7\u00f5es num\u00e9ricas correspondentes) n\u00e3o \n\npossuem atores. A raz\u00e3o disto \u00e9 que todos estes objetos foram juntados em um \u00fanico modelo.\n\nA composi\u00e7\u00e3o \u00e9 realizada pela classe vtkAppendPolyData, que aceita m\u00faltiplas inst\u00e2ncias da\n\nclasse vtkPolyData como entrada e gera apenas uma inst\u00e2ncia na sa\u00edda. Isto permitiu criar um\n\n\u00fanico ator para todos os objetos de posi\u00e7\u00e3o est\u00e1tica (eixos, marcas e anota\u00e7\u00f5es), j\u00e1 que os\n\nmesmos n\u00e3o sofrem modifica\u00e7\u00f5es de escala ou transla\u00e7\u00e3o ao se alterar as componentes do\n\ntensor. A utiliza\u00e7\u00e3o da classe vtkAppendPolyData simplifica a modelagem de numerosas\n\nentidades geom\u00e9tricas, n\u00e3o sendo necess\u00e1rio criar dezenas de atores diferentes. Isto\n\nproporciona economia de utiliza\u00e7\u00e3o de mem\u00f3ria. O pre\u00e7o a ser pago \u00e9 a impossibilidade de \n\nmodificar separadamente as propriedades geom\u00e9tricas dos objetos. Por isto foi necess\u00e1rio\n\ndefinir atores distintos para os c\u00edrculos de Mohr, cuja escala e posi\u00e7\u00e3o s\u00e3o vari\u00e1veis.\n\n(8.6) Visualiza\u00e7\u00e3o. As informa\u00e7\u00f5es geom\u00e9tricas e de visualiza\u00e7\u00e3o dos atores (c\u00edrculos de\n\nMohr e composi\u00e7\u00e3o de eixos, marcas e anota\u00e7\u00f5es num\u00e9ricas) confluem, no diagrama da \n\nFigura 5.30, para a classe vtkRenderer, que organiza todos os dados e cria uma imagem que\n\nser\u00e1 exibida dentro de uma janela gr\u00e1fica (vtkRenderWindow). A por\u00e7\u00e3o do pipeline destinada\n\n\u00e0 visualiza\u00e7\u00e3o n\u00e3o inclui a classe vtkRenderWindowInteractor, j\u00e1 que n\u00e3o \u00e9 necess\u00e1ria a \n\nintera\u00e7\u00e3o do usu\u00e1rio com o gr\u00e1fico gerado. \n\n104\n\n\n\nAl\u00e9m do conjunto de classes da biblioteca VTK ilustradas at\u00e9 agora, o programa\n\nTensor3D conta com todas as funcionalidades da linguagem de programa\u00e7\u00e3o Tcl/Tk. Na \n\nverdade, trata-se de um programa escrito nesta linguagem, que importa as funcionalidades do \n\nVTK na forma de m\u00f3dulos ou bibliotecas. O m\u00f3dulo do VTK n\u00e3o foi escrito em Tcl/Tk, pois\n\nseus algoritmos de computa\u00e7\u00e3o gr\u00e1fica precisam usufruir da otimiza\u00e7\u00e3o de execu\u00e7\u00e3o\n\nproporcionada pela utiliza\u00e7\u00e3o de c\u00f3digo compilado (bin\u00e1rio). Apesar disto, tais \n\nfuncionalidades podem ser facilmente ativadas e manipuladas a partir de programas em\n\nTcl/Tk, atrav\u00e9s de uma biblioteca de interface (ou wrapping) que acompanha o VTK. \n\nA linguagem Tcl/Tk provou ser uma ferramenta extremamente flex\u00edvel para o \n\ndesenvolvimento de aplicativos. Contudo, por ser uma linguagem interpretada (cujas \n\ninstru\u00e7\u00f5es s\u00e3o convertidas para c\u00f3digo bin\u00e1rio passo a passo. Vide se\u00e7\u00e3o 3.4.3), houve, \n\ndurante o desenvolvimento do programa Tensor3D, uma preocupa\u00e7\u00e3o constante em rela\u00e7\u00e3o \u00e0 \n\nvelocidade de processamento num\u00e9rico realizado pelo aplicativo. Tal processamento est\u00e1 \n\nrelacionado essencialmente ao c\u00e1lculo dos autovalores e autovetores da matriz 3x3 do tensor \n\nmatem\u00e1tico embutido no programa, para determinar a orienta\u00e7\u00e3o e comprimento dos eixos\n\nprincipais de tens\u00e3o / deforma\u00e7\u00e3o. Para cada modifica\u00e7\u00e3o nas componentes do tensor, tais\n\nc\u00e1lculos s\u00e3o executados quatro vezes. As primeiras tr\u00eas ocorrem internamente \u00e0s inst\u00e2ncias da\n\nclasse vtkTensorGlyph (Figura 5.29), que realizam a deforma\u00e7\u00e3o de objetos mas n\u00e3o \n\npermitem o acesso aos autovalores e autovetores calculados. Tais informa\u00e7\u00f5es s\u00e3o tamb\u00e9m\n\nnecess\u00e1rias para a correta visualiza\u00e7\u00e3o dos eixos principais e dos c\u00edrculos de Mohr. Para tanto, \n\nos c\u00e1lculos s\u00e3o executados novamente, fazendo uso de outra biblioteca de fun\u00e7\u00f5es, \n\ndenominada LA (HUME LINEAR ALGEBRA TCL PACKAGE, 2005). Esta cont\u00e9m rotinas \n\nde \u00e1lgebra linear em Tcl (parte l\u00f3gica e n\u00e3o gr\u00e1fica da linguagem Tcl/Tk) e, apesar de n\u00e3o ser \n\num m\u00f3dulo compilado, observou-se uma velocidade de execu\u00e7\u00e3o satisfat\u00f3ria em plataformas\n\ncom processador Pentium 4. A biblioteca LA \u00e9 de dom\u00ednio p\u00fablico e foi obtida atrav\u00e9s da rede \n\nInternet. Suas fun\u00e7\u00f5es est\u00e3o contidas no script la.tcl presente no mesmo diret\u00f3rio que o \n\nprograma Tensor3D.\n\nOutra caracter\u00edstica importante da linguagem Tcl/Tk \u00e9 a disponibilidade de numerosos\n\ncomponentes gr\u00e1ficos (ou gadgets) tais como barras de rolagem, bot\u00f5es, campos para \n\nintrodu\u00e7\u00e3o de valores ou exibi\u00e7\u00e3o de informa\u00e7\u00f5es, janelas prontas para a leitura / grava\u00e7\u00e3o de \n\narquivos, etc. A utiliza\u00e7\u00e3o destes componentes (associados \u00e0 por\u00e7\u00e3o \u201cTk\u201d do nome da \n\nlinguagem) foi fundamental para o desenvolvimento de uma interface gr\u00e1fica \u201camig\u00e1vel\u201d de \n\nintera\u00e7\u00e3o com o usu\u00e1rio no programa Tensor3D. Os componentes gr\u00e1ficos s\u00e3o de f\u00e1cil cria\u00e7\u00e3o \n\n/ manipula\u00e7\u00e3o e uma refer\u00eancia importante para seu conhecimento foi o texto de Welch\n\n105\n\n\n\n(1997), bem como o acesso ao grupo de discuss\u00e3o na rede Internet sobre a linguagem Tcl/Tk\n\n(TCL/TK DISCUSSION GROUP, 2005), comp.lang.tcl.\n\n5.9.4 Instala\u00e7\u00e3o \n\nEsta se\u00e7\u00e3o descreve os procedimentos para instala\u00e7\u00e3o do programa Tensor3D em\n\nambiente Windows. Embora o programa tenha sido desenvolvido e exaustivamente testado \n\nem ambiente Linux, a instala\u00e7\u00e3o do mesmo \u00e9 mais simples no sistema operacional Windows.\n\nA utiliza\u00e7\u00e3o de uma linguagem de programa\u00e7\u00e3o multiplataforma (Tcl/Tk, 2005; WELCH,\n\n1997) permite executar o programa em sistemas operacionais distintos sem a necessidade de \n\nadaptar o c\u00f3digo fonte. As vers\u00f5es do Windows utilizadas para testes foram 98, 2000 e XP. \n\nO programa est\u00e1 contido no CD que acompanha esta disserta\u00e7\u00e3o. Ao acessar o \n\nconte\u00fado do CD em ambiente Windows, ser\u00e1 vis\u00edvel um diret\u00f3rio ou pasta, Tensor3D,\n\ncontendo por sua vez as pastas programa e auxiliares. Para o correto funcionamento do \n\naplicativo, \u00e9 necess\u00e1rio realizar a instala\u00e7\u00e3o pr\u00e9via do interpretador de comandos da \n\nlinguagem Tcl/Tk e da biblioteca gr\u00e1fica VTK. Estes m\u00f3dulos est\u00e3o contidos na pasta \n\nauxiliares e sua instala\u00e7\u00e3o \u00e9 ilustrada a seguir. \n\n No diret\u00f3rio auxiliares, clicar duas vezes sobre o arquivo tcl832.exe usando o bot\u00e3o \n\nesquerdo do mouse. Selecionar a op\u00e7\u00e3o Next em todas as janelas que o instalador do Tcl/Tk \n\nvisualizar\u00e1 em seguida. Aguardar a finaliza\u00e7\u00e3o da instala\u00e7\u00e3o e reiniciar o computador.\n\nDe forma an\u00e1loga, para instalar os bin\u00e1rios da biblioteca VTK, acessar novamente o \n\nconte\u00fado do CD e, sempre no diret\u00f3rio auxiliares, clicar duas vezes sobre o arquivo vtk42-\n\nLatestRelease.exe. Selecionar a op\u00e7\u00e3o Next em todas as janelas exibidas. A biblioteca VTK\n\nser\u00e1 instalada de forma autom\u00e1tica, sendo necess\u00e1rio reiniciar o computador mais uma vez. \n\nFinalmente, acessar a pasta Tensor3D do CD e copiar o conte\u00fado do diret\u00f3rio \n\nprograma em local adequado no disco do computador. Ap\u00f3s a c\u00f3pia, acessar o diret\u00f3rio \n\nprograma. Clicar duas vezes sobre o arquivo tensor.tcl. Ser\u00e1 exibida uma mensagem de erro, \n\n\u201cCan\u00b4t find package vtk\u201d, devido \u00e0 necessidade de associar arquivos com extens\u00e3o *.tcl, isto \u00e9\n\nprogramas na linguagem Tcl/Tk, ao interpretador de comandos da biblioteca VTK. Para tanto,\n\nclicar com o bot\u00e3o direito do mouse sobre o arquivo tensor.tcl, mantendo pressionada a tecla \n\nSHIFT do teclado. Ser\u00e1 exibido um menu do tipo pop-up, com algumas op\u00e7\u00f5es. Dentre estas, \n\nselecionar \u201cAbrir com...\u201d. Ser\u00e1 mostrada uma janela para sele\u00e7\u00e3o do aplicativo a ser invocado \n\nquando da execu\u00e7\u00e3o do script tensor.tcl. Selecionar o bot\u00e3o Outros em baixo \u00e0 direita. Na \n\nnova janela exibida, selecionar o caminho C:\\Arquivos de programa\\vtk42\\bin e, dentro deste, \n\no arquivo vtk.exe, que \u00e9 o interpretador necess\u00e1rio, e clicar no bot\u00e3o Abrir. Na janela\n\n106\n\n\n\nremanescente, selecionar a op\u00e7\u00e3o \u201cUsar sempre este programa para abrir este tipo de \n\narquivo\u201d e clicar no bot\u00e3o OK.\n\nO interpretador de comandos da biblioteca VTK ser\u00e1 invocado e executar\u00e1 o programa\n\nTensor3D. A execu\u00e7\u00e3o posterior do programa poder\u00e1 ser ativada clicando duas vezes sobre o \n\narquivo tensor.tcl com o bot\u00e3o esquerdo do mouse.\n\nA associa\u00e7\u00e3o de scripts com extens\u00e3o *.tcl ao interpretador do VTK n\u00e3o compromete\n\na execu\u00e7\u00e3o de programas em Tcl/Tk que n\u00e3o utilizem esta biblioteca, j\u00e1 que o VTK \n\nredireciona automaticamente instru\u00e7\u00f5es da linguagem Tcl/Tk para o interpretador \n\ncorrespondente. Ali\u00e1s, o pr\u00f3prio programa Tensor3D utiliza comandos e fun\u00e7\u00f5es de ambos os \n\ninterpretadores (VTK e Tcl/Tk). \n\n O diret\u00f3rio programa do Tensor3D possui os seguintes arquivos e subdiret\u00f3rios: \n\n- tensor.tcl. \u00c9 o programa principal \n\n- la.tcl. Biblioteca de fun\u00e7\u00f5es alg\u00e9bricas utilizada pelo programa para calcular os\n\nautovalores e autovetores da matriz 3x3 do tensor matem\u00e1tico (HUME LINEAR \n\nALGEBRA TCL PACKAGE, 2005).\n\n- objfact.tcl. Trata-se do programa auxiliar Object Factory 3D para a cria\u00e7\u00e3o de modelos \n\ngeom\u00e9tricos complexos a partir de entidades mais simples. Suas funcionalidades ser\u00e3o \n\nilustradas na pr\u00f3xima se\u00e7\u00e3o.\n\n- imgs. Diret\u00f3rio que cont\u00e9m os arquivos de imagens associadas a alguns bot\u00f5es da \n\ninterface gr\u00e1fica do programa.\n\n- objs. Este diret\u00f3rio cont\u00e9m os modelos geom\u00e9tricos que podem ser lidos pelo programa.\n\nOs modelos, no formato *.vtk (se\u00e7\u00e3o 3.4.4),  est\u00e3o organizados em dois subdiret\u00f3rios: \n\nmain, que cont\u00e9m os objetos mais importantes ou que resultam da composi\u00e7\u00e3o de objetos \n\nmais simples; e aus, que cont\u00e9m tais objetos menores, bem como modelos utilizados nas \n\nprimeiras etapas de testes de deforma\u00e7\u00e3o no ambiente do Tensor3D.\n\n- aus. Este diret\u00f3rio cont\u00e9m alguns programas (scripts) no formato *.tcl que foram usados \n\npara testar separadamente funcionalidades implementadas no programa Tensor3D. Outros\n\nscripts realizam a modelagem geom\u00e9trica de alguns dos objetos contidos no diret\u00f3rio objs.\n\nTal modelagem envolve a cria\u00e7\u00e3o de objetos gr\u00e1ficos simples dispon\u00edveis no VTK \n\n(planos, esferas, discos, etc), bem como sua rota\u00e7\u00e3o, transla\u00e7\u00e3o, redimensionamento e \n\njun\u00e7\u00e3o de forma a gerar conjuntos de objetos didaticamente adequados para a deforma\u00e7\u00e3o.\n\nO estudo dos programas deste diret\u00f3rio fornece ao iniciante informa\u00e7\u00f5es importantes\n\nsobre as principais ferramentas de modelagem implementadas na biblioteca VTK.\n\n107\n\n\n\nAs instru\u00e7\u00f5es de instala\u00e7\u00e3o desta se\u00e7\u00e3o visaram deixar o usu\u00e1rio em condi\u00e7\u00f5es de\n\nutilizar o Tensor3D no sistema operacional Windows. Neste ambiente \u00e9 poss\u00edvel instalar o \n\nprograma e explorar suas funcionalidades de forma r\u00e1pida. A instala\u00e7\u00e3o no sistema\n\noperacional Linux \u00e9 mais complexa, pois envolve a configura\u00e7\u00e3o e compila\u00e7\u00e3o da biblioteca\n\ngr\u00e1fica VTK, procedimento que foi descrito na se\u00e7\u00e3o 3.4.5.\n\nUma considera\u00e7\u00e3o final diz respeito \u00e0 vers\u00e3o do VTK utilizada para executar o\n\nprograma Tensor3D. Durante as fases de desenvolvimento e testes do aplicativo, a vers\u00e3o \n\nadotada foi a 4.2. Trata-se da vers\u00e3o est\u00e1vel mais atual at\u00e9 a data de entrega desta disserta\u00e7\u00e3o.\n\nContudo, novas vers\u00f5es est\u00e3o prestes a serem disponibilizadas na homepage da biblioteca \n\n(VISUALIZATION TOOLKIT, 2005). Em particular, est\u00e1 previsto um conjunto de \n\nimportantes modifica\u00e7\u00f5es na iminente vers\u00e3o 5.0, para ado\u00e7\u00e3o da qual foi criada uma vers\u00e3o\n\n4.4 de transi\u00e7\u00e3o. Dentre as modifica\u00e7\u00f5es anunciadas, destaca-se a elimina\u00e7\u00e3o da classe\n\nvtkPolyData e sua jun\u00e7\u00e3o com a classe vtkUnstructuredGrid para unificar e otimizar a \n\nrepresenta\u00e7\u00e3o interna de informa\u00e7\u00f5es geom\u00e9tricas e topol\u00f3gicas de modelos que usam\n\nprimitivos gr\u00e1ficos 1D e 2D (pontos, linhas e pol\u00edgonos, classe vtkPolyData) e 3D (tetraedros,\n\nprismas, etc., classe vtkUstructuredGrid). Diante disto, \u00e9 muito prov\u00e1vel que o programa\n\nTensor3D apresente malfuncionamentos ao se tentar execut\u00e1-lo com a vers\u00e3o 5.0 do VTK. A \n\nsolu\u00e7\u00e3o imediata para o problema consiste na utiliza\u00e7\u00e3o da vers\u00e3o da biblioteca para a qual o\n\nprograma foi escrito, isto \u00e9, 4.2. Para tanto os bin\u00e1rios pr\u00e9-compilados do VTK para o sistema\n\noperacional Windows est\u00e3o contidos no CD que acompanha esta disserta\u00e7\u00e3o. \n\nA escolha da vers\u00e3o do interpretador de comandos da linguagem Tcl/Tk \u00e9 menos\n\nimportante, j\u00e1 que o n\u00edvel de compatibilidade entre vers\u00f5es diferentes da linguagem, que o \n\nprograma Tensor3D requer, \u00e9 garantido pelos desenvolvedores da mesma. O usu\u00e1rio pode \n\ninstalar a vers\u00e3o 8.3.2 do Tcl/Tk contida no CD. \n\n108\n\n\n\n5.9.5 Programas auxiliares: Object Factory 3D\n\n Numerosos modelos dispon\u00edveis para deforma\u00e7\u00e3o no programa Tensor3D foram \n\ndesenvolvidos usando programas auxiliares, scripts em Tcl/Tk. Estes programas est\u00e3o \n\ncontidos no subdiret\u00f3rio aus do CD do programa Tensor3D. A deforma\u00e7\u00e3o de alguns destes \n\nmodelos ser\u00e1 ilustrada na pr\u00f3xima se\u00e7\u00e3o. Os programas do diret\u00f3rio aus utilizam\n\nfuncionalidades de modelagem geom\u00e9trica da biblioteca VTK, permitindo criar objetos\n\ncompostos a partir de entidades mais simples.\n\nO mais importante de tais scripts auxiliares, chamado Object Factory 3D permite criar\n\nmodelos que simulam agregados mono- e poliminer\u00e1licos cuja orienta\u00e7\u00e3o preferencial e\n\nescala podem ser controladas. A finalidade deste programa \u00e9 modelar agregados minerais de \n\ndiferentes formas (prism\u00e1ticas, plac\u00f3ides) e orienta\u00e7\u00f5es, bem como graus de isotropia iniciais. \n\nO aplicativo surgiu como programa auxiliar para a cria\u00e7\u00e3o de entidades complexas\n\npara o Tensor3D, mas as funcionalidades implementadas tornaram-no uma ferramenta de \n\nmodelagem geom\u00e9trica \u00e0 parte. Os modelos s\u00e3o exibidos em 3D e podem ser gravados no \n\nformato *.vtk (se\u00e7\u00e3o 3.4.4), o que permite sua leitura e deforma\u00e7\u00e3o no programa Tensor3D.\n\n O programa Object Factory 3D est\u00e1 presente no mesmo diret\u00f3rio que o Tensor3D e \n\ncorresponde ao script objfact.tcl. Seu nome visa justamente real\u00e7ar as potencialidades de criar\n\ndiferentes modelos geom\u00e9tricos. O programa representa mais um exemplo de integra\u00e7\u00e3o das \n\ncomponentes gr\u00e1ficas da linguagem Tcl/Tk (bot\u00f5es, barras de rolagem, etc.) e dos m\u00f3dulos de \n\nvisualiza\u00e7\u00e3o cient\u00edfica da biblioteca VTK. Tal integra\u00e7\u00e3o requer um esfor\u00e7o de programa\u00e7\u00e3o\n\nm\u00ednimo e permite a cria\u00e7\u00e3o r\u00e1pida de aplicativos interativos de modelagem geom\u00e9trica. A \n\nFigura 5.31 mostra a janela de execu\u00e7\u00e3o do programa.\n\nA por\u00e7\u00e3o direita da figura mostra um conjunto de componentes gr\u00e1ficos (da linguagem\n\nTcl/Tk) utilizados para modificar as propriedades dos objetos modelados. J\u00e1 a por\u00e7\u00e3o \n\nesquerda consiste na visualiza\u00e7\u00e3o 3D dos objetos realizada pela biblioteca VTK. Segue uma\n\nbreve descri\u00e7\u00e3o das funcionalidades do programa.\n\nO objeto modelado \u00e9 uma malha regular de entidades mais simples posicionadas ao \n\nlongo de linhas paralelas aos eixos coordenados. A resolu\u00e7\u00e3o da malha, isto \u00e9, o n\u00famero de\n\nobjetos ao longo de cada dire\u00e7\u00e3o coordenada pode ser definido na se\u00e7\u00e3o Mesh Size. Desta \n\nforma, \u00e9 poss\u00edvel, por exemplo, criar malhas de 4x4x4 (=64), 5x5x5 (=125) objetos e assim \n\npor diante. A resolu\u00e7\u00e3o pode assumir valores de 1 a 7. \n\nOs objetos fundamentais que podem ser selecionados s\u00e3o cones (pir\u00e2mides cuja base \u00e9 \n\num pol\u00edgono regular com 20 lados) ou cilindros orientados na dire\u00e7\u00e3o do eixo coordenado X, \n\ncubos, esferas, ou uma composi\u00e7\u00e3o aleat\u00f3ria dos mesmos. Tal sele\u00e7\u00e3o \u00e9 realizada na se\u00e7\u00e3o\n\n109\n\n\n\nObject, sendo que o primeiro bot\u00e3o Random \u00e0 esquerda permite ativar a composi\u00e7\u00e3o aleat\u00f3ria \n\nde objetos. O tamanho destes pode ser definido usando a barra de rolagem Section. O bot\u00e3o \n\nRandom \u00e0 direita atribui valores aleat\u00f3rios ao tamanho dos objetos modelados.\n\nFigura 5.31 \u2013 Exemplo de utiliza\u00e7\u00e3o do programa Object Factory 3D. O objeto original, uma malha 5x5x5 de\nubos alinhados ao longo dos eixos coordenados, foi modelado gerando um agregado de paralelep\u00edpedos de\nrienta\u00e7\u00e3o aleat\u00f3ria. Para tanto, os cubos iniciais foram redimensionados e rotacionados em torno dos eixos\noordenados, usando valores aleat\u00f3rios para os fatores de escala e \u00e2ngulos (bot\u00f5es Random ativados em\nermelho, \u00e0 direita).\n\nc\no\nc\nv\n\n A se\u00e7\u00e3o Scale controla o fator de escala dos objetos posicionados na malha 3D. A \n\nescala pode ser modificada ao longo de cada eixo coordenado local ao objeto considerado. Os \n\nsistemas de coordenadas local e global possuem a mesma orienta\u00e7\u00e3o na aus\u00eancia de rota\u00e7\u00e3o \n\ndo objeto (pr\u00f3ximo par\u00e1grafo). Os fatores de escala correspondentes ao objeto indeformado\n\ns\u00e3o (1, 1, 1), sendo que valores menores que 1 indicam encurtamento ao longo dos eixos X, Y \n\nou Z, ao passo que valores maiores que 1 indicam estiramento. O bot\u00e3o Random ativa a\n\nutiliza\u00e7\u00e3o de fatores de escala aleat\u00f3rios para os objetos. O bot\u00e3o RESET inicializa os fatores\n\ncom os valores (1, 1, 1). A Figura 5.32 mostra a modifica\u00e7\u00e3o de escala para uma malha\n\nregular de 5x5x5=125 cubos. O resultado \u00e9 a modelagem de paralelep\u00edpedos. \n\nA se\u00e7\u00e3o Rotation permite rotacionar cada objeto em torno dos eixos coordenados \n\nlocais ao mesmo. Os \u00e2ngulos s\u00e3o expressos em graus, sendo poss\u00edvel especificar \n\nseparadamente suas medidas para cada eixo coordenado. O bot\u00e3o Random define valores \n\naleat\u00f3rios para os \u00e2ngulos, sendo que os valores variam entre 0 e a medida especificada pelo \n\n110\n\n\n\nusu\u00e1rio. O resultado \u00e9 uma orienta\u00e7\u00e3o diferente para cada objeto da malha, sendo poss\u00edvel \n\ncontrolar o grau de isotropia do conjunto. O bot\u00e3o RESET inicializa os \u00e2ngulos de rota\u00e7\u00e3o \n\ncom o valor 0 (rota\u00e7\u00e3o nula). A Figura 5.33 mostra um exemplo de rota\u00e7\u00e3o de uma malha\n\nregular de 125 cilindros inicialmente alinhados com o eixo X. \u00c9 tamb\u00e9m ilustrada a ativa\u00e7\u00e3o\n\nda modalidade de orienta\u00e7\u00e3o aleat\u00f3ria.\n\n(a) (b)\n\nFigura 5.32 \u2013 Modifica\u00e7\u00e3o do fator de escala para uma malha regular de 5x5x5=125 cubos. (a) Configura\u00e7\u00e3o\ninicial dos objetos. As cores dos eixos coordenados globais s\u00e3o vermelho (X), amarelo (Y) e verde (Z). (b)\nmodifica\u00e7\u00e3o do fator de escala de (1, 1, 1) para (2, 1, 0.8), de forma que os cubos foram estirados na dire\u00e7\u00e3o X e\nencurtados na dire\u00e7\u00e3o Z.\n\nAs funcionalidades de modifica\u00e7\u00e3o de escala e rota\u00e7\u00e3o dos objetos podem ser\n\ncombinadas para construir modelos de agregados minerais estudados em geologia. Um\n\nexemplo \u00e9 a Figura 5.31, que mostra 125 cubos deformados (por mudan\u00e7a do fator de escala) \n\ne rotacionados usando par\u00e2metros aleat\u00f3rios. A simula\u00e7\u00e3o pode ser ainda mais realista \n\ncombinando os v\u00e1rios objetos dispon\u00edveis e especificando um tamanho aleat\u00f3rio para cada \n\nelemento (Figura 5.34). \n\nUma vez criado o agregado de objetos ideal para as finalidades do usu\u00e1rio, o mesmo\n\npode ser armazenado em disco no formato *.vtk. Para tanto, \u00e9 suficiente usar o bot\u00e3o SAVE da \n\nse\u00e7\u00e3o Main do programa. Os objetos criados podem assim ser lidos e deformados no \u00e2mbito\n\ndo programa Tensor3D. Alguns dos objetos descritos na pr\u00f3xima se\u00e7\u00e3o foram modelados\n\ndesta forma.\n\n111\n\n\n\nO programa Object Factory 3D mostrou ser uma ferramenta extremamente poderosa e \n\nflex\u00edvel. Suas capacidades de modelagem podem ser expandidas atrav\u00e9s da inser\u00e7\u00e3o de novos \n\nobjetos ou de regras de mudan\u00e7a de escala / rota\u00e7\u00e3o pr\u00e9-definidas, visando construir modelos\n\nmais fieis aos agregados minerais estudados na pr\u00e1tica. \n\n(c)\n\n(b)\n\n(d)\n\n(a)\n\nFigura 5.33 \u2013 Defini\u00e7\u00e3o da orienta\u00e7\u00e3o de 125 cilindros posicionados em uma malha regular. (a) Os objetos s\u00e3o\ninicialmente paralelos ao eixo X (em vermelho). (b) Especifica\u00e7\u00e3o de uma rota\u00e7\u00e3o de 30 graus em torno do eixo\nverde Z (par\u00e2metro Rotz da janela do programa). Todos os cilindros sofrem a mesma rota\u00e7\u00e3o. (c) Ativa\u00e7\u00e3o da\nmodalidde Random. Cada cilindro \u00e9 rotacionado usando um \u00e2ngulo aleat\u00f3rio entre 0 e 30 graus. Apesar das\ndiferentes orienta\u00e7\u00f5es, os objetos ainda mostram uma dire\u00e7\u00e3o preferencial (cerca de 15 graus), devido ao baixo \n\u00e2ngulo de rota\u00e7\u00e3o. (d) Utiliza\u00e7\u00e3o da modalidade Random com o valor de 180 graus especificado para os tr\u00eas\npar\u00e2metros de rota\u00e7\u00e3o. Os cilindros formam um objeto composto de apar\u00eancia isotr\u00f3pica, mascarando a natureza\nregular da malha original.\n\n112\n\n\n\nFigura 5.34 \u2013 Conjunto de cubos, esferas e cilindros com orienta\u00e7\u00e3o, fator de escala e tamanho aleat\u00f3rios (a\nescala das esferas n\u00e3o foi modificada).\n\n5.9.6 Algumas aplica\u00e7\u00f5es \n\nNesta se\u00e7\u00e3o ser\u00e3o mostrados exemplos de deforma\u00e7\u00e3o progressiva de objetos que\n\nmodelam estruturas geol\u00f3gicas ou de marcadores cuja an\u00e1lise auxilia no entendimento e\n\nquantifica\u00e7\u00e3o dos processos deformacionais. Os objetos usados foram criados atrav\u00e9s da \n\nbiblioteca VTK ou importados de outros ambientes de modelagem. A deforma\u00e7\u00e3o foi \n\nrealizada com o programa Tensor3D, modificando as componentes da matriz 3x3 do tensor. \n\nAgregado poliminer\u00e1lico. Este objeto, cuja deforma\u00e7\u00e3o \u00e9 mostrada na Figura 5.35, foi criado\n\nusando o programa Object Factory 3D. O modelo consiste de um conjunto de esferas, \n\nparalelep\u00edpedos (originalmente cubos) e cilindros de orienta\u00e7\u00f5es, escalas e tamanhos\n\naleat\u00f3rios. O arquivo de dados \u00e9 objs/main/agregado_poli_iso3.vtk (de acordo com a estrutura\n\nde diret\u00f3rios ilustrada na se\u00e7\u00e3o 5.9.4). A entidade da deforma\u00e7\u00e3o \u00e9 destacada atrav\u00e9s da \n\nvisualiza\u00e7\u00e3o do elips\u00f3ide de deforma\u00e7\u00e3o e da caixa de limites (Bounding Box) do modelo. A\n\norienta\u00e7\u00e3o constante do elips\u00f3ide e do Bounding Box ao longo do eixo X mostra que n\u00e3o \n\nocorre cisalhamento simples, isto \u00e9, a deforma\u00e7\u00e3o \u00e9 coaxial. Contudo, observa-se a rota\u00e7\u00e3o de \n\nmarcadores lineares (cilindros) internos ao objeto durante o processo. \n\nSimula\u00e7\u00e3o de boudinagem. Neste exemplo, foi realizado o cisalhamento puro de uma malha\n\nregular de 5x5x5=125 cubos constru\u00edda com o programa Object Factory 3D (arquivo\n\nobjs/aus/cubes.vtk). O tamanho dos cubos foi especificado de forma a minimizar o espa\u00e7o \n\nentre os mesmos, para criar um modelo cuja deforma\u00e7\u00e3o coaxial pudesse fornecer um\n\nexemplo de boudinagem de um corpo geol\u00f3gico. O resultado \u00e9 mostrado nas Figuras 5.36 e \n\n113\n\n\n\n5.37. Estas exibem a janela inteira do programa Tensor3D para destacar as componentes do\n\ntensor matem\u00e1tico que foram modificadas (elipses vermelhas). No estado indeformado, as \n\ncomponentes da diagonal principal do tensor possuem valor unit\u00e1rio. Tais componentes s\u00e3o \n\nmodificadas ao longo do processo: aumento na dire\u00e7\u00e3o dos eixos coordenados X e Y, \n\ndiminui\u00e7\u00e3o na dire\u00e7\u00e3o do eixo Z. Durante a deforma\u00e7\u00e3o, o espa\u00e7amento entre os\n\nparalelep\u00edpedos aumenta devido \u00e0 modifica\u00e7\u00e3o do fator de escala.\n\nConchas f\u00f3sseis. Trata-se de uma composi\u00e7\u00e3o de tr\u00eas modelos digitais da concha da classe \n\nCephalopoda, subclasse Nautiloidea, j\u00e1 deformada na Figura 5.18. A concha foi constru\u00edda \n\nusando uma modelagem matem\u00e1tica. O modelo de tr\u00eas conchas foi criado usando o script\n\nseashell3.tcl contido no diret\u00f3rio aus de programas auxiliares do Tensor3D. O script l\u00ea a\n\ninforma\u00e7\u00e3o geom\u00e9trica e topol\u00f3gica da concha atrav\u00e9s da classe vtkPolyDataReader (arquivo\n\nobj/aus/seashell.vtk). Este objeto est\u00e1 contido no plano coordenado XZ (Figura 5.18). Em \n\nseguida s\u00e3o criados tr\u00eas pares de inst\u00e2ncias vtkTransform / vtkTransformPolyDataFilter, os \n\nquais realizam a transla\u00e7\u00e3o da primeira concha no plano XZ, o posicionamento da segunda no \n\nplano YZ atrav\u00e9s de uma rota\u00e7\u00e3o do primeiro objeto em torno do eixo Z (-90 graus); e o\n\nposicionamento da terceira concha no plano XY atrav\u00e9s de uma rota\u00e7\u00e3o da primeira em torno \n\ndo eixo X (-90 graus). As conchas rotacionadas s\u00e3o tamb\u00e9m transladadas visando o \n\nafastamento de seu centro da origem do sistema de eixos coordenados. Por fim, os tr\u00eas \n\nmodelos s\u00e3o compostos em um \u00fanico objeto do tipo vtkPolyData usando a classe\n\nvtkAppendPolyData. O modelo \u00e9 armazenado em disco no formato do VTK (arquivo\n\nobjs/main/3seashells.vtk), atrav\u00e9s da classe vtkPolyDataWriter.\n\nA Figura 5.38 mostra uma deforma\u00e7\u00e3o coaxial progressiva do objeto composto. Cada \n\nconcha est\u00e1 contida em um plano coordenado para estudar a deforma\u00e7\u00e3o ao longo dos tr\u00eas \n\nplanos cinem\u00e1ticos. A figura mostra os planos coordenados semitransparentes, bem como o \n\nelips\u00f3ide de deforma\u00e7\u00e3o (na origem do sistema). S\u00e3o tamb\u00e9m vis\u00edveis os eixos principais de\n\ndeforma\u00e7\u00e3o. Estes se mant\u00eam paralelos aos eixos coordenados, o que confirma o car\u00e1ter \n\ncoaxial da deforma\u00e7\u00e3o.\n\nA Figura 5.39 mostra um exemplo de deforma\u00e7\u00e3o n\u00e3o coaxial progressiva do mesmo\n\nconjunto de conchas. J\u00e1 na Figura 5.40 foi realizada a deforma\u00e7\u00e3o coaxial de um agregado de \n\n27 conchas com posi\u00e7\u00f5es e orienta\u00e7\u00f5es aleat\u00f3rias. Tal agregado, armazenado no arquivo \n\nobjs/aus/seashells.vtk, foi criado utilizando uma vers\u00e3o modificada do programa Object\n\nFactory 3D. Neste, uma malha regular de 3x3x3=27 objetos sofreu rota\u00e7\u00f5es com \u00e2ngulos \n\naleat\u00f3rios para simular a orienta\u00e7\u00e3o anisotr\u00f3pica dos f\u00f3sseis. \n\n114\n\n\n\n100\n\n010\n\n003\n\nT\n\n100\n\n010\n\n002\n\nT\n\n100\n\n010\n\n001\n\nT\n\nFigura 5.35 \u2013 Deforma\u00e7\u00e3o coaxial \nprogressiva de um agregado poliminer\u00e1lico.\nCisalhamento puro na dire\u00e7\u00e3o do eixo \ncoordenado X. \u00c9 tamb\u00e9m representada a \nmatriz do tensor correspondente.\n\n115\n\n\n\n(a)\n\n(b)\n\nFigura 5.36 \u2013 Deforma\u00e7\u00e3o coaxial progressiva de um agregado de cubos para simular boudinagem.\nCisalhamento puro ao longo dos eixos coordenados X, Y e Z por valores, respectivamente, de (1, 1, 1) (a) e (1.6,\n1.5, 0.67) (b). As componentes do tensor modificadas s\u00e3o destacadas em vermelho.\n\n116\n\n\n\n(c)\n\n(d)(d)\n\nFigura 5.37 \u2013 Continua\u00e7\u00e3o da deforma\u00e7\u00e3o coaxial progressiva do objeto da figura anterior para os seguintes\nvalores de deforma\u00e7\u00e3o longitudinal a X, Y e Z: (2.4, 1.7, 0.5) (c) e (5, 2.9, 0.2) (d). \n\n117\n\n\n\n100\n\n010\n\n001\n\nT\n\n75.000\n\n010\n\n002\n\nT\n\n5.000\n\n010\n\n005.2\n\nT\n\n118\n\nFigura 5.38 \u2013 Deforma\u00e7\u00e3o coaxial progressiva de tr\u00eas conchas (classe Cephalopoda, subclasse Nautiloidea)\nalinhadas com os planos coordenados semitransparentes. S\u00e3o tamb\u00e9m vis\u00edveis o elips\u00f3ide de deforma\u00e7\u00e3o e o \nBounding Box do conjunto.\n\n\n\n100\n\n010\n\n001\n\nT\n\n1075.0\n\n010\n\n001\n\nT\n\n1075.1\n\n010\n\n001\n\nT\n\nFigura 5.39 \u2013 Deforma\u00e7\u00e3o n\u00e3o coaxial progressiva de tr\u00eas conchas. Cisalhamento simples no plano XY e na\ndire\u00e7\u00e3o do eixo X (componente e31 do tensor)\n\n119\n\n\n\nFigura 5.40 \u2013 Deforma\u00e7\u00e3o coaxial de um agregado de 27 conchas Cephalopoda (Nautiloidea) com posi\u00e7\u00f5es e\norienta\u00e7\u00f5es aleat\u00f3rias. Estiramento na dire\u00e7\u00e3o X por um fator de 2.5 (componente e11+1 do tensor). Apesar da\ndeforma\u00e7\u00e3o ser coaxial, nota-se a rota\u00e7\u00e3o de algumas conchas ao final do processo. \u00c9 tamb\u00e9m visualizado o \nelips\u00f3ide de deforma\u00e7\u00e3o (centro do modelo).\n\nModelo de dobra. A deforma\u00e7\u00e3o n\u00e3o coaxial deste modelo foi mostrada na Figura 5.21. Trata-\n\nse da modelagem de um corpo dobrado obtida matematicamente (Figura 5.41), usando a \n\nbiblioteca VTK. O primeiro passo consistiu na cria\u00e7\u00e3o da se\u00e7\u00e3o da superf\u00edcie dobrada no\n\nplano XZ. Tal curva foi obtida tra\u00e7ando o gr\u00e1fico da fun\u00e7\u00e3o z = sen(x * 2 ), sendo que x varia \n\nde 0 a 3 (tr\u00eas ciclos completos da fun\u00e7\u00e3o seno). O gr\u00e1fico foi constru\u00eddo como Polyline\n\n(conjunto de segmentos interconectados), linha poligonal armazenada em uma classe \n\nvtkPolyData (Figura 5.41a). Em seguida, a representa\u00e7\u00e3o do objeto foi passada para uma\n\ninst\u00e2ncia da classe vtkLinearExtrusionFilter, que realizou uma extrus\u00e3o da curva na dire\u00e7\u00e3o\n\nY. Com isto foi criada uma superf\u00edcie dobrada (Figura 5.41b). Finalmente, o corpo s\u00f3lido em \n\nformato de dobra foi obtido passando o resultado da extrus\u00e3o anterior para outra inst\u00e2ncia da \n\nclasse vtkLinearExtrusionFilter, considerando como dire\u00e7\u00e3o de extrus\u00e3o o eixo vertical Z \n\n(Figura 5.41c). \n\nO modelo de dobra foi gerado por dois scripts distintos, ambos contidos no diret\u00f3rio \n\naus do CD do programa Tensor. O primeiro, fold.tcl, cria a superf\u00edcie dobrada, armazenada no \n\narquivo objs/aus/fold.vtk. O segundo script, solidfold.tcl, cria o modelo s\u00f3lido do corpo \n\ndobrado, armazenado no arquivo objs/aus/solidfold.vtk.\n\nO modelo de corpo dobrado criado constitui um exemplo interessante de modelagem\n\nmatem\u00e1tica de estruturas geol\u00f3gicas usando a biblioteca VTK. Os par\u00e2metros principais do \n\n120\n\n\n\nmodelo (n\u00famero de ciclos da fun\u00e7\u00e3o seno, espessuras lateral e vertical) podem ser facilmente\n\nmodificadas nos scripts fold.tcl e solidfold.tcl, permitindo a cria\u00e7\u00e3o de modelos diferentes. \n\nAl\u00e9m disto, a apar\u00eancia regular de um objeto criado matematicamente poderia ser amenizada\n\nusando filtros de interpola\u00e7\u00e3o ou adicionando ru\u00eddos (transla\u00e7\u00f5es de entidade aleat\u00f3ria) \u00e0s\n\ncoordenadas dos pontos constituintes. \n\nOutro exemplo de deforma\u00e7\u00e3o do modelo de dobra \u00e9 mostrado na Figura 5.42. Neste \n\ncaso, foi realizada uma deforma\u00e7\u00e3o coaxial.\n\n(c)(b)(a)\n\nFigura 5.41 \u2013 Procedimento geom\u00e9trico para a modelagem de um corpo dobrado no VTK. (a) Linha poligonal\nobtida unindo os pontos de tr\u00eas ciclos completos da fun\u00e7\u00e3o seno ao longo do eixo X (em vermelho). (b) Extrus\u00e3o\nda linha na dire\u00e7\u00e3o Y (eixo amarelo) para gerar uma superf\u00edcie dobrada. (c) Nova extrus\u00e3o na dire\u00e7\u00e3o do eixo Z\n(em verde) para gerar um corpo s\u00f3lido dobrado.\n\nFigura 5.42 \u2013 Deforma\u00e7\u00e3o coaxial de um modelo matem\u00e1tico de dobra. Estiramento na dire\u00e7\u00e3o X por um fator \nde 1.6 (componente e11+1 do tensor). No centro do sistema, o elips\u00f3ide de deforma\u00e7\u00e3o.\n\n121\n\n\n\nModelo de Estrela. Este modelo foi constru\u00eddo usando classes do VTK e \u00e9 constitu\u00eddo de um\n\nconjunto de di\u00e2metros de uma esfera, sendo que estes formam \u00e2ngulos de 45 ou de 30 graus \n\nem cada plano coordenado. A Figura 5.14 cont\u00e9m um exemplo de deforma\u00e7\u00e3o da estrela com\n\n\u00e2ngulos de 45 graus. A finalidade do modelo em estrela \u00e9 compor marcadores lineares cuja \n\nrota\u00e7\u00e3o em rela\u00e7\u00e3o ao eixo de maior estiramento possa ser observada ao longo do processo \n\ndeformacional.\n\nO modelo de estrela com \u00e2ngulos de 30 graus \u00e9 gerado pelo script aus/star30.tcl e cria \n\no arquivo objs/aus/star30.vtk. O procedimento de constru\u00e7\u00e3o \u00e9 o seguinte. Dentro do plano \n\nXY, \u00e9 criado um conjunto de di\u00e2metros com dist\u00e2ncia angular m\u00fatua de 30 graus. Para tanto, \n\nutiliza-se inst\u00e2ncias da classe vtkLineSource, rotacionando cada linha atrav\u00e9s de classes\n\nvtkTransform / vtkTransformPolyDataFilter. O objeto obtido est\u00e1 contido no plano XY. Em \n\nseguida, s\u00e3o criadas m\u00faltiplas inst\u00e2ncias do mesmo, cada qual rotacionada, em rela\u00e7\u00e3o \u00e0\n\nanterior, de 30 graus considerando X como eixo de rota\u00e7\u00e3o. A Figura 5.43a mostra duas \n\ninst\u00e2ncias (planos) formando um \u00e2ngulo de 90 graus em rela\u00e7\u00e3o ao eixo X. Todas as \n\ninst\u00e2ncias de linhas coplanares rotacionadas s\u00e3o passadas como entrada para a classe\n\nvtkAppendPolyData, que gera uma \u00fanica representa\u00e7\u00e3o poligonal vtkPolyData. Sua sa\u00edda \u00e9 \n\nfornecida para a classe vtkTubeFilter, a qual cria a representa\u00e7\u00e3o de prismas (ou \u201ctubos\u201d) em \n\ntorno das linhas. Desta forma, as linhas se tornam mais vis\u00edveis no processo de visualiza\u00e7\u00e3o\n\n3D. Por fim, o arquivo de dados correspondente \u00e9 criado usando a classe vtkPolyDataWriter.\n\nO resultado final \u00e9 a estrela da Figura 5.43b. \n\nAs Figuras 5.44 e 5.45 mostram a deforma\u00e7\u00e3o n\u00e3o coaxial progressiva do modelo de \n\nestrela. A janela de comandos do programa Tensor3D \u00e9 mostrada para destacar as \n\ncomponentes de deforma\u00e7\u00e3o cisalhante modificadas.\n\nFigura 5.43 \u2013 Constru\u00e7\u00e3o do modelo de uma \u201cestrela\u201d cujas linhas s\u00e3o di\u00e2metros de uma esfera. O \u00e2ngulo entre\nos di\u00e2metros \u00e9 de 30 graus. (a) Exemplo de dois conjuntos de linhas coplanares. (b) Modelo final da estrela.\n\n122\n\n\n\nFigura 5.44 \u2013 Deforma\u00e7\u00e3o n\u00e3o coaxial progressiva de um conjunto de marcadores lineares formando \u00e2ngulos de\n30 graus. Cisalhamento simples no plano XY e na dire\u00e7\u00e3o negativa do eixo coordenado X. A componente do\ntensor modificada \u00e9 indicada com elipses vermelhas (direita). A entidade da deforma\u00e7\u00e3o \u00e9 real\u00e7ada exibindo o\nelips\u00f3ide no centro do modelo, bem como seu Bounding Box (esquerda).\n\n123\n\n\n\nFigura 5.45 \u2013 Continua\u00e7\u00e3o da deforma\u00e7\u00e3o n\u00e3o coaxial progressiva do objeto da figura anterior. \n\n124\n\n\n\nSuperf\u00edcie topogr\u00e1fica sint\u00e9tica. Trata-se de um modelo digital de terreno sint\u00e9tico, isto \u00e9, \n\ncriado usando valores aleat\u00f3rios gerados por computador. Para tanto foi utilizada a classe\n\nvtkPerlinNoise, a qual gera uma seq\u00fc\u00eancia cont\u00ednua e n\u00e3o peri\u00f3dica de n\u00fameros aleat\u00f3rios \n\n(ru\u00eddo). Isto permite modelar processos e objetos do mundo real. O modelo digital est\u00e1 \n\ncontido no arquivo objs/main/topo.vtk. A Figura 5.46 mostra um exemplo de deforma\u00e7\u00e3o n\u00e3o \n\ncoaxial progressiva do objeto. \u00c9 vis\u00edvel a forma\u00e7\u00e3o de um sistema de dobras em bainha ao\n\nlongo do processo. \n\nBacia de Taubat\u00e9. Este \u00e9 o modelo digital da Bacia de Taubat\u00e9, cuja morfologia foi obtida\n\natrav\u00e9s de t\u00e9cnicas s\u00edsmicas. A superf\u00edcie poligonal foi criada usando o programa GOCAD\n\n(se\u00e7\u00e3o 3.6). O arquivo de dados foi exportado para o formato *.ts do programa, sendo\n\nnecess\u00e1ria sua convers\u00e3o para o formato *.vtk do Tensor3D. Para tanto, utilizou-se o \n\nprograma ts2dis, que realiza uma convers\u00e3o para o formato intermedi\u00e1rio MOVIE.BYU\n\n(MOVIE.BYU FILE FORMAT, 2005), com extens\u00e3o *.dis. O programa ts2dis foi\n\ndesenvolvido por este mestrando durante seu per\u00edodo como bolsista de inicia\u00e7\u00e3o cient\u00edfica \n\njunto ao laborat\u00f3rio de GeoModelagem 3D do DPM / IGCE / UNESP. O arquivo *.vtk da \n\nbacia foi criado usando um script em Tcl/Tk que usa as classes vtkBYUReader (leitura do\n\narquivo *.dis) e vtkPolyDataWriter (grava\u00e7\u00e3o do arquivo *.vtk). O formato interno de troca \n\nde informa\u00e7\u00f5es geom\u00e9tricas e topol\u00f3gicas entre os dois filtros \u00e9 o da classe vtkPolyData.\n\nNa Figura 5.47 \u00e9 mostrada uma deforma\u00e7\u00e3o coaxial do modelo digital da Bacia de \n\nTaubat\u00e9. O modelo \u00e9 sombreado usando uma escala de cores que acompanha a varia\u00e7\u00e3o de \n\neleva\u00e7\u00e3o. \u00c9 tamb\u00e9m visualizado o elips\u00f3ide de deforma\u00e7\u00e3o para cada etapa. O \u00faltimo est\u00e1gio\n\ndo processo representa o ponto de partida para outra deforma\u00e7\u00e3o, n\u00e3o coaxial, ilustrada na \n\nFigura 5.48. O resultado \u00e9 interessante pois mostra a modifica\u00e7\u00e3o simult\u00e2nea de componentes\n\ndo tensor normais e cisalhantes. Esta composi\u00e7\u00e3o comprova tamb\u00e9m a extrema flexibilidade\n\nde um tensor matem\u00e1tico. Os exemplos anteriores mostram modifica\u00e7\u00f5es de at\u00e9 tr\u00eas\n\ncomponentes da matriz, separando as deforma\u00e7\u00f5es normal e cisalhante para fins did\u00e1ticos. \n\nContudo, em aplica\u00e7\u00f5es reais, \u00e9 poss\u00edvel combinar modifica\u00e7\u00f5es das nove (ou seis, em caso \n\nde simetria) componentes do tensor para simular processos deformacionais mais complexos.\n\nFinalmente, a utiliza\u00e7\u00e3o de modelos digitais importados de outro ambiente de trabalho amplia\n\nas potencialidades do programa Tensor3D, podendo-se utilizar dados reais, al\u00e9m dos modelos \n\nmatem\u00e1ticos gerados com a biblioteca VTK. A importa\u00e7\u00e3o pode envolver v\u00e1rios modelos\n\ncriados e visualizados com o programa GOCAD neste Laborat\u00f3rio de GeoModelagem 3D,\n\nsendo poss\u00edvel controlar e observar interativamente a simula\u00e7\u00e3o de sua deforma\u00e7\u00e3o.\n\n125\n\n\n\n100\n\n010\n\n001\n\nT\n\n105.0\n\n010\n\n001\n\nT\n\n105.1\n\n010\n\n001\n\nT\n\n101\n\n010\n\n001\n\nT\n\n102\n\n010\n\n001\n\nT\n\nFigura 5.46 \u2013 Deforma\u00e7\u00e3o n\u00e3o coaxial progressiva de um modelo digital de terreno gerado por computador.\nCisalhamento no plano XY e na dire\u00e7\u00e3o do eixo X As matrizes mostram as componentes do tensor a cada etapa.\nO elips\u00f3ide de deforma\u00e7\u00e3o \u00e9 tamb\u00e9m exibido. \n\n105.2\n\n010\n\n001\n\nT\n\n126\n\n\n\n21.100\n\n091.00\n\n001\n\nT\n\n100\n\n010\n\n001\n\nT\n\n77.100\n\n054.00\n\n001\n\nT\n\n36.100\n\n076.00\n\n001\n\nT\n\nFigura 5.47 \u2013 Deforma\u00e7\u00e3o coaxial progressiva do modelo digital da Bacia de Taubat\u00e9. O valor das componentes\no tensor modificadas \u00e9 mostrado a cada etapa. A deforma\u00e7\u00e3o envolve um encurtamento na dire\u00e7\u00e3o do eixo\n\ncoordenado Y e um estiramento ao longo do eixo Z A regi\u00e3o central mostra o elips\u00f3ide de deforma\u00e7\u00e3o.\nd\n\nDi\u00e1piro de sal. Este modelo foi criado deformando uma esfera no ambiente do GOCAD \n\nusando o algoritmo DSI de interpola\u00e7\u00e3o do programa (Mallet, 1989). Um modelo poligonal \n\nde esfera de 40 meridianos e 40 paralelos foi gerado com a classe vtkSphereSource do VTK,\n\ngravado em formato *.dis (MOVIE.BYU) e convertido para o formato *.ts do GOCAD \n\n(programa dis2ts desenvolvido por este mestrando) (Figura 5.49a). Neste programa, foram\n\nadicionados pontos de controle externos para orientar a interpola\u00e7\u00e3o do objeto (Figura 5.49b). \n\nEm seguida, a esfera foi deformada usando o conjunto de pontos de controle (Figura 5.49c). \n\nPor fim, o objeto no formato *.ts foi convertido, via programa ts2dis, de volta para o formato\n\n*.vtk (arquivo objs/main/diapir.vtk na estrutura de diret\u00f3rios do programa Tensor3D).\n\nA Figura 5.50 mostra a seq\u00fc\u00eancia de uma deforma\u00e7\u00e3o coaxial (primeiras tr\u00eas etapas) e \n\noutra n\u00e3o coaxial (\u00faltima etapa) para o modelo do di\u00e1piro de sal. A modelagem geom\u00e9trica\n\ndeste objeto \u00e9 um exemplo de integra\u00e7\u00e3o de ferramentas comerciais (GOCAD) e de c\u00f3digo\n\naberto (VTK), por meio de programas auxiliares de convers\u00e3o. \n\n127\n\n\n\n77.100\n\n054.05.0\n\n001\n\nT\n\n77.100\n\n054.00\n\n001\n\nT\n\n77.100\n\n054.05.1\n\n001\n\nT\n\n77.100\n\n054.01\n\n001\n\nT\n\n77.100\n\n054.05.2\n\n001\n\nT\n\n77.100\n\n054.02\n\n001\n\nT\n\nFigura 5.48 \u2013 Deforma\u00e7\u00e3o n\u00e3o coaxial progressiva do modelo digital da Bacia de Taubat\u00e9. O processo come\u00e7a\ncom a etapa final da deforma\u00e7\u00e3o coaxial da figura anterior. Cisalhamento simples no plano XZ (vertical) e na\ndire\u00e7\u00e3o do eixo X, paralelo ao eixo maior da bacia. \n\n128\n\n\n\n129\n\nFigura 5.49 \u2013 Modelagem de um di\u00e1piro no ambiente GOCAD. (a) Importa\u00e7\u00e3o da representa\u00e7\u00e3o poligonal de\numa esfera criada usando o VTK e adi\u00e7\u00e3o de pontos auxiliares (regi\u00e3o inferior). (b) Defini\u00e7\u00e3o dos pontos como\nv\u00ednculos (em azul) para a deforma\u00e7\u00e3o do objeto. (c) Interpola\u00e7\u00e3o (algoritmo DSI do GOCAD).\n\n(a) (c)(b)\n\nFigura 5.50 \u2013 Deforma\u00e7\u00e3o progressiva do modelo de um di\u00e1piro em modalidade de simetria do tensor. (a), (b) e \n(c) Deforma\u00e7\u00e3o coaxial com modifica\u00e7\u00e3o simult\u00e2nea das componentes normais do tensor para simular volume\nconstante do objeto. (d) Deforma\u00e7\u00e3o n\u00e3o coaxial (plano XZ) a partir da \u00faltima etapa do processo anterior. Os\neixos principais de deforma\u00e7\u00e3o \u00ea1 e \u00ea3 deixam de ser paralelos a X e Z, respectivamente.\n\n100\n\n010\n\n001\n\nT\n\n77.000\n\n014.10\n\n0014.1\n\nT\n\n6.0023.0\n\n03.10\n\n23.003.1\n\nT\n\n6.000\n\n03.10\n\n003.1\n\nT\n\n(c) (d)\n\n(a) (b)\n\n\n\nCubos achatados. Este objeto foi criado usando a biblioteca VTK (script aus/biscuits.tcl),\n\nsendo composto de tr\u00eas grupos de cubos achatados e alinhados com os planos coordenados \n\n(Figura 5.51a). Cada grupo cont\u00e9m 16 cubos. O primeiro grupo a ser criado foi o conjunto no \n\nplano XY. Para tanto, foram usadas inst\u00e2ncias da classe vtkCubeSource. O fator de escala dos \n\ncubos foi especificado usando m\u00e9todos desta classe e corresponde a 1:1:0.5. Todas as \n\ninst\u00e2ncias foram combinadas usando a classe vtkAppendPolyData. O conjunto de 16 cubos \n\nachatados do plano XY foi passado como entrada para duas inst\u00e2ncias da classe \n\nvtkTransformPolyData, as quais operaram, atrav\u00e9s da classe vtkTransform, duas rota\u00e7\u00f5es \n\ndistintas: uma de 90 graus em torno do eixo X e outra de -90 graus em torno do eixo Y. Desta \n\nforma foram criados os conjuntos de cubos alinhados aos eixos XZ e YZ, respectivamente. O\n\nobjeto final resulta de uma composi\u00e7\u00e3o realizada atrav\u00e9s de outra inst\u00e2ncia da classe\n\nvtkAppendPolyData, e foi gravado em disco com o nome biscuits.vtk (diret\u00f3rio objs/main).\n\nNo exemplo da Figura 5.51 foram realizadas uma deforma\u00e7\u00e3o coaxial e outra n\u00e3o \n\ncoaxial, antes separadamente e em seguida de forma combinada.\n\nAl\u00e9m dos modelos ilustrados nesta se\u00e7\u00e3o, o diret\u00f3rio objs do programa Tensor3D\n\ncont\u00e9m outros objetos usados para testar determinadas funcionalidades do aplicativo. Existem\n\ntamb\u00e9m outros agregados de objetos criados usando o programa Object Factory 3D. Por \n\nexemplo, o diret\u00f3rio objs/main cont\u00e9m modelos de agregados monominer\u00e1licos isotr\u00f3picos: \n\nos objetos usados s\u00e3o cilindros (arquivo agregado_cil_iso.vtk), pir\u00e2mides\n\n(agregado_cones_iso.vtk), cubos deformados em paralelep\u00edpedos (agregado_cubes_iso.vtk) e \n\nesferas deformadas em elips\u00f3ides (agregado_esf_iso.vtk).\n\n130\n\n\n\n(c) (d)\n\n(a) (b)\n\nFigura 5.51 \u2013 Deforma\u00e7\u00e3o de um conjunto de cubos achatados. Os objetos est\u00e3o alinhados com os planos\ncoordenados XY, YZ e XZ. (a) Estado indeformado. (b) Deforma\u00e7\u00e3o coaxial: estiramento na dire\u00e7\u00e3o do eixo X \npor um fator de 2.0. (c) Deforma\u00e7\u00e3o n\u00e3o coaxial a partir do estado (a): cisalhamento simples no plano XY e na\ndire\u00e7\u00e3o negativa do eixo Y (e32 = -0.762). (d) composi\u00e7\u00e3o das duas deforma\u00e7\u00f5es anteriores.\n\n131\n\n\n\n6 Integra\u00e7\u00e3o das bibliotecas VTK e GTK\n\nComo foi mostrado nas se\u00e7\u00f5es anteriores, o sistema VTK oferece numerosos m\u00f3dulos\n\nflex\u00edveis que implementam os principais algoritmos de visualiza\u00e7\u00e3o cient\u00edfica. O resultado do \n\nprocessamento \u00e9 visualizado em uma janela tridimensional. Para aplica\u00e7\u00f5es complexas, onde \n\nseja necess\u00e1ria a introdu\u00e7\u00e3o de informa\u00e7\u00f5es pelo usu\u00e1rio, \u00e9 importante dispor de janelas de\n\nintera\u00e7\u00e3o constitu\u00eddas por bot\u00f5es, barras de rolagem, campos para introdu\u00e7\u00e3o de texto e\n\nn\u00fameros, etc. Tais funcionalidades s\u00e3o proporcionadas pela biblioteca GTK (programas\n\ncompilados) e linguagem Tcl/Tk (programas interpretados). \n\nConsiderando a possibilidade de construir aplica\u00e7\u00f5es de visualiza\u00e7\u00e3o mais complexas\n\ninerente aos programas compilados baseados na biblioteca VTK (se\u00e7\u00e3o 3.4.3), e objetivando\n\npreparar um ambiente de trabalho para aplica\u00e7\u00f5es tridimensionais interativas, este mestrando\n\nconduziu estudos no sentido de integrar as bibliotecas VTK e GTK no mesmo projeto. O\n\nambiente de desenvolvimento escolhido foi o anjuta (se\u00e7\u00e3o 3.5.2), que possui numerosas\n\nfacilidades para o programador.\n\n6.1 Compila\u00e7\u00e3o dos m\u00f3dulos de trabalho \n\nA integra\u00e7\u00e3o de VTK e GTK envolveu o desenvolvimento de aplica\u00e7\u00f5es h\u00edbridas, isto \n\n\u00e9, baseadas nas linguagens C++ (utilizada pela biblioteca gr\u00e1fica VTK) e C (utilizada para o \n\ndesenvolvimento da biblioteca GTK). Esta integra\u00e7\u00e3o, que aparentemente deveria ocorrer de\n\nforma simples devido \u00e0s ferramentas de apoio oferecidas pelo anjuta, tornou-se um problema\n\njustamente dentro deste ambiente de desenvolvimento. Em particular, o anjuta n\u00e3o permitia a\n\ncompila\u00e7\u00e3o de simples programas de teste em C++ que integrassem as bibliotecas\n\nmencionadas.\n\nO programa anjuta cria um arquivo de Makefile dentro do diret\u00f3rio de projeto, o que \n\npermitiu examinar seu conte\u00fado e tentar executar a compila\u00e7\u00e3o manualmente atrav\u00e9s do\n\ncomando make. Infelizmente, a estrutura deste arquivo \u00e9 excessivamente complexa para \n\npermitir uma an\u00e1lise, e a invoca\u00e7\u00e3o do comando make gerava os mesmos erros de compila\u00e7\u00e3o \n\nexibidos no ambiente do anjuta.\n\nAp\u00f3s numerosas tentativas de compila\u00e7\u00e3o, foram consultadas listas de discuss\u00e3o na \n\np\u00e1gina Web do anjuta sobre o problema de integra\u00e7\u00e3o de c\u00f3digos em C e C++, o que \n\nconfirmou a incapacidade do sistema em gerenciar simultaneamente m\u00f3dulos nas duas \n\nlinguagens. Em particular, os desenvolvedores da ferramenta informaram que o m\u00f3dulo de \n\n132\n\n\n\ncria\u00e7\u00e3o do arquivo de Makefile no anjuta apresenta falhas e prometeram uma revis\u00e3o na \n\npr\u00f3xima vers\u00e3o do software.\n\nSendo o ambiente anjuta uma ferramenta de desenvolvimento muito pr\u00e1tica, que \n\npermite acelerar o gerenciamento de projetos complexos, este mestrando decidiu escrever\n\nmanualmente arquivos de Makefile. Apesar desta pr\u00e1tica contrastar com a facilidade de uso do \n\nanjuta, trata-se de uma opera\u00e7\u00e3o a ser executada uma \u00fanica vez para cada projeto, sendo que\n\num mesmo arquivo de Makefile pode ser utilizado para outros projetos com pequenas \n\nmodifica\u00e7\u00f5es.\n\nAp\u00f3s a cria\u00e7\u00e3o de um arquivo de Makefile, a ferramenta anjuta conseguiu compilar\n\num programa de teste com \u00eaxito. A Figura 6.1 mostra o resultado da execu\u00e7\u00e3o de um\n\nprograma compilado que exibe as janelas do VTK e do GTK simultaneamente. Alguns \n\naspectos da integra\u00e7\u00e3o entre estas ferramentas ser\u00e3o descritos nas pr\u00f3ximas se\u00e7\u00f5es. \n\nFigura 6.1 \u2013 Exemplo de integra\u00e7\u00e3o da biblioteca gr\u00e1fica VTK (esquerda) com a ferramenta de interface GTK. A\nintera\u00e7\u00e3o do usu\u00e1rio com a janela do GTK (direita) permite modificar as propriedades geom\u00e9tricas e de\nvisualiza\u00e7\u00e3o do objeto exibido.\n\n6.2 Gerenciamento de m\u00faltiplos ciclos de intera\u00e7\u00e3o \n\nA compila\u00e7\u00e3o de programas com as bibliotecas VTK e GTK permitiu iniciar o estudo \n\nde integra\u00e7\u00e3o destas ferramentas dentro de uma mesma aplica\u00e7\u00e3o. Um problema considerado\n\ndesde o in\u00edcio foi a presen\u00e7a de um evento principal de execu\u00e7\u00e3o (main loop) para cada \n\nbiblioteca. Este conceito ser\u00e1 explicado a seguir. Para tanto, \u00e9 necess\u00e1rio descrever \n\nbrevemente as modalidades de execu\u00e7\u00e3o das duas bibliotecas.\n\nO uso da biblioteca VTK subtende instancia\u00e7\u00e3o de classes (cria\u00e7\u00e3o de objetos de \n\ndeterminados tipos) e interliga\u00e7\u00e3o das mesmas, de forma que a sa\u00edda de processamento de \n\numa seja a entrada para o processamento da classe seguinte, e assim por diante. Ap\u00f3s a \n\n133\n\n\n\nconstru\u00e7\u00e3o de um pipeline, ou fluxo de dados entre classes, a intera\u00e7\u00e3o do usu\u00e1rio com a \n\njanela 3D de visualiza\u00e7\u00e3o somente \u00e9 poss\u00edvel atrav\u00e9s do m\u00f3dulo vtkRenderWindowInteractor,\n\no qual aguarda eventos associados ao mouse e ao teclado e atualiza o conte\u00fado da janela 3D\n\nadequadamente. Para isto, o m\u00f3dulo precisa executar um ciclo (ou loop) cont\u00ednuo de \n\ninstru\u00e7\u00f5es, durante o qual \u201cmonopoliza\u201d a execu\u00e7\u00e3o do programa, isto \u00e9, n\u00e3o permite a \n\nexecu\u00e7\u00e3o de instru\u00e7\u00f5es externas ao ciclo. Tal ciclo \u00e9 virtualmente infinito, no sentido de que \n\ndura enquanto o programa estiver em execu\u00e7\u00e3o. Isto n\u00e3o representa um problema contanto \n\nque a visualiza\u00e7\u00e3o pelo VTK seja o \u00fanico m\u00f3dulo do programa em funcionamento.\n\nProgramas baseados na biblioteca GTK apresentam a mesma caracter\u00edstica. Ap\u00f3s a \n\ncria\u00e7\u00e3o e visualiza\u00e7\u00e3o de todas as componentes de intera\u00e7\u00e3o do usu\u00e1rio com a interface \n\n(bot\u00f5es, campos para informa\u00e7\u00f5es, etc.), um programa baseado nesta biblioteca necessita\n\n\u201centrar\u201d em um ciclo de execu\u00e7\u00e3o virtualmente infinito. Durante o mesmo, a biblioteca\n\nverifica continuamente se o usu\u00e1rio usou o mouse sobre alguma componente (\u201cclicar\u201d sobre \n\nalgum bot\u00e3o, \u201cdeslizar\u201d uma barra de rolagem, etc.) e atualiza a interface adequadamente. \n\nEste ciclo de intera\u00e7\u00e3o (main loop) \u00e9 executado at\u00e9 o usu\u00e1rio finalizar a aplica\u00e7\u00e3o e,\n\nde forma semelhante \u00e0 classe vtkRenderWindowInteractor, monopoliza o programa dentro do \n\nqual estiver executando. \n\nFigura 6.2 \u2013 Exemplo de threads\ncontidas em um processo.\n\nPara promover a integra\u00e7\u00e3o das bibliotecas VTK e \n\nGTK em uma mesma aplica\u00e7\u00e3o, foram implementadas\n\ndiferentes threads de execu\u00e7\u00e3o. Uma thread pode ser vista \n\ncomo um processo distinto, apesar de representar uma\n\nunidade de execu\u00e7\u00e3o computacionalmente menos\n\ndispendiosa (em termos de utiliza\u00e7\u00e3o de recursos do\n\nsistema operacional) que um processo tradicional em \n\nambiente UNIX. Um mesmo processo pode conter v\u00e1rias \n\nthreads que s\u00e3o executadas simultaneamente e de forma\n\nindependente (Figura 6.2). Isto permite a realiza\u00e7\u00e3o em paralelo de tarefas computacionais\n\nque t\u00eam pouca ou nenhuma rela\u00e7\u00e3o entre si.\n\nConsiderado que as bibliotecas VTK e GTK possuem ciclos de intera\u00e7\u00e3o \n\nindependentes, a execu\u00e7\u00e3o das mesmas foi atribu\u00edda a duas threads distintas, sendo a primeira\n\nrespons\u00e1vel pelo processamento gr\u00e1fico, e a segunda pelo gerenciamento da interface com o \n\nusu\u00e1rio. Ap\u00f3s a inicializa\u00e7\u00e3o de suas componentes, cada thread ingressa seu ciclo de eventos,\n\naguardando a intera\u00e7\u00e3o com o usu\u00e1rio. Tal intera\u00e7\u00e3o pode ocorrer com a janela 3D do VTK \n\n(Figura 6.1), promovendo a atualiza\u00e7\u00e3o do ponto de observa\u00e7\u00e3o, zoom, etc.; ou com a janela \n\n134\n\n\n\nde interface do GTK, permitindo a utiliza\u00e7\u00e3o dos bot\u00f5es e demais componentes presentes na \n\nmesma.\n\nNo ambiente Linux \u00e9 poss\u00edvel definir threads de execu\u00e7\u00e3o atrav\u00e9s da biblioteca \n\npthread, que foi utilizada neste trabalho. Tal biblioteca, desenvolvida em C, cont\u00e9m \n\nnumerosas fun\u00e7\u00f5es para controlar a cria\u00e7\u00e3o, execu\u00e7\u00e3o e destrui\u00e7\u00e3o de threads, bem como \n\nmecanismos de sincroniza\u00e7\u00e3o entre as v\u00e1rias unidades de processamento.\n\n6.3 Sincroniza\u00e7\u00e3o e comunica\u00e7\u00e3o entre processos de execu\u00e7\u00e3o (threads)\n\nEm uma aplica\u00e7\u00e3o multi-threaded, isto \u00e9, constitu\u00edda de v\u00e1rias threads independentes \n\nque executam em paralelo, \u00e9 muitas vezes necess\u00e1rio que as unidades em execu\u00e7\u00e3o troquem \n\ninforma\u00e7\u00f5es entre si. Um exemplo disto \u00e9 um programa de visualiza\u00e7\u00e3o cient\u00edfica com a\n\nop\u00e7\u00e3o de ler dados geom\u00e9tricos a partir do disco. Normalmente, durante a leitura dos dados, o \n\nusu\u00e1rio pode interagir com a janela principal de visualiza\u00e7\u00e3o, modificando algumas\n\npropriedades gr\u00e1ficas, o que indica que a execu\u00e7\u00e3o dos m\u00f3dulos de visualiza\u00e7\u00e3o e leitura de\n\ndados ocorre atrav\u00e9s de threads distintas. No entanto, terminada a leitura do disco, o m\u00f3dulo\n\nde visualiza\u00e7\u00e3o deve proceder \u00e0 constru\u00e7\u00e3o dos primitivos gr\u00e1ficos correspondentes. O\n\nmomento em que isto ocorre \u00e9 controlado por algum mecanismo de comunica\u00e7\u00e3o entre as \n\nthreads da aplica\u00e7\u00e3o. Uma maneira de garantir tal comunica\u00e7\u00e3o consiste na utiliza\u00e7\u00e3o de \n\nvari\u00e1veis globais, isto \u00e9, vari\u00e1veis de estado cujo conte\u00fado possa ser acessado por todas as \n\nthreads. No exemplo do programa anterior, a thread de visualiza\u00e7\u00e3o poderia consultar\n\nperiodicamente o estado de uma vari\u00e1vel booleana (com valores 1 ou 0) para verificar se \u00e9 \n\nnecess\u00e1rio realizar a atualiza\u00e7\u00e3o do conte\u00fado da janela 3D. Contudo, j\u00e1 que a execu\u00e7\u00e3o das \n\nthreads de leitura e de visualiza\u00e7\u00e3o ocorre de forma paralela, \u00e9 poss\u00edvel que a segunda leia o \n\nconte\u00fado da vari\u00e1vel exatamente no momento em que a primeira estiver modificando seu \n\nvalor. Isto pode provocar falhas graves de execu\u00e7\u00e3o.\n\nPara garantir o correto funcionamento de uma aplica\u00e7\u00e3o multi-threaded onde os v\u00e1rios\n\nm\u00f3dulos de execu\u00e7\u00e3o trocam informa\u00e7\u00f5es entre si, \u00e9 necess\u00e1rio assegurar que, enquanto uma\n\nthread estiver escrevendo uma informa\u00e7\u00e3o compartilhada, as demais n\u00e3o tentar\u00e3o realizar sua\n\nleitura. Para isto, utiliza-se ferramentas de sincroniza\u00e7\u00e3o providas pelo sistema operacional. \n\nCom este m\u00e9todo, sempre que uma thread estiver prestes a escrever em uma vari\u00e1vel \n\nglobal, \u00e9 ativado um bloqueio, ou lock,  o qual impede que as demais threads em execu\u00e7\u00e3o\n\nconcorrente realizem sua leitura. Na pr\u00e1tica, a execu\u00e7\u00e3o destas threads de leitura \u00e9 suspensa\n\nat\u00e9 que a thread de escrita abandone o bloqueio sobre a vari\u00e1vel compartilhada. Tal \n\n135\n\n\n\ncomportamento deve ser codificado de forma expl\u00edcita pelo programador. Desta forma, o \n\npseudo-c\u00f3digo para uma thread de escrita ser\u00e1: \n\nAtive_lock;\n\n  Atualize_vari\u00e1vel; \n\nDesative_lock;\n\nO c\u00f3digo das threads que executam a leitura da vari\u00e1vel compartilhada ser\u00e1: \n\nAtive_lock;\n\n  Leia_vari\u00e1vel; \n\nDesative_lock;\n\nA indenta\u00e7\u00e3o (espa\u00e7amento) indica que as instru\u00e7\u00f5es dentro dos comandos de \n\ngerenciamento de lock est\u00e3o contidas em uma regi\u00e3o cr\u00edtica de c\u00f3digo, isto \u00e9, uma regi\u00e3o \n\nonde somente pode \u201centrar\u201d (ser executada) uma thread de cada vez. \n\nO exemplo de aplica\u00e7\u00e3o ilustrado acima \u00e9 relativamente simples, mas existem casos \n\nmuito mais complexos de utiliza\u00e7\u00e3o de bloqueios para threads. Bloqueios s\u00e3o tamb\u00e9m\n\ndefinidos de forma distribu\u00edda, isto \u00e9, transpondo os limites f\u00edsicos de um computador e \n\nutilizando redes de computadores para a comunica\u00e7\u00e3o entre processos em m\u00e1quinas distintas.\n\nPor exemplo, em uma aplica\u00e7\u00e3o de bancos de dados distribu\u00eddos \u00e9  necess\u00e1rio garantir que um \n\nregistro n\u00e3o seja lido enquanto algum processo (em outro computador remoto) estiver \n\natualizando suas informa\u00e7\u00f5es. Um sistema de visualiza\u00e7\u00e3o complexo constitu\u00eddo de m\u00faltiplos\n\nn\u00f3s de processamento constitui uma aplica\u00e7\u00e3o t\u00edpica.\n\nVoltando ao problema de integra\u00e7\u00e3o das bibliotecas VTK e GTK, espera-se que o \n\nusu\u00e1rio possa modificar propriedades gr\u00e1ficas do objeto visualizado utilizando bot\u00f5es e \n\ndemais componentes de intera\u00e7\u00e3o da janela do GTK. Por exemplo, a Figura 6.1 mostra que o \n\nusu\u00e1rio pode modificar o aspecto de uma superf\u00edcie, selecionando o sombreamento de tipo \n\nWireframe ou Gouraud (se\u00e7\u00e3o 3.1.1). Tais informa\u00e7\u00f5es precisam ser notificadas para a thread\n\ndo VTK, de forma que esta realize as atualiza\u00e7\u00f5es gr\u00e1ficas necess\u00e1rias. Uma vari\u00e1vel global\n\nchamada wireframe, compartilhada entre as threads do VTK e do GTK, poderia assumir o \n\nvalor 1 em caso de visualiza\u00e7\u00e3o da malha vazada e o valor 0 para a modalidade Gouraud.\n\nPara garantir a sincroniza\u00e7\u00e3o de acesso \u00e0 vari\u00e1vel compartilhada, foi utilizado um \n\nmecanismo de bloqueio denominado mutex, o qual faz parte do conjunto de ferramentas\n\noferecidas pela biblioteca pthread do sistema operacional Linux. Dentre as fun\u00e7\u00f5es de \n\ngerenciamento de mutex (ou locks) que a biblioteca oferece, pode-se destacar:\n\n136\n\n\n\n- pthread_mutex_init. Providencia a cria\u00e7\u00e3o de um bloqueio.\n\n- pthread_mutex_destroy. Destr\u00f3i um bloqueio n\u00e3o mais necess\u00e1rio.\n\n- pthread_mutex_lock. Tenta obter exclusividade de acesso atrav\u00e9s de um bloqueio. Caso o \n\nbloqueio j\u00e1 tenha sido obtido por outra thread, a thread atual ser\u00e1 suspensa.\n\n- pthread_mutex_unlock. Abandona o bloqueio permitindo o acesso \u00e0s demais threads.\n\n- pthread_mutex_trylock. Semelhante \u00e0 fun\u00e7\u00e3o pthread_mutex_lock, mas se o bloqueio j\u00e1 \n\nestiver ativado, a thread atual n\u00e3o \u00e9 suspensa e continua a execu\u00e7\u00e3o das instru\u00e7\u00f5es seguintes.\n\nA thread poder\u00e1 tentar o bloqueio na pr\u00f3xima execu\u00e7\u00e3o. \n\nComo foi explicado acima, os ciclos principais de execu\u00e7\u00e3o do VTK e do GTK (main\n\nloops) precisam acessar periodicamente o conte\u00fado das vari\u00e1veis compartilhadas para \n\ntrocarem informa\u00e7\u00f5es (por exemplo, se o usu\u00e1rio selecionou uma modalidade de visualiza\u00e7\u00e3o \n\ndiferente na interface GTK). Um problema grave, neste sentido, \u00e9 que o VTK n\u00e3o possui \n\nmecanismos deste tipo e, ap\u00f3s ingressar no ciclo principal de eventos da classe \n\nvtkRenderWindowInteractor, n\u00e3o \u00e9 poss\u00edvel invocar fun\u00e7\u00f5es externas de forma peri\u00f3dica. \n\nExistem fun\u00e7\u00f5es associadas a eventos gerados na janela de visualiza\u00e7\u00e3o, como uso do \n\nteclado e do mouse, para os quais \u00e9 poss\u00edvel definir o acesso \u00e0s vari\u00e1veis compartilhadas com \n\na thread que executa o GTK. Mas todas estas fun\u00e7\u00f5es t\u00eam sua execu\u00e7\u00e3o subordinada \u00e0 \n\nocorr\u00eancia de algum evento externo ao gerenciador vtkRenderWindowInteractor, n\u00e3o sendo \n\nposs\u00edvel gerar eventos internos (independentes) de forma peri\u00f3dica. Este problema implica\n\nem uma situa\u00e7\u00e3o de incomunicabilidade da thread associada ao VTK com as demais threads\n\nde execu\u00e7\u00e3o. De fato, n\u00e3o sendo poss\u00edvel a comunica\u00e7\u00e3o entre os m\u00f3dulos de visualiza\u00e7\u00e3o e \n\nde interface com o usu\u00e1rio, todas as componentes oferecidas pela biblioteca GTK se\n\ntornariam in\u00fateis.\n\nUma busca aprofundada no grupo de discuss\u00e3o do VTK na rede Internet (VTK\n\nMAILING LIST, 2004), para uma poss\u00edvel integra\u00e7\u00e3o das duas bibliotecas mostrou que isto\n\nainda n\u00e3o ocorreu. Alguns desenvolvedores do grupo aconselharam escrever um gerenciador\n\nde eventos h\u00edbrido, que contivesse fun\u00e7\u00f5es VTK e GTK, eliminando tamb\u00e9m a necessidade\n\nde se trabalhar com threads distintas. A escrita de tal gerenciador \u00e9 uma tarefa bastante \n\ncomplexa que este mestrando preferiu evitar por causa do tempo de desenvolvimento\n\nenvolvido.\n\nN\u00e3o podendo for\u00e7ar o gerenciador da biblioteca VTK a gerar periodicamente eventos \n\ninternos para consultar o estado das vari\u00e1veis de comunica\u00e7\u00e3o com as demais threads, optou-\n\nse pela utiliza\u00e7\u00e3o dos eventos externos (n\u00e3o provocados pelo VTK) que a biblioteca pode\n\ngerenciar.\n\n137\n\n\n\nToda classe do VTK invoca dois eventos, StartEvent e EndEvent correspondentes,\n\nrespectivamente, ao in\u00edcio e fim de seu processamento. Quando alguma janela se sobrep\u00f5e \u00e0 \n\njanela principal de visualiza\u00e7\u00e3o (por exemplo, arrastada pelo usu\u00e1rio utilizando o mouse), o \n\nconte\u00fado desta \u00e9 atualizado automaticamente. Al\u00e9m disto, s\u00e3o invocados os eventos \n\nStartEvent e EndEvent da classe vtkRenderer. Esta classe cria o conte\u00fado da janela 3D a partir \n\ndas informa\u00e7\u00f5es obtidas de m\u00f3dulos antecedentes do pipeline de visualiza\u00e7\u00e3o (fontes de \n\ndados, filtros, atores, posi\u00e7\u00e3o da c\u00e2mera, etc.). Para for\u00e7ar a execu\u00e7\u00e3o de um evento de\n\natualiza\u00e7\u00e3o da janela 3D, as fun\u00e7\u00f5es associadas \u00e0s componentes da interface GTK foram\n\nimplementadas de forma a criar e destruir uma pequena janela (dimens\u00e3o de 10x10 pixels) \n\nsobre a janela do VTK. Isto provoca a execu\u00e7\u00e3o de todos os m\u00f3dulos do pipeline respons\u00e1veis \n\npela visualiza\u00e7\u00e3o, atualizando o conte\u00fado da janela 3D. Outro efeito \u00e9 a execu\u00e7\u00e3o de fun\u00e7\u00f5es \n\nassociadas aos eventos StartEvent e EndEvent para a classe vtkRenderer. Estas fun\u00e7\u00f5es foram\n\ncodificadas de forma a consultarem o conte\u00fado das vari\u00e1veis de controle entre as threads do \n\nVTK e do GTK.\n\nO mecanismo de comunica\u00e7\u00e3o entre threads implementado n\u00e3o constitui a forma mais\n\nelegante de promover a troca de informa\u00e7\u00f5es de controle entre os gerenciadores de eventos \n\ndas bibliotecas VTK e GTK. Apesar disto, a implementa\u00e7\u00e3o escolhida mostrou-se eficaz e \n\nisto permitiu alocar mais tempo para a execu\u00e7\u00e3o das demais atividades de desenvolvimento.\n\nO CD que acompanha esta disserta\u00e7\u00e3o cont\u00e9m o c\u00f3digo fonte de todos os m\u00f3dulos\n\ndesenvolvidos para integrar as bibliotecas VTK e GTK. Para acessar o c\u00f3digo, \u00e9 suficiente \n\nlocalizar o diret\u00f3rio VTK_GTK. Dentre os v\u00e1rios arquivos, destacam-se:\n\n- Makefile. Arquivo respons\u00e1vel pela compila\u00e7\u00e3o do aplicativo (se\u00e7\u00e3o 3.5.1).\n\n- calls.c. Conjunto de fun\u00e7\u00f5es que controlam o comportamento associado \u00e0s componentes\n\ngr\u00e1ficas (bot\u00f5es e barra de rolagem) da biblioteca GTK (se\u00e7\u00e3o 3.5.3).\n\n- graphics.cc. Conjunto de fun\u00e7\u00f5es destinadas \u00e0 cria\u00e7\u00e3o e manipula\u00e7\u00e3o de classes do\n\nsistema VTK. \n\n- interface.c. Cont\u00e9m fun\u00e7\u00f5es para criar a estrutura da interface gr\u00e1fica do GTK. \u00c9 gerado\n\nautomaticamente ap\u00f3s a intera\u00e7\u00e3o com a ferramenta glade (se\u00e7\u00e3o 3.5.4).\n\n- support.c Arquivo auxiliar tamb\u00e9m gerado pela biblioteca glade.\n\n- main.cc. Arquivo que cont\u00e9m a fun\u00e7\u00e3o principal de execu\u00e7\u00e3o do programa.\n\n- vtk_gtk. C\u00f3digo execut\u00e1vel do aplicativo de integra\u00e7\u00e3o (Figura 6.1). \n\nA compila\u00e7\u00e3o do aplicativo requer a execu\u00e7\u00e3o do comando make a partir do diret\u00f3rio \n\nque cont\u00e9m os m\u00f3dulos de c\u00f3digo fonte. \n\n138\n\n\n\n7 Modelagem 3D da paleobatimetria das bacias de Santos e Campos \n\nNesta se\u00e7\u00e3o ser\u00e3o ilustradas t\u00e9cnicas de computa\u00e7\u00e3o gr\u00e1fica 3D utilizadas para \n\nmodelar dados paleobatim\u00e9tricos das bacias de Campos e Santos. A Figura 7.1 mostra a \n\nlocaliza\u00e7\u00e3o da \u00e1rea de estudo e os limites da paleobatimetria modelada para a regi\u00e3o. Atrav\u00e9s \n\ndestas t\u00e9cnicas, objetivou-se ampliar as capacidades de interpreta\u00e7\u00e3o de mapas\n\nbidimensionais gerados em investiga\u00e7\u00f5es paleoambientais do meso-Neocret\u00e1ceo (do Albiano\n\nao Maastrichtiano, 113 a 65 Ma). A ferramenta de modelagem e visualiza\u00e7\u00e3o empregada foi o\n\nprograma GOCAD (2005) em sua vers\u00e3o 2.1.2.\n\nFigura 7.1 \u2013 Localiza\u00e7\u00e3o da \u00e1rea de estudo (pol\u00edgono vermelho), limites das paleobatimetrias modeladas neste\ntrabalho (pol\u00edgonos azuis) e po\u00e7os utilizados para confeccionar os mapas de Viviers (1986) e Azevedo et al.\n(1987). S\u00e3o tamb\u00e9m exibidas as estruturas oce\u00e2nicas, continentais, litotipos cenoz\u00f3icos, rede de drenagens,\ninforma\u00e7\u00f5es batim\u00e9tricas, bem como limites das bacias de Esp\u00edrito Santo, Campos, Santos e Pelotas.\n\nResultados preliminares referentes \u00e0 paleobatimetria da Bacia de Campos encontram-\n\nse em Ebert &amp; Lavorante (2000). Neste trabalho, foram digitalizadas as curvas de batimetria\n\nda bacia de Campos, utilizando as folhas topogr\u00e1ficas de Maca\u00e9 e Campos na escala \n\n1:250.000. Tamb\u00e9m foram digitalizadas as curvas paleobatim\u00e9tricas da Bacia de Campos, do \n\nAlbiano ao Maastrichtiano, estimadas por Azevedo et al. (1987), visando analisar a varia\u00e7\u00e3o \n\nmorfol\u00f3gica da bacia ao longo da hist\u00f3ria geol\u00f3gica que passa do eo-mesoalbiano, neo-\n\n139\n\n\n\nalbiano, eoturoniano, eoconiaciano, neo-santoniano at\u00e9 o neomaastrichtiano. No ambiente de \n\nvisualiza\u00e7\u00e3o do programa GOCAD foi poss\u00edvel representar todas as superf\u00edcies\n\ntridimensionais simultaneamente, atribuindo-lhes uma colora\u00e7\u00e3o de acordo com uma escala \n\nde cores baseada na altitude relativa de cada modelo.\n\nO ponto de partida do processo de modelagem realizado neste mestrado \u00e9 representado \n\npelos trabalhos de Viviers (1986) e Azevedo et al. (1987), os quais objetivaram estabelecer \n\num arcabou\u00e7o bioestratigr\u00e1fico e paleobatim\u00e9trico para as bacias de Santos e Campos,\n\nrespectivamente, no contexto da explora\u00e7\u00e3o petrol\u00edfera. Estes trabalhos, de natureza \n\nmicropaleontol\u00f3gica, cont\u00eam mapas paleobatim\u00e9tricos associados a topos de seq\u00fc\u00eancias \n\ndeposicionais identificadas, tendo como base o estudo de amostras de calhas e de testemunhos\n\nobtidos a partir de 39 po\u00e7os para a Bacia de Santos e de 49 po\u00e7os para a Bacia de Campos. A \n\ndelimita\u00e7\u00e3o das biozonas correspondentes, aliada a informa\u00e7\u00f5es litoestratigr\u00e1ficas e \n\nsismoestratigr\u00e1ficas, permitiu inferir a evolu\u00e7\u00e3o paleoambiental das bacias para o intervalo\n\nAlbiano-Maastrichtiano, em seis momentos distintos (Figura 7.2).\n\nFigura 7.2 \u2013 Posi\u00e7\u00e3o temporal aproximada (linhas vermelhas) dos mapas paleobatim\u00e9tricos para as bacias de\nSantos e Campos (de acordo com Viviers, 1986; e Azevedo et al., 1987). Idades de acordo com Harland et al. \n(1982).\n\n140\n\n\n\nEm trabalho posterior, Viviers e Azevedo (1988) subdividiram a hist\u00f3ria deposicional \n\nda por\u00e7\u00e3o sudeste da margem continental brasileira em cinco seq\u00fc\u00eancias, a partir das quais \n\nobtiveram mapas paleobatim\u00e9tricos integrados, visando homogeneizar os resultados que \n\nhaviam obtido separadamente. As idades dos mapas consideradas neste trabalho\n\ncorrespondem \u00e0s dos mapas que Azevedo (1987) havia definido para a Bacia de Campos. Na \n\npresente disserta\u00e7\u00e3o, optou-se pela utiliza\u00e7\u00e3o dos mapas paleobatim\u00e9tricos dos trabalhos\n\nseparados, que apresentam mais detalhes morfol\u00f3gicos que os mapas integrados. Al\u00e9m disto, \n\nforam encontradas similaridades com os mapas confeccionados em separado, sobretudo no\n\ntocante \u00e0 paleobatimetria da Bacia de Campos. Por fim, a maioria dos mapas apresenta um \n\nconsistente hiato de dire\u00e7\u00e3o EW do norte na Bacia de Santos ao Sul da Bacia de Campos,\n\ntornando justific\u00e1vel, em termos de potencial descritivo, o uso de modelagens distintas para as \n\nbacias.\n\n7.1 Digitaliza\u00e7\u00e3o e georreferenciamento das curvas \n\nOs mapas paleobatim\u00e9tricos foram rasterizados e importados no programa AutoDesk\n\nMap (2002). Para georreferenciar os mesmos, surgiu a necessidade de identificar ao menos\n\nduas coordenadas geogr\u00e1ficas que servissem como base. Para tanto, foram utilizadas \n\ncoordenadas da batimetria e de po\u00e7os extra\u00eddos do site do BDEP/ANP (2004).\n\nInicialmente os mapas foram georreferenciados com as coordenadas de dois pontos da \n\nlinha de costa (Figura 7.3). No caso espec\u00edfico, as coordenadas estavam na proje\u00e7\u00e3o UTM \n\n(Universal Transversa de Mercator), SAD 69, zona 23 sul.  Para isso utilizou-se o comando\n\nAlign, selecionando-se um ponto conhecido, e inserindo os valores das coordenadas \n\ncorrespondentes. Em seguida foram utilizados os valores das coordenadas dos po\u00e7os no \n\nmesmo sistema de proje\u00e7\u00e3o.\n\nCom o mapa georreferenciado, iniciou-se o trabalho de digitaliza\u00e7\u00e3o das curvas\n\npaleobatim\u00e9tricas e dos po\u00e7os (39 para a Bacia de Santos e 49 para a Bacia de Campos)\n\n(Figura 7.4). Para isso utilizou-se a op\u00e7\u00e3o Polyline.\n\nOs ambientes de deposi\u00e7\u00e3o considerados durante a digitaliza\u00e7\u00e3o foram o continental-\n\npar\u00e1lico (10-0 m de altitude), plataformal (raso: 0 a 40 m de profundidade; m\u00e9dio: 40-100 m;\n\nprofundo: 100-200 m) e batial (superior: 200-500m de profundidade; m\u00e9dio: 500-1000 m;\n\ninferior: 1000-2000 m). Isto permitiu atribuir eleva\u00e7\u00f5es diferentes \u00e0s isolinhas que denotam a\n\ntransi\u00e7\u00e3o entre ambientes adjacentes. A Figura 7.5 mostra os valores de batimetria associados\n\naos limites dos ambientes considerados. Cada ambiente \u00e9 identificado atrav\u00e9s de um padr\u00e3o \n\nde cores que foi associado \u00e0 varia\u00e7\u00e3o batim\u00e9trica das superf\u00edcies modeladas.\n\n141\n\n\n\nOs conjuntos de curvas obtidos foram exportados no formato DXF, gerando-se seis \n\narquivos para cada bacia, correspondentes aos momentos cret\u00e1cicos indicados na Figura 7.2.\n\nNas legendas das figuras referentes \u00e0s v\u00e1rias idades de visualiza\u00e7\u00e3o paleobat\u00edmetrica, o termo\n\n\u201cfinal\u201d est\u00e1 entre aspas em raz\u00e3o do diacronismo do topo do intervalo estratigr\u00e1fico.\n\nFigura 7.3 \u2013 Digitaliza\u00e7\u00e3o, no ambiente AutoDesk Map, da linha de costa atual (esquerda) para realizar o\ngeorreferenciamento dos mapas paleobatim\u00e9tricos 2D. Bacia de Santos, situa\u00e7\u00e3o ao \u201cfinal\u201d do neo-albiano (97 \nMa). Mapa original: Viviers (1986).\n\n142\n\nFigura 7.4 \u2013 Digitaliza\u00e7\u00e3o das curvas paleobatim\u00e9tricas (em vermelho) e da localiza\u00e7\u00e3o dos po\u00e7os. Bacia de \nSantos, situa\u00e7\u00e3o ao \u201cfinal\u201d do neo-albiano.\n\n\n\n7.2 Cria\u00e7\u00e3o de Modelos Digitais de Terreno (MDT\u00b4s)\n\nNesta etapa foram constru\u00eddas malhas vazadas 3D (ou MDT\u00b4s) para cada conjunto de\n\ncurvas paleobatim\u00e9tricas, utilizando o programa GOCAD. \n\nOs arquivos DXF gerados em ambiente AutoDesk Map foram importados no GOCAD \n\nsob a forma de objetos do tipo Curve (conjuntos de linhas poligonais). A Figura 7.6 mostra\n\num exemplo de curvas paleobat\u00edmetricas coloridas de acordo com uma escala de cores \n\nassociada \u00e0 varia\u00e7\u00e3o batim\u00e9trica dos ambientes deposicionais considerados (do continental \n\npara o batial inferior, tendo-se como refer\u00eancia a Figura 7.5). Utilizou-se uma mesma escala \n\ndo vermelho para o roxo para sombrear os modelos de todas as superf\u00edcies de modos a\n\npermitir uma melhor compara\u00e7\u00e3o entre elas.\n\nFigura 7.5 \u2013 Modelo esquem\u00e1tico dos ambientes deposicionais considerados para representar a varia\u00e7\u00e3o\npaleobatim\u00e9trica nos modelos digitais constru\u00eddos. As diferentes cores identificam ambientes distintos. Adaptado\nde Koutsoukos (1987).\n\nEm seguida, a partir de cada conjunto de curvas, foram extra\u00eddos os pontos\n\ncorrespondentes (obtidos durante a digitaliza\u00e7\u00e3o dos mapas 2D). No ambiente GOCAD, estes \n\npontos s\u00e3o entidades do tipo PointSet.  Esta opera\u00e7\u00e3o \u00e9 essencial para a correta constru\u00e7\u00e3o de \n\nmalhas vazadas. \n\nA partir das curvas de isoprofundidades, foi tamb\u00e9m constru\u00edda uma nova curva, \n\ndenominada \u201cfeixo convexo\u201d (Convex Hull, Figura 7.7.). Tal curva \u00e9 o menor conjunto de \n\nsegmentos interconectados que cont\u00e9m as curvas paleobatim\u00e9tricas. Sua utiliza\u00e7\u00e3o \u00e9 \n\nimportante para controlar a qualidade de malhas vazadas criadas a partir de pontos avulsos.\n\nUtilizando o conjunto de pontos de cada idade e seu feixo convexo, foram constru\u00eddas\n\nmalhas vazadas 3D atrav\u00e9s do algoritmo de triangula\u00e7\u00e3o Delaunay (WATSON, 1981). Trata-\n\nse de um procedimento de constru\u00e7\u00e3o de malhas de tri\u00e2ngulos a partir de pontos no plano.\n\nEste algoritmo \u00e9 a t\u00e9cnica mais bem sucedida para a confec\u00e7\u00e3o de modelos digitais de \n\nterrenos, pois minimiza os inconvenientes da cria\u00e7\u00e3o de tri\u00e2ngulos muito estreitos,\n\ncaracter\u00edstica indesej\u00e1vel na modelagem geom\u00e9trica de superf\u00edcies. Para tanto, utiliza o\n\n143\n\n\n\ncrit\u00e9rio do circuncentro, segundo o qual tr\u00eas pontos do conjunto de entrada somente podem\n\nser usados como v\u00e9rtices de um novo tri\u00e2ngulo se o circuncentro deste n\u00e3o contiver outros \n\npontos do conjunto (Figura 7.8). O algoritmo de triangula\u00e7\u00e3o Delaunay est\u00e1 implementado no \n\nprograma GOCAD e para sua execu\u00e7\u00e3o \u00e9 suficiente criar uma nova superf\u00edcie (objeto \n\nSurface) a partir de pontos e curvas. As curvas consistem no feixo convexo criado \n\nanteriormente. Sua utiliza\u00e7\u00e3o \u00e9 necess\u00e1ria para prover a orienta\u00e7\u00e3o aproximada de um plano\n\nsobre o qual os pontos ser\u00e3o projetados, reduzindo a dimens\u00e3o (n\u00famero de coordenadas) \n\ndestes de 3 para 2. Tal exig\u00eancia deriva da natureza bidimensional do algoritmo de \n\ntriangula\u00e7\u00e3o. A Figura 7.9 mostra a malha vazada da paleobatimetria ao \u201cfinal\u201d do eo-\n\nmesoalbiano para a Bacia de Santos, obtida a partir das curvas exibidas na Figura 7.7. \n\nFinalmente, a Figura 7.10 mostra a mesma superf\u00edcie sombreada de acordo com a \n\nescala de cores constru\u00edda na Figura 7.5. A utiliza\u00e7\u00e3o de cores fornece uma indica\u00e7\u00e3o visual \n\nimediata da varia\u00e7\u00e3o batim\u00e9trica ao longo da superf\u00edcie e dos ambientes de deposi\u00e7\u00e3o\n\nregistrados.\n\nN\n\nFigura 7.6 \u2013 Bacia de Santos: visualiza\u00e7\u00e3o das curvas paleobatim\u00e9tricas ao \u201cfinal\u201d do eo-mesoalbiano no \nambiente GOCAD. S\u00e3o vis\u00edveis os pontos digitalizados e uma escala de cores que acompanha a varia\u00e7\u00e3o da \nbatimetria. A sigla \u201cC-P\u201d denota o ambiente continental-par\u00e1lico.\n\nN\n\n144Figura 7.7 \u2013 Visualiza\u00e7\u00e3o do feixo convexo (linha branca) do conjunto de curvas da figura anterior.\n\n\n\nFig. 7.8 \u2013 Triangula\u00e7\u00e3o Delaunay de um conjunto de pontos no plano. O circuncentro de cada tri\u00e2ngulo gerado\npode conter apenas os tr\u00eas v\u00e9rtices deste. \n\nN\n\nFigura 7.9 \u2013 Constru\u00e7\u00e3o de uma malha vazada de tri\u00e2ngulos (superf\u00edcie paleobatim\u00e9trica) a partir dos pontos e\ndo feixo convexo da Figura 7.7. O fator de exagero vertical \u00e9 20.\n\nFigura 7.10 \u2013 Sombreamento da superf\u00edcie paleobatim\u00e9trica do \u201cfinal\u201d do eo-mesoalbiano (Bacia de Santos),\nobtido usando uma escala de cores que mapeia as varia\u00e7\u00f5es de batimetria dos ambientes deposicionais. A\ncolora\u00e7\u00e3o aplicada a esta superf\u00edcie destaca um ambiente par\u00e1lico e plataformal raso-m\u00e9dio. Espa\u00e7amento\nvertical das isolinhas pretas: 200 m.\n\n145\n\n\n\n7.3 Modelagem de dados complementares \n\nVisando aumentar o potencial de interpreta\u00e7\u00e3o associado \u00e0s superf\u00edcies \n\npaleobatim\u00e9tricas criadas, foram utilizadas informa\u00e7\u00f5es complementares para modelar dados \n\nauxiliares da plataforma continental do Sudeste do Brasil. Segue uma descri\u00e7\u00e3o das principais \n\nentidades modeladas: \n\nPo\u00e7os. Durante a etapa de digitaliza\u00e7\u00e3o dos mapas paleobatim\u00e9tricos 2D, foi tamb\u00e9m\n\nexecutada a digitaliza\u00e7\u00e3o e georreferenciamento dos po\u00e7os utilizados para a confec\u00e7\u00e3o dos\n\nreferidos mapas. O georreferenciamento foi realizado escolhendo-se, respectivamente, 4 e 7 \n\npo\u00e7os para as bacias de Campos e Santos; e obtendo suas coordenadas a partir do Banco de \n\nDados de Explora\u00e7\u00e3o e Produ\u00e7\u00e3o, dispon\u00edvel na Internet (BDEP, 2004).\n\nA finalidade desta modelagem consiste na visualiza\u00e7\u00e3o da localiza\u00e7\u00e3o dos po\u00e7os\n\nindiretamente utilizados para a cria\u00e7\u00e3o das superf\u00edcies paleobatim\u00e9tricas. As Figuras 7.3 e 7.4 \n\nmostram parte do conjunto de po\u00e7os originais exibidos no mapa paleobatim\u00e9trico 2D da Bacia \n\nde Santos para o \u201cfinal\u201d do neo-albiano. \n\nAs informa\u00e7\u00f5es de localiza\u00e7\u00e3o dos po\u00e7os foram exportadas, no ambiente AutoDesk\n\nMap, para o formato ASCII, criando-se um arquivo para cada bacia. Cada linha deste arquivo \n\ncont\u00e9m uma informa\u00e7\u00e3o de nome e localiza\u00e7\u00e3o do po\u00e7o correspondente (coordenadas X, Y e \n\nZ). A cota das plataformas correspondentes aos po\u00e7os ilustrados foi considerada igual a zero, \n\nj\u00e1 que as sondas encontram-se na superf\u00edcie do mar.\n\nOs arquivos ASCII foram importados no programa GOCAD, criando-se uma entidade \n\ndo tipo Well para cada po\u00e7o. A entidade correspondente \u00e9 representada por um s\u00edmbolo de \n\npo\u00e7o amarelo, a partir do qual \u00e9 tra\u00e7ada uma trajet\u00f3ria vertical retil\u00ednea em vermelho at\u00e9 a \n\nprofundidade padr\u00e3o de 4000 m. Tal profundidade representa uma conven\u00e7\u00e3o utilizada para \n\ncoer\u00eancia de visualiza\u00e7\u00e3o. Para facilitar o gerenciamento m\u00faltiplo das propriedades de \n\nvisualiza\u00e7\u00e3o dos po\u00e7os de cada bacia, estes foram reunidos em estruturas de manipula\u00e7\u00e3o\n\ndenominadas groups. Desta forma, foi criado um grupo para cada bacia. As Figuras 7.11 e \n\n7.12 mostram a localiza\u00e7\u00e3o dos po\u00e7os nas bacias de Santos e Campos, respectivamente, com \n\nas superf\u00edcies paleobatim\u00e9tricas do \u201cfinal\u201d do mesoalbiano.\n\nLinha de costa atual. Esta informa\u00e7\u00e3o foi acrescentada para facilitar a localiza\u00e7\u00e3o das\n\nsuperf\u00edcies paleobatim\u00e9tricas em rela\u00e7\u00e3o ao relevo continental atual e demais estruturas\n\nmodeladas. Serve tamb\u00e9m para destacar eventos transgressivos / regressivos ocorridos \n\ndurante o per\u00edodo de estudo. Foi obtida do CPRM (2000) e importada no GOCAD como uma\n\nentidade Curve. As Figuras 7.11 e 7.12 cont\u00eam exemplos de visualiza\u00e7\u00e3o da linha de costa. A \n\nFigura 7.13 mostra, entre outras entidades, a linha de costa atual com as superf\u00edcies \n\n146\n\n\n\npaleobatim\u00e9tricas das duas figuras anteriores. \u00c9 importante destacar que tal figura constitui o \n\nprimeiro exemplo de visualiza\u00e7\u00e3o simult\u00e2nea dos dados de paleobatimetria referentes \u00e0s duas\n\nbacias, em virtude da possibilidade de exibir v\u00e1rias entidades distintas ao mesmo tempo no \n\nprograma GOCAD. \n\nTopografia atual. Trata-se do MDT do relevo continental atual do Sudeste do Brasil, \n\nobtido atrav\u00e9s do projeto GTOPO30 (2004). A superf\u00edcie topogr\u00e1fica original foi \u201crecortada\u201d \n\nao longo de uma linha poligonal fechada que delimita a \u00e1rea de estudo (Figura 7.1). Este \n\nrecorte permitiu reduzir a complexidade do modelo digital atrav\u00e9s da remo\u00e7\u00e3o de partes do\n\nrelevo topogr\u00e1fico n\u00e3o relevantes para a visualiza\u00e7\u00e3o das informa\u00e7\u00f5es paleobatim\u00e9tricas das\n\nbacias de Santos e Campos. A topografia foi sombreada usando uma escala de cores do azul \n\npara o branco, acompanhando a varia\u00e7\u00e3o altim\u00e9trica (Figura 7.13). \n\nHidrografia atual. A hidrografia associada ao relevo continental complementa as\n\ninforma\u00e7\u00f5es fisiogr\u00e1ficas. As curvas de hidrografia foram obtidas a partir de dados do CPRM\n\nintegrados com informa\u00e7\u00f5es da Ag\u00eancia Nacional de \u00c1guas (ANA, 2004). Um exemplo \u00e9\n\nmostrado na Figura 7.13. A rede de drenagens modelada cobria uma regi\u00e3o mais extensa que \n\na exibida nas figuras anteriores. Sua adapta\u00e7\u00e3o envolveu o recorte, em ambiente GOCAD, das\n\nregi\u00f5es correspondentes \u00e0 por\u00e7\u00e3o de topografia removida.\n\nLinha de charneira das bacias de Santos e Campos. Esta informa\u00e7\u00e3o \u00e9 representada\n\npor uma linha poligonal azul (Figura 7.13). A linha de charneira foi digitalizada a partir de um\n\nmapa de estruturas oce\u00e2nicas e continentais (SHOBBENHAUS &amp; CAMPOS, 1984 apud \n\nCAINELLI &amp; MOHRIAK, 1998) que ser\u00e1 mostrado mais adiante. O processo foi executado \n\ndiretamente no ambiente GOCAD, mas antes foi necess\u00e1rio georreferenciar a imagem com o \n\nprograma ER Mapper (EARTH RESOURCES MAPPER, 2005). \n\nBatimetria atual. O modelo digital da batimetria atual para as regi\u00f5es das bacias de \n\nSantos e Campos foi obtido a partir do projeto TOPEX (2004). O conjunto de pontos estava \n\nno sistema de coordenadas LAT-LONG e foi convertido para o sistema UTM/23 SUL. A \n\npartir dos pontos foi criada uma malha vazada e a superf\u00edcie foi sombreada utilizando uma\n\nescala de cores do azul para o vermelho (Figura 7.14). Para real\u00e7ar a varia\u00e7\u00e3o morfol\u00f3gica ao\n\nlongo do modelo, foram tamb\u00e9m tra\u00e7adas isolinhas com espa\u00e7amento vertical de 100 m.\n\nPlano do n\u00edvel do mar. Esta entidade foi obtida criando, no programa GOCAD, uma \n\nsuperf\u00edcie plana (quadril\u00e1tero). Em seguida, o objeto foi recortado usando a curva da linha de \n\ncosta atual e a curva que delimita a \u00e1rea de estudo. A superf\u00edcie coincide com o plano XY do \n\nsistema global de coordenadas, possuindo eleva\u00e7\u00e3o igual a zero. O plano recebeu um \u00edndice \n\nde transpar\u00eancia de 60% para revelar as estruturas subjacentes (Figura 7.15).\n\n147\n\n\n\nLimite entre a crosta oce\u00e2nica e continental. Trata-se de uma curva digitalizada a \n\npartir de um mapa topogr\u00e1fico / batim\u00e9trico do trabalho de Paula &amp; Mohriak (2005). O limite\n\nentre crostas oce\u00e2nica e continental utilizado pelos autores inclui a regi\u00e3o das bacias de \n\nCampos e Santos (Figura 7.16). \n\nCurvas de evolu\u00e7\u00e3o da linha de costa. A informa\u00e7\u00e3o indicativa das linhas de costa \n\nassociadas \u00e0s v\u00e1rias idades estudadas foi determinada, para a bacia de Santos, considerando-\n\nse a curva de transi\u00e7\u00e3o entre os ambientes continental e par\u00e1lico (isto \u00e9, a curva de eleva\u00e7\u00e3o\n\nigual a zero) nas v\u00e1rias superf\u00edcies paleobatim\u00e9tricas. Foram criadas seis linhas, uma para\n\ncada superf\u00edcie. Nos mapas paleobatim\u00e9tricos originais, o limite continental / par\u00e1lico foi\n\nidentificado apenas nas \u00faltimas duas idades consideradas, sendo que para as demais adotou-se\n\no limite continental / plataformal (Figura 7.2). As curvas obtidas s\u00e3o entidades interessantes \n\nimplicitamente contidas nos conjuntos de curvas paleobatim\u00e9tricas digitalizadas, e que podem \n\nser usadas para efeito de compara\u00e7\u00e3o com a linha de costa atual. A Figura 7.17 mostra um\n\nexemplo de linha de costa indicativa para o \u201cfinal\u201d do eo-mesoalbiano. A seq\u00fc\u00eancia de linhas \n\ngeradas para o inteiro per\u00edodo do Albiano ao Maastrichtiano ser\u00e1 mostrada na pr\u00f3xima se\u00e7\u00e3o.\n\nN\n\nFigura 7.11 \u2013 Visualiza\u00e7\u00e3o dos po\u00e7os utilizados para a confec\u00e7\u00e3o dos mapas paleobatim\u00e9tricos da Bacia de\nSantos. S\u00e3o tamb\u00e9m representadas a superf\u00edcie batim\u00e9trica ao \u201cfinal\u201d do mesoalbiano e a linha de costa atual (em\nbranco).  Isolinhas pretas tra\u00e7adas a intervalos de 50 m. O fator de exagero vertical \u00e9 20. Vista em planta. \n\n148\n\n\n\nN\n\nFigura 7.12 \u2013 Visualiza\u00e7\u00e3o dos po\u00e7os e superf\u00edcie batim\u00e9trica ao \u201cfinal\u201d do mesoalbiano para a Bacia de \nCampos. A noroeste, um detalhe da linha de costa. Isolinhas pretas tra\u00e7adas a intervalos de 50 m. O fator de\nexagero vertical \u00e9 tamb\u00e9m 20. Vista em planta. \n\n1.210.80.60.40.20-0.2\nN\n\nRio Ribeira \n\nRPS\n\nRPS\n\nBacia de Campos \n\nBacia de Santos\n\nFigura 7.13 \u2013 Visualiza\u00e7\u00e3o simult\u00e2nea das superf\u00edcies paleobatim\u00e9tricas das bacias de Santos e Campos ao\n\u201cfinal\u201d do mesoalbiano (103 Ma). S\u00e3o tamb\u00e9m exibidos o relevo topogr\u00e1fico atual, a rede de drenagens, a linha\nde costa atual (em branco), a linha de charneira das bacias (em azul) e os po\u00e7os. A escala de cores acompanha a \nvaria\u00e7\u00e3o de altitude da topografia, passando pelas cores azul (n\u00edvel do mar), verde (200 m), amarela (600 m),\nvermelha (1000 m) e branca (1500 m). RPS = Rio Para\u00edba do Sul. O fator de exagero vertical \u00e9 20 para todas as \nentidades. Visada para sudoeste.\n\n149\n\n\n\nN\n\n0-1-2-3-4\n\nVale do Para\u00edba \n\nSerra do Mar \n\nFlorian\u00f3polis\n\nRPS\n\nFigura 7.14 \u2013 Batimetria atual acrescentada ao conjunto de entidades da Figura anterior. A superf\u00edcie foi \nsombreada usando uma escala de cores que passa pelo azul escuro (4000 m de profundidade), verde escuro\n(3000 m), verde claro (2000 m), laranja (1000 m) e vermelho (n\u00edvel do mar) O espectro de cores acompanha a \nvaria\u00e7\u00e3o batim\u00e9trica. Fator de exagero vertical: 20. Visada para Norte.\n\nN\n\n0-1-2-3-4\n\nSerra do Mar \n\nFlorian\u00f3polis\n\nVale do Para\u00edba \n\nRPS\n\nFigura 7.15 \u2013 Adi\u00e7\u00e3o de plano semitransparente para indicar o atual n\u00edvel do mar. A escala de cores exibida\nrefere-se \u00e0 batimetria atual. Visada para Norte.\n\n150\n\n\n\nN\n\n0-1-2-3-4\n\nRPS\n\nFlorian\u00f3polis\n\nVale do Para\u00edba \n\nFigura 7.16 \u2013 Limite entre a crosta oce\u00e2nica e continental indicado pela linha vermelha (regi\u00e3o inferior). Em\nazul, a linha de charneira das bacias de Santos e Campos. Vista em planta.\n\nN\n\n0-1-2-3-4\n\nRPS\n\nFlorian\u00f3polis\n\nVale do Para\u00edba \n\nFigura 7.17 \u2013 Bacia de Santos: visualiza\u00e7\u00e3o (em branco) da linha de costa ao \u201cfinal\u201d do mesoalbiano. Esta linha\nfoi obtida considerando-se o in\u00edcio do ambiente plataformal na superf\u00edcie paleobatim\u00e9trica correspondente. O \nfator de exagero vertical \u00e9 20. Visada para Norte.\n\n151\n\n\n\n7.4 Visualiza\u00e7\u00e3o 3D dos modelos digitais obtidos\n\nComo foi mostrado acima, as superf\u00edcies paleobatim\u00e9tricas modeladas foram\n\nvisualizadas em 3D com o programa GOCAD (Figuras 7.9 e seguintes). Neste ambiente,\n\nt\u00e9cnicas de visualiza\u00e7\u00e3o cient\u00edfica permitiram enriquecer o conjunto de informa\u00e7\u00f5es exibidas.\n\nDestaca-se a utiliza\u00e7\u00e3o de uma escala de cores associada \u00e0 varia\u00e7\u00e3o batim\u00e9trica de cada\n\nsuperf\u00edcie, com limites predefinidos, para proporcionar uma informa\u00e7\u00e3o visual imediata de\n\nsua eleva\u00e7\u00e3o (Figura 7.10).\n\nOutra t\u00e9cnica amplamente usada em representa\u00e7\u00f5es 2D \u00e9 a visualiza\u00e7\u00e3o de isolinhas \n\nassociadas a n\u00edveis de batimetria predefinidos. Esta ferramenta foi tamb\u00e9m utilizada ao longo \n\nda visualiza\u00e7\u00e3o 3D. As isolinhas foram tra\u00e7adas sobre as superf\u00edcies paleobatim\u00e9tricas.\n\nA evolu\u00e7\u00e3o morfol\u00f3gica da Bacia de Santos do Albiano ao Maastrichtiano \u00e9 mostrada\n\nna Figura 7.18. As superf\u00edcies paleobatim\u00e9tricas foram coloridas usando a escala de cores \n\nilustrada anteriormente, visando fornecer uma indica\u00e7\u00e3o intuitiva da varia\u00e7\u00e3o batim\u00e9trica\n\ndentro de cada ambiente deposicional. Sobre as superf\u00edcies foram tamb\u00e9m tra\u00e7adas isolinhas\n\nde cor preta, com espa\u00e7amento vertical de 50 metros. Dentre as entidades complementares,\n\nforam visualizadas a topografia, hidrografia e a linha de costa atuais, bem como a linha de \n\ncharneira da bacia e a localiza\u00e7\u00e3o dos po\u00e7os utilizados na prepara\u00e7\u00e3o dos mapas 2D originais\n\n(VIVIERS, 1986). Todas as entidades mencionadas foram exibidas simultaneamente usando \n\numa \u00fanica janela 3D de visualiza\u00e7\u00e3o. \n\nDe maneira an\u00e1loga, a Figura 7.19 mostra a evolu\u00e7\u00e3o da batimetria da Bacia de \n\nCampos para o mesmo per\u00edodo. Todas as superf\u00edcies foram sombreadas usando a mesma\n\nescala de cores adotada para a Bacia de Santos. Al\u00e9m disto, sobre cada modelo foram tra\u00e7adas\n\nisolinhas com intervalos de 50 metros (primeira, segunda e terceira superf\u00edcies) e de 100 \n\nmetros (demais superf\u00edcies). A Figura exibe tamb\u00e9m um detalhe da topografia local e a \n\nlocaliza\u00e7\u00e3o dos po\u00e7os utilizados para confeccionar os mapas 2D originais (AZEVEDO et al.,\n\n1987).\n\n152\n\n\n\nN\n\n(c)\n\n(b)\n\n(a)\n\nFigura 7.18a-c \u2013 Bacia de Santos: superf\u00edcies batim\u00e9tricas ao \u201cfinal\u201d do eo-mesoalbiano (a) (103 Ma), neo-\nalbiano (b) (97,5 Ma) e mesoturoniano (c) (89 Ma). S\u00e3o tamb\u00e9m representadas a topografia, hidrografia e linha\nde costa atuais, os po\u00e7os e a linha de charneira (em azul). Neste per\u00edodo, observa-se o gradual aumento da\nprofundidade, com a deposi\u00e7\u00e3o em ambiente plataformal at\u00e9 batial superior. Fator de exagero vertical: 20. Vista\nem planta. \n\n153\n\n\n\nN\n\n(d)\n\n(e)\n\n(f)\n\n154\n\nFigura 7.18d-f \u2013 Bacia de Santos: superf\u00edcies batim\u00e9tricas ao \u201cfinal\u201d do eosantoniano (d) (86 Ma), eocampaniano\n(e) (81 Ma) e Maastrichtiano (f) (65 Ma). Uma fase progradante, que caracterizou ambientes de deposi\u00e7\u00e3o mais\nrasos (at\u00e9 plataformal m\u00e9dio), foi seguida por novo estabelecimento de condi\u00e7\u00f5es mais profundas (plataformal\nprofundo at\u00e9 batial superior. Houve tamb\u00e9m expans\u00e3o do ambiente par\u00e1lico na regi\u00e3o central da bacia.\n\n\n\nRPS\n\nRPS\n\nRPS\n\nN\n\n(c)\n\n(b)\n\n(a)\n\nFigura 7.19a-c \u2013 Bacia de Campos: superf\u00edcies batim\u00e9tricas ao \u201cfinal\u201d do eo-mesoalbiano (a) (103 Ma), neo-\nalbiano (b) (97,5 Ma) e eoturoniano (c) (90 Ma). Como na Bacia de Santos, ocorreu progressivo aumento da\nprofundidade, com ambiente plataformal m\u00e9dio-profundo, de inclina\u00e7\u00e3o crescente, e batial superior. Este\nambiente estava bem mais difundido que na Bacia de Santos (Figura 7.18c). RPS = Rio Para\u00edba do Sul.\n\n155\n\n\n\nRPS\n\nRPS\n\nRPS\n\nN\n\n(f)\n\n(e)\n\n(d)\n\nFigura 7.19d-f \u2013 Bacia de Campos: superf\u00edcies batim\u00e9tricas ao \u201cfinal\u201d do eoconiaciano (d) (88 Ma), Santoniano\n(e) (83 Ma) e Maastrichtiano (f) (65 Ma). Neste per\u00edodo observa-se o dom\u00ednio do ambiente batial (superior a\ninferior) sobre a regi\u00e3o, ocorrendo crescente aumento da profundidade.\n\n156\n\n\n\nAmbientes de visualiza\u00e7\u00e3o 3D de dados como o programa GOCAD proporcionam\n\noutras funcionalidades extremamente poderosas. Al\u00e9m dos recursos j\u00e1 mencionados, \u00e9 \n\nposs\u00edvel destacar os seguintes: \n\nModifica\u00e7\u00e3o interativa do ponto de observa\u00e7\u00e3o. Tal caracter\u00edstica \u00e9 conseq\u00fc\u00eancia do\n\ncar\u00e1ter tridimensional da visualiza\u00e7\u00e3o de dados. As entidades s\u00e3o exibidas em uma janela 3D, \n\nque \u00e9 o resultado da \u201ccaptura\u201d de uma cena por uma c\u00e2mera virtual. O ponto de observa\u00e7\u00e3o \n\ndo usu\u00e1rio representa a c\u00e2mera, sendo poss\u00edvel modificar a dire\u00e7\u00e3o de observa\u00e7\u00e3o bem como\n\na dist\u00e2ncia dos objetos visualizados, fator de exagero vertical, etc. Para ilustrar um exemplo,\n\ncompare-se as Figuras 7.19 e 7.20. A primeira mostra uma vista em planta das superf\u00edcies \n\npaleobatim\u00e9tricas da Bacia de Campos. Tal dire\u00e7\u00e3o de observa\u00e7\u00e3o representa um caso \n\n\u201cparticular\u201d de visualiza\u00e7\u00e3o em um ambiente 3D. A Figura 7.20 mostra as mesmas entidades \n\ngeom\u00e9tricas utilizando uma dire\u00e7\u00e3o de observa\u00e7\u00e3o e fator de exagero vertical diferentes.\n\nAl\u00e9m disto, a tonalidade das cores aplicadas \u00e0s superf\u00edcies foi ajustada de forma a considerar\n\na posi\u00e7\u00e3o das mesmas em rela\u00e7\u00e3o a uma fonte de luz virtual, melhorando a no\u00e7\u00e3o de \n\nprofundidade das entidades. A representa\u00e7\u00e3o 3D utilizada permite identificar com maior\n\nfacilidade as varia\u00e7\u00f5es morfol\u00f3gicas da bacia ao longo do tempo: ocorr\u00eancia de ambiente \n\nplataformal raso durante o eo-mesoalbiano, expans\u00e3o do meio plataformal m\u00e9dio-profundo e \n\nbatial superior at\u00e9 o eoturoniano, profundidades crescentes nos per\u00edodos seguintes, com a \n\nconsolida\u00e7\u00e3o do meio batial superior a inferior. \u00c9 tamb\u00e9m poss\u00edvel observar a forma\u00e7\u00e3o de\n\naltos na por\u00e7\u00e3o leste da bacia (registrados ao \u201cfinal\u201d do Santoniano) e de um talude \n\nrelativamente \u00edngrime durante o Maastrichtiano. \n\nA modifica\u00e7\u00e3o interativa do ponto de observa\u00e7\u00e3o do usu\u00e1rio \u00e9 um recurso fundamental\n\npara se manter a impress\u00e3o visual 3D das superf\u00edcies estudadas. Com efeito, o conte\u00fado de \n\numa janela de visualiza\u00e7\u00e3o 3D \u00e9 apenas uma imagem exibida em uma tela bidimensional\n\n(superf\u00edcie do monitor). Para se manter a percep\u00e7\u00e3o de profundidade, \u00e9 necess\u00e1rio rotacionar\n\ncontinuamente os modelos visualizados. Tal percep\u00e7\u00e3o \u00e9 facilitada em computa\u00e7\u00e3o gr\u00e1fica \n\natrav\u00e9s de recursos como a utiliza\u00e7\u00e3o de uma escala de cores, a visualiza\u00e7\u00e3o da malha vazada \n\ndos objetos (conjunto de arestas), o tra\u00e7ado de curvas de isoprofundidades, a proje\u00e7\u00e3o \n\ngeom\u00e9trica em perspectiva, a oclus\u00e3o de parte de objetos por entidades mais pr\u00f3ximas do \n\nobservador, etc. (FOLEY et al., 1996). Uma t\u00e9cnica mais realista consiste na visualiza\u00e7\u00e3o de\n\numa imagem composta a partir de duas imagens obtidas de pontos de observa\u00e7\u00e3o ligeiramente\n\ndiferentes, simulando a composi\u00e7\u00e3o das imagens dos olhos esquerdo e direito realizada pelo \n\nc\u00e9rebro dos seres humanos (vis\u00e3o estereosc\u00f3pica, SCHROEDER et al., 1996). A utiliza\u00e7\u00e3o de \n\n157\n\n\n\num equipamento especial de realidade virtual (\u00f3culos estereosc\u00f3picos) permite separar as\n\nduas imagens compostas, para \u201cenganar\u201d o c\u00e9rebro, expondo cada olho a uma imagem\n\ndiferente. O programa GOCAD suporta tal equipamento e visualiza\u00e7\u00f5es de entidades \n\ngeol\u00f3gicas complexas foram realizadas com \u00eaxito no Laborat\u00f3rio de GeoModelagem 3D do \n\nDPM / IGCE / UNESP.\n\nVisualiza\u00e7\u00e3o combinada de modelos distintos. Tal funcionalidade consiste na \n\nvisualiza\u00e7\u00e3o simult\u00e2nea de v\u00e1rios modelos na mesma cena 3D. Isto permite aumentar o \n\npotencial de interpreta\u00e7\u00e3o dos dados investigados, j\u00e1 que caracter\u00edsticas de entidades distintas\n\npodem ser exibidas na mesma cena para real\u00e7ar rela\u00e7\u00f5es de semelhan\u00e7as / diferen\u00e7as, entre \n\noutras. Exemplos de visualiza\u00e7\u00e3o combinada de modelos distintos (superf\u00edcies\n\npaleobatim\u00e9tricas e modelos auxiliares) foram mostrados nas Figuras 7.11 e seguintes. Outro \n\nexemplo \u00e9 a exibi\u00e7\u00e3o simult\u00e2nea da evolu\u00e7\u00e3o paleoambiental das bacias de Santos e Campos\n\n(Figura 7.21). Tal recurso permite identificar padr\u00f5es de evolu\u00e7\u00e3o comuns \u00e0s duas bacias. \n\nEsta integra\u00e7\u00e3o de dados \u00e9 uma caracter\u00edstica importante dos ambientes de modelagem e \n\nvisualiza\u00e7\u00e3o 3D. Outros exemplos de integra\u00e7\u00e3o ser\u00e3o mostrados mais adiante.\n\nProdu\u00e7\u00e3o de anima\u00e7\u00f5es. Consiste na possibilidade de gerar seq\u00fc\u00eancias de imagens\n\nreferentes a idades geol\u00f3gicas distintas, com a finalidade de prover uma ferramenta de estudo \n\nda evolu\u00e7\u00e3o das entidades investigadas ao longo de intervalos temporais predefinidos. As\n\nFiguras 7.18 a 7.21, que mostram a evolu\u00e7\u00e3o batim\u00e9trica das bacias de Santos e Campos do \n\nAlbiano ao Maastrichtiano, constituem um exemplo de anima\u00e7\u00e3o.\n\nUtilizando os dados paleobatim\u00e9tricos, \u00e9 poss\u00edvel construir outras anima\u00e7\u00f5es\n\ninteressantes. Por exemplo, considere-se, em cada superf\u00edcie da Bacia de Santos, a curva de \n\nnivel correspondente \u00e0 transi\u00e7\u00e3o entre os ambientes continental e par\u00e1lico (Figura 7.5). Tal \n\ncurva faz parte do conjunto de curvas de isoprofundidades digitalizadas nos mapas 2D de \n\nViviers (1986) e Azevedo et al. (1987), e pode ser indicativa do n\u00edvel do mar nas idades \n\nconsideradas. Visualizando separadamente cada curva e ordenando as imagens obtidas de\n\nacordo com uma seq\u00fc\u00eancia temporal, \u00e9 poss\u00edvel produzir uma anima\u00e7\u00e3o da evolu\u00e7\u00e3o da linha \n\nde costa durante o meso-Neocret\u00e1ceo. (Figura 7.22). A seq\u00fc\u00eancia de imagens constitui uma\n\nferramenta de aux\u00edlio para a caracteriza\u00e7\u00e3o de eventos transgressivos / regressivos ocorridos\n\ndurante o per\u00edodo estudado. \n\n158\n\n\n\n,\n\n(a)\n\n(b)\n\nN\n(c)\n\nFigura 7.20a-c \u2013 Bacia de Campos: superf\u00edcies batim\u00e9tricas ao \u201cfinal\u201d do eo-mesoalbiano (a), neo-albiano (b) e\neoturoniano (c).O fator de exagero vertical \u00e9 50. Dire\u00e7\u00e3o de observa\u00e7\u00e3o de SE para NW. As entidades s\u00e3o agora\nvisualizadas levando em conta seu car\u00e1ter tridimensional. Verifica-se a evolu\u00e7\u00e3o de um ambiente plataformal de\nbaixo gradiente para o meio batial superior, com regi\u00f5es de subsid\u00eancia mais r\u00e1pida.\n\n159\n\n\n\nN\n(f)\n\n(e)\n\n(d)\n\nFigura 7.20d-f - Bacia de Campos: superf\u00edcies batim\u00e9tricas ao \u201cfinal\u201d do eoconiaciano (d), Santoniano (e) e\nMaastrichtiano (f). Esta dire\u00e7\u00e3o de observa\u00e7\u00e3o permite destacar as varia\u00e7\u00f5es morfol\u00f3gicas ocorridas em rela\u00e7\u00e3o \nao per\u00edodo Albiano-Eoturoniano.\n\n160\n\n\n\nC\n\nS\n\nIlha\nBela\n\nFlorian\u00f3polis\n\n(a)\n\nC\n\nS\n\nIlha\nBela\n\nFlorian\u00f3polis\n\n(b)\n\nN\nC\n\nS\n\nIlha\nBela\n\nFlorian\u00f3polis\n\n(c)\n\nFigura 7.21a-c \u2013 Visualiza\u00e7\u00e3o simult\u00e2nea da evolu\u00e7\u00e3o paleobatim\u00e9trica das bacias de Santos (S) e Campos (C),\nmostrando um padr\u00e3o de evolu\u00e7\u00e3o comum que atinge o meio batial superior. Idades consideradas: (a) \u201cfinal\u201d do\neo-mesoalbiano, (b) neo-albiano, (c) eoturoniano (Bacia de Campos) / mesoturoniano (Bacia de Santos). Posi\u00e7\u00e3o\ntemporal dos mapas: vide Figura 7.2. Fator de exagero vertical: 20. Dire\u00e7\u00e3o de observa\u00e7\u00e3o de NE para SW.\n\n161\n\n\n\nN\n\nC\n\nS\n\nIlha\nBela\n\nFlorian\u00f3polis\n\nC\n\nS\n\nIlha\nBela\n\nFlorian\u00f3polis\n\nC\n\nS\n\nIlha\nBela\n\nFlorian\u00f3polis\n\n(f)\n\n(e)\n\n(d)\n\nFigura 7.21d-f \u2013 Visualiza\u00e7\u00e3o simult\u00e2nea da evolu\u00e7\u00e3o paleobatim\u00e9trica das bacias de Santos e Campos. (d) \n\u201cFinal\u201d do eoconiaciano (Bacia de Campos) e mesoturoniano (Bacia de Santos). (e) \u201cFinal\u201d do eoconiaciano\n(Campos) e eosantoniano (Santos). (f) \u201cFinal\u201d do Santoniano (Campos) e eosantoniano (Santos). A Bacia de \nSantos voltou a ser caracterizada por ambiente plataformal raso-m\u00e9dio, enquanto o ambiente batial dominava na\nBacia de Campos, que deveria apresentar uma plataforma continental muito estreita.\n\n162\n\n\n\nC\n\nS\n\nIlha\nBela\n\nFlorian\u00f3polis\n\n(g)\n\nN C\n\nS\n\nIlha\nBela\n\nFlorian\u00f3polis\n\n(h)\n\nFigura 7.21g-h \u2013 Visualiza\u00e7\u00e3o simult\u00e2nea da evolu\u00e7\u00e3o paleobatim\u00e9trica das bacias de Santos e Campos. (g)\n\u201cFinal\u201d do Santoniano (Bacia de Campos) e eocampaniano (Bacia de Santos). (h) \u201cFinal\u201d do Maastrichtiano\n(ambas as bacias). A Bacia de Santos apresentava um ambiente relativamente mais profundo (at\u00e9 batial\nsuperior), al\u00e9m da forma\u00e7\u00e3o de extensa por\u00e7\u00e3o par\u00e1lica. Por outro lado, na Bacia de Campos ocorriam\nambientes de deposi\u00e7\u00e3o bem mais profundos (meio batial inferior) e \u00edngrimes, com plataforma continental muito\nestreita.\n\n163\n\n\n\n(f)\n(b)(a)\n\n(d)(c)\n\n(f)(e)\n\nFigura 7.22 \u2013 Bacia de Santos: posicionamento da linha de costa (em branco) durante o meso-Neocret\u00e1ceo. S\u00e3o\ntamb\u00e9m visualizadas a topografia, batimetria e linha de costa atuais, al\u00e9m da linha de charneira da bacia (em azul).\nA escala de cores refere-se \u00e0 varia\u00e7\u00e3o da batimetria atual. Idades consideradas: \u201cFinal\u201d do eo-mesoalbiano (a), neo-\nalbiano (b), mesoturoniano (c), eosantoniano (d), eocampaniano (e) e Maastrichtiano (f). Vista em planta. \n\n164\n\n\n\n7.5 Modelagem de superf\u00edcies paleobatim\u00e9tricas intermedi\u00e1rias\n\nPara permitir a realiza\u00e7\u00e3o de simula\u00e7\u00f5es mostrando dinamicamente, e de forma mais \n\nrealista, a evolu\u00e7\u00e3o do relevo batim\u00e9trico com o passar do tempo, foram modeladas \n\nsuperf\u00edcies paleobatim\u00e9tricas \u201cintermedi\u00e1rias\u201d. Esta t\u00e9cnica consiste na utiliza\u00e7\u00e3o de \n\nferramentas de modelagem geom\u00e9trica 3D para criar entidades morfologicamente\n\nintermedi\u00e1rias entre os modelos digitais das paleobatimetrias de Santos e de Campos. Para \n\ntanto, foram geradas malhas vazadas entre pares de superf\u00edcies de idades sucessivas ao longo \n\ndo per\u00edodo Albiano-Maastrichtiano. Por exemplo, \u00e9 poss\u00edvel criar um modelo intermedi\u00e1rio\n\nentre as superf\u00edcies referentes \u00e0s idades neo-albiana e eoturoniana da batimetria da bacia de\n\nCampos (Figura 7.23a e b). As superf\u00edcies intermedi\u00e1rias possuem este nome por\n\napresentarem uma geometria de transi\u00e7\u00e3o entre duas superf\u00edcies de origem, permitindo\n\nmodelar a evolu\u00e7\u00e3o entre as mesmas. A t\u00e9cnica representa uma expans\u00e3o dos procedimentos\n\nde morphing usados em computa\u00e7\u00e3o gr\u00e1fica 2D, os quais permitem criar imagens\n\nintermedi\u00e1rias entre duas imagens-base. A extens\u00e3o para a modelagem 3D leva em conta a \n\nconstru\u00e7\u00e3o de superf\u00edcies cujos pontos possuam eleva\u00e7\u00e3o (coordenada Z) intermedi\u00e1ria em \n\nrela\u00e7\u00e3o \u00e0s superf\u00edcies-base. \n\nO procedimento de morphing foi realizado no ambiente do programa GOCAD e \n\nconsiste dos seguintes passos: \n\n- Cria\u00e7\u00e3o de duas c\u00f3pias das superf\u00edcies-base com o comando Surface Mode/New/From\n\nSurfaces.\n\n- Atribui\u00e7\u00e3o de um \u00fanico valor para Z (Z=1, por exemplo) em ambas as superf\u00edcies-c\u00f3pia,\n\nusando Compute/On Object. Em conseq\u00fc\u00eancia disto, as superf\u00edcies assumem uma\n\napar\u00eancia \u201cachatada\u201d (Figura 7.23c). \n\n- Constru\u00e7\u00e3o de uma \u201ccurva\u201d de interse\u00e7\u00e3o entre as superf\u00edcies com o comando Curve\n\nMode/New/From Surfaces/Intersection/With Surfaces (Figura 7.23d). Trata-se, na \n\nverdade, de um conjunto de segmentos delimitados pela interse\u00e7\u00e3o das bordas das \n\nsuperf\u00edcies-base e considerando-se a dire\u00e7\u00e3o do eixo vertical Z. \n\n- Extra\u00e7\u00e3o de pontos a partir da curva com o comando PointSet Mode/New/From PointSet,\n\nCurve or Surface (Figura 7.23e). \n\n- Cria\u00e7\u00e3o de uma curva que delimita os pontos: comando Curve Mode/New/From\n\nPointSet/Convex Hull/Of Object. Trata-se do fecho convexo descrito na se\u00e7\u00e3o 7.2.\n\n165\n\n\n\n- Ajuste do feixo convexo aos pontos: comando Curve Mode/Edit/Fit to Points/Globally.\n\nEste comando pode ser executado repetidamente, o que melhora a qualidade do ajuste de \n\nforma incremental (Figura 7.23f). \n\n- Constru\u00e7\u00e3o de uma nova superf\u00edcie a partir da curva (feixo convexo) e pontos usando o \n\ncomando Surface Mode/New/From PointSets/PointSet and Curve (Figura 7.23g). \n\nNeste momento, est\u00e1 criada a superf\u00edcie intermedi\u00e1ria, faltando definir apenas os \n\nvalores das coordenadas Z de seus pontos. Para tanto, executa-se os seguintes passos: \n\n- Cria\u00e7\u00e3o de duas novas propriedades para a superf\u00edcie intermedi\u00e1ria (chamadas \u201cZA\u201d e \n\n\u201cZB\u201d, por exemplo): comando Property/Create.\n\n- Uso da ferramenta Object, arrastando a propriedade \u201cZ\u201d de cada uma das superf\u00edcies\n\noriginais para as novas propriedades criadas na superf\u00edcie intermedi\u00e1ria. A modalidade de\n\nintegra\u00e7\u00e3o das propriedades \u00e9 Paint Vertically On.\n\n- Uso do comando Compute/On Object, selecionando a nova superf\u00edcie e aplicando a \n\nf\u00f3rmula Z=(ZA+ZB) / 2. Esta f\u00f3rmula ilustra o car\u00e1ter \u201cintermedi\u00e1rio\u201d da superf\u00edcie, \n\ncujos pontos possuem eleva\u00e7\u00e3o igual \u00e0 m\u00e9dia aritm\u00e9tica dos pontos das superf\u00edcies-base.\n\nAp\u00f3s a cria\u00e7\u00e3o das superf\u00edcies intermedi\u00e1rias, \u00e9 necess\u00e1rio proceder ao refinamento\n\nmanual de sua geometria, acrescentando ou removendo tri\u00e2ngulos dos modelos. A Figura \n\n7.23h mostra o resultado final deste procedimento.\n\n\u00c9 poss\u00edvel verificar que a t\u00e9cnica de morphing descrita nesta se\u00e7\u00e3o \u00e9, na verdade, a\n\ncomposi\u00e7\u00e3o de opera\u00e7\u00f5es mais elementares suportadas pelo programa GOCAD. Utilizando\n\nesta t\u00e9cnica, foram modeladas dez superf\u00edcies intermedi\u00e1rias (cinco para cada bacia), o que \n\npermitiu criar um modelo de evolu\u00e7\u00e3o morfol\u00f3gica mais gradual. A t\u00edtulo de exemplo, a \n\nFigura 7.24 exibe a evolu\u00e7\u00e3o batim\u00e9trica da bacia de Campos do neo-albiano ao eoturoniano \n\nlevando em conta a superf\u00edcie intermedi\u00e1ria gerada. Evidentemente, tal superf\u00edcie apresenta \n\numa morfologia intermedi\u00e1ria indicativa, j\u00e1 que considera apenas a influ\u00eancia geom\u00e9trica das\n\nfei\u00e7\u00f5es das superf\u00edcies-base. Isto significa que n\u00e3o \u00e9 poss\u00edvel atribuir \u00e0 mesma uma idade \n\nintermedi\u00e1ria exata entre as idades conhecidas para as duas superf\u00edcies utilizadas, sendo \n\nnecess\u00e1rio levar em conta os fatores geol\u00f3gicos que influenciaram a evolu\u00e7\u00e3o morfol\u00f3gica da \n\nBacia de Campos durante o intervalo de tempo associado \u00e0s superf\u00edcies de origem.\n\n166\n\n\n\n(f)(e)\n\n(d)(c)\n\n(b)(a)\n\nFigura 7.23a-f \u2013 Cria\u00e7\u00e3o de superf\u00edcie intermedi\u00e1ria simulando a t\u00e9cnica de morphing no programa GOCAD. (a) \ne (b) Superf\u00edcies-base: paleobatimetrias neo-albiana e eoturoniana da Bacia de campos. (c) Cria\u00e7\u00e3o de duas\nc\u00f3pias com valor Z=1. (d) Cria\u00e7\u00e3o de uma \u201ccurva\u201d de interse\u00e7\u00e3o entre as mesmas. (e) Extra\u00e7\u00e3o dos pontos da\ncurva. (f) Cria\u00e7\u00e3o e ajuste de uma curva de feixo convexo aos pontos (em amarelo).\n\n167\n\n\n\n(h)(g)\n\nFigura 7.23g-h \u2013 Continua\u00e7\u00e3o da figura anterior. (g) Cria\u00e7\u00e3o de uma superf\u00edcie a partir dos pontos e feixo\nconvexo da Figura 7.23f. (h) Visualiza\u00e7\u00e3o da superf\u00edcie intermedi\u00e1ria resultante.\n\n(c)\n\n(a) (b)\n\nFigura 7.24 \u2013 Evolu\u00e7\u00e3o da Bacia de Campos enriquecida usando superf\u00edcies intermedi\u00e1rias. (a) \u201cFinal\u201d do neo-\nalbiano (97,5 Ma). (b) \u201cFinal\u201d do eoturoniano (90 Ma). (c) Superf\u00edcie intermedi\u00e1ria entre os modelos anteriores.\nO fator de exagero vertical \u00e9 100. Visada para Norte.\n\n168\n\n\n\n7.6 Integra\u00e7\u00e3o com demais dados geol\u00f3gicos \n\nPara integrar mais informa\u00e7\u00f5es geol\u00f3gicas aos modelos paleobatim\u00e9tricos constru\u00eddos \n\ne aumentar assim seu potencial de interpreta\u00e7\u00e3o, foram utilizadas outras informa\u00e7\u00f5es obtidas \n\nda literatura. Estes dados, no formato de mapas bidimensionais, foram importados no \n\nambiente do programa GOCAD. Com efeito, este aplicativo permite a integra\u00e7\u00e3o de dados \n\nadvindos de fontes distintas, proporcionando uma visualiza\u00e7\u00e3o unificada das informa\u00e7\u00f5es\n\nmodeladas, bem como o cruzamento das propriedades exibidas. A utiliza\u00e7\u00e3o de mapas 2D \n\nauxiliares ocorre, normalmente, atrav\u00e9s de uma t\u00e9cnica de computa\u00e7\u00e3o gr\u00e1fica denominada\n\nTexture Mapping (FOLEY et al., 1996). Utilizando tal procedimento, os mapas, previamente\n\ndigitalizados e devidamente georreferenciados, s\u00e3o \u201csobrepostos\u201d \u00e0s malhas vazadas que \n\nmodelam a batimetria atual ou a paleobatimetria das bacias de Santos e Campos. Desta forma,\n\n\u00e9 poss\u00edvel estabelecer rela\u00e7\u00f5es entre a morfologia das superf\u00edcies e a informa\u00e7\u00e3o contida nos\n\nmapas sobrepostos. Mapas utilizados para esta finalidade s\u00e3o denominados \u201ctem\u00e1ticos\u201d e sua \n\naplica\u00e7\u00e3o ser\u00e1 ilustrada nas figuras a seguir. A t\u00e9cnica de Texture Mapping j\u00e1 foi utilizada\n\npara sombrear as superf\u00edcies paleobatim\u00e9tricas usando a escala de cores da Figura 7.5. Outros \n\nexemplos envolveram as superf\u00edcies da topografia e batimetria atuais (Figuras 7.13 e 7.14). \n\nNestes casos, o programa GOCAD cria uma imagem bidimensional usando as cores da escala \n\nconsiderada e em seguida realiza sua sobreposi\u00e7\u00e3o (ou mapeamento) \u00e0s superf\u00edcies.\n\nUm primeiro exemplo de mapas auxiliares (FRAN\u00c7A et al., 1995) foi mostrado na \n\nFigura 4.14. Trata-se de tr\u00eas mapas que mostram a distribui\u00e7\u00e3o dos sedimentos depositados na \n\nmargem continental sudeste brasileira durante o Cret\u00e1ceo. Os per\u00edodos considerados s\u00e3o o\n\nNeocomiano (144-125 Ma), Barremiano-Albiano (125-97,5 Ma) e Cenomaniano-\n\nMaastrichtiano (97,5-65 Ma). Os mapas, originalmente em preto e branco, foram digitalizados \n\ne georreferenciados no ambiente do programa AutoDesk Map, usando a informa\u00e7\u00e3o da linha\n\nde costa. Em seguida, nas imagens foram criadas hachuras coloridas para gerar texturas \n\n(mapas tem\u00e1ticos) a serem utilizadas no programa GOCAD (Figura 7.25). A Figura 7.26\n\nmostra a sobreposi\u00e7\u00e3o dos tr\u00eas mapas \u00e0 superf\u00edcie da batimetria atual. Embora os mapas n\u00e3o \n\npossam ser associados ao relevo batim\u00e9trico atual, as figuras valem como primeira\n\ncontextualiza\u00e7\u00e3o dos litotipos em rela\u00e7\u00e3o \u00e0s principais fei\u00e7\u00f5es batim\u00e9tricas. Uma aplica\u00e7\u00e3o\n\nmais adequada consiste na sobreposi\u00e7\u00e3o dos referidos mapas \u00e0s superf\u00edcies paleobatim\u00e9tricas\n\ndescritas anteriormente. Considerando o per\u00edodo de refer\u00eancia das mesmas (meso-\n\nNeocret\u00e2ceo), foram utilizados dois dos tr\u00eas mapas gerados, sendo que o primeiro refere-se \u00e0s \n\nduas superf\u00edcies correspondentes ao Albiano. \n\n169\n\n\n\nN\n\n(a)\n\nN\n\n(b)\n\nFigura 7.25 \u2013 Cria\u00e7\u00e3o de hachuras para os mapas de litotipos da margem continental sudeste brasileira (Fran\u00e7a et \nal., 1995). (a) Barremiano-Albiano (125-97,5 Ma). (b) Cenomaniano-Maastrichtiano (97,5-65 Ma).\n\n170\n\n\n\nPara as demais superf\u00edcies (per\u00edodo Cenomaniano-Maastrichtiano) foi utilizado o\n\nsegundo mapa. A Figura 7.27 mostra a evolu\u00e7\u00e3o simult\u00e2nea das bacias de Santos e Campos\n\nutilizando os mapas ilustrados acima. A textura com a escala de cores correspondentes aos \n\nv\u00e1rios ambientes deposicionais foi substitu\u00edda pelos mapas de litotipos referentes ao Cret\u00e1ceo.\n\nUma desvantagem desta substitui\u00e7\u00e3o \u00e9 a impossibilidade de estimar a varia\u00e7\u00e3o batim\u00e9trica das \n\nsuperf\u00edcies a partir das novas texturas utilizadas. Para amenizar tal inconveniente, sobre as \n\nsuperf\u00edcies foram tamb\u00e9m tra\u00e7adas isolinhas com intervalos de 100 e 200 m (bacias de Santos \n\ne Campos, respectivamente), que tamb\u00e9m permitem real\u00e7ar a morfologia das superf\u00edcies\n\nvisualizadas. Evidentemente, a utiliza\u00e7\u00e3o de apenas dois mapas tem\u00e1ticos para seis idades de \n\nevolu\u00e7\u00e3o paleobatim\u00e9trica ao longo do meso-Neocret\u00e1ceo representa uma simplifica\u00e7\u00e3o da \n\ndistribui\u00e7\u00e3o de litotipos, devendo os mapas em quest\u00e3o ser considerados como de tend\u00eancia,\n\nj\u00e1 que abrangem um per\u00edodo muito longo. A disponibilidade destes mapas para um n\u00famero\n\nmaior de intervalos de idades, geraria uma visualiza\u00e7\u00e3o mais realista e representativa. \n\nOutro mapa utilizado cont\u00e9m as principais fei\u00e7\u00f5es tect\u00f4nicas da regi\u00e3o das bacias de \n\nCampos e Santos (SHOBBENHAUS &amp; CAMPOS, 1984 apud CAINELLI &amp; MOHRIAK, \n\n1998) (Figura 7.28). Neste mapa est\u00e3o representadas algumas estruturas oce\u00e2nicas, bem como \n\na idade dos principais sedimentos depositados na regi\u00e3o. O mapa foi digitalizado e \n\ngeorreferenciado usando o programa ER Mapper. Em seguida, a imagem resultante foi \n\nimportada no programa GOCAD como entidade Voxet.\n\nVisualizando a imagem em planta (dire\u00e7\u00e3o perpendicular ao eixo Z), foram \n\ndigitalizadas algumas entidades acess\u00f3rias. Trata-se de curvas criadas diretamente sobre a \n\nimagem, digitalizando pontos atrav\u00e9s do mouse. Um exemplo \u00e9 a linha de charneira das \n\nbacias de Campos e Santos (Figura 7.13 e seguintes). Outras curvas foram digitalizadas em\n\ncorrespond\u00eancia das zonas de fraturas de Florian\u00f3polis, Curitiba e Rio de Janeiro. A partir \n\ndestas tr\u00eas curvas, foram criados planos de falha (superf\u00edcies). Para tanto, as curvas iniciais\n\nforam posicionadas na eleva\u00e7\u00e3o 0, tr\u00eas c\u00f3pias foram criadas e posicionadas no valor \n\nbatim\u00e9trico \u20133 (tr\u00eas km de profundidade). Por fim, os planos de falha foram criados usando a \n\nfun\u00e7\u00e3o Surface Mode/New/ From Several Curves. Para as superf\u00edcies obtidas foi definido um\n\n\u00edndice de transpar\u00eancia de 30%. A Figura 7.29 exibe as entidades modeladas a partir do mapa\n\nde estruturas oce\u00e2nicas. Tal mapa foi tamb\u00e9m sobreposto ao relevo da batimetria atual,\n\nusando o procedimento de Texture Mapping. Os planos de falha correspondentes \u00e0s zonas de \n\nfraturas facilitam a identifica\u00e7\u00e3o de tais estruturas em visadas propriamente 3D (dire\u00e7\u00e3o de \n\nobserva\u00e7\u00e3o n\u00e3o paralela ao eixo Z). \n\n171\n\n\n\nss\n\nFigura 7.26 \u2013 Sobreposi\u00e7\u00e3o de mapas de litotipos \u00e0 superf\u00edcie da batimetria atual. A escala de cores acompanha a\nvaria\u00e7\u00e3o altim\u00e9trica da topografia. Linha de charneira em azul. (a) Neocomiano (144-125 Ma). (b) Barremiano-\nAlbiano (125-97,5 Ma). (c) Cenomaniano-Maastrichtiano (97,5-65 Ma). Visada para Norte. Exagero vertical: 30. \n\nN\n\nN\n\n(c)\n\n(b)\n\n(a)\n\n172\n\n\n\nIlha\nBela\n\nRPS\n\nRPS\n\nC\n\nS\n\n(a)\n\nIlha\nBela\n\nRPS\n\nRPS\n\nC\n\nS\n\n(b)\n\nIlha\nBela\n\nRPS\n\nRPS\n\nN\n\nC\n\nS\n\n(c)\n\nFigura 7.27a-c \u2013 Evolu\u00e7\u00e3o da batimetria das bacias de Santos (S) e Campos (C) com sobreposi\u00e7\u00e3o de mapas de \nlitotipos de Fran\u00e7a et al. (1995). Curvas isobatim\u00e9tricas tra\u00e7adas em branco. Posi\u00e7\u00e3o temporal dos mapas: vide\nFigura 7.2. (a) \u201cFinal\u201d do eo-mesoalbiano. (b) \u201cFinal\u201d do neo-albiano. (c) \u201cFinal\u201d do mesoturoniano (Bacia de\nSantos) e eoturoniano (Bacia de Campos). RPS = Rio Para\u00edba do Sul. Visada para Oeste. Fator de exagero\nvertical: 50 (20 para a topografia).\n\n173\n\n\n\nIlha\nBela\n\nRPS\n\nRPS\n\nC\n\nS\n\n(d)\n\nIlha\nBela\n\nRPS\n\nRPS\n\nC\n\nS\n\n(e)\n\nIlha\nBela\n\nRPS\n\nRPS\n\nN\n\nC\n\nS\n\n(f)\n\nFigura 7.27d-f \u2013 Continua\u00e7\u00e3o da figura anterior. (d) \u201cFinal\u201d do mesoturoniano (Bacia de Santos) e eoconiaciano\n(Bacia de Campos). (e) \u201cFinal\u201d do eosantoniano e eoconiaciano.(f) \u201cFinal\u201d do eosantoniano e neo-santoniano.\n\n174\n\n\n\nIlha\nBela\n\nIlha\nBela\n\nRPS\n\nRPS\n\nRPS\n\nRPS\n\nN\n\nC\n\nS\n\nC\n\nS\n\n(h)\n\n(g)\n\nFigura 7.27g-h \u2013 Continua\u00e7\u00e3o da figura anterior. (g) \u201cFinal\u201d do eocampaniano (Bacia de Santos) e neo-\nsantoniano (Campos). (h) \u201cFinal\u201d do Maastrichtiano.\n\n175\n\n\n\nFigura 7.28 \u2013 Mapa das principais fei\u00e7\u00f5es tect\u00f4nicas da margem continental sudeste brasileira. Fonte: Cainelli &amp; \nMohriak (1998).\n\nN\n\nFigura 7.29 \u2013 Mapa das estruturas oce\u00e2nicas sobreposto \u00e0 batimetria atual. Planos de falhas semitransparentes\npara as principais zonas de fraturas. Linha de charneira em azul. Limite crosta continental/oce\u00e2nica em\nvermelho. Fator de exagero vertical: 20. \n\n176\n\n\n\nOutra fonte de mapas tem\u00e1ticos utilizados para sombrear os modelos digitais da \n\npaleobatimetria foi o trabalho de Modica &amp; Brush (2004), que cont\u00e9m diversos mapas\n\nlitol\u00f3gicos e paleobatim\u00e9tricos para a Bacia de Santos e referentes ao Cret\u00e1ceo-Terci\u00e1rio. Os \n\ntr\u00eas mapas confeccionados para o meso-Neocret\u00e1ceo foram mostrados nas Figuras 4.15 a \n\n4.17, sendo os per\u00edodos considerados o Albiano (113-97,5 Ma), Coniaciano-mesocampaniano\n\n(88,5-76 Ma) e neocampaniano-Maastrichtiano (76-65 Ma). A Figura 7.30 exibe a evolu\u00e7\u00e3o \n\nda Bacia de Santos durante o per\u00edodo de estudo, sendo que \u00e0s superf\u00edcies paleobatim\u00e9tricas\n\nanteriormente constru\u00eddas foram sobrepostos os referidos tr\u00eas mapas. Novamente, a \n\ninforma\u00e7\u00e3o batim\u00e9trica e morfol\u00f3gica foi preservada utilizando-se isolinhas com espa\u00e7amento\n\nvertical de 50 (Figura 7.30a e d) e 100 m.\n\nAdicionalmente, a Figura apresenta duas novas ordens de entidades. A primeira\n\nconsiste no grupo de tr\u00eas planos de falhas semitransparentes representando \u00e0s zonas de \n\ntransfer\u00eancias de Merluza, S\u00e3o Paulo e Ilha Grande (Figuras 4.16 e 4.17). Outra entidade\n\nmostra a localiza\u00e7\u00e3o das principais cidades da regi\u00e3o de estudo. Para tanto, foram utilizados\n\nobjetos do GOCAD do tipo po\u00e7o (Well). A coluna de cada \u201cpo\u00e7o\u201d foi usada para indicar a \n\nlocaliza\u00e7\u00e3o exata de uma cidade. O conjunto de po\u00e7os foi importado a partir de outro projeto \n\nde modelagem de estruturas da regi\u00e3o Sudeste realizado neste Laborat\u00f3rio. \n\nO trabalho de Modica &amp; Brush forneceu tamb\u00e9m a oportunidade de integrar\n\ninforma\u00e7\u00f5es de um perfil geol\u00f3gico ao ambiente de visualiza\u00e7\u00e3o 3D do GOCAD (Figura \n\n7.31). A imagem correspondente ao perfil foi rasterizada e em seguida georreferenciada. A \n\nvisualiza\u00e7\u00e3o simult\u00e2nea do perfil e das demais entidades 3D modeladas \u00e9 mostrada nas \n\nFiguras 7.32 a 7.34. S\u00e3o integradas informa\u00e7\u00f5es referentes a tr\u00eas momentos distintos da \n\nevolu\u00e7\u00e3o da bacia de Santos. A possibilidade de integrar dados de superf\u00edcie e de \n\nsubsuperf\u00edcie constitui uma das potencialidades mais importantes da ferramenta, e decorre da\n\ncapacidade de visualizar de forma simult\u00e2nea objetos modelados a partir de fontes distintas. \n\nUm \u00faltimo exemplo de sobreposi\u00e7\u00e3o de imagens a superf\u00edcies 3D envolveu a \n\nutiliza\u00e7\u00e3o de um mapa de localiza\u00e7\u00e3o dos blocos de explora\u00e7\u00e3o e produ\u00e7\u00e3o da Ag\u00eancia \n\nNacional do Petr\u00f3leo. O mapa, obtido do BDEP (2005), foi sobreposto \u00e0 superf\u00edcie da \n\nbatimetria atual. A Figura 7.35 mostra a localiza\u00e7\u00e3o dos blocos nas regi\u00f5es das bacias de \n\nSantos e Campos. \u00c9 tamb\u00e9m exibida a localiza\u00e7\u00e3o dos po\u00e7os cujos dados deram origem aos\n\nmapas utilizados para modelar a paleobatimetria das referidas bacias.\n\n177\n\n\n\n(b)\n\nN\n(c)\n\n(b)\n\n(a)\n\n178\n\nFigura 7.30a-c \u2013 Evolu\u00e7\u00e3o da batimetria da Bacia de Santos usando superf\u00edcies sombreadas com mapas de\nlitotipos (Modica &amp; Brush, 2004). Planos semitransparentes das zonas de transfer\u00eancias de Merluza, S\u00e3o Paulo e \nIlha Grande. (a) \u201cFinal\u201d do mesoalbiano (103 Ma). (b) \u201cFinal\u201d do neo-albiano (97,5 Ma). (c) \u201cFinal\u201d do \nmesoturoniano (89 Ma). Fator de exagero vertical: 200 (paleobatimetria) e 20 (topografia e demais entidades).\nVisada para Norte.\n\n\n\nN\n\n(f)\n\n(e)\n\n(d)\n\nFigura 7.30d-f \u2013 Continua\u00e7\u00e3o da figura anterior. (d) \u201cFinal\u201d do eosantoniano (86 Ma). (e) \u201cFinal\u201d do\neocampaniano (81 Ma). (f) \u201cFinal\u201d do Maastrichtiano (65 Ma).\n\n179\n\n\n\nN\n\nB\n\nA\n\n(a)\n\nBA\n\n(b)\n\nFigura 7.31 - Integra\u00e7\u00e3o de perfil geol\u00f3gico ao ambiente de modelagem do GOCAD. (a) Localiza\u00e7\u00e3o do perfil (linha branca\nAB). Linha de charneira em azul. Limite crosta continental / oce\u00e2nica em vermelho. (b) Perfil geol\u00f3gico (Modica &amp; Brush,\n2004). Profundidade s\u00edsmica do perfil: 10 s.\n\n180\n\n\n\nILHA BELA\n\nMACAE\n\nRIO DE JANEIRO\n\nJUIZ DE FORA\n\nVOLTA REDONDA\n\n(a)\n\nILHA BELA\n\nMACAE\n\nRIO DE JANEIRO\n\nJUIZ DE FORA\n\nVOLTA REDONDA\n\n(b)\n\nN\n\nILHA BELA\n\nMACAE\n\nRIO DE JANEIRO\n\nJUIZ DE FORA\n\nVOLTA REDONDA\n\n(c)\n\n181\n\nFigura 7.32 \u2013 Bacia de Santos: integra\u00e7\u00e3o de dados s\u00edsmicos, paleobatim\u00e9tricos e litol\u00f3gicos advindos de fontes distintas.\n(a) Paleobatimetria ao \u201cfinal\u201d do neo-albiano (97,5 Ma) com transpar\u00eancia para real\u00e7ar um perfil geol\u00f3gico (Modica &amp; \nBrush, 2004). A profundidade do topo da seq\u00fc\u00eancia neo-albiana (azul escuro) \u00e9 indicada pela seta. (b) e (c) Sobreposi\u00e7\u00e3o\nde mapas de litotipos de Fran\u00e7a et al. (1995) e de Modica &amp; Brush (2004), respectivamente. S\u00e3o tamb\u00e9m exibidas as\nzonas de transfer\u00eancia de S\u00e3o Paulo e Ilha Grande (planos semitransparentes). Fator de exagero vertical: 100 para a \npaleobatimetria e 10 para as demais entidades (incluindo o perfil).\n\n\n\nILHA BELA\n\nRIO DE JANEIROVOLTA REDONDA\n\n(a)\n\nILHA BELA\n\nRIO DE JANEIROVOLTA REDONDA\n\n(b)\n\nN\n\nILHA BELA\n\nRIO DE JANEIROVOLTA REDONDA\n\n(c)\n\nFigura 7.33 \u2013 Bacia de Santos: integra\u00e7\u00e3o de dados s\u00edsmicos, paleobatim\u00e9tricos e litol\u00f3gicos. (a) Paleobatimetria ao\n\u201cfinal\u201d do eocampaniano (81 Ma). No perfil, a profundidade atual do topo da seq\u00fc\u00eancia mesocampaniana (cor laranja) \u00e9 \nindicada pela seta. (b) e (c) Sobreposi\u00e7\u00e3o de mapas de litotipos de Fran\u00e7a et al. (1995) e de Modica &amp; Brush (2004).\n\n182\n\n\n\nN\n\nILHA BELA\n\nILHA BELA\n\nILHA BELA\n\nRIO DE JANEIRO\n\nJUIZ DE FORA\n\nVOLTA REDONDA\n\nRIO DE JANEIRO\n\nJUIZ DE FORA\n\nVOLTA REDONDA\n\nRIO DE JANEIRO\n\nJUIZ DE FORA\n\nVOLTA REDONDA\n\n(c)\n\n(b)\n\n(a)\n\nFigura 7.34 \u2013 Bacia de Santos: integra\u00e7\u00e3o de dados s\u00edsmicos, paleobatim\u00e9tricos e litol\u00f3gicos. (a) Paleobatimetria ao \n\u201cfinal\u201d do Maastrichtiano (65 Ma). No perfil geol\u00f3gico, a profundidade atual do topo da seq\u00fc\u00eancia maastrichtiana \u00e9\nindicada pela seta. (b) e (c) Sobreposi\u00e7\u00e3o de mapas de litotipos de Fran\u00e7a et al. (1995) e de Modica &amp; Brush (2004).\n\n183\n\n\n\nILHA GRANDE\nILHA BELA \n\nRio Ribeira do Iguape \n\n(a)\n\nN\n\nRio Para\u00edba do Sul \n\n(b)\n\n184\n\nFigura 7.35 \u2013 Sobreposi\u00e7\u00e3o do mapa dos blocos de explora\u00e7\u00e3o (cor verde) e produ\u00e7\u00e3o (cor rosa) da Ag\u00eancia\nNacional do Petr\u00f3leo \u00e0 superf\u00edcie batim\u00e9trica atual. S\u00e3o tamb\u00e9m exibidos os po\u00e7os referenciados nos trabalhos\nde Viviers (1986) e Azevedo et al. (1987), bem como os limites das superf\u00edcies paleobatim\u00e9tricas modeladas (em\nvermelho). (a) Bacia de Santos. (b) Bacia de Campos. Fator de exagero vertical: 20. Fonte: BDEP (2005).\n\n\n\n7.7 Modelagem de outros dados batim\u00e9tricos e paleobatim\u00e9tricos \n\nPara melhor contextualizar a evolu\u00e7\u00e3o das bacias de Campos e Santos durante a \n\nexpans\u00e3o do Atl\u00e2ntico Sul, foram modelados ainda dois conjuntos de dados.\n\nA primeira modelagem envolveu o conjunto de mapas paleobatim\u00e9tricos\n\nconfeccionados por Sykes et al. (1998), gerados por simula\u00e7\u00e3o computacional, que n\u00e3o levam\n\nem conta a espessura do pacote sedimentar (Figura 4.8). Conforme foi ilustrado na se\u00e7\u00e3o 4.1,\n\nestes autores realizaram uma modelagem da paleobatimetria do hemisf\u00e9rio Sul de 110 Ma \n\natr\u00e1s at\u00e9 o presente, com intervalo de 5 Ma. Os mapas correspondentes \u00e0s idades 110, 100, 85 \n\ne 65 Ma foram escolhidos por ilustrarem a evolu\u00e7\u00e3o da fisiografia oce\u00e2nica durante o\n\nafastamento entre a Am\u00e9rica do Sul e a \u00c1frica dentro do per\u00edodo de estudo considerado. \n\nA modelagem 3D dos referidos dados iniciou-se com a digitaliza\u00e7\u00e3o das curvas de\n\nn\u00edvel de cada mapa paleobatim\u00e9trico, no ambiente AutoDesk Map. Para cada idade foram\n\ncriados dois arquivos, um em formato *.dat, contendo as coordenadas XYZ dos pontos \n\ndigitalizados; e outro *.dxf com a especifica\u00e7\u00e3o geom\u00e9trica e topol\u00f3gica da linha de costa de \n\nparte da Am\u00e9rica do Sul e da \u00c1frica.\n\nEm seguida, os arquivos foram importados no ambiente do programa GOCAD. A \n\npartir do conjunto de pontos, foi criada uma curva de fecho convexo e com a mesma foi\n\nposs\u00edvel gerar uma malha vazada para modelar a paleobatimetria usando os pontos da idade \n\nem quest\u00e3o. Al\u00e9m disto, usando o arquivo *.dxf contendo a linha de costa correspondente foi \n\ncriada uma entidade do tipo curva. Esta foi visualizada e utilizada para remover da superf\u00edcie \n\npaleobatim\u00e9trica todos os tri\u00e2ngulos pertencentes \u00e0s regi\u00f5es continentais, bem como \n\nreposicionar eventuais tri\u00e2ngulos n\u00e3o alinhados com a linha de costa na malha vazada criada \n\npelo programa. Ap\u00f3s este processo de filtragem, estava dispon\u00edvel uma superf\u00edcie \n\npaleobatim\u00e9trica delimitada pelas linhas de costa dos continentes americano e sul-africano. \n\nPara amenizar a geometria dos tri\u00e2ngulos relativamente estreitos desta malha vazada, a \n\nmesma sofreu um processo de refinamento, sendo que os tri\u00e2ngulos foram modificados de \n\nforma a assumirem uma apar\u00eancia aproximadamente eq\u00fcil\u00e1tera (\u00e2ngulos internos iguais a 30 \n\ngraus). No GOCAD, este processo \u00e9 realizado com a ferramenta Beautify.\n\nEm seguida, para modelar os continentes foi criado um plano poligonal paralelo ao \n\nplano XY e com eleva\u00e7\u00e3o igual a zero. Seus limites foram definidos usando os extremos da \n\npaleobatimetria e linha de costa correspondentes. A superf\u00edcie do plano foi \u201crecortada\u201d com a\n\nlinha de costa e as partes da por\u00e7\u00e3o marinha (batimetria) foram removidas.\n\nAo final deste processo, dispunha-se de duas malhas vazadas para cada idade de\n\nmodelagem: uma para a paleobatimetria e outra para a topografia \u201cachatada\u201d. As duas \n\n185\n\n\n\nsuperf\u00edcies foram juntadas e a entidade resultante sombreada usando uma escala de cores que \n\nacompanha a varia\u00e7\u00e3o paleobatim\u00e9trica do At\u00e2ntico Sul conforme dados de eleva\u00e7\u00e3o dos\n\nmapas originais (de 6 Km de profundidade at\u00e9 o n\u00edvel do mar). Por fim, sobre cada superf\u00edcie \n\nfoi tra\u00e7ado o conjunto de isolinhas com espa\u00e7amento vertical de 0.5 Km, para real\u00e7ar as\n\nestruturas do fundo oce\u00e2nico (Figura 7.36).\n\nAs malhas vazadas constru\u00eddas foram tamb\u00e9m sombreadas usando a escala de cores \n\ndos dom\u00ednios batim\u00e9tricos da Figura 7.21. Com isto, foi poss\u00edvel comparar as regi\u00f5es de \n\nocorr\u00eancia dos v\u00e1rios ambientes deposicionais com as informa\u00e7\u00f5es correspondentes \n\nvisualizadas para as bacias de Santos e Campos. Houve a necessidade de se \u201campliar\u201d a escala \n\nde cores incluindo o ambiente abissal. Desta forma, novas cores foram acrescentadas e \n\nassociadas \u00e0s profundidades de 2000 a 6000 m (limite inferior dos mapas originais). A \n\nvisualiza\u00e7\u00e3o resultante da evolu\u00e7\u00e3o do Atl\u00e2ntico Sul durante o meso-Neocret\u00e1ceo (Figuras \n\n7.37 a 7.40) utiliza dois pontos e dist\u00e2ncias de observa\u00e7\u00e3o diferentes. Considera-se, para cada \n\nidade, uma visada mais regional seguida de uma aproxima\u00e7\u00e3o para destacar a \u00e1rea objeto da\n\nmodelagem paleobatim\u00e9trica da regi\u00e3o das bacias de Santos e Campos. As superf\u00edcies \n\npaleobatim\u00e9tricas de Sykes et al. s\u00e3o mais profundas que as de Viviers e Azevedo et al. deste \n\nper\u00edodo, pois n\u00e3o levam em conta a espessura do pacote sedimentar que foi aumentando cada \n\nvez mais com o passar do tempo, o que resultou em morfologias cada vez mais discrepantes. \n\nPor fim, visando facilitar a correla\u00e7\u00e3o das informa\u00e7\u00f5es paleobatim\u00e9tricas do Atl\u00e2ntico \n\nSul com informa\u00e7\u00f5es lito-cronoestratigr\u00e1ficas das bacias de Santos e Campos, as idades de \n\nreconstru\u00e7\u00e3o consideradas (110, 100, 85 e 65 Ma) foram posicionadas sobre as respectivas \n\ncartas estratigr\u00e1ficas (Figuras 4.12, 4.13 e 7.41a e b). Al\u00e9m disto, as seq\u00fc\u00eancias estratigr\u00e1ficas \n\ncorrespondentes foram indicadas no perfil da Bacia de Santos (Figura 7.41c). \n\nAs informa\u00e7\u00f5es paleobatim\u00e9tricas de abertura e expans\u00e3o do Atl\u00e2ntico Sul, obtidas da \n\nliteratura e modeladas em 3D no GOCAD, constituem importante conjunto de dados para\n\ninvestiga\u00e7\u00f5es sobre a evolu\u00e7\u00e3o paleogeogr\u00e1fica da margem continental sudeste brasileira e\n\ndas bacias de Santos e Campos. A compara\u00e7\u00e3o de imagens geradas para idades distintas\n\npermite acompanhar a forma\u00e7\u00e3o e modifica\u00e7\u00e3o de estruturas oce\u00e2nicas durante o per\u00edodo de \n\nestudo. Por exemplo, a partir de 110 Ma ocorreu a forma\u00e7\u00e3o de um alto estrutural que surgiu \n\nna margem africana e evoluiu para a regi\u00e3o central do oceano, em correspond\u00eancia do Alto de \n\nFlorian\u00f3polis. Os demais mapas do trabalho de Sykes et al. tamb\u00e9m foram processados e \n\nmodelados em 3D, para se criar uma anima\u00e7\u00e3o sobre a evolu\u00e7\u00e3o da morfologia do fundo \n\noce\u00e2nico de 110 Ma at\u00e9 o presente. \n\n186\n\n\n\n85 Ma \n\n110 Ma 100 Ma \n\n65 Ma \n\nFigura 7.36 - Modelagem 3D da reconstru\u00e7\u00e3o computacional da paleobatimetria do Atl\u00e2ntico Sul para o meso-\nNeocret\u00e1ceo. As superf\u00edcies foram sombreadas usando uma escala de cores do azul escuro at\u00e9 a cor laranja. O\npol\u00edgono branco delimita a regi\u00e3o das bacias de Santos e Campos estudada. Fonte dos dados: Sykes et al. (1998).\n\n187\n\n\n\nN\n\n(a)\n\nN\n\nC\n\nS\n\n(b)\n\nFigura 7.37 \u2013 (a) Visualiza\u00e7\u00e3o 3D da paleobatimetria do Atl\u00e2ntico Sul no in\u00edcio do Albiano (110 Ma). (b) Detalhe\ncom o limite da \u00e1rea de estudo e das superf\u00edcies paleobatim\u00e9tricas das bacias de Santos (s\u00edmbolo \u201cS\u201d) e Campos\n(s\u00edmbolo \u201cC\u201d). Adotou-se a escala de cores da Figura 7.21 com inclus\u00e3o do dom\u00ednio abissal: do amarelo (-2000 m)\npara o marrom / cinza claro (-4000 m) at\u00e9 o cinza escuro (-6000 m). Visada para Norte. \n\n188\n\n\n\nS\n\nC\n\nN\n\nN\n\nC\n\nS\n\n(a)\n\n(b)\n\nFigura 7.38 \u2013 (a) Visualiza\u00e7\u00e3o 3D da paleobatimetria do Atl\u00e2ntico Sul ao \u201cfinal\u201d do eo-mesoalbiano (100 Ma). \n(b) Detalhe com o limite da \u00e1rea de estudo e das paleobatimetrias modeladas das bacias de Santos e Campos.\n\n189\n\n\n\nFigura 7.39 \u2013 (a) Visualiza\u00e7\u00e3o 3D da paleobatimetria do Atl\u00e2ntico Sul ao \u201cfinal\u201d do eosantoniano (85 Ma). (b)\nDetalhe com o limite da \u00e1rea de estudo e das paleobatimetrias modeladas das bacias de Santos e Campos.\n\nN\n\nC\n\nS\n\n(a)\n\n(b)\n\n190\n\n\n\nN\n\nC\n\nS\n\n(a)\n\n(b)\n\nFigura 7.40 \u2013 (a) Visualiza\u00e7\u00e3o 3D da paleobatimetria do Atl\u00e2ntico Sul ao \u201cfinal\u201d do Maastrichtiano (65 Ma). (b)\nDetalhe com o limite da \u00e1rea de estudo e das paleobatimetrias modeladas das bacias de Santos e Campos.\n\n191\n\n\n\n1\n\n2\n\n3\n\n4\n\n(a) (b)\n\n(c)\n\n4\n3\n\n2\n1\n\nFigura 7.41 \u2013 Posicionamento das idades de reconstru\u00e7\u00e3o paleobatim\u00e9trica do Atl\u00e2ntico Sul (Sykes et al., 1998) sobre as \ncartas estratigr\u00e1ficas das bacias de Santos (a) e Campos (b). Os n\u00fameros de 1 a 4 correspondem \u00e0s idades de 110, 100, 85 e \n65 Ma. (c) Indica\u00e7\u00e3o nas seq\u00fc\u00eancias deposicionais correspondentes no perfil geol\u00f3gico da Bacia de Santos (Modica &amp; \nBrush, 2004).\n\n192\n\n\n\nOutro conjunto de dados modelados foi um grid de pontos de batimetria e topografia \n\nda regi\u00e3o do Mar Vermelho. Tal conjunto, obtido da rede Internet (projeto TOPEX, 2005), foi \n\nescolhido para construir uma analogia em termos morfol\u00f3gicos e deposicionais entre o Mar\n\nVermelho e a situa\u00e7\u00e3o batim\u00e9trica das bacias de Santos e Campos durante o Albiano. Os \n\ndados de pontos correspondentes \u00e0 regi\u00e3o foram importados no GOCAD e a partir dos \n\nmesmos gerou-se uma malha vazada. Foi tamb\u00e9m criado um plano horizontal \n\nsemitransparente para identificar o n\u00edvel do mar junto \u00e0 superf\u00edcie. Esta foi sombreada usando\n\numa escala de cores para destacar as varia\u00e7\u00f5es altim\u00e9tricas (Figura 7.42). As elipses \n\nrepresentadas na figura correspondem aproximadamente \u00e0 dimens\u00e3o e aos ambientes\n\ndeposicionais das superf\u00edcies paleobatim\u00e9tricas das bacias de Santos e Campos, em\n\ncompara\u00e7\u00e3o com a batimetria do Mar Vermelho.\n\nPara facilitar a compara\u00e7\u00e3o dos ambientes deposicionais registrados nas bacias de \n\nSantos e Campos durante o per\u00edodo de estudo, a escala de cores das Figuras 7.18 a 7.21, \n\nutilizada para destacar os diferentes ambientes nas superf\u00edcies paleobatim\u00e9tricas das referidas \n\nbacias, foi tamb\u00e9m empregada para sombrear a batimetria do Mar Vermelho (Figura 7.43). As \n\nelipses foram posicionadas nas \u00e1reas que apresentam a melhor semelhan\u00e7a, em termos de \n\nambientes deposicionais, com as bacias de Santos e Campos, deixando de considerar \n\nsimilaridades em termos de extens\u00e3o. A Bacia de Santos, caracterizada por extensa plataforma\n\nna dire\u00e7\u00e3o distal, \u00e9 identificada, por analogia, com a regi\u00e3o sul do Mar Vermelho, onde o \n\nambiente plataformal \u00e9 dominante e o gradiente \u00e9 baixo. A observa\u00e7\u00e3o das elipses \n\ncorrespondentes na visualiza\u00e7\u00e3o da batimetria do Mar Vermelho sugere que a Bacia de Santos\n\ndeve ter apresentado ambientes de deposi\u00e7\u00e3o mais profundos que os identificados por Viviers \n\n(1986), que n\u00e3o abrangeram a dimens\u00e3o total da bacia, uma vez que os po\u00e7os dispon\u00edveis para \n\nos estudos na \u00e9poca n\u00e3o atingiram sua por\u00e7\u00e3o mais distal. \n\nJ\u00e1 as demais elipses, posicionadas em uma por\u00e7\u00e3o mais setentrional do Mar Vermelho,\n\nindicam uma regi\u00e3o fisiograficamente equivalente a Bacia de Campos, caracterizada por um \n\nambiente plataformal estreito que passa rapidamente para batial superior-m\u00e9dio at\u00e9 atingir o \n\nbatial inferior, pr\u00f3ximo ao limite da crosta oce\u00e2nica.\n\nOutra similaridade \u00e9 indicada pelo relevo topogr\u00e1fico adjacente ao Mar Vermelho, em\n\nrela\u00e7\u00e3o \u00e0 margem continental sudeste brasileira. O relevo \u00e9 mais alto na por\u00e7\u00e3o sul,\n\nanalogamente \u00e0 Serra do Mar adjacente \u00e0 Bacia de Santos (Figura 7.14), e menos pronunciado\n\nno setor central do Mar Vermelho, analogamente \u00e0 por\u00e7\u00e3o NW adjacente \u00e0 Bacia de Campos.\n\nCaberia um estudo mais detalhado para pesquisar uma rela\u00e7\u00e3o gen\u00e9tica entre o relevo mais\n\nelevado e uma plataforma adjacente mais rasa e com preenchimento sedimentar mais espesso.\n\n193\n\n\n\nGolfo de Suez\n\nGolfo de Suez\n\nC\n\nS\n\nC\n\nS\n\nN\n\n-400 0 200 400 700600-200\n(b)\n\n1500 2000 25000 500 1000-1000 -500\n\nS\n\nC\n\n-400 0 200 400 700600-200\n\nN\n\nC\n\nS\n\n(a)\n1500 2000 25000 500 1000-1000 -500\n\nFigura 7.42a-b \u2013 Modelagem 3D do relevo e da batimetria atuais do Mar Vermelho com (a) e sem (b) representa\u00e7\u00e3o do n\u00edvel do\nmar. As elipses tracejadas indicam a dimens\u00e3o relativa dos modelos paleobatim\u00e9tricos das bacias de Campos (C) e Santos (S) e\ntamb\u00e9m delimitam regi\u00f5es com situa\u00e7\u00e3o deposicional semelhante. Visada para NW. Fonte dos dados: TOPEX (2005).\n\n194\n\n\n\nGolfo de Suez\n\nC\n\nS\n\n(c)\n\nN\n\n1500 2000 25000 500 1000-1000 -500\n\nGolfo de Suez\n\nC\n\nS\n\nN\n\n(d)\n1500 2000 25000 500 1000-1000 -500\n\nFigura 7.42c-d \u2013 Continua\u00e7\u00e3o da figura anterior. Visada para W com (c) e sem (d) representa\u00e7\u00e3o do n\u00edvel do mar. Al\u00e9m da \nmorfologia batim\u00e9trica distinta entre os dom\u00ednios S e C, a topografia da parte emersa adjacente \u00e9 tamb\u00e9m contrastante. \n\n195\n\n\n\nS\nN\n\nolfo de SuezG\n\n(a)\n\nC\n\nGolfo\n de Suez\n\nC\n\nS\n\nGolfo de Suez\n\n(b)\n\nS\n\nC\n\nC\n\nS\n\nN\n\nFigura 7.43 \u2013 Batimetria e parte do relevo continental com a mesma escala de cores aplicada aos modelos paleobatim\u00e9tricos\ndas bacias de Campos (C) e Santos (S) para melhor comparar os ambientes de deposi\u00e7\u00e3o. Legenda das cores: C-P = \ncontinental-par\u00e1lico. Isolinhas no continente com espa\u00e7amento vertical de 200 m. As elipses denotam ambientes correlatos\naos das bacias de Santos e Campos para o meso-Neocret\u00e1ceo. Visada para NE (a) e para NW (b).\n\n196\n\n\n\n7.8 Discuss\u00e3o dos resultados \n\nA utiliza\u00e7\u00e3o do programa de modelagem e visualiza\u00e7\u00e3o GOCAD permitiu transpor\n\npara um ambiente de estudo 3D os mapas paleobatim\u00e9tricos confeccionados por Viviers \n\n(1986) e Azevedo et al. (1987). Tais informa\u00e7\u00f5es foram integradas com outros dados \n\ntect\u00f4nicos e litol\u00f3gicos obtidos da literatura, o que permitiu realizar um cruzamento de \n\ninforma\u00e7\u00f5es e aumentar a capacidade de interpreta\u00e7\u00e3o dos conjuntos de dados considerados\n\nseparadamente. As imagens mostradas nas figuras anteriores cont\u00eam elementos para auxiliar \n\nno entendimento da hist\u00f3ria deposicional da por\u00e7\u00e3o sudeste da margem continental brasileira\n\ndurante o meso-Neocret\u00e1ceo, logo ap\u00f3s a fase rift, quando o ambiente de sedimenta\u00e7\u00e3o\n\npassou de continental para marinho inicialmente raso e gradativamente mais profundo (fase \n\ndrift). Esta evolu\u00e7\u00e3o foi interrompida na Bacia de Santos pela intensa sedimenta\u00e7\u00e3o e\n\ndiminui\u00e7\u00e3o da espessura da l\u00e2mina d\u00b4\u00e1gua a partir do neoturoniano. \n\nEm geral todo o meso-Neocret\u00e1ceo da regi\u00e3o foi caracterizado pela evolu\u00e7\u00e3o de uma\n\nmargem continental passiva, sob a influ\u00eancia de eventos tect\u00f4nicos e varia\u00e7\u00f5es relativas do\n\nn\u00edvel do mar. A seguir ser\u00e1 ilustrada a evolu\u00e7\u00e3o paleogeogr\u00e1fica e paleoambiental da regi\u00e3o\n\nem estudo com respaldo nas considera\u00e7\u00f5es de Viviers &amp; Azevedo (1988) e na visualiza\u00e7\u00e3o \n\n3D dos dados geol\u00f3gicos modelados.\n\nDurante o eo-mesoalbiano (113-103 Ma) ocorreu a sedimenta\u00e7\u00e3o de carbonatos em\n\nambiente de \u00e1guas rasas, quentes e oxigenadas, caracterizadas por hipersalinidade (DIAS-\n\nBRITO, 1987). Azevedo (2004) tamb\u00e9m descreve as condi\u00e7\u00f5es do paleoclima neste per\u00edodo, \n\ntecendo considera\u00e7\u00f5es distintas para os dois mares restritos Atl\u00e2ntico Sul Central e Atl\u00e2ntico \n\nSul Meridional, localizados, respectivamente, ao norte e ao sul da barreira constitu\u00edda pelo \n\nAlto de Florian\u00f3polis e Dorsal de S\u00e3o Paulo (Figura 4.3). No Atl\u00e2ntico Sul Meridional \n\nocorriam temperaturas relativamente mais frias e salinidades mais baixas. A batimetria das \n\nbacias de Santos e Campos foi caracterizada pelo ambiente plataformal raso-m\u00e9dio que \n\napresenta um padr\u00e3o comum \u00e0s duas bacias (Figura 7.21a). A distribui\u00e7\u00e3o dos litotipos\n\ncorrespondentes (Figura 7.27a) indica a presen\u00e7a de arenitos na regi\u00e3o proximal e argilitos e \n\ncalc\u00e1rios na por\u00e7\u00e3o distal.\n\nA seq\u00fc\u00eancia estratigr\u00e1fica ao \u201cfinal\u201d do neo-albiano (97,5 Ma) cont\u00e9m calcilutitos e \n\nmargas, al\u00e9m de arenitos e conglomerados (por\u00e7\u00e3o proximal da bacia de Santos) (Figura \n\n7.41a). Neste per\u00edodo ocorreu a conex\u00e3o definitiva entre o Atl\u00e2ntico Sul Central e Atl\u00e2ntico \n\nSul Meridional (AZEVEDO, 2004). O ambiente deposicional de ambas as bacias foi o \n\nplataformal m\u00e9dio-profundo (Figura 7.21b), sendo que em alguns pontos da Bacia de Santos e \n\nsobretudo na Bacia de Campos iniciaram-se condi\u00e7\u00f5es mais profundas (batial superior). Uma\n\n197\n\n\n\ncompara\u00e7\u00e3o das figuras que exibem as condi\u00e7\u00f5es deposicionais deste per\u00edodo com o anterior \n\nmostra um deslocamento das curvas de isobatimetria para oeste, fato interpretado pelos\n\nautores em termos de um aumento relativo do n\u00edvel do mar.\n\nNeste per\u00edodo, a bacia de Santos foi caracterizada por condi\u00e7\u00f5es de deposi\u00e7\u00e3o mais\n\nrasas, devido ao maior aporte de sedimentos terr\u00edgenos. A Figura 7.32 exibe uma integra\u00e7\u00e3o \n\ndas informa\u00e7\u00f5es batim\u00e9tricas e litol\u00f3gicas para a Bacia de Santos, a partir dos trabalhos \n\ndiscutidos neste cap\u00edtulo. Em particular, a Figura 7.32a permite comparar a posi\u00e7\u00e3o do \n\nhorizonte estratigr\u00e1fico neo-albiano (regi\u00e3o azul escura), estimado utilizando o perfil s\u00edsmico\n\ninterpretado da Figura 7.31 (Modica &amp; Brush, 2004), com a profundidade que a plataforma\n\ncarbon\u00e1tica deve ter apresentado na idade em quest\u00e3o (dados paleobatim\u00e9tricos de Viviers, \n\n1986). Tal integra\u00e7\u00e3o constitui poderoso recurso oferecido por ferramentas de visualiza\u00e7\u00e3o\n\nintegradas como o GOCAD.\n\nDurante o Cenomaniano-mesoturoniano (97,5-89 Ma) ocorreu deposi\u00e7\u00e3o de margas e\n\nfolhelhos em condi\u00e7\u00f5es batim\u00e9tricas de 100-300 m. Os ambientes encontrados em ambas as \n\nbacias s\u00e3o o plataformal-batial superior, embora na regi\u00e3o nordeste (Bacia de Campos) tenha\n\nse verificado amplia\u00e7\u00e3o do ambiente batial superior, em compara\u00e7\u00e3o com o per\u00edodo anterior\n\n(Figura 7.21c). \n\nNa Bacia de Santos as condi\u00e7\u00f5es relativamente mais rasas foram explicadas como \n\nconseq\u00fc\u00eancia de um maior aporte de sedimentos em rela\u00e7\u00e3o a sua taxa de subsid\u00eancia, \n\nsobretudo na regi\u00e3o sudoeste (Figura 7.27c). Isto promoveu o estabelecimento de condi\u00e7\u00f5es \n\nprogradantes, apesar da eleva\u00e7\u00e3o generalizada do n\u00edvel do mar. Ambas as bacias sofreram \n\ndeposi\u00e7\u00e3o em condi\u00e7\u00f5es an\u00f3xicas, o que favoreceu a forma\u00e7\u00e3o de mat\u00e9ria org\u00e2nica (Arai,\n\n1987).\n\nDurante o per\u00edodo neoturoniano-eocampaniano (89-81 Ma) as hist\u00f3rias deposicionais\n\ndas bacias de Santos e Campos divergem. A partir do neoturoniano, o aporte sedimentar na \n\nbacia de Santos ultrapassou ou compensou sua taxa de subsid\u00eancia. Neste per\u00edodo ocorreu a \n\ndeposi\u00e7\u00e3o de grande quantidade de sedimentos cl\u00e1sticos na regi\u00e3o, relacionada ao \n\nsoerguimento da Serra do Mar. Estabeleceu-se, assim, um ambiente plataformal raso-m\u00e9dio\n\n(Figura 7.21e-f) e em seguida m\u00e9dio-profundo at\u00e9 batial superior (Figura 7.21g). Em\n\nconseq\u00fc\u00eancia do elevado aporte sedimentar, formaram-se amplas regi\u00f5es de ambiente\n\npar\u00e1lico. A Figura 7.33 mostra nova integra\u00e7\u00e3o de dados batim\u00e9tricos e litol\u00f3gicos para a \n\nbacia. A paleobatimetria exibida refere-se ao \u201cfinal\u201d do eocampaniano, enquanto o perfil \n\ngeol\u00f3gico mostra o topo do horizonte estratigr\u00e1fico mesocampaniano (em laranja). Na Bacia\n\nde Campos, cuja estratigrafia para o per\u00edodo \u00e9 representada por folhelhos, margas e arenitos \n\n198\n\n\n\nturbid\u00edticos, as condi\u00e7\u00f5es batim\u00e9tricas j\u00e1 eram bem mais profundas, com estabelecimento\n\nprogressivo de ambiente batial superior-m\u00e9dio e at\u00e9 inferior (Figura 7.21d-g). \n\nA Figura 7.27d-g exibe a sobreposi\u00e7\u00e3o do mapa de litotipos \u00e0s superf\u00edcies \n\npaleobatim\u00e9tricas do neoturoniano-eocampaniano. Observa-se a concentra\u00e7\u00e3o de arenito na \n\npor\u00e7\u00e3o proximal da Bacia de Santos, sendo a regi\u00e3o caracterizada por baixo gradiente. Este \n\nlitotipo \u00e9 tamb\u00e9m encontrado em regi\u00f5es mais distais, em conseq\u00fc\u00eancia do aporte sedimentar\n\npromovido por sistemas delt\u00e1icos e/ou correntes de turbidez. A restante por\u00e7\u00e3o distal \u00e9 \n\ncaracterizada por argilitos. A Bacia de Campos, com fisiografia bem mais \u00edngrime, apresenta \n\ntamb\u00e9m arenitos na por\u00e7\u00e3o proximal e folhelhos na regi\u00e3o distal, o que n\u00e3o est\u00e1 representado \n\nno mapa de Fran\u00e7a et al. (1995). Os calc\u00e1rios e margas representados neste mapa e projetados \n\nsobre as superf\u00edcies paleobatim\u00e9tricas do neoturoniano-eocampaniano, em ambientes batiais \n\nm\u00e9dio-inferior, cessaram sua deposi\u00e7\u00e3o ao final do Cenomaniano. A inconsistente \n\nrepresenta\u00e7\u00e3o de rochas carbon\u00e1ticas sobre as paleosuperf\u00edcies mais profundas decorre do fato \n\ndo mapa geol\u00f3gico mencionado abranger um per\u00edodo muito longo e n\u00e3o mostrar com mais\n\ndetalhe a varia\u00e7\u00e3o temporal da sedimenta\u00e7\u00e3o.\n\nA diferen\u00e7a no padr\u00e3o de sedimenta\u00e7\u00e3o das duas bacias permaneceu durante o \n\nneocampaniano-Maastrichtiano (76-65 Ma). Na Bacia de Santos, o elevado aporte de \n\nsedimentos cl\u00e1sticos continuou, embora as condi\u00e7\u00f5es batim\u00e9tricas fossem ligeiramente mais\n\nprofundas em rela\u00e7\u00e3o ao per\u00edodo anterior. Al\u00e9m disto, o deslocamento para oeste das curvas \n\nisobatim\u00e9tricas mostra ambientes de deposi\u00e7\u00e3o mais \u00edngrimes. A Figura 7.34 exibe a \n\nintegra\u00e7\u00e3o de dados litol\u00f3gicos e paleobatim\u00e9tricos para o \u201cfinal\u201d do Maastrichtiano. \n\nNa Bacia de Campos, por outro lado, consolidou-se ambiente de deposi\u00e7\u00e3o mais\n\nprofundo, predominando o meio batial m\u00e9dio-inferior (7.21h). A seq\u00fc\u00eancia estratigr\u00e1fica \n\ncorrespondente ao per\u00edodo \u00e9 caracterizada essencialmente por folhelhos e, de forma menos\n\nexpressiva, arenitos na por\u00e7\u00e3o proximal (Figura 7.41b). \n\nOs modelos gerados com os dados paleobatim\u00e9tricos de Sykes et al. (1998) para as \n\nmesmas idades e usando a mesma escala de cores (Figuras 7.37 a 7.40) indicam, desde o \n\nin\u00edcio, condi\u00e7\u00f5es batim\u00e9tricas mais profundas que os modelos descritos acima por \n\nconsiderarem as profundidades dos substratos das bacias e n\u00e3o as do topo de cada seq\u00fc\u00eancia \n\ndepositada na \u00e9poca. Estes modelos foram reproduzidos nesta disserta\u00e7\u00e3o com a finalidade de\n\ncomparar o est\u00e1gio do afastamento entre a Am\u00e9rica do Sul e a \u00c1frica para cada idade\n\nconsiderada nas superf\u00edcies paleobatim\u00e9tricas.\n\nPor fim, a modelagem geom\u00e9trica do Mar Vermelho (Figuras 7.42 e 7.43) permitiu\n\ncriar uma poss\u00edvel analogia entre alguns de seus compartimentos e a paleogeografia das\n\n199\n\n\n\nbacias de Santos e Campos para as idades modeladas. Permitiu mostrar tamb\u00e9m que, no caso \n\nda Bacia de Santos, o relevo deveria ter atingido profundidades maiores para cada idade do \n\nque p\u00f4de ser reconstitu\u00eddo a partir dos dados obtidos na \u00e9poca atrav\u00e9s de plataformas de \n\nperfura\u00e7\u00e3o mais restritas \u00e0s por\u00e7\u00f5es rasas da bacia.\n\n200\n\n\n\n8 Conclus\u00f5es \n\nEsta disserta\u00e7\u00e3o de mestrado procurou demonstrar o potencial da aplica\u00e7\u00e3o de t\u00e9cnicas\n\nde modelagem e visualiza\u00e7\u00e3o 3D \u00e0 representa\u00e7\u00e3o de dados geol\u00f3gicos e simula\u00e7\u00f5es, em\n\nespecial em estudos tect\u00f4nicos e de bacias. Destaca-se a import\u00e2ncia de ferramentas que \n\npermitem a intera\u00e7\u00e3o do pesquisador com seus dados. Isto pode envolver a manipula\u00e7\u00e3o em \n\ntempo real de estruturas modeladas, com a qual \u00e9 poss\u00edvel aferir propriedades e rela\u00e7\u00f5es entre \n\npartes de um conjunto de dif\u00edcil identifica\u00e7\u00e3o nos tradicionais ambientes de trabalho 2D. \n\nForam obtidos resultados em tr\u00eas frentes de trabalho como sumarizado a seguir. \n\nA prepara\u00e7\u00e3o de um ambiente de desenvolvimento de aplicativos de modelagem e \n\nvisualiza\u00e7\u00e3o 3D usando programas e bibliotecas open source constituiu uma importante etapa\n\npara a constru\u00e7\u00e3o de ferramentas de processamento e visualiza\u00e7\u00e3o de dados geol\u00f3gicos em \n\nambientes de pesquisa. Poupando-se recursos financeiros para o pagamento de licen\u00e7as de \n\nutiliza\u00e7\u00e3o de sistemas operacionais ou de aplicativos, os recursos \u00e0 disposi\u00e7\u00e3o da institui\u00e7\u00e3o\n\npodem ser destinados exclusivamente \u00e0 aquisi\u00e7\u00e3o dos equipamentos computacionais. Tal\n\nsitua\u00e7\u00e3o n\u00e3o \u00e9 ideal apenas para ambientes de pesquisa acad\u00eamicos, mas tamb\u00e9m para a \n\npr\u00f3pria ind\u00fastria do petr\u00f3leo.\n\nAl\u00e9m disto, o car\u00e1ter aberto das ferramentas de software usadas, bem como daquelas \n\nimplementadas, proporciona a divulga\u00e7\u00e3o dos ambientes computacionais e dos programas\n\nutilizados em diferentes centros de trabalho, agilizando a troca de informa\u00e7\u00f5es e a discuss\u00e3o \n\ndos resultados parciais obtidos. \n\nO paradigma baseado em solu\u00e7\u00f5es abertas demanda certo esfor\u00e7o no sentido de \n\nintegrar as ferramentas preexistentes ou criar novos aplicativos. Mesmo assim, o grau de \n\nflexibilidade alcan\u00e7\u00e1vel permite obter resultados extremamente satisfat\u00f3rios, j\u00e1 que todas as \n\nfuncionalidades das ferramentas implementadas podem ser ajustadas em detalhe, conforme as \n\nnecessidades do pesquisador. Estas ferramentas podem tamb\u00e9m ser amplamente empregadas\n\npara a resolu\u00e7\u00e3o de problemas n\u00e3o previstos em aplicativos comerciais, mesmo de elevado\n\ncusto de utiliza\u00e7\u00e3o.\n\nExemplo de aplica\u00e7\u00e3o desenvolvida utilizando um ambiente totalmente open source, o\n\nprograma Tensor3D permitiu simular a representa\u00e7\u00e3o em 3D da deforma\u00e7\u00e3o de objetos\n\ngeom\u00e9tricos a partir da utiliza\u00e7\u00e3o de tensores de tens\u00e3o e deforma\u00e7\u00e3o. A modifica\u00e7\u00e3o\n\ninterativa das componentes de um tensor matem\u00e1tico definido pelo usu\u00e1rio e a conseq\u00fcente \n\n201\n\n\n\ndeforma\u00e7\u00e3o em tempo real de objetos tridimensionais representando corpos geol\u00f3gicos\n\npossibilitam observar, estudar e distinguir a atua\u00e7\u00e3o das componentes de cisalhamento\n\nsimples e puro sobre entidades 3D, em cada um dos planos cinem\u00e1ticos (XY, XZ e YZ). \n\nA modelagem de diferentes objetos complexos constru\u00eddos simulando agregados \n\nmono- e poliminer\u00e1licos como elementos esf\u00e9ricos, segmentos de linhas e elipses com \n\norienta\u00e7\u00f5es diversas, fornece um instrumento valioso de observa\u00e7\u00e3o dos processos\n\ndeformacionais que envolvem corpos geol\u00f3gicos. Para tanto, foram empregadas ferramentas\n\nde modelagem geom\u00e9trica que permitem o estudo do comportamento de diferentes entidades \n\nem regimes de deforma\u00e7\u00e3o simulados no contexto do programa Tensor3D. Tais recursos\n\ntamb\u00e9m foram aplicados a entidades que simulam a morfologia de bacias sedimentares,\n\nconstru\u00eddas a partir de dados s\u00edsmicos e importadas de outros ambientes de trabalho 3D. Al\u00e9m\n\ndisto, a possibilidade de armazenar e restaurar estados intermedi\u00e1rios de deforma\u00e7\u00e3o dos\n\nobjetos visualizados permite isolar e estudar as v\u00e1rias etapas que caracterizam a deforma\u00e7\u00e3o\n\nprogressiva de rochas.\n\nFinalmente, o alto grau de interatividade proporcionado na visualiza\u00e7\u00e3o e deforma\u00e7\u00e3o\n\nde modelos geom\u00e9tricos torna o programa uma ferramenta adequada tanto para finalidades \n\ndid\u00e1ticas, como para o entendimento das deforma\u00e7\u00f5es em tr\u00eas dimens\u00f5es em projetos de \n\npesquisa que envolvem a deforma\u00e7\u00e3o de rochas, tanto do embasamento cristalino como de\n\nbacias sedimentares, inclusive em escala de reservat\u00f3rios.\n\nA modelagem 3D de informa\u00e7\u00f5es paleobatim\u00e9tricas das bacias de Santos e Campos,\n\nobtidas a partir de mapas de isovalores para o meso-Neocret\u00e1ceo, realizada com o programa\n\nGOCAD, aumentou as capacidades de an\u00e1lise e interpreta\u00e7\u00e3o de dados dispersos e \n\ndispon\u00edveis na literatura. Visualizando v\u00e1rias superf\u00edcies simultaneamente e com\n\nsombreamentos adequados para diferenciar os distintos ambientes deposicionais, foi poss\u00edvel \n\nidentificar rela\u00e7\u00f5es entre v\u00e1rias idades de evolu\u00e7\u00e3o para cada bacia. Foram tamb\u00e9m\n\nempregadas outras ferramentas de visualiza\u00e7\u00e3o cient\u00edfica e computa\u00e7\u00e3o gr\u00e1fica (tais como\n\nescala de cores, defini\u00e7\u00e3o de exagero vertical, modifica\u00e7\u00e3o do ponto de observa\u00e7\u00e3o, etc.) para \n\nreal\u00e7ar a varia\u00e7\u00e3o morf\u00f3logica das estruturas investigadas ao longo do tempo.\n\nAs superf\u00edcies paleobatim\u00e9tricas referentes \u00e0s duas bacias foram tamb\u00e9m visualizadas\n\nde forma simult\u00e2nea, o que permitiu identificar semelhan\u00e7as e diferen\u00e7as no padr\u00e3o de \n\nsedimenta\u00e7\u00e3o destes ambientes ao longo do tempo geol\u00f3gico. \n\nForam tamb\u00e9m extra\u00eddas entidades geom\u00e9tricas a partir das superf\u00edcies\n\npaleobatimetricas modeladas. Isto permitiu confeccionar anima\u00e7\u00f5es que mostram, por \n\n202\n\n\n\nexemplo, o deslocamento da linha de costa do Albiano ao Maastrichtiano, fornecendo um\n\ninstrumento de aux\u00edlio ao estudo das varia\u00e7\u00f5es paleoambientais ocorridas na regi\u00e3o. \n\nA aplica\u00e7\u00e3o de ferramentas de modelagem geom\u00e9trica 3D a superf\u00edcies \n\npaleobatim\u00e9tricas de diferentes idades permitiu a constru\u00e7\u00e3o de modelos de morfologia \n\n\u201cintermedi\u00e1ria\u201d, visando criar anima\u00e7\u00f5es que mostram uma varia\u00e7\u00e3o mais gradual da \n\nbatimetria nas bacias de Santos e Campos. Estas anima\u00e7\u00f5es permitir\u00e3o uma an\u00e1lise mais\n\ncompleta dos processos e da evolu\u00e7\u00e3o tect\u00f4nica da margem continental em apre\u00e7o. \n\nAs informa\u00e7\u00f5es paleobatim\u00e9tricas foram integradas com outros dados de ordem\n\nlitol\u00f3gica, batim\u00e9trica e estrutural obtidos da literatura, visando prover um ambiente unificado\n\nde an\u00e1lise da evolu\u00e7\u00e3o paleoambiental da margem continental sudeste brasileira, onde \n\ntamb\u00e9m poder\u00e3o ser incorporados perfis s\u00edsmicos e po\u00e7os. Esta integra\u00e7\u00e3o aumenta o\n\npotencial de interpreta\u00e7\u00e3o dos dados originais, devido \u00e0 facilidade de jun\u00e7\u00e3o e gerenciamento\n\nde informa\u00e7\u00f5es advindas de fontes distintas, e da possibilidade de interagir com informa\u00e7\u00f5es\n\nvisualizadas em 3D. \n\nA constru\u00e7\u00e3o de superf\u00edcies batim\u00e9tricas do Atl\u00e2ntico Sul do mesocret\u00e1ceo ao recente\n\ne do Mar Vermelho permite contextualizar melhor a evolu\u00e7\u00e3o paleogeogr\u00e1fica destas bacias \n\ndurante a abertura do Atl\u00e2ntico Sul e representar analogias em ambientes de deposi\u00e7\u00e3o atuais. \n\nEstas informa\u00e7\u00f5es podem ser tamb\u00e9m utilizadas para tecer considera\u00e7\u00f5es a respeito dos\n\npaleoambientes que caracterizavam as bacias de Santos e Campos em regi\u00f5es mais distais, \n\npara as quais n\u00e3o havia disponibilidade de po\u00e7os nos trabalhos originais de Viviers (1986) e \n\nAzevedo et al. (1987) utilizados na modelagem paleobatim\u00e9trica.\n\nEm s\u00edntese, a modelagem 3D destes dados permitiu real\u00e7ar:\n\n- A diferente hist\u00f3ria deposicional que caracterizou as bacias de Santos e Campos a partir \n\ndo neoturoniano, sendo que a Bacia de Campos apresentou relevo mais profundo e \n\n\u00edngrime at\u00e9 o final do Maastrichtiano.\n\n- Uma compartimenta\u00e7\u00e3o da batimetria atual do Mar Vermelho semelhante \u00e0 fisiografia das\n\nbacias de Santos e Campos durante o meso-Neocret\u00e1ceo. Em particular, a regi\u00e3o sul \u00e9 \n\ncaracterizada por plataforma mais extensa e batimetria mais suave, ao passo que a por\u00e7\u00e3o\n\nnorte apresenta plataforma mais estreita e fisiografia \u00edngrime.\n\n- Uma compartimenta\u00e7\u00e3o do relevo emerso do Mar Vermelho semelhante \u00e0 da margem\n\ncontinental sudeste brasileira. O relevo \u00e9 mais alto na por\u00e7\u00e3o sul, analogamente \u00e0 Serra do \n\nMar adjacente \u00e0 Bacia de Santos, que durante o meso-Neocret\u00e1ceo foi caracterizada por \n\nelevado aporte sedimentar; e menos pronunciado na regi\u00e3o central, analogamente \u00e0 por\u00e7\u00e3o \n\nNW adjacente \u00e0 Bacia de Campos, onde o volume de sedimentos depositados foi menor.\n\n203\n\n\n\n- A prov\u00e1vel exist\u00eancia de ambientes de deposi\u00e7\u00e3o mais profundos (batial inferior) na Bacia \n\nde Santos, baseado na analogia com regi\u00f5es fisiograficamente semelhantes da batimetria\n\ndo atual Mar Vermelho.\n\nAs t\u00e9cnicas de visualiza\u00e7\u00e3o cient\u00edfica descritas e aplicadas nesta disserta\u00e7\u00e3o, ao \n\npermitirem a modelagem e visualiza\u00e7\u00e3o de dados geol\u00f3gicos, demonstram a import\u00e2ncia das\n\nferramentas computacionais para subsidiar investiga\u00e7\u00f5es cient\u00edficas baseadas em conjuntos de \n\ndados extensos e diversificados. A complexidade dos dados obtidos em campo ou simulados, \n\naliada \u00e0 crescente exig\u00eancia de integra\u00e7\u00e3o entre informa\u00e7\u00f5es distintas, destaca a import\u00e2ncia\n\nde se implantar ambientes computacionais de integra\u00e7\u00e3o e estudo, al\u00e9m de consolidar as \n\nferramentas de modelagem e visualiza\u00e7\u00e3o 3D como instrumento imprescind\u00edvel \u00e0 an\u00e1lise de\n\nprocessos, estruturas e rela\u00e7\u00f5es de car\u00e1ter geol\u00f3gico. \n\n204\n\n\n\n9 Refer\u00eancias bibliogr\u00e1ficas\n\nANA. Dispon\u00edvel em:&lt;http://www.hidroweb.ana.gov.br/HidroWeb>. Acesso em: 15 dez. \n\n2004. HidroWeb: Sistema de Informa\u00e7\u00f5es Hidrol\u00f3gicas.\n\nANJUTA DEVSTUDIO. Dispon\u00edvel em:&lt;http://anjuta.sourceforge.net>. Acesso em: 15 jul.\n\n2005. Ambiente open source de desenvolvimento integrado de programas em C/C++ para \n\na plataforma Linux. \n\nANTUNES, P. T. S.; BENGALY, A. P.; CONCEI\u00c7\u00c3O, D. L. R. Three-dimensional\n\ngeometric modeling of sedimentary basins using GOCAD. In: GOCAD MEETING, 24., \n\n2004, Nancy. Proceedings... Nancy: Nancy School of Geology, 2004. p. 1-15. \n\nARAI, M. Geochemical  reconnaissance of the Mid-cretaceous anoxic event in the Santos \n\nBasin, Brazil. Revista Brasileira de Geoci\u00eancias, S\u00e3o Paulo, v. 18, n. 3, p. 273-282, \n\n1988.\n\nARCGIS.  Dispon\u00edvel em: &lt;http://www.esri.com/software/arcgis>. Acesso em: 4 ago. 2005. \n\nPrograma para implementa\u00e7\u00e3o de Sistemas de Informa\u00e7\u00f5es Geogr\u00e1ficas.\n\nAUTODESK MAP. Dispon\u00edvel em:&lt;www.autodesk.com/map>. Acesso em: 10 ago. 2005. \n\nDigitaliza\u00e7\u00e3o e integra\u00e7\u00e3o de dados em Sistemas de Informa\u00e7\u00e3o Geogr\u00e1ficos. \n\nAZEVEDO, R. L. M.; GOMIDE, J.; VIVIERS, M. C. Geo-hist\u00f3ria da Bacia de Campos,\n\nBrasil, do Albiano ao Maastrichtiano. Revista Brasileira de Geoci\u00eancias, S\u00e3o Paulo, v. \n\n17, n. 2, p. 139-146, 1987. \n\nAZEVEDO, R. L. M. O Albiano no Atl\u00e2ntico Sul: estratigrafia, paleoceanografia e rela\u00e7\u00f5es \n\nglobais. 2001. 2 v. Tese (Doutorado em Geoci\u00eancias) \u2013 Instituto de Geoci\u00eancias, \n\nUniversidade Federal do Rio Grande do Sul, Porto Alegre, 2001. \n\nAZEVEDO, R. L. M. Paleoceanografia e a evolu\u00e7\u00e3o do Atl\u00e2ntico Sul no Albiano. Boletim de \n\nGeoci\u00eancias da Petrobras, Rio de Janeiro, v. 12, n. 2, p. 231-249, 2004. \n\nBDEP. Dispon\u00edvel em:&lt;http://www.bdep.gov.br>. Acesso em: 13 nov. 2004. Banco de dados \n\nde Explora\u00e7\u00e3o e Produ\u00e7\u00e3o. \n\nCAINELLI C.; MOHRIAK, W. U. Geology of Atlantic Eastern Brazilian basins. In: AAPG\n\nINTERNATIONAL CONFERENCE AND EXHIBITION, 1998, Rio de Janeiro. Short\n\nCourse Notes\u2026 Rio de Janeiro: AAPG, 1998. p. 1-67. \n\nCHANG, H. K.; KOWSMANN, R.; FERREIRA, A. M.; BENDER, A. A. Tectonics and \n\nstratigraphy of the East Brazil Rift System: an overview. Tectonophysics, Amsterdam, v. \n\n213, p. 97-138, 1992. \n\nCMAKE. Dispon\u00edvel em:&lt;http://www.cmake.org>. Acesso em: 19 jul. 2004. Ferramenta\n\nmulti-plataforma para compila\u00e7\u00e3o de projetos.\n\n205\n\n\n\nCONECTIVA LINUX. Dispon\u00edvel em:&lt;http://www.conectiva.com.br>. Acesso em: 19 jul.\n\n2005. Distribui\u00e7\u00e3o brasileira do sistema Linux. \n\nCOREL DRAW.  Dispon\u00edvel em:&lt;http://www.corel.com>. Acesso em: 15 dez. 2004. \n\nAplicativo para editora\u00e7\u00e3o e digitaliza\u00e7\u00e3o eletr\u00f4nica.\n\nCPRM. Dispon\u00edvel em:&lt;http://www.cprm.gov.br>. Acesso em: 15 dez. 2004. Servi\u00e7o \n\nGeol\u00f3gico do Brasil. \n\nDEBIAN.  Dispon\u00edvel em:&lt;http://www.debian.org>. Acesso em: 19 jul. 2005. Distribui\u00e7\u00e3o \n\ndo sistema Linux voltada para desenvolvimento e pesquisa em sistemas operacionais. \n\nDIAS-BRITO, D. A Bacia de Campos no Mesocret\u00e1ceo: uma contribui\u00e7\u00e3o \u00e0 paleoceanografia\n\ndo Atl\u00e2ntico Sul primitivo. Revista Brasileira de Geoci\u00eancias, S\u00e3o Paulo, v. 17, n. 2, p. \n\n162-167, 1987. \n\nEARTH RESOURCES MAPPER. Dispon\u00edvel em:&lt;http://www.ermapper.com/ermapper>.\n\nAcesso em: 25 ago. 2005. Aplicativo para jun\u00e7\u00e3o e processamento de imagens de sat\u00e9lite. \n\nEBERT, H. D.; LAVORANTE, L. P. Visualiza\u00e7\u00e3o 3D da paleobatimetria da Bacia de\n\nCampos com o GOCAD. In: SIMP\u00d3SIO DE QUANTIFICA\u00c7\u00c3O EM GEOCI\u00caNCIAS,\n\n8., 2000. Rio Claro. Boletim de Resumos Expandidos... Rio Claro: UNESP, 2000. p. 81-\n\n85.\n\nFEDORA CORE 4. Dispon\u00edvel em:&lt;http://fedora.redhat.com>. Acesso em: 19 jul. 2005. \n\nDistribui\u00e7\u00e3o gratuita do sistema Linux mantida pela empresa Red Hat. \n\nFOLEY, J. D.; van DAM, A.; FEINER, S. K.; HUGHES, J. F. Computer Graphics:\n\nprinciples and practice. Boston: Addison-Wesley, 1996. 1150 p. \n\nFRAN\u00c7A, A. B.; MILANI, E. J.; SCHNEIDER, R. L.; L\u00d3PEZ, O. P., L\u00d3PEZ, J. M.; \n\nSU\u00c1REZ R. S.; SANTA ANA, H.; WIENS, F.; FERREIRO, O.; ROSSELLO, E. A.; \n\nBIANUCCI, H. A.; FLORES, R. F. A.; VISTALLI, M. C.; FERNANDEZ-SEVESO, F.; \n\nFUENZALIDA, R. P.; MU\u00d1OZ, N. Phanerozoic correlation in southern South Am\u00e9rica.\n\nIn: TANKARD, A. J.; SU\u00c1REZ SORUCO, R.; WELSINK, H. J. (Eds.). Petroleum\n\nBasins of South America. Tulsa: AAPG, 1995. p. 129-162. (AAPG Memoir, 62) \n\nFREEBSD. Dispon\u00edvel em:&lt;http://www.freebsd.org>. Acesso em: 19 jul. 2005. Distribui\u00e7\u00e3o \n\ndo sistema Linux voltada para seguran\u00e7a de sistemas.\n\nGARCIA, S. F. M. Estudo tridimensional de efeitos da halocinese em margens passivas.\n\n1999. 1 v. Disserta\u00e7\u00e3o (Mestrado em Evolu\u00e7\u00e3o Crustal e Recursos Minerais) \u2013 Escola de\n\nMinas, Universidade Federal de Ouro Preto, Ouro Preto, 1999. \n\nGCC. Dispon\u00edvel em:&lt;http://gcc.gnu.org>. Acesso em: 15 jul. 2005. Compilador de c\u00f3digo \n\naberto para as linguagens C / C++ em ambiente UNIX.\n\n206\n\n\n\nGJELBERG, J. Morphology of Oligocene and Miocene Turbidite Channel Systems: Block \n\n434, OffShore Angola. In: MOHRIAK, W.U. (Ed.) Rifted sedimentary basins of South \n\nAtlantic: turbidite reservoir, sedimentation and tectonic process. Rio de Janeiro:\n\nPetrobr\u00e1s;UERJ, 2003. 1 CD-ROM. \n\nGNU. Dispon\u00edvel em:&lt;http://www.gnu.org>. Acesso em: 19 jul. 2005. Filosofia de \n\ndesenvolvimento de software de c\u00f3digo aberto. \n\nGNU MAKE. Dispon\u00edvel em:\n\n&lt;http://www.gnu.org/software/make/manual/html_mono/make.html>. Acesso em: 15 jul.\n\n2005. Aplicativo de c\u00f3digo aberto para a compila\u00e7\u00e3o de projetos complexos usando\n\narquivos de controle Make.\n\nGNU TOOLKIT. Dispon\u00edvel em:&lt;http://www.gtk.org>. Acesso em: 15 jul. 2005. Biblioteca \n\nde c\u00f3digo aberto para desenvolvimento de interfaces gr\u00e1ficas. \n\nGTK+ USER INTERFACE BUILDER. Dispon\u00edvel em &lt;http://glade.gnome.org>. Acesso em \n\n15 jul. 2005. Editor de interfaces gr\u00e1ficas para as bibliotecas GTK / GTK+. \n\nGOCAD. Dispon\u00edvel em:&lt;http://www.earthdecision.com>. Acesso em: 13 jul. 2005.\n\nPrograma para modelagem e visualiza\u00e7\u00e3o de dados geol\u00f3gicos.\n\nGTOPO30. Dispon\u00edvel em&lt;http://edcdaac.usgs.gov/gtopo30/gtopo30.asp >. Acesso em 15 \n\ndez. 2004. Global 30 Arc Second Elevation Data Set. \n\nHARLAND, W. B.; COX, A. V.; LLEWELLYN, P. G.; PICKTON, C. A. G.; SMITH, A. J.; \n\nWALTERS, R. A geologic time scale. Cambridge: Cambridge University Press, 1982. \n\n130 p. \n\nHUME LINEAR ALGEBRA TCL PACKAGE, LA. Dispon\u00edvel em&lt;\n\nhttp://www.hume.com/la>. Acesso em 20 jul. 2005. Biblioteca de fun\u00e7\u00f5es de \u00e1lgebra \n\nlinear em Tcl. \n\nHOBBS, B. E.; MEANS, W. D.; WILLIAMS, P. F. An outline of structural geology. New \n\nYork: John Wiley &amp; Sons, 1976. 560 p. \n\nKOUTSOUKOS, E. A. M. A \u00e1rea noroeste da Bacia de Campos, Brasil, do Mesocret\u00e1ceo ao \n\nNeocret\u00e1ceo: evolu\u00e7\u00e3o paleoambiental e paleogeogr\u00e1fica pelo estudo de foramin\u00edferos.\n\nRevista Brasileira de Geoci\u00eancias, S\u00e3o Paulo, v. 17, n. 2, p. 168-172, 1987. \n\nLANZARINI, W. L.; GUIMAR\u00c3ES, A. O. Modelagem geol\u00f3gica 3D de reservat\u00f3rios\n\nturbid\u00edticos canalizados com os programas GOCAD e PETBOOL. In: SIMP\u00d3SIO DE \n\nQUANTIFICA\u00c7\u00c3O EM GEOCI\u00caNCIAS, 8., 2000, Rio Claro. Boletim de Resumos\n\nExpandidos... Rio Claro: UNESP, 2000. p. 113-116.\n\n207\n\n\n\nLAVORANTE, L. P.; EBERT, H. D.; SALAMUNI, E. Visualiza\u00e7\u00e3o de dados volum\u00e9tricos\n\ncom o programa VIS5D. In: SIMP\u00d3SIO DE QUANTIFICA\u00c7\u00c3O EM GEOCI\u00caNCIAS,\n\n8., 2000, Rio Claro. Boletim de Resumos Expandidos... Rio Claro: UNESP, 2000. p. \n\n121-123.\n\nLINDENBECK, C.; EBERT, H. D.; ULMER, H.; LAVORANTE, L. P.; PFLUG, R. Tricut: a \n\nprogram to clip triangle meshes using the Rapid and Triangle libraries and the\n\nVisualization Toolkit. Computers &amp; Geosciences, New York, v. 28, n. 7, p. 841-850. \n\n2002.\n\nLINUX. Dispon\u00edvem em:&lt;http://www.linux.org>. Acesso em: 19 jul. 2005. Sistema\n\noperacional de c\u00f3digo aberto baseado em sistemas UNIX comerciais. \n\nLINUX KERNEL ARCHIVES. Dispon\u00edvem em:&lt;http://kernel.org>. Acesso em: 18 jul.\n\n2005. M\u00f3dulo principal do sistema operacional Linux.\n\nMALLET, J. L. Discrete Smooth Interpolation. ACM-Transactions on Graphics, New\n\nYork, v. 8, n. 2, p. 121-144. 1989. \n\nMANDRAKELINUX. Dispon\u00edvel em:&lt;http://www.mandrivalinux.com>. Acesso em: 19 jul. \n\n2005. Distribui\u00e7\u00e3o francesa do sistema operacional Linux. \n\nMENDON\u00c7A, J. M.; ARAG\u00c3O, M. A. N. F.; MORAIS, A. Visualiza\u00e7\u00e3o 3D da Bacia do \n\nReconcavo. In: SIMP\u00d3SIO NACIONAL DE ESTUDOS TECT\u00d4NICOS, 8., Recife. \n\nAnais... Recife: SBG, 2001. p. 367-370. \n\nMODICA, C. J.; BRUSH, E. R. Postrift sequence stratigraphy, paleogeography and fill \n\nhistory of the deep-water Santos basin, offshore southeast Brazil. AAPG Bulletin, Tulsa,\n\nv. 88, n. 7, p. 923-945, 2004. \n\nMOHRIAK, W. U.; BARROS, A. Z.; FUJITA, A. Magnetismo e tectonismo cenoz\u00f3icos na\n\nregi\u00e3o de Cabo Frio, RJ. In: CONGRESSO BRASILEIRO DE GEOLOGIA, 37., Natal. \n\nAnais... Natal: SBG, 1990. v. 6, p. 2873-2885. \n\nMOHRIAK, W. U. Rift architecture and salt tectonics of the South Atlantic sedimentary\n\nbasins. In: MOHRIAK, W.U. (Ed.) Rifted sedimentary basins of South Atlantic: \n\nturbidite reservoir, sedimentation and tectonic process. Rio de Janeiro: \n\nPetrobr\u00e1s;UERJ, 2003. 1 CD-ROM. \n\nMORAES, A. Mec\u00e2nica do cont\u00ednuo para a geologia estrutural. Rio de Janeiro: CENPES/ \n\nPetrobr\u00e1s, 2000. 88 p.\n\nMOVIE.BYU FILE FORMAT. Dispon\u00edvel em: &lt;http://lc.cray.com/doc/movie>. Acesso em:\n\n19 jul. 2005. Formato para representa\u00e7\u00e3o de modelos geom\u00e9tricos poligonais.\n\n208\n\n\n\nN\u00dcRNBERG, D.; M\u00dcLLER, R. D. The tectonic evolution of South Atlantic from Late \n\nJurassic to present. Tectonophysics, Amsterdam, v. 191, p. 27-53, 1991. \n\nNVIDIA. Dispon\u00edvel em:&lt;http://www.nvidia.com>. Acesso em: 19 jul. 2005. P\u00e1gina de \n\nacesso aos drivers de controle das placas gr\u00e1ficas aceleradoras da companhia NVIDIA. \n\nOJEDA, H. A. O.; ARANHA, L. G. F. Bacia de Santos, integra\u00e7\u00e3o geol\u00f3gica regional. Rio \n\nde Janeiro: Petrobr\u00e1s, 1980. Relat\u00f3rio Interno. \n\nOJEDA, H. A. O.; CESERO, P. Bacias de Santos e Pelotas, geologia e perspectivas \n\npetrol\u00edferas. Rio de Janeiro: Petrobr\u00e1s, 1973. Relat\u00f3rio Interno. \n\nOPEN-GL. Dispon\u00edvel em:&lt;http://www.opengl.org>. Acesso em: 19 jul. 2005. Biblioteca \n\ngr\u00e1fica em linguagem C contendo os principais algoritmos de computa\u00e7\u00e3o gr\u00e1fica. \n\nPAULA, O. B.; MOHRIAK, W. U. Interpreta\u00e7\u00e3o estrutural das megafei\u00e7\u00f5es da Bacia de \n\nSantos. In: SIMP\u00d3SIO NACIONAL DE ESTUDOS TECTONICOS, n. 10, 2005, \n\nCuritiba. Boletim de Resumos Expandidos... Curitiba: SBG-PR, 2005. p. 94-96. \n\nPEREIRA, M. J.; BARBOSA, C. M.; AGRA, J.; GOMES, J. B.; ARANHA, L. G. F; SAITO,\n\nM.; RAMOS, M. A.; CARVALHO, M. D.; STAMATO, M.; BAGNI, O. Estratigrafia da \n\nBacia de Santos: an\u00e1lise das seq\u00fc\u00eancias, sistemas deposicionais e revis\u00e3o \n\nlitoestratigr\u00e1fica. In: CONGRESSO BRASILEIRO DE GEOLOGIA, n. 34., 1986,\n\nGoi\u00e2nia. Anais... Goi\u00e2nia:  SBG, 1986, v.1. p. 65-79. \n\nPEREIRA, M. J.; FEIJ\u00d3, F. J. Bacia de Santos. Boletim de Geoci\u00eancias da Petrobr\u00e1s, Rio \n\nde Janeiro, v. 8, n. 1, p. 219-234, 1994. \n\nPFLUG, R.; HARBAUGH, J. W. Three-dimensional computer graphics in modeling\n\ngeologic structures and simulating geologic processes. Berlim: Springer Verlag, 1992. \n\n298 p. \n\nPLATE TECTONICS ONLINE RECONSTRUCTION TOOL. Dispon\u00edvel em:\n\n<http://www.itis-molinari.mi.it/Intro-Reconstr.html>. Acesso em: 4 ago. 2005. Programa\n\nde reconstru\u00e7\u00e3o paleogeogr\u00e1fica em tempo real. \n\nRAMSAY, J. G.; HUBER, M. I. The techniques of modern structural geology: strain\n\nanalysis. London: Academic Press, 1983. v.3. 306 p. \n\nRANGEL, H. D.; MARTINS, F. A. L.; ESTEVES, F. R.; FEIJ\u00d3, F. J. Bacia de Campos.\n\nBoletim de Geoci\u00eancias da Petrobr\u00e1s, Rio de Janeiro, v. 8, n. 1, p. 203-217, 1994. \n\nRED HAT ENTERPRISE LINUX. Dispon\u00edvel em:&lt;http://www.redhat.com/software/rhel>.\n\nAcesso em: 13 jul. 2005. Distribui\u00e7\u00e3o comercial do sistema Linux mantida pela empresa\n\nRed Hat. \n\n209\n\n\n\nRPMFIND. Dispon\u00edvel em:&lt;http://www.rpmfind.com>. Acesso em: 19 jul. 2005. \n\nReposit\u00f3rio de m\u00f3dulos do sistema operacional Linux no formato da empresa Red Hat. \n\nSCHROEDER, W. J.; MARTIN, K.; LORENSEN, B. The Visualization Toolkit. 2nd ed. \n\nUpper Saddle River: Prentice Hall, 1996. 826 p. \n\nSCHETTINO, A.; SCOTESE, C. R. A Synthetic APWP for Africa (Jurassic-Present) and\n\nGlobal Plate Tectonic Reconstructions. Eos Trans. AGU, v. 81, n. 19. 2000 \n\nSTROUSTRUP, B. The C++ programming language. 3rd ed. Boston: Addison-Wesley, \n\n2000. 911 p. \n\nSYKES, T. J. S.; ROYER, J. Y.; RAMSAY, A. T. S.; KIDD, R. B. Southern emisphere\n\npalaeobathymetry. In: CRAMP, A.; MACLEOD, C. J.; LEE, S.V; JONES, E. J. W. (Ed.).\n\nGeological Evolution of Ocean Basins: Results from the Ocean Drilling Program.\n\nLondon: Geological Society, 1998. p. 3-42. (Special Pubblication, 131) \n\nTCL/TK. Dispon\u00edvel em: &lt;http://www.tcl.tk>. Acesso em: 18 jul. 2005. Linguagem \n\ninterpretada para prototipa\u00e7\u00e3o e desenvolvimento de projetos.\n\nTCL/TK DISCUSSION GROUP.\n\nDispon\u00edvel em:  &lt;http://groups.google.com/groups?q=comp.lang.tcl>. Acesso em: 20 jul.\n\n2005. Grupo de discuss\u00e3o sobre a linguagem Tcl/Tk. \n\nTOPEX. Dispon\u00edvel em:&lt;http://topex-www.jpl.nasa.gov>. Acesso em: 15 dez. 2004. Ocean \n\nSurface Topography From Space. \n\nTWISS, J.; MOORES, E. M. Structural Geology. New York: W. H. Freeman &amp; Company,\n\n1992. 530 p. \n\nVISUALIZATION TOOLKIT. Dispon\u00edvel em:&lt;http://www.vtk.org>. Acesso em: 19 jul. \n\n2005. Ambiente de visualiza\u00e7\u00e3o cient\u00edfica de c\u00f3digo aberto.\n\nVIRTUAL REALITY MODELLING LANGUAGE. Dispon\u00edvel em:\n\n<http://www.w3.org/MarkUp/VRML>. Acesso em: 15 jul. 2004. Modelagem de\n\nambientes virtuais descentralizados na rede Internet. \n\nVTK MAILING LIST. Dispon\u00edvel em:  &lt;http://www.kitware.com/searchpublic.html>.\n\nAcesso em: 18 dez. 2004. Lista de discuss\u00e3o da biblioteca VTK.\n\nVIVIERS, M. C. Bioestratigrafia e evolu\u00e7\u00e3o paleoambiental do Meso-Neocret\u00e1ceo da Bacia \n\nde Santos, Brasil. In: CONGRESSO BRASILEIRO DE GEOLOGIA, 34., 1986. Goi\u00e2nia. \n\nAnais... Goi\u00e2nia:  SBG, 1986, v.1,  p. 50-64. \n\nVIVIERS, M. C.; AZEVEDO, R. L. M. The southestern area of the brazilian continental \n\nmargin: its evolution during the Middle and Late Cretaceous as indicated by \n\n210\n\n\n\npaleoecological data. Revista Brasileira de Geoci\u00eancias, S\u00e3o Paulo, v. 18, n. 3, p. 291-\n\n298, 1988. \n\nWATSON, D. F. Computing the n-dimensional Delaunay Tessellation with application to\n\nVoronoy polytopes. The Computer Journal, London, v. 24, n. 2, p. 167-172, 1981. \n\nWELCH, B.B. Practical programming in Tcl and Tk. Upper Saddle River: Prentice Hall, \n\n1997. 630 p. \n\n211"}]}}}