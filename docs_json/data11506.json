{"add": {"doc": {"field": [{"@name": "docid", "#text": "BR-TU.14916"}, {"@name": "filename", "#text": "21303_190171.pdf"}, {"@name": "filetype", "#text": "PDF"}, {"@name": "text", "#text": "UNIVERSIDADE FEDERAL DE SANTA CATARINA\nPROGRAMA DE P\u00d3S-GRADUA\u00c7\u00c3O EM CI\u00caNCIA DA\n\nCOMPUTA\u00c7\u00c3O\n\nCarlos Andr\u00e9 de Sousa Rocha\n\nAN\u00c1LISE DE DESEMPENHO EM AMBIENTES\nCLIENTE/SERVIDOR 2-CAMADAS E 3-CAMADAS\n\nDisserta\u00e7\u00e3o submetida \u00e0 Universidade Federal de Santa Catarina como parte dos requisitos\n\npara a obten\u00e7\u00e3o do grau de Mestre em Ci\u00eancia da Computa\u00e7\u00e3o.\n\nOrientador: Prof. Paulo Jos\u00e9 de Freitas Filho, Dr. Eng.\n\nFlorian\u00f3polis, agosto de 2002\n\n\n\nAN\u00c1LISE DE DESEMPENHO EM AMBIENTES\nCLIENTE/SERVIDOR 2-CAMADAS E 3-CAMADAS\n\nCarlos Andr\u00e9 de Sousa Rocha\n\nEsta disserta\u00e7\u00e3o foi julgada adequada para a obten\u00e7\u00e3o do t\u00edtulo de Mestre em Ci\u00eancia da\n\nComputa\u00e7\u00e3o, \u00c1rea de Concentra\u00e7\u00e3o Sistemas de Computa\u00e7\u00e3o, e aprovada em sua forma final\n\npelo Programa de P\u00f3s-Gradua\u00e7\u00e3o em Ci\u00eancia da Computa\u00e7\u00e3o.\n\n_____________________________________\n\nProf. Fernando \u00c1lvaro Ostuni Gauthier, Dr. Eng.\nCoordenador do Curso\n\nBanca Examinadora\n\n_____________________________________\n\nProf. Paulo Jos\u00e9 de Freitas Filho, Dr. Eng.\nOrientador\n\n_____________________________________\nProf. Jo\u00e3o Bosco da Mota Alves, Dr.\n\n____________________________________\nProf. Luiz Fernando Jacintho Maia, Dr.\n\n\n\nDedicat\u00f3ria\n\nDedico esta pesquisa \u00e0 minha amada m\u00e3e Edisa e ao meu amado\n\nirm\u00e3o ca\u00e7ula Alexandre pelo apoio incondicional n\u00e3o s\u00f3 na\n\nrealiza\u00e7\u00e3o deste trabalho de disserta\u00e7\u00e3o, mas por todo o apoio ao\n\nlongo da minha vida, e por n\u00e3o duvidar em nenhum momento da\n\nminha capacidade em conclu\u00ed-lo.\n\n\n\nAgradecimentos\n\n\u00c0 Dire\u00e7\u00e3o do Centro de Ensino Superior do Par\u00e1 (CESUPA), hoje orgulhosamente\n\nCentro Universit\u00e1rio do Par\u00e1, pela a coragem em promover o mestrado, juntamente com a\n\nUniversidade Federal de Santa Catarina, e por trabalhar pelo desenvolvimento da regi\u00e3o.\n\nAo amigo e orientador Paulo Jos\u00e9 de Freitas Filho, por comprar a id\u00e9ia deste trabalho\n\nde pesquisa, pelo apoio dado nas horas de desespero, pela confian\u00e7a e paci\u00eancia mostradas e\n\ntamb\u00e9m pelos pux\u00f5es de orelha nos momentos de necessidade.\n\nAo meu melhor amigo Paulo Francioli Honorato Jr. pelo incentivo inicial de encarar o\n\nmestrado e pelo apoio nos momentos em que pensei desistir.\n\n\u00c0s amigas e conterr\u00e2neas Chris e Cynthia , amigas \u00e9 uma defini\u00e7\u00e3o pequena para todo\n\ncarinho que tenho por elas, que me receberam, e me acolheram, no seu apartamento durante\n\nmeses, o que permitiu grande parte da elabora\u00e7\u00e3o desta pesquisa.\n\nAos amigos L\u00eddio (Toledo) Mauro, Gustavo (Guga) Campos e Luis Lacerda pelas\n\nid\u00e9ias sugeridas, pelo apoio aos trabalhos n\u00e3o conclu\u00eddos, pela confian\u00e7a depositada e pela\n\nleitura e cr\u00edticas dos primeiros cap\u00edtulos depois daquela bendita noite no CESUPA, n\u00e3o \u00e9\n\ngalera? Naquela noite teve inicio este trabalho.\n\nAo amigo Mauro Wilkens, pelas noites na frente do computador, algumas vezes at\u00e9\n\nresfriado, ensinado o caminho das pedras no ARENA e por todos os livros e CD\u00b4s\n\nemprestados.\n\n\u00c0 grande amiga professora Silvia Modesto Nassar, diga-se de passagem tamb\u00e9m\n\norigin\u00e1ria da terrinha (Bel\u00e9m do P\u00e1ra), por todo o apoio, pela sala e computador cedidos, pela\n\nexplica\u00e7\u00e3o sobre os m\u00e9todos estat\u00edsticos usados neste trabalho, pelas conversas que matavam\n\nas saudades de Bel\u00e9m e pelo sempre alt\u00edssimo astral.\n\nAo conterr\u00e2neo professor Jo\u00e3o Bosco da Mota Alves, por participar da banca\n\nexaminadora, pelas sugest\u00f5es dadas e pelo apoio ap\u00f3s a defesa.\n\n\n\n\u00c0 amiga Rita de C\u00e1ssia Cerqueira Gomes pelo material cedido e pelas conversas de\n\napoio.\n\nAo professor Luiz Fernando Jacintho Maia por participar da banca examinadora.\n\n\n\nSum\u00e1rio\n\nLista de Tabelas ...........................................................................................................................i\n\nLista de Figuras...........................................................................................................................ii\n\nResumo ......................................................................................................................................1\n\nAbstract ......................................................................................................................................2\n\n1. Introdu\u00e7\u00e3o.....................................................................................................................3\n\n1.1. MOTIVA\u00c7\u00c3O.......................................................................................................................................................... 3\n\n1.2. PROBLEMA A SER ABORDADO ..................................................................................................................... 5\n\n1.3. OBJETIVOS.............................................................................................................................................................. 6\n\n1.3.1. Objetivo Geral ..........................................................................................................................................................6\n\n1.3.2. Objetivos Espec\u00edficos...............................................................................................................................................6\n\n1.4. ESTRUTURA DO TRABALHO .......................................................................................................................... 6\n\n2. Paradigma Cliente/Servidor uma Abordagem 2-Camadas e 3-Camadas ..............8\n\n2.1. HIST\u00d3RICO DA EVOLU\u00c7\u00c3O NO AMBIENTE COMPUTACIONAL..................................................... 8\n\n2.2. UMA VIS\u00c3O GERAL DOS SISTEMAS COMPUTACIONAIS................................................................... 9\n\n2.3. O PARADIGMA CENTRALIZADO (TRADICI ONAL) OU LEGADO ..................................................... 9\n\n2.4. O PARADIGMA CLIENTE/SERVIDOR......................................................................................................... 11\n\n2.5. PARADIGMA CLIENTE/SERVIDOR 3-CAMADAS E N-CAMADAS .................................................. 12\n\n2.6. INTRODU\u00c7\u00c3O AO PARADIGMA CLIENTE/SERVIDOR 2-CAMADAS............................................ 14\n\n2.6.1. Elementos do Paradigma Cliente/Servidor.......................................................................................................15\n\n2.6.2. Benef\u00edcios, Vantagens e Desvantagens do Paradigma Cliente/Servidor 2-Camadas ...............................18\n\n2.6.3. Porque o Paradigma Cliente/Servidor 3-Camadas.........................................................................................20\n\n2.6.4. Compara\u00e7\u00e3o Entre os Paradigmas Cliente/Servidor 2-Camadas e 3-Camadas........................................26\n\n2.6.5. Trabalhos Envolvendo os Paradigmas Cliente/Servidor 2-Camadas e 3-Camadas..................................27\n\n2.6.6. Fatores e Grandezas de Desempenho Consideradas em Sistemas Cliente/Servidor.................................29\n\n3. Metodologia Abordada ..............................................................................................36\n\n3.1. DESCRI\u00c7\u00c3O GERAL DAS METODOLOGIAS PARA PLANEJAMENTO DE CAPACIDADE E\n\nAVALIA\u00c7\u00c3O DE DESEMPENHO DE SISTEMAS COMPUTACIONAIS ................................................................ 36\n\n3.2. O PLANEJAMENTO DE CAPACIDADE....................................................................................................... 37\n\n3.2.1. Compreens\u00e3o do Ambiente ...................................................................................................................................38\n\n3.2.2. Caracteriza\u00e7\u00e3o da Carga de Trabalho ..............................................................................................................39\n\n3.3. AVALIA\u00c7\u00c3O DE DESEMPENHO ................................................................................................................... 41\n\n3.3.1. Etapas da Avalia\u00e7\u00e3o de Desempenho ................................................................................................................42\n\n3.3.2. Modelo de Desempenho........................................................................................................................................46\n\n3.4. COMPARA\u00c7\u00c3O DE DUAS ALTERNATIVAS DE PROJETOS DE SISTEMAS ................................. 48\n\n3.4.1. Determina\u00e7\u00e3o do Intervalo de Confian\u00e7a para Avaliar Diferen\u00e7as Entre Dois Projetos Alternativos\n\nde Sistemas..................................................................................................................................................................................50\n\n4. Aplica\u00e7\u00e3o da Metodologia no Contexto DETRAN-PA...........................................52\n\n\n\n4.1. ENTENDIMENTO DO AMBIENTE DETRAN-PA ...................................................................................... 52\n\n4.2. AS VARI\u00c1VEIS DE DESEMPENHO ASSOCIADAS AO NEG\u00d3CIO ..................................................... 55\n\n4.3. DESCRI\u00c7\u00c3O DA CARGA E DO MODELO DE CARGA PARA O AMBIENTE EM ESTUDO ....... 57\n\n4.3.1. Caracteriza\u00e7\u00e3o da Carga de Trabalho ..............................................................................................................57\n\n4.3.2. Os Servi\u00e7os e seu Fluxo de Solicita\u00e7\u00e3o ..............................................................................................................59\n\n4.4. DESENVOLVIMENTO DO MODELO DE DESEMPENHO PARA O AM BIENTE SOB ESTUDO 61\n\n4.4.1. Sele\u00e7\u00e3o dos Fatores para as Medidas de Desempenho ..................................................................................64\n\n4.4.2. Sele\u00e7\u00e3o das M\u00e9tricas de Desempenho ...............................................................................................................65\n\n4.4.3. Projeto Experimental ............................................................................................................................................65\n\n4.4.4. An\u00e1lise dos Resultados .........................................................................................................................................74\n\n5. Conclus\u00f5es Finais .......................................................................................................82\n\n5.1. SUGEST\u00d5ES PARA TRABALHOS FUTUROS ............................................................................................ 84\n\nAnexos ....................................................................................................................................85\n\nANEXO A \u2013 MODELOS DE SIMULA\u00c7\u00c3O NO ARENA ............................................................................................... 86\n\nANEXO B \u2013 DISTRIBUI\u00c7\u00c3O DE SERVI\u00c7OS DO DETRAN-PA ................................................................................ 87\n\nANEXO C \u2013 FULL DISCLOSURE REPORT: ECPERF BENCHMARK FOR ORACLE9IAS RELEASE 2 ....... 88\n\nANEXO D \u2013 RESULTADOS DE SIMULA\u00c7\u00c3O COLHIDOS NO ARENA DISPOSTAS POR CEN\u00c1RIO ........ 98\n\nRefer\u00eancias Bibliogr\u00e1ficas......................................................................................................134\n\n\n\ni\n\nLista de Tabelas\n\nTab. 2.1 Compara\u00e7\u00e3o dos paradigmas 2-camadas e 3-camadas...............................................27\n\nTab. 2.2 Comportamento do tempo de resposta e throughput..................................................31\n\nTab. 4.1 Componentes b\u00e1sicos e par\u00e2metros............................................................................58\n\nTab. 4.2 I/O para requisi\u00e7\u00f5es Insert.........................................................................................59\n\nTab. 4.3Servi\u00e7os com suas requisi\u00e7\u00f5es.....................................................................................60\n\nTab. 4.4 Servi\u00e7os com suas distribui\u00e7\u00f5es.................................................................................62\n\nTab. 4.5 N\u00edveis dos fatores para cen\u00e1rio 1................................................................................66\n\nTab. 4.6 N\u00edveis dos fatores para cen\u00e1rio 2................................................................................66\n\nTab. 4.7 N\u00edveis dos fatores para cen\u00e1rio 3................................................................................66\n\nTab. 4.8 N\u00edveis dos fatores para cen\u00e1rio 4................................................................................67\n\nTab. 4.9 N\u00edveis dos fatores para cen\u00e1rio 5................................................................................67\n\nTab. 4.10 N\u00edveis dos fatores para cen\u00e1rio 6..............................................................................67\n\nTab. 4.11 Resultado para cen\u00e1rio 1 no modelo 2-camadas.......................................................68\n\nTab. 4.12 Resultado para cen\u00e1rio 1 no modelo 3-camadas.......................................................68\n\nTab. 4.13 Resultado para cen\u00e1rio 2 no modelo 2-camadas.......................................................69\n\nTab. 4.14 Resultado para cen\u00e1rio 2 no modelo 3-camadas.......................................................69\n\nTab. 4.15 Resultado para cen\u00e1rio 3 no modelo 2-camadas.......................................................70\n\nTab. 4.16 Resultado para cen\u00e1rio 3 no modelo 3-camadas.......................................................70\n\nTab. 4.17 Resultado para cen\u00e1rio 4 no modelo 2-camadas.......................................................71\n\nTab. 4.18 Resultado para cen\u00e1rio 4 no modelo 3-camadas.......................................................71\n\nTab. 4.19 Resultado para cen\u00e1rio 5 no modelo 2-camadas.......................................................72\n\nTab. 4.20 Resultado para cen\u00e1rio 5 no modelo 3-camadas.......................................................72\n\nTab. 4.21 Resultado para cen\u00e1rio 6 no modelo 2-camadas.......................................................73\n\nTab. 4.22 Resultado para cen\u00e1rio 6 no modelo 3-camadas.......................................................73\n\nTab. 4.23 Descri\u00e7\u00e3o do tempo de resposta para cen\u00e1rio 1........................................................74\n\nTab. 4.24 Descri\u00e7\u00e3o do tempo de resposta para cen\u00e1rio 2........................................................76\n\nTab. 4.25 Descri\u00e7\u00e3o do tempo de resposta para cen\u00e1rio 3........................................................77\n\nTab. 4.26 Descri\u00e7\u00e3o do tempo de resposta para cen\u00e1rio 4........................................................78\n\nTab. 4.27 Descri\u00e7\u00e3o do tempo de resposta para cen\u00e1rio 5........................................................79\n\nTab. 4.28 Descri\u00e7\u00e3o do tempo de resposta para cen\u00e1rio 6........................................................80\n\n\n\nii\n\nLista de Figuras\n\nFig. 2.1 Sistema centralizado hier\u00e1rquico.................................................................................10\n\nFig. 2.2 Sistema cliente/servidor...............................................................................................11\n\nFig. 2.3 Sistema cliente/servidor 3-camadas.............................................................................13\n\nFig. 2.4 Sistema cliente/servidor 3-camadas dentro do modelo Web.......................................14\n\nFig. 2.5 Camadas b\u00e1sicas de um AppServer.............................................................................21\n\nFig. 2.6 Camadas b\u00e1sicas mais detalhadas de um AppServe....................................................22\n\nFig. 2.7 A camada persistente...................................................................................................23\n\nFig. 2.8 Objeto rocessando regra..............................................................................................25\n\nFig. 2.9 Conceitos b\u00e1sicos de desempenho...............................................................................32\n\nFig. 2.10 Modelagem de desempenho do ambiente..................................................................34\n\nFig. 3.1 Metodologia de planejamento de capacidade..............................................................38\n\nFig. 3.2 Componentes elementares da caracteriza\u00e7\u00e3o da carga de trabalho.............................39\n\nFig. 3.3 Tr\u00eas estados de uma solicita\u00e7\u00e3o de servi\u00e7o.................................................................43\n\nFig. 3.4 M\u00e9dia das diferen\u00e7as...................................................................................................50\n\nFig. 3.5 Vari\u00e2ncia......................................................................................................................51\n\nFig. 3.6 Desvio padr\u00e3o..............................................................................................................51\n\nFig. 3.7 Intervalo de confian\u00e7a..................................................................................................51\n\nFig. 4.1 O ambiente DETRAN-PA...........................................................................................53\n\nFig. 4.2 Requisi\u00e7\u00f5es ao servidor de banco de dados.................................................................56\n\nFig. 4.3 Caracteriza\u00e7\u00e3o dos componentes b\u00e1sicos....................................................................58\n\nFig. 4.4 Fluxo informa\u00e7\u00e3o modelo 2-camadas..........................................................................60\n\nFig. 4.5 Fluxo informa\u00e7\u00e3o modelo 3-camadas..........................................................................61\n\nFig. 4.6 Fluxo informa\u00e7\u00e3o modelo 2-camadas..........................................................................63\n\nFig. 4.7 Fluxo informa\u00e7\u00e3o modelo 3-camadas..........................................................................64\n\nFig. 4.8 Distribui\u00e7\u00e3o do tempo de resposta para cen\u00e1rio 1.......................................................75\n\nFig. 4.9 Servi\u00e7o x arquitetura para cen\u00e1rio 1............................................................................75\n\nFig. 4.10 Distribui\u00e7\u00e3o do tempo de resposta para cen\u00e1rio 2.....................................................76\n\nFig. 4.11 Servi\u00e7o x arquitetura para cen\u00e1rio 2..........................................................................77\n\nFig. 4.12 Distribui\u00e7\u00e3o do tempo de resposta para cen\u00e1rio 3.....................................................77\n\nFig. 4.13 Servi\u00e7o x arquitetura para cen\u00e1rio 3..........................................................................78\n\nFig. 4.14 Distribui\u00e7\u00e3o do tempo de resposta para cen\u00e1rio 4.....................................................78\n\n\n\niii\n\nFig. 4.15 Servi\u00e7o x arquitetura para cen\u00e1rio 4..........................................................................79\n\nFig. 4.16 Distribui\u00e7\u00e3o do tempo de resposta para cen\u00e1rio 5.....................................................79\n\nFig. 4.17 Servi\u00e7o x arquitetura para cen\u00e1rio 5..........................................................................80\n\nFig. 4.18 Distribui\u00e7\u00e3o do tempo de resposta para cen\u00e1rio 6.....................................................80\n\nFig. 4.19 Servi\u00e7o x arquitetura para cen\u00e1rio 6..........................................................................81\n\n\n\n1\n\nResumo\n\nPor volta de 1980, juntamente com o aparecimento dos PC (computadores pessoais),\n\ntem-se o surgimento do modelo cliente/servidor baseado em 2-camadas: o cliente e o servidor\n\n(representando na maioria das vezes por um servidor de banco de dados). Apesar dos\n\nbenef\u00edcios conseq\u00fcentes deste novo modelo, como o surgimento de diversos ambientes de\n\ndesenvolvimento pertencentes a empresas diferentes, permitindo uma melhor escolha da\n\nferramenta adequada para uma determinada aplica\u00e7\u00e3o, a maneira de desenvolver softwares\n\nexigiu uma significativa mudan\u00e7a, pois passou a considerar elementos antes ignorados no\n\nmodelo legado como: largura de banda das redes, capacidade de processamento das esta\u00e7\u00f5es\n\nclientes, etc. Estas novas vari\u00e1veis provocaram no sistema cliente servidor 2-camadas uma\n\nevolu\u00e7\u00e3o para o modelo baseado em 3-camadas, onde a carga de processamento seria dividida\n\npor um terceiro elemento entre o cliente e o servidor chamado de servidor de aplica\u00e7\u00e3o. Esta\n\nnova camada atenderia as solicita\u00e7\u00f5es dos clientes e as gerenciaria com o lado servidor.\n\nEste trabalho visa atrav\u00e9s das metodologias de Planejamento de Capacidade e\n\nAvalia\u00e7\u00e3o de Desempenho de Sistemas Computacionais, utilizando t\u00e9cnicas de simula\u00e7\u00e3o,\n\natrav\u00e9s do software de simula\u00e7\u00e3o ARENA, comparar o desempenho dos dois modelos citados,\n\n2-camadas e 3-camadas. Para tanto foram desenvolvidos um Modelo de Carga e um Modelo\n\nde Desempenho, tendo como base para constru\u00e7\u00e3o destes dois modelos um levantamento\n\nrealizado com o N\u00facleo de Inform\u00e1tica do Departamento de Tr\u00e2nsito do Estado do Par\u00e1. O\n\nmodelo de carga, e seus componentes b\u00e1sicos, \u00e9 representado por instru\u00e7\u00f5es SQL do tipo\n\nInsert e o modelo de desempenho representa uma parte do ambiente computacional\n\ncorporativo, apenas a LAN foi considerada, do Departamento do Estado do Par\u00e1, utilizando\n\num determinado servidor de banco de dados. Partindo-se destes modelos, ser\u00e3o desenvolvidos\n\npara as arquiteturas citadas dois modelos no simulador, e as vari\u00e1veis de desempenho\n\nenvolvidas, como tempo de resposta, medidas e comparadas para se ter uma medida de\n\ndesempenho.\n\n\n\n2\n\nAbstract\n\nAround 1980, along with the birth of PC (Personal Computers), comes the\n\nclient/server model, which was built based on two tiers: the client and the server (usually\n\nrepresented by a database server). Despite this new model\u2019s benefits, among them the creation\n\nof several development environments by different companies, allowing a better choice of an\n\nadequate tool to certain applications, it demanded a significant change in software\n\ndevelopment, since elements that were ignored in legacy applications should then be\n\nconsidered, such as: network bandwidth, processing capacity in client workstations, among\n\nothers. These new factors originated an evolution from the two-tier model to the three-tier\n\nmodel, where the processing load would be distributed to a third element, which stood\n\nbetween the client and the server: the application server. This new tier would respond to client\n\nrequests and manage those requests along with the server side.\n\nFollowing a methodology called Planning Capacity and Performance Analysis in\n\nComputer Systems and using the simulation software ARENA, this thesis proposes a\n\ncomparison between the performance of two-tier and three-tier models. With that goal in\n\nmind, two models were developed: a Load Model and a Performance Model, which were\n\nbased on information obtained with the Computing Department of State of Par\u00e1\u2019s Transit\n\nAuthority. The Load Model contains basic components, which represent Insert SQL\n\nstatements. The Performance Model represents part of State of Par\u00e1\u2019s Transit Authority\n\ncorporate computing environment (only the LAN was considered), which uses a database\n\nserver. From these two models, two simulation models will be developed. Performance\n\nfactors such as reponse time will be measured and compared so that a performance baseline\n\ncan be established.\n\n\n\n3\n\n1. Introdu\u00e7\u00e3o\n\nO que representou o paradigma cliente/servidor dentro do panorama computacional\n\nmundial? Uma revolu\u00e7\u00e3o? Uma evolu\u00e7\u00e3o? Ambas indicam mudan\u00e7a. A revolu\u00e7\u00e3o indica uma\n\nmudan\u00e7a radical, violenta e inovadora de conceitos e pensamentos,ou seja, uma\n\ntransforma\u00e7\u00e3o mais imediata de um conceito em outro. A evolu\u00e7\u00e3o considera um aspecto\n\ngradual dentro de um determinado tempo, considerando ainda que a pr\u00f3xima gera\u00e7\u00e3o\n\ncontenha tra\u00e7os caracter\u00edsticos da anterior. Da an\u00e1lise de ambas chega-se \u00e0 conclus\u00e3o de que o\n\nparadigma cliente/servidor 2-camadas tratou-se de uma revolu\u00e7\u00e3o dentro do modelo\n\ncomputacional tradicional, modelo legado, \u201devoluindo\u201d mais tarde para o modelo baseado em\n\n3-camadas e N-camadas. Tais mudan\u00e7as ser\u00e3o exploradas ao longo deste trabalho de\n\ndisserta\u00e7\u00e3o.\n\n1.1. Motiva\u00e7\u00e3o\n\nO que significa planejar e desenvolver Sistemas de Informa\u00e7\u00e3o (SI) nos dias atuais?\n\nConsiderando todo o aparato tecnol\u00f3gico representado pelos mais variados dispositivos de\n\nhardware existentes e as mais variadas t\u00e9cnicas de an\u00e1lise para desenvolvimento de projetos\n\ncomputacionais conceituais, \u00e9 f\u00e1cil desenvolver e planejar SI dentro de um ambiente\n\ncorporativo?\n\nO paradigma centralizado ou tradicional, baseado no modelo computacional dos\n\nmainframes e minicomputadores, ignorava elementos hoje fundamentais para o projeto de um\n\nSI: o tipo de informa\u00e7\u00e3o inerente a um determinado ambiente, o desempenho deste SI dentro\n\ndo ambiente, etc, este paradigma considerava como fator mais relevante o custo do ambiente\n\ncomputacional.\n\nPor volta de 1967 o especialista em computa\u00e7\u00e3o Herb Grosch afirmou: o poder\n\ncomputacional de um processador \u00e9 proporcional ao quadrado de seu pre\u00e7o. Tal afirma\u00e7\u00e3o\n\nque ficou conhecida como a Lei de Grosch encaixava-se muito bem para o ambiente dos\n\nmainframes, onde quanto mais caro a m\u00e1quina mais r\u00e1pida ela era. Hoje se pode adquirir um\n\nmicrocomputador que atinja um desempenho mais significativo do que muitos mainframes da\n\nd\u00e9cada de 1980 por um pre\u00e7o bem mais vi\u00e1vel.\n\n\n\n4\n\nNa tentativa de estabelecer uma compara\u00e7\u00e3o entre as mudan\u00e7as no tipo de informa\u00e7\u00e3o\n\ndo ambiente tradicional para um ambiente cliente/servidor, dentro do contexto deste trabalho\n\nde pesquisa, defini-se como informa\u00e7\u00e3o dados do tipo: nome, valores ou instru\u00e7\u00f5es SQL\n\n(Structured Query Language) que trafegam atrav\u00e9s de uma rede de computadores qualquer,\n\nabstraindo dentro do escopo desta pesquisa o tipo de informa\u00e7\u00e3o trocada pelas primitivas de\n\nservi\u00e7o nas camadas de uma determinada pilha de protocolos. Ent\u00e3o, pode-se dizer que a\n\ninforma\u00e7\u00e3o \u201cevoluiu\u201d de um car\u00e1ter est\u00e1tico para um distribu\u00eddo, considerando a Internet e\n\nsuas varia\u00e7\u00f5es intranets, extranets e mais a necessidade comum em distribuir e compartilhar\n\ninforma\u00e7\u00f5es entre LANs, WANs e as mais variadas redes que se interconectam.\n\nLevando-se em considera\u00e7\u00e3o este panorama de informa\u00e7\u00f5es distribu\u00eddas, a forma de\n\nprojetar SIs dentro da arquitetura cliente/servidor envolve uma consider\u00e1vel complexidade,\n\nabrindo um leque para os mais variados estudos iniciais sobre:\n\n\u2022 A informa\u00e7\u00e3o que trafegar\u00e1 em uma LAN, WAN, uma interconex\u00e3o entre LANs ou\n\nentre WANs;\n\n\u2022 Qual o n\u00famero de requisi\u00e7\u00f5es num dado espa\u00e7o de tempo que um servidor precisar\u00e1\n\nsuportar;\n\n\u2022 Que tipo de cliente \u00e9 o mais adequado para um dom\u00ednio de aplica\u00e7\u00e3o qualquer, etc.\n\n\u2022 Que tipo de arquitetura utilizar?\n\nIsto \u00e9, a heterogeneidade (software e hardware) t\u00edpica do ambiente cliente/servidor\n\ndeve ser previamente analisada e caracterizada para se estabelecer um dom\u00ednio de aplica\u00e7\u00e3o.\n\nMas e quando a abordagem 2-camadas, n\u00e3o \u00e9 mais satisfat\u00f3ria? O que fazer?\n\nEnquanto o \u201cMundo Computacional\u201d assimilava as mudan\u00e7as nos conceitos\n\nprovocados pelo paradigma cliente/servidor 2-camadas, novas mudan\u00e7as provocadas pelo\n\nsurgimento da World Wide Web na Internet fizeram com que outras arquiteturas ganhassem\n\ndestaque, a 3-camadas e N-camadas.\n\nEsta nova abordagem adequou-se melhor considerando o aspecto distribu\u00eddo inerente\n\ndo modelo cliente/servidor, pois introduz uma camada intermedi\u00e1ria entre o cliente e o\n\nservidor, aumentando o balanceamento de informa\u00e7\u00f5es trocado por ambos. Esta pesquisa\n\n\n\n5\n\naborda os paradigmas 2-camadas e 3-camadas, com \u00eanfase ao modelo baseado em 3-camadas\n\ncomo solu\u00e7\u00e3o para ambientes com informa\u00e7\u00f5es distribu\u00eddas.\n\nUma motiva\u00e7\u00e3o para o desenvolvimento deste trabalho foi o resultado insatisfat\u00f3rio\n\nobtido na tentativa de substituir o sistema de informa\u00e7\u00e3o do Departamento de Tr\u00e2nsito do\n\nEstado do Par\u00e1 baseado em mainframe, que n\u00e3o supre de forma satisfat\u00f3ria a institui\u00e7\u00e3o com\n\ninforma\u00e7\u00f5es gerenciais e representar um elevado custo para a mesma, para um sistema\n\nbaseado no paradigma cliente/servidor 2-camadas o que acabou conduzindo \u00e0 busca de uma\n\nsolu\u00e7\u00e3o baseada no modelo 3-camadas. Abaixo s\u00e3o descritos alguns dos resultados\n\ninsatisfat\u00f3rios mencionados anteriormente:\n\n\u2022 A alta taxa no tempo de resposta;\n\n\u2022 Complexo processo de atualiza\u00e7\u00e3o do software cliente;\n\n\u2022 E a baixa escalabilidade dentro do ambiente computacional.\n\nO resultado satisfat\u00f3rio no aumento de gerenciamento da manuten\u00e7\u00e3o do software do\n\nM\u00f3dulo Ag\u00eancia (sistema utilizado para consultas de saldos e transfer\u00eancias de contas\n\ncorrentes dos correntistas do Banco do Estado do Par\u00e1), que \u00e9 parte integrante da solu\u00e7\u00e3o\n\nintegrada Multiserv (um acr\u00f4nimo para multi-servi\u00e7os) respons\u00e1vel pelo pagamento dos\n\nfuncion\u00e1rios dos \u00f3rg\u00e3os conveniados ao Banco do Estado, de uma proposta baseada em 2-\n\ncamadas para uma baseada em 3-camadas tamb\u00e9m serviu como incentivo a este trabalho de\n\npesquisa.\n\n1.2. Problema a Ser Abordado\n\nA dificuldade em desenvolver um sistema de informa\u00e7\u00e3o no paradigma\n\ncliente/servidor 2-camadas para ambientes computacionais com informa\u00e7\u00f5es distribu\u00eddas por\n\npontos remotos, devido \u00e0s limita\u00e7\u00f5es do modelo. E o modelo cliente/servidor N-camadas\n\ncomo solu\u00e7\u00e3o para estas dificuldades e limita\u00e7\u00f5es, tendo como foco central o modelo 3-\n\ncamadas, sua integra\u00e7\u00e3o com servidores de bancos de dados e a infraestrutura de rede\n\nnecess\u00e1ria para ambos os modelos.\n\n\n\n6\n\n1.3. Objetivos\n\n1.3.1. Objetivo Geral\n\nDado um ambiente de rede avaliar o desempenho do paradigma cliente/servidor 2-\n\ncamadas e 3-camadas definindo seus dom\u00ednios de aplica\u00e7\u00e3o.\n\n1.3.2. Objetivos Espec\u00edficos\n\n\u2022 Revis\u00e3o da literatura como alicerce para o entendimento do ambiente;\n\n\u2022 Abordar os pontos falhos do modelo cliente/servidor 2-camadas sugerindo\n\numa solu\u00e7\u00e3o;\n\n\u2022 Mostrar o que s\u00e3o servidores de aplica\u00e7\u00e3o, suas vantagens e desvantagens;\n\n\u2022 Construir um modelo de simula\u00e7\u00e3o para cada arquitetura;\n\n\u2022 Criar cen\u00e1rios com os modelos de simula\u00e7\u00e3o, para avalia\u00e7\u00e3o das medidas de\n\ndesempenho;\n\n\u2022 Comparar as duas alternativas de sistemas utilizando intervalo de confian\u00e7a e\n\nos desvios padr\u00e3o obtidos em cada cen\u00e1rio de simula\u00e7\u00e3o;\n\n\u2022 A simula\u00e7\u00e3o como fator comprobat\u00f3rio na avalia\u00e7\u00e3o de desempenho de\n\narquiteturas distintas de sistemas, como por exemplo 2-camadas e 3-camadas.\n\n1.4. Estrutura do Trabalho\n\n\n\n7\n\nO cap\u00edtulo 1 cont\u00e9m os objetivos e a apresenta\u00e7\u00e3o inicial deste trabalho. O cap\u00edtulo 2\n\nintroduz os paradigmas cliente/servidor 2-camadas e 3-camadas, mostrando suas\n\ncaracter\u00edsticas, vantagens, desvantagens e benef\u00edcios, abordando tamb\u00e9m o porqu\u00ea do\n\nsurgimento deste novo paradigma representado pelos servidores de aplica\u00e7\u00e3o. O cap\u00edtulo 3 \u00e9\n\ndedicado \u00e0 metodologia abordada para atingir os objetivos deste trabalho de pesquisa. O\n\ncap\u00edtulo 4 apresenta a aplica\u00e7\u00e3o da metodologia considerando os dois modelos de ambientes\n\nque ser\u00e3o analisados, modelados e simulados no software ARENA, e mais as simula\u00e7\u00f5es e a\n\nan\u00e1lise dos resultados obtidos. O cap\u00edtulo 5 cont\u00e9m as considera\u00e7\u00f5es finais e conclus\u00f5es deste\n\ntrabalho e sugest\u00f5es para trabalhos futuros.\n\n\n\n8\n\n2. Paradigma Cliente/Servidor uma Abordagem 2-Camadas e 3-Camadas\n\n2.1. Hist\u00f3rico da Evolu\u00e7\u00e3o no Ambiente Computacional\n\nO projeto de SI vem ao longo das d\u00e9cadas sofrendo modifica\u00e7\u00f5es, acompanhando as\n\nmudan\u00e7as que ocorrem nos paradigmas da inform\u00e1tica.\n\nDa d\u00e9cada de 1960 at\u00e9 meados da d\u00e9cada de 80, o modelo computacional centralizado\n\n(tradicional) ou legado, baseado em mainframes e minicomputadores dominou o cen\u00e1rio da\n\ncomputa\u00e7\u00e3o mundial. As empresas possu\u00edam um pequeno n\u00famero de computadores e dada a\n\ninexist\u00eancia de um meio eficiente e confi\u00e1vel que os interliga-se, trabalhavam de forma\n\nindependente uns dos outros e desenvolver SI  era algo bastante caro e demorado.\n\nPor volta de 1980 com o nascimento dos computadores  pessoais (PC)  surgiu um\n\nnovo paradigma computacional, o cliente/servidor. Ele introduziu o conceito da divis\u00e3o do\n\nprocessamento computacional entre os dois extremos, o cliente e o servidor, de uma conex\u00e3o.\n\nParecia que este novo modelo substituiria por completo o anterior, que era de elevado custo,\n\ncomplexo e pouco flex\u00edvel.\n\nPor\u00e9m novas mudan\u00e7as acarretam novos problemas. Apesar da ind\u00fastria de software\n\nmostrar um crescente amadurecimento no lado servidor com os Relational Data Bases\n\nManagement Systems (RDBMS) e os Sistemas Operacionais (SO) de Rede, e no lado cliente\n\ncom suporte a v\u00e1rias ferramentas de desenvolvimento como o Microsoft Visual Basic,\n\nBorland Delphi, Borland C++ Builder, o modelo tradicional cliente/servidor baseado em 2-\n\ncamadas mostrava alguns pontos falhos como: O inevit\u00e1vel aumento do n\u00famero de clientes na\n\nrede que implica em um constante upgrade de hardware e software cliente, e apesar destas\n\nconstantes mudan\u00e7as o tempo de resposta dos SI n\u00e3o diminu\u00eda [LINDGREN, 2001].\n\nNos anos 90 surge um novo conceito, o da orienta\u00e7\u00e3o a objetos, que consegue sanar\n\nalguns problemas de desenvolvimento de sistemas dentro do modelo cliente/servidor. A\n\nexplos\u00e3o da Internet para fora  do n\u00edvel acad\u00eamico-profissional atrav\u00e9s da Web, por volta de\n\n1994, provoca uma revolu\u00e7\u00e3o na forma de disseminar e prover informa\u00e7\u00f5es, com o advento\n\nda World Wide Web (WWW) e sua interface colorida e amig\u00e1vel atrav\u00e9s dos browsers. Sem\n\nsombra de d\u00favida, esse crescimento continuar\u00e1 nos pr\u00f3ximos anos, e \u00e9 prov\u00e1vel que ele\n\ninfluencie o desenvolvimento tecnol\u00f3gico e seja determinante para o uso da Internet no\n\npr\u00f3ximo mil\u00eanio [TENENBAUM, 1996].\n\n\n\n9\n\nDentro desta nova abordagem de desenvolvimento de sistemas surgem os servidores\n\nde aplica\u00e7\u00e3o (AppServer). Por serem baseados no modelo orientado a objetos, os AppServer\n\nbeneficiam-se dos pilares b\u00e1sicos deste paradigma: abstra\u00e7\u00e3o, encapsulamento, polimorfismo\n\ne heran\u00e7a, o que possibilita reutiliza\u00e7\u00e3o de c\u00f3digo e facilidade de manuten\u00e7\u00e3o dentro do\n\nambiente computacional. Eles representam a evolu\u00e7\u00e3o da arquitetura cliente/servidor baseado\n\nem 2-camadas.\n\n2.2. Uma Vis\u00e3o Geral dos Sistemas Computacionais\n\nOs sistemas baseados em mainframes e minicomputadores eram compostos pelos\n\nchamados \u201cterminais burros\u201d, pois n\u00e3o realizavam qualquer tipo de processamento, sendo\n\nbaseados em caracteres alfanum\u00e9ricos. Sua interface, representada pela tela verde e preto dos\n\nterminais, com o usu\u00e1rio era muito pouco amig\u00e1vel e desenvolver sistemas neste ambiente era\n\npouco produtivo e muito caro [LINDGREN, 2001], pois os programas eram codificados\n\natrav\u00e9s de fitas ou cart\u00f5es perfurados, os terminais n\u00e3o acessavam simultaneamente um\n\nmainframe e minicomputador, para isso seriam necess\u00e1rios dois terminais, e sua m\u00e3o de obra\n\nespecializada muito cara.\n\nJ\u00e1 o modelo cliente/servidor, representado pelas redes de computadores e\n\ncomputadores pessoais, valendo-se do poder de computa\u00e7\u00e3o representado pelos PC permite o\n\ndesenvolvimento de novos tipos de aplica\u00e7\u00f5es baseadas nos elementos cliente e servidor.\n\nPor\u00e9m a exist\u00eancia neste novo ambiente dos mais variados clientes e servidores e a\n\nsobrecarrega em demasia do lado cliente, tornam as aplica\u00e7\u00f5es pouco manuten\u00edveis\n\nnecessitando de computadores com capacidade computacional cada vez maior e um maior\n\nentendimento sobre as v\u00e1rias camadas de softwares como  os protocolos de comunica\u00e7\u00e3o e as\n\nApplications Programming Interfaces (API) respons\u00e1veis pela comunica\u00e7\u00e3o entre os dois\n\nlados.\n\nEnt\u00e3o uma camada intermedi\u00e1ria \u00e9 introduzida entre o cliente e o servidor  na tentativa\n\nde amenizar os problemas encontrados com o tradicional modelo cliente/servidor em 2-\n\ncamadas, ganhando popularidade com o surgimento e crescimento da Web.\n\n2.3. O Paradigma Centralizado (Tradicional) ou Legado\n\n\n\n10\n\nCaros, com seus programas e dados manipulados apenas por uma seleta equipe de\n\nprofissionais e indicados para ambientes de miss\u00e3o cr\u00edtica os \u201cGrandes Dinossauros\u201d da era\n\ncomputacional moderna encontraram seu decl\u00ednio por volta da d\u00e9cada de 1980. Essas grandes\n\nm\u00e1quinas tiveram e t\u00eam at\u00e9 hoje seu maior representante a figura da International Business\n\nMachines Corporation (IBM). Na metade dos anos 80 a maioria das grandes e m\u00e9dias\n\nempresas americanas, como General Motors e AT&amp;T, possu\u00edam mainframes IBM ou IBM\n\ncompat\u00edveis.\n\nPor\u00e9m os altos custos destas m\u00e1quinas levaram a ind\u00fastria de hardware, a buscar\n\nnovas alternativas, nascem ent\u00e3o os minicomputadores como uma alternativa mais barata e\n\num aceit\u00e1vel poder de processamento. O sistema VAX da Digital Equipment Corporation\n\n(DEC) foi seu maior representante [LINDGREN, 2001]. Com o enfraquecimento do mercado\n\nde minicomputadores a IBM introduz sua fam\u00edlia de produtos AS/400, conseguindo\n\ncomercializar por volta de 450.000 unidades. Hoje uma modificada linha de produtos AS/400\n\nainda s\u00e3o comercializados como servidores Web pela IBM.\n\nAs caracter\u00edsticas inerentes \u00e0 abordagem do processo computacional centralizado\n\nconduzem ao seu decl\u00ednio: ambientes e SO propriet\u00e1rios, controle centralizado, recursos n\u00e3o\n\nreutiliz\u00e1veis, arquitetura hier\u00e1rquica e est\u00e1tica e a interface pouco amig\u00e1vel com o usu\u00e1rio. A\n\nfigura 2.1 mostra uma visualiza\u00e7\u00e3o de um ambiente centralizado.\n\nFig. 2.1 Sistema centralizado hier\u00e1rquico\n\nInstitui\u00e7\u00f5es governamentais, educacionais e comerciais t\u00eam constantemente realizado\n\nmudan\u00e7as no sentido de substituir seus sistemas tradicionais pelos baseados na arquitetura\n\n\n\n11\n\ncliente/servidor. Nos dias atuais os \u201cGrandes Dinossauros\u201d mais \u201cadaptados\u201d do que seus\n\n\u201cirm\u00e3os mais velhos\u201d das d\u00e9cadas de 60 e 70, trazem agora pilhas de protocolos encapsulados\n\nbaseados em padr\u00f5es abertos como o TCP/IP. Entretanto apesar dos mainframes atuais\n\napresentarem uma maior facilidade para a integra\u00e7\u00e3o com redes e SI atuais, o custo para sua\n\nmanuten\u00e7\u00e3o e operabilidade ainda \u00e9 bastante consider\u00e1vel.\n\n2.4. O Paradigma Cliente/Servidor\n\nO avan\u00e7o das tecnologias de rede juntamente com a prolifera\u00e7\u00e3o e evolu\u00e7\u00e3o dos PC\n\nprovocam uma evolu\u00e7\u00e3o nos conceitos do processamento computacional, o surgimento do\n\nparadigma cliente/servidor. Depois que entendemos, podemos perceber o quanto essa nova\n\nabordagem de computa\u00e7\u00e3o \u00e9 importante [BOCHENSKI, 1994].\n\nA denomina\u00e7\u00e3o \u201ccliente/servidor\u201d define muita bem a ess\u00eancia desta nova abordagem\n\nde processamento computacional. Ela baseia-se em duas camadas uma cliente, computadores\n\npessoais e workstations, que solicitam dados e servi\u00e7os a uma outra camada, a servidora.\n\nGeralmente cliente e servidor encontram-se em plataformas diferentes, por\u00e9m estas duas\n\ncamadas podem fazer parte de uma mesma m\u00e1quina com elas comunicando-se atrav\u00e9s de\n\ninterprocessos. O lado cliente cont\u00e9m a interface l\u00f3gica com o usu\u00e1rio, navega\u00e7\u00e3o e\n\napresenta\u00e7\u00e3o do SI, o lado servidor \u00e9 respons\u00e1vel pela base de dados e sua l\u00f3gica de\n\nmanipula\u00e7\u00e3o. Eles comunicam-se atrav\u00e9s de protocolos de rede (TCP/IP, IPX/SPX, etc) e\n\natrav\u00e9s de uma API. A figura 2.2 mostra um ambiente cliente/servidor.\n\nFig. 2.2 Sistema cliente/servidor\n\nO paradigma cliente/servidor \u00e9 envolto em um paradoxo, pois apesar de ser\n\nconceitualmente simples de entender, o desenvolvimento de SI utilizando seus conceitos \u00e9\n\n\n\n12\n\nalgo complexo, pois seus elementos s\u00e3o de uma maior complexidade que as do modelo\n\nbaseado na computa\u00e7\u00e3o centralizada: a ambienta\u00e7\u00e3o do usu\u00e1rio, defini\u00e7\u00e3o de quais tarefas\n\nser\u00e3o realizadas por eles e quais ser\u00e3o realizadas pelo SI, definir quais as linguagens de\n\nprograma\u00e7\u00e3o utilizar, a exist\u00eancia de API de diferentes fornecedores, SO e gerenciadores de\n\nbancos de dados mais adequados para esse novo ambiente, a quantidade e o tipo de dados que\n\nir\u00e3o trafegar na rede, a seguran\u00e7a destes dados e clientes interagindo com os mais diversos\n\nsistemas nas mais diversas plataformas. A disponibilidade dos servi\u00e7os \u00e9 outro fator a\n\nconsiderar, antes localizados e distribu\u00eddos em v\u00e1rias camadas dentro de um \u00fanico sistema\n\ncomputacional (sistema legado), onde suas v\u00e1rias camadas de software relativamente\n\nindependente entre si comunicavam-se via SNA. Agora no modelo ciente/servidor essas\n\ncamadas comunicam-se, entre si, atrav\u00e9s de m\u00e1quinas diferentes utilizando protocolos de\n\ncomunica\u00e7\u00e3o.\n\nO lado cliente \u00e9 um elemento complexo e delicado, pois geralmente \u00e9 a partir dele que\n\nser\u00e1 moldado todo o ambiente de processamento computacional, e apesar da aparente\n\ncomplexidade em desenvolver SI, quest\u00f5es econ\u00f4micas envolvendo o ambiente legado e a\n\npouca diversidade de ferramentas para desenvolver sistemas, faz com que a arquitetura\n\ncliente/servidor ganhe for\u00e7a e torne-se uma realidade. Certamente n\u00e3o veremos todos os\n\nsistemas antigos serem substitu\u00eddos por novos sistemas cliente/servidor ou sistemas\n\ndistribu\u00eddos. V\u00e1rias empresas ter\u00e3o de combinar o novo e o velho durante muitos anos, mas\n\nhaver\u00e1 uma mudan\u00e7a imediata na forma de como os sistemas ser\u00e3o desenvolvidos e\n\nempregados [BOCHENSKI, 1994].\n\n2.5. Paradigma Cliente/Servidor 3-Camadas e N-Camadas\n\nInicialmente, visando a solu\u00e7\u00e3o de uma determinada classe de aplica\u00e7\u00f5es dentro de\n\num ambiente corporativo, esta nova abordagem ganha proje\u00e7\u00e3o acompanhando a evolu\u00e7\u00e3o de\n\noutros modelos da computa\u00e7\u00e3o: Internet, intranets, orienta\u00e7\u00e3o a objetos e objetos distribu\u00eddos.\n\nE agora com o Mundo inteiro conectado \u00e0 rede das redes, pelos mais variados dispositivos, SI\n\ne topologias de redes, o modelo cliente/servidor baseado em 2-camadas n\u00e3o \u00e9 mais adequado,\n\ncedendo lugar para um novo baseado em 3-camadas e N-camadas, permitindo que as mais\n\nvariadas organiza\u00e7\u00f5es integrem seus sistemas baseados no modelo legado com o modelo\n\ncliente/servidor e baseados na Web de forma mais segura e consistente. O AppServer introduz\n\n\n\n13\n\na id\u00e9ia de uma camada intermedi\u00e1ria entre os elementos cliente e servidor. A primeira\n\ncamada, camada cliente, que antes agregava a Interface Gr\u00e1fica de Usu\u00e1rio (GUI) e toda a\n\nl\u00f3gica do neg\u00f3cio, agora contem somente a GUI introduzindo o modelo thin client (cliente\n\nmagro). A segunda camada, AppServer, \u00e9 respons\u00e1vel pelo controle da l\u00f3gica do neg\u00f3cio. A\n\nterceira, representada pelo servidor de banco de dados, comporta a base de dados e sua l\u00f3gica\n\nde manipula\u00e7\u00e3o, mais as aplica\u00e7\u00f5es do modelo legado, se for o caso. Como conseq\u00fc\u00eancia do\n\n\u201ccliente magro\u201d, o lado servidor passa a ter uma caracter\u00edstica fat server (servidor gordo) uma\n\nvez que o ambiente 3-camadas move a l\u00f3gica dos neg\u00f3cios para uma camada servidora de\n\naplica\u00e7\u00e3o. Por\u00e9m as vari\u00e1veis do ambiente cliente/servidor 2-camadas ainda devem ser\n\nlevadas em conta porque ele oferece uma maior facilidade para desenvolvimento entre v\u00e1rias\n\nplataformas e uma maior integra\u00e7\u00e3o para acompanhar o crescimento de um ambiente\n\ncomputacional. As figuras 2.3 e 2.4 mostram dois ambientes baseados em um AppServer.\n\n Fig. 2.3 Sistema cliente/servidor 3-camadas\n\n\n\n14\n\nFig. 2.4 Sistema cliente/servidor 3-camadas dentro do modelo Web\n\n2.6. Introdu\u00e7\u00e3o ao Paradigma Cliente/Servidor 2-Camadas\n\nDa resultante entre microcomputadores mais poderosos e os avan\u00e7os nas\n\ncomunica\u00e7\u00f5es das redes de computadores por volta de 1980, emerge o paradigma\n\ncliente/servidor. Esse novo modelo traz a computa\u00e7\u00e3o para mais pr\u00f3xima do usu\u00e1rio na\n\nmedida que integra os recursos dos computadores pessoais \u00e0s GUI e recursos das aplica\u00e7\u00f5es\n\nmultim\u00eddia, garantindo uma maior integra\u00e7\u00e3o ao ambiente corporativo.\n\n\n\n15\n\nO termo cliente/servidor significa que existe uma divis\u00e3o, ou um compartilhamento,\n\nde processos entre estas duas camadas. Ou seja, um processo cliente  faz solicita\u00e7\u00f5es a um\n\nprocesso servidor o qual atende a essas solicita\u00e7\u00f5es. Exemplos destes processos podem ser:\n\nacesso a registros de um banco de dados, solicita\u00e7\u00e3o para valida\u00e7\u00e3o do acesso de um usu\u00e1rio\n\naos recursos de uma rede, solicita\u00e7\u00e3o de execu\u00e7\u00e3o de uma store procedure, as solicita\u00e7\u00f5es de\n\num cliente browser, os softwares clientes de correio eletr\u00f4nico, etc.\n\nDe [BOCHENSKI, 1994] define-se cinco caracter\u00edsticas principais para o modelo\n\ncliente/servidor:\n\n\u2022 A exist\u00eancia de um processo cliente e outro servidor, que podem ser distinguidos,\n\nmas que cooperam entre si;\n\n\u2022 Os elementos clientes e servidor normalmente operam em plataformas diferentes,\n\nmas isso n\u00e3o \u00e9 uma regra;\n\n\u2022 Os lados cliente e servidor podem ser atualizados independentes um do outro;\n\n\u2022 Os servidores podem atender a m\u00faltiplos clientes e os clientes acessar m\u00faltiplos\n\nservidores;\n\n\u2022 As aplica\u00e7\u00f5es cliente/servidor possuem alguma capacidade de operar em rede.\n\nComplementa-se o item tr\u00eas ressaltando que uma mudan\u00e7a de banco de dados, lado\n\nservidor, implicaria em uma mudan\u00e7a de API, requerendo assim atualiza\u00e7\u00e3o dos clientes.\n\n2.6.1. Elementos do Paradigma Cliente/Servidor\n\nExistem basicamente tr\u00eas elementos na composi\u00e7\u00e3o do modelo cliente/servidor: o\n\ncliente, o servidor e uma infraestrutura de rede que oferece suporte \u00e0 comunica\u00e7\u00e3o entre\n\nambos.\n\n\n\n16\n\n2.6.1.1. O Cliente\n\nO cliente ou front end representa a camada n\u00famero um no modelo cliente/servidor.\n\nEle pode variar desde aplicativos simples para consultas em um banco de dados \u00e0 ambientes\n\nsofisticados para desenvolvimento de sistemas de aplica\u00e7\u00e3o clientes baseados em uma GUI,\n\npodendo ser tamb\u00e9m um processo automatizado. No entanto \u00e9 importante salientar que um\n\ncliente n\u00e3o precisa ter necessariamente uma interface baseada em uma GUI ele pode ter uma\n\ninterface baseada no SO DOS por exemplo, um dos maiores representantes deste lado cliente,\n\ndesde o inicio dos computadores, foram as planilhas eletr\u00f4nicas. O Query Analyser do\n\nMicrosoft SQL Server e o Oracle WorkSheet da Oracle podem ser consideradas ferramentas\n\nsimples de consultas a banco de dados, o Microsoft Visual Basic e o Borland Delphi s\u00e3o\n\nambientes mais sofisticados para desenvolvimento de aplica\u00e7\u00f5es clientes, e o ISQL do\n\nMicrosoft SQL Server e o cliente ftp do Windows 98, aplica\u00e7\u00f5es clientes baseadas em DOS.\n\nAs GUI representaram papel fundamental para o avan\u00e7o do conceito cliente/servidor,\n\numa vez que suas interfaces mais amig\u00e1veis aumentaram o entendimento do usu\u00e1rio em\n\nrela\u00e7\u00e3o aos SI e na medida que facilitaram o desenvolvimento de novas aplica\u00e7\u00f5es clientes\n\naumentando a produtividade do ambiente computacional corporativo.\n\nDe maneira geral alguns fatores devem ser considerados quando se escolhem\n\nsoftwares para desenvolvimento de SI clientes:\n\n\u2022 Suporte aos SO padr\u00f5es de mercado;\n\n\u2022 Suporte para o padr\u00e3o SQL (Strutured Query Language);\n\n\u2022 Suporte aos mais variados sistemas gerenciadores de bancos de dados e SO de\n\nrede;\n\n\u2022 Possuir padr\u00e3o de desenvolvimento baseado no paradigma de objetos;\n\n\u2022 Permitir uma interface com o modelo Web;\n\n\u2022 Suporte a GUI;\n\n\u2022 Possuir softwares que permitam a depura\u00e7\u00e3o da aplica\u00e7\u00e3o cliente.\n\n\n\n17\n\nDe um modo geral o cliente deve:\n\n\u2022 Rodar em um computador pessoal e possui uma GUI para captura e visualiza\u00e7\u00e3o\n\nde dados ao usu\u00e1rio;\n\n\u2022 Realizar solicita\u00e7\u00f5es a um ou mais processos servidores localizados em m\u00e1quinas\n\nremotas;\n\n\u2022 Executar um determinado protocolo de rede e API.\n\n2.6.1.2. O Servidor\n\nO servidor ou back end representa a camada n\u00famero dois no modelo cliente/servidor.\n\nEle \u00e9 o conjunto hardware/software que oferece um conjunto de servi\u00e7os necess\u00e1rios aos mais\n\nvariados tipos de solicita\u00e7\u00f5es realizados pelo cliente.\n\nExistem v\u00e1rios tipos de servidores: servidores de arquivos, servidores de impress\u00e3o,\n\nservidores de banco de dados, servidores de groupware, servidores de objetos, servidores Web\n\ne os AppServer, que ser\u00e3o o objeto de estudo deste trabalho de disserta\u00e7\u00e3o, ser\u00e3o explorados\n\nmais adiante. Independente do tipo, um servidor precisa possuir as seguintes caracter\u00edsticas:\n\n\u2022 Esta\u00e7\u00f5es de trabalho mais poderosas, com mais mem\u00f3ria, disco r\u00edgido com\n\ntoler\u00e2ncia \u00e0 falhas, barramento interno mais veloz. Possuem SO de rede como o\n\nRed Hat Linux (vers\u00e3o servidor) ou Windows 2000 Server. Estas esta\u00e7\u00f5es possuem\n\nsoftware e hardware especializado para prover as variadas solicita\u00e7\u00f5es das\n\nentidades clientes;\n\n\u2022 N\u00e3o inicia a troca de mensagens com um cliente, tratando-se de um elemento\n\npassivo que atende as v\u00e1rias solicita\u00e7\u00f5es dos clientes.\n\n\n\n18\n\n2.6.1.3. A Rede\n\nDe curiosidade acad\u00eamica no in\u00edcio da d\u00e9cada de 1980 a um elemento vital aos meios\n\ncorporativos, governamentais e acad\u00eamicos, as redes de computadores de alta velocidade\n\nforam sem d\u00favida uma das maiores conquistas para o mundo computacional moderno,\n\npossibilitando o surgimento de novas arquiteturas como a cliente/servidor.\n\nA ARPANET (Advanced Research Projects Agency), hoje DARPA, do Departamento\n\nde Defesa dos EUA foi a motiva\u00e7\u00e3o inicial que deu origem ao que hoje se chama Redes de\n\nComputadores. O objetivo inicial de desenvolver a ARPANET foi da necessidade de\n\ncompartilhamento de recursos dos sistemas de tempo compartilhado da d\u00e9cada de 1960.\n\nEntretanto nos primeiros anos da d\u00e9cada de 1980 a ARPANET foi dividida em duas redes, a\n\nMILNET com objetivos militares e uma vers\u00e3o da antiga ARPANET, dando origem ao que\n\nnos dias atuais se conhece como Internet. Hoje a chamada rede das redes, \u00e9 composta pelos\n\nmais variados softwares e hardwares de rede rodando sobre uma pilha de protocolos TCP/IP.\n\n2.6.2. Benef\u00edcios, Vantagens e Desvantagens do Paradigma\nCliente/Servidor 2-Camadas\n\nO paradigma cliente/servidor provocou uma mudan\u00e7a radical nos conceitos relativos\n\nna forma de manipular e distribuir informa\u00e7\u00f5es em um ambiente computacional, na medida\n\nque provocou modifica\u00e7\u00f5es na forma de desenvolvimento de sistemas de aplica\u00e7\u00e3o e permitiu\n\nque o ambiente corporativo se valesse de decis\u00f5es estrat\u00e9gicas mais \u00e1geis e r\u00e1pidas, al\u00e9m de\n\nfomentar a busca de novas pesquisas tecnol\u00f3gicas de hardware e software que melhor\n\ntirassem benef\u00edcios deste novo modelo pelos centros de pesquisas acad\u00eamicas e pela industria\n\nde inform\u00e1tica.\n\nOutros benef\u00edcios tamb\u00e9m podem ser observados:\n\n\u2022 O surgimento de solu\u00e7\u00f5es baseadas em sistemas abertos como o modelo de\n\nrefer\u00eancia OSI (Open System Interconnection), o padr\u00e3o ODBC (Open Data Base\n\nConnection), que permite o acesso \u00e0s mais variadas fontes de dados;\n\n\n\n19\n\n\u2022 O surgimento e o crescimento de novas companhias como a Microsoft, Novell,\n\nOracle, Sun, Sybase, Informix, etc. Aumentando assim a concorr\u00eancia e a\n\ndiversidade de solu\u00e7\u00f5es baseadas em software/hardware;\n\n\u2022 O surgimento de novos paradigmas como a orienta\u00e7\u00e3o a objetos e os sistemas\n\ndistribu\u00eddos.\n\nAlgumas vantagens de adotar o modelo cliente/servidor s\u00e3o mostradas abaixo:\n\n\u2022 Ambiente mais produtivo para o desenvolvedor e para o usu\u00e1rio final baseado em\n\numa GUI;\n\n\u2022 Custo mais baixo de software/hardware do que no ambiente legado;\n\n\u2022 Curva de aprendizado mais suave para o usu\u00e1rio final que levava at\u00e9 meses de\n\ntreino para ser considerado proficiente em um SI legado;\n\n\u2022 Maior disponibilidade dos dados corporativos;\n\n\u2022 Possibilidade de cria\u00e7\u00e3o de grupos cooperativos de trabalhos;\n\n\u2022 Modularidade do ambiente computacional.\n\nPor\u00e9m, apesar das vantagens listadas acima, este novo paradigma possui algumas\n\ndesvantagens:\n\n\u2022 A l\u00f3gica do neg\u00f3cio toda inerente ao cliente e sua repeti\u00e7\u00e3o por todos os\n\nclientes da rede, gerando uma complexa atualiza\u00e7\u00e3o destes clientes, em fun\u00e7\u00e3o\n\nda necessidade de um grande gerenciamento do software espalhado pela rede;\n\n\u2022 Pouca flexibilidade do ambiente de hardware devido ao processo de\n\natualiza\u00e7\u00e3o;\n\n\n\n20\n\n\u2022 Seguran\u00e7a dos dados ao n\u00edvel do cliente. O que permite que usu\u00e1rios mal\n\nintencionados manipulem as informa\u00e7\u00f5es do banco de dados;\n\n\u2022 Baixo encapsulamento de dados, uma vez que o cliente manipula dados do\n\nbanco de dados;\n\n\u2022 Baixo reuso da aplica\u00e7\u00e3o devido \u00e0 l\u00f3gica de controle do neg\u00f3cio estar\n\ncentralizada no cliente;\n\n\u2022 O desempenho do sistema pode ser comprometido. Instru\u00e7\u00f5es SQL enviadas\n\natrav\u00e9s da rede com dados sendo baixados no cliente para an\u00e1lise, aumentando\n\no tempo de resposta;\n\n\u2022 Nenhuma integra\u00e7\u00e3o com sistemas baseados no modelo legado;\n\n\u2022 Pouca integra\u00e7\u00e3o com o modelo Web;\n\nSe por um lado as GUI foram uma grande vantagem trazida pelo modelo\n\ncliente/servidor, por outro, a possibilidade de diversific\u00e1-la e manipular a l\u00f3gica de suas\n\naplica\u00e7\u00f5es sobrecarregaram o lado cliente a l\u00f3gica de neg\u00f3cio, levando \u00e0 evolu\u00e7\u00e3o para o\n\nmodelo mais flex\u00edvel baseado em 3-camadas e N-camadas.\n\n2.6.3. Porque o Paradigma Cliente/Servidor 3-Camadas\n\nConsiderando as desvantagens citadas sobre o ambiente cliente/servidor tradicional, o\n\nparadigma 3-camadas adv\u00e9m como uma alternativa no desenvolvimento de SI mais\n\nadequados ao ambiente distribu\u00eddo. Nos dois t\u00f3picos a seguir ser\u00e1 mostrada a arquitetura\n\ncliente/servidor 3-camadas, bem como seus benef\u00edcios, vantagens e desvantagens.\n\n\n\n21\n\n2.6.3.1. Sua Arquitetura\n\nO modelo 3-camadas \u00e9 representado por aplica\u00e7\u00f5es, baseadas em componentes de\n\nsoftware, denominados Servidores de Aplica\u00e7\u00f5es. Esses componentes de software cont\u00eam\n\ncamadas intermedi\u00e1rias respons\u00e1veis pela comunica\u00e7\u00e3o cliente/servidor, tendo uma interface\n\nde usu\u00e1rio solicitando servi\u00e7os de um AppServer, e esses servi\u00e7os armazenando e devolvendo\n\ndados de um banco de dados ou de outro AppServer. A seguir mostraremos sua estrutura e\n\nalgumas de suas caracter\u00edsticas. A figura 2.5 mostra a representa\u00e7\u00e3o das camadas de um\n\nAppServer e a figura 2.6 mostra um maior detalhamento desta representa\u00e7\u00e3o.\n\nFig. 2.5 Camadas b\u00e1sicas de um AppServer\n\n\n\n22\n\nFig. 2.6 Camadas b\u00e1sicas mais detalhadas de um AppServer\n\nConsiderando as figuras acima, considera-se que um AppServer \u00e9 basicamente\n\ndividido em tr\u00eas partes l\u00f3gicas:\n\n\u2022 Camada de Servi\u00e7os da Interface Cliente: Ela \u00e9 composta pelos programas de\n\ninterface com os usu\u00e1rios que cont\u00e9m os servi\u00e7os de middleware do lado cliente,\n\nisto \u00e9, dependente da aplica\u00e7\u00e3o cliente. Estes servi\u00e7os podem ser: chamada de\n\nprocedimentos remotos (RPC), ou servi\u00e7os como a solicita\u00e7\u00e3o de dados de um\n\ncondutor como nome, endere\u00e7o, etc;\n\n\u2022 Camada Objetos Regras de Neg\u00f3cio: Esta camada encapsula os processos, as\n\nregras do neg\u00f3cio e as intera\u00e7\u00f5es entre o cliente e o AppServer. Por esse motivo\n\nseus modelos de objetos precisam ser independentes de linguagem de\n\nprograma\u00e7\u00e3o e generalizados, possibilitando assim sua intera\u00e7\u00e3o com as mais\n\nvariadas aplica\u00e7\u00f5es. Os elementos representativos de software desta camada\n\npodem ser: Broadcast, controle de filas e gerenciamento das inst\u00e2ncias de conex\u00e3o\n\ndos clientes, os objetos do neg\u00f3cio baseados em sua regra, etc;\n\n\u2022 Camada Persistente: Esta camada serve de interface entre um banco de dados e\n\naplica\u00e7\u00f5es das outras camadas do AppServer, e tamb\u00e9m com sistemas\n\n\n\n23\n\nbaseados em ambientes mainframe. Ela mapeia as solicita\u00e7\u00f5es da camada da\n\ninterface cliente, instanciando os objetos de neg\u00f3cio pertencente \u00e0 segunda\n\ncamada da seguinte forma:\n\n\u00d8 Camada da interface cliente necessita de um objeto de neg\u00f3cio. Ela ent\u00e3o envia\n\numa solicita\u00e7\u00e3o \u00e0 camada persistente;\n\n\u00d8 A camada persistente ent\u00e3o localiza e instancia este objeto caso ele esteja na\n\nmem\u00f3ria. Caso contr\u00e1rio ela localiza-o, inst\u00e2ncia-o, carrega os dados no objeto\n\ninstanciado, retornando a refer\u00eancia para a camada da interface cliente ;\n\n\u00d8 O objeto de neg\u00f3cio n\u00e3o sendo mais necess\u00e1rio, a camada persistente desfaz a\n\nrefer\u00eancia ao objeto.\n\nA figura 2.7 ilustra as etapas citadas acima.\n\nFig. 2.7 A camada persistente\n\n2.6.3.2. Vantagens e Desvantagens\n\nAppServer s\u00e3o complexas pe\u00e7as de software n\u00e3o adequadas a todo tipo de aplica\u00e7\u00e3o.\n\nSI que manipulam um grande volume de informa\u00e7\u00f5es distribu\u00eddas em uma LAN, uma WAN\n\n\n\n24\n\nou interconex\u00e3o de ambas s\u00e3o candidatos a utilizar o modelo dos AppServer. Este t\u00f3pico\n\naborda algumas vantagens e desvantagens da utiliza\u00e7\u00e3o desta tecnologia.\n\nAlgumas vantagens relacionadas ao paradigma cliente/servidor multicamadas:\n\n\u2022 Escalabilidade: O crescimento de um ambiente computacional cliente/servidor\n\nnormalmente exige uma constante atualiza\u00e7\u00e3o de seus elementos clientes e\n\nservidores, com a mudan\u00e7a para servidores com um maior poder computacional\n\nsendo sempre necess\u00e1ria. Os AppServer acrescentam a este ambiente uma maior\n\nescalabilidade na medida que sua arquitetura permite a distribui\u00e7\u00e3o do\n\nbalanceamento de carga entre v\u00e1rios servidores;\n\n\u2022 Processamento Distribu\u00eddo: Processos cooperativos entre AppServer distribu\u00eddos\n\nem uma rede de computadores podem ser utilizados para conclus\u00e3o de tarefas\n\nespec\u00edficas. Se entradas de compra s\u00e3o conclu\u00eddas na cidade A, e o estoque e\n\nprodu\u00e7\u00e3o conclu\u00eddos na cidade B, ent\u00e3o usu\u00e1rios localizados na cidade C podem\n\natrav\u00e9s da interconex\u00e3o dos elementos servidores localizados nestas cidades\n\nrealizar consultas nas compras, estoques e produ\u00e7\u00e3o sem a necessidade dos dados\n\nestarem totalmente armazenados no banco de dados da terceira cidade;\n\n\u2022 Objetos Reutiliz\u00e1veis: Baseados na orienta\u00e7\u00e3o a objetos e objetos distribu\u00eddos, e\n\nsendo um container de servi\u00e7os representados pelas regras de neg\u00f3cios, este\n\nparadigma permite a reutiliza\u00e7\u00e3o dos objetos de neg\u00f3cio na medida que garante\n\nsua utiliza\u00e7\u00e3o em v\u00e1rias aplica\u00e7\u00f5es.\n\n\u2022 Objetos Processando as Regras do Neg\u00f3cio: O ambiente cliente/servidor\n\ntradicional sobrecarrega o lado cliente com as regras do neg\u00f3cio, fazendo com que\n\na camada de servi\u00e7os da interface cliente manipulem diretamente dados do banco\n\nde dados. As store procedures possibilitam que uma determinada carga de\n\nprocessamento passe para o lado servidor, por\u00e9m elas s\u00e3o limitadas quando\n\ncomparadas aos ambientes de desenvolvimento sofisticados, baseadas em objetos,\n\noferecidos pelas ferramentas utilizadas para a constru\u00e7\u00e3o destes componentes de\n\nsoftwares. Nos ambientes multicamadas as mesmas regras s\u00e3o modeladas e\n\nencapsuladas aos objetos permitindo uma melhor integra\u00e7\u00e3o para um ambiente\n\n\n\n25\n\ncomputacional. A figura 2.8 mostra os passos l\u00f3gicos desde a invoca\u00e7\u00e3o de um\n\nservi\u00e7o chamado \u201cCONSULTA ESTOQUE\u201d at\u00e9 a sua execu\u00e7\u00e3o atrav\u00e9s do objeto\n\n\u201cCONSULTA ESTOQUE\u201d;\n\nFig. 2.8 Objeto processando regra\n\n\u2022 Integra\u00e7\u00e3o Entre Plataformas: Uma sofisticada IDL (Interface Definition\n\nLanguage) pode prover integra\u00e7\u00e3o com v\u00e1rias linguagens de programa\u00e7\u00e3o. Uma\n\nvez que os objetos ser\u00e3o definidos e modelados utilizando regras, esta IDL pode\n\ngerar c\u00f3digos que podem ser compilados em diferentes linguagens.\n\nAlgumas desvantagens relacionadas ao paradigma cliente/servidor multicamadas:\n\n\u2022 Investimento em Longo Prazo: Devido sua complexa arquitetura e o elevado n\u00edvel\n\nde abstra\u00e7\u00e3o necess\u00e1rio para a concep\u00e7\u00e3o de seus objetos, ele necessita de uma\n\nconsider\u00e1vel curva de investimentos e aprendizado at\u00e9 a sua completa adequa\u00e7\u00e3o\n\ndentro do ambiente computacional;\n\n\u2022 Escolha da Plataforma: Existem basicamente tr\u00eas padr\u00f5es que servem como\n\nmodelo para o desenvolvimento destes componentes de software: A tecnologia de\n\nobjeto COM (Component Object Model) da Microsoft Corporation centrada na\n\nplataforma windows, a EJB (Enterprise Java Beans) que \u00e9 uma extens\u00e3o do\n\nmodelo JavaBeans, modelo padr\u00e3o de componentes para Java no desenvolvimento\n\ndo lado servidor. E o padr\u00e3o de objetos baseados em CORBA (Common Object\n\nRequest Broker Architecture). Alguns destes padr\u00f5es para objetos distribu\u00eddos\n\napesar de j\u00e1 possu\u00edrem uma consider\u00e1vel maturidade, como o modelo de objetos\n\n\n\n26\n\nbaseados em Java, possui uma certa escassez de m\u00e3o de obra especializada. Por\n\noutro lado outros s\u00e3o relegados a uma plataforma espec\u00edfica como \u00e9 o caso do\n\nmodelo de objetos baseados no padr\u00e3o COM da Microsoft, [LINDGREN, 2001]\n\ncita o modelo CORBA como o representante mais maduro e completo dos\n\nmodelos de objetos citados;\n\n\u2022 Objetos Reutiliz\u00e1veis: A preconiza\u00e7\u00e3o da reutiliza\u00e7\u00e3o de objetos, sob um certo\n\naspecto, atua como um fator de demasiada relev\u00e2ncia para tempo de\n\ndesenvolvimento de um servidor de aplica\u00e7\u00e3o. Porque se por um lado devem ser\n\ndevidamente especializados para realizar os servi\u00e7os aos quais s\u00e3o destinados,\n\nnecessitam ser suficientemente abstrato para permitir seu reuso e acompanhar o\n\ncrescimento dos mais variados processos distribu\u00eddos em um ambiente\n\ncomputacional.\n\nO paradigma cliente/servidor 3-camadas e N-camadas acrescentam um novo enfoque\n\nao modelo cliente/servidor tradicional, na medida em que sua arquitetura tenta representar\n\natrav\u00e9s da maior abstra\u00e7\u00e3o poss\u00edvel um ambiente de neg\u00f3cio na forma de elementos de\n\nsoftware representados pelos AppServer, resultando em uma maior disciplina, coordena\u00e7\u00e3o e\n\npadroniza\u00e7\u00e3o no desenvolvimento de softwares.\n\n2.6.4. Compara\u00e7\u00e3o Entre os Paradigmas Cliente/Servidor 2-Camadas e 3-\nCamadas\n\nAs duas abordagens no desenvolvimento de SI usando os conceitos de 2-camadas e 3-\n\ncamadas s\u00e3o diferentes, de um modo geral a tabela 2.1 abaixo mostra resumidamente uma\n\ncompara\u00e7\u00e3o entre os dois modelos.\n\n\n\n27\n\nModelo C/S 2-Camadas Modelo C/S 3-Camadas\n\nAdministra\u00e7\u00e3o do Sistema\nMais complexo devido a\n\nl\u00f3gica do neg\u00f3cio centrada\nno cliente.\n\nMais simples devido a\nl\u00f3gica do neg\u00f3cio centrada\n\nno servidor.\n\nSeguran\u00e7a\nPequena devido a camada\ncliente manipular dados\n\nMelhor pelos dados serem\nmanipulados pelo\n\nAppServer\n\nEncapsulamento de dados e\nReutiliza\u00e7\u00e3o de Objetos\n\nBaixo n\u00edvel de\nencapsulamanto de dados e\nm\u00e9todos objetos, devido a\n\ndistribui\u00e7\u00e3o em muitos\nclientes, dificultando a\nreutiliza\u00e7\u00e3o de objetos\n\nEncapsulamento de dados\ne m\u00e9todos muito maior\n\ndevido a centraliza\u00e7\u00e3o das\nregras de neg\u00f3cio\n\nbaseadas em objetos,\npermitindo sua\n\nreutiliza\u00e7\u00e3o\n\nEscalabilidade (hardware) e\nFlexibilidade (software)\n\nLimitada escalabilidade e\nflexibilidade, pois com o\n\nsurgimento de novos\nclientes cresce o n\u00famero de\nlinks de comunica\u00e7\u00e3o e as\n\nregas de neg\u00f3cio s\u00e3o\nsomadas \u00e0 esse n\u00famero\n\nMuito melhor devido ao\ncontrole de conex\u00f5es\n\nclientes concentradas no\nAppServer ou distribu\u00eddas\n\natrav\u00e9s de outros\nservidores, da mesma\nforma que as regras de\nneg\u00f3cio baseadas em\n\nobjetos\n\nIntegra\u00e7\u00e3o com sistemas\ncentralizados (Mainframe)\n\nN\u00e3o permite Poss\u00edvel atrav\u00e9s da\nimplementa\u00e7\u00e3o de\n\ngateways utilizando RPC\n\nIntegra\u00e7\u00e3o em ambientes com\nbancos de dados heterog\u00eaneos\n\nN\u00e3o permite devido aos\nRDP (Remote Database\nProtocols), como ODBC\n\n(Open Database\nConnectivity) ou DAO\n(Data Access Objects)\n\nestarem concentrados no\ncliente\n\nUm mesmo objeto\nrespons\u00e1vel por uma\n\ndeterminada transa\u00e7\u00e3o de\nneg\u00f3cio pode acessar\n\nm\u00faltiplos bancos de dados\n\nTab. 2.1 Compara\u00e7\u00e3o dos paradigmas 2-camadas e 3-camadas\n\n2.6.5. Trabalhos Envolvendo os Paradigmas Cliente/Servidor 2-Camadas\ne 3-Camadas\n\nComo j\u00e1 citado anteriormente no item 2.5 o conceito de tr\u00eas camadas surgiu antes do\n\ncrescimento da Internet, com o aparecimento da World Wide Web, ganhando proje\u00e7\u00e3o com a\n\nsua evolu\u00e7\u00e3o. O coment\u00e1rio sobre \u201cCamadas\u201d em [HANSON e CRAIN, 2000] j\u00e1 mostrava a\n\npreocupa\u00e7\u00e3o com surgimento desta nova abordagem computacional: \u201cAntes da interweb\n\n(Internet e World Wide Web), revistas comercias de softwares pareciam obcecadas com a\n\n\n\n28\n\nno\u00e7\u00e3o do cliente/servidor 3-camadas\u201d. J\u00e1 o trabalho de [WOLFRAM, 2000], ressalta a\n\nimport\u00e2ncia deste modelo para o E-Business apesar de n\u00e3o estar maduro o suficiente. Nele\n\ntamb\u00e9m \u00e9 abordada a iniciativa de grandes empresas mundiais, como a IBM, de desenvolver\n\naplica\u00e7\u00f5es servidoras como o WebSphere Application Server para integra\u00e7\u00e3o de dados e\n\ntransa\u00e7\u00f5es corporativas com a Web. Simon Edward em [SIMON, 2000], gerente de marketing\n\npara sistemas corporativos da IBM, aponta a tend\u00eancia das aplica\u00e7\u00f5es middleware bem como\n\na estrat\u00e9gia da IBM de portar sua linha de servidores para este tipo de aplica\u00e7\u00e3o.\n\nPor volta de 1989 a AT&amp;T atrav\u00e9s da USL (Unix System Laboratory) lan\u00e7a uma das\n\nprimeiras aplica\u00e7\u00f5es usando AppServer, o Tuxedo, que passou em 1996 a ser parte integrante\n\nda BEA Systems Inc., empresa de software l\u00edder mundial em infraestrutura de aplica\u00e7\u00f5es. Em\n\n[MERTON, 2000] \u00e9 realizado um estudo de caso da evolu\u00e7\u00e3o de desempenho em um\n\nambiente cliente/servidor distribu\u00eddo utilizando uma base de dados Oracle rodando em um\n\nIBM RS/6000, clientes windows 95 e uma aplica\u00e7\u00e3o middleware Tuxedo como controlador de\n\ntransa\u00e7\u00f5es. Em [SOMIN e GROSS, 2000] observa-se um benef\u00edcio do modelo 3-camadas em\n\nrela\u00e7\u00e3o ao 2-camadas: \u201cEnquanto a configura\u00e7\u00e3o em 2-camadas consiste de clientes\n\nconectados diretamente ao banco de dados, a configura\u00e7\u00e3o em 3-camadas cont\u00e9m a adicional\n\ncamada de um AppServer. A introdu\u00e7\u00e3o da camada AppServer incrementou a flexibilidade,\n\nreduziu o tr\u00e1fego na rede e melhorou o desempenho, mas necessitou mudan\u00e7as no\n\nplanejamento de capacidade devido \u00e0 nova configura\u00e7\u00e3o distribu\u00edda\u201d.\n\nUma importante caracter\u00edstica do paradigma 3-camadas \u00e9 a possibilidade de\n\nintegra\u00e7\u00e3o entre o \u201cnovo e o velho\u201d, isto \u00e9, integrar ou migrar ambientes legados para\n\nambientes baseados no modelo cliente/servidor como observado em [CRABB, 2000] e\n\n[KALM, 2000].\n\nCom o crescimento de aplica\u00e7\u00f5es baseadas no modelo 3-camadas muitas empresas\n\npassaram a portar seus SI utilizando os modelos 2-camadas 3-camadas como mostrado em\n\n[SCHUMACK, 1999]. A estrutura complexa das aplica\u00e7\u00f5es ERP (Enterprise Resource\n\nPlanning) pode utilizar a arquitetura do modelo 3-camadas como modelo integrador destas\n\naplica\u00e7\u00f5es \u00e0s corpora\u00e7\u00f5es como mostrado em [DHILLON, 2000]. As abordagens baseadas no\n\nmodelo cliente/servidor 3-camadas ou N-camadas como integradores de neg\u00f3cios\n\ncorporativos torna-se cada vez mais comum nos mais diversos ambientes computacionais,\n\nindo desde significativos midllewares como o dynamic TAO, um componente baseado em\n\nCORBA que suporta configura\u00e7\u00f5es din\u00e2micas de mecanismos para suporte de monitora\u00e7\u00e3o,\n\nmostrado em [KON et al., 2000], a modelos complexos como SPE (Software Performance\n\nEngineering) baseados no paradigma multicamadas abordado em [SMITH, 1999].\n\n\n\n29\n\n2.6.6. Fatores e Grandezas de Desempenho Consideradas em Sistemas\nCliente/Servidor\n\nPara constru\u00e7\u00e3o de modelos de desempenho no ambiente cliente/servidor, seja ele 2-\n\ncamadas, 3-camadas ou baseados no modelo Internet, as vari\u00e1veis de desempenho e os fatores\n\nque influenciam seu comportamento precisam ser definidos. Este item tem como objetivo\n\nabordar estas vari\u00e1veis e seus fatores de influ\u00eancia.\n\nO trabalho de [MENASC\u00c9 e GOMMA, 2000] aborda a integra\u00e7\u00e3o de um modelo de\n\nprojeto e um modelo de desempenho, de modo que o modelo de desempenho seja definido\n\nantes da implementa\u00e7\u00e3o, o objetivo \u00e9 analisar o projeto sob a perspectiva do desempenho,\n\nsendo que o modelo de desempenho \u00e9 baseado no enfileiramento em rede (queuing network).\n\nEssa abordagem garante a flexibilidade de mapeamento da arquitetura de software para\n\nsistemas clientes servidor 2-camadas ou 3-camadas. A metodologia abordada utiliza dois\n\npar\u00e2metros: intensidade da carga de trabalho e demanda por servi\u00e7os aos v\u00e1rios recursos\n\ncomo CPU, subsistemas de I/O e segmentos de rede. O desempenho de instru\u00e7\u00f5es selects no\n\nbanco de dados \u00e9 descrito em fun\u00e7\u00e3o dos n\u00fameros de I/O gerados por estas instru\u00e7\u00f5es, e os\n\nn\u00fameros de I/O fun\u00e7\u00e3o do tipo de plano de acesso (joins aninhados, unidos ou h\u00edbridos) que \u00e9\n\nfun\u00e7\u00e3o do sistema gerenciador de banco de dados utilizado. Um das arquiteturas mais\n\npopulares para o desenvolvimento de servidores de aplica\u00e7\u00e3o, nos dias atuais, \u00e9 a Java 2 e o\n\ntrabalho de [JURIC et al., 2000] aborda a compara\u00e7\u00e3o e otimiza\u00e7\u00e3o destas, utilizando os dois\n\nprotocolos para comunica\u00e7\u00e3o entre os objetos localizados no cliente e no servidor de\n\naplica\u00e7\u00e3o o RMI (Remote Method Invocation) e o RMI-IIOP (Remote Method Invocation over\n\nInter-ORB Protocol), o artigo utiliza um m\u00e9todo independente do modelo de objeto\n\ndistribu\u00eddo que minimiza a influ\u00eancia do overhead do desempenho para o controle de\n\ncomponentes. As vari\u00e1veis de desempenho consideradas foram o tempo de resposta, o\n\nthroughput e a degrada\u00e7\u00e3o do desempenho. Outro trabalho referente a Java RMI \u00e9 mostrado\n\nem [AHUJA e QUINTAO, 2000] que avalia o desempenho do Java RMI empiricamente\n\ncomparando-o com o Java Sockets API, o foco \u00e9 direcionado para avalia\u00e7\u00e3o do tempo de\n\nresposta, que \u00e9 utilizado como base de compara\u00e7\u00e3o para estas duas tecnologias.\n\nExistem ferramentas especificas para a analise de desempenho de aplica\u00e7\u00f5es Java\n\ncomo a Jinsight EX, que em [SEVITSKY et al., 2001] \u00e9 aplicada a um ambiente\n\ncliente/servidor 3-camadas composto por um cliente, um Java Server, representando o\n\nservidor de aplica\u00e7\u00e3o, e um banco de dados relacional. Para a an\u00e1lise de otimiza\u00e7\u00e3o do banco\n\nde dados s\u00e3o consideradas tr\u00eas vari\u00e1veis: o overhead devido o estabelecimento das conex\u00f5es\n\n\n\n30\n\ncom o banco de dados e a compila\u00e7\u00e3o das queries, a execu\u00e7\u00e3o da query e o processamento\n\ndos resultados. A ferramenta de an\u00e1lise permite atrav\u00e9s da observa\u00e7\u00e3o das theads nos\n\nservidores de aplica\u00e7\u00e3o e banco de dados, definir qual das tr\u00eas vari\u00e1veis pode ser otimizada\n\npara melhorar o desempenho do banco de dados, atrav\u00e9s da compara\u00e7\u00e3o do n\u00famero total de\n\nexecu\u00e7\u00f5es com o n\u00famero de chamadas realizadas para cada uma delas. Testes de benchmark\n\ns\u00e3o tamb\u00e9m utilizados para mensurar a carga de trabalho submetida a servidores de aplica\u00e7\u00e3o\n\nbaseados em Java como visto em [LUO e JOHN, 2001] que utiliza dois testes: o VolanoMark\n\nque \u00e9 um avaliador puro Java baseado em 2-camadas, e o SPECjbb2000  que \u00e9 o primeiro\n\nSPEC\u2019s benchmark para avaliar desempenho de aplica\u00e7\u00f5es servidoras Java baseado no\n\nmodelo 3-camadas. As aplica\u00e7\u00f5es Java s\u00e3o comparadas com o SPECint2000, e o impacto da\n\nmultithreading em fun\u00e7\u00e3o do aumento dos clientes \u00e9 investigado. Inicialmente o benchmark\n\nSPECint \u00e9 utilizado para determinar as caracter\u00edsticas da aplica\u00e7\u00e3o servidora, em seguida o\n\nn\u00famero de threads simult\u00e2neas s\u00e3o incrementadas para determinar como a multithreading\n\nimpacta a microarquitetura do processador. Os resultados finais mostram que o aumento do\n\nn\u00famero de threads ocasiona uma melhora no comportamento das instru\u00e7\u00f5es devido o\n\naumento do acesso local, que para o VolanoMark \u00e9 mais acentuado, mas quando existem\n\nmuitas conex\u00f5es clientes o n\u00famero de instru\u00e7\u00f5es que o processador executa aumenta,\n\nafetando a escalabilidade do sistema negativamente.\n\nOutra abordagem tecnol\u00f3gica para os servidores de aplica\u00e7\u00e3o refere-se ao modelo\n\nCORBA de objetos distribu\u00eddos. [FATAH e MAJUMDAR, 2002] descrevem o desempenho\n\nde tr\u00eas diferentes arquiteturas cliente/servidor baseadas em CORBA. O modelo H-ORB\n\n(Handle-Driven ORB) no qual o cliente inicialmente solicita o endere\u00e7o a um agente\n\n(middleware) para comunicar-se diretamente com o servidor, que pode ser um servidor de\n\nbanco de dados, sem a comunica\u00e7\u00e3o entre o agente e o servidor; o FORB (Forwarding ORB)\n\nem que a solicita\u00e7\u00e3o cliente \u00e9 automaticamente transferida pelo agente para um servidor\n\napropriado, com a exist\u00eancia de comunica\u00e7\u00e3o entre o agente e o servidor, que retorna o\n\nprocessamento do resultado ao cliente e o P-ORB (Process Planner ORB) no qual o agente\n\ncombina a transfer\u00eancia de solicita\u00e7\u00f5es com a invoca\u00e7\u00e3o de m\u00faltiplos servidores, como\n\ncomplexas solicita\u00e7\u00f5es que requerem servi\u00e7os de m\u00faltiplos servidores. Quatro fatores foram\n\nconsiderados para o controle da carga de trabalho: Numero de clientes, tempo de\n\ncomunica\u00e7\u00e3o entre o cliente, o agente e o servidor, tempo de solicita\u00e7\u00e3o de servi\u00e7o e o\n\ntamanho da mensagem. As medidas de desempenho consideradas s\u00e3o: o tempo m\u00e9dio de\n\nresposta, o throughput m\u00e9dio de todo sistemas em fun\u00e7\u00e3o das solicita\u00e7\u00f5es dos clientes por\n\nsegundo e utiliza\u00e7\u00e3o da CPU. A tabela 2.2 mostra o comportamento do tempo de resposta e\n\n\n\n31\n\nthroughput do sistema para as tr\u00eas arquiteturas quando o tamanho de mensagem (L) e o\n\nn\u00famero de clientes (N) s\u00e3o variados.\n\nH-ORB F-ORB P-ORB\n\nL(bytes)\n\nTempo\nde\n\nresposta\n(sec)\nN = 1\n\nThroughput\n(Solicita\u00e7\u00f5es\nclientes/sec)\n\nN = 24\n\nTempo de\nresposta\n\n(sec)\nN = 1\n\nThroughput\n(Solicita\u00e7\u00f5es\nclientes/sec)\n\nN = 24\n\nTempo de\nresposta\n\n(sec)\nN = 1\n\nThroughput\n(Solicita\u00e7\u00f5es\nclientes/sec)\n\nN = 24\n\n4800 1.7212 7.7356 1.3142 2.8625 0.9015 1.8524\n9600 1.7425 7.4533 1.3448 2.5935 0.9030 1.7938\n19200 1.7933 6.8688 1.4141 2.4378 0.9125 1.7592\n\nTab. 2.2 Comportamento do tempo de resposta e throughput\n\nPara uma carga de trabalho pequena, N = 1, o P-ORB apresenta um melhor tempo de\n\nresposta, seguido pelo F-ORB e o H-ORB para todos os valores de L. Para cargas medias e\n\naltas, o H-ORB apresenta um melhor throughput em compara\u00e7\u00e3o com o P-ORB e o F-ORB,\n\nexceto \u00e9 claro para pequenos valores de N. [KEMPER et al., 1999] aborda alguns aspectos de\n\ndesempenho do SAP R/3, sistema aberto utilizado como padr\u00e3o para ERP (Enterprise\n\nResource Planning). A arquitetura cliente/servidor 3-camadas do SAP R/3 \u00e9 divida na camada\n\nde apresenta\u00e7\u00e3o contendo as aplica\u00e7\u00f5es clientes, a camada de neg\u00f3cio representada por uma\n\nou mais servidores de aplica\u00e7\u00e3o e a camada do sistema gerenciador de banco de dados. Os\n\nclientes podem fazer parte da LAN, que cont\u00e9m os servidores, ou podem fazer parte de uma\n\nWAN. Determinar o hardware para o servidor de aplica\u00e7\u00e3o e para o servidor de banco de\n\ndados \u00e9 um fator crucial para o ambiente SAP R/3, uma vez que isso determinar\u00e1 como o\n\nacesso concorrente de v\u00e1rios usu\u00e1rios ser\u00e1 suportado. Um ambiente com cem clientes\n\nimplicaria em um servidor monoprocessado e um servidor de banco de dados sob uma\n\nEthernet, j\u00e1 um com mil clientes implicaria em um servidor multiprocessado e o servidor de\n\nbanco de dados rodando sob uma Fast Ethernet. O n\u00famero de LUW (Logical Unit of Work),\n\ntermo que define uma transa\u00e7\u00e3o no ambiente SAP, no servidor de aplica\u00e7\u00e3o tamb\u00e9m precisa\n\nser cuidadosamente definido uma vez que um grande n\u00famero de pequenas transa\u00e7\u00f5es\n\nsubutilizar\u00e3o a CPU, e por outro lado, muitos ciclos de CPU podem ser gastos para processar\n\ngrandes transa\u00e7\u00f5es.\n\n[NIXON, 2000] descreve um framework, o PeRF (Performance Requirements\n\nFramework), para o gerenciamento das vari\u00e1veis de desempenho em sistemas de informa\u00e7\u00e3o\n\nem um dado dom\u00ednio de aplica\u00e7\u00e3o. O PeRF integra e cataloga uma base de conhecimento\n\nreferente a desempenho e sistemas de informa\u00e7\u00e3o como: conceitos de desempenho e\n\n\n\n32\n\nprinc\u00edpios SPE (Software Performance Engineering), m\u00e9todo de constru\u00e7\u00e3o de sistemas com\n\no objetivo da adequa\u00e7\u00e3o de desempenho [SMARKUSKY et al., 2001]. Este framework foi\n\naplicado no estudo dos requisitos de desempenho de sistemas universit\u00e1rios que armazenam\n\ndados referentes a estudantes, tendo o SRS (Student Records System) da Universidade de\n\nToronto como estudo de caso. O SRS cont\u00e9m por volta de 54.000 registros, 400 tabelas e\n\nutiliza o DB2 como gerenciador de banco de dados. A figura 2.9 mostra os conceitos b\u00e1sicos\n\nde desempenho catalogados pelo PeREF. O desempenho \u00e9 considerado sob dois aspectos: de\n\ntempo e de espa\u00e7o. O tempo pode ser decomposto em: throughput, tempo de resposta e\n\ngerenciamento de tempo. O espa\u00e7o pode ser particionado em mem\u00f3ria principal e\n\narmazenamento secund\u00e1rio.\n\nDesempenho\n\nEspa\u00e7o\n\nMem\u00f3ria\nprincipal\n\nArmazenamento\nSecund\u00e1rio\n\nTempo\n\nTempo de\nresposta\n\nThroughput Gerenciamento\ndo tempo\n\nTempo de\nresposta\n(off peak)\n\nTempo de\nresposta\n(peak)\n\nFig. 2.9 Conceitos b\u00e1sicos de desempenho\n\n[KIM e HAN] descrevem tr\u00eas abordagens anal\u00edticas baseadas no modelo de filas e\n\nm\u00e9todos de an\u00e1lise matem\u00e1tica, o objetivo \u00e9 descrever os resultados da an\u00e1lise como uma\n\nmaneira de auxiliar o entendimento das variadas configura\u00e7\u00f5es nas arquiteturas de workflow\n\npara sistemas cliente/servidor. As estimativas de desempenho utilizadas foram: demanda por\n\nrecursos, tempo de processador, e throughputs considerado na conten\u00e7\u00e3o dos processos de\n\nsoftware e hardware. [HELLERSTEIN et al., 2000] revela que na an\u00e1lise de sistemas com\n\ninforma\u00e7\u00f5es distribu\u00eddas existe uma correla\u00e7\u00e3o entre classes de servi\u00e7os, em parte em fun\u00e7\u00e3o\n\nda intera\u00e7\u00e3o cliente/servidor. Partindo desta premissa objetiva-se clarificar as implica\u00e7\u00f5es de\n\n\n\n33\n\ndesempenho destas correla\u00e7\u00f5es para o comportamento do sistema como um todo, onde o\n\nprincipal dado a considerar para analise de desempenho s\u00e3o as filas de tarefas no servidor em\n\nfun\u00e7\u00e3o da carga de trabalho exercida por um grande n\u00famero de clientes e as intera\u00e7\u00f5es dos\n\nclientes podem ser entendidas como abertura de banco de dados, abertura de views, leitura de\n\nregistros em um banco de dados, etc.\n\nA integra\u00e7\u00e3o entre uma ferramenta de especifica\u00e7\u00e3o de softwares como a UML e um\n\nmodelo de desempenho \u00e9 mostrada por [SMARKUSKY et al., 2001] que define um\n\nframework  de modelagem de desempenho, que permite a transi\u00e7\u00e3o de sistemas orientados a\n\nobjetos especificados em UML (Unified Modeling Language) para uma arquitetura de HPM\n\n(Hierarchical Performance Model), que fornece um mecanismo para modelos de desempenho\n\nde sistemas distribu\u00eddos orientados a objetos. HPM representa uma vis\u00e3o vertical da\n\nmodelagem de desempenho, onde cada um dos quatro n\u00edveis, sistema, tarefa, modulo e\n\nopera\u00e7\u00e3o, representa uma diferente vis\u00e3o e camadas de abstra\u00e7\u00e3o para o sistema especificado.\n\nA figura 2.10 mostra a modelagem de desempenho do ambiente, que representa a transi\u00e7\u00e3o de\n\num modelo orientado a objetos desenvolvido em UML para cada n\u00edvel da arquitetura HPM.\n\nUma breve descri\u00e7\u00e3o de cada n\u00edvel \u00e9 mostrada a seguir:\n\n\u2022 N\u00edvel de sistema: representa o maior n\u00edvel de abstra\u00e7\u00e3o, enfileiramento em rede\n\n(queuing network) \u00e9 utilizado para modelar os par\u00e2metros de entrada e a intera\u00e7\u00e3o\n\ndos processos de software;\n\n\u2022 N\u00edvel de tarefa: representa uma vis\u00e3o f\u00edsica do sistema sob estudo e tem como\n\nfoco o mapeamento processo-processador;\n\n\u2022 N\u00edvel de modulo: especifica e analisa componentes de software, procedimentos e\n\nfun\u00e7\u00f5es;\n\n\u2022 N\u00edvel de opera\u00e7\u00e3o: \u00e9 o mais baixo n\u00edvel de abstra\u00e7\u00e3o para a an\u00e1lise do modelo de\n\ndesempenho. Focaliza as intera\u00e7\u00f5es entre instru\u00e7\u00f5es primitivas com a arquitetura\n\ndo processador.\n\n\n\n34\n\nP\na\nr\u00e2\n\nm\ne\ntro\n\ns\n d\n\ne\n de\n\ns\ne\nm\n\npe\nn\nh\no\n\nDiagrama de Atividades\n\nDiagrama de Classe e Diagrama de\nInforma\u00e7\u00e3o Estendida\n\nConjunto de Diagramas de\nAtividades\n\nHPM\n\nModelo Composto\n\nVis\u00e3o de Desempenho\n\nDiagrama de\nsequencia\n\nN\u00edvel de sistema\n\nN\u00edvel de tarefa\n\nN\u00edvel de m\u00f3dulo\n\nN\u00edvel de opera\u00e7\u00e3o\n\nMapeamento de\nfun\u00e7\u00f5es\n\nFig. 2.10 Modelagem de desempenho do ambiente\n\n[NICOLA e JARKE, 2000] analisam modelos de desempenho para sistemas de banco\n\nde dados distribu\u00eddos e replicados. O objetivo central \u00e9 analisar e clarificar as diferentes\n\nalternativas de modelagem, suas combina\u00e7\u00f5es e interdepend\u00eancias nos modelos de\n\ndesempenho de banco de dados distribu\u00eddos atrav\u00e9s de modelos anal\u00edticos. Alguns estudos de\n\nsimula\u00e7\u00e3o s\u00e3o tamb\u00e9m abordados, devido aos muitos conceitos b\u00e1sicos de modelagem,\n\nsistemas de filas (queuing systems), por exemplo, dependerem do modelo de avalia\u00e7\u00e3o da\n\nmetodologia. As m\u00e9tricas de desempenho utilizadas s\u00e3o o tempo de resposta e throughput,\n\ngrandezas mais comumente consideradas nas transa\u00e7\u00f5es envolvendo bases de dados\n\ndistribu\u00eddas. Os modelos de desempenho sejam anal\u00edticos ou de simula\u00e7\u00e3o, possuem um\n\nconjunto de par\u00e2metros de entrada que podem ser estimados precisamente como tempo de\n\nservi\u00e7o em discos e velocidade de CPU, outros par\u00e2metros s\u00e3o dependentes da aplica\u00e7\u00e3o e por\n\nesta raz\u00e3o dif\u00edceis de determinar, como: n\u00famero de itens de dados no banco de dados, n\u00famero\n\nde solicita\u00e7\u00f5es por transa\u00e7\u00e3o, etc.\n\n\n\n35\n\nEste cap\u00edtulo fez uma revis\u00e3o de literatura sobre o nascimento de algumas arquiteturas\n\ncomputacionais, como o modelo cliente/servidor, e a evolu\u00e7\u00e3o de outros, a abordagem\n\ncliente/servidor baseada em 2-camadas evolui para a baseada em 3-camadas e N-camadas.\n\nMostrou-se tamb\u00e9m uma introdu\u00e7\u00e3o ao paradigma cliente/servidor 2-camadas abordando seus\n\nelementos, caracter\u00edsticas, benef\u00edcios e desvantagens. Considerou-se o porqu\u00ea do modelo 3-\n\ncamadas, sua arquitetura, vantagens e desvantagens e uma compara\u00e7\u00e3o de ambos, al\u00e9m das\n\nvari\u00e1veis de desempenho relacionadas a sistemas de informa\u00e7\u00e3o baseados no modelo\n\ncliente/servidor e fatores relevantes que podem alterar o comportamento destas vari\u00e1veis.\n\nO cap\u00edtulo seguinte \u00e9 dedicado \u00e0 metodologia utilizada para atingir os objetivos deste\n\ntrabalho.\n\n\n\n36\n\n3. Metodologia Abordada\n\n3.1. Descri\u00e7\u00e3o Geral das Metodologias para Planejamento de Capacidade\ne Avalia\u00e7\u00e3o de Desempenho de Sistemas Computacionais\n\nProjetistas e analistas de sistemas de informa\u00e7\u00e3o, geralmente, mergulhados na\n\nintrospec\u00e7\u00e3o da modelagem de sistemas acabam por desconsiderar um fator de grande\n\nrelev\u00e2ncia para o desenvolvimento de sistemas de informa\u00e7\u00e3o, o seu comportamento e\n\nintera\u00e7\u00f5es referentes ao desempenho. [GOMES, 2002] cita esta considera\u00e7\u00e3o em rela\u00e7\u00e3o a um\n\nestudo de caso de um projeto de v\u00eddeo confer\u00eancia, e [CRAIN e HANSON, 1999]\n\ncomplementam considerando o aspecto evolutivo das redes de computadores como um fator\n\ndesempenho.\n\nPlanejar capacidade de sistemas clientes/servidor requer uma s\u00e9rie de etapas\n\nexecutadas de maneira sistem\u00e1tica, que segundo [MENASC\u00c9 e ALMEIDA, 1998] dividem-se\n\nem: compreens\u00e3o do ambiente, caracteriza\u00e7\u00e3o da carga de trabalho, calibra\u00e7\u00e3o e valida\u00e7\u00e3o do\n\nmodelo de carga, desenvolvimento do modelo de desempenho, calibra\u00e7\u00e3o e valida\u00e7\u00e3o do\n\nmodelo de desempenho, previs\u00e3o da carga de trabalho, previs\u00e3o de desempenho,\n\ndesenvolvimento de um modelo de custo, previs\u00e3o de custo, e an\u00e1lise custo/desempenho. Tr\u00eas\n\nmodelos s\u00e3o utilizados pela metodologia: modelo da carga de trabalho, modelo de\n\ndesempenho e o modelo de custos. Neste trabalho de disserta\u00e7\u00e3o n\u00e3o ser\u00e3o abordadas algumas\n\netapas da metodologia de planejamento de capacidade como calibra\u00e7\u00e3o e valida\u00e7\u00e3o do modelo\n\nde carga, e o tocante a an\u00e1lise dos modelos de custo e desempenho. A metodologia de\n\navalia\u00e7\u00e3o de desempenho ser\u00e1 a abordada por [JAIN, 1991] que define uma abordagem\n\nsistem\u00e1tica para sua aplica\u00e7\u00e3o, e a considera como necess\u00e1ria em cada est\u00e1gio do ciclo de\n\nvida de um sistema, o que inclui seu projeto, produ\u00e7\u00e3o, uso, atualiza\u00e7\u00f5es, etc.\n\nUma vez que a metodologia vista em [JAIN, 1991] n\u00e3o detalha alguns aspectos como\n\na compreens\u00e3o do ambiente, e a caracteriza\u00e7\u00e3o da carga de trabalho, ser\u00e1 utilizada a\n\nabordagem proposta por [MENASC\u00c9 e ALMEIDA, 1998].\n\nO objetivo deste cap\u00edtulo \u00e9 apresentar as metodologias de planejamento de capacidade\n\ne avalia\u00e7\u00e3o de desempenho que ser\u00e3o utilizadas para o estudo do ambiente do Departamento\n\nde Tr\u00e2nsito do Estado do Par\u00e1 (DETRAN-PA).\n\n\n\n37\n\nDe acordo com [MENASC\u00c9 e ALMEIDA, 1998] planejar capacidade de sistemas \u201c\u00c9\n\no processo que visa prever futuros n\u00edveis de satura\u00e7\u00e3o da carga de trabalho de um sistema,\n\nconsiderando aspectos de custo beneficio e o tempo que levar\u00e1 para o sistema saturar. A\n\nprevis\u00e3o deve considerar a carga de trabalho devido \u00e0s aplica\u00e7\u00f5es existentes, o surgimento de\n\nnovas, al\u00e9m da necessidade de novos n\u00edveis de servi\u00e7os\u201d.\n\n[SCHMIDT, 2002] define o objetivo do planejamento de capacidade como \u201cGerar um\n\nn\u00edvel aceit\u00e1vel de servi\u00e7o computacional \u00e0 organiza\u00e7\u00e3o, ao responder as demandas de cargas\n\ngeradas pelo sistema, permitindo melhorias como a adequa\u00e7\u00e3o de hardware e software, com\n\nvistas a evitar a defici\u00eancia de capacidade\u201d.\n\nA import\u00e2ncia do fator humano para a avalia\u00e7\u00e3o e planejamento de capacidade de\n\nsistemas \u00e9 lembrada em [HANSON CRAIN, 1999], que aborda a uni\u00e3o do SPE (Software\n\nPerformance Engineering) com os aspectos do HFE (Human Factors Engineering). A\n\nheterogeneidade do software, do hardware, das aplica\u00e7\u00f5es e do comportamento dos usu\u00e1rios\n\naumenta a complexidade de metodologias de avalia\u00e7\u00e3o e planejamento de capacidade de\n\nsistemas computacionais, motivando pesquisas como a mostrada em [HULL, 1999]. Apesar\n\ndo aspecto humano n\u00e3o estar sendo considerado neste trabalho \u00e9 importante ressaltar que eles\n\natuam como um fator importante dentro da metodologia de planejamento de capacidade, uma\n\nvez que pessoas s\u00e3o respons\u00e1veis por definir alguns aspectos de desempenho como o tempo\n\nde resposta de um sistema.\n\n3.2. O Planejamento de Capacidade\n\nSegundo [MENASC\u00c9 e ALMEIDA, 1998] a figura 3.1 mostra o fluxograma das\n\netapas da metodologia de planejamento de capacidade.\n\n\n\n38\n\nDesenvolvimento de\nModelo de Custo\n\nModelo de Custo\n\nCompreens\u00e3o do Ambiente\n\nPrevis\u00e3o de Custo\n\nCaracteriza\u00e7\u00e3o da Carga de\nTrabalho\n\nValida\u00e7\u00e3o e Calibra\u00e7\u00e3o do Modelo\nde Carga\n\nPrevis\u00e3o da Carga de Trabalho\n\nDesenvolvimento do Modelo de\nDesempenho\n\nValida\u00e7\u00e3o e Calibra\u00e7\u00e3o do Modelo\nde Desempenho\n\nPrevis\u00e3o do Desempenho\n\nAn\u00e1lise Custo/Desempenho\n\nModelo de Carga de\nTrabalho\n\nModelo de\nDesempenho\n\nPlano de Configura\u00e7\u00e3o Plano de Investimento Plano de Pessoal\n\nFig. 3.1 Metodologia de planejamento de capacidade\n\nA seguir s\u00e3o descritas as etapas da metodologia de planejamento de capacidade.\n\n3.2.1. Compreens\u00e3o do Ambiente\n\nEsta etapa consiste no conhecimento do ambiente sobre o qual se pretende aplicar a\n\nmetodologia de planejamento e adequa\u00e7\u00e3o de capacidade, isto \u00e9, identificar que tipo de\n\nhardware: micros clientes, configura\u00e7\u00e3o dos servidores de banco de dados e aplica\u00e7\u00e3o;\n\nsoftware: sistemas operacionais clientes e de rede, editores de texto, gerenciadores de banco\n\nde dados, linguagens de programa\u00e7\u00e3o, middlewares, etc; elementos de conectividade:\n\nmodems, hubs, switches, roteadores, etc e protocolos est\u00e3o presentes neste ambiente\n\ncliente/servidor. Essas informa\u00e7\u00f5es s\u00e3o normalmente obtidas atrav\u00e9s de reuni\u00f5es, entrevistas e\n\nposs\u00edveis documentos do projeto. Esta etapa \u00e9 muito importante, pois ajuda o analista a limitar\n\no alcance do estudo, e reduz tempo e custos envolvidos no projeto.\n\n\n\n39\n\n3.2.2. Caracteriza\u00e7\u00e3o da Carga de Trabalho\n\nA caracteriza\u00e7\u00e3o da carga de trabalho \u00e9 a descri\u00e7\u00e3o, com precis\u00e3o, da carga total a que\n\num sistema computacional \u00e9 submetido, considerando seus principais componentes. Cada\n\ncomponente prim\u00e1rio \u00e9 dividido em componentes b\u00e1sicos, sendo cada um caracterizado por\n\nsua intensidade e pelos par\u00e2metros de demanda de servi\u00e7o sobre cada recurso utilizado. A\n\nfigura 3.2 mostra esta divis\u00e3o.\n\nFig. 3.2 Componentes elementares da caracteriza\u00e7\u00e3o da carga de trabalho\n\nA carga total de um sistema computacional \u00e9 representada por todas as entradas,\n\ntransa\u00e7\u00f5es e requisi\u00e7\u00f5es que ele pode receber durante um determinado intervalo de tempo.\n\nEsta etapa objetiva estabelecer um modelo de carga de trabalho para o sistema sob estudo. Ele\n\n\u00e9 uma representa\u00e7\u00e3o da carga real do sistema, e como tal precisa ser compacto e conter as\n\ncaracter\u00edsticas mais importantes e relevantes da carga real para que se possa abstrair-se das\n\ncaracter\u00edsticas dos milhares de componentes b\u00e1sicos que um sistema computacional pode\n\npossuir. Ent\u00e3o para obter-se um modelo de carga compacto os recursos escolhidos s\u00e3o em\n\ngeral aqueles que mais afetam o desempenho do sistema.\n\nA caracteriza\u00e7\u00e3o da carga de trabalho \u00e9 composta pelas seguintes etapas:\n\n\n\n40\n\n3.2.2.1. Representa\u00e7\u00e3o dos Componentes da Carga de Trabalho\n\nOs sistemas de informa\u00e7\u00e3o atuais normalmente manipulam quantidades consider\u00e1veis\n\nde informa\u00e7\u00e3o, refletindo assim em uma grande quantidade de dados coletados. Desta forma\n\ntorna-se necess\u00e1rio abstrair-se do todo e concentrar a an\u00e1lise em aspectos do sistema que\n\ndemandem, por exemplo, um maior tempo de resposta aos usu\u00e1rios. Por exemplo, para\n\nrealizar a aquisi\u00e7\u00e3o de um determinado produto utilizando a Internet realiza-se: (1)\n\nRequisi\u00e7\u00e3o da compra, (2) Aceita\u00e7\u00e3o da compra, (3) Processamento da compra, (4)\n\nLan\u00e7amento da compra. As etapas 2 ou 3 podem ser demoradas fazendo com que o tempo de\n\nresposta seja alto, indicando que a an\u00e1lise devesse ser centrada em uma destas etapas. De\n\nposse destes componentes b\u00e1sicos, deve-se definir sua parametriza\u00e7\u00e3o considerando:\n\n\u2022 Intensidade da Carga de Trabalho: Indica o n\u00famero de entradas, transa\u00e7\u00f5es e\n\nrequisi\u00e7\u00f5es a que est\u00e3o sendo submetidos os recursos do sistema.\n\n\u2022 Demanda de Servi\u00e7o: Solicita\u00e7\u00e3o por demanda aos recursos do sistema por parte\n\nde cada componente b\u00e1sico.\n\n3.2.2.2. Monitora\u00e7\u00e3o e Coleta de Dados\n\nEsta \u00e9 a etapa de parametriza\u00e7\u00e3o dos valores dos componentes b\u00e1sicos do modelo de\n\ncarga de trabalho, atrav\u00e9s dos seguintes passos:\n\n\u2022 Identificar a janela de tempo que define a sess\u00e3o de medi\u00e7\u00e3o: Corresponde ao\n\nintervalo de tempo necess\u00e1rio para observa\u00e7\u00e3o da carga de trabalho e a sua\n\ndemanda por recursos do sistema. Por exemplo, o instante de tempo em que um\n\nservidor de banco de dados recebe o maior numero de requisi\u00e7\u00f5es de servi\u00e7os;\n\n\u2022 Monitorar e medir as atividades do sistema computacional durante a janela de\n\ntempo: Utilizar monitores de desempenho incorporados aos sistemas operacionais\n\nde rede ou sistemas gerenciadores de banco de dados, analisar seus arquivos de\n\nlog, etc;\n\n\n\n41\n\n\u2022 Mediante a coleta de dados definir a padroniza\u00e7\u00e3o de valores para os componentes\n\nb\u00e1sicos da carga de trabalho.\n\n3.3. Avalia\u00e7\u00e3o de Desempenho\n\nAvalia\u00e7\u00e3o de desempenho \u00e9 segundo [SENE, 2000] o processo utilizado para\n\nresponder perguntas sobre o comportamento de um sistema em estudo. [JAIN, 1991] afirma\n\nque escolher a t\u00e9cnica de avalia\u00e7\u00e3o e uma m\u00e9trica s\u00e3o dois pontos importantes em qualquer\n\nprojeto de avalia\u00e7\u00e3o de desempenho.\n\nAs t\u00e9cnicas de avalia\u00e7\u00e3o de desempenho permitem que sejam escolhidos os m\u00e9todos\n\nque melhor exprimem as caracter\u00edsticas do sistema real que se deseja avaliar, as principais\n\nt\u00e9cnicas utilizadas s\u00e3o: as medi\u00e7\u00f5es, a modelagem anal\u00edtica e a simula\u00e7\u00e3o.\n\nAs medi\u00e7\u00f5es, realizadas diretamente no sistema real s\u00e3o m\u00e9todos simples, mas que\n\nrequerem a constru\u00e7\u00e3o propriamente dita do modelo real ou de um prot\u00f3tipo a ser avaliado.\n\nPara a simula\u00e7\u00e3o e modelagem anal\u00edtica, faz-se necess\u00e1rio a cria\u00e7\u00e3o de modelos de\n\nrepresenta\u00e7\u00e3o da realidade para a realiza\u00e7\u00e3o dos experimentos e coleta de resultados e\n\nposterior avalia\u00e7\u00e3o. As diferentes t\u00e9cnicas, empregadas na simula\u00e7\u00e3o e modelos anal\u00edticos,\n\nest\u00e3o relacionadas com o tipo de modelo criado para representar um sistema real. Os modelos\n\nanal\u00edticos permitem a constru\u00e7\u00e3o de uma representa\u00e7\u00e3o da realidade atrav\u00e9s do uso do\n\nformalismo matem\u00e1tico, com ou sem aux\u00edlio de estruturas gr\u00e1ficas. As tr\u00eas principais\n\nabordagens de modelagem anal\u00edtica s\u00e3o as Cadeias de Marcov, as Redes de Petri e a Teoria\n\ndas Filas.\n\n[PRADO, 2000] define simula\u00e7\u00e3o como uma t\u00e9cnica de solu\u00e7\u00e3o de um problema pela\n\nan\u00e1lise de um modelo que descreve o comportamento do sistema usando um computador\n\ndigital. Para [JAIN, 1991] simula\u00e7\u00e3o \u00e9 a t\u00e9cnica mais comum para an\u00e1lise de desempenho de\n\nsistemas computacionais. Ela \u00e9 muito \u00fatil quando o sistema que precisa ser caracterizado n\u00e3o\n\nesta dispon\u00edvel, um modelo de simula\u00e7\u00e3o prov\u00ea uma maneira f\u00e1cil de predizer desempenho ou\n\ncomparar alternativas de sistemas. [SILVA, 2002] afirma que hoje, com a crescente\n\ncompetitividade, a simula\u00e7\u00e3o tornou-se uma ferramenta muito poderosa para planejamento,\n\nprojeto e controle de sistemas.\n\n\n\n42\n\n3.3.1. Etapas da Avalia\u00e7\u00e3o de Desempenho\n\nComo j\u00e1 citado no item 3.1 [JAIN, 1991] prev\u00ea uma s\u00e9rie de etapas para a avalia\u00e7\u00e3o\n\nde desempenho, com devida an\u00e1lise dos resultados. Estas etapas s\u00e3o mostradas nos itens a\n\nseguir.\n\n3.3.1.1. Determinar os Objetivos e Definir o Sistema\n\nEm um projeto de avalia\u00e7\u00e3o de desempenho o primeiro passo \u00e9 determinar os\n\nobjetivos do estudo e definir o que constitui o sistema, delimitando as suas fronteiras. A\n\nescolha das fronteiras do sistema afeta suas m\u00e9tricas de desempenho como a carga de trabalho\n\nutilizada para comparar duas propostas de modelos de sistemas. Em geral a defini\u00e7\u00e3o da\n\nfronteira esta associada aos objetivos de estudo.\n\n3.3.1.2. Listas de Servi\u00e7os e Resultados\n\nTodo sistema possui uma lista de servi\u00e7os com um conjunto de resultados e cada\n\nresultado, dentro da perspectiva do usu\u00e1rio, pode ser desejado ou n\u00e3o, por exemplo, quando\n\num usu\u00e1rio clica o bot\u00e3o gravar dados cadastrais de um cliente, em sua interface gr\u00e1fica, ele\n\nespera que os dados sejam gravados com um tempo de resposta aceit\u00e1vel. Esta etapa objetiva\n\ndefinir as listas de servi\u00e7os e seus poss\u00edveis resultados, selecionando as m\u00e9tricas de\n\ndesempenho e cargas de trabalho mais adequadas.\n\n3.3.1.3. Sele\u00e7\u00e3o das M\u00e9tricas\n\nDefinir as m\u00e9tricas do sistema significa estabelecer crit\u00e9rios para a compara\u00e7\u00e3o do\n\ndesempenho. Em geral estas m\u00e9tricas s\u00e3o: velocidade, precis\u00e3o, e disponibilidade dos\n\nservi\u00e7os. De forma geral existem tr\u00eas categorias para classifica\u00e7\u00e3o dos resultados: o servi\u00e7o \u00e9\n\nrealizado corretamente, incorretamente, ou recusa em realizar o servi\u00e7o.\n\n\n\n43\n\nQuando o servi\u00e7o \u00e9 realizado corretamente, seu desempenho \u00e9 medido pelo tempo\n\npara realizar o servi\u00e7o (tempo de resposta), a taxa na qual o servi\u00e7o \u00e9 realizado (throughput) e\n\nos recursos consumidos (utiliza\u00e7\u00e3o) durante a realiza\u00e7\u00e3o do servi\u00e7o.\n\nSe o servi\u00e7o \u00e9 realizado incorretamente, uma mensagem de erro \u00e9 gerada. Isto auxilia\n\nna classifica\u00e7\u00e3o dos erros e na determina\u00e7\u00e3o da classe de cada erro.\n\nO servi\u00e7o pode ainda n\u00e3o ser realizado, neste caso diz-se que o sistema caiu, falhou ou\n\nesta indispon\u00edvel. Isto auxilia na classifica\u00e7\u00e3o das falhas e na determina\u00e7\u00e3o da classe de cada\n\nfalha. A figura 3.3 mostra os tr\u00eas estados de uma solicita\u00e7\u00e3o de servi\u00e7o.\n\nFig. 3.3 Tr\u00eas estados de uma solicita\u00e7\u00e3o de servi\u00e7o\n\nAs m\u00e9tricas de desempenho mais usadas s\u00e3o:\n\n\u2022 Tempo de resposta: \u00c9 o intervalo de tempo entre a solicita\u00e7\u00e3o do cliente e as\n\nrespostas do sistema;\n\n\u2022 Throughput: \u00c9 a taxa (solicita\u00e7\u00f5es por unidade de tempo) na qual as solicita\u00e7\u00f5es\n\npodem ser atendidas pelo sistema;\n\n\n\n44\n\n\u2022 Utiliza\u00e7\u00e3o de recurso: \u00c9 a medida da fra\u00e7\u00e3o de tempo na qual o recurso esta\n\nocupada atendendo uma solicita\u00e7\u00e3o;\n\n\u2022 Confiabilidade do sistema: \u00c9 normalmente medido pela probabilidade de erros ou\n\npelo tempo m\u00e9dio entre erros;\n\n\u2022 Disponibilidade do sistema: \u00c9 a fra\u00e7\u00e3o de tempo no qual o sistema esta dispon\u00edvel\n\npara atender as solicita\u00e7\u00f5es.\n\nAs m\u00e9tricas em fun\u00e7\u00e3o de sua utilidade, podem ser divididas em:\n\n\u2022 Quanto mais alto melhor (HB \u2013 High is Better): Usu\u00e1rios e gerentes do sistema\n\npreferem grandes valores para suas m\u00e9tricas. Ex: Throughput;\n\n\u2022 Quanto mais baixo melhor (LB \u2013 Lower is Better): Usu\u00e1rios e gerentes do sistema\n\npreferem pequenos valores para suas m\u00e9tricas. Ex: Tempo de resposta;\n\n\u2022 Aproximado \u00e9 melhor (NB \u2013 Nominal is Better): Grandes e pequenos valores para\n\nas m\u00e9tricas s\u00e3o indesej\u00e1veis, neste caso um valor na m\u00e9dia \u00e9 melhor. Ex:\n\nUtiliza\u00e7\u00e3o de recurso.\n\n3.3.1.4. Lista de Par\u00e2metros\n\nNesta etapa s\u00e3o definidos todos os par\u00e2metros que podem influenciar o desempenho\n\ndo sistema. Eles dividem-se em par\u00e2metros de sistema e de carga de trabalho. Os de sistema\n\nenglobam par\u00e2metros de hardware e software, que geralmente devem ser padr\u00f5es em todas as\n\ninstala\u00e7\u00f5es do sistema. Os referentes \u00e0 carga de trabalho s\u00e3o os par\u00e2metros caracter\u00edsticos das\n\nsolicita\u00e7\u00f5es clientes, que variam de uma instala\u00e7\u00e3o para outra. A lista pode ou n\u00e3o estar\n\ncompleta, isto \u00e9, se um novo par\u00e2metro foi descoberto ele pode ser adicionado \u00e0 lista,\n\npermitindo-se determinar quais dados necessitam ser coletados antes e durante a na an\u00e1lise.\n\n\n\n45\n\n3.3.1.5. Sele\u00e7\u00e3o de Fatores para Estudo\n\nA lista de par\u00e2metros pode ser divida naqueles que variam durante a avalia\u00e7\u00e3o e\n\naqueles que n\u00e3o variam. Os que variam s\u00e3o chamados de fatores e seu valores de n\u00edveis.\n\nPode-se iniciar com uma pequena lista de fatores e um pequeno n\u00famero de n\u00edveis, e expandi-\n\nlos nas pr\u00f3ximas fases do projeto se os recursos assim o permitir. \u00c9 necess\u00e1rio dar prefer\u00eancia\n\naos fatores que mais influenciam o desempenho, logo um fator de significante relev\u00e2ncia n\u00e3o\n\npode ser ignorado simplesmente em fun\u00e7\u00e3o da dificuldade que o envolve. Ao selecionar os\n\nfatores, deve-se considerar a economia, pol\u00edtica e restri\u00e7\u00f5es tecnol\u00f3gicas envolvidas, al\u00e9m das\n\nlimita\u00e7\u00f5es impostas pelos respons\u00e1veis pelas decis\u00f5es.\n\n3.3.1.6. Sele\u00e7\u00e3o das T\u00e9cnicas de Avalia\u00e7\u00e3o\n\nAs tr\u00eas t\u00e9cnicas para avalia\u00e7\u00e3o de desempenho s\u00e3o: a modelagem anal\u00edtica, a\n\nsimula\u00e7\u00e3o e medi\u00e7\u00f5es do sistema real.\n\n3.3.1.7. Sele\u00e7\u00e3o da Carga de Trabalho\n\nConsiste da lista de servi\u00e7os requerida para o sistema. Dependendo da t\u00e9cnica de\n\navalia\u00e7\u00e3o escolhida a carga de trabalho ser\u00e1 expressa de diferentes formas. Nos modelos\n\nanal\u00edticos geralmente \u00e9 definida como a probabilidade de v\u00e1rias solicita\u00e7\u00f5es ao sistema real.\n\nNas simula\u00e7\u00f5es poderia ser representada pela execu\u00e7\u00e3o passo a passo das solicita\u00e7\u00f5es no\n\nsistema real. E nas medi\u00e7\u00f5es ela consiste em scripts que ser\u00e3o executados no sistema. Sendo\n\nque em todos os casos a carga de trabalho deve representar o uso do sistema na vida real.\n\n3.3.1.8. Projeto de Experimentos\n\nA partir dos fatores e seus n\u00edveis, s\u00e3o decididos a seq\u00fc\u00eancia de experimentos que\n\nobtenham o m\u00e1ximo de informa\u00e7\u00e3o com o m\u00ednimo de esfor\u00e7o. O projeto de experimentos\n\n\n\n46\n\npode ser definido em duas fases, a primeira onde o n\u00famero de fatores \u00e9 grande mas o n\u00famero\n\nde n\u00edveis \u00e9 pequeno, com o objetivo de determinar o efeito relativo dos v\u00e1rios fatores. E em\n\numa segunda fase, o n\u00famero de fatores \u00e9 diminu\u00eddo \u00e9 o n\u00famero de n\u00edveis daqueles que\n\ntiveram uma maior relev\u00e2ncia \u00e9 incrementado.\n\n3.3.1.9. An\u00e1lise e Interpreta\u00e7\u00e3o dos Resultados\n\n\u00c9 importante identificar que medi\u00e7\u00f5es e simula\u00e7\u00f5es, por tratarem-se de experimentos\n\nrand\u00f4micos, conduzem a quantidade de dados diferentes a cada medi\u00e7\u00e3o ou simula\u00e7\u00e3o toda\n\nvez que s\u00e3o repetidas. Na compara\u00e7\u00e3o de duas alternativas de sistemas, \u00e9 necess\u00e1rio levar em\n\nconta a variabilidade dos resultados, pois simplesmente comparar os meios pode conduzir a\n\nerr\u00f4neas conclus\u00f5es. A interpreta\u00e7\u00e3o dos resultados \u00e9 a chave para entender que uma an\u00e1lise\n\nconduz a resultados e n\u00e3o a conclus\u00f5es, resultados estes que servir\u00e3o como base para que os\n\nrespons\u00e1veis pelas decis\u00f5es possam desenhar conclus\u00f5es.\n\n3.3.2. Modelo de Desempenho\n\nO modelo de desempenho deve ser representativo daquele existente no mundo real\n\ncom as solicita\u00e7\u00f5es e os recursos do sistema sendo representadas graficamente por entidades\n\ninterconectadas no modelo de simula\u00e7\u00e3o. Depois de desenvolvido, o modelo de simula\u00e7\u00e3o ele\n\ndeve ser verificado e validado. A valida\u00e7\u00e3o tem foco voltado para a representa\u00e7\u00e3o das\n\nsuposi\u00e7\u00f5es consideradas sobre o comportamento do sistema real, no desenvolvimento do\n\nmodelo, e a verifica\u00e7\u00e3o considera as corre\u00e7\u00f5es na implementa\u00e7\u00e3o.\n\n3.3.2.1. Verifica\u00e7\u00e3o do Modelo de Desempenho\n\nValida\u00e7\u00e3o e verifica\u00e7\u00e3o s\u00e3o diferentes conceitos, podendo o modelo de desempenho\n\nse encaixar em uma das quatro categorias: inv\u00e1lido e n\u00e3o verificado, inv\u00e1lido e verificado,\n\nv\u00e1lido e n\u00e3o verificado, ou v\u00e1lido e verificado. Um modelo inv\u00e1lido e verificado \u00e9 aquele que\n\n\n\n47\n\nimplementa corretamente as suposi\u00e7\u00f5es, por\u00e9m elas est\u00e3o distantes da realidade. Se um\n\nmodelo de simula\u00e7\u00e3o tem sua modelagem e programa\u00e7\u00e3o realizada por pessoas (ou equipes)\n\ndiferentes, a modelagem representaria a valida\u00e7\u00e3o e a programa\u00e7\u00e3o \u00e0 verifica\u00e7\u00e3o.\n\n3.3.2.2. Valida\u00e7\u00e3o do Modelo de Desempenho\n\nA verifica\u00e7\u00e3o deve garantir, no m\u00ednimo de forma razo\u00e1vel, que as suposi\u00e7\u00f5es, se\n\nimplementadas corretamente para o modelo, produziram resultados compat\u00edveis com os\n\nobservados no sistema real. A valida\u00e7\u00e3o depende das suposi\u00e7\u00f5es, ent\u00e3o, logo depende tamb\u00e9m\n\ndo sistema modelado. Dessa forma, diferentemente das t\u00e9cnicas de verifica\u00e7\u00e3o, que podem ser\n\ngeneralizada para outros modelos, a valida\u00e7\u00e3o n\u00e3o \u00e9 aplic\u00e1vel desta forma.\n\nA valida\u00e7\u00e3o do modelo consiste em tr\u00eas aspectos chaves:\n\n\u2022 Suposi\u00e7\u00f5es;\n\n\u2022 Valores dos par\u00e2metros de entrada e distribui\u00e7\u00f5es;\n\n\u2022 Valores de sa\u00edda e distribui\u00e7\u00f5es.\n\nEstas tr\u00eas chaves podem estar sujeitas a um teste de validade pela compara\u00e7\u00e3o atrav\u00e9s\n\ndas seguintes fontes:\n\n\u2022 Intui\u00e7\u00e3o do especialista;\n\n\u2022 Medidas do sistema real;\n\n\u2022 Resultados te\u00f3ricos.\n\nIsto leva a nove poss\u00edveis testes de valida\u00e7\u00e3o, mas \u00e9 claro que nem sempre ser\u00e1\n\nposs\u00edvel utilizar todas as combina\u00e7\u00f5es. Por exemplo, nenhuma medida do sistema real ou\n\nresultados te\u00f3ricos podem estar dispon\u00edveis. De fato, em muitas situa\u00e7\u00f5es reais, as nove\n\n\n\n48\n\npossibilidades n\u00e3o ser\u00e3o pratic\u00e1veis, uma vez que a simula\u00e7\u00e3o \u00e9 aplicada se n\u00e3o houver mais\n\nnenhum meio confi\u00e1vel de obter os dados.\n\n3.4. Compara\u00e7\u00e3o de Duas Alternativas de Projetos de Sistemas\n\n[BANKS et al., 1999] afirma que um dos mais importantes usos da simula\u00e7\u00e3o \u00e9 a\n\ncompara\u00e7\u00e3o de projetos alternativos de sistemas, e apresenta m\u00e9todos estat\u00edsticos que podem\n\nser usados para comparar duas ou mais projetos de sistemas com base em alguma medida de\n\ndesempenho. Duas abordagens estat\u00edsticas ser\u00e3o apresentadas, uma baseada no c\u00e1lculo de um\n\nintervalo de confian\u00e7a entre as diferen\u00e7as dos valores esperados da medida de desempenho,\n\ntempo de resposta, por exemplo, para cada alternativa de projeto de sistema. Esta t\u00e9cnica de\n\nabordagem quantifica estas diferen\u00e7as, se estas existirem. E outra baseada na realiza\u00e7\u00e3o de um\n\nteste de hip\u00f3teses, para verificar se as diferen\u00e7as nos valores esperados das duas vari\u00e1veis,\n\nexpressivamente, n\u00e3o conduzem a um valor nulo, de modo que os resultados entre as\n\ndiferen\u00e7as conduzem a uma aceita\u00e7\u00e3o ou rejei\u00e7\u00e3o da hip\u00f3tese testada. A t\u00e9cnica estat\u00edstica\n\nutilizada ser\u00e1 baseada no c\u00e1lculo do intervalo de confian\u00e7a. Os desvios padr\u00e3o obtidos ser\u00e3o\n\nanalisados para verificar de que forma os resultados obtidos distribuem-se, isto \u00e9, se a\n\ndistribui\u00e7\u00e3o \u00e9  mais, ou menos, dispersa.\n\nA medida m\u00e9dia de desempenho para o sistema i ser\u00e1 denotada por ?i (i = 1,2). O\n\nobjetivo dos experimentos de simula\u00e7\u00e3o \u00e9 obter pontos e intervalos estimados das diferen\u00e7as\n\nno desempenho m\u00e9dio, denotado por ?1 - ?2. Quando se comparam duas alternativas de\n\nsistemas, faz-se necess\u00e1rio decidir o tamanho das replica\u00e7\u00f5es T(i)E para cada modelo (i = 1,2),\n\ne o n\u00famero de replica\u00e7\u00f5es Ri realizada para cada modelo, ent\u00e3o para r replica\u00e7\u00f5es do sistema\n\ni, obt\u00e9m-se uma estimativa Yri da medida m\u00e9dia de desempenho, ?i. Das simula\u00e7\u00f5es dos dois\n\nmodelos de sistema obt\u00e9m-se os valores m\u00e9dios denotado atrav\u00e9s de ?i, para i variando no\n\nintervalo (1,2), sendo assim, do resultado de r simula\u00e7\u00f5es para cada modelo de sistema obter-\n\nse-\u00e1 um valor m\u00e9dio. Ao t\u00e9rmino das simula\u00e7\u00f5es realizadas dos dois sistemas modelados\n\nobt\u00e9m-se os valores m\u00e9dios, ?1 e ?2, que indicam estimativas (pontuais) da verdadeira m\u00e9dia\n\nde cada um. Como o objetivo \u00e9 a constata\u00e7\u00e3o da exist\u00eancia, ou n\u00e3o, de diferen\u00e7as entre estes\n\ndois sistemas ou alternativas, opera-se ?1 - ?2, que se trata de uma estimativa, tamb\u00e9m\n\npontual, para a diferen\u00e7a entre ambos. A conclus\u00e3o final ser\u00e1 baseada na relev\u00e2ncia das\n\n\n\n49\n\ndiferen\u00e7as entre ?1 - ?2, ent\u00e3o se pressup\u00f5em a determina\u00e7\u00e3o de um intervalo de confian\u00e7a\n\npara a estimativa pontual da diferen\u00e7a ? (? = ?1 - ?2) entre os valores m\u00e9dios.\n\nTr\u00eas m\u00e9todos de computar o intervalo de confian\u00e7a ?1 -?2 ser\u00e3o discutidos,\n\nconsiderando os valores de sa\u00edda encontrados, e tr\u00eas poss\u00edveis conclus\u00f5es poder\u00e3o ser tiradas\n\nap\u00f3s o c\u00e1lculo do intervalo:\n\n\u2022 O intervalo de confian\u00e7a de ?1 - ?2 est\u00e1 \u00e0 esquerda de zero. Neste caso, afirma-se\n\nque existe uma forte evid\u00eancia a favor da hip\u00f3tese de que ?1 - ?2 &lt;0 ou, de forma\n\nequivalente, que ?1 &lt;?2;\n\n\u2022 O intervalo de confian\u00e7a de ?1 - ?2 est\u00e1 \u00e0 direita de zero. Neste caso, afirma-se que\n\nexiste uma forte evid\u00eancia a favor da hip\u00f3tese de que ?1 - ?2 > 0 ou, de forma\n\nequivalente, que ?1 > ?2;\n\n\u2022 O intervalo de confian\u00e7a de ?1 \u2013 ?2 cont\u00e9m o zero. Neste caso, com base nos dados\n\ndispon\u00edveis, n\u00e3o se pode afirmar que exista uma forte evid\u00eancia estat\u00edstica a favor\n\nda hip\u00f3tese de que um dos sistemas seja melhor do que o outro.\n\nPara uma melhor compreens\u00e3o dos tr\u00eas m\u00e9todos de computar o intervalo de confian\u00e7a,\n\na distin\u00e7\u00e3o entre signific\u00e2ncias estat\u00edstica e pr\u00e1tica, para desempenho de sistemas, deve ser\n\nestabelecida. [BANKS, 1999] define signific\u00e2ncia estat\u00edstica como a fun\u00e7\u00e3o dos\n\nexperimentos de simula\u00e7\u00e3o e dos seus dados de sa\u00edda. Se os dados coletados s\u00e3o suficientes\n\npara garantir que as diferen\u00e7as observadas s\u00e3o reais e \u00e9 poss\u00edvel concluir considerando 1 ou 2,\n\nent\u00e3o as evid\u00eancias estat\u00edsticas existem, e pode-se afirmar que existe uma signific\u00e2ncia\n\nestat\u00edstica entre as diferen\u00e7as. Mas se a conclus\u00e3o recai no item 3, as evid\u00eancias citadas n\u00e3o\n\nexistem, logo n\u00e3o existe signific\u00e2ncia estat\u00edstica entre as diferen\u00e7as mesmo considerando que\n\nos dois modelos de sistemas s\u00e3o diferentes.\n\n[BANKS, 1999] define signific\u00e2ncia pr\u00e1tica como a fun\u00e7\u00e3o da real diferen\u00e7a entre os\n\nsistemas, independente dos experimentos simulados. Ent\u00e3o ser\u00e1 a diferen\u00e7a entre ?1 - ?2\nsuficientemente grande para justificar a decis\u00e3o a ser tomada? Considerando a hip\u00f3tese da\n\nexist\u00eancia de dois projetos alternativos de sistemas, sistemas 1 e 2, onde o tempo de resposta\n\ndos dois \u00e9 t\u00e3o insignificante que passa desapercebido pelo usu\u00e1rio, pode-se concluir que do\n\nponto de vista pr\u00e1tico tanto faz a implementa\u00e7\u00e3o de 1 ou 2.\n\n\n\n50\n\nPode-se concluir, considerando as signific\u00e2ncias estat\u00edstica e pr\u00e1tica, que a t\u00e9cnica de\n\nintervalos de confian\u00e7a n\u00e3o condiciona a uma tomada de decis\u00e3o considerando a pergunta\n\nrelacionada \u00e0 quest\u00e3o da signific\u00e2ncia pr\u00e1tica. Entretanto se aspectos cient\u00edficos precisam ser\n\nconsiderados, a signific\u00e2ncia estat\u00edstica aumenta em relev\u00e2ncia, podendo-se afirmar com\n\nprobabilidade 1- ? ?que a real diferen\u00e7a entre ?1 e ?2 encontra-se entre limites definidos. Ent\u00e3o\n\nestas considera\u00e7\u00f5es depender\u00e3o, significativamente, dos aspectos considerados importantes\n\nenvolvidos, e o problema sob an\u00e1lise que precisa ser resolvido.\n\n3.4.1. Determina\u00e7\u00e3o do Intervalo de Confian\u00e7a para Avaliar Diferen\u00e7as\nEntre Dois Projetos Alternativos de Sistemas\n\nPara se estabelecer o intervalo de confian\u00e7a da diferen\u00e7a entre as duas m\u00e9dias\n\namostrais, \u00e9 necess\u00e1rio que o n\u00famero de observa\u00e7\u00f5es presentes nas duas sejam iguais logo r1\n\n= r2. A partir desta igualdade s\u00e3o ent\u00e3o estabelecidos pares de valores, uma vez que cada\n\namostra do modelo de sistema 1 possui um correspondente no modelo de sistema 2. Deste\n\nconjunto de pares calcula-se as diferen\u00e7as entre cada elemento Y1j da amostra 1 e seu par\n\ncorrespondente Y2j da amostra 2, isto \u00e9, Dj = Y1j - Y2j, para j = 1, 2, ...r. Desta forma, os Dj\u2019s,\n\ns\u00e3o vari\u00e1veis aleat\u00f3rias i.i.d (independentemente e identicamente distribu\u00eddas) e E(Dj) = ? ser\u00e1\n\numa estimativa pontual da m\u00e9dia destas diferen\u00e7as. Do valor ? deseja-se calcular o intervalo\n\nde confian\u00e7a, chegando-se \u00e0 estimativa da m\u00e9dia amostral.\n\nPara o c\u00e1lculo do intervalo de confian\u00e7a, primeiramente define-se o valor de )( rD , isto\n\n\u00e9, a m\u00e9dia das diferen\u00e7as para todas as r amostras.\n\nr\n\nD\n\nD\n\nr\n\nj\nj\n\nr\n\n?\n=\n\n=\n1\n\n)(\n\nFig. 3.4 M\u00e9dia das diferen\u00e7as\n\nA vari\u00e2ncia deste valor ser\u00e1 dada por:\n\n\n\n51\n\n)1(\n\n][\n1\n\n2\n)(\n\n][\n2\n\n)(\n?\n\n?\n=\n\n?\n=\n\nrr\n\nDD\nS\n\nr\n\nj\nrj\n\nD r\n\nFig. 3.5 Vari\u00e2ncia\n\nO desvio-padr\u00e3o ser\u00e1:\n\n][\n2\n\n][ )()( rr\nDD\n\nSs =\n\nFig. 3.6 Desvio padr\u00e3o\n\n[BARBETTA, 1998] caracteriza a vari\u00e2ncia e o desvio padr\u00e3o como medidas que\n\nfornecem informa\u00e7\u00f5es complementares \u00e0 informa\u00e7\u00e3o contida na m\u00e9dia aritm\u00e9tica, usada no\n\nc\u00e1lculo da vari\u00e2ncia. Elas avaliam a dispers\u00e3o do conjunto de valores em an\u00e1lise.\n\nO valor do intervalo de confian\u00e7a, para 100(1-?) \u00e9 dado por:\n\n][2/1,1)( )( rDrr\nstD ???\u00b1\n\nFig. 3.7 Intervalo de confian\u00e7a\n\nO intervalo de confian\u00e7a ser\u00e1 igual \u00e0 probabilidade 1-? se os Dj\u2019s forem normalmente\n\ndistribu\u00eddos. Do contr\u00e1rio a probabilidade ser\u00e1 pr\u00f3xima de 1-?, na medida que r aumentar,\n\nobedecendo o teorema do limite central. Para r &lt;30, normalmente, emprega-se os valores da\n\ndistribui\u00e7\u00e3o t.\n\nA abordagem fornecida pela figura 3.7 para o c\u00e1lculo do intervalo de confian\u00e7a, para\n\nas diferen\u00e7as entre amostras pareadas, reduz um problema baseado em duas amostras, para\n\num envolvendo uma \u00fanica, as diferen\u00e7as Dj\u2019s.\n\nEste cap\u00edtulo descreveu de maneira geral o uso da metodologia para avalia\u00e7\u00e3o de\n\ndesempenho de sistemas computacionais, abordando suas etapas na compreens\u00e3o do ambiente\n\nestudado, e a defini\u00e7\u00e3o e caracteriza\u00e7\u00e3o da sua carga de trabalho para o desenvolvimento de\n\nmodelos de cargas e desempenho visando estabelecer padr\u00f5es para caracteriza\u00e7\u00e3o do modelo\n\nreal de um ambiente computacional. Al\u00e9m de t\u00e9cnicas estat\u00edsticas para a compara\u00e7\u00e3o de duas\n\nalternativas de projetos de sistemas.\n\nO cap\u00edtulo seguinte apresenta a aplica\u00e7\u00e3o da metodologia considerando os dois\n\nmodelos de ambientes que ser\u00e3o analisados, modelados e simulados no software ARENA,\n\nsuas simula\u00e7\u00f5es, bem como a an\u00e1lise dos resultados obtidos.\n\n\n\n52\n\n4. Aplica\u00e7\u00e3o da Metodologia no Contexto DETRAN-PA\n\nEste cap\u00edtulo aborda a aplica\u00e7\u00e3o da Metodologia de Planejamento de Capacidade e\n\nAn\u00e1lise Desempenho de Sistemas mostrada no cap\u00edtulo 3. Neste cap\u00edtulo ser\u00e3o descritos: O\n\nentendimento do ambiente, considerando seus elementos relevantes para os objetivos a que se\n\nprop\u00f5e este trabalho, para a avalia\u00e7\u00e3o de desempenho dos dois modelos cliente/servidor, 2-\n\ncamadas e 3-camadas, as vari\u00e1veis de desempenho associadas ao neg\u00f3cio, a carga e o modelo\n\nde carga, ao que o ambiente ser\u00e1 submetido. Nele tamb\u00e9m ser\u00e1 desenvolvido o modelo de\n\ndesempenho, definido o projeto experimental e analisado os resultados obtidos a partir dos\n\nexperimentos simulados.\n\n4.1. Entendimento do Ambiente DETRAN-PA\n\nO Departamento de Tr\u00e2nsito do Estado do Par\u00e1 (DETRAN-PA) \u00e9 composto por uma\n\nLAN localizada em sua sede, na capital Bel\u00e9m, mais o chamado posto avan\u00e7ado que se\n\nlocaliza a alguns quil\u00f4metros da sede e uma WAN que interliga os demais pontos distribu\u00eddos\n\npelo Estado. A LAN \u00e9 composta por 415 pontos na sede dispostos em v\u00e1rias diretorias e\n\nsetores em uma \u00e1rea de aproximadamente 10.600 m2 quadrados e 21 pontos no posto\n\navan\u00e7ado, localizado tamb\u00e9m na capital a uns 7 quil\u00f4metros da sede. Este posto comunica-se\n\ncom a sede atrav\u00e9s de um roteador utilizando um link de 120 Kbytes. Estes pontos s\u00e3o todos\n\nconectados a Hubs de 10 e 100 Mbits e interligam PC tamb\u00e9m com placa de rede de 10 e de\n\n100 Mbits. As chamadas CIRETRANS (Circunscri\u00e7\u00f5es Regionais de Tr\u00e2nsito), que comp\u00f5em\n\na WAN, s\u00e3o em n\u00famero de 15 e possuem 131 pontos espalhados por 15 munic\u00edpios,\n\ninterligados por hubs de 10 e 100 Mbits e placas de rede de 10 e 100 Mbits interligando-se\n\ncom a sede atrav\u00e9s de roteadores utilizando um link dedicado de 64 KBytes. Dentre os v\u00e1rios\n\nsetores que comp\u00f5em o ambiente computacional do DETRAN-PA o foco de estudo ser\u00e1 o\n\nsetor de atendimento referente \u00e0 habilita\u00e7\u00e3o de condutores que \u00e9 composto por 19 P C  e\n\nutilizam hubs de 10 Mbits. A figura 4.1 ilustra de maneira simplificada o ambiente sob\n\nestudo.\n\n\n\n53\n\nFig. 4.1 O ambiente DETRAN-PA\n\n\u2022 Hardware: Os PC clientes, incluindo LAN e WAN, s\u00e3o processadores da fam\u00edlia\n\nIntel do tipo Celeron, Pentium II e algumas m\u00e1quinas da fam\u00edlia AMD. O servidor\n\nde autentica\u00e7\u00e3o/arquivos possui um processador Pentium III, o servidor de banco\n\nde dados \u00e9 uma m\u00e1quina HP RISC L200 multiprocessada, o servidor de aplica\u00e7\u00e3o\n\nlocaliza-se em outra RISC L1000 com um processador, e o gateway possui um\n\nprocessador Pentium III. Existem ainda mais dois servidores n\u00e3o representados na\n\nfigura 4.1, tratam-se dos servidores Web e DNS. O servidor Web \u00e9 da plataforma\n\nIntel e possui dois processadores Pentium III, e assume tamb\u00e9m o papel de\n\nservidor DNS. A rede local \u00e9 uma Ethernet conectada por placas de rede e hubs  de\n\n10 e 100 Mbits. Existem ainda tr\u00eas switches ethernet n\u00edvel 3 de 100 Mbits que\n\nalimentam todos os hubs e mais um quarto, tamb\u00e9m n\u00edvel 3 e de 100MBits, ao\n\nqual os outros est\u00e3o conectados atrav\u00e9s de meio \u00f3tico, este quarto switch tamb\u00e9m\n\nalimenta os tr\u00eas servidores.\n\n\u2022 Softwares: A figura 4.1 mostra alguns dos servidores do Departamento de\n\nTr\u00e2nsito do Estado do Par\u00e1. A m\u00e1quina RISC roda o sistema operacional de rede\n\nHPUX e cont\u00e9m duas inst\u00e2ncias banco de dados Oracle8i, uma de\n\ndesenvolvimento contendo os dados migrados do banco ADABAS e outra\n\ncontendo as informa\u00e7\u00f5es referentes ao sistema de Legisla\u00e7\u00e3o, que controla um dos\n\n\n\n54\n\nrequisitos necess\u00e1rios para emiss\u00e3o da Carteira Nacional de Habilita\u00e7\u00e3o, que est\u00e1\n\nem produ\u00e7\u00e3o. Esta m\u00e1quina tamb\u00e9m possui o sistema de informa\u00e7\u00e3o do\n\nDETRAN-PA, desenvolvido em linguagem de programa\u00e7\u00e3o NATURAL que\n\nacessa um banco de dados ADABAS. O servidor para autentica\u00e7\u00e3o dos usu\u00e1rios\n\nda rede roda o sistema operacional Windows2000, tratando-se assim de uma rede\n\nMicrosoft. O gateway rodando o Microsoft SNA Server sob Windows NT 4.0, para\n\nintegra\u00e7\u00e3o com o sistema legado, possui uma DLL (Dynamic Linked Library),\n\ndesenvolvida no ambiente Microsoft Visual C++, respons\u00e1vel pela comunica\u00e7\u00e3o\n\ndo DETRAN com o SERPRO (Servi\u00e7o Federal de Processamento de Dados), uma\n\nvez que algumas informa\u00e7\u00f5es referentes aos condutores e ve\u00edculos necessitam\n\nestar replicadas na base SERPRO para controle de fraudes em \u00e2mbito nacional. O\n\nservidor Web \u00e9 tamb\u00e9m Windows2000 com Internet Information Server, os\n\nservidores de ftp e o servidor de e-mail Exchange Server, al\u00e9m de servidor DNS.\n\nTodos os PCs clientes rodam o SO Windows 98 e possuem clientes de e-mail e\n\nbrowsers, al\u00e9m do pacote office (Staroffice da Sun Microsystems ou MSOffice da\n\nMicrosoft) contendo processador de texto, planilha eletr\u00f4nica e software para\n\ncria\u00e7\u00e3o de apresenta\u00e7\u00f5es. Os PC do setor de inform\u00e1tica possuem clientes ftp para\n\nrecebimento dos arquivos texto das multas recolhidas pela Prefeitura de Bel\u00e9m,\n\nal\u00e9m de emuladores de terminal utilizados para acessar o sistema de informa\u00e7\u00e3o\n\ndo DETRAN. As m\u00e1quinas clientes deste setor possuem ainda o ambiente para\n\ndesenvolvimento de sistemas de informa\u00e7\u00e3o Delphi 5 e software cliente para\n\nacesso ao banco de dados Oracle, algumas delas possuem ainda o banco de dados\n\nInterbase que se encontra sob estudo para desenvolvimento de futuros sistemas,\n\nsoftwares para cria\u00e7\u00e3o e publica\u00e7\u00e3o de home pages, como o Microsoft Front Page,\n\ntamb\u00e9m s\u00e3o utilizados. As m\u00e1quinas clientes do setor de atendimento aos usu\u00e1rios\n\ndos servi\u00e7os do DETRAN utilizam apenas os emuladores de terminal e o pacote\n\noffice. O setor de legisla\u00e7\u00e3o, respons\u00e1vel pela impress\u00e3o das provas sobre\n\nlegisla\u00e7\u00e3o de tr\u00e2nsito, possui um SI que controla a impress\u00e3o e corre\u00e7\u00e3o das\n\nprovas al\u00e9m do cliente para acessar o banco de dados Oracle. Outros softwares,\n\neditora\u00e7\u00e3o de imagens, como Corel Draw e Adobe Photoshop s\u00e3o utilizados pelas\n\nacess\u00f3rias como a Acess\u00f3ria de Comunica\u00e7\u00e3o.\n\n\u2022 Elementos de Conectividade e Protocolos: A LAN roda sob o conjunto de\n\nprotocolos Internet TCP/IP, por\u00e9m o gateway roda sob o protocolo LU6.4 que \u00e9\n\n\n\n55\n\npadr\u00e3o para comunica\u00e7\u00e3o entre mainframes. A WAN tamb\u00e9m roda sobre a pilha\n\nde protocolos TCP/IP.\n\n4.2. As Vari\u00e1veis de Desempenho Associadas ao Neg\u00f3cio\n\nA Lei n\u00ba 9.503, de 23 de setembro de 1997, institui o novo C\u00f3digo de Tr\u00e2nsito\n\nBrasileiro (CTB). Deste modo todos os DETRAN\u2019s s\u00e3o obrigados a adequar-se \u00e0s novas\n\nregras estabelecidas pelo CTB como: organizar e manter o Registro Nacional de Carteiras de\n\nHabilita\u00e7\u00e3o (RENACH) e o Registro Nacional de Ve\u00edculos Automotores (RENAVAM)\n\n[DENATRAN, 2002]. Estes registros cont\u00eam os dados cadastrais sobre todos os condutores\n\nde ve\u00edculos e todos os ve\u00edculos automotores de um Estado. Al\u00e9m disto alguns dados\n\nidentificat\u00f3rios referentes aos condutores e ve\u00edculos precisam ser replicados ao SERPRO para\n\no exerc\u00edcio de um controle em \u00e2mbito nacional de poss\u00edveis fraudes envolvendo estes\n\ncondutores e ve\u00edculos.\n\nCom o novo CTB e suas modifica\u00e7\u00f5es o DETRAN-PA adequou seu SI \u00e0s novas\n\nmodifica\u00e7\u00f5es, o sistema compreende dois m\u00f3dulos, RENACH e RENAVAM, respons\u00e1veis\n\npor todos os servi\u00e7os envolvendo condutores e ve\u00edculos.Os dois m\u00f3dulos citados foram\n\noriginalmente portados para o ambiente centralizado, utilizando um IBM 9672 R24\n\npertencente ao PRODEPA (Processamento de Dados do Estado do Par\u00e1). O DETRAN-PA\n\nutilizava apenas terminais e o tempo de resposta do sistema n\u00e3o era comprometido apesar de\n\npossuir muitos pontos espalhados pelo Estado, o banco de dados era portado para mainframe e\n\nmesmo em momentos de pico o throughput, envolvendo o n\u00famero de requisi\u00e7\u00f5es por\n\nsegundo, no banco de dados ADABAS tamb\u00e9m n\u00e3o era problema.\n\nA administra\u00e7\u00e3o de 1997 iniciou, substitui\u00e7\u00e3o dos terminais por PC na sede e em todos\n\nos pontos espalhados pelo Estado, a cria\u00e7\u00e3o das LAN e WAN do DETRAN-PA baseadas em\n\nredes Microsoft utilizando servidores Windows NT. Os PC utilizavam emuladores de terminal\n\npara acessar o banco de dados na m\u00e1quina IBM e todos os usu\u00e1rios necessitavam ser\n\nautenticados para utilizar os recursos da rede. O tempo de resposta e o throughput do sistema\n\npermaneceram inalterados com as modifica\u00e7\u00f5es pelo qual passou o Departamento.\n\nO elevado custo do ambiente legado e a dificuldade na manuten\u00e7\u00e3o de seus\n\nprogramas, levaram, em 1999, ao in\u00edcio do projeto de um novo sistema baseado no modelo\n\ncliente/servidor 2-camadas que substituiria o sistema legado. Ele possu\u00eda como front end uma\n\n\n\n56\n\nGUI desenvolvida  no ambiente Borland Delphi 5.0 e como back end o banco de dados\n\nOracle8i, os clientes eram processadores da fam\u00edlia Celeron com SO Windows 98 e um\n\nservidor de com processador Pentium II para servidor de banco de dados. O servi\u00e7o de\n\nprimeira habilita\u00e7\u00e3o foi o primeiro a ser testado, devido representar o maior n\u00famero de\n\nrequisi\u00e7\u00f5es ao banco de dados em rela\u00e7\u00e3o aos outros servi\u00e7os envolvendo condutores. O teste\n\ninicial foi no Departamento de Inform\u00e1tica utilizando cinco clientes, o teste seguinte ocorreu\n\nno posto avan\u00e7ado do DETRAN-PA. No primeiro teste o tempo de resposta permaneceu\n\naceit\u00e1vel, por\u00e9m no segundo foi muito elevado, o throughput foi desconsiderado nos testes,\n\nmas ficou claro que seria necess\u00e1rio um servidor mais robusto para o banco de dados. Havia\n\nainda um complicador, pois o servidor do SERPRO onde as informa\u00e7\u00f5es locais de cada\n\nDETRAN est\u00e3o armazenadas \u00e9 um mainframe que se comunica atrav\u00e9s do protocolo LU6.4\n\nenquanto que a rede DETRAN baseava-se nos protocolos TCP/IP. Existia a possibilidade do\n\nuso de ODBC, mas era uma alternativa de custo elevado. Essa problem\u00e1tica levou ao\n\ndesenvolvimento de uma DLL, localizada no gateway, respons\u00e1vel pela comunica\u00e7\u00e3o com o\n\nservidor do SERPRO. A figura 4.2 mostra o modelo de requisi\u00e7\u00f5es ao banco de dados\n\nconsiderando apenas a LAN.\n\nFig. 4.2 Requisi\u00e7\u00f5es ao Servidor de Banco de Dados\n\nRecentemente foi realizado o downsizing da m\u00e1quina IBM para a m\u00e1quina RISC,\n\neliminando assim a utiliza\u00e7\u00e3o do mainframe. Uma alternativa de projeto utilizando o conceito\n\nde AppServer est\u00e1 sendo estudada para viabilizar a utiliza\u00e7\u00e3o do SI do DETRAN-PA dentro\n\nda arquitetura cliente/servidor 3-camadas.\n\n\n\n57\n\n4.3. Descri\u00e7\u00e3o da Carga e do Modelo de Carga para o Ambiente em\nEstudo\n\nEste item tem como objetivo descrever  a carga de trabalho a que esta submetida o\n\nambiente computacional do DETRAN-PA segundo a metodologia abordada no cap\u00edtulo 3.\n\nEsta descri\u00e7\u00e3o limita-se \u00e0 utiliza\u00e7\u00e3o do servidor de banco de dados, uma vez que os dois\n\nmodelos de simula\u00e7\u00e3o ser\u00e3o submetidos \u00e0 mesma carga.\n\nOs dois m\u00f3dulos, RENACH e RENAVAM, do SI do DETRAN-PA s\u00e3o respons\u00e1veis\n\npela carga total a que o servidor de banco de dados \u00e9 submetido. Cada servi\u00e7o, referente a\n\ncondutor ou ve\u00edculo, do Departamento de Tr\u00e2nsito pode ser decomposto em um determinado\n\nn\u00famero de transa\u00e7\u00f5es SQL: Select, Insert, Delete e Update. As informa\u00e7\u00f5es sobre estas\n\ntransa\u00e7\u00f5es foram obtidas durante a modelagem do novo sistema cliente/servidor mais\n\ninforma\u00e7\u00f5es adicionais fornecidas pelo Departamento de Inform\u00e1tica, o que permitiu definir a\n\nquantidade de Inserts e Updates para os servidores envolvendo o m\u00f3dulo RENACH. Por\u00e9m\n\npor falta de informa\u00e7\u00f5es mais detalhadas os Selects e Deletes, ser\u00e3o ignorados, e os Updates\n\npor compreenderem uma fase onde o intervalo de tempo para sua execu\u00e7\u00e3o n\u00e3o \u00e9\n\ndeterminado, dependendo de intera\u00e7\u00f5es externas, ser\u00e3o tamb\u00e9m ignorados.\n\n4.3.1. Caracteriza\u00e7\u00e3o da Carga de Trabalho\n\nA figura 4.3 mostra a caracteriza\u00e7\u00e3o dos componentes b\u00e1sicos de requisi\u00e7\u00f5es ao\n\nservidor de banco de dados. Enquanto a tabela 4.1 mostra os componentes b\u00e1sicos e os\n\npar\u00e2metros de intensidade (IC) e demanda por recursos (DS).\n\n\n\n58\n\nFig. 4.3 Caracteriza\u00e7\u00e3o dos componentes b\u00e1sicos\n\nComponente b\u00e1sico Par\u00e2metro\n\nN\u00ba Clientes IC\n\nN\u00ba Transa\u00e7\u00f5es/Cliente IC\n\nN\u00ba de I/Os ao servidor de banco de dados DS\n\nUtiliza\u00e7\u00e3o da CPU servidor de banco de dados DS\n\nTamanho das mensagens enviadas/recebidas pelo servidor\n\nde banco de dados\nDS\n\nTab. 4.1 Componentes b\u00e1sicos e par\u00e2metros\n\nCada servi\u00e7o envolve quatro principais tabelas, que para simplifica\u00e7\u00e3o ser\u00e3o\n\ndenotadas: Tabela01 at\u00e9 Tabela04. Cada tabela recebe um tipo de Insert, em considera\u00e7\u00e3o \u00e0s\n\nsuas diferentes estruturas, que pode ser considerado padr\u00e3o, quando analisado um conjunto de\n\ndois ou mais servi\u00e7os. O servi\u00e7o de primeira habilita\u00e7\u00e3o, por exemplo, gera 4 Inserts.A tabela\n\n4.2 mostra o n\u00famero de I/O realizado no servidor para um tamanho m\u00e9dio de mensagens\n\nenvolvendo a opera\u00e7\u00e3o de Insert.\n\n\n\n59\n\nTabela TextData (bytes) I/Os\n\n01 545 50,3\n\n02 219 29,0\n\n03 153 34,1\n\n04 151 26,5\n\nTab. 4.2 I/O para requisi\u00e7\u00f5es Insert\n\nAssim o modelo de carga a do ambiente DETRAN-PA pode ser compreendido como\n\num conjunto de requisi\u00e7\u00f5es SQL, Inserts, \u00e0s quais o servidor de banco de dados \u00e9 submetido.\n\nFaz-se necess\u00e1rio esclarecer que apesar do banco de dados do Departamento de Tr\u00e2nsito ser o\n\nOracle 8i, os testes acima foram realizados no banco de dados Microsoft SQL 2000 Server.\n\n4.3.2. Os Servi\u00e7os e seu Fluxo de Solicita\u00e7\u00e3o\n\nSer\u00e3o considerados apenas os servi\u00e7os envolvendo condutores de ve\u00edculos, uma vez\n\nque  as informa\u00e7\u00f5es existentes s\u00e3o referentes a esta classe de servi\u00e7o. A Primeira Habilita\u00e7\u00e3o\n\npode ser utilizada como exemplo para compreens\u00e3o dos demais servi\u00e7os, pois cont\u00e9m o maior\n\nn\u00famero de requisi\u00e7\u00f5es a tabelas do banco de dados, os demais podem ser entendidos como\n\num subconjunto destas requisi\u00e7\u00f5es. Os servi\u00e7os somam um n\u00famero de sete: Primeira\n\nHabilita\u00e7\u00e3o, Reabilita\u00e7\u00e3o, Renova\u00e7\u00e3o, Mudan\u00e7a de Categoria, Segunda Via da CNH, Emiss\u00e3o\n\nda CNH Definitiva e Adi\u00e7\u00e3o de Categoria. Cada cliente pode realizar qualquer servi\u00e7o, que\n\ncorresponde um n\u00famero de requisi\u00e7\u00f5es Inserts ao banco de dados, e o servi\u00e7o \u00e9 dado como\n\nconclu\u00eddo quando uma seq\u00fc\u00eancia destas requisi\u00e7\u00f5es \u00e9 processada por completo. Como a\n\nreabilita\u00e7\u00e3o \u00e9 uma nova primeira habilita\u00e7\u00e3o, e as sua porcentagem em rela\u00e7\u00e3o aos outros\n\nservi\u00e7os \u00e9 pequena, eles ser\u00e3o considerados apenas um servi\u00e7o.\n\nAs requisi\u00e7\u00f5es possuem todas a mesma prioridade com os servidores atendendo-as\n\nsegundo o padr\u00e3o FIFO (fisrt in first out), em ambientes multiprocessados existe a\n\npossibilidade de v\u00e1rias requisi\u00e7\u00f5es serem processadas ao mesmo tempo (multithread). O\n\nAppServer, no entanto, segue uma regra de prioridade para as requisi\u00e7\u00f5es: mensagens de\n\nservi\u00e7o completadas possuem prioridade sobre as de servi\u00e7o solicitado, assim quando uma\n\nmensagem de servi\u00e7o completada chega ao AppServer ele a processa e se n\u00e3o houver outras\n\n\n\n60\n\nna fila passa a atender \u00e0s solicita\u00e7\u00f5es de servi\u00e7os. A tabela 4.3 mostra a rela\u00e7\u00e3o de servi\u00e7os e\n\nas suas respectivas quantidades de requisi\u00e7\u00f5es.\n\nServi\u00e7os N\u00ba Inserts\n\nRenova\u00e7\u00e3o 3\n\nPrimeira Habilita\u00e7\u00e3o 4\n\nReabilita\u00e7\u00e3o 4\n\nEmiss\u00e3o da CNH Definitiva 3\n\nMudan\u00e7a de Categoria 3\n\nSegunda Via da CNH 3\n\nAdi\u00e7\u00e3o de Categoria 3\n\nTab. 4.3Servi\u00e7os com suas requisi\u00e7\u00f5es\n\nA figura 4.4 mostra o fluxo das requisi\u00e7\u00f5es, para a arquitetura 2-camadas, ao banco de\n\ndados considerando a LAN do DETRAN-PA. Embora o modelo 3-camadas n\u00e3o esteja\n\nconclu\u00eddo a figura 4.5 mostra a descri\u00e7\u00e3o l\u00f3gica deste modelo.\n\nFig. 4.4 Fluxo Informa\u00e7\u00e3o modelo 2-camadas\n\n\n\n61\n\nFig. 4.5 Fluxo Informa\u00e7\u00e3o modelo 3-camadas\n\n4.4. Desenvolvimento do Modelo de Desempenho para o Ambiente Sob\nEstudo\n\nComo descrito no item 4.2 o downsizing do mainframe IBM para a plataforma\n\ncliente/servidor 2-camadas provocou um alto tempo de resposta no sistema quando\n\ninicializado  remotamente, da\u00ed o surgimento da alternativa em 3-camadas. A maior parte do SI\n\nfoi desenvolvido em 2-camadas, sendo que apenas alguns pequenos m\u00f3dulos funcionam em\n\n3-camadas e sua maioria existe s\u00f3 na forma de proposta de projeto. Os modelos de simula\u00e7\u00e3o\n\ncompreender\u00e3o apenas a LAN e seu clientes, isto devido ao fato da dificuldade na coleta de\n\ninforma\u00e7\u00f5es perante o setor de Infraestrutura do Departamento de Tr\u00e2nsito referente aos\n\nroteadores, links e um mapeamento mais detalhado da WAN. Este item descrever\u00e1 a cria\u00e7\u00e3o\n\nde dois modelos de simula\u00e7\u00e3o no ARENA (Systems Modeling Corporation) para an\u00e1lise do\n\ncomportamento das duas alternativas de sistemas.\n\nComo mencionado anteriormente, item 4.3.2, os servi\u00e7os do DETRAN que ser\u00e3o\n\nsimulados referem-se aos condutores, m\u00f3dulo RENACH, totalizando um n\u00famero de sete. Os\n\n\n\n62\n\ndois modelos de desempenho foram constru\u00eddos baseados no item 4.3.2. O anexo A mostra a\n\ndescri\u00e7\u00e3o gr\u00e1fica dos modelos.\n\nAs distribui\u00e7\u00f5es que representam o tr\u00e1fego gerado pelas solicita\u00e7\u00f5es clientes foram\n\nextra\u00eddas de uma planilha, localizada no anexo B deste trabalho, fornecida pelo Departamento\n\nde Inform\u00e1tica do DETRAN. Ela cont\u00e9m o n\u00famero de servi\u00e7os RENACH realizados durante\n\no per\u00edodo de 2001. O n\u00famero de servi\u00e7os de cada m\u00eas foi dividido pelo valor 43.200\n\n(quantidade de minutos em 1 m\u00eas) para obten\u00e7\u00e3o do n\u00famero de requisi\u00e7\u00f5es por minuto ao\n\nservidor de dados. As doze taxas, correspondentes aos doze meses do ano, de requisi\u00e7\u00f5es\n\nobtidas foram submetidas ao Input Analyser (ferramenta para an\u00e1lise de dados fornecida pelo\n\nARENA) que forneceu as distribui\u00e7\u00f5es mostradas na tabela 4.4\n\nServi\u00e7os Distribui\u00e7\u00e3o\n\nRenova\u00e7\u00e3o 4.35 + LOGN (1.29, 0.964)\n\nPrimeira Habilita\u00e7\u00e3o e Reabilita\u00e7\u00e3o TRIA (1.5, 2.5, 3.5)\n\nEmiss\u00e3o da CNH Definitiva 0.5 + WEIB (1.39, 3.72)\n\nMudan\u00e7a de Categoria NORM (0.756, 0.108)\n\nSegunda Via da CNH TRIA (0.4, 0.583, 0.79)\n\nAdi\u00e7\u00e3o de Categoria LOGN (0.0582, 0.0334)\n\nTab. 4.4 Servi\u00e7os com suas distribui\u00e7\u00f5es\n\nOs tempos entre respostas do servidor de banco e do servidor de aplica\u00e7\u00e3o foram\n\nobtidos utilizando como base o Full Disclosure Report para o Oracle9iAS (Oracle 9i\n\nApplication Server) [THESERVERSIDE, 2002], a parte relevante deste report est\u00e1 localizado\n\nno anexo C deste trabalho. Full Disclosure Report \u00e9 a refer\u00eancia ao relat\u00f3rio imprim\u00edvel em\n\nformato PDF ou HTML  parte de um Full Disclosure. Full Disclosure \u00e9 informa\u00e7\u00e3o gerada\n\nquando um resultado de benchmark, o ECperf, \u00e9 finalizado. O ECperf \u00e9 definido pela [SUN\n\nMICROSYSTEMS, 2002] como: a maneira de medir a escalabilidade e desempenho de\n\nservidores J2EE e containers. Os tempos dos servidores foram determinados, considerando o\n\nECperf  [SUN MICROSYSTEMS, 2002] e o Full Disclosure Report [THESERVERSIDE,\n\n2002], segundo as premissas mostradas abaixo:\n\n\u2022 90% (noventa por cento) das requisi\u00e7\u00f5es devem estar abaixo de 2 segundos;\n\n\n\n63\n\n\u2022 A m\u00e9dia para o tempo de resposta deve ser igual a 0,805 segundo;\n\n\u2022 A capacidade de processamento do servidor de banco de dados deve ser duas\n\nvezes a do servidor de aplica\u00e7\u00e3o.\n\nComo os tr\u00eas primeiros servi\u00e7os da tabela 4.4 representam aproximadamente 90% do\n\ntotal, os demais foram descartados e as distribui\u00e7\u00f5es dos restantes alteradas para 4.35 +\n\nLOGN (1.29, 0.964). Os testes foram ent\u00e3o realizados no modelo de simula\u00e7\u00e3o 3-camadas at\u00e9\n\nque o valor m\u00e9dio para o tempo de resposta atingisse, aproximadamente, o valor 0,805\n\nsegundo. Os valores de tempo determinados, 0,174 segundo para o servidor de aplica\u00e7\u00e3o e\n\n0,087 segundo (0,174 / 2) para o servidor de banco de dados, foram usados como base para os\n\ndemais cen\u00e1rios de simula\u00e7\u00e3o. Os resultados das simula\u00e7\u00f5es constam do anexo D e o cen\u00e1rio\n\nde simula\u00e7\u00e3o alcan\u00e7ado em fun\u00e7\u00e3o destes tempos ser\u00e1 denominado de cen\u00e1rio de equil\u00edbrio.\n\nPara cada cen\u00e1rio, envolvendo as duas propostas de sistema, foram realizados no\n\nArena, 6 replica\u00e7\u00f5es de 500 segundos, totalizando 3000 segundos (50 minutos). As figuras 4.6\n\ne 4.7 mostram os fluxogramas para os modelos 2-camadas e 3-camadas.\n\nFig. 4.6 Fluxo informa\u00e7\u00e3o modelo 2-camadas\n\nREDE  BDSERVER CLIENTE \nServi\u00e7o \n(Inserts)  \n\nProcessa dados \ndo servi\u00e7o \n\nREDE \n\nFim \nprocessamento \n\nMsg. \nconclus\u00e3o \nservi\u00e7o  \n\n\n\n64\n\nFig. 4.7 Fluxo informa\u00e7\u00e3o modelo 3-camadas\n\n4.4.1. Sele\u00e7\u00e3o dos Fatores para as Medidas de Desempenho\n\nParte-se inicialmente de uma lista completa de todos os fatores que podem influenciar\n\nas grandezas de desempenho. Abaixo segue uma descri\u00e7\u00e3o da lista:\n\n\u2022 A carga de servi\u00e7os submetida ao sistema (transa\u00e7\u00f5es SQL);\n\n\u2022 A quantidade de clientes;\n\n\u2022 Tempo de processamento dos clientes;\n\n\u2022 Tempo de processamento do servidor de banco de dados;\n\n\u2022 Tempo de processamento do servidor de aplica\u00e7\u00e3o.\n\nOs fatores da lista acima considerados foram:\n\n\u2022 A carga de servi\u00e7os submetida ao sistema: Como mostrado no item 4.4 a carga de\n\ntrabalho foi modificada para atender as premissas discutidas neste item;\n\n \n\nREDE APPSERVERCLIENTE\nSolicita\u00e7\u00e3o\n\nservi\u00e7o\nVerifica tipo de\n\nmensagem\n\nREDE\n\nFim\nprocessamento\n\nTipMsg = 2\n\nBDSERVER\n\nServi\u00e7o\n(Inserts)\n\nTipMsg = 1\n\nProcessa dados\ndo servi\u00e7oREDEAPPSERVER\n\nVerifica tipo de\nmensagem\n\nMsg. conclus\u00e3o\nservi\u00e7o\n\nREDE\n\nFim\nprocessamento\n\n\n\n65\n\n\u2022 Tempo de processamento do servidor de banco de dados: Como o servidor de\n\nbanco de dados tem duas vezes a velocidade de processamento do servidor de\n\naplica\u00e7\u00e3o, ele ter\u00e1, em hip\u00f3tese, maior influ\u00eancia para o desempenho dos sistemas;\n\n\u2022 Tempo de processamento do servidor de aplica\u00e7\u00e3o: Sua an\u00e1lise dentro do modelo\n\n3-camadas \u00e9 importante para an\u00e1lise dos dois sistemas uma vez que \u00e9 o elemento\n\ndiferencial para as duas arquiteturas.\n\n4.4.2.  Sele\u00e7\u00e3o das M\u00e9tricas de Desempenho\n\nConsiderando que na vis\u00e3o do usu\u00e1rio o tempo de resposta de um sistema \u00e9 a grandeza\n\nde desempenho mais significativa, ele ser\u00e1 o elemento de an\u00e1lise para a avalia\u00e7\u00e3o\n\ncomparativa entre as duas propostas de projeto de sistemas.\n\nPara a estimativa do tempo de resposta n\u00e3o \u00e9 considerado o tempo que o usu\u00e1rio leva\n\npara acionar a solicita\u00e7\u00e3o de um servi\u00e7o. Ele passa a ser computado a partir do momento em\n\nque a solicita\u00e7\u00e3o \u00e9 realizada, at\u00e9 o recebimento da mensagem de conclus\u00e3o do servi\u00e7o. Para o\n\nservi\u00e7o de primeira habilita\u00e7\u00e3o, por exemplo, a contagem para o tempo de resposta seria\n\niniciada no momento em que o usu\u00e1rio clicar no bot\u00e3o de \u201cGravar Servi\u00e7o\u201d de sua inteface\n\ngr\u00e1fica, e seria finalizado quando recebesse a mensagem \u201cDados Gravados\u201d.\n\n4.4.3. Projeto Experimental\n\nA etapa do projeto experimental compreende a identifica\u00e7\u00e3o dos fatores relevantes que\n\npodem influenciar as grandezas de desempenho analisadas, no caso deste trabalho o tempo de\n\nresposta para a conclus\u00e3o de um determinado servi\u00e7o.\n\nComo mostrado no 4.4.1 os fatores considerados foram:\n\n\u2022 A carga de servi\u00e7os submetida ao sistema;\n\n\u2022 Tempo de processamento do servidor de banco de dados;\n\n\n\n66\n\n\u2022 Tempo de processamento do servidor de aplica\u00e7\u00e3o.\n\nOs fatores tempo s\u00e3o variados par a par, a carga de trabalho foi mantida constante\n\ndepois de alcan\u00e7ado o cen\u00e1rio de equil\u00edbrio e cada varia\u00e7\u00e3o dos fatores representa um cen\u00e1rio\n\nde simula\u00e7\u00e3o para cada par de modelos das arquiteturas propostas. As tabelas abaixo mostram\n\nos fatores e seus n\u00edveis utilizados para a realiza\u00e7\u00e3o de todos os cen\u00e1rios de simula\u00e7\u00e3o. Os\n\ntempos s\u00e3o dados em segundos.\n\n\u2022 Cen\u00e1rio 1\n\nFatores N\u00edveis\n\nTempo de processamento do servidor de\n\naplica\u00e7\u00e3o\n0,174\n\nTempo de processamento do servidor de\n\nbanco de dados\n0,087 (0,174 / 2)\n\nTab. 4.5 N\u00edveis dos fatores para cen\u00e1rio 1\n\n\u2022 Cen\u00e1rio 2\n\nFatores N\u00edveis\n\nTempo de processamento do servidor de\n\naplica\u00e7\u00e3o\n0,174\n\nTempo de processamento do servidor de\n\nbanco de dados\n0,0435 (0,174 / 4)\n\nTab. 4.6 N\u00edveis dos fatores para cen\u00e1rio 2\n\n\u2022 Cen\u00e1rio 3\n\nFatores N\u00edveis\n\nTempo de processamento do servidor de\n\naplica\u00e7\u00e3o\n0,174\n\nTempo de processamento do servidor de\n\nbanco de dados\n0,174\n\nTab. 4.7 N\u00edveis dos fatores para cen\u00e1rio 3\n\n\n\n67\n\n\u2022 Cen\u00e1rio 4\n\nFatores N\u00edveis\n\nTempo de processamento do servidor de\n\naplica\u00e7\u00e3o\n0,087 (0,174 / 2)\n\nTempo de processamento do servidor de\n\nbanco de dados\n0,174\n\nTab. 4.8 N\u00edveis dos fatores para cen\u00e1rio 4\n\n\u2022 Cen\u00e1rio 5\n\nFatores N\u00edveis\n\nTempo de processamento do servidor de\n\naplica\u00e7\u00e3o\n0,0435 (0,174 / 4)\n\nTempo de processamento do servidor de\n\nbanco de dados\n0,174\n\nTab. 4.9. N\u00edveis dos fatores para cen\u00e1rio 5\n\n\u2022 Cen\u00e1rio 6\n\nFatores N\u00edveis\n\nTempo de processamento do servidor de\n\naplica\u00e7\u00e3o\n0,0174 (0,174 / 10)\n\nTempo de processamento do servidor de\n\nbanco de dados\n0,174\n\nTab. 4.10 N\u00edveis dos fatores para cen\u00e1rio 6\n\nAp\u00f3s obten\u00e7\u00e3o dos resultados das simula\u00e7\u00f5es, os resultados dos tempos m\u00e9dios de\n\nresposta foram submetidos ao software Statistica, que realiza os c\u00e1lculos referentes \u00e0s teorias\n\napresentadas no cap\u00edtulo 3 da metodologia proposta, para an\u00e1lise dos intervalos de confian\u00e7a\n\ne os respectivos desvios padr\u00e3o, como proposto no item 3.4. Abaixo ser\u00e3o apresentados os\n\nresultados obtidos nas simula\u00e7\u00f5es utilizando o ARENA:\n\n\n\n68\n\n\u2022 Cen\u00e1rio 1\n\nFatores\n\nTempo de processamento BDServer Replica\u00e7\u00e3o Tempo m\u00e9dio de resposta (segundos)\n\nServi\u00e7o 01 Servi\u00e7o 02 Servi\u00e7o 03\n1\n\n0,41406 0,50248 0,41611\n\nServi\u00e7o 01 Servi\u00e7o 02 Servi\u00e7o 03\n2\n\n0,44565 0,53280 0,41596\n\nServi\u00e7o 01 Servi\u00e7o 02 Servi\u00e7o 03\n3\n\n0,40491 0,52279 0,42611\n\nServi\u00e7o 01 Servi\u00e7o 02 Servi\u00e7o 03\n4\n\n0,42405 0,51212 0,41375\n\nServi\u00e7o 01 Servi\u00e7o 02 Servi\u00e7o 03\n5\n\n0,43105 0,52326 0,42083\n\nServi\u00e7o 01 Servi\u00e7o 02 Servi\u00e7o 03\n\n0,087 (0,174 / 2)\n\n6\n0,43353 0,51249 0,43445\n\nTab. 4.11 Resultado para cen\u00e1rio 1 no modelo 2-camadas\n\nFatores\n\nTempo de processamento\n\nAPPServer\n\nTempo de processamento\n\nBDServer\n\nReplica\u00e7\u00e3o Tempo m\u00e9dio de resposta\n\n(segundos)\n\nServi\u00e7o 01 Servi\u00e7o\n\n02\n\nServi\u00e7o\n\n031\n\n0,77292 0,85183 0,76535\n\nServi\u00e7o 01 Servi\u00e7o\n\n02\n\nServi\u00e7o\n\n032\n\n0,79430 0,88397 0,76981\n\nServi\u00e7o 01 Servi\u00e7o\n\n02\n\nServi\u00e7o\n\n033\n\n0,75023 0,87610 0,77705\n\nServi\u00e7o 01 Servi\u00e7o\n\n02\n\nServi\u00e7o\n\n034\n\n0,77174 0,86252 0,75974\n\nServi\u00e7o 01 Servi\u00e7o\n\n02\n\nServi\u00e7o\n\n035\n0,77951 0,86454 0,76610\n\nServi\u00e7o 01 Servi\u00e7o\n\n02\n\nServi\u00e7o\n\n03\n\n0,174 0,087 (0,174 / 2)\n\n6\n0,78465 0,86385 0,78826\n\nTab. 4.12 Resultado para cen\u00e1rio 1 no modelo 3-camadas\n\n\n\n69\n\n\u2022 Cen\u00e1rio 2\n\nFatores\n\nTempo de processamento BDServer Replica\u00e7\u00e3o Tempo m\u00e9dio de resposta (segundos)\n\nServi\u00e7o 01 Servi\u00e7o 02 Servi\u00e7o 03\n1\n\n0,21114 0,25467 0,21141\n\nServi\u00e7o 01 Servi\u00e7o 02 Servi\u00e7o 03\n2\n\n0,22210 0,26500 0,21022\n\nServi\u00e7o 01 Servi\u00e7o 02 Servi\u00e7o 03\n3\n\n0,20877 0,26545 0,21794\n\nServi\u00e7o 01 Servi\u00e7o 02 Servi\u00e7o 03\n4\n\n0,21628 0,25952 0,21234\n\nServi\u00e7o 01 Servi\u00e7o 02 Servi\u00e7o 03\n5\n\n0,21857 0,26514 0,21860\n\nServi\u00e7o 01 Servi\u00e7o 02 Servi\u00e7o 03\n\n0,0435 (0,174 / 4)\n\n6\n0,21790 0,25826 0,21732\n\nTab. 4.13 Resultado para cen\u00e1rio 2 no modelo 2-camadas\n\nFatores\n\nTempo de processamento\n\nAPPServer\n\nTempo de processamento\n\nBDServer\n\nReplica\u00e7\u00e3o Tempo m\u00e9dio de resposta\n\n(segundos)\n\nServi\u00e7o 01 Servi\u00e7o\n\n02\n\nServi\u00e7o\n\n031\n\n0,56036 0,60682 0,56251\n\nServi\u00e7o 01 Servi\u00e7o\n\n02\n\nServi\u00e7o\n\n032\n\n0,56913 0,61225 0,55891\n\nServi\u00e7o 01 Servi\u00e7o\n\n02\n\nServi\u00e7o\n\n033\n\n0,56437 0,61131 0,56663\n\nServi\u00e7o 01 Servi\u00e7o\n\n02\n\nServi\u00e7o\n\n034\n\n0,55851 0,60838 0,56654\n\nServi\u00e7o 01 Servi\u00e7o\n\n02\n\nServi\u00e7o\n\n035\n0,56962 0,60794 0,57276\n\nServi\u00e7o 01 Servi\u00e7o\n\n02\n\nServi\u00e7o\n\n03\n\n0,174 0,0435 (0,174 / 4)\n\n6\n0,57179 0,59596 0,56633\n\nTab. 4.14 Resultado para cen\u00e1rio 2 no modelo 3-camadas\n\n\n\n70\n\n\u2022 Cen\u00e1rio 3\n\nFatores\n\nTempo de processamento BDServer Replica\u00e7\u00e3o Tempo m\u00e9dio de resposta (segundos)\n\nServi\u00e7o 01 Servi\u00e7o 02 Servi\u00e7o 03\n1\n\n0,89616 1,0908 0,88483\n\nServi\u00e7o 01 Servi\u00e7o 02 Servi\u00e7o 03\n2\n\n0,95563 1,1597 0,90692\n\nServi\u00e7o 01 Servi\u00e7o 02 Servi\u00e7o 03\n3\n\n0,87453 1,1451 0,92022\n\nServi\u00e7o 01 Servi\u00e7o 02 Servi\u00e7o 03\n4\n\n0,89895 1,1054 0,87139\n\nServi\u00e7o 01 Servi\u00e7o 02 Servi\u00e7o 03\n5\n\n0,93752 1,1126 0,87935\n\nServi\u00e7o 01 Servi\u00e7o 02 Servi\u00e7o 03\n\n0,174\n\n6\n0,94622 1,1150 0,93027\n\nTab. 4.15 Resultado para cen\u00e1rio 3 no modelo 2-camadas\n\nFatores\n\nTempo de processamento\n\nAPPServer\n\nTempo de processamento\n\nBDServer\n\nReplica\u00e7\u00e3o Tempo m\u00e9dio de resposta\n\n(segundos)\n\nServi\u00e7o\n\n01\n\nServi\u00e7o\n\n02\n\nServi\u00e7o\n\n031\n\n1,2486 1,4492 1,2360\n\nServi\u00e7o\n\n01\n\nServi\u00e7o\n\n02\n\nServi\u00e7o\n\n032\n\n1,2982 1,5048 1,2580\n\nServi\u00e7o\n\n01\n\nServi\u00e7o\n\n02\n\nServi\u00e7o\n\n033\n\n1,2274 1,4894 1,2718\n\nServi\u00e7o\n\n01\n\nServi\u00e7o\n\n02\n\nServi\u00e7o\n\n034\n\n1,2531 1,4562 1,2223\n\nServi\u00e7o\n\n01\n\nServi\u00e7o\n\n02\n\nServi\u00e7o\n\n035\n1,2897 1,4661 1,2222\n\nServi\u00e7o\n\n01\n\nServi\u00e7o\n\n02\n\nServi\u00e7o\n\n03\n\n0,174 0,174\n\n6\n1,2996 1,4633 1,2822\n\nTab. 4.16 Resultado para cen\u00e1rio 3 no modelo 3-camadas\n\n\n\n71\n\n\u2022 Cen\u00e1rio 4\n\nFatores\n\nTempo de processamento BDServer Replica\u00e7\u00e3o Tempo m\u00e9dio de resposta (segundos)\n\nServi\u00e7o 01 Servi\u00e7o 02 Servi\u00e7o 03\n1\n\n0,89616 1,0908 0,88483\n\nServi\u00e7o 01 Servi\u00e7o 02 Servi\u00e7o 03\n2\n\n0,95563 1,1597 0,90692\n\nServi\u00e7o 01 Servi\u00e7o 02 Servi\u00e7o 03\n3\n\n0,87453 1,1451 0,92022\n\nServi\u00e7o 01 Servi\u00e7o 02 Servi\u00e7o 03\n4\n\n0,89895 1,1054 0,87139\n\nServi\u00e7o 01 Servi\u00e7o 02 Servi\u00e7o 03\n5\n\n0,93752 1,1126 0,87935\n\nServi\u00e7o 01 Servi\u00e7o 02 Servi\u00e7o 03\n\n0,174\n\n6\n0,94622 1,1150 0,93027\n\nTab. 4.17 Resultado para cen\u00e1rio 4 no modelo 2-camadas\n\nFatores\n\nTempo de processamento\n\nAPPServer\n\nTempo de processamento\n\nBDServer\n\nReplica\u00e7\u00e3o Tempo m\u00e9dio de resposta\n\n(segundos)\n\nServi\u00e7o\n\n01\n\nServi\u00e7o\n\n02\n\nServi\u00e7o\n\n031\n\n1,0717 1,2623 1,0577\n\nServi\u00e7o\n\n01\n\nServi\u00e7o\n\n02\n\nServi\u00e7o\n\n032\n\n1,1281 1,3298 1,0807\n\nServi\u00e7o\n\n01\n\nServi\u00e7o\n\n02\n\nServi\u00e7o\n\n033\n\n1,0497 1,3153 1,0917\n\nServi\u00e7o\n\n01\n\nServi\u00e7o\n\n02\n\nServi\u00e7o\n\n034\n\n1,0738 1,2742 1,0410\n\nServi\u00e7o\n\n01\n\nServi\u00e7o\n\n02\n\nServi\u00e7o\n\n035\n1,1140 1,2809 1,0521\n\nServi\u00e7o\n\n01\n\nServi\u00e7o\n\n02\n\nServi\u00e7o\n\n03\n\n0,087  (0,174 / 2) 0,174\n\n6\n1,1219 1,2808 1,1013\n\nTab. 4.18 Resultado para cen\u00e1rio 4 no modelo 3-camadas\n\n\n\n72\n\n\u2022 Cen\u00e1rio 5\n\nFatores\n\nTempo de processamento BDServer Replica\u00e7\u00e3o Tempo m\u00e9dio de resposta (segundos)\n\nServi\u00e7o 01 Servi\u00e7o 02 Servi\u00e7o 03\n1\n\n0,89616 1,0908 0,88483\n\nServi\u00e7o 01 Servi\u00e7o 02 Servi\u00e7o 03\n2\n\n0,95563 1,1597 0,90692\n\nServi\u00e7o 01 Servi\u00e7o 02 Servi\u00e7o 03\n3\n\n0,87453 1,1451 0,92022\n\nServi\u00e7o 01 Servi\u00e7o 02 Servi\u00e7o 03\n4\n\n0,89895 1,1054 0,87139\n\nServi\u00e7o 01 Servi\u00e7o 02 Servi\u00e7o 03\n5\n\n0,93752 1,1126 0,87935\n\nServi\u00e7o 01 Servi\u00e7o 02 Servi\u00e7o 03\n\n0,174\n\n6\n0,94622 1,1150 0,93027\n\nTab. 4.19 Resultado para cen\u00e1rio 5 no modelo 2-camadas\n\nFatores\n\nTempo de processamento\n\nAPPServer\n\nTempo de processamento\n\nBDServer\n\nReplica\u00e7\u00e3o Tempo m\u00e9dio de resposta\n\n(segundos)\n\nServi\u00e7o 01 Servi\u00e7o\n\n02\n\nServi\u00e7o\n\n031\n\n0,97915 1,1743 0,96807\n\nServi\u00e7o 01 Servi\u00e7o\n\n02\n\nServi\u00e7o\n\n032\n\n1,0401 1,2387 0,99226\n\nServi\u00e7o 01 Servi\u00e7o\n\n02\n\nServi\u00e7o\n\n033\n\n0,95745 1,2260 1,0034\n\nServi\u00e7o 01 Servi\u00e7o\n\n02\n\nServi\u00e7o\n\n034\n\n0,98183 1,1865 0,95409\n\nServi\u00e7o 01 Servi\u00e7o\n\n02\n\nServi\u00e7o\n\n035\n1,0203 1,1938 0,96231\n\nServi\u00e7o 01 Servi\u00e7o\n\n02\n\nServi\u00e7o\n\n03\n\n0,0435  (0,174 / 4) 0,174\n\n6\n1,0295 1,1961 1,0139\n\nTab. 4.20 Resultado para cen\u00e1rio 5 no modelo 3-camadas\n\n\n\n73\n\n\u2022 Cen\u00e1rio 6\n\nFatores\n\nTempo de processamento BDServer Replica\u00e7\u00e3o Tempo m\u00e9dio de resposta (segundos)\n\nServi\u00e7o 01 Servi\u00e7o 02 Servi\u00e7o 03\n1\n\n0,89616 1,0908 0,88483\n\nServi\u00e7o 01 Servi\u00e7o 02 Servi\u00e7o 03\n2\n\n0,95563 1,1597 0,90692\n\nServi\u00e7o 01 Servi\u00e7o 02 Servi\u00e7o 03\n3\n\n0,87453 1,1451 0,92022\n\nServi\u00e7o 01 Servi\u00e7o 02 Servi\u00e7o 03\n4\n\n0,89895 1,1054 0,87139\n\nServi\u00e7o 01 Servi\u00e7o 02 Servi\u00e7o 03\n5\n\n0,93752 1,1126 0,87935\n\nServi\u00e7o 01 Servi\u00e7o 02 Servi\u00e7o 03\n\n0,174\n\n6\n0,94622 1,1150 0,93027\n\nTab. 4.21 Resultado para cen\u00e1rio 6 no modelo 2-camadas\n\nFatores\n\nTempo de processamento\n\nAPPServer\n\nTempo de processamento\n\nBDServer\n\nReplica\u00e7\u00e3o Tempo m\u00e9dio de resposta\n\n(segundos)\n\nServi\u00e7o 01 Servi\u00e7o\n\n02\n\nServi\u00e7o\n\n031\n\n0,92636 1,1190 0,91504\n\nServi\u00e7o 01 Servi\u00e7o\n\n02\n\nServi\u00e7o\n\n032\n\n0,98590 1,1860 0,93713\n\nServi\u00e7o 01 Servi\u00e7o\n\n02\n\nServi\u00e7o\n\n033\n\n0,90489 1,1733 0,95039\n\nServi\u00e7o 01 Servi\u00e7o\n\n02\n\nServi\u00e7o\n\n034\n\n0,92933 1,1335 0,90162\n\nServi\u00e7o 01 Servi\u00e7o\n\n02\n\nServi\u00e7o\n\n035\n0,96810 1,1409 0,90967\n\nServi\u00e7o 01 Servi\u00e7o\n\n02\n\nServi\u00e7o\n\n03\n\n0,0174 (0,174 / 10) 0,174\n\n6\n0,97650 1,1434 0,96061\n\nTab. 4.22 Resultado para cen\u00e1rio 6 no modelo 3-camadas\n\nObserva-se, comparando-se os cen\u00e1rios 1 e 2, que com a diminui\u00e7\u00e3o do tempo de\n\nprocessamento, diminui\u00e7\u00e3o de 0,087 segundo para 0,0435 segundo, do servidor de banco de\n\n\n\n74\n\ndados ouve uma significativa diminui\u00e7\u00e3o no tempo m\u00e9dio de resposta nas duas arquiteturas de\n\nsistemas.\n\n4.4.4. An\u00e1lise dos Resultados\n\nPara cada cen\u00e1rio de simula\u00e7\u00e3o os resultados de tempos obtidos foram submetidos ao\n\nStatististica para compara\u00e7\u00e3o dos intervalos de confian\u00e7a e obten\u00e7\u00e3o dos tempos m\u00e9dios e\n\ndesvios padr\u00e3o como forma de comprovar, utilizando tamb\u00e9m resultados gr\u00e1ficos, que o\n\ntempo de processamento do servidor de banco de dados \u00e9 o fator que tem efeito mais\n\nrelevante na m\u00e9trica de desempenho adotada para an\u00e1lise. A seguir, para cada cen\u00e1rio, s\u00e3o\n\nmostrados os resultados estat\u00edsticos obtidos submetendo as tr\u00eas vari\u00e1veis, a seguir, ao\n\nsoftware: A) Arquitetura com os valores 1 para arquitetura 2-camadas e 2 para a arquitetura 3-\n\ncamadas; B) Servi\u00e7os com os valores 1 para renova\u00e7\u00e3o, 2 para primeira habilita\u00e7\u00e3o e 3 para\n\nemiss\u00e3o da CNH definitiva; C) Tempo de resposta m\u00e9dio coletados nas simula\u00e7\u00f5es do\n\nARENA. Para o aux\u00edlio da an\u00e1lise dos resultados foram gerados dois tipos de gr\u00e1ficos, tempo\n\nem fun\u00e7\u00e3o da arquitetura e servi\u00e7o em fun\u00e7\u00e3o da arquitetura. Abaixo s\u00e3o mostradas as\n\ndistribui\u00e7\u00f5es dos tempos m\u00e9dios de resposta para os resultados dos cen\u00e1rios de simula\u00e7\u00e3o.\n\n\u2022 Cen\u00e1rio 1\n\nTempo (segundos)\nArquitetura\n\nM\u00e9dia Desvio Padr\u00e3o N\n\n2-Camadas 0,455 0,047 18\n\n3-Camadas 0,805 0,047 18\n\nTotal 0,630 0,183 36\n\nTab. 4.23 Descri\u00e7\u00e3o do tempo de resposta para cen\u00e1rio 1\n\n\n\n75\n\nFig. 4.8 Distribui\u00e7\u00e3o do tempo de resposta para cen\u00e1rio 1\n\nFig. 4.9 Servi\u00e7o x arquitetura para cen\u00e1rio 1\n\n\n\n76\n\n\u2022 Cen\u00e1rio 2\n\nTempo (segundos)\nArquitetura\n\nM\u00e9dia Desvio Padr\u00e3o N\n\n2-Camadas 0,220 0,023 18\n\n3-Camadas 0,600 0,021 18\n\nTotal 0,405 0,178 36\n\nTab. 4.24 Descri\u00e7\u00e3o do tempo de resposta para cen\u00e1rio 2\n\nFig. 4.10 Distribui\u00e7\u00e3o do tempo de resposta para cen\u00e1rio 2\n\nMin-Max\n\n25%-75%\nMediana\n\nArquitetura\n\nT\ne\n\nm\np\n\no\n d\n\ne\n R\n\ne\ns\np\n\no\ns\nta\n\n M\n\u00e9\n\nd\nio\n\n (\ns\n)\n\n0,15\n\n0,25\n\n0,35\n\n0,45\n\n0,55\n\n0,65\n\n2-Camadas 3-Camadas\n\n\n\n77\n\nFig. 4.11 Servi\u00e7o x arquitetura para cen\u00e1rio 2\n\n\u2022 Cen\u00e1rio 3\n\nTempo (segundos)\nArquitetura\n\nM\u00e9dia Desvio Padr\u00e3o n\n\n2-Camadas 0,979 0,107 18\n\n3-Camadas 1,329 0,106 18\n\nTotal 1,155 0,206 36\n\nTab. 4.25 Descri\u00e7\u00e3o do tempo de resposta para cen\u00e1rio 3\n\nFig. 4.12 Distribui\u00e7\u00e3o do tempo de resposta para cen\u00e1rio 3\n\nARQ-1\n\nARQ-2\n\nM\u00e9dias\n\nIntera\u00e7\u00e3o: SERVI\u00c7O x ARQUITETURA\n\nServi\u00e7o\n\nT\ne\n\nm\np\n\no\n d\n\ne\n R\n\ne\ns\np\n\no\ns\nta\n\n M\n\u00e9\n\nd\nio\n\n0,15\n\n0,20\n\n0,25\n\n0,30\n\n0,35\n\n0,40\n\n0,45\n\n0,50\n\n0,55\n\n0,60\n\n0,65\n\n1 2 3\n\nMin-Max\n25%-75%\nMediana\n\nArquitetura\n\nT\ne\n\nm\np\n\no\n d\n\ne\n R\n\ne\ns\np\n\no\ns\nta\n\n M\n\u00e9\n\nd\nio\n\n (\ns\n)\n\n0,8\n\n0,9\n\n1,0\n\n1,1\n\n1,2\n\n1,3\n\n1,4\n\n1,5\n\n1,6\n\n2-Camadas 3-Camadas\n\n\n\n78\n\nFig. 4.13 Servi\u00e7o x arquitetura para cen\u00e1rio 3\n\n\u2022 Cen\u00e1rio 4\n\nTempo (segundos)\nArquitetura\n\nM\u00e9dia Desvio Padr\u00e3o N\n\n2-Camadas 0,979 0,107 18\n\n3-Camadas 1,151 0,105 18\n\nTotal 1,066 0,136 36\n\nTab. 4.26 Descri\u00e7\u00e3o do tempo de resposta para cen\u00e1rio 4\n\nFig. 4.14 Distribui\u00e7\u00e3o do tempo de resposta para cen\u00e1rio 4\n\nARQ-1\n\nARQ-2\n\nM\u00e9dias\n\nIntera\u00e7\u00e3o: SERVI\u00c7O x ARQUITETURA\n\nServi\u00e7o\n\nT\ne\n\nm\np\n\no\n d\n\ne\n R\n\ne\ns\np\n\no\ns\nta\n\n M\n\u00e9\n\nd\nio\n\n0,8\n\n0,9\n\n1,0\n\n1,1\n\n1,2\n\n1,3\n\n1,4\n\n1,5\n\n1,6\n\n1 2 3\n\nMin-Max\n\n25%-75%\n\nMediana\n\nArquitetura\n\nT\ne\n\nm\np\n\no\n d\n\ne\n R\n\ne\ns\np\n\no\ns\nta\n\n M\n\u00e9\n\nd\nio\n\n (\ns\n)\n\n0,8\n\n0,9\n\n1,0\n\n1,1\n\n1,2\n\n1,3\n\n1,4\n\n1 2\n\n\n\n79\n\nFig. 4.15 Servi\u00e7o x arquitetura para cen\u00e1rio 4\n\n\u2022 Cen\u00e1rio 5\n\nTempo (segundos)\nArquitetura\n\nM\u00e9dia Desvio Padr\u00e3o N\n\n2-Camadas 0,979 0,107 18\n\n3-Camadas 1,062 0,106 18\n\nTotal 1,020 0,113 36\n\nTab. 4.27 Descri\u00e7\u00e3o do tempo de resposta para cen\u00e1rio 5\n\nFig. 4.16 Distribui\u00e7\u00e3o do tempo de resposta para cen\u00e1rio 5\n\nMin-Max\n\n25%-75%\n\nMediana\n\nArquitetura\n\nT\ne\n\nm\np\n\no\n d\n\ne\n R\n\ne\ns\np\n\no\ns\nta\n\n M\n\u00e9\n\nd\nio\n\n (\ns\n)\n\n0,8\n\n0,9\n\n1,0\n\n1,1\n\n1,2\n\n1,3\n\n1 2\n\nARQ-1\n\nARQ-2\n\nM\u00e9dias\n\nIntera\u00e7\u00e3o: SERVI\u00c7O x ARQUITETURA\n\nServi\u00e7o\n\nT\ne\n\nm\np\n\no\n d\n\ne\n R\n\ne\ns\np\n\no\ns\nta\n\n M\n\u00e9\n\nd\nio\n\n0,85\n\n0,90\n\n0,95\n\n1,00\n\n1,05\n\n1,10\n\n1,15\n\n1,20\n\n1,25\n\n1,30\n\n1,35\n\n1 2 3\n\n\n\n80\n\nFig. 4.17 Servi\u00e7o x arquitetura para cen\u00e1rio 5\n\n\u2022 Cen\u00e1rio 6\n\nTempo (segundos)\nArquitetura\n\nM\u00e9dia Desvio Padr\u00e3o N\n\n2-Camadas 0,979 0,107 18\n\n3-Camadas 1,01 0,106 18\n\nTotal 0,994 0,106 36\n\nTab. 4.28 Descri\u00e7\u00e3o do tempo de resposta para cen\u00e1rio 6\n\nFig. 4.18 Distribui\u00e7\u00e3o do tempo de resposta para cen\u00e1rio 6\n\nARQ-1\n\nARQ-2\n\nM\u00e9dias\n\nIntera\u00e7\u00e3o: SERVI\u00c7O x ARQUITETURA\n\nServi\u00e7o\n\nT\ne\n\nm\np\n\no\n d\n\ne\n R\n\ne\ns\np\n\no\ns\nta\n\n M\n\u00e9\n\nd\nio\n\n0,85\n\n0,90\n\n0,95\n\n1,00\n\n1,05\n\n1,10\n\n1,15\n\n1,20\n\n1,25\n\n1 2 3\n\nMin-Max\n\n25%-75%\n\nMediana\n\nArquitetura\n\nT\ne\n\nm\np\n\no\n d\n\ne\n R\n\ne\ns\np\n\no\ns\nta\n\n M\n\u00e9\n\nd\nio\n\n (\ns\n)\n\n0,80\n\n0,85\n\n0,90\n\n0,95\n\n1,00\n\n1,05\n\n1,10\n\n1,15\n\n1,20\n\n1,25\n\n1 2\n\n\n\n81\n\nFig. 4.19 Servi\u00e7o x arquitetura para cen\u00e1rio 6\n\nAs figuras que mostram o tempo em fun\u00e7\u00e3o das arquiteturas permitem concluir que\n\nquanto maior o tempo de processamento do servidor de banco de dados, maior \u00e9 a diferen\u00e7a\n\nentre as duas arquiteturas considerando a medida de desempenho adotada. Se o tempo de\n\nprocessamento do servidor do banco de dados for mantido constante e o tempo de\n\nprocessamento do servidor de aplica\u00e7\u00e3o for aumentado o suficiente, existir\u00e1 um tempo m\u00e9dio\n\nde resposta aproximado para as duas arquiteturas, concluindo-se ent\u00e3o que a escolha de uma\n\nou da outra arquitetura seria indiferente.\n\nA observa\u00e7\u00e3o das distribui\u00e7\u00f5es dos servi\u00e7os em fun\u00e7\u00e3o das arquiteturas mostra que os\n\nservi\u00e7os possuem um padr\u00e3o nas duas abordagens de sistemas, apenas s\u00e3o deslocados no\n\ntempo em fun\u00e7\u00e3o dos tempos de resposta diferentes. Assim ratificam a hip\u00f3tese levantada de\n\nque com o aumento do tempo de processamento do servidor de aplica\u00e7\u00e3o, mantendo-se\n\nconstante o tempo de processamento do servidor de banco de dados, a vari\u00e1vel de\n\ndesempenho analisada teria o mesmo comportamento para as duas arquiteturas.\n\nA an\u00e1lise dos desvios padr\u00e3o mostra que estatisticamente as duas arquiteturas s\u00e3o\n\nequivalentes, mostrando que as dispers\u00f5es dos dados de ambas arquiteturas s\u00e3o similares.\n\nPor\u00e9m se a premissa para ado\u00e7\u00e3o de uma das arquiteturas fosse apenas o tempo m\u00e9dio de\n\nresposta, o modelo 2-camadas seria adotado, pois apresentaram os melhores resultados para o\n\ntempo de resposta e do ponto de vista de an\u00e1lise da vari\u00e1vel de desempenho existe a\n\nsignific\u00e2ncia pr\u00e1tica.\n\nEste cap\u00edtulo tratou da aplica\u00e7\u00e3o da metodologia apresentada no cap\u00edtulo 3 e da an\u00e1lise\n\ndos resultados obtidos. O cap\u00edtulo seguinte trata das conclus\u00f5es finais e da sugest\u00e3o de\n\ntrabalhos futuros.\n\nARQ-1\n\nARQ-2\n\nM\u00e9dias\n\nIntera\u00e7\u00e3o: SERVI\u00c7O x ARQUITETURA\n\nServi\u00e7o\n\nT\ne\n\nm\np\n\no\n d\n\ne\n R\n\ne\ns\np\n\no\ns\nta\n\n M\n\u00e9\n\nd\nio\n\n0,85\n\n0,90\n\n0,95\n\n1,00\n\n1,05\n\n1,10\n\n1,15\n\n1,20\n\n1 2 3\n\n\n\n82\n\n5. Conclus\u00f5es Finais\n\nA proposta desta pesquisa \u00e9 avaliar o desempenho de dois projetos de sistemas,\n\nambos, baseadas no modelo cliente/servidor. O primeiro modelo, chamado 2-camadas, \u00e9\n\nrepresentado por uma quantidade de clientes (camada 1), uma interface de rede e um servidor\n\nde banco de dados (camada 2) que processa as requisi\u00e7\u00f5es dos clientes. O segundo modelo,\n\ndenominado 3-camadas, \u00e9 composto pelos clientes (camada 1), uma interface de rede, um\n\nservidor de aplica\u00e7\u00f5es (camada 2) respons\u00e1vel por processar as solicita\u00e7\u00f5es da camada 1 e o\n\nservidor de banco de dados (camada 3) que processa as requisi\u00e7\u00f5es do servidor de aplica\u00e7\u00e3o.\n\nO ambiente do Departamento de Tr\u00e2nsito do Estado do Par\u00e1 foi utilizado para este\n\ntrabalho de pesquisa. O DETRAN-PA possui um sistema baseado no sistema legado e decidiu\n\nmigr\u00e1-lo para a plataforma cliente/servidor devido, basicamente, ao alto custo do sistema e a\n\ndificuldade de manuten\u00e7\u00e3o de suas pe\u00e7as de software.\n\nO primeiro sistema concebido foi o baseado no modelo 2-camadas que nos testes\n\niniciais no Departamento de Inform\u00e1tica do DETRAN-PA foi satisfat\u00f3rio, mas quando\n\nestendido para outras \u00e1reas do DETRAN acusou um alto tempo de resposta. Assim a\n\nalternativa 3-camadas passou a ser modelada, como uma forma de viabilizar o novo sistema\n\nde informa\u00e7\u00e3o do Departamento de Tr\u00e2nsito do Estado do Par\u00e1.\n\nCom alguns m\u00f3dulos do sistema 3-camadas desenvolvidos os testes iniciais foram\n\nrealizados, por\u00e9m o modelo 3-camadas apresentou um tempo de resposta alto. Considerando\n\nestas duas propostas de sistemas, foram desenvolvidos dois modelos de simula\u00e7\u00e3o com o\n\nobjetivo de avaliar o desempenho de ambas atrav\u00e9s do tempo de resposta. Os tempos de\n\nprocessamento do servidor de banco de dados e do servidor de aplica\u00e7\u00e3o foram obtidos\n\natrav\u00e9s de considera\u00e7\u00f5es extra\u00eddas dos testes de benchmark ECperf. De posse destes tempos\n\nv\u00e1rios cen\u00e1rios foram simulados e os dados coletados. Para a simula\u00e7\u00e3o no ARENA foram\n\nconsiderados dois fatores: o tempo de processamento do servidor de banco de dados e o\n\ntempo de processamento do servidor de aplica\u00e7\u00e3o.\n\nOs resultados das simula\u00e7\u00f5es foram submetidos \u00e0 an\u00e1lise estat\u00edstica para determina\u00e7\u00e3o\n\ndos intervalos de confian\u00e7a e dos desvios padr\u00e3o. Com a an\u00e1lise dos dados conclu\u00ed-se que\n\nestatisticamente os resultados das dispers\u00f5es s\u00e3o equivalentes, uma vez que os desvios padr\u00e3o\n\nmostraram uma pequena dispers\u00e3o nos resultados obtidos nas simula\u00e7\u00f5es. Os dois tipos de\n\ngr\u00e1ficos de resultados apresentados foram constru\u00eddos considerando tr\u00eas vari\u00e1veis submetidas\n\nao Statistica: Arquitetura, servi\u00e7o e tempo m\u00e9dio de resposta. Avaliando a vari\u00e1vel de\n\n\n\n83\n\ndesempenho, tempo de resposta, as duas arquiteturas s\u00e3o diferentes, onde da an\u00e1lise dos\n\ngr\u00e1ficos do tempo de resposta em fun\u00e7\u00e3o da arquitetura observa-se que o fator tempo de\n\nprocessamento do servidor de banco de dados tem mais relev\u00e2ncia para a determina\u00e7\u00e3o do\n\nmodelo 2-camadas como a melhor alternativa, quando a grandeza de desempenho tempo de\n\nresposta \u00e9 considerada. Os gr\u00e1ficos dos servi\u00e7os em fun\u00e7\u00e3o da arquitetura mostram um\n\ncomportamento semelhante para todos os servi\u00e7os nas duas arquiteturas de sistemas, com a\n\nalternativa 3-camadas apresentando um maior deslocamento ao longo do tempo.\n\nOs resultados indicam tamb\u00e9m que o modelo 2-camadas \u00e9 mais adequado que o\n\nmodelo 3-camadas em termos de tempo de resposta, considerando as simplifica\u00e7\u00f5es dos\n\nmodelos e os dois fatores apresentados. Apesar do escopo desta pesquisa ser a avalia\u00e7\u00e3o de\n\ndesempenho de duas arquiteturas cliente/servidor, 2-camadas e 3-camadas, faz-se necess\u00e1rio\n\nressaltar que no desenvolvimento de um sistema de informa\u00e7\u00e3o, o tempo de resposta pode n\u00e3o\n\nser o \u00fanico fator determinante para o seu desenvolvimento, algumas caracter\u00edsticas e\n\nfuncionalidades s\u00e3o tamb\u00e9m necess\u00e1rias para um sistema: manutenibilidade e f\u00e1cil\n\ndistribui\u00e7\u00e3o, aos v\u00e1rios clientes de uma rede corporativa; integra\u00e7\u00e3o com outras plataformas,\n\nsistema legado ou sistemas baseados no modelo Internet, etc, desta forma, considerando as\n\ncaracter\u00edsticas citadas anteriormente, a abordagem 3-camadas adequasse de maneira muito\n\nmais favor\u00e1vel pois \u00e9 fundamentada nos conceitos de orienta\u00e7\u00e3o a objetos, objetos\n\nreutiliz\u00e1veis e objetos processando as regras do neg\u00f3cio.\n\nPor\u00e9m alguns objetivos, como a defini\u00e7\u00e3o dos dom\u00ednios das aplica\u00e7\u00f5es 2-camas e 3-\n\ncamadas, propostos neste trabalho, n\u00e3o foram atingidos em fun\u00e7\u00e3o das simplifica\u00e7\u00f5es que\n\nviabilizaram a defini\u00e7\u00e3o dos modelos de desempenho e do projeto de experimentos,\n\nsimplifica\u00e7\u00f5es estas realizadas em fun\u00e7\u00e3o da indisponibilidade de informa\u00e7\u00f5es. Para tanto\n\nseria necess\u00e1rio adicionar outros fatores e grandezas de desempenho aos modelos, fatores\n\ncomo: n\u00famero de clientes, a carga de trabalho, velocidade das CPU dos servidores, etc. E\n\ngrandezas como: throughput, tempo e tamanho das filas nos servidores, etc, al\u00e9m da\n\nconsidera\u00e7\u00e3o da WAN, para avalia\u00e7\u00e3o das reais caracter\u00edsticas distribu\u00eddas do sistema.\n\nEntretanto este trabalho serve de base para o desenvolvimento destas outras caracter\u00edsticas\n\nelementares aos dois modelos cliente/servidor.\n\nVale ressaltar a import\u00e2ncia da simula\u00e7\u00e3o como excelente t\u00e9cnica para a coleta de\n\nresultados e concep\u00e7\u00e3o de sistemas, uma vez que permitiu a cria\u00e7\u00e3o de uma abordagem 3-\n\ncamadas, para o sistema do Departamento de Tr\u00e2nsito do Estado do Par\u00e1, apesar da exist\u00eancia\n\napenas de alguns m\u00f3dulos no mundo real, al\u00e9m de possibilitar a avalia\u00e7\u00e3o de desempenho de\n\nduas arquiteturas diferentes de sistemas.\n\n\n\n84\n\n5.1. Sugest\u00f5es para Trabalhos Futuros\n\nUma das sugest\u00f5es de continuidade desta pesquisa \u00e9 a simula\u00e7\u00e3o considerando novos\n\nfatores e novas m\u00e9tricas de desempenho, adicionando ao modelo caracter\u00edsticas de uma WAN\n\npara que juntamente com a an\u00e1lise de novos cen\u00e1rios utilizando outros servidores de\n\naplica\u00e7\u00e3o, determine-se o dom\u00ednio de aplica\u00e7\u00e3o das duas arquiteturas. Outra sugest\u00e3o seria\n\ndefinir novos tempos de processamento para o servidor de banco de dados e servidor de\n\naplica\u00e7\u00e3o utilizando um estudo de caso de um sistema 3-camadas ou analisar um estudo de\n\ncaso onde exista a possibilidade de dois sistemas e comparar seus resultados com os obtidos\n\nneste trabalho. Um maior detalhamento do servidor de aplica\u00e7\u00e3o considerando novos\n\nprocessos como equil\u00edbrio de carga, com o conseq\u00fcente aumento da carga de trabalho, seria\n\ntamb\u00e9m uma id\u00e9ia interessante para continuidade deste trabalho de pesquisa.\n\n\n\n85\n\nAnexos\n\n\n\n86\n\nAnexo A \u2013 Modelos de Simula\u00e7\u00e3o no ARENA\n\nStatics\n\nOVERHead em Bytes\n\nVariables\n\n500\n\nSimulate\n\nDelay\n\nProcess\n\nLeave\n\nEnter\n\nTallyLeave\n\nProcessos referentes\na requisi\u00e7\u00f5es clientes\nou resposta BDServer\n\nAtualiza tempo de\ntr\u00e2nsito para cada\ntipo de servico(1-6)CLIENTE\n\nAssign\n\nChoose\n\nDelay\n\nSequences\n\nEnterServer\n\nBDSERVER\n\nSEQUENCIA\n\nETAPAS SERVICOS\n\nACESSO REDE\nCLI=>BD\n\nACESSO REDE\nBD=>CLI\n\nDelayDelay\n\nLeave\n\nLeaveEnter\n\nLeave\n\nAssign\n\nAssign\n\nAssign\n\nINSERTS TABELAS/\n\nMENSAGEM CONC. DE SERV.\n\nEnter\n\nEnter\n\nEnter\n\nEnter\n\nLeave\n\nLeave\n\nLeave\n\nLeaveAssign\n\nEnter LeaveAssign\n\nSets\n\nArrive\n\nArrive\n\nArrive\nDepart\n\nS t a t i c s\n\nOVERHead em Bytes\n\nV a r i a b l e s\n\n500\n\nS i m u l a t e\n\nD e l a y\n\nP r o c e s s\n\nL e a v e\n\nEnter\n\nD e p a r tT a l l yL e a v e\n\nProcessos referentes\na requisi\u00e7\u00f5es clientes\n\nou resposta BDServer\n\nAtualiza tempo de\ntr\u00e2nsito para cada\ntipo de servico(1-6)CLIENTE\n\nA s s i g n\n\nC h o o s e\n\nSets\n\nD e l a y\n\nS e q u e n c e s\n\nEnter\n\nServer\n\nWait\n\nWait\n\nWait\n\nWait\n\nA s s i g n\n\nD e l a y\n\nA s s i g n\n\nD e l a y\n\nServer\n\nA s s i g n\n\nA s s i g n\n\nBDSERVER\n\nACESSO REDE\n\nAPP=>BD\n\nINSERTS TABELAS/\n\nMENSAGEM CONC. DE SERV.\n\nACESSO REDE\n\nBD=>APP\n\nS i g n a l\n\nEnter\n\nSEQUENCIA\n\nETAPAS SERVICOS\n\nACESSO REDE\n\nCLI=>APP\n\nEnter\n\nD e l a yD e l a y\n\nC h o o s e\n\nACESSO REDE\n\nAPP=>CLI\n\nD e l a yD e l a y\n\nL e a v e\n\nL e a v eEnter\n\nL e a v e\n\nL e a v e\n\nE n t e r L e a v e\n\nL e a v e\n\nEnter\n\nEnter\n\nEnter\n\nL e a v e\n\nL e a v e\n\nL e a v e\n\nL e a v eA s s i g n\n\nAPPSERVER\n\nL e a v e\n\nWait\n\nEnter L e a v eA s s i g n\n\nA s s i g n\n\nC h o o s e\n\nWait\n\nArrive\n\nArrive\n\nArrive\n\n\n\n87\n\nAnexo B \u2013 Distribui\u00e7\u00e3o de Servi\u00e7os do DETRAN-PA\n\nJAN FEV MAR ABR MAI JUN\n\nREN 5.534 3.491 4.338 3.354 4.038 3.683\n\nP H 1.967 1.688 1.336 1.509 2.171 1.724\n\nCNH.DEF. 1.001 829 1.245 1.071 1.165 1.144\n\nMUD. CAT. 542 427 428 540 622 499\n\nSEG VIA 542 324 438 382 452 431\n\nAD. CAT. 106 39 44 71 27 41\n\nREAB 3 1 0 0 0 1\n\nTOTAL DO\nM\u00caS\n\n9.695 6.799 7.829 6.927 8.475 7.523\n\nJUL AGO SET OUT NOV DEZ TOTAL M\u00c9DIA\n\n4.916 4.156 3.742 3.850 4.059 3.466 48.627 4.052\n\n2.323 2.110 1.833 1.724 2.432 1.704 22.521 1.877\n\n1.580 1.588 1.186 1.354 1.159 1.143 14.465 1.205\n\n608 523 561 500 716 562 6.528 544\n\n539 458 316 407 424 394 5.107 426\n\n25 45 29 20 44 13 504 42\n\n2 4 2 2 1 2 18 2\n\n9.993 8.884 7.669 7.857 8.835 7.284 97.770 8.148\n\n\n\n88\n\nAnexo C \u2013 Full Disclosure Report: ECperf Benchmark for Oracle9iAS\nRelease 2\n\nFULL DISCLOSURE REPORT\n\nECperf Benchmark for Oracle9iAS Release 2\nrunning on Sun Fire V480 and Oracle9i\n\nDatabase Release 2 running on Sun Fire V880\n\nJune 24, 2002\n\n\n\n89\n\nBenchmark results are highly dependent upon a number of factors, including workload,\nspecific application requirements, system hardware, system software, and system design\nand implementation. Results under other conditions may vary significantly.\n\nTHIS FULL DISCLOSURE REPORT INCLUDING ALL INFORMATION\nCONTAINED HEREIN (THIS \u201cDOCUMENT\u201d) IS PROVIDED ON AN \"AS IS\"\nBASIS. ORACLE EXPRESSLY DISCLAIMS ALL WARRANTIES OF ANY KIND,\nWHETHER EXPRESS OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\nPARTICULAR PURPOSE AND NON-INFRINGEMENT. ORACLE MAKES NO\nWARRANTY THAT THIS DOCUMENT IS ERROR-FREE, ACCURATE OR\nRELIABLE. ORACLE MAKES NO WARRANTY ON SYSTEM PERFORMANCE,\nPRICE AND PRICE/PERFORMANCE. ORACLE RESERVES THE RIGHT TO\nMAKE CHANGES OR UPDATES AT ANY TIME WITHOUT NOTICE.\n\nIN NO EVENT SHALL ORACLE BE LIABLE FOR ANY DIRECT, INDIRECT,\nINCIDENTAL, SPECIAL OR CONSEQUENTIAL DAMAGES, OR DAMAGES FOR\nLOSS OF PROFITS, REVENUE, DATA OR USE, INCURRED BY YOU OR ANY\nTHIRD PARTY, WHETHER IN AN ACTION IN CONTRACT OR TORT, ARISING\nFROM YOUR ACCESS TO, OR USE OF, THIS DOCUMENT.\n\nSome jurisdictions do not allow the limitation or exclusion of liability. Accordingly,\nsome of the above limitations may not apply to you.\n\nCopyright \u00a9 2002, Oracle Corporation. All rights reserved.\n\nOracle is a registered trademark and Oracle9i is a trademark or registered trademark of\nOracle International Corporation.\n\nNo right, title, or interest in or to any trademarks, service marks, or trade names of Sun or\nSun\u2019s licensors is granted hereunder.\n\nSun, Sun Microsystems, the Sun logo, Solaris, Solstice DiskSuite, Sun Enterprise, Sun\nFire, Sun StorEdge, SunSpectrum, SunSpectrum Gold, Java, ECperf, J2EE, Enterprise\nJavaBeans, EJB, JDBC, Java Naming and Directory Interface, and the Java Coffee Cup\nlogo are trademarks or registered trademarks of Sun Microsystems, Inc. in the U.S. and\nother countries.\n\nAll SPARC trademarks are used under license and are trademarks or registered\ntrademarks of SPARC International, Inc. in the U.S. and other countries. Products\nbearing SPARC trademarks are based upon an architecture developed by Sun\nMicrosystems, Inc.\n\nSun Microsystems, Inc., believes that the information in this document is accurate as of\nits publication date. The information in this document is subject to change without notice.\nSun Microsystems, Inc., assumes no responsibility for any errors that may appear in this\ndocument. The pricing information in this document is believed to accurately reflect\nprices in effect on June 4, 2002. However, Sun Microsystems provides no warranty on\nthe pricing information in this document. The performance information in this document\n\n\n\n90\n\nis for guidance only. System performance is highly dependent on many factors including\nsystem hardware, system and user software, and user application characteristics.\nCustomer applications must be carefully evaluated before estimating performance. Sun\nMicrosystems, Inc., does not warrant or represent that a user can or will achieve a similar\nperformance. No warranty on system performance or price/performance is expressed or\nimplied in this document.\n\n\n\n91\n\n7.2 General Full Disclosure Requirements\n\n7.2.3 Summary Statement\n\nPlease see section 7.3 for the Summary Statement\n\n7.2.4 Sponsors\n\nA statement identifying the benchmark sponsor(s) and other participating companies\n\nmust be provided. The sponsor(s) must provide a list of third-party companies who\n\npermissions have been obtained for publication of this result.\n\nOracle Corporation and Sun Microsystems, Inc. sponsored and executed the benchmark.\n\n7.2.5 Diagrams of both measured and priced configurations\n\nDiagrams of both measured and priced configurations must be provided, accompanied\n\nby a description of the differences. This includes, but is not limited to:\n\n\u2022 Number and types of processors\n\n\u2022 Size of allocated memory, and any specific mapping/partitioning of memory\n\nunique to the test\n\n\u2022 Number and types of disk units (and controllers, if applicable)\n\n\u2022 Number of LAN (e.g. Ethernet) connections, including routers, etc., that were\n\nphysically used in the test\n\n\u2022 Type and run-time execution location of software components (e.g. EJB\n\nServer/Containers, DBMS, client processes software load balancers, etc.)\n\nThis section provides detailed information about the priced configuration.\n\nThe tested configuration is the same as the priced configuration except for the following:\n\n\u2022 6 x 36GB internal disks were used in the database server instead of the 6 x 73GB\n\ndisks the system was priced with.\n\n\u2022 9 x 18GB disks and 256MB cache in the StorEdge T3 disk array were used with\n\nthe database server instead of the 9 x 36GB disks and 1GB cache the system was\n\n\n\n92\n\npriced with.\n\n\u2022 2 x 18GB internal disks were used in one of the three J2EE servers instead of 2 x\n\n36GB disks the system was priced with.\n\nPriced Configuration\n\nApplication Servers Configuration:\n\nHardware\n\nSun Fire V480 (three systems)\n\n4 X 900 MHz UltraSPARC-III Cu CPU\n\n16GB RAM\n\nSoftware\n\nSolaris 8, 2/02\n\nOracle9iAS Release 2 Standard Edition v9.0.2.1.0\n\nOracle JDBC Driver v9.2.0.2.0 (thin)\n\nJava2 Runtime Environment Standard Edition v1.4.0\n\nDatabase Server Configuration:\n\nHardware\n\nSun Fire V880\n\n8 X 900MHz UltraSPARC-III Cu CPU\n\n16 GB RAM\n\nDatabase Software\n\nSolaris 8, 2/02\n\nOracle9i Database Release 2 Enterprise Edition with Partitioning Option v9.2.0.1.0,\n\nNumber and type of disk units:\n\nApplication Server\n\nInternal: 2 x 36GB internal disks attached to internal FC-AL controller\n\n\n\n93\n\nDatabase Server\n\nInternal: 6 x 73GB disks on a single FC-AL controller\n\nExternal: StorEdge T3 disk array attached to a PCI FC-AL controller 1 logical unit\n\n(LUN)\n\nLUN1: RAID 1 (stripe) of 8 x 36.2 GB disks\n\nNetwork Connections\n\nAn 8 port 10/100Mbps switch (Ark Technologies Model #CT2208D3) was used to\n\nconnect the client machine to the J2EE servers.\n\nNumber of LAN connections used: 7 point-to-point networks\n\n100 Mbit Ethernet:\n\nDriver/Emulator (E420R) QFE PCI 10/100 baseT card\n\n10/100Mbs switch CT2208D3\n\n100 Mbit Ethernet (x3)\n\n10/100Mbs switch CT2208D3\n\nJ2EE Server (SF V480) motherboard CE PCI 10/100/1000 baseT network\n\ninterface\n\n100 Mbit Ethernet (x3):\n\nJ2EE Server (SF V480) motherboard CE PCI 10/100/1000 baseT network\n\ninterface\n\nDatabase Server (SF V880) QFE PCI 10/100 baseT card\n\nSystem Configuration Diagram:\n\n\n\n94\n\n7.3 Summary Statement\n\n7.3.1 Summary Statement\n\nThe summary statement is a high-level view of the ECperf benchmark configuration and\n\nrun results. An example of the Summary Statement is presented in Appendix B. The\n\nSummary Statement must include all of the information contained in this example in the\n\nsame format for the benchmark being reported.\n\nApplication Server\n\nSun: Sun Fire V480\n\nOracle: Oracle9iAS Release 2 Standard Edition v9.0.2.1.0\n\nOracle: Oracle JDBC Driver v9.2.0.2.0 thin\n\nDatabase Server\n\nSun: Sun Fire V880\n\nOracle: Oracle9i Database Release 2 Enterprise Edition with\n\nPartitioning Option v9.2.0.1.0\n\nMetrics: 26039.37 BBops/min@Std $16/BBops/min@Std\n\n\n\n95\n\nAvailability Date: August 10, 2002\n\nBean Deployment Mode: CMP\n\nDiagram of System Under Test (SUT)\n\n7.3.2 Driver Summary Report\n\nThe driver summary reports must appear as part of the Summary Statement. These\n\ninclude the Ecperf.summary, orders.summary and Mfg.summary files.\n\n\n\n96\n\n\n\n97\n\n\n\n98\n\nAnexo D \u2013 Resultados de Simula\u00e7\u00e3o Colhidos no ARENA Dispostas por\nCen\u00e1rio\n\nARENA Simulation Results\n                            Silvia - License #9400000\n\n                        Summary for Replication 1 of 6\n\nProject:                                       Run execution date :  11/19/2002\nAnalyst:                                       Model revision date:  11/19/2002\n\nReplication ended at time      : 500.0\n\n                                 TALLY VARIABLES\n\nIdentifier              Average   Half Width  Minimum    Maximum   Observations\n_______________________________________________________________________________\n\ntallyTempServ1          .41406     (Insuf)    .37603     .98503         90\nProCliente_R_Q Queue T  .00000     .00000     .00000     .00000        810\ntallyTempServ2          .50248     (Insuf)    .46329     1.1590         90\ntallyTempServ3          .41611     (Insuf)    .37603     .93961         90\ntallyTempServ4              --         --         --         --          0\nBDServer_R_Q Queue Tim  .00902     .00525     .00000     .17400       1170\ntallyTempServ5              --         --         --         --          0\ntallyTempServ6              --         --         --         --          0\n\n                           DISCRETE-CHANGE VARIABLES\n\nIdentifier              Average   Half Width  Minimum    Maximum   Final Value\n_______________________________________________________________________________\n\nProCliente_R Busy       .01296     3.9940E-04 .00000     3.0000     .00000\nBDServer_R Available    1.0000     (Insuf)    1.0000     1.0000     1.0000\n# in ProCliente_R_Q     .00000     (Insuf)    .00000     .00000     .00000\nBDServer_R Busy         .20358     .00597     .00000     1.0000     .00000\n# in BDServer_R_Q       .02111     (Insuf)    .00000     2.0000     .00000\nProCliente_R Available  19.000     (Insuf)    19.000     19.000     19.000\n\n                                   COUNTERS\n\n                    Identifier                Count   Limit\n                    _________________________________________\n\n                    CountServSaida01             90  Infinite\n                    CountServSaida02             90  Infinite\n                    CountServSaida03             90  Infinite\n                    CountServCheg01              90  Infinite\n                    CountServCheg02              90  Infinite\n                    CountServCheg03              90  Infinite\n\n                            ARENA Simulation Results\n                            Silvia - License #9400000\n\n                        Summary for Replication 2 of 6\n\nProject:                                       Run execution date :  11/19/2002\nAnalyst:                                       Model revision date:  11/19/2002\n\nReplication ended at time      : 500.0\n\n                                 TALLY VARIABLES\n\nIdentifier              Average   Half Width  Minimum    Maximum   Observations\n_______________________________________________________________________________\n\ntallyTempServ1          .44565     (Insuf)    .37603     .98503         87\nProCliente_R_Q Queue T  .00000     .00000     .00000     .00000        795\ntallyTempServ2          .53280     (Insuf)    .46329     1.1590         89\ntallyTempServ3          .41596     (Insuf)    .37603     .89803         89\ntallyTempServ4              --         --         --         --          0\nBDServer_R_Q Queue Tim  .01375     .00552     .00000     .17400       1149\ntallyTempServ5              --         --         --         --          0\ntallyTempServ6              --         --         --         --          0\n\n                           DISCRETE-CHANGE VARIABLES\n\n\n\n99\n\nIdentifier              Average   Half Width  Minimum    Maximum   Final Value\n_______________________________________________________________________________\n\nProCliente_R Busy       .01272     4.1802E-04 .00000     3.0000     .00000\nBDServer_R Available    1.0000     (Insuf)    1.0000     1.0000     1.0000\n# in ProCliente_R_Q     .00000     (Insuf)    .00000     .00000     .00000\nBDServer_R Busy         .19993     .00691     .00000     1.0000     .00000\n# in BDServer_R_Q       .03159     (Insuf)    .00000     2.0000     .00000\nProCliente_R Available  19.000     (Insuf)    19.000     19.000     19.000\n\n                                   COUNTERS\n\n                    Identifier                Count   Limit\n                    _________________________________________\n\n                    CountServSaida01             87  Infinite\n                    CountServSaida02             89  Infinite\n                    CountServSaida03             89  Infinite\n                    CountServCheg01              87  Infinite\n                    CountServCheg02              89  Infinite\n                    CountServCheg03              89  Infinite\n\n                            ARENA Simulation Results\n                            Silvia - License #9400000\n\n                        Summary for Replication 3 of 6\n\nProject:                                       Run execution date :  11/19/2002\nAnalyst:                                       Model revision date:  11/19/2002\n\nReplication ended at time      : 500.0\n\n                                 TALLY VARIABLES\n\nIdentifier              Average   Half Width  Minimum    Maximum   Observations\n_______________________________________________________________________________\n\ntallyTempServ1          .40491     (Insuf)    .37603     .98503         89\nProCliente_R_Q Queue T  .00000     .00000     .00000     .00000        809\ntallyTempServ2          .52279     (Insuf)    .46329     1.1590         88\ntallyTempServ3          .42611     (Insuf)    .37603     .89803         92\ntallyTempServ4              --         --         --         --          0\nBDServer_R_Q Queue Tim  .01065     (Corr)     .00000     .17400       1165\ntallyTempServ5              --         --         --         --          0\ntallyTempServ6              --         --         --         --          0\n\n                           DISCRETE-CHANGE VARIABLES\n\nIdentifier              Average   Half Width  Minimum    Maximum   Final Value\n_______________________________________________________________________________\n\nProCliente_R Busy       .01294     4.4368E-04 .00000     3.0000     .00000\nBDServer_R Available    1.0000     (Insuf)    1.0000     1.0000     1.0000\n# in ProCliente_R_Q     .00000     (Insuf)    .00000     .00000     .00000\nBDServer_R Busy         .20262     .00724     .00000     1.0000     1.0000\n# in BDServer_R_Q       .02482     (Insuf)    .00000     2.0000     .00000\nProCliente_R Available  19.000     (Insuf)    19.000     19.000     19.000\n\n                                   COUNTERS\n\n                    Identifier                Count   Limit\n                    _________________________________________\n\n                    CountServSaida01             89  Infinite\n                    CountServSaida02             88  Infinite\n                    CountServSaida03             92  Infinite\n                    CountServCheg01              90  Infinite\n                    CountServCheg02              88  Infinite\n                    CountServCheg03              92  Infinite\n\n                            ARENA Simulation Results\n                            Silvia - License #9400000\n\n                        Summary for Replication 4 of 6\n\nProject:                                       Run execution date :  11/19/2002\nAnalyst:                                       Model revision date:  11/19/2002\n\nReplication ended at time      : 500.0\n\n\n\n100\n\n                                 TALLY VARIABLES\n\nIdentifier              Average   Half Width  Minimum    Maximum   Observations\n_______________________________________________________________________________\n\ntallyTempServ1          .42405     (Insuf)    .37603     .98503         92\nProCliente_R_Q Queue T  .00000     .00000     .00000     .00000        819\ntallyTempServ2          .51212     (Insuf)    .46329     1.1590         91\ntallyTempServ3          .41375     (Insuf)    .37603     .89803         90\ntallyTempServ4              --         --         --         --          0\nBDServer_R_Q Queue Tim  .01036     (Corr)     .00000     .17400       1183\ntallyTempServ5              --         --         --         --          0\ntallyTempServ6              --         --         --         --          0\n\n                           DISCRETE-CHANGE VARIABLES\n\nIdentifier              Average   Half Width  Minimum    Maximum   Final Value\n_______________________________________________________________________________\n\nProCliente_R Busy       .01310     4.6885E-04 .00000     3.0000     .00000\nBDServer_R Available    1.0000     (Insuf)    1.0000     1.0000     1.0000\n# in ProCliente_R_Q     .00000     (Insuf)    .00000     .00000     .00000\nBDServer_R Busy         .20584     .00731     .00000     1.0000     .00000\n# in BDServer_R_Q       .02451     (Insuf)    .00000     2.0000     .00000\nProCliente_R Available  19.000     (Insuf)    19.000     19.000     19.000\n\n                                   COUNTERS\n\n                    Identifier                Count   Limit\n                    _________________________________________\n\n                    CountServSaida01             92  Infinite\n                    CountServSaida02             91  Infinite\n                    CountServSaida03             90  Infinite\n                    CountServCheg01              92  Infinite\n                    CountServCheg02              91  Infinite\n                    CountServCheg03              90  Infinite\n\n                            ARENA Simulation Results\n                            Silvia - License #9400000\n\n                        Summary for Replication 5 of 6\n\nProject:                                       Run execution date :  11/19/2002\nAnalyst:                                       Model revision date:  11/19/2002\n\nReplication ended at time      : 500.0\n\n                                 TALLY VARIABLES\n\nIdentifier              Average   Half Width  Minimum    Maximum   Observations\n_______________________________________________________________________________\n\ntallyTempServ1          .43105     (Insuf)    .37603     .98503         86\nProCliente_R_Q Queue T  .00000     .00000     .00000     .00000        795\ntallyTempServ2          .52326     (Insuf)    .46329     1.1590         89\ntallyTempServ3          .42083     (Insuf)    .37603     .89803         90\ntallyTempServ4              --         --         --         --          0\nBDServer_R_Q Queue Tim  .01227     (Corr)     .00000     .17400       1149\ntallyTempServ5              --         --         --         --          0\ntallyTempServ6              --         --         --         --          0\n\n                           DISCRETE-CHANGE VARIABLES\n\nIdentifier              Average   Half Width  Minimum    Maximum   Final Value\n_______________________________________________________________________________\n\nProCliente_R Busy       .01272     3.8487E-04 .00000     3.0000     .00000\nBDServer_R Available    1.0000     (Insuf)    1.0000     1.0000     1.0000\n# in ProCliente_R_Q     .00000     (Insuf)    .00000     .00000     .00000\nBDServer_R Busy         .19993     .00633     .00000     1.0000     .00000\n# in BDServer_R_Q       .02820     (Insuf)    .00000     2.0000     .00000\nProCliente_R Available  19.000     (Insuf)    19.000     19.000     19.000\n\n                                   COUNTERS\n\n                    Identifier                Count   Limit\n                    _________________________________________\n\n                    CountServSaida01             86  Infinite\n                    CountServSaida02             89  Infinite\n\n\n\n101\n\n                    CountServSaida03             90  Infinite\n                    CountServCheg01              86  Infinite\n                    CountServCheg02              89  Infinite\n                    CountServCheg03              90  Infinite\n\n                            ARENA Simulation Results\n                            Silvia - License #9400000\n\n                        Summary for Replication 6 of 6\n\nProject:                                       Run execution date :  11/19/2002\nAnalyst:                                       Model revision date:  11/19/2002\n\nReplication ended at time      : 500.0\n\n                                 TALLY VARIABLES\n\nIdentifier              Average   Half Width  Minimum    Maximum   Observations\n_______________________________________________________________________________\n\ntallyTempServ1          .43353     (Insuf)    .37603     .98503         91\nProCliente_R_Q Queue T  .00000     .00000     .00000     .00000        813\ntallyTempServ2          .51249     (Insuf)    .46329     1.1590         90\ntallyTempServ3          .43445     (Insuf)    .37603     .89803         90\ntallyTempServ4              --         --         --         --          0\nBDServer_R_Q Queue Tim  .01271     .00447     .00000     .17400       1174\ntallyTempServ5              --         --         --         --          0\ntallyTempServ6              --         --         --         --          0\n\n                           DISCRETE-CHANGE VARIABLES\n\nIdentifier              Average   Half Width  Minimum    Maximum   Final Value\n_______________________________________________________________________________\n\nProCliente_R Busy       .01301     3.2862E-04 .00000     3.0000     .00000\nBDServer_R Available    1.0000     (Insuf)    1.0000     1.0000     1.0000\n# in ProCliente_R_Q     .00000     (Insuf)    .00000     .00000     .00000\nBDServer_R Busy         .20428     .00555     .00000     1.0000     .00000\n# in BDServer_R_Q       .02984     (Insuf)    .00000     2.0000     .00000\nProCliente_R Available  19.000     (Insuf)    19.000     19.000     19.000\n\n                                   COUNTERS\n\n                    Identifier                Count   Limit\n                    _________________________________________\n\n                    CountServSaida01             91  Infinite\n                    CountServSaida02             90  Infinite\n                    CountServSaida03             90  Infinite\n                    CountServCheg01              91  Infinite\n                    CountServCheg02              90  Infinite\n                    CountServCheg03              90  Infinite\n\nSimulation run time: 4.97 minutes.\nSimulation run complete.\n\n\n\n102\n\nattProcAPP=0.174\nProcBDServer = attProcAPP/2\n\n                            ARENA Simulation Results\n                            Silvia - License #9400000\n\n                        Summary for Replication 1 of 6\n\nProject:                                       Run execution date :  11/19/2002\nAnalyst:                                       Model revision date:  11/19/2002\n\nReplication ended at time      : 500.0\n\n                                 TALLY VARIABLES\n\nIdentifier              Average   Half Width  Minimum    Maximum   Observations\n_______________________________________________________________________________\n\ntallyTempServ1          .77292     (Insuf)    .71753     1.5875         90\ntallyTempServ2          .85183     (Insuf)    .80456     1.2395         90\nProCliente_R_Q Queue T  .00000     .00000     .00000     .00000        810\ntallyTempServ3          .76535     (Insuf)    .71753     1.4135         90\ntallyTempServ4              --         --         --         --          0\ntallyTempServ5              --         --         --         --          0\nBDServer_R_Q Queue Tim  .00728     .00369     .00000     .17400       1170\ntallyTempServ6              --         --         --         --          0\nAPPServer_R_Q Queue Ti  .00931     .00489     .00000     .34800        540\n\n                           DISCRETE-CHANGE VARIABLES\n\nIdentifier              Average   Half Width  Minimum    Maximum   Final Value\n_______________________________________________________________________________\n\nProCliente_R Busy       .00810     2.3350E-04 .00000     3.0000     .00000\n# in ProCliente_R_Q     .00000     (Insuf)    .00000     .00000     .00000\nBDServer_R Available    1.0000     (Insuf)    1.0000     1.0000     1.0000\nBDServer_R Busy         .20358     (Corr)     .00000     1.0000     .00000\nAPPServer_R Available   1.0000     (Insuf)    1.0000     1.0000     1.0000\n# in BDServer_R_Q       .01704     (Insuf)    .00000     2.0000     .00000\n# in APPServer_R_Q      .01005     (Insuf)    .00000     2.0000     .00000\nAPPServer_R Busy        .18792     .00502     .00000     1.0000     .00000\nProCliente_R Available  19.000     (Insuf)    19.000     19.000     19.000\n\n                                   COUNTERS\n\n                    Identifier                Count   Limit\n                    _________________________________________\n\n                    CountServSaida01             90  Infinite\n                    CountServSaida02             90  Infinite\n                    CountServSaida03             90  Infinite\n                    CountServCheg01              90  Infinite\n                    CountServCheg02              90  Infinite\n                    CountServCheg03              90  Infinite\n\n                            ARENA Simulation Results\n                            Silvia - License #9400000\n\n                        Summary for Replication 2 of 6\n\nProject:                                       Run execution date :  11/19/2002\nAnalyst:                                       Model revision date:  11/19/2002\n\nReplication ended at time      : 500.0\n\n                                 TALLY VARIABLES\n\nIdentifier              Average   Half Width  Minimum    Maximum   Observations\n_______________________________________________________________________________\n\ntallyTempServ1          .79430     (Insuf)    .71753     1.5875         87\ntallyTempServ2          .88397     (Insuf)    .80456     1.3980         89\nProCliente_R_Q Queue T  .00000     .00000     .00000     .00000        795\ntallyTempServ3          .76981     (Insuf)    .71753     1.4135         89\ntallyTempServ4              --         --         --         --          0\ntallyTempServ5              --         --         --         --          0\nBDServer_R_Q Queue Tim  .01045     .00425     .00000     .17400       1149\ntallyTempServ6              --         --         --         --          0\nAPPServer_R_Q Queue Ti  .01207     (Corr)     .00000     .34800        530\n\n                           DISCRETE-CHANGE VARIABLES\n\n\n\n103\n\nIdentifier              Average   Half Width  Minimum    Maximum   Final Value\n_______________________________________________________________________________\n\nProCliente_R Busy       .00795     2.5113E-04 .00000     3.0000     .00000\n# in ProCliente_R_Q     .00000     (Insuf)    .00000     .00000     .00000\nBDServer_R Available    1.0000     (Insuf)    1.0000     1.0000     1.0000\nBDServer_R Busy         .19993     .00729     .00000     1.0000     .00000\nAPPServer_R Available   1.0000     (Insuf)    1.0000     1.0000     1.0000\n# in BDServer_R_Q       .02401     (Insuf)    .00000     2.0000     .00000\n# in APPServer_R_Q      .01279     (Insuf)    .00000     2.0000     .00000\nAPPServer_R Busy        .18444     (Corr)     .00000     1.0000     .00000\nProCliente_R Available  19.000     (Insuf)    19.000     19.000     19.000\n\n                                   COUNTERS\n\n                    Identifier                Count   Limit\n                    _________________________________________\n\n                    CountServSaida01             87  Infinite\n                    CountServSaida02             89  Infinite\n                    CountServSaida03             89  Infinite\n                    CountServCheg01              87  Infinite\n                    CountServCheg02              89  Infinite\n                    CountServCheg03              89  Infinite\n\n                            ARENA Simulation Results\n                            Silvia - License #9400000\n\n                        Summary for Replication 3 of 6\n\nProject:                                       Run execution date :  11/19/2002\nAnalyst:                                       Model revision date:  11/19/2002\n\nReplication ended at time      : 500.0\n\n                                 TALLY VARIABLES\n\nIdentifier              Average   Half Width  Minimum    Maximum   Observations\n_______________________________________________________________________________\n\ntallyTempServ1          .75023     (Insuf)    .71753     1.5875         89\ntallyTempServ2          .87610     (Insuf)    .80456     1.2991         88\nProCliente_R_Q Queue T  .00000     .00000     .00000     .00000        808\ntallyTempServ3          .77705     (Insuf)    .71753     1.4135         91\ntallyTempServ4              --         --         --         --          0\ntallyTempServ5              --         --         --         --          0\nBDServer_R_Q Queue Tim  .00699     .00320     .00000     .17400       1164\ntallyTempServ6              --         --         --         --          0\nAPPServer_R_Q Queue Ti  .01213     .00560     .00000     .34800        539\n\n                           DISCRETE-CHANGE VARIABLES\n\nIdentifier              Average   Half Width  Minimum    Maximum   Final Value\n_______________________________________________________________________________\n\nProCliente_R Busy       .00808     2.6097E-04 .00000     3.0000     .00000\n# in ProCliente_R_Q     .00000     (Insuf)    .00000     .00000     .00000\nBDServer_R Available    1.0000     (Insuf)    1.0000     1.0000     1.0000\nBDServer_R Busy         .20254     .00715     .00000     1.0000     .00000\nAPPServer_R Available   1.0000     (Insuf)    1.0000     1.0000     1.0000\n# in BDServer_R_Q       .01626     (Insuf)    .00000     2.0000     .00000\n# in APPServer_R_Q      .01308     (Insuf)    .00000     2.0000     .00000\nAPPServer_R Busy        .18723     .00590     .00000     1.0000     1.0000\nProCliente_R Available  19.000     (Insuf)    19.000     19.000     19.000\n\n                                   COUNTERS\n\n                    Identifier                Count   Limit\n                    _________________________________________\n\n                    CountServSaida01             89  Infinite\n                    CountServSaida02             88  Infinite\n                    CountServSaida03             91  Infinite\n                    CountServCheg01              90  Infinite\n                    CountServCheg02              88  Infinite\n                    CountServCheg03              92  Infinite\n\n                            ARENA Simulation Results\n                            Silvia - License #9400000\n\n\n\n104\n\n                        Summary for Replication 4 of 6\n\nProject:                                       Run execution date :  11/19/2002\nAnalyst:                                       Model revision date:  11/19/2002\n\nReplication ended at time      : 500.0\n\n                                 TALLY VARIABLES\n\nIdentifier              Average   Half Width  Minimum    Maximum   Observations\n_______________________________________________________________________________\n\ntallyTempServ1          .77174     (Insuf)    .71753     1.5875         92\ntallyTempServ2          .86252     (Insuf)    .80456     1.2395         91\nProCliente_R_Q Queue T  .00000     .00000     .00000     .00000        818\ntallyTempServ3          .75974     (Insuf)    .71753     1.4135         89\ntallyTempServ4              --         --         --         --          0\ntallyTempServ5              --         --         --         --          0\nBDServer_R_Q Queue Tim  .00786     (Corr)     .00000     .17400       1182\ntallyTempServ6              --         --         --         --          0\nAPPServer_R_Q Queue Ti  .00868     .00355     .00000     .34800        545\n\n                           DISCRETE-CHANGE VARIABLES\n\nIdentifier              Average   Half Width  Minimum    Maximum   Final Value\n_______________________________________________________________________________\n\nProCliente_R Busy       .00818     2.8887E-04 .00000     3.0000     .00000\n# in ProCliente_R_Q     .00000     (Insuf)    .00000     .00000     .00000\nBDServer_R Available    1.0000     (Insuf)    1.0000     1.0000     1.0000\nBDServer_R Busy         .20560     .00697     .00000     1.0000     1.0000\nAPPServer_R Available   1.0000     (Insuf)    1.0000     1.0000     1.0000\n# in BDServer_R_Q       .01857     (Insuf)    .00000     2.0000     .00000\n# in APPServer_R_Q      .00947     (Insuf)    .00000     2.0000     .00000\nAPPServer_R Busy        .18966     .00667     .00000     1.0000     .00000\nProCliente_R Available  19.000     (Insuf)    19.000     19.000     19.000\n\n                                   COUNTERS\n\n                    Identifier                Count   Limit\n                    _________________________________________\n\n                    CountServSaida01             92  Infinite\n                    CountServSaida02             91  Infinite\n                    CountServSaida03             89  Infinite\n                    CountServCheg01              92  Infinite\n                    CountServCheg02              91  Infinite\n                    CountServCheg03              90  Infinite\n\n                            ARENA Simulation Results\n                            Silvia - License #9400000\n\n                        Summary for Replication 5 of 6\n\nProject:                                       Run execution date :  11/19/2002\nAnalyst:                                       Model revision date:  11/19/2002\n\nReplication ended at time      : 500.0\n\n                                 TALLY VARIABLES\n\nIdentifier              Average   Half Width  Minimum    Maximum   Observations\n_______________________________________________________________________________\n\ntallyTempServ1          .77951     (Insuf)    .71753     1.5875         86\ntallyTempServ2          .86454     (Insuf)    .80456     1.5293         89\nProCliente_R_Q Queue T  .00000     .00000     .00000     .00000        795\ntallyTempServ3          .76610     (Insuf)    .71753     1.4135         90\ntallyTempServ4              --         --         --         --          0\ntallyTempServ5              --         --         --         --          0\nBDServer_R_Q Queue Tim  .00827     (Corr)     .00000     .17400       1149\ntallyTempServ6              --         --         --         --          0\nAPPServer_R_Q Queue Ti  .01045     (Corr)     .00000     .34800        530\n\n                           DISCRETE-CHANGE VARIABLES\n\nIdentifier              Average   Half Width  Minimum    Maximum   Final Value\n_______________________________________________________________________________\n\nProCliente_R Busy       .00795     2.2553E-04 .00000     3.0000     .00000\n\n\n\n105\n\n# in ProCliente_R_Q     .00000     (Insuf)    .00000     .00000     .00000\nBDServer_R Available    1.0000     (Insuf)    1.0000     1.0000     1.0000\nBDServer_R Busy         .19993     .00714     .00000     1.0000     .00000\nAPPServer_R Available   1.0000     (Insuf)    1.0000     1.0000     1.0000\n# in BDServer_R_Q       .01900     (Insuf)    .00000     2.0000     .00000\n# in APPServer_R_Q      .01108     (Insuf)    .00000     2.0000     .00000\nAPPServer_R Busy        .18444     .00524     .00000     1.0000     .00000\nProCliente_R Available  19.000     (Insuf)    19.000     19.000     19.000\n\n                                   COUNTERS\n\n                    Identifier                Count   Limit\n                    _________________________________________\n\n                    CountServSaida01             86  Infinite\n                    CountServSaida02             89  Infinite\n                    CountServSaida03             90  Infinite\n                    CountServCheg01              86  Infinite\n                    CountServCheg02              89  Infinite\n                    CountServCheg03              90  Infinite\n\n                            ARENA Simulation Results\n                            Silvia - License #9400000\n\n                        Summary for Replication 6 of 6\n\nProject:                                       Run execution date :  11/19/2002\nAnalyst:                                       Model revision date:  11/19/2002\n\nReplication ended at time      : 500.0\n\n                                 TALLY VARIABLES\n\nIdentifier              Average   Half Width  Minimum    Maximum   Observations\n_______________________________________________________________________________\n\ntallyTempServ1          .78465     (Insuf)    .71753     1.5875         91\ntallyTempServ2          .86385     (Insuf)    .80456     1.2395         90\nProCliente_R_Q Queue T  .00000     .00000     .00000     .00000        813\ntallyTempServ3          .78826     (Insuf)    .71753     1.4135         90\ntallyTempServ4              --         --         --         --          0\ntallyTempServ5              --         --         --         --          0\nBDServer_R_Q Queue Tim  .00976     .00337     .00000     .17400       1174\ntallyTempServ6              --         --         --         --          0\nAPPServer_R_Q Queue Ti  .01173     .00391     .00000     .34800        542\n\n                           DISCRETE-CHANGE VARIABLES\n\nIdentifier              Average   Half Width  Minimum    Maximum   Final Value\n_______________________________________________________________________________\n\nProCliente_R Busy       .00813     1.8219E-04 .00000     3.0000     .00000\n# in ProCliente_R_Q     .00000     (Insuf)    .00000     .00000     .00000\nBDServer_R Available    1.0000     (Insuf)    1.0000     1.0000     1.0000\nBDServer_R Busy         .20428     .00560     .00000     1.0000     .00000\nAPPServer_R Available   1.0000     (Insuf)    1.0000     1.0000     1.0000\n# in BDServer_R_Q       .02291     (Insuf)    .00000     2.0000     .00000\n# in APPServer_R_Q      .01271     (Insuf)    .00000     2.0000     .00000\nAPPServer_R Busy        .18862     .00452     .00000     1.0000     .00000\nProCliente_R Available  19.000     (Insuf)    19.000     19.000     19.000\n\n                                   COUNTERS\n\n                    Identifier                Count   Limit\n                    _________________________________________\n\n                    CountServSaida01             91  Infinite\n                    CountServSaida02             90  Infinite\n                    CountServSaida03             90  Infinite\n                    CountServCheg01              91  Infinite\n                    CountServCheg02              90  Infinite\n                    CountServCheg03              90  Infinite\n\nSimulation run time: 5.57 minutes.\nSimulation run complete.\n\n\n\n106\n\n                            ARENA Simulation Results\n                            Silvia - License #9400000\n\n                        Summary for Replication 1 of 6\n\nProject:                                       Run execution date :  11/19/2002\nAnalyst:                                       Model revision date:  11/19/2002\n\nReplication ended at time      : 500.0\n\n                                 TALLY VARIABLES\n\nIdentifier              Average   Half Width  Minimum    Maximum   Observations\n_______________________________________________________________________________\n\ntallyTempServ1          .21114     (Insuf)    .20203     .50653         90\nProCliente_R_Q Queue T  .00000     .00000     .00000     .00000        810\ntallyTempServ2          .25467     (Insuf)    .24579     .59353         90\ntallyTempServ3          .21141     (Insuf)    .20203     .46303         90\ntallyTempServ4              --         --         --         --          0\nBDServer_R_Q Queue Tim  .00210     (Corr)     .00000     .08700       1170\ntallyTempServ5              --         --         --         --          0\ntallyTempServ6              --         --         --         --          0\n\n                           DISCRETE-CHANGE VARIABLES\n\nIdentifier              Average   Half Width  Minimum    Maximum   Final Value\n_______________________________________________________________________________\n\nProCliente_R Busy       .01296     4.2308E-04 .00000     3.0000     .00000\nBDServer_R Available    1.0000     (Insuf)    1.0000     1.0000     1.0000\n# in ProCliente_R_Q     .00000     (Insuf)    .00000     .00000     .00000\nBDServer_R Busy         .10179     .00330     .00000     1.0000     .00000\n# in BDServer_R_Q       .00492     (Insuf)    .00000     2.0000     .00000\nProCliente_R Available  19.000     (Insuf)    19.000     19.000     19.000\n\n                                   COUNTERS\n\n                    Identifier                Count   Limit\n                    _________________________________________\n\n                    CountServSaida01             90  Infinite\n                    CountServSaida02             90  Infinite\n                    CountServSaida03             90  Infinite\n                    CountServCheg01              90  Infinite\n                    CountServCheg02              90  Infinite\n                    CountServCheg03              90  Infinite\n\n                            ARENA Simulation Results\n                            Silvia - License #9400000\n\n                        Summary for Replication 2 of 6\n\nProject:                                       Run execution date :  11/19/2002\nAnalyst:                                       Model revision date:  11/19/2002\n\nReplication ended at time      : 500.0\n\n                                 TALLY VARIABLES\n\nIdentifier              Average   Half Width  Minimum    Maximum   Observations\n_______________________________________________________________________________\n\ntallyTempServ1          .22210     (Insuf)    .20203     .50653         87\nProCliente_R_Q Queue T  .00000     .00000     .00000     .00000        795\ntallyTempServ2          .26500     (Insuf)    .24579     .59353         89\ntallyTempServ3          .21022     (Insuf)    .20203     .46303         89\ntallyTempServ4              --         --         --         --          0\nBDServer_R_Q Queue Tim  .00364     .00196     .00000     .08700       1149\ntallyTempServ5              --         --         --         --          0\ntallyTempServ6              --         --         --         --          0\n\n                           DISCRETE-CHANGE VARIABLES\n\nIdentifier              Average   Half Width  Minimum    Maximum   Final Value\n_______________________________________________________________________________\n\nProCliente_R Busy       .01272     4.2058E-04 .00000     3.0000     .00000\nBDServer_R Available    1.0000     (Insuf)    1.0000     1.0000     1.0000\n# in ProCliente_R_Q     .00000     (Insuf)    .00000     .00000     .00000\n\n\n\n107\n\nBDServer_R Busy         .09996     .00336     .00000     1.0000     .00000\n# in BDServer_R_Q       .00837     (Insuf)    .00000     2.0000     .00000\nProCliente_R Available  19.000     (Insuf)    19.000     19.000     19.000\n\n                                   COUNTERS\n\n                    Identifier                Count   Limit\n                    _________________________________________\n\n                    CountServSaida01             87  Infinite\n                    CountServSaida02             89  Infinite\n                    CountServSaida03             89  Infinite\n                    CountServCheg01              87  Infinite\n                    CountServCheg02              89  Infinite\n                    CountServCheg03              89  Infinite\n\n                            ARENA Simulation Results\n                            Silvia - License #9400000\n\n                        Summary for Replication 3 of 6\n\nProject:                                       Run execution date :  11/19/2002\nAnalyst:                                       Model revision date:  11/19/2002\n\nReplication ended at time      : 500.0\n\n                                 TALLY VARIABLES\n\nIdentifier              Average   Half Width  Minimum    Maximum   Observations\n_______________________________________________________________________________\n\ntallyTempServ1          .20877     (Insuf)    .20203     .50653         89\nProCliente_R_Q Queue T  .00000     .00000     .00000     .00000        809\ntallyTempServ2          .26545     (Insuf)    .24579     .59353         88\ntallyTempServ3          .21794     (Insuf)    .20203     .46303         92\ntallyTempServ4              --         --         --         --          0\nBDServer_R_Q Queue Tim  .00325     (Corr)     .00000     .08700       1166\ntallyTempServ5              --         --         --         --          0\ntallyTempServ6              --         --         --         --          0\n\n                           DISCRETE-CHANGE VARIABLES\n\nIdentifier              Average   Half Width  Minimum    Maximum   Final Value\n_______________________________________________________________________________\n\nProCliente_R Busy       .01294     4.7920E-04 .00000     3.0000     .00000\nBDServer_R Available    1.0000     (Insuf)    1.0000     1.0000     1.0000\n# in ProCliente_R_Q     .00000     (Insuf)    .00000     .00000     .00000\nBDServer_R Busy         .10136     .00389     .00000     1.0000     1.0000\n# in BDServer_R_Q       .00759     (Insuf)    .00000     2.0000     .00000\nProCliente_R Available  19.000     (Insuf)    19.000     19.000     19.000\n\n                                   COUNTERS\n\n                    Identifier                Count   Limit\n                    _________________________________________\n\n                    CountServSaida01             89  Infinite\n                    CountServSaida02             88  Infinite\n                    CountServSaida03             92  Infinite\n                    CountServCheg01              90  Infinite\n                    CountServCheg02              88  Infinite\n                    CountServCheg03              92  Infinite\n\n                            ARENA Simulation Results\n                            Silvia - License #9400000\n\n                        Summary for Replication 4 of 6\n\nProject:                                       Run execution date :  11/19/2002\nAnalyst:                                       Model revision date:  11/19/2002\n\nReplication ended at time      : 500.0\n\n                                 TALLY VARIABLES\n\nIdentifier              Average   Half Width  Minimum    Maximum   Observations\n_______________________________________________________________________________\n\ntallyTempServ1          .21628     (Insuf)    .20203     .50653         92\n\n\n\n108\n\nProCliente_R_Q Queue T  .00000     .00000     .00000     .00000        819\ntallyTempServ2          .25952     (Insuf)    .24579     .59353         91\ntallyTempServ3          .21234     (Insuf)    .20203     .46303         90\ntallyTempServ4              --         --         --         --          0\nBDServer_R_Q Queue Tim  .00295     (Corr)     .00000     .08700       1183\ntallyTempServ5              --         --         --         --          0\ntallyTempServ6              --         --         --         --          0\n\n                           DISCRETE-CHANGE VARIABLES\n\nIdentifier              Average   Half Width  Minimum    Maximum   Final Value\n_______________________________________________________________________________\n\nProCliente_R Busy       .01310     5.0588E-04 .00000     3.0000     .00000\nBDServer_R Available    1.0000     (Insuf)    1.0000     1.0000     1.0000\n# in ProCliente_R_Q     .00000     (Insuf)    .00000     .00000     .00000\nBDServer_R Busy         .10292     .00400     .00000     1.0000     .00000\n# in BDServer_R_Q       .00698     (Insuf)    .00000     2.0000     .00000\nProCliente_R Available  19.000     (Insuf)    19.000     19.000     19.000\n\n                                   COUNTERS\n\n                    Identifier                Count   Limit\n                    _________________________________________\n\n                    CountServSaida01             92  Infinite\n                    CountServSaida02             91  Infinite\n                    CountServSaida03             90  Infinite\n                    CountServCheg01              92  Infinite\n                    CountServCheg02              91  Infinite\n                    CountServCheg03              90  Infinite\n\n                            ARENA Simulation Results\n                            Silvia - License #9400000\n\n                        Summary for Replication 5 of 6\n\nProject:                                       Run execution date :  11/19/2002\nAnalyst:                                       Model revision date:  11/19/2002\n\nReplication ended at time      : 500.0\n\n                                 TALLY VARIABLES\n\nIdentifier              Average   Half Width  Minimum    Maximum   Observations\n_______________________________________________________________________________\n\ntallyTempServ1          .21857     (Insuf)    .20203     .50653         86\nProCliente_R_Q Queue T  .00000     .00000     .00000     .00000        795\ntallyTempServ2          .26514     (Insuf)    .24579     .59353         89\ntallyTempServ3          .21860     (Insuf)    .20203     .46303         90\ntallyTempServ4              --         --         --         --          0\nBDServer_R_Q Queue Tim  .00403     (Corr)     .00000     .08700       1149\ntallyTempServ5              --         --         --         --          0\ntallyTempServ6              --         --         --         --          0\n\n                           DISCRETE-CHANGE VARIABLES\n\nIdentifier              Average   Half Width  Minimum    Maximum   Final Value\n_______________________________________________________________________________\n\nProCliente_R Busy       .01272     3.7797E-04 .00000     3.0000     .00000\nBDServer_R Available    1.0000     (Insuf)    1.0000     1.0000     1.0000\n# in ProCliente_R_Q     .00000     (Insuf)    .00000     .00000     .00000\nBDServer_R Busy         .09996     .00301     .00000     1.0000     .00000\n# in BDServer_R_Q       .00927     (Insuf)    .00000     2.0000     .00000\nProCliente_R Available  19.000     (Insuf)    19.000     19.000     19.000\n\n                                   COUNTERS\n\n                    Identifier                Count   Limit\n                    _________________________________________\n\n                    CountServSaida01             86  Infinite\n                    CountServSaida02             89  Infinite\n                    CountServSaida03             90  Infinite\n                    CountServCheg01              86  Infinite\n                    CountServCheg02              89  Infinite\n                    CountServCheg03              90  Infinite\n\n\n\n109\n\n                            ARENA Simulation Results\n                            Silvia - License #9400000\n\n                        Summary for Replication 6 of 6\n\nProject:                                       Run execution date :  11/19/2002\nAnalyst:                                       Model revision date:  11/19/2002\n\nReplication ended at time      : 500.0\n\n                                 TALLY VARIABLES\n\nIdentifier              Average   Half Width  Minimum    Maximum   Observations\n_______________________________________________________________________________\n\ntallyTempServ1          .21790     (Insuf)    .20203     .50653         91\nProCliente_R_Q Queue T  .00000     .00000     .00000     .00000        813\ntallyTempServ2          .25826     (Insuf)    .24579     .59353         90\ntallyTempServ3          .21732     (Insuf)    .20203     .46303         90\ntallyTempServ4              --         --         --         --          0\nBDServer_R_Q Queue Tim  .00336     .00190     .00000     .08700       1174\ntallyTempServ5              --         --         --         --          0\ntallyTempServ6              --         --         --         --          0\n\n                           DISCRETE-CHANGE VARIABLES\n\nIdentifier              Average   Half Width  Minimum    Maximum   Final Value\n_______________________________________________________________________________\n\nProCliente_R Busy       .01301     3.3529E-04 .00000     3.0000     .00000\nBDServer_R Available    1.0000     (Insuf)    1.0000     1.0000     1.0000\n# in ProCliente_R_Q     .00000     (Insuf)    .00000     .00000     .00000\nBDServer_R Busy         .10214     .00284     .00000     1.0000     .00000\n# in BDServer_R_Q       .00788     (Insuf)    .00000     2.0000     .00000\nProCliente_R Available  19.000     (Insuf)    19.000     19.000     19.000\n\n                                   COUNTERS\n\n                    Identifier                Count   Limit\n                    _________________________________________\n\n                    CountServSaida01             91  Infinite\n                    CountServSaida02             90  Infinite\n                    CountServSaida03             90  Infinite\n                    CountServCheg01              91  Infinite\n                    CountServCheg02              90  Infinite\n                    CountServCheg03              90  Infinite\n\nSimulation run time: 10.72 minutes.\nSimulation run complete.\n\n\n\n110\n\nattProcAPP=0.174\nProcBDServer = attProcAPP/4\n                            ARENA Simulation Results\n                            Silvia - License #9400000\n\n                        Summary for Replication 1 of 6\n\nProject:                                       Run execution date :  11/19/2002\nAnalyst:                                       Model revision date:  11/19/2002\n\nReplication ended at time      : 500.0\n\n                                 TALLY VARIABLES\n\nIdentifier              Average   Half Width  Minimum    Maximum   Observations\n_______________________________________________________________________________\n\ntallyTempServ1          .56036     (Insuf)    .54353     1.0630         90\nProCliente_R_Q Queue T  .00000     .00000     .00000     .00000        810\ntallyTempServ2          .60682     (Insuf)    .58706     .75528         90\ntallyTempServ3          .56251     (Insuf)    .54353     .88900         90\ntallyTempServ4              --         --         --         --          0\nBDServer_R_Q Queue Tim  4.5483E-04 5.6010E-04 .00000     .04350       1170\ntallyTempServ5              --         --         --         --          0\ntallyTempServ6              --         --         --         --          0\nAPPServer_R_Q Queue Ti  .00828     .00406     .00000     .34800        540\n\n                           DISCRETE-CHANGE VARIABLES\n\nIdentifier              Average   Half Width  Minimum    Maximum   Final Value\n_______________________________________________________________________________\n\nProCliente_R Busy       .00810     2.5307E-04 .00000     3.0000     .00000\nBDServer_R Available    1.0000     (Insuf)    1.0000     1.0000     1.0000\n# in ProCliente_R_Q     .00000     (Insuf)    .00000     .00000     .00000\nBDServer_R Busy         .10179     (Corr)     .00000     1.0000     .00000\nAPPServer_R Available   1.0000     (Insuf)    1.0000     1.0000     1.0000\n# in BDServer_R_Q       .00106     (Insuf)    .00000     1.0000     .00000\n# in APPServer_R_Q      .00894     (Insuf)    .00000     2.0000     .00000\nAPPServer_R Busy        .18792     .00555     .00000     1.0000     .00000\nProCliente_R Available  19.000     (Insuf)    19.000     19.000     19.000\n\n                                   COUNTERS\n\n                    Identifier                Count   Limit\n                    _________________________________________\n\n                    CountServSaida01             90  Infinite\n                    CountServSaida02             90  Infinite\n                    CountServSaida03             90  Infinite\n                    CountServCheg01              90  Infinite\n                    CountServCheg02              90  Infinite\n                    CountServCheg03              90  Infinite\n\n                            ARENA Simulation Results\n                            Silvia - License #9400000\n\n                        Summary for Replication 2 of 6\n\nProject:                                       Run execution date :  11/19/2002\nAnalyst:                                       Model revision date:  11/19/2002\n\nReplication ended at time      : 500.0\n\n                                 TALLY VARIABLES\n\nIdentifier              Average   Half Width  Minimum    Maximum   Observations\n_______________________________________________________________________________\n\ntallyTempServ1          .56913     (Insuf)    .54353     1.0630         87\nProCliente_R_Q Queue T  .00000     .00000     .00000     .00000        795\ntallyTempServ2          .61225     (Insuf)    .58706     .87603         89\ntallyTempServ3          .55891     (Insuf)    .54353     .88900         89\ntallyTempServ4              --         --         --         --          0\nBDServer_R_Q Queue Tim  6.4399E-04 4.2934E-04 .00000     .04350       1149\ntallyTempServ5              --         --         --         --          0\ntallyTempServ6              --         --         --         --          0\nAPPServer_R_Q Queue Ti  .00962     .00433     .00000     .34800        530\n\n                           DISCRETE-CHANGE VARIABLES\n\n\n\n111\n\nIdentifier              Average   Half Width  Minimum    Maximum   Final Value\n_______________________________________________________________________________\n\nProCliente_R Busy       .00795     2.5285E-04 .00000     3.0000     .00000\nBDServer_R Available    1.0000     (Insuf)    1.0000     1.0000     1.0000\n# in ProCliente_R_Q     .00000     (Insuf)    .00000     .00000     .00000\nBDServer_R Busy         .09996     .00365     .00000     1.0000     .00000\nAPPServer_R Available   1.0000     (Insuf)    1.0000     1.0000     1.0000\n# in BDServer_R_Q       .00148     (Insuf)    .00000     1.0000     .00000\n# in APPServer_R_Q      .01019     (Insuf)    .00000     2.0000     .00000\nAPPServer_R Busy        .18444     .00628     .00000     1.0000     .00000\nProCliente_R Available  19.000     (Insuf)    19.000     19.000     19.000\n\n                                   COUNTERS\n\n                    Identifier                Count   Limit\n                    _________________________________________\n\n                    CountServSaida01             87  Infinite\n                    CountServSaida02             89  Infinite\n                    CountServSaida03             89  Infinite\n                    CountServCheg01              87  Infinite\n                    CountServCheg02              89  Infinite\n                    CountServCheg03              89  Infinite\n\n                            ARENA Simulation Results\n                            Silvia - License #9400000\n\n                        Summary for Replication 3 of 6\n\nProject:                                       Run execution date :  11/19/2002\nAnalyst:                                       Model revision date:  11/19/2002\n\nReplication ended at time      : 500.0\n\n                                 TALLY VARIABLES\n\nIdentifier              Average   Half Width  Minimum    Maximum   Observations\n_______________________________________________________________________________\n\ntallyTempServ1          .56437     (Insuf)    .54353     1.0630         89\nProCliente_R_Q Queue T  .00000     .00000     .00000     .00000        809\ntallyTempServ2          .61131     (Insuf)    .58706     .75878         88\ntallyTempServ3          .56663     (Insuf)    .54353     .88900         92\ntallyTempServ4              --         --         --         --          0\nBDServer_R_Q Queue Tim  4.4859E-04 (Corr)     .00000     .04350       1164\ntallyTempServ5              --         --         --         --          0\ntallyTempServ6              --         --         --         --          0\nAPPServer_R_Q Queue Ti  .01038     (Corr)     .00000     .34800        539\n\n                           DISCRETE-CHANGE VARIABLES\n\nIdentifier              Average   Half Width  Minimum    Maximum   Final Value\n_______________________________________________________________________________\n\nProCliente_R Busy       .00809     2.6590E-04 .00000     3.0000     .00000\nBDServer_R Available    1.0000     (Insuf)    1.0000     1.0000     1.0000\n# in ProCliente_R_Q     .00000     (Insuf)    .00000     .00000     .00000\nBDServer_R Busy         .10127     .00365     .00000     1.0000     .00000\nAPPServer_R Available   1.0000     (Insuf)    1.0000     1.0000     1.0000\n# in BDServer_R_Q       .00104     (Insuf)    .00000     1.0000     .00000\n# in APPServer_R_Q      .01118     (Insuf)    .00000     2.0000     .00000\nAPPServer_R Busy        .18732     .00626     .00000     1.0000     1.0000\nProCliente_R Available  19.000     (Insuf)    19.000     19.000     19.000\n\n                                   COUNTERS\n\n                    Identifier                Count   Limit\n                    _________________________________________\n\n                    CountServSaida01             89  Infinite\n                    CountServSaida02             88  Infinite\n                    CountServSaida03             92  Infinite\n                    CountServCheg01              90  Infinite\n                    CountServCheg02              88  Infinite\n                    CountServCheg03              92  Infinite\n\n                            ARENA Simulation Results\n                            Silvia - License #9400000\n\n\n\n112\n\n                        Summary for Replication 4 of 6\n\nProject:                                       Run execution date :  11/19/2002\nAnalyst:                                       Model revision date:  11/19/2002\n\nReplication ended at time      : 500.0\n\n                                 TALLY VARIABLES\n\nIdentifier              Average   Half Width  Minimum    Maximum   Observations\n_______________________________________________________________________________\n\ntallyTempServ1          .55851     (Insuf)    .54353     1.0630         92\nProCliente_R_Q Queue T  .00000     .00000     .00000     .00000        818\ntallyTempServ2          .60838     (Insuf)    .58706     .75708         91\ntallyTempServ3          .56654     (Insuf)    .54353     .88900         89\ntallyTempServ4              --         --         --         --          0\nBDServer_R_Q Queue Tim  3.7926E-04 3.8994E-04 .00000     .04350       1183\ntallyTempServ5              --         --         --         --          0\ntallyTempServ6              --         --         --         --          0\nAPPServer_R_Q Queue Ti  .00901     (Corr)     .00000     .34800        546\n\n                           DISCRETE-CHANGE VARIABLES\n\nIdentifier              Average   Half Width  Minimum    Maximum   Final Value\n_______________________________________________________________________________\n\nProCliente_R Busy       .00818     2.9480E-04 .00000     3.0000     .00000\nBDServer_R Available    1.0000     (Insuf)    1.0000     1.0000     1.0000\n# in ProCliente_R_Q     .00000     (Insuf)    .00000     .00000     .00000\nBDServer_R Busy         .10292     .00361     .00000     1.0000     .00000\nAPPServer_R Available   1.0000     (Insuf)    1.0000     1.0000     1.0000\n# in BDServer_R_Q       8.9734E-04 (Insuf)    .00000     1.0000     .00000\n# in APPServer_R_Q      .00984     (Insuf)    .00000     2.0000     .00000\nAPPServer_R Busy        .18977     .00659     .00000     1.0000     1.0000\nProCliente_R Available  19.000     (Insuf)    19.000     19.000     19.000\n\n                                   COUNTERS\n\n                    Identifier                Count   Limit\n                    _________________________________________\n\n                    CountServSaida01             92  Infinite\n                    CountServSaida02             91  Infinite\n                    CountServSaida03             89  Infinite\n                    CountServCheg01              92  Infinite\n                    CountServCheg02              91  Infinite\n                    CountServCheg03              90  Infinite\n\n                            ARENA Simulation Results\n                            Silvia - License #9400000\n\n                        Summary for Replication 5 of 6\n\nProject:                                       Run execution date :  11/19/2002\nAnalyst:                                       Model revision date:  11/19/2002\n\nReplication ended at time      : 500.0\n\n                                 TALLY VARIABLES\n\nIdentifier              Average   Half Width  Minimum    Maximum   Observations\n_______________________________________________________________________________\n\ntallyTempServ1          .56962     (Insuf)    .54353     1.0630         86\nProCliente_R_Q Queue T  .00000     .00000     .00000     .00000        795\ntallyTempServ2          .60794     (Insuf)    .58706     .83082         89\ntallyTempServ3          .57276     (Insuf)    .54353     .88900         90\ntallyTempServ4              --         --         --         --          0\nBDServer_R_Q Queue Tim  5.3018E-04 (Corr)     .00000     .04350       1149\ntallyTempServ5              --         --         --         --          0\ntallyTempServ6              --         --         --         --          0\nAPPServer_R_Q Queue Ti  .01155     (Corr)     .00000     .34800        530\n\n                           DISCRETE-CHANGE VARIABLES\n\nIdentifier              Average   Half Width  Minimum    Maximum   Final Value\n_______________________________________________________________________________\n\nProCliente_R Busy       .00795     2.4039E-04 .00000     3.0000     .00000\nBDServer_R Available    1.0000     (Insuf)    1.0000     1.0000     1.0000\n\n\n\n113\n\n# in ProCliente_R_Q     .00000     (Insuf)    .00000     .00000     .00000\nBDServer_R Busy         .09996     .00340     .00000     1.0000     .00000\nAPPServer_R Available   1.0000     (Insuf)    1.0000     1.0000     1.0000\n# in BDServer_R_Q       .00122     (Insuf)    .00000     1.0000     .00000\n# in APPServer_R_Q      .01225     (Insuf)    .00000     2.0000     .00000\nAPPServer_R Busy        .18444     .00568     .00000     1.0000     .00000\nProCliente_R Available  19.000     (Insuf)    19.000     19.000     19.000\n\n                                   COUNTERS\n\n                    Identifier                Count   Limit\n                    _________________________________________\n\n                    CountServSaida01             86  Infinite\n                    CountServSaida02             89  Infinite\n                    CountServSaida03             90  Infinite\n                    CountServCheg01              86  Infinite\n                    CountServCheg02              89  Infinite\n                    CountServCheg03              90  Infinite\n\n                            ARENA Simulation Results\n                            Silvia - License #9400000\n\n                        Summary for Replication 6 of 6\n\nProject:                                       Run execution date :  11/19/2002\nAnalyst:                                       Model revision date:  11/19/2002\n\nReplication ended at time      : 500.0\n\n                                 TALLY VARIABLES\n\nIdentifier              Average   Half Width  Minimum    Maximum   Observations\n_______________________________________________________________________________\n\ntallyTempServ1          .57179     (Insuf)    .54353     1.0630         91\nProCliente_R_Q Queue T  .00000     .00000     .00000     .00000        813\ntallyTempServ2          .59596     (Insuf)    .58706     .75178         90\ntallyTempServ3          .56633     (Insuf)    .54353     .88900         90\ntallyTempServ4              --         --         --         --          0\nBDServer_R_Q Queue Tim  5.7908E-04 4.2932E-04 .00000     .04350       1174\ntallyTempServ5              --         --         --         --          0\ntallyTempServ6              --         --         --         --          0\nAPPServer_R_Q Queue Ti  .00875     .00382     .00000     .34800        542\n\n                           DISCRETE-CHANGE VARIABLES\n\nIdentifier              Average   Half Width  Minimum    Maximum   Final Value\n_______________________________________________________________________________\n\nProCliente_R Busy       .00813     1.9897E-04 .00000     3.0000     .00000\nBDServer_R Available    1.0000     (Insuf)    1.0000     1.0000     1.0000\n# in ProCliente_R_Q     .00000     (Insuf)    .00000     .00000     .00000\nBDServer_R Busy         .10214     (Corr)     .00000     1.0000     .00000\nAPPServer_R Available   1.0000     (Insuf)    1.0000     1.0000     1.0000\n# in BDServer_R_Q       .00136     (Insuf)    .00000     1.0000     .00000\n# in APPServer_R_Q      .00949     (Insuf)    .00000     2.0000     .00000\nAPPServer_R Busy        .18862     .00487     .00000     1.0000     .00000\nProCliente_R Available  19.000     (Insuf)    19.000     19.000     19.000\n\n                                   COUNTERS\n\n                    Identifier                Count   Limit\n                    _________________________________________\n\n                    CountServSaida01             91  Infinite\n                    CountServSaida02             90  Infinite\n                    CountServSaida03             90  Infinite\n                    CountServCheg01              91  Infinite\n                    CountServCheg02              90  Infinite\n                    CountServCheg03              90  Infinite\n\nSimulation run time: 13.28 minutes.\nSimulation run complete.\n\n\n\n114\n\n                            ARENA Simulation Results\n                            Silvia - License #9400000\n\n                        Summary for Replication 1 of 6\n\nProject:                                       Run execution date :  11/19/2002\nAnalyst:                                       Model revision date:  11/19/2002\n\nReplication ended at time      : 500.0\n\n                                 TALLY VARIABLES\n\nIdentifier              Average   Half Width  Minimum    Maximum   Observations\n_______________________________________________________________________________\n\ntallyTempServ1          .89616     (Insuf)    .72403     1.9420         90\ntallyTempServ2          1.0908     (Insuf)    .89829     2.2900         90\nProCliente_R_Q Queue T  .00000     .00000     .00000     .00000        810\ntallyTempServ3          .88483     (Insuf)    .72403     2.0706         90\ntallyTempServ4              --         --         --         --          0\ntallyTempServ5              --         --         --         --          0\nBDServer_R_Q Queue Tim  .04042     .01455     .00000     .34800       1170\ntallyTempServ6              --         --         --         --          0\n\n                           DISCRETE-CHANGE VARIABLES\n\nIdentifier              Average   Half Width  Minimum    Maximum   Final Value\n_______________________________________________________________________________\n\nProCliente_R Busy       .01296     3.4267E-04 .00000     3.0000     .00000\n# in ProCliente_R_Q     .00000     (Insuf)    .00000     .00000     .00000\nBDServer_R Available    1.0000     (Insuf)    1.0000     1.0000     1.0000\nBDServer_R Busy         .40716     .01004     .00000     1.0000     .00000\n# in BDServer_R_Q       .09459     .03254     .00000     2.0000     .00000\nProCliente_R Available  19.000     (Insuf)    19.000     19.000     19.000\n\n                                   COUNTERS\n\n                    Identifier                Count   Limit\n                    _________________________________________\n\n                    CountServSaida01             90  Infinite\n                    CountServSaida02             90  Infinite\n                    CountServSaida03             90  Infinite\n                    CountServCheg01              90  Infinite\n                    CountServCheg02              90  Infinite\n                    CountServCheg03              90  Infinite\n\n                            ARENA Simulation Results\n                            Silvia - License #9400000\n\n                        Summary for Replication 2 of 6\n\nProject:                                       Run execution date :  11/19/2002\nAnalyst:                                       Model revision date:  11/19/2002\n\nReplication ended at time      : 500.0\n\n                                 TALLY VARIABLES\n\nIdentifier              Average   Half Width  Minimum    Maximum   Observations\n_______________________________________________________________________________\n\ntallyTempServ1          .95563     (Insuf)    .72403     1.9420         87\ntallyTempServ2          1.1597     (Insuf)    .89829     2.2900         89\nProCliente_R_Q Queue T  .00000     .00000     .00000     .00000        795\ntallyTempServ3          .90692     (Insuf)    .72403     1.8762         89\ntallyTempServ4              --         --         --         --          0\ntallyTempServ5              --         --         --         --          0\nBDServer_R_Q Queue Tim  .05195     (Corr)     .00000     .34800       1149\ntallyTempServ6              --         --         --         --          0\n\n                           DISCRETE-CHANGE VARIABLES\n\nIdentifier              Average   Half Width  Minimum    Maximum   Final Value\n_______________________________________________________________________________\n\nProCliente_R Busy       .01272     3.5496E-04 .00000     3.0000     .00000\n# in ProCliente_R_Q     .00000     (Insuf)    .00000     .00000     .00000\nBDServer_R Available    1.0000     (Insuf)    1.0000     1.0000     1.0000\n\n\n\n115\n\nBDServer_R Busy         .39985     .01264     .00000     1.0000     .00000\n# in BDServer_R_Q       .11939     .04010     .00000     2.0000     .00000\nProCliente_R Available  19.000     (Insuf)    19.000     19.000     19.000\n\n                                   COUNTERS\n\n                    Identifier                Count   Limit\n                    _________________________________________\n\n                    CountServSaida01             87  Infinite\n                    CountServSaida02             89  Infinite\n                    CountServSaida03             89  Infinite\n                    CountServCheg01              87  Infinite\n                    CountServCheg02              89  Infinite\n                    CountServCheg03              89  Infinite\n\n                            ARENA Simulation Results\n                            Silvia - License #9400000\n\n                        Summary for Replication 3 of 6\n\nProject:                                       Run execution date :  11/19/2002\nAnalyst:                                       Model revision date:  11/19/2002\n\nReplication ended at time      : 500.0\n\n                                 TALLY VARIABLES\n\nIdentifier              Average   Half Width  Minimum    Maximum   Observations\n_______________________________________________________________________________\n\ntallyTempServ1          .87453     (Insuf)    .72403     1.9420         89\ntallyTempServ2          1.1451     (Insuf)    .89829     2.2900         88\nProCliente_R_Q Queue T  .00000     .00000     .00000     .00000        808\ntallyTempServ3          .92022     (Insuf)    .72403     1.7680         91\ntallyTempServ4              --         --         --         --          0\ntallyTempServ5              --         --         --         --          0\nBDServer_R_Q Queue Tim  .04551     (Corr)     .00000     .34800       1164\ntallyTempServ6              --         --         --         --          0\n\n                           DISCRETE-CHANGE VARIABLES\n\nIdentifier              Average   Half Width  Minimum    Maximum   Final Value\n_______________________________________________________________________________\n\nProCliente_R Busy       .01293     4.0169E-04 .00000     3.0000     .00000\n# in ProCliente_R_Q     .00000     (Insuf)    .00000     .00000     .00000\nBDServer_R Available    1.0000     (Insuf)    1.0000     1.0000     1.0000\nBDServer_R Busy         .40507     .01255     .00000     1.0000     1.0000\n# in BDServer_R_Q       .10603     (Corr)     .00000     2.0000     1.0000\nProCliente_R Available  19.000     (Insuf)    19.000     19.000     19.000\n\n                                   COUNTERS\n\n                    Identifier                Count   Limit\n                    _________________________________________\n\n                    CountServSaida01             89  Infinite\n                    CountServSaida02             88  Infinite\n                    CountServSaida03             91  Infinite\n                    CountServCheg01              90  Infinite\n                    CountServCheg02              88  Infinite\n                    CountServCheg03              92  Infinite\n\n                            ARENA Simulation Results\n                            Silvia - License #9400000\n\n                        Summary for Replication 4 of 6\n\nProject:                                       Run execution date :  11/19/2002\nAnalyst:                                       Model revision date:  11/19/2002\n\nReplication ended at time      : 500.0\n\n                                 TALLY VARIABLES\n\nIdentifier              Average   Half Width  Minimum    Maximum   Observations\n_______________________________________________________________________________\n\ntallyTempServ1          .89895     (Insuf)    .72403     1.9420         92\n\n\n\n116\n\ntallyTempServ2          1.1054     (Insuf)    .89829     2.2900         91\nProCliente_R_Q Queue T  .00000     .00000     .00000     .00000        818\ntallyTempServ3          .87139     (Insuf)    .72403     1.7680         89\ntallyTempServ4              --         --         --         --          0\ntallyTempServ5              --         --         --         --          0\nBDServer_R_Q Queue Tim  .04066     (Corr)     .00000     .34800       1182\ntallyTempServ6              --         --         --         --          0\n\n                           DISCRETE-CHANGE VARIABLES\n\nIdentifier              Average   Half Width  Minimum    Maximum   Final Value\n_______________________________________________________________________________\n\nProCliente_R Busy       .01309     4.4708E-04 .00000     3.0000     .00000\n# in ProCliente_R_Q     .00000     (Insuf)    .00000     .00000     .00000\nBDServer_R Available    1.0000     (Insuf)    1.0000     1.0000     1.0000\nBDServer_R Busy         .41109     .01355     .00000     1.0000     1.0000\n# in BDServer_R_Q       .09611     .02843     .00000     2.0000     .00000\nProCliente_R Available  19.000     (Insuf)    19.000     19.000     19.000\n\n                                   COUNTERS\n\n                    Identifier                Count   Limit\n                    _________________________________________\n\n                    CountServSaida01             92  Infinite\n                    CountServSaida02             91  Infinite\n                    CountServSaida03             89  Infinite\n                    CountServCheg01              92  Infinite\n                    CountServCheg02              91  Infinite\n                    CountServCheg03              90  Infinite\n\n                            ARENA Simulation Results\n                            Silvia - License #9400000\n\n                        Summary for Replication 5 of 6\n\nProject:                                       Run execution date :  11/19/2002\nAnalyst:                                       Model revision date:  11/19/2002\n\nReplication ended at time      : 500.0\n\n                                 TALLY VARIABLES\n\nIdentifier              Average   Half Width  Minimum    Maximum   Observations\n_______________________________________________________________________________\n\ntallyTempServ1          .93752     (Insuf)    .72403     2.0152         86\ntallyTempServ2          1.1126     (Insuf)    .89829     2.2900         89\nProCliente_R_Q Queue T  .00000     .00000     .00000     .00000        795\ntallyTempServ3          .87935     (Insuf)    .72403     1.9681         90\ntallyTempServ4              --         --         --         --          0\ntallyTempServ5              --         --         --         --          0\nBDServer_R_Q Queue Tim  .04475     (Corr)     .00000     .34800       1149\ntallyTempServ6              --         --         --         --          0\n\n                           DISCRETE-CHANGE VARIABLES\n\nIdentifier              Average   Half Width  Minimum    Maximum   Final Value\n_______________________________________________________________________________\n\nProCliente_R Busy       .01272     3.3874E-04 .00000     3.0000     .00000\n# in ProCliente_R_Q     .00000     (Insuf)    .00000     .00000     .00000\nBDServer_R Available    1.0000     (Insuf)    1.0000     1.0000     1.0000\nBDServer_R Busy         .39985     .01302     .00000     1.0000     .00000\n# in BDServer_R_Q       .10284     (Corr)     .00000     2.0000     .00000\nProCliente_R Available  19.000     (Insuf)    19.000     19.000     19.000\n\n                                   COUNTERS\n\n                    Identifier                Count   Limit\n                    _________________________________________\n\n                    CountServSaida01             86  Infinite\n                    CountServSaida02             89  Infinite\n                    CountServSaida03             90  Infinite\n                    CountServCheg01              86  Infinite\n                    CountServCheg02              89  Infinite\n                    CountServCheg03              90  Infinite\n\n\n\n117\n\n                            ARENA Simulation Results\n                            Silvia - License #9400000\n\n                        Summary for Replication 6 of 6\n\nProject:                                       Run execution date :  11/19/2002\nAnalyst:                                       Model revision date:  11/19/2002\n\nReplication ended at time      : 500.0\n\n                                 TALLY VARIABLES\n\nIdentifier              Average   Half Width  Minimum    Maximum   Observations\n_______________________________________________________________________________\n\ntallyTempServ1          .94622     (Insuf)    .72403     1.9420         91\ntallyTempServ2          1.1150     (Insuf)    .89829     2.2900         90\nProCliente_R_Q Queue T  .00000     .00000     .00000     .00000        813\ntallyTempServ3          .93027     (Insuf)    .72403     1.9007         90\ntallyTempServ4              --         --         --         --          0\ntallyTempServ5              --         --         --         --          0\nBDServer_R_Q Queue Tim  .04965     .01245     .00000     .34800       1174\ntallyTempServ6              --         --         --         --          0\n\n                           DISCRETE-CHANGE VARIABLES\n\nIdentifier              Average   Half Width  Minimum    Maximum   Final Value\n_______________________________________________________________________________\n\nProCliente_R Busy       .01301     2.7589E-04 .00000     3.0000     .00000\n# in ProCliente_R_Q     .00000     (Insuf)    .00000     .00000     .00000\nBDServer_R Available    1.0000     (Insuf)    1.0000     1.0000     1.0000\nBDServer_R Busy         .40855     .01061     .00000     1.0000     .00000\n# in BDServer_R_Q       .11658     .03169     .00000     2.0000     .00000\nProCliente_R Available  19.000     (Insuf)    19.000     19.000     19.000\n\n                                   COUNTERS\n\n                    Identifier                Count   Limit\n                    _________________________________________\n\n                    CountServSaida01             91  Infinite\n                    CountServSaida02             90  Infinite\n                    CountServSaida03             90  Infinite\n                    CountServCheg01              91  Infinite\n                    CountServCheg02              90  Infinite\n                    CountServCheg03              90  Infinite\n\nSimulation run time: 36.78 minutes.\nSimulation run complete.\n\n\n\n118\n\nattProcAPP=0.174\nProcBDServer = attProcAPP\n                            ARENA Simulation Results\n                            Silvia - License #9400000\n\n                        Summary for Replication 1 of 6\n\nProject:                                       Run execution date :  11/19/2002\nAnalyst:                                       Model revision date:  11/19/2002\n\nReplication ended at time      : 500.0\n\n                                 TALLY VARIABLES\n\nIdentifier              Average   Half Width  Minimum    Maximum   Observations\n_______________________________________________________________________________\n\ntallyTempServ1          1.2486     (Insuf)    1.0655     2.6315         90\nProCliente_R_Q Queue T  .00000     .00000     .00000     .00000        810\ntallyTempServ2          1.4492     (Insuf)    1.2395     2.4575         90\ntallyTempServ3          1.2360     (Insuf)    1.0655     2.4118         90\ntallyTempServ4              --         --         --         --          0\nBDServer_R_Q Queue Tim  .03929     .01393     .00000     .34800       1170\ntallyTempServ5              --         --         --         --          0\ntallyTempServ6              --         --         --         --          0\nAPPServer_R_Q Queue Ti  .00875     .00335     .00000     .34800        540\n\n                           DISCRETE-CHANGE VARIABLES\n\nIdentifier              Average   Half Width  Minimum    Maximum   Final Value\n_______________________________________________________________________________\n\nProCliente_R Busy       .00810     1.9953E-04 .00000     3.0000     .00000\nBDServer_R Available    1.0000     (Insuf)    1.0000     1.0000     1.0000\n# in ProCliente_R_Q     .00000     (Insuf)    .00000     .00000     .00000\nBDServer_R Busy         .40716     .01011     .00000     1.0000     .00000\nAPPServer_R Available   1.0000     (Insuf)    1.0000     1.0000     1.0000\n# in BDServer_R_Q       .09195     .03155     .00000     2.0000     .00000\n# in APPServer_R_Q      .00945     (Insuf)    .00000     2.0000     .00000\nAPPServer_R Busy        .18792     .00433     .00000     1.0000     .00000\nProCliente_R Available  19.000     (Insuf)    19.000     19.000     19.000\n\n                                   COUNTERS\n\n                    Identifier                Count   Limit\n                    _________________________________________\n\n                    CountServSaida01             90  Infinite\n                    CountServSaida02             90  Infinite\n                    CountServSaida03             90  Infinite\n                    CountServCheg01              90  Infinite\n                    CountServCheg02              90  Infinite\n                    CountServCheg03              90  Infinite\n\n                            ARENA Simulation Results\n                            Silvia - License #9400000\n\n                        Summary for Replication 2 of 6\n\nProject:                                       Run execution date :  11/19/2002\nAnalyst:                                       Model revision date:  11/19/2002\n\nReplication ended at time      : 500.0\n\n                                 TALLY VARIABLES\n\nIdentifier              Average   Half Width  Minimum    Maximum   Observations\n_______________________________________________________________________________\n\ntallyTempServ1          1.2982     (Insuf)    1.0655     2.6315         87\nProCliente_R_Q Queue T  .00000     .00000     .00000     .00000        795\ntallyTempServ2          1.5048     (Insuf)    1.2395     2.6160         89\ntallyTempServ3          1.2580     (Insuf)    1.0655     2.2835         89\ntallyTempServ4              --         --         --         --          0\nBDServer_R_Q Queue Tim  .04846     (Corr)     .00000     .34800       1149\ntallyTempServ5              --         --         --         --          0\ntallyTempServ6              --         --         --         --          0\nAPPServer_R_Q Queue Ti  .01003     .00377     .00000     .34800        530\n\n                           DISCRETE-CHANGE VARIABLES\n\n\n\n119\n\nIdentifier              Average   Half Width  Minimum    Maximum   Final Value\n_______________________________________________________________________________\n\nProCliente_R Busy       .00795     2.2185E-04 .00000     3.0000     .00000\nBDServer_R Available    1.0000     (Insuf)    1.0000     1.0000     1.0000\n# in ProCliente_R_Q     .00000     (Insuf)    .00000     .00000     .00000\nBDServer_R Busy         .39985     .01210     .00000     1.0000     .00000\nAPPServer_R Available   1.0000     (Insuf)    1.0000     1.0000     1.0000\n# in BDServer_R_Q       .11136     .03752     .00000     2.0000     .00000\n# in APPServer_R_Q      .01063     (Insuf)    .00000     2.0000     .00000\nAPPServer_R Busy        .18444     .00477     .00000     1.0000     .00000\nProCliente_R Available  19.000     (Insuf)    19.000     19.000     19.000\n\n                                   COUNTERS\n\n                    Identifier                Count   Limit\n                    _________________________________________\n\n                    CountServSaida01             87  Infinite\n                    CountServSaida02             89  Infinite\n                    CountServSaida03             89  Infinite\n                    CountServCheg01              87  Infinite\n                    CountServCheg02              89  Infinite\n                    CountServCheg03              89  Infinite\n\n                            ARENA Simulation Results\n                            Silvia - License #9400000\n\n                        Summary for Replication 3 of 6\n\nProject:                                       Run execution date :  11/19/2002\nAnalyst:                                       Model revision date:  11/19/2002\n\nReplication ended at time      : 500.0\n\n                                 TALLY VARIABLES\n\nIdentifier              Average   Half Width  Minimum    Maximum   Observations\n_______________________________________________________________________________\n\ntallyTempServ1          1.2274     (Insuf)    1.0655     2.6315         89\nProCliente_R_Q Queue T  .00000     .00000     .00000     .00000        808\ntallyTempServ2          1.4894     (Insuf)    1.2395     2.4575         88\ntallyTempServ3          1.2718     (Insuf)    1.0655     2.2835         91\ntallyTempServ4              --         --         --         --          0\nBDServer_R_Q Queue Tim  .04230     (Corr)     .00000     .34800       1164\ntallyTempServ5              --         --         --         --          0\ntallyTempServ6              --         --         --         --          0\nAPPServer_R_Q Queue Ti  .01102     .00438     .00000     .34800        538\n\n                           DISCRETE-CHANGE VARIABLES\n\nIdentifier              Average   Half Width  Minimum    Maximum   Final Value\n_______________________________________________________________________________\n\nProCliente_R Busy       .00808     2.5020E-04 .00000     3.0000     .00000\nBDServer_R Available    1.0000     (Insuf)    1.0000     1.0000     1.0000\n# in ProCliente_R_Q     .00000     (Insuf)    .00000     .00000     .00000\nBDServer_R Busy         .40473     .01255     .00000     1.0000     1.0000\nAPPServer_R Available   1.0000     (Insuf)    1.0000     1.0000     1.0000\n# in BDServer_R_Q       .09848     (Corr)     .00000     2.0000     .00000\n# in APPServer_R_Q      .01186     (Insuf)    .00000     2.0000     .00000\nAPPServer_R Busy        .18698     .00543     .00000     1.0000     1.0000\nProCliente_R Available  19.000     (Insuf)    19.000     19.000     19.000\n\n                                   COUNTERS\n\n                    Identifier                Count   Limit\n                    _________________________________________\n\n                    CountServSaida01             89  Infinite\n                    CountServSaida02             88  Infinite\n                    CountServSaida03             91  Infinite\n                    CountServCheg01              90  Infinite\n                    CountServCheg02              88  Infinite\n                    CountServCheg03              92  Infinite\n\n                            ARENA Simulation Results\n                            Silvia - License #9400000\n\n\n\n120\n\n                        Summary for Replication 4 of 6\n\nProject:                                       Run execution date :  11/19/2002\nAnalyst:                                       Model revision date:  11/19/2002\n\nReplication ended at time      : 500.0\n\n                                 TALLY VARIABLES\n\nIdentifier              Average   Half Width  Minimum    Maximum   Observations\n_______________________________________________________________________________\n\ntallyTempServ1          1.2531     (Insuf)    1.0655     2.6315         92\nProCliente_R_Q Queue T  .00000     .00000     .00000     .00000        818\ntallyTempServ2          1.4562     (Insuf)    1.2395     2.4575         91\ntallyTempServ3          1.2223     (Insuf)    1.0655     2.2835         89\ntallyTempServ4              --         --         --         --          0\nBDServer_R_Q Queue Tim  .03845     (Corr)     .00000     .34800       1181\ntallyTempServ5              --         --         --         --          0\ntallyTempServ6              --         --         --         --          0\nAPPServer_R_Q Queue Ti  .01013     (Corr)     .00000     .34800        545\n\n                           DISCRETE-CHANGE VARIABLES\n\nIdentifier              Average   Half Width  Minimum    Maximum   Final Value\n_______________________________________________________________________________\n\nProCliente_R Busy       .00818     2.4454E-04 .00000     3.0000     .00000\nBDServer_R Available    1.0000     (Insuf)    1.0000     1.0000     1.0000\n# in ProCliente_R_Q     .00000     (Insuf)    .00000     .00000     .00000\nBDServer_R Busy         .41075     .01302     .00000     1.0000     1.0000\nAPPServer_R Available   1.0000     (Insuf)    1.0000     1.0000     1.0000\n# in BDServer_R_Q       .09083     .02664     .00000     2.0000     .00000\n# in APPServer_R_Q      .01104     (Insuf)    .00000     2.0000     .00000\nAPPServer_R Busy        .18966     .00494     .00000     1.0000     .00000\nProCliente_R Available  19.000     (Insuf)    19.000     19.000     19.000\n\n                                   COUNTERS\n\n                    Identifier                Count   Limit\n                    _________________________________________\n\n                    CountServSaida01             92  Infinite\n                    CountServSaida02             91  Infinite\n                    CountServSaida03             89  Infinite\n                    CountServCheg01              92  Infinite\n                    CountServCheg02              91  Infinite\n                    CountServCheg03              90  Infinite\n\n                            ARENA Simulation Results\n                            Silvia - License #9400000\n\n                        Summary for Replication 5 of 6\n\nProject:                                       Run execution date :  11/19/2002\nAnalyst:                                       Model revision date:  11/19/2002\n\nReplication ended at time      : 500.0\n\n                                 TALLY VARIABLES\n\nIdentifier              Average   Half Width  Minimum    Maximum   Observations\n_______________________________________________________________________________\n\ntallyTempServ1          1.2897     (Insuf)    1.0655     2.6315         86\nProCliente_R_Q Queue T  .00000     .00000     .00000     .00000        795\ntallyTempServ2          1.4661     (Insuf)    1.2395     2.5733         89\ntallyTempServ3          1.2222     (Insuf)    1.0655     2.3094         90\ntallyTempServ4              --         --         --         --          0\nBDServer_R_Q Queue Tim  .04145     (Corr)     .00000     .34800       1149\ntallyTempServ5              --         --         --         --          0\ntallyTempServ6              --         --         --         --          0\nAPPServer_R_Q Queue Ti  .01119     .00405     .00000     .34800        530\n\n                           DISCRETE-CHANGE VARIABLES\n\nIdentifier              Average   Half Width  Minimum    Maximum   Final Value\n_______________________________________________________________________________\n\nProCliente_R Busy       .00795     2.0334E-04 .00000     3.0000     .00000\nBDServer_R Available    1.0000     (Insuf)    1.0000     1.0000     1.0000\n\n\n\n121\n\n# in ProCliente_R_Q     .00000     (Insuf)    .00000     .00000     .00000\nBDServer_R Busy         .39985     .01322     .00000     1.0000     .00000\nAPPServer_R Available   1.0000     (Insuf)    1.0000     1.0000     1.0000\n# in BDServer_R_Q       .09525     (Corr)     .00000     2.0000     .00000\n# in APPServer_R_Q      .01186     (Insuf)    .00000     2.0000     .00000\nAPPServer_R Busy        .18444     .00502     .00000     1.0000     .00000\nProCliente_R Available  19.000     (Insuf)    19.000     19.000     19.000\n\n                                   COUNTERS\n\n                    Identifier                Count   Limit\n                    _________________________________________\n\n                    CountServSaida01             86  Infinite\n                    CountServSaida02             89  Infinite\n                    CountServSaida03             90  Infinite\n                    CountServCheg01              86  Infinite\n                    CountServCheg02              89  Infinite\n                    CountServCheg03              90  Infinite\n\n                            ARENA Simulation Results\n                            Silvia - License #9400000\n\n                        Summary for Replication 6 of 6\n\nProject:                                       Run execution date :  11/19/2002\nAnalyst:                                       Model revision date:  11/19/2002\n\nReplication ended at time      : 500.0\n\n                                 TALLY VARIABLES\n\nIdentifier              Average   Half Width  Minimum    Maximum   Observations\n_______________________________________________________________________________\n\ntallyTempServ1          1.2996     (Insuf)    1.0655     2.6315         91\nProCliente_R_Q Queue T  .00000     .00000     .00000     .00000        813\ntallyTempServ2          1.4633     (Insuf)    1.2395     2.4575         90\ntallyTempServ3          1.2822     (Insuf)    1.0655     2.2835         90\ntallyTempServ4              --         --         --         --          0\nBDServer_R_Q Queue Tim  .04780     .01194     .00000     .34800       1174\ntallyTempServ5              --         --         --         --          0\ntallyTempServ6              --         --         --         --          0\nAPPServer_R_Q Queue Ti  .00892     .00347     .00000     .34800        542\n\n                           DISCRETE-CHANGE VARIABLES\n\nIdentifier              Average   Half Width  Minimum    Maximum   Final Value\n_______________________________________________________________________________\n\nProCliente_R Busy       .00813     1.8219E-04 .00000     3.0000     .00000\nBDServer_R Available    1.0000     (Insuf)    1.0000     1.0000     1.0000\n# in ProCliente_R_Q     .00000     (Insuf)    .00000     .00000     .00000\nBDServer_R Busy         .40855     .01074     .00000     1.0000     .00000\nAPPServer_R Available   1.0000     (Insuf)    1.0000     1.0000     1.0000\n# in BDServer_R_Q       .11223     .03051     .00000     2.0000     .00000\n# in APPServer_R_Q      .00967     (Insuf)    .00000     2.0000     .00000\nAPPServer_R Busy        .18862     .00416     .00000     1.0000     .00000\nProCliente_R Available  19.000     (Insuf)    19.000     19.000     19.000\n\n                                   COUNTERS\n\n                    Identifier                Count   Limit\n                    _________________________________________\n\n                    CountServSaida01             91  Infinite\n                    CountServSaida02             90  Infinite\n                    CountServSaida03             90  Infinite\n                    CountServCheg01              91  Infinite\n                    CountServCheg02              90  Infinite\n                    CountServCheg03              90  Infinite\n\nSimulation run time: 23.93 minutes.\nSimulation run complete.\n\n\n\n122\n\n                            ARENA Simulation Results\n                            Silvia - License #9400000\n\n                        Summary for Replication 1 of 6\n\nProject:                                       Run execution date :  11/22/2002\nAnalyst:                                       Model revision date:  11/22/2002\n\nReplication ended at time      : 500.0\n\n                                 TALLY VARIABLES\n\nIdentifier              Average   Half Width  Minimum    Maximum   Observations\n_______________________________________________________________________________\n\ntallyTempServ1          1.0717     (Insuf)    .89153     2.2835         90\ntallyTempServ2          1.2623     (Insuf)    1.0655     2.4575         90\nProCliente_R_Q Queue T  .00000     .00000     .00000     .00000        810\ntallyTempServ3          1.0577     (Insuf)    .89153     2.2378         90\ntallyTempServ4              --         --         --         --          0\ntallyTempServ5              --         --         --         --          0\nBDServer_R_Q Queue Tim  .04045     .01457     .00000     .34800       1170\ntallyTempServ6              --         --         --         --          0\nAPPServer_R_Q Queue Ti  .00289     .00125     .00000     .17400        540\n\n                           DISCRETE-CHANGE VARIABLES\n\nIdentifier              Average   Half Width  Minimum    Maximum   Final Value\n_______________________________________________________________________________\n\nProCliente_R Busy       .00810     2.1618E-04 .00000     3.0000     .00000\n# in ProCliente_R_Q     .00000     (Insuf)    .00000     .00000     .00000\nBDServer_R Available    1.0000     (Insuf)    1.0000     1.0000     1.0000\nBDServer_R Busy         .40716     .01004     .00000     1.0000     .00000\nAPPServer_R Available   1.0000     (Insuf)    1.0000     1.0000     1.0000\n# in BDServer_R_Q       .09465     .03251     .00000     2.0000     .00000\n# in APPServer_R_Q      .00312     (Insuf)    .00000     2.0000     .00000\nAPPServer_R Busy        .09396     .00236     .00000     1.0000     .00000\nProCliente_R Available  19.000     (Insuf)    19.000     19.000     19.000\n\n                                   COUNTERS\n\n                    Identifier                Count   Limit\n                    _________________________________________\n\n                    CountServSaida01             90  Infinite\n                    CountServSaida02             90  Infinite\n                    CountServSaida03             90  Infinite\n                    CountServCheg01              90  Infinite\n                    CountServCheg02              90  Infinite\n                    CountServCheg03              90  Infinite\n\n                            ARENA Simulation Results\n                            Silvia - License #9400000\n\n                        Summary for Replication 2 of 6\n\nProject:                                       Run execution date :  11/22/2002\nAnalyst:                                       Model revision date:  11/22/2002\n\nReplication ended at time      : 500.0\n\n                                 TALLY VARIABLES\n\nIdentifier              Average   Half Width  Minimum    Maximum   Observations\n_______________________________________________________________________________\n\ntallyTempServ1          1.1281     (Insuf)    .89153     2.2835         87\ntallyTempServ2          1.3298     (Insuf)    1.0655     2.4575         89\nProCliente_R_Q Queue T  .00000     .00000     .00000     .00000        795\ntallyTempServ3          1.0807     (Insuf)    .89153     2.1095         89\ntallyTempServ4              --         --         --         --          0\ntallyTempServ5              --         --         --         --          0\nBDServer_R_Q Queue Tim  .05143     (Corr)     .00000     .34800       1149\ntallyTempServ6              --         --         --         --          0\nAPPServer_R_Q Queue Ti  .00350     .00158     .00000     .17400        530\n\n                           DISCRETE-CHANGE VARIABLES\n\nIdentifier              Average   Half Width  Minimum    Maximum   Final Value\n_______________________________________________________________________________\n\n\n\n123\n\nProCliente_R Busy       .00795     2.1369E-04 .00000     3.0000     .00000\n# in ProCliente_R_Q     .00000     (Insuf)    .00000     .00000     .00000\nBDServer_R Available    1.0000     (Insuf)    1.0000     1.0000     1.0000\nBDServer_R Busy         .39985     .01248     .00000     1.0000     .00000\nAPPServer_R Available   1.0000     (Insuf)    1.0000     1.0000     1.0000\n# in BDServer_R_Q       .11819     .03979     .00000     2.0000     .00000\n# in APPServer_R_Q      .00371     (Insuf)    .00000     2.0000     .00000\nAPPServer_R Busy        .09222     .00243     .00000     1.0000     .00000\nProCliente_R Available  19.000     (Insuf)    19.000     19.000     19.000\n\n                                   COUNTERS\n\n                    Identifier                Count   Limit\n                    _________________________________________\n\n                    CountServSaida01             87  Infinite\n                    CountServSaida02             89  Infinite\n                    CountServSaida03             89  Infinite\n                    CountServCheg01              87  Infinite\n                    CountServCheg02              89  Infinite\n                    CountServCheg03              89  Infinite\n\n                            ARENA Simulation Results\n                            Silvia - License #9400000\n\n                        Summary for Replication 3 of 6\n\nProject:                                       Run execution date :  11/22/2002\nAnalyst:                                       Model revision date:  11/22/2002\n\nReplication ended at time      : 500.0\n\n                                 TALLY VARIABLES\n\nIdentifier              Average   Half Width  Minimum    Maximum   Observations\n_______________________________________________________________________________\n\ntallyTempServ1          1.0497     (Insuf)    .89153     2.2835         89\ntallyTempServ2          1.3153     (Insuf)    1.0655     2.4575         88\nProCliente_R_Q Queue T  .00000     .00000     .00000     .00000        808\ntallyTempServ3          1.0917     (Insuf)    .89153     2.1095         91\ntallyTempServ4              --         --         --         --          0\ntallyTempServ5              --         --         --         --          0\nBDServer_R_Q Queue Tim  .04519     (Corr)     .00000     .34800       1164\ntallyTempServ6              --         --         --         --          0\nAPPServer_R_Q Queue Ti  .00312     .00153     .00000     .17400        538\n\n                           DISCRETE-CHANGE VARIABLES\n\nIdentifier              Average   Half Width  Minimum    Maximum   Final Value\n_______________________________________________________________________________\n\nProCliente_R Busy       .00808     2.5425E-04 .00000     3.0000     .00000\n# in ProCliente_R_Q     .00000     (Insuf)    .00000     .00000     .00000\nBDServer_R Available    1.0000     (Insuf)    1.0000     1.0000     1.0000\nBDServer_R Busy         .40490     .01248     .00000     1.0000     1.0000\nAPPServer_R Available   1.0000     (Insuf)    1.0000     1.0000     1.0000\n# in BDServer_R_Q       .10520     (Corr)     .00000     2.0000     .00000\n# in APPServer_R_Q      .00336     (Insuf)    .00000     2.0000     .00000\nAPPServer_R Busy        .09354     .00280     .00000     1.0000     1.0000\nProCliente_R Available  19.000     (Insuf)    19.000     19.000     19.000\n\n                                   COUNTERS\n\n                    Identifier                Count   Limit\n                    _________________________________________\n\n                    CountServSaida01             89  Infinite\n                    CountServSaida02             88  Infinite\n                    CountServSaida03             91  Infinite\n                    CountServCheg01              90  Infinite\n                    CountServCheg02              88  Infinite\n                    CountServCheg03              92  Infinite\n\n                            ARENA Simulation Results\n                            Silvia - License #9400000\n\n                        Summary for Replication 4 of 6\n\n\n\n124\n\nProject:                                       Run execution date :  11/22/2002\nAnalyst:                                       Model revision date:  11/22/2002\n\nReplication ended at time      : 500.0\n\n                                 TALLY VARIABLES\n\nIdentifier              Average   Half Width  Minimum    Maximum   Observations\n_______________________________________________________________________________\n\ntallyTempServ1          1.0738     (Insuf)    .89153     2.2835         92\ntallyTempServ2          1.2742     (Insuf)    1.0655     2.4575         91\nProCliente_R_Q Queue T  .00000     .00000     .00000     .00000        818\ntallyTempServ3          1.0410     (Insuf)    .89153     2.1095         89\ntallyTempServ4              --         --         --         --          0\ntallyTempServ5              --         --         --         --          0\nBDServer_R_Q Queue Tim  .04014     (Corr)     .00000     .34800       1181\ntallyTempServ6              --         --         --         --          0\nAPPServer_R_Q Queue Ti  .00307     .00135     .00000     .17400        545\n\n                           DISCRETE-CHANGE VARIABLES\n\nIdentifier              Average   Half Width  Minimum    Maximum   Final Value\n_______________________________________________________________________________\n\nProCliente_R Busy       .00818     2.6051E-04 .00000     3.0000     .00000\n# in ProCliente_R_Q     .00000     (Insuf)    .00000     .00000     .00000\nBDServer_R Available    1.0000     (Insuf)    1.0000     1.0000     1.0000\nBDServer_R Busy         .41092     .01335     .00000     1.0000     1.0000\nAPPServer_R Available   1.0000     (Insuf)    1.0000     1.0000     1.0000\n# in BDServer_R_Q       .09481     .02850     .00000     2.0000     .00000\n# in APPServer_R_Q      .00334     (Insuf)    .00000     2.0000     .00000\nAPPServer_R Busy        .09483     .00286     .00000     1.0000     .00000\nProCliente_R Available  19.000     (Insuf)    19.000     19.000     19.000\n\n                                   COUNTERS\n\n                    Identifier                Count   Limit\n                    _________________________________________\n\n                    CountServSaida01             92  Infinite\n                    CountServSaida02             91  Infinite\n                    CountServSaida03             89  Infinite\n                    CountServCheg01              92  Infinite\n                    CountServCheg02              91  Infinite\n                    CountServCheg03              90  Infinite\n\n                            ARENA Simulation Results\n                            Silvia - License #9400000\n\n                        Summary for Replication 5 of 6\n\nProject:                                       Run execution date :  11/22/2002\nAnalyst:                                       Model revision date:  11/22/2002\n\nReplication ended at time      : 500.0\n\n                                 TALLY VARIABLES\n\nIdentifier              Average   Half Width  Minimum    Maximum   Observations\n_______________________________________________________________________________\n\ntallyTempServ1          1.1140     (Insuf)    .89153     2.2835         86\ntallyTempServ2          1.2809     (Insuf)    1.0655     2.4575         89\nProCliente_R_Q Queue T  .00000     .00000     .00000     .00000        795\ntallyTempServ3          1.0521     (Insuf)    .89153     2.1354         90\ntallyTempServ4              --         --         --         --          0\ntallyTempServ5              --         --         --         --          0\nBDServer_R_Q Queue Tim  .04418     (Corr)     .00000     .34800       1149\ntallyTempServ6              --         --         --         --          0\nAPPServer_R_Q Queue Ti  .00377     .00154     .00000     .17400        530\n\n                           DISCRETE-CHANGE VARIABLES\n\nIdentifier              Average   Half Width  Minimum    Maximum   Final Value\n_______________________________________________________________________________\n\nProCliente_R Busy       .00795     2.0755E-04 .00000     3.0000     .00000\n# in ProCliente_R_Q     .00000     (Insuf)    .00000     .00000     .00000\nBDServer_R Available    1.0000     (Insuf)    1.0000     1.0000     1.0000\nBDServer_R Busy         .39985     .01307     .00000     1.0000     .00000\n\n\n\n125\n\nAPPServer_R Available   1.0000     (Insuf)    1.0000     1.0000     1.0000\n# in BDServer_R_Q       .10153     (Corr)     .00000     2.0000     .00000\n# in APPServer_R_Q      .00399     (Insuf)    .00000     2.0000     .00000\nAPPServer_R Busy        .09222     .00250     .00000     1.0000     .00000\nProCliente_R Available  19.000     (Insuf)    19.000     19.000     19.000\n\n                                   COUNTERS\n\n                    Identifier                Count   Limit\n                    _________________________________________\n\n                    CountServSaida01             86  Infinite\n                    CountServSaida02             89  Infinite\n                    CountServSaida03             90  Infinite\n                    CountServCheg01              86  Infinite\n                    CountServCheg02              89  Infinite\n                    CountServCheg03              90  Infinite\n\n                            ARENA Simulation Results\n                            Silvia - License #9400000\n\n                        Summary for Replication 6 of 6\n\nProject:                                       Run execution date :  11/22/2002\nAnalyst:                                       Model revision date:  11/22/2002\n\nReplication ended at time      : 500.0\n\n                                 TALLY VARIABLES\n\nIdentifier              Average   Half Width  Minimum    Maximum   Observations\n_______________________________________________________________________________\n\ntallyTempServ1          1.1219     (Insuf)    .89153     2.2835         91\ntallyTempServ2          1.2808     (Insuf)    1.0655     2.4575         90\nProCliente_R_Q Queue T  .00000     .00000     .00000     .00000        813\ntallyTempServ3          1.1013     (Insuf)    .89153     2.1095         90\ntallyTempServ4              --         --         --         --          0\ntallyTempServ5              --         --         --         --          0\nBDServer_R_Q Queue Tim  .04915     .01241     .00000     .34800       1174\ntallyTempServ6              --         --         --         --          0\nAPPServer_R_Q Queue Ti  .00282     .00147     .00000     .17400        542\n\n                           DISCRETE-CHANGE VARIABLES\n\nIdentifier              Average   Half Width  Minimum    Maximum   Final Value\n_______________________________________________________________________________\n\nProCliente_R Busy       .00813     1.7243E-04 .00000     3.0000     .00000\n# in ProCliente_R_Q     .00000     (Insuf)    .00000     .00000     .00000\nBDServer_R Available    1.0000     (Insuf)    1.0000     1.0000     1.0000\nBDServer_R Busy         .40855     .01074     .00000     1.0000     .00000\nAPPServer_R Available   1.0000     (Insuf)    1.0000     1.0000     1.0000\n# in BDServer_R_Q       .11541     .03150     .00000     2.0000     .00000\n# in APPServer_R_Q      .00306     (Insuf)    .00000     2.0000     .00000\nAPPServer_R Busy        .09431     .00205     .00000     1.0000     .00000\nProCliente_R Available  19.000     (Insuf)    19.000     19.000     19.000\n\n                                   COUNTERS\n\n                    Identifier                Count   Limit\n                    _________________________________________\n\n                    CountServSaida01             91  Infinite\n                    CountServSaida02             90  Infinite\n                    CountServSaida03             90  Infinite\n                    CountServCheg01              91  Infinite\n                    CountServCheg02              90  Infinite\n                    CountServCheg03              90  Infinite\n\nSimulation run time: 6.90 minutes.\nSimulation run complete.\n\n\n\n126\n\n                            ARENA Simulation Results\n                            Silvia - License #9400000\n\n                        Summary for Replication 1 of 6\n\nProject:                                       Run execution date :  11/22/2002\nAnalyst:                                       Model revision date:  11/22/2002\n\nReplication ended at time      : 500.0\n\n                                 TALLY VARIABLES\n\nIdentifier              Average   Half Width  Minimum    Maximum   Observations\n_______________________________________________________________________________\n\ntallyTempServ1          .97915     (Insuf)    .80453     2.1965         90\ntallyTempServ2          1.1743     (Insuf)    .97856     2.3705         90\nProCliente_R_Q Queue T  .00000     .00000     .00000     .00000        810\ntallyTempServ3          .96807     (Insuf)    .80453     2.1508         90\ntallyTempServ4              --         --         --         --          0\ntallyTempServ5              --         --         --         --          0\nBDServer_R_Q Queue Tim  .04077     .01477     .00000     .34800       1170\ntallyTempServ6              --         --         --         --          0\nAPPServer_R_Q Queue Ti  6.5165E-04 (Corr)     .00000     .08700        540\n\n                           DISCRETE-CHANGE VARIABLES\n\nIdentifier              Average   Half Width  Minimum    Maximum   Final Value\n_______________________________________________________________________________\n\nProCliente_R Busy       .00810     2.1618E-04 .00000     3.0000     .00000\n# in ProCliente_R_Q     .00000     (Insuf)    .00000     .00000     .00000\nBDServer_R Available    1.0000     (Insuf)    1.0000     1.0000     1.0000\nBDServer_R Busy         .40716     .01004     .00000     1.0000     .00000\nAPPServer_R Available   1.0000     (Insuf)    1.0000     1.0000     1.0000\n# in BDServer_R_Q       .09541     .03314     .00000     2.0000     .00000\n# in APPServer_R_Q      7.0378E-04 (Insuf)    .00000     2.0000     .00000\nAPPServer_R Busy        .04698     .00118     .00000     1.0000     .00000\nProCliente_R Available  19.000     (Insuf)    19.000     19.000     19.000\n\n                                   COUNTERS\n\n                    Identifier                Count   Limit\n                    _________________________________________\n\n                    CountServSaida01             90  Infinite\n                    CountServSaida02             90  Infinite\n                    CountServSaida03             90  Infinite\n                    CountServCheg01              90  Infinite\n                    CountServCheg02              90  Infinite\n                    CountServCheg03              90  Infinite\n\n                            ARENA Simulation Results\n                            Silvia - License #9400000\n\n                        Summary for Replication 2 of 6\n\nProject:                                       Run execution date :  11/22/2002\nAnalyst:                                       Model revision date:  11/22/2002\n\nReplication ended at time      : 500.0\n\n                                 TALLY VARIABLES\n\nIdentifier              Average   Half Width  Minimum    Maximum   Observations\n_______________________________________________________________________________\n\ntallyTempServ1          1.0401     (Insuf)    .80453     2.1965         87\ntallyTempServ2          1.2387     (Insuf)    .97856     2.3705         89\nProCliente_R_Q Queue T  .00000     .00000     .00000     .00000        795\ntallyTempServ3          .99226     (Insuf)    .80453     2.0225         89\ntallyTempServ4              --         --         --         --          0\ntallyTempServ5              --         --         --         --          0\nBDServer_R_Q Queue Tim  .05204     (Corr)     .00000     .34800       1149\ntallyTempServ6              --         --         --         --          0\nAPPServer_R_Q Queue Ti  .00108     6.6740E-04 .00000     .08700        530\n\n                           DISCRETE-CHANGE VARIABLES\n\nIdentifier              Average   Half Width  Minimum    Maximum   Final Value\n_______________________________________________________________________________\n\n\n\n127\n\nProCliente_R Busy       .00795     2.2185E-04 .00000     3.0000     .00000\n# in ProCliente_R_Q     .00000     (Insuf)    .00000     .00000     .00000\nBDServer_R Available    1.0000     (Insuf)    1.0000     1.0000     1.0000\nBDServer_R Busy         .39985     .01256     .00000     1.0000     .00000\nAPPServer_R Available   1.0000     (Insuf)    1.0000     1.0000     1.0000\n# in BDServer_R_Q       .11959     .04013     .00000     2.0000     .00000\n# in APPServer_R_Q      .00114     (Insuf)    .00000     2.0000     .00000\nAPPServer_R Busy        .04611     .00120     .00000     1.0000     .00000\nProCliente_R Available  19.000     (Insuf)    19.000     19.000     19.000\n\n                                   COUNTERS\n\n                    Identifier                Count   Limit\n                    _________________________________________\n\n                    CountServSaida01             87  Infinite\n                    CountServSaida02             89  Infinite\n                    CountServSaida03             89  Infinite\n                    CountServCheg01              87  Infinite\n                    CountServCheg02              89  Infinite\n                    CountServCheg03              89  Infinite\n\n                            ARENA Simulation Results\n                            Silvia - License #9400000\n\n                        Summary for Replication 3 of 6\n\nProject:                                       Run execution date :  11/22/2002\nAnalyst:                                       Model revision date:  11/22/2002\n\nReplication ended at time      : 500.0\n\n                                 TALLY VARIABLES\n\nIdentifier              Average   Half Width  Minimum    Maximum   Observations\n_______________________________________________________________________________\n\ntallyTempServ1          .95745     (Insuf)    .80453     2.1965         89\ntallyTempServ2          1.2260     (Insuf)    .97856     2.3705         88\nProCliente_R_Q Queue T  .00000     .00000     .00000     .00000        808\ntallyTempServ3          1.0034     (Insuf)    .80453     2.0225         91\ntallyTempServ4              --         --         --         --          0\ntallyTempServ5              --         --         --         --          0\nBDServer_R_Q Queue Tim  .04551     (Corr)     .00000     .34800       1164\ntallyTempServ6              --         --         --         --          0\nAPPServer_R_Q Queue Ti  9.5230E-04 (Corr)     .00000     .08700        538\n\n                           DISCRETE-CHANGE VARIABLES\n\nIdentifier              Average   Half Width  Minimum    Maximum   Final Value\n_______________________________________________________________________________\n\nProCliente_R Busy       .00808     2.5425E-04 .00000     3.0000     .00000\n# in ProCliente_R_Q     .00000     (Insuf)    .00000     .00000     .00000\nBDServer_R Available    1.0000     (Insuf)    1.0000     1.0000     1.0000\nBDServer_R Busy         .40499     .01253     .00000     1.0000     1.0000\nAPPServer_R Available   1.0000     (Insuf)    1.0000     1.0000     1.0000\n# in BDServer_R_Q       .10596     (Corr)     .00000     2.0000     1.0000\n# in APPServer_R_Q      .00102     (Insuf)    .00000     2.0000     .00000\nAPPServer_R Busy        .04681     .00139     .00000     1.0000     .00000\nProCliente_R Available  19.000     (Insuf)    19.000     19.000     19.000\n\n                                   COUNTERS\n\n                    Identifier                Count   Limit\n                    _________________________________________\n\n                    CountServSaida01             89  Infinite\n                    CountServSaida02             88  Infinite\n                    CountServSaida03             91  Infinite\n                    CountServCheg01              90  Infinite\n                    CountServCheg02              88  Infinite\n                    CountServCheg03              92  Infinite\n\n                            ARENA Simulation Results\n                            Silvia - License #9400000\n\n                        Summary for Replication 4 of 6\n\n\n\n128\n\nProject:                                       Run execution date :  11/22/2002\nAnalyst:                                       Model revision date:  11/22/2002\n\nReplication ended at time      : 500.0\n\n                                 TALLY VARIABLES\n\nIdentifier              Average   Half Width  Minimum    Maximum   Observations\n_______________________________________________________________________________\n\ntallyTempServ1          .98183     (Insuf)    .80453     2.1965         92\ntallyTempServ2          1.1865     (Insuf)    .97856     2.3705         91\nProCliente_R_Q Queue T  .00000     .00000     .00000     .00000        818\ntallyTempServ3          .95409     (Insuf)    .80453     2.0225         89\ntallyTempServ4              --         --         --         --          0\ntallyTempServ5              --         --         --         --          0\nBDServer_R_Q Queue Tim  .04076     (Corr)     .00000     .34800       1182\ntallyTempServ6              --         --         --         --          0\nAPPServer_R_Q Queue Ti  6.7301E-04 (Corr)     .00000     .08700        545\n\n                           DISCRETE-CHANGE VARIABLES\n\nIdentifier              Average   Half Width  Minimum    Maximum   Final Value\n_______________________________________________________________________________\n\nProCliente_R Busy       .00818     2.7189E-04 .00000     3.0000     .00000\n# in ProCliente_R_Q     .00000     (Insuf)    .00000     .00000     .00000\nBDServer_R Available    1.0000     (Insuf)    1.0000     1.0000     1.0000\nBDServer_R Busy         .41101     .01351     .00000     1.0000     1.0000\nAPPServer_R Available   1.0000     (Insuf)    1.0000     1.0000     1.0000\n# in BDServer_R_Q       .09637     .02873     .00000     2.0000     .00000\n# in APPServer_R_Q      7.3358E-04 (Insuf)    .00000     2.0000     .00000\nAPPServer_R Busy        .04741     .00152     .00000     1.0000     .00000\nProCliente_R Available  19.000     (Insuf)    19.000     19.000     19.000\n\n                                   COUNTERS\n\n                    Identifier                Count   Limit\n                    _________________________________________\n\n                    CountServSaida01             92  Infinite\n                    CountServSaida02             91  Infinite\n                    CountServSaida03             89  Infinite\n                    CountServCheg01              92  Infinite\n                    CountServCheg02              91  Infinite\n                    CountServCheg03              90  Infinite\n\n                            ARENA Simulation Results\n                            Silvia - License #9400000\n\n                        Summary for Replication 5 of 6\n\nProject:                                       Run execution date :  11/22/2002\nAnalyst:                                       Model revision date:  11/22/2002\n\nReplication ended at time      : 500.0\n\n                                 TALLY VARIABLES\n\nIdentifier              Average   Half Width  Minimum    Maximum   Observations\n_______________________________________________________________________________\n\ntallyTempServ1          1.0203     (Insuf)    .80453     2.1965         86\ntallyTempServ2          1.1938     (Insuf)    .97856     2.3705         89\nProCliente_R_Q Queue T  .00000     .00000     .00000     .00000        795\ntallyTempServ3          .96231     (Insuf)    .80453     2.0484         90\ntallyTempServ4              --         --         --         --          0\ntallyTempServ5              --         --         --         --          0\nBDServer_R_Q Queue Tim  .04477     (Corr)     .00000     .34800       1149\ntallyTempServ6              --         --         --         --          0\nAPPServer_R_Q Queue Ti  9.0353E-04 (Corr)     .00000     .08700        530\n\n                           DISCRETE-CHANGE VARIABLES\n\nIdentifier              Average   Half Width  Minimum    Maximum   Final Value\n_______________________________________________________________________________\n\nProCliente_R Busy       .00795     2.0962E-04 .00000     3.0000     .00000\n# in ProCliente_R_Q     .00000     (Insuf)    .00000     .00000     .00000\nBDServer_R Available    1.0000     (Insuf)    1.0000     1.0000     1.0000\nBDServer_R Busy         .39985     .01314     .00000     1.0000     .00000\n\n\n\n129\n\nAPPServer_R Available   1.0000     (Insuf)    1.0000     1.0000     1.0000\n# in BDServer_R_Q       .10288     (Corr)     .00000     2.0000     .00000\n# in APPServer_R_Q      9.5774E-04 (Insuf)    .00000     2.0000     .00000\nAPPServer_R Busy        .04611     .00125     .00000     1.0000     .00000\nProCliente_R Available  19.000     (Insuf)    19.000     19.000     19.000\n\n                                   COUNTERS\n\n                    Identifier                Count   Limit\n                    _________________________________________\n\n                    CountServSaida01             86  Infinite\n                    CountServSaida02             89  Infinite\n                    CountServSaida03             90  Infinite\n                    CountServCheg01              86  Infinite\n                    CountServCheg02              89  Infinite\n                    CountServCheg03              90  Infinite\n\n                            ARENA Simulation Results\n                            Silvia - License #9400000\n\n                        Summary for Replication 6 of 6\n\nProject:                                       Run execution date :  11/22/2002\nAnalyst:                                       Model revision date:  11/22/2002\n\nReplication ended at time      : 500.0\n\n                                 TALLY VARIABLES\n\nIdentifier              Average   Half Width  Minimum    Maximum   Observations\n_______________________________________________________________________________\n\ntallyTempServ1          1.0295     (Insuf)    .80453     2.1965         91\ntallyTempServ2          1.1961     (Insuf)    .97856     2.3705         90\nProCliente_R_Q Queue T  .00000     .00000     .00000     .00000        813\ntallyTempServ3          1.0139     (Insuf)    .80453     2.0225         90\ntallyTempServ4              --         --         --         --          0\ntallyTempServ5              --         --         --         --          0\nBDServer_R_Q Queue Tim  .04977     .01260     .00000     .34800       1174\ntallyTempServ6              --         --         --         --          0\nAPPServer_R_Q Queue Ti  8.8732E-04 (Corr)     .00000     .08700        542\n\n                           DISCRETE-CHANGE VARIABLES\n\nIdentifier              Average   Half Width  Minimum    Maximum   Final Value\n_______________________________________________________________________________\n\nProCliente_R Busy       .00813     1.7738E-04 .00000     3.0000     .00000\n# in ProCliente_R_Q     .00000     (Insuf)    .00000     .00000     .00000\nBDServer_R Available    1.0000     (Insuf)    1.0000     1.0000     1.0000\nBDServer_R Busy         .40855     .01068     .00000     1.0000     .00000\nAPPServer_R Available   1.0000     (Insuf)    1.0000     1.0000     1.0000\n# in BDServer_R_Q       .11685     .03193     .00000     2.0000     .00000\n# in APPServer_R_Q      9.6186E-04 (Insuf)    .00000     2.0000     .00000\nAPPServer_R Busy        .04715     9.9707E-04 .00000     1.0000     .00000\nProCliente_R Available  19.000     (Insuf)    19.000     19.000     19.000\n\n                                   COUNTERS\n\n                    Identifier                Count   Limit\n                    _________________________________________\n\n                    CountServSaida01             91  Infinite\n                    CountServSaida02             90  Infinite\n                    CountServSaida03             90  Infinite\n                    CountServCheg01              91  Infinite\n                    CountServCheg02              90  Infinite\n                    CountServCheg03              90  Infinite\n\nSimulation run time: 8.33 minutes.\nSimulation run complete.\n\n\n\n130\n\n                            ARENA Simulation Results\n                            Silvia - License #9400000\n\n                        Summary for Replication 1 of 6\n\nProject:                                       Run execution date :  11/22/2002\nAnalyst:                                       Model revision date:  11/22/2002\n\nReplication ended at time      : 500.0\n\n                                 TALLY VARIABLES\n\nIdentifier              Average   Half Width  Minimum    Maximum   Observations\n_______________________________________________________________________________\n\ntallyTempServ1          .92636     (Insuf)    .75233     2.1443         90\nProCliente_R_Q Queue T  .00000     .00000     .00000     .00000        810\ntallyTempServ2          1.1190     (Insuf)    .92636     2.3183         90\ntallyTempServ3          .91504     (Insuf)    .75233     2.0986         90\ntallyTempServ4              --         --         --         --          0\nBDServer_R_Q Queue Tim  .04067     .01482     .00000     .34800       1170\ntallyTempServ5              --         --         --         --          0\ntallyTempServ6              --         --         --         --          0\nAPPServer_R_Q Queue Ti  1.1236E-04 (Corr)     .00000     .03480        540\n\n                           DISCRETE-CHANGE VARIABLES\n\nIdentifier              Average   Half Width  Minimum    Maximum   Final Value\n_______________________________________________________________________________\n\nProCliente_R Busy       .00810     2.1618E-04 .00000     3.0000     .00000\nBDServer_R Available    1.0000     (Insuf)    1.0000     1.0000     1.0000\n# in ProCliente_R_Q     .00000     (Insuf)    .00000     .00000     .00000\nBDServer_R Busy         .40716     .01004     .00000     1.0000     .00000\nAPPServer_R Available   1.0000     (Insuf)    1.0000     1.0000     1.0000\n# in BDServer_R_Q       .09518     .03321     .00000     2.0000     .00000\n# in APPServer_R_Q      1.2135E-04 (Insuf)    .00000     2.0000     .00000\nAPPServer_R Busy        .01879     4.7345E-04 .00000     1.0000     .00000\nProCliente_R Available  19.000     (Insuf)    19.000     19.000     19.000\n\n                                   COUNTERS\n\n                    Identifier                Count   Limit\n                    _________________________________________\n\n                    CountServSaida01             90  Infinite\n                    CountServSaida02             90  Infinite\n                    CountServSaida03             90  Infinite\n                    CountServCheg01              90  Infinite\n                    CountServCheg02              90  Infinite\n                    CountServCheg03              90  Infinite\n\n                            ARENA Simulation Results\n                            Silvia - License #9400000\n\n                        Summary for Replication 2 of 6\n\nProject:                                       Run execution date :  11/22/2002\nAnalyst:                                       Model revision date:  11/22/2002\n\nReplication ended at time      : 500.0\n\n                                 TALLY VARIABLES\n\nIdentifier              Average   Half Width  Minimum    Maximum   Observations\n_______________________________________________________________________________\n\ntallyTempServ1          .98590     (Insuf)    .75233     2.1443         87\nProCliente_R_Q Queue T  .00000     .00000     .00000     .00000        795\ntallyTempServ2          1.1860     (Insuf)    .92636     2.3183         89\ntallyTempServ3          .93713     (Insuf)    .75233     1.9703         89\ntallyTempServ4              --         --         --         --          0\nBDServer_R_Q Queue Tim  .05204     (Corr)     .00000     .34800       1149\ntallyTempServ5              --         --         --         --          0\ntallyTempServ6              --         --         --         --          0\nAPPServer_R_Q Queue Ti  1.7958E-04 (Corr)     .00000     .03480        530\n\n                           DISCRETE-CHANGE VARIABLES\n\nIdentifier              Average   Half Width  Minimum    Maximum   Final Value\n_______________________________________________________________________________\n\n\n\n131\n\nProCliente_R Busy       .00795     2.2185E-04 .00000     3.0000     .00000\nBDServer_R Available    1.0000     (Insuf)    1.0000     1.0000     1.0000\n# in ProCliente_R_Q     .00000     (Insuf)    .00000     .00000     .00000\nBDServer_R Busy         .39985     .01261     .00000     1.0000     .00000\nAPPServer_R Available   1.0000     (Insuf)    1.0000     1.0000     1.0000\n# in BDServer_R_Q       .11958     .04056     .00000     2.0000     .00000\n# in APPServer_R_Q      1.9036E-04 (Insuf)    .00000     2.0000     .00000\nAPPServer_R Busy        .01844     4.7761E-04 .00000     1.0000     .00000\nProCliente_R Available  19.000     (Insuf)    19.000     19.000     19.000\n\n                                   COUNTERS\n\n                    Identifier                Count   Limit\n                    _________________________________________\n\n                    CountServSaida01             87  Infinite\n                    CountServSaida02             89  Infinite\n                    CountServSaida03             89  Infinite\n                    CountServCheg01              87  Infinite\n                    CountServCheg02              89  Infinite\n                    CountServCheg03              89  Infinite\n\n                            ARENA Simulation Results\n                            Silvia - License #9400000\n\n                        Summary for Replication 3 of 6\n\nProject:                                       Run execution date :  11/22/2002\nAnalyst:                                       Model revision date:  11/22/2002\n\nReplication ended at time      : 500.0\n\n                                 TALLY VARIABLES\n\nIdentifier              Average   Half Width  Minimum    Maximum   Observations\n_______________________________________________________________________________\n\ntallyTempServ1          .90489     (Insuf)    .75233     2.1443         89\nProCliente_R_Q Queue T  .00000     .00000     .00000     .00000        808\ntallyTempServ2          1.1733     (Insuf)    .92636     2.3183         88\ntallyTempServ3          .95039     (Insuf)    .75233     1.9703         91\ntallyTempServ4              --         --         --         --          0\nBDServer_R_Q Queue Tim  .04574     (Corr)     .00000     .34800       1164\ntallyTempServ5              --         --         --         --          0\ntallyTempServ6              --         --         --         --          0\nAPPServer_R_Q Queue Ti  1.7744E-04 (Corr)     .00000     .03480        538\n\n                           DISCRETE-CHANGE VARIABLES\n\nIdentifier              Average   Half Width  Minimum    Maximum   Final Value\n_______________________________________________________________________________\n\nProCliente_R Busy       .00808     2.5425E-04 .00000     3.0000     .00000\nBDServer_R Available    1.0000     (Insuf)    1.0000     1.0000     1.0000\n# in ProCliente_R_Q     .00000     (Insuf)    .00000     .00000     .00000\nBDServer_R Busy         .40504     .01254     .00000     1.0000     1.0000\nAPPServer_R Available   1.0000     (Insuf)    1.0000     1.0000     1.0000\n# in BDServer_R_Q       .10654     (Corr)     .00000     2.0000     1.0000\n# in APPServer_R_Q      1.9093E-04 (Insuf)    .00000     2.0000     .00000\nAPPServer_R Busy        .01872     5.4940E-04 .00000     1.0000     .00000\nProCliente_R Available  19.000     (Insuf)    19.000     19.000     19.000\n\n                                   COUNTERS\n\n                    Identifier                Count   Limit\n                    _________________________________________\n\n                    CountServSaida01             89  Infinite\n                    CountServSaida02             88  Infinite\n                    CountServSaida03             91  Infinite\n                    CountServCheg01              90  Infinite\n                    CountServCheg02              88  Infinite\n                    CountServCheg03              92  Infinite\n\n                            ARENA Simulation Results\n                            Silvia - License #9400000\n\n                        Summary for Replication 4 of 6\n\n\n\n132\n\nProject:                                       Run execution date :  11/22/2002\nAnalyst:                                       Model revision date:  11/22/2002\n\nReplication ended at time      : 500.0\n\n                                 TALLY VARIABLES\n\nIdentifier              Average   Half Width  Minimum    Maximum   Observations\n_______________________________________________________________________________\n\ntallyTempServ1          .92933     (Insuf)    .75233     2.1443         92\nProCliente_R_Q Queue T  .00000     .00000     .00000     .00000        818\ntallyTempServ2          1.1335     (Insuf)    .92636     2.3183         91\ntallyTempServ3          .90162     (Insuf)    .75233     1.9703         89\ntallyTempServ4              --         --         --         --          0\nBDServer_R_Q Queue Tim  .04089     (Corr)     .00000     .34800       1182\ntallyTempServ5              --         --         --         --          0\ntallyTempServ6              --         --         --         --          0\nAPPServer_R_Q Queue Ti  1.6935E-04 (Corr)     .00000     .03480        545\n\n                           DISCRETE-CHANGE VARIABLES\n\nIdentifier              Average   Half Width  Minimum    Maximum   Final Value\n_______________________________________________________________________________\n\nProCliente_R Busy       .00818     2.7974E-04 .00000     3.0000     .00000\nBDServer_R Available    1.0000     (Insuf)    1.0000     1.0000     1.0000\n# in ProCliente_R_Q     .00000     (Insuf)    .00000     .00000     .00000\nBDServer_R Busy         .41106     .01353     .00000     1.0000     1.0000\nAPPServer_R Available   1.0000     (Insuf)    1.0000     1.0000     1.0000\n# in BDServer_R_Q       .09667     .02891     .00000     2.0000     .00000\n# in APPServer_R_Q      1.8460E-04 (Insuf)    .00000     2.0000     .00000\nAPPServer_R Busy        .01897     6.2975E-04 .00000     1.0000     .00000\nProCliente_R Available  19.000     (Insuf)    19.000     19.000     19.000\n\n                                   COUNTERS\n\n                    Identifier                Count   Limit\n                    _________________________________________\n\n                    CountServSaida01             92  Infinite\n                    CountServSaida02             91  Infinite\n                    CountServSaida03             89  Infinite\n                    CountServCheg01              92  Infinite\n                    CountServCheg02              91  Infinite\n                    CountServCheg03              90  Infinite\n\n                            ARENA Simulation Results\n                            Silvia - License #9400000\n\n                        Summary for Replication 5 of 6\n\nProject:                                       Run execution date :  11/22/2002\nAnalyst:                                       Model revision date:  11/22/2002\n\nReplication ended at time      : 500.0\n\n                                 TALLY VARIABLES\n\nIdentifier              Average   Half Width  Minimum    Maximum   Observations\n_______________________________________________________________________________\n\ntallyTempServ1          .96810     (Insuf)    .75233     2.1443         86\nProCliente_R_Q Queue T  .00000     .00000     .00000     .00000        795\ntallyTempServ2          1.1409     (Insuf)    .92636     2.3183         89\ntallyTempServ3          .90967     (Insuf)    .75233     1.9962         90\ntallyTempServ4              --         --         --         --          0\nBDServer_R_Q Queue Tim  .04501     (Corr)     .00000     .34800       1149\ntallyTempServ5              --         --         --         --          0\ntallyTempServ6              --         --         --         --          0\nAPPServer_R_Q Queue Ti  1.7844E-04 (Corr)     .00000     .03480        530\n\n                           DISCRETE-CHANGE VARIABLES\n\nIdentifier              Average   Half Width  Minimum    Maximum   Final Value\n_______________________________________________________________________________\n\nProCliente_R Busy       .00795     2.1371E-04 .00000     3.0000     .00000\nBDServer_R Available    1.0000     (Insuf)    1.0000     1.0000     1.0000\n# in ProCliente_R_Q     .00000     (Insuf)    .00000     .00000     .00000\nBDServer_R Busy         .39985     .01306     .00000     1.0000     .00000\n\n\n\n133\n\nAPPServer_R Available   1.0000     (Insuf)    1.0000     1.0000     1.0000\n# in BDServer_R_Q       .10344     (Corr)     .00000     2.0000     .00000\n# in APPServer_R_Q      1.8914E-04 (Insuf)    .00000     2.0000     .00000\nAPPServer_R Busy        .01844     5.1107E-04 .00000     1.0000     .00000\nProCliente_R Available  19.000     (Insuf)    19.000     19.000     19.000\n\n                                   COUNTERS\n\n                    Identifier                Count   Limit\n                    _________________________________________\n\n                    CountServSaida01             86  Infinite\n                    CountServSaida02             89  Infinite\n                    CountServSaida03             90  Infinite\n                    CountServCheg01              86  Infinite\n                    CountServCheg02              89  Infinite\n                    CountServCheg03              90  Infinite\n\n                            ARENA Simulation Results\n                            Silvia - License #9400000\n\n                        Summary for Replication 6 of 6\n\nProject:                                       Run execution date :  11/22/2002\nAnalyst:                                       Model revision date:  11/22/2002\n\nReplication ended at time      : 500.0\n\n                                 TALLY VARIABLES\n\nIdentifier              Average   Half Width  Minimum    Maximum   Observations\n_______________________________________________________________________________\n\ntallyTempServ1          .97650     (Insuf)    .75233     2.1443         91\nProCliente_R_Q Queue T  .00000     .00000     .00000     .00000        813\ntallyTempServ2          1.1434     (Insuf)    .92636     2.3183         90\ntallyTempServ3          .96061     (Insuf)    .75233     1.9703         90\ntallyTempServ4              --         --         --         --          0\nBDServer_R_Q Queue Tim  .04989     .01267     .00000     .34800       1174\ntallyTempServ5              --         --         --         --          0\ntallyTempServ6              --         --         --         --          0\nAPPServer_R_Q Queue Ti  1.9641E-04 (Corr)     .00000     .03480        542\n\n                           DISCRETE-CHANGE VARIABLES\n\nIdentifier              Average   Half Width  Minimum    Maximum   Final Value\n_______________________________________________________________________________\n\nProCliente_R Busy       .00813     1.7243E-04 .00000     3.0000     .00000\nBDServer_R Available    1.0000     (Insuf)    1.0000     1.0000     1.0000\n# in ProCliente_R_Q     .00000     (Insuf)    .00000     .00000     .00000\nBDServer_R Busy         .40855     .01063     .00000     1.0000     .00000\nAPPServer_R Available   1.0000     (Insuf)    1.0000     1.0000     1.0000\n# in BDServer_R_Q       .11715     .03212     .00000     2.0000     .00000\n# in APPServer_R_Q      2.1290E-04 (Insuf)    .00000     2.0000     .00000\nAPPServer_R Busy        .01886     3.9221E-04 .00000     1.0000     .00000\nProCliente_R Available  19.000     (Insuf)    19.000     19.000     19.000\n\n                                   COUNTERS\n\n                    Identifier                Count   Limit\n                    _________________________________________\n\n                    CountServSaida01             91  Infinite\n                    CountServSaida02             90  Infinite\n                    CountServSaida03             90  Infinite\n                    CountServCheg01              91  Infinite\n                    CountServCheg02              90  Infinite\n                    CountServCheg03              90  Infinite\n\nSimulation run time: 21.87 minutes.\nSimulation run complete.\n\n\n\n134\n\nRefer\u00eancias Bibliogr\u00e1ficas\n\nABDUL-FATAH, ISTABRAK; MAJUMDAR, SHIKHARESH. Performance of CORBA-\n\nBased Client-Server Architectures. In: IEEE TRANSACTIONS ON PARALLEL AND\n\nDISTRIBUTED SYSTEMS, VOL. 13, NO. 2, FEBRUARY 2002. p 2-9.\n\nAHUJA, SANJAY P.; QUINTAO, RENATO. Performance Evaluation of Java RMI: A\n\nDistributed Object Architecture for Internet Based Applications. In: SYMPOSIUM ON\n\nMODELING, ANALYSIS AND SIMULATION OF COMPUTER AND\n\nTELECOMMUNICATION SYSTEMS, 8, 2000, California, United States. p. 1-5.\n\nBANKS, Jerry; CARSON, John S; NELSON, Barry L. Discrete-Event System Simulation.\n\n2. ed. New Jersey: Prentice-Hall International Series In Industrial And Systems Engineering.\n\n1999. 548 p.\n\nBARBETTA, Pedro Alberto. Estat\u00edstica Aplicada \u00e0s Ci\u00eancias Sociais. 2 ed. Florian\u00f3polis:\n\nEditora da UFSC, 1998. 276 p.\n\nBELLETTINI, C.; SERAZZI, G.; BORGHESE, P.. Measurement of the Quality of Service\n\nof Web sites. In: COMPUTER MEASUREMENT GROUP 1999 INTERNATIONAL\n\nCONFERENCE, 25, 1999, Reno, United States. p. 1-7.\n\nBOCHENSKI, Barbara. Implementando Sistemas Cliente/Servidor de Qualidade. 1 ed.\n\nS\u00e3o Paulo: Makron Books, 1995. 566 p.\n\nCRAIN, PAT; HANSON, CRAIG. Web Application Tuning. In: COMPUTER\n\nMEASUREMENT GROUP 1999 INTERNATIONAL CONFERENCE, 25, 1999, Reno,\n\nUnited States. p. 3-9.\n\nCRABB, ROGER. Evolution - Backend to Frontend - Part 2 Monitoring Distributed\n\nSystems Performance. In: UNITED KINGDOM COMPUTER MEASUREMENT GROUP\n\n\n\n135\n\n2000 INTERNATIONAL CONFERENCE, 2000, United Kingdom Region, United Kingdom.\n\np. 6-14.\n\nDENATRAN. Departamento Nacional de Tr\u00e2nsito - C\u00f3digo Nacional de Tr\u00e2nsito.\n\nCap\u00edtulo II, par\u00e1grafo 19 itens VIII e IX. \u00daltima atualiza\u00e7\u00e3o: 21 de dezembro de 2001.\n\nDispon\u00edvel em: http://www.denatran.gov.br/pg151_2.jsp. Acesso: nov/2001\n\nDHILLON, PREET. Preparing IT Infrastructure for ERP Implementation. In: UNITED\n\nKINGDOM COMPUTER MEASUREMENT GROUP 2000 INTERNATIONAL\n\nCONFERENCE, 2000, United Kingdom Region, United Kingdom. p. 4-5.\n\nEDWARDS, Jeri . 3-Tier Client/Server At Work. 1. ed. New York: John Wiley &amp; Sons,\n\nInc. 1999. 336 p.\n\nEDWARD, SIMON. IBM Servers: Family Values. In: UNITED KINGDOM COMPUTER\n\nMEASUREMENT GROUP 2000 INTERNATIONAL CONFERENCE, 2000, United\n\nKingdom Region, United Kingdom. p. 18-23.\n\nTINDALL, Paul. Desenvolvendo Aplica\u00e7\u00f5es Corporativas com Visual Basic, MTS, IIS.\n\nSQL Server e XML. 1. ed. S\u00e3o Paulo: Editora Campus, 2000. 416 p.\n\nGIMARC, RICHARD L.; SPELLMANN, AMY. Redefining Response Time in an\n\nAsynchronous World. In: COMPUTER MEASUREMENT GROUP 1999\n\nINTERNATIONAL CONFERENCE, 25, 1999, Reno, United States. p. 2-4.\n\nGOMES, RITA DE C\u00c1SSIA CERQUEIRA. Avalia\u00e7\u00e3o de Desempenho de Ambientes de\n\nVideoconfer\u00eancia: Um Estudo de Caso. 2002. 110f.. Disserta\u00e7\u00e3o (Mestrado em Ci\u00eancia da\n\nComputa\u00e7\u00e3o) -  Universidade de Santa Catarina, Florian\u00f3polis.\n\nGREIS, WOLFRAM. OS/390 und e-Business. In: COMPUTER MEASUREMENT GROUP\n\nAUSTRALIA 2000 INTERNATIONAL CONFERENCE, 2000, Australia Region, Australia.\n\np. 7-14.\n\n\n\n136\n\nHANSON, CRAIG D.;CRAIN, PAT. Building or Buying a Scalable Software System - A\n\nHandbook. In: COMPUTER MEASUREMENT GROUP 2000 INTERNATIONAL\n\nCONFERENCE, 26, 2000, Orlando, United States. p. 6-8.\n\nHANSON, CRAIG; CRAIN, PAT; WIGGINTON, STEVE. User And Computer\n\nPerformance Optimization - A NewModel For Efficiency. In: COMPUTER\n\nMEASUREMENT GROUP 1999 INTERNATIONAL CONFERENCE, 25, 1999, Reno,\n\nUnited States. p. 1-5.\n\nHELLERSTEIN, JOSEPH L.; JAYRAM, T. S.; SQUILLANTE, MARK S. Analysis of\n\nLarge-Scale Distributed Information Systems. In: INTERNATIONAL SYMPOSIUM ON\n\nMODELING, ANALYSIS AND SIMULATION OF COMPUTER AND\n\nTELECOMMUNICATION SYSTEMS, 8, 2000, California, United States. p. 1-4.\n\nHULL, CHRIS. Client-Server Application Modeling - A Methodology. In: COMPUTER\n\nMEASUREMENT GROUP 1999 INTERNATIONAL CONFERENCE, 25, 1999, Reno,\n\nUnited States. p. 1-4.\n\nJAIN, Raj. The Art of Computer Systems Performance Analysis. 1. ed. New York: John\n\nWiley &amp; Sons, Inc. 1991. 683 p.\n\nJURIC, MATJAZ B.; ROZAMN, IVAN;  HERICKO, MARJAN; STEVENS, ALAN P.;\n\nNASH, SIMON. Java 2 Distributed Object Models Performance Analysis, Comparison\n\nand Optimization. In: INTERNATIONAL CONFERENCE ON PARALLEL AND\n\nDISTRIBUTED SYSTEMS, 7, 2000, Iwate, Japan. p. 2-6.\n\nKALM, DENISE P.. End User Performance Tuning. In: COMPUTER MEASUREMENT\n\nGROUP 2000 INTERNATIONAL CONFERENCE, 26, 2000, Orlando, United States. p. 3-6.\n\nKELTON, W. David;SADOWSKI, Randall P.;SADOWSKI, Deborah A. Simulation With\n\nArena. 1. ed. Local: McGraw Hill College Div, 1998. 632 p.\n\n\n\n137\n\nKEMPER, ALFONS; KOSSMANN, DONALD; ZELLER, BERNHARD. Performance\n\nTuning for SAP R/3. In: DATA ENGINEERING BULLETIN, VOL. 22, NO. 2,\n\nFEBRUARY 1999. p 2-9.\n\nKIM, KWANG-HOON; HAN, DONG-SOO. Performance and Scalability Analysis on\n\nClient-Server Workflow Architecture. In: INTERNATIONAL CONFERENCE ON\n\nPARALLEL AND DISTRIBUTED SYSTEMS, 8, 2001, Kyongju City, Korea. p. 1-4.\n\nKON, Fabio;ROM\u00c1N, Manuel;LIU, Ping;MAO, Jina;YAMANE, Tomonori;MAGALH\u00c3ES,\n\nLuiz Claudio;CAMPBELL, Roy H.. Monitory, Security, And Dynamic Configuration\n\nWith The dynamicTAO Reflective ORB. Departament Of Computer Science University\n\nIllinois. \u00daltima atualiza\u00e7\u00e3o: 22 de novembro de 2001. Dispon\u00edvel em:\n\nhttp://choices.cs.uiuc.edu/2k/dynamictao. Acesso: Fev/2002\n\nLEANDER, Rick. Building Application Servers . Cambridge: Cambridge University Press,\n\n2000. 405 p.\n\nLINDGREN, Lisa M. Application Servers for E-Business. 1. ed. Local: Auerbach\n\nPublications, 2001. 288 p.\n\nLOOSLEY, Chris;DOUGLAS, Frank . High-Performance Client/Server. 1. ed. New York:\n\nJohn Wiley &amp; Sons, Inc. 1998. 751 p.\n\nLOU, Y; JOHN, I. K Workload Characterization of Multithreaded Java Servers .\n\nTechnical Report TR-010815-01, Department of Electrical and Computer Engineering,\n\nUniversity of Texas at Austin. \u00daltima atualiza\u00e7\u00e3o: 10 de dezembro de 2002. Dispin\u00edvel em:\n\nhttp://www.ece.utexas.edu/projects/ece/lca. Acesso: Set/2002\n\nMERTON,  JOSEPH K.. Evolution of Performance Testing in a Distributed Client Server\n\nEnvironment. In: COMPUTER MEASUREMENT GROUP 1999 INTERNATIONAL\n\nCONFERENCE, 25, 1999, Reno, United States. p. 2-5.\n\nMENASC\u00c9, Daniel A.;ALMEIDA, Virgilio A. F. Capacity Planning For Web\n\nPerformance Metrics, Models, And Methods. New Jersey: Prentice Hall PTR, 1998. 350 p.\n\n\n\n138\n\nMENASC\u00c9 , DANIEL A. A Method for Design and Performance Modeling of\n\nClient/Server Systems. In: IEEE TRANSACTIONS ON SOFTWARE ENGINEERING,\n\nVOL. 26, NO. 12, DECEMBER 2000. p 1-9.\n\nMENASC\u00c9, Daniel A.; ALMEIDA, Virgilio A.F. Scaling For E-Business. 1 ed. New Jersey:\n\nPrentice Hall, 2000. 449 p.\n\nNICOLA, MATTHIAS; JARKE, MATTHIAS. Performance Modeling of Distributed and\n\nReplicated Databases. In: IEEE TRANSACTIONS ON KNOWLEDGE AND DATA\n\nENGINEERING, VOL. 12, NO. 4, JULY/AUGUST 2000. p 1-3.\n\nNIXON, BRIAN A. Management of Performance Requirements\n\nfor Information Systems. In: IEEE TRANSACTIONS ON SOFTWARE ENGINEERING,\n\nVOL. 26, NO. 12, DECEMBER 2000. p 1-7.\n\nPENTAKALOS, ODYSSEAS. Managing the Performance of Microsoft\u2019s Internet\n\nInformation Server. In: COMPUTER MEASUREMENT GROUP 1999 INTERNATIONAL\n\nCONFERENCE, 25, 1999, Reno, United States. p. 1-2.\n\nPRADO, Darci. Usando o Arena em Simula\u00e7\u00e3o. 1. ed. Local: EDG, 1999. 284 p.\n\nSILVA, MARCOS VINICIUS DRISSEN. Avalia\u00e7\u00e3o de Desempenho de uma Plataforma\n\nde Comuta\u00e7\u00e3o Telef\u00f4nica para Servi\u00e7os Especializados de Atendimento ao Cliente aso.\n\n2002. 109f. Disserta\u00e7\u00e3o (Mestrado em Ci\u00eancia da Computa\u00e7\u00e3o) - Universidade de Santa\n\nCatarina, Florian\u00f3polis.\n\nTENENBAUM, Andrews S. Modern Operating Systems. 2. ed. Local: Prentice Hall, 2001.\n\n976 p.\n\nTENENBAUM, Andrews S. Redes de Computadores. 1. ed. Local: Campus, 1997. 948 p.\n\nSCHMIDT, T\u00c2NIA. Planejamento de Capacidade em Provedores de Servi\u00e7os Internet.\n\n2002. 115f. Disserta\u00e7\u00e3o (Mestrado em Ci\u00eancia da Computa\u00e7\u00e3o) - Universidade de Santa\n\nCatarina, Florian\u00f3polis.\n\n\n\n139\n\nSCHUMACK, WAYNE. A Hundred-Day Sprint: Going Live With Sap 4.0b On S/390\n\nAnd Nt. Lessons Learned And Wisdom Gained.. In: COMPUTER MEASUREMENT\n\nGROUP 1999 INTERNATIONAL CONFERENCE, 25, 1999, Reno, United States. p. 1-2.\n\nSEVITSKY, GARY; PAUW, WIM DE; KONURU, RAVI. An Information Exploration\n\nTool for Performance Analysis of Java Programs. In: TECHNOLOGY OF OBJECT-\n\nORIENTED LANGUAGES AND SYSTEMS, 2001, Zurich, Switzerland. p. 4-6.\n\nSMARKUSKY, DEBRA L.; AMMAR, REDA A; HOWARD, A. SHOLL. A Framework\n\nfor Designing Performance-Oriented Distributed Systems. In: IEEE SYMPOSIUM ON\n\nCOMPUTERS AND COMMUNICATIONS, 6, 2001, Hammamet, Tunisia. p. 1-5.\n\nSMITH, CONNIE U.. SPE Models for Multi-Tier Client/Server Interactions with\n\nMQSeries and Other Middleware.. In: COMPUTER MEASUREMENT GROUP 1999\n\nINTERNATIONAL CONFERENCE, 25, 1999, Reno, United States. p. 1-4.\n\nSOMIN, YEFIM; GROSS, LEONID. Adventures in Modeling PeopleSoft. In: COMPUTER\n\nMEASUREMENT GROUP 2000 INTERNATIONAL CONFERENCE, 26, 2000, Orlando,\n\nUnited States. p. 1-4.\n\nSUN MICROSYSTEMS. ECperf TM Specification. \u00daltima atualiza\u00e7\u00e3o: 16 de abril de 2002.\n\nDispon\u00edvel em: http://java.sun.com/j2ee/ecperf/download.html.\n\nAcesso: jul/2002\n\nTHESERVERSIDE. Full Disclosure Report Of Ecperf Benchmark For Oracle9iAS\n\nRelease 2. \u00daltima atualiza\u00e7\u00e3o: 24 de junho de 2002.\n\nDispon\u00edvel em:\n\nhttp://www2.theserverside.com/ecperf/index.jsp?page=results/application_server.\n\nAcesso: jul/2002\n\nWATSON, LARRY E.. Successful Multi-Tier Benchmarking And Load Testing. In:\n\nCOMPUTER MEASUREMENT GROUP 1999 INTERNATIONAL CONFERENCE, 25,\n\n1999, Reno, United States. p. 1-6."}]}}}