{"add": {"doc": {"field": [{"@name": "docid", "#text": "BR-TU.06176"}, {"@name": "filename", "#text": "10694_000970269.pdf"}, {"@name": "filetype", "#text": "PDF"}, {"@name": "text", "#text": "UNIVERSIDADE FEDERAL DO RIO GRANDE DO SUL\nINSTITUTO DE INFORM\u00c1TICA\n\nPROGRAMA DE P\u00d3S-GRADUA\u00c7\u00c3O EM COMPUTA\u00c7\u00c3O\n\nJOSE MARTIN LOZANO APARICIO\n\nOntology View: a new sub-ontology\nextraction method\n\nThesis presented in partial fulfillment\nof the requirements for the degree of\nMaster of Computer Science\n\nAdvisor: Prof. Dr. Mara Abel\nCoadvisor: Prof. Dr. Marcelo Pimenta\n\nPorto Alegre\nJanuary 2015\n\n\n\nCIP \u2013 CATALOGING-IN-PUBLICATION\n\nLozano Aparicio, Jose Martin\n\nOntology View: a new sub-ontology extraction method / Jose\nMartin Lozano Aparicio. \u2013 Porto Alegre: PPGC da UFRGS,\n2015.\n\n169 f.: il.\n\nThesis (Master) \u2013 Universidade Federal do Rio Grande do Sul.\nPrograma de P\u00f3s-Gradua\u00e7\u00e3o em Computa\u00e7\u00e3o, Porto Alegre, BR\u2013\nRS, 2015. Advisor: Mara Abel; Coadvisor: Marcelo Pimenta.\n\n1. Ontology View. 2. Foundational Ontology. 3. Sub-\nOntology Extraction. 4. HCI. I. Abel, Mara. II. Pimenta,\nMarcelo. III. T\u00edtulo.\n\nUNIVERSIDADE FEDERAL DO RIO GRANDE DO SUL\nReitor: Prof. Carlos Alexandre Netto\nVice-Reitor: Prof. Rui Vicente Oppermann\nPr\u00f3-Reitor de P\u00f3s-Gradua\u00e7\u00e3o: Prof. Vladimir Pinheiro do Nascimento\nDiretor do Instituto de Inform\u00e1tica: Prof. Luis da Cunha Lamb\nCoordenador do PPGC: Prof. Luigi Carro\nBibliotec\u00e1ria-chefe do Instituto de Inform\u00e1tica: Beatriz Regina Bastos Haro\n\n\n\n\u201cIf I have seen farther than others,\nit is because I stood on the shoulders of giants.\u201d\n\n\u2014 SIR ISAAC NEWTON\nand me, of course.\n\n\n\n\n\nACKNOWLEDGEMENTS\n\nFirst and foremost, it comes God. Without his assistance, it would be never possible to finish\nmy work.\n\nThis thesis grew out of a series of meetings and discussions with my supervisor Dr Mara\nAbel. All her advices help me to overcome the different problems that aroused during the\nproject, since the planning of the topic to the conclusion of it. I greatly appreciate all the effort\nshe has put into mentoring me. Special thanks also to my co-advisor Dr Marcelo Pimenta, for\nhis support, guidance and helpful suggestions.\n\nI thank my colleagues and friends of BDI Group at UFRGS, who made my master study\na wonderful academic experience, specially to Joel Carbonera, who guides me in this process.\nThanks are also certainly due to my great Peruvian friends.\n\nI would like to express my immense gratitude to my parents, for their encouragement and\nadvice. Their support throughout the years has been unwavering despite the physical distance\nthat has separated us during my master study. They encouraged my intellectual curiosity from\na young age. Throughout my life, they have always ensured that every opportunity is available\nto me.\n\n\n\n\n\nABSTRACT\n\nNowadays many petroleum companies are adopting different knowledge-based systems\naiming to have a better reservoir quality prediction. However, there are obstacles that not allow\ndifferent background geologists to retrieve information without needing the help of an infor-\nmation technology expert. The main problem is the heterogeneity semantic of end users when\ndoing queries in a visual query system (VQS). This can be worst when there is new terminology\nin the knowledge-base affecting the user interaction, particularly for novice users.\n\nIn this context, we present theoretical and practical contributions that exploit the synergism\nbetween ontology and human computer interaction (HCI). On the theory side, we introduce the\nconcept of ontology view for well-founded ontology and provide a formal definition and expres-\nsive power characterization. We focus in the ontology view extraction of a well-founded and\ncomplete ontology based on ontological meta-properties and propose a language independent\nalgorithm for sub-ontology extraction, which is guided by ontological meta-properties.\n\nOn the practical side, based on the principles of HCI and interaction design, we propose\na new Visual Query System that uses the ontology view approach to guide the query process.\nAlso, our design includes data visualizations that will help geologists to make sense of the re-\ntrieved data. Furthermore, we evaluated our interaction design with five users performing a\nusability testing through a questionnaire in a controlled experiment. The evaluation was per-\nformed over geologists that work in the area of petroleum geology.\n\nThe approach proposed is evaluated on the petrography domain taking the communities of\nDiagenesis and MicroStructural adopting the well known criteria of precision and recall. Ex-\nperimental results show that relevant terms obtained from the documents of a community varies\nfrom 30 to 66 % of precision and 4.6 to 36% of recall depending on the approach selected and\nthe parameters combination. Furthermore, results show that almost for all the parameters com-\nbination that recall and f-measure obtained from diagenesis articles using the sub-ontology gen-\nerated for the diagenesis community is greater than recall and f-measure using the sub-ontology\ngenerated for microstructural community. On the other hand, results for all the parameters com-\nbination that recall and f-measure obtained from microstructural articles using the sub-ontology\ngenerated for the microstructural community is greater than recall and f-measure using the sub-\nontology generated for diagenesis community.\n\nKeywords: Ontology View. Foundational Ontology. Sub-Ontology Extraction. HCI.\n\n\n\n\n\nVista de Ontologia: um novo metodo para extrair uma sub-ontologia\n\nRESUMO\n\nHoje em dia, muitas empresas de petr\u00f3leo est\u00e3o adotando diferentes sistemas baseados em\nconhecimento com o objetivo de ter uma melhor predi\u00e7\u00e3o de qualidade de reservat\u00f3rio. No\nentanto, existem obst\u00e1culos que n\u00e3o permitem ge\u00f3logos com diferentes forma\u00e7\u00f5es recuperar as\ninforma\u00e7\u00f5es sem a necessidade da ajuda de um especialista em tecnologia da informa\u00e7\u00e3o. O\nprincipal problema \u00e9 a heterogeneidade sem\u00e2ntica dos usu\u00e1rios finais quando fazem consultas\nem um sistema de consulta visual (VQS). Isto pode ser pior quando h\u00e1 uma nova terminologia na\nbase de conhecimentos que afetam a intera\u00e7\u00e3o do usu\u00e1rio, especialmente para usu\u00e1rios novatos.\n\nNeste contexto, apresentamos contribui\u00e7\u00f5es te\u00f3ricas e pr\u00e1ticas que explora o sinergismo en-\ntre ontologia e intera\u00e7\u00e3o homem-computador (HCI). Do lado da teoria, introduzimos o conceito\nde vis\u00e3o de ontologia bem fundamentada e a sua defini\u00e7\u00e3o formal. N\u00f3s nos concentramos na\nextra\u00e7\u00e3o de vista ontologia de uma ontologia bem fundamentada e completa, baseando-nos em\nmeta-propriedades ontol\u00f3gicas e propusemos um algor\u00edtmo independente da linguagem para\nextra\u00e7\u00e3o de sub-ontologia que \u00e9 guiada por meta-propriedades ontol\u00f3gicas.\n\nNo lado pr\u00e1tico, baseado nos princ\u00edpios de HCI e desenho de intera\u00e7\u00e3o, propusemos um\nnovo sistema de consulta visual que usa o enfoque de vistas de ontologias para guiar o processo\nde consulta. Tamb\u00e9m o nosso desenho inclui visualiza\u00e7\u00f5es de dados que ajudar\u00e3o ge\u00f3logos a\nentender os dados recuperados. Al\u00e9m disso, avaliamos nosso desenho com um teste de usabi-\nlidade a-trav\u00e9s de um question\u00e1rio em experimento controlado. Cinco ge\u00f3logos que trabalham\nna \u00e1rea de Geologia do Petr\u00f3leo foram avaliados.\n\nO enfoque proposto \u00e9 avaliado no dom\u00ednio de petrografia tomando as comunidades de Di-\nag\u00eanese e Microestrutural adotando o crit\u00e9rio de precis\u00e3o e revoca\u00e7\u00e3o. Os resultados experi-\nmentais mostram que termos relevantes obtidos de documentos de uma comunidade varia entre\n30 a 66% de precis\u00e3o e 4.6 a 36% de revoca\u00e7\u00e3o, dependendo do enfoque selecionado e da\ncombina\u00e7\u00e3o de par\u00e2metros. Al\u00e9m disso, os resultados mostram que, para toda combina\u00e7\u00e3o de\npar\u00e2metros, a revoca\u00e7\u00e3o obtidos de artigos de diag\u00eanese usando a sub-ontologia gerada para\na comunidade de diag\u00eanese \u00e9 maior que a revoca\u00e7\u00e3o e f-measure usando a sub-ontologia ge-\nrada para a comunidade de microestrutural. Por outro lado, resultados para toda combina\u00e7\u00e3o de\npar\u00e2metros mostram que a revoca\u00e7\u00e3o e f-measure obtida de artigos de microestrutural usando\na sub-ontologia gerada para a comunidade de microestrutural \u00e9 maior que a revoca\u00e7\u00e3o e o f-\nmeasure usando a sub-ontologia gerada para a comunidade de diag\u00eaneses.\n\nPalavras-chave: Vista de Ontologia, Ontologia fundamental, Extra\u00e7\u00e3o de uma sub-ontologia,\nIntera\u00e7\u00e3o Humano Computador.\n\n\n\n\n\nLIST OF FIGURES\n\n1.1 Motivation Problem: evolving mature ontology is shared by old and new\ncommunity of users. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 22\n\n2.1 Sensemaking model . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 34\n\n2.2 Visual Representation of Spatial Objects . . . . . . . . . . . . . . . . . . . 37\n\n2.3 Ranking graph . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 38\n\n2.4 Part-whole graph . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 39\n\n2.5 Correlation graph . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 39\n\n2.6 Distribution graph . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 39\n\n2.7 Geospatial graph . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 40\n\n2.8 PetroQueryr Interface . . . . . . . . . . . . . . . . . . . . . . . . . . . . 41\n\n2.9 GRQL Interface . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 42\n\n2.10 VisualSPEED Interface . . . . . . . . . . . . . . . . . . . . . . . . . . . . 43\n\n2.11 Optique Query Interface . . . . . . . . . . . . . . . . . . . . . . . . . . . 45\n\n3.1 Diagram representing a modeling scenario using kinds, roles, relators and\nrole mixins. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 51\n\n3.2 UFO Structure . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 52\n\n3.3 UFO B . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 53\n\n3.4 Protege VOWL . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 54\n\n3.5 Grafoo Tool . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 55\n\n4.1 The original ontology (a) and the resulting module (b) . . . . . . . . . . . 62\n\n4.2 Ontology of the University domain . . . . . . . . . . . . . . . . . . . . . 64\n\n4.3 A subset of FMA, having the class Lung as input . . . . . . . . . . . . . . 67\n\n4.4 A Labeled Portion of the UMLS Meta-thesaurus Ontology as a Connected\nGraph . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 71\n\n4.5 Extracted sub-set . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 72\n\n5.1 Diagenesis Processes . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 74\n\n5.2 Types of grain contacts . . . . . . . . . . . . . . . . . . . . . . . . . . . . 75\n\n5.3 Diagenesis Ontology . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 78\n\n5.4 Mineral taxonomy . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 79\n\n5.5 Grain taxonomy . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 80\n\n5.6 Igneous Rock taxonomy . . . . . . . . . . . . . . . . . . . . . . . . . . . 82\n\n5.7 Metamorphic Rock taxonomy . . . . . . . . . . . . . . . . . . . . . . . . 83\n\n5.8 Partial Pore taxonomy . . . . . . . . . . . . . . . . . . . . . . . . . . . . 84\n\n5.9 Carbonate Rock taxonomy . . . . . . . . . . . . . . . . . . . . . . . . . . 84\n\n\n\n5.10 Rock taxonomy for the Microstructural Community . . . . . . . . . . . . . 85\n5.11 Fracture Zone taxonomy . . . . . . . . . . . . . . . . . . . . . . . . . . . 86\n5.12 Deformation Structure taxonomy . . . . . . . . . . . . . . . . . . . . . . 87\n5.13 Intracrystalline Deformation Structure taxonomy . . . . . . . . . . . . . . 88\n\n6.1 Conservation of identity example . . . . . . . . . . . . . . . . . . . . . . 93\n6.2 Conservation of the existential dependence example . . . . . . . . . . . . 93\n6.3 Conservation of relational dependence example . . . . . . . . . . . . . . . 94\n6.4 Conservation of taxonomy . . . . . . . . . . . . . . . . . . . . . . . . . . 94\n6.5 Conservation of attributes . . . . . . . . . . . . . . . . . . . . . . . . . . 95\n6.6 Conservation of formally related concepts example . . . . . . . . . . . . . 95\n6.7 Conservation of parts example . . . . . . . . . . . . . . . . . . . . . . . . 96\n6.8 Approach 2 example . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 103\n6.9 Approach 3 example . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 104\n\n7.1 Architecture OVUFO Visualizer . . . . . . . . . . . . . . . . . . . . . . . 110\n7.2 OVUFO Visualizer . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 111\n7.3 RockQuery Architecture . . . . . . . . . . . . . . . . . . . . . . . . . . . 112\n7.4 RockQuery Activity Diagram . . . . . . . . . . . . . . . . . . . . . . . . 113\n7.5 Exploration Panel . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 114\n7.6 Processing Panel . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 115\n7.7 Analysis Panel . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 116\n7.8 Login . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 116\n7.9 Initial Interface after user logged in . . . . . . . . . . . . . . . . . . . . . 117\n7.10 Interaction . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 118\n7.11 Autocomplete Screenshot . . . . . . . . . . . . . . . . . . . . . . . . . . 119\n\n8.1 Precision and Recall . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 123\n8.2 Evaluation Method . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 125\n8.3 Problem Detected in Graph Layout . . . . . . . . . . . . . . . . . . . . . 131\n8.4 Questionnaire Results using the Likert scale . . . . . . . . . . . . . . . . . 132\n\nA.1 Original Knowledge model of Petroledger. . . . . . . . . . . . . . . . . . 148\nA.2 Frequency of use according to the defined Questions . . . . . . . . . . . . 153\nA.3 Screenshot of PetroQuery . . . . . . . . . . . . . . . . . . . . . . . . . . 154\n\nB.1 Design One . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 159\nB.2 Design Two . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 160\nB.3 Design Three . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 161\nB.4 Design Four . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 162\n\n\n\nLIST OF TABLES\n\n8.1 Proportion D/M over file AT . . . . . . . . . . . . . . . . . . . . . . . . . 128\n8.2 Proportion M/D over file BT . . . . . . . . . . . . . . . . . . . . . . . . . 129\n8.3 Meaning of the response scale varies according to the question. . . . . . . 130\n8.4 Users Characterization . . . . . . . . . . . . . . . . . . . . . . . . . . . . 131\n8.5 Comparison of four Visual Query Systems. . . . . . . . . . . . . . . . . . 134\n\nA.1 Question and Metric . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 151\nA.2 User Information for contextualizing the use of PetroQuery . . . . . . . . . 153\n\nC.1 Approach 1:Precision and Recall . . . . . . . . . . . . . . . . . . . . . . . 164\nC.2 Approach 2:Precision and Recall . . . . . . . . . . . . . . . . . . . . . . . 165\nC.3 Approach 3:Precision and Recall . . . . . . . . . . . . . . . . . . . . . . . 166\nC.4 Approach 1:Precision and Recall . . . . . . . . . . . . . . . . . . . . . . . 167\nC.5 Approach 2:Precision and Recall . . . . . . . . . . . . . . . . . . . . . . . 168\nC.6 Approach 3:Precision and Recall . . . . . . . . . . . . . . . . . . . . . . . 169\n\n\n\n\n\nLIST OF ABBREVIATIONS AND ACRONYMS\n\nUX User Experience\n\nHCI Human Computer Interaction\n\nVQL Visual Query Language\n\nVQS Visual Query System\n\nUFO Unified Foundational Language\n\nOLED OntoUML Light-Weight Editor\n\nOVUFO Ontology View for Unified Foundational Ontology\n\nSEL selection algorithm\n\nOWL Ontology Web Language\n\nGUI Graphical User Interface\n\n\n\n\n\nCONTENTS\n\n1 INTRODUCTION . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 21\n1.1 Why Combining Ontology &amp; HCI . . . . . . . . . . . . . . . . . . . . . . . . 22\n1.2 Dissertation Overview &amp; Main Ideas . . . . . . . . . . . . . . . . . . . . . . . 23\n1.3 Research Contributions . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 23\n1.4 Structure of this dissertation . . . . . . . . . . . . . . . . . . . . . . . . . . . 24\n\n2 VISUAL QUERY SYSTEMS AND ISSUES IN HCI: FUNDAMENTALS . . . 27\n2.1 Interaction Design . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 27\n2.1.1 Research Methods and Techniques . . . . . . . . . . . . . . . . . . . . . . . . 30\n\n2.2 Information Visualization . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 32\n2.3 Sensemaking . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 34\n2.4 User Interface for Search . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 35\n2.4.1 Interfaces of Flow . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 35\n\n2.5 Visual Query Systems . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 36\n2.5.1 Visual Query Definition . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 37\n\n2.5.2 Visual Result Set Presentation . . . . . . . . . . . . . . . . . . . . . . . . . . 37\n\n2.6 Four Ontology-based VQS . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 40\n2.6.1 PetroQueryr . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 40\n\n2.6.2 Graphical RQL . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 42\n\n2.6.3 VisualSPEED . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 42\n\n2.6.4 OptiqueVQS . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 44\n\n2.7 Summary . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 46\n\n3 ONTOLOGY, UFO AND ONTOLOGY VISUALIZATION . . . . . . . . . . . . 47\n3.1 Ontology . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 47\n3.1.1 Definition . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 47\n\n3.2 Foundational Ontologies and UFO . . . . . . . . . . . . . . . . . . . . . . . . 48\n3.3 Ontology Visualization . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 53\n\n4 SUB ONTOLOGY EXTRACTION . . . . . . . . . . . . . . . . . . . . . . . . 57\n4.1 Query-based Methods . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 58\n4.1.1 vSPARQL . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 58\n\n4.1.2 KAON views . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 59\n\n4.1.3 RVL . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 59\n\n4.1.4 SAIQL . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 59\n\n4.2 Network Partitioning . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 60\n4.2.1 Structure based partitioning . . . . . . . . . . . . . . . . . . . . . . . . . . . . 60\n\n\n\n4.2.2 Automated Partitioning using E-connections . . . . . . . . . . . . . . . . . . . 61\n\n4.3 Traversal Approach . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 61\n4.3.1 PROMPT . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 66\n\n4.3.2 MOVE . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 67\n\n4.4 Discussion . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 69\n\n5 DOMAIN ONTOLOGY FOR DIAGENESIS AND MICROSTRUCTURAL . . . 73\n5.1 Diagenesis and Microstructural Analysis . . . . . . . . . . . . . . . . . . . . . 73\n5.2 Domain Ontology of Case Study . . . . . . . . . . . . . . . . . . . . . . . . . 77\n5.2.1 Discussion . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 89\n\n6 ONTOLOGY VIEW: A PROPOSAL . . . . . . . . . . . . . . . . . . . . . . . 91\n6.1 Well Founded Ontology View . . . . . . . . . . . . . . . . . . . . . . . . . . . 91\n6.1.1 Basic Definitions . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 91\n\n6.1.2 View . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 91\n\n6.1.3 Conservation Principles . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 92\n\n6.2 Sub-Ontology Extraction Algorithm . . . . . . . . . . . . . . . . . . . . . . . 96\n6.3 Summary . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 108\n\n7 ONTOLOGY VIEW BASED QUERY SYSTEM FOR RESERVOIR PETROG-\nRAPHY . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 109\n\n7.1 OVUFO Visualizer . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 109\n7.2 RockQuery Architecture . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 110\n7.3 Functional Requirements . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 113\n7.4 RockQuery Functionalities Description . . . . . . . . . . . . . . . . . . . . . 113\n7.4.1 Exploration Panel . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 114\n\n7.4.2 Processing Panel . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 114\n\n7.4.3 Analysis Panel . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 114\n\n7.4.4 Application of RockQuery in a case study . . . . . . . . . . . . . . . . . . . . 115\n\n7.5 Core Design Rationale . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 119\n7.6 Implementation and Development . . . . . . . . . . . . . . . . . . . . . . . . 119\n7.6.1 Data Persistence . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 120\n\n7.7 Rock Query Limitations . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 120\n7.8 Discussion . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 120\n\n8 EVALUATION OF RESULTS . . . . . . . . . . . . . . . . . . . . . . . . . . . 121\n8.1 Generated subset Evaluation . . . . . . . . . . . . . . . . . . . . . . . . . . . 121\n8.1.1 Evaluation of the Ontology View for Diagenesis . . . . . . . . . . . . . . . . . 124\n\n8.1.2 Evaluation of the Ontology View for Microstructural . . . . . . . . . . . . . . 126\n\n8.1.3 Summary of results . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 127\n\n\n\n8.2 RockQuery System Evaluation . . . . . . . . . . . . . . . . . . . . . . . . . . 129\n\n9 CONCLUSION &amp; FUTURE DIRECTIONS . . . . . . . . . . . . . . . . . . . 135\n9.1 Novel Contributions of the Dissertation . . . . . . . . . . . . . . . . . . . . . 135\n9.2 Future Research Directions . . . . . . . . . . . . . . . . . . . . . . . . . . . . 136\n\nREFERENCES . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 137\n\nAPPENDICES . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 145\n\nAPPENDIXA PRELIMINARY PETROQUERYr STUDY . . . . . . . . . . . . . . 147\nA.1 Conceptual Analysis . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 147\nA.1.1 Analysis of Petroledge Knowledge Model . . . . . . . . . . . . . . . . . . . . 147\nA.1.2 Analysis of Query History . . . . . . . . . . . . . . . . . . . . . . . . . . . . 150\nA.2 Experimentation . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 150\nA.2.1 Definition . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 150\nA.2.2 Design . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 151\nA.2.3 Implementation and Execution . . . . . . . . . . . . . . . . . . . . . . . . . . 151\nA.3 Results . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 152\nA.3.1 Interview Analysis . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 152\nA.3.2 Observation Analysis . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 153\n\nAPPENDIXB DESIGN ALTERNATIVES . . . . . . . . . . . . . . . . . . . . . . . 157\n\nAPPENDIXC TABLE RESULTS . . . . . . . . . . . . . . . . . . . . . . . . . . . 163\n\n\n\n\n\n21\n\n1 INTRODUCTION\n\nMany organizations invest huge amount of money capturing, organizing and storing data\nthat will support the business decision making. These organizations need to improve the way\nthat they organize and store such information since not only larger amounts of data are being\ncollected, but new ways to connect and interoperate such data are emerging dynamically. So,\nthe idea of large amount of data (extension) and very flexible data models (intention) evolving\nover time contribute to making nowadays information management an increasingly challenging\ntask.\n\nSince semantic technologies are usually considered as the basis for new approaches to deal\nwith this task, there are solutions based on adoption of expressive power of ontology concepts.\nIndeed, ontology is an adequate way to take into account large and complex schema of related\nconcepts, which can be used at query time in order to allow reasoning about schema structure\nand to build inferred answers or even intentional queries.\n\nHowever, the terminology has been grown to a point where information processing and ex-\nchange is seriously hampered, as it can no longer be guaranteed that multiple parties interpret\nthe data in the same way and use the same terminology. This implies a system evolution that\nsupports the information process and enhances the data exploration to retrieve the right infor-\nmation. As a real case, there is Petroledger, an ontology-based system, that is consulted by\nPetroQueryr 1, which is a visual query system(VQS). PetroQueryr query model uses the\nontology to guide the consultation. This ontology includes the concepts required for chemical\nrock-reservoir evaluation, igneous and metamorphic petrography, chemical analysis of igneous\nrocks and stratigraphic descriptions, supporting as diverse applications as multidimensional\nconsultation of large set of data, image indexing and several other minor applications (ABEL et\nal., 2012). As a result, different communities of users have distinct kinds of queries according\nto their knowledge and the kind of problem the users deal with. Because of the specialized\nknowledge, the users find problems in formulating queries since they only know part of the\nterminology that is applied by the interface. A better interaction would be achieved if the inter-\nface is customized to each knowledge community. In Figure 1.1, we illustrate our motivation\nproblem: a large mature ontology and the difficulties that a new community of users meet when\ntrying to use the system because of the amount of unknown terminology offered by the system\nwhen supporting consultation.\n\nEvery ontology-based application will offer some level of difficulty when users build con-\nsultations for decision support. This can be reduced by an appropriate interface design. As\nthe application evolves through time, however, this initial difficulty can be increased by the ag-\ngregation of new concepts, new functionalities and new community of users. Each community\nwill retain a partial understanding of the terminology of the domain ontology and will find dif-\nficult to find out the relevant concepts that support its decision. Thus, we need to reduce the\n\n1Petroledge and Petroqueryr are trademarks of Endeeper Co. that commercializes the systems.\n\n\n\n22\n\nFigure 1.1: Motivation Problem: evolving mature ontology is shared by old and new community\nof users.\n\noverload of information charged in user\u2019s memory by creating a subset of the whole ontology.\nThis dissertation focuses on ontology view extraction. We propose a sub-ontology extraction\nalgorithm based on the ontological meta-properties. We define conservation principles that the\nsub-ontology should fulfill. Besides, we developed a visual query system prototype based on\nthe importance of human computer interaction techniques to enhance the data analysis.\n\n1.1 Why Combining Ontology &amp; HCI\n\nThrough our research in Ontology and HCI (Human Computer Interaction), we have real-\nized that data analytics is an important aspect in a visual query system. A visual query system\ncan benefit from both disciplines joining forces, and our solution lies in the intersection. Ontol-\nogy focuses in organizing the concepts and relations orienting the user to formulate the query;\nHCI focuses on interaction techniques and visualization that leverage the human mind and fa-\ncilitate the analysis of the retrieved data.\n\n\n\n23\n\nThe field of HCI can provide new insights to enhance the interaction in PetroQueryr\n\nthrough a better navigation in the ontology that guide the query process and new visualizations\nto improve user\u2019s sensemaking when doing data analysis.\n\n1.2 Dissertation Overview &amp; Main Ideas\n\nOur approach has proposed an initial experimentation over the visual query system de-\nscribed in appendix A. According to our report, we identified some problems related to the\ninteraction design that was caused by the application evolution. For instance, the principle of\nRecognition rather than recall from the Nielsen heuristics was not satisfied. This means that\nthere is too much information that not let user to perform the desired query. Thus, the ontology-\nbased system should provide the set of concepts that user requires to formulate the query. This\nimplies a reduction of the whole ontology to obtain a relevant subset of terms. For this pur-\npose, it can be applied ontology module (DORAN, 2009; SEIDENBERG; RECTOR, 2006;\nD\u2019AQUIN; SABOU; MOTTA, 2006), or ontology view (NOY; MUSEN, 2009; BHATT et al.,\n2004a). Both of them involve a common step, the sub-ontology extraction. Thus, we designed\nand developed the sub-ontology extraction algorithm, which uses the Unified Foundational On-\ntology (UFO) meta-properties to guide the selection of the concepts. Furthermore, we provide\nthree different approaches with flexibility for setting three parameters that will return different\nwell-founded ontology views. We decided to use the term ontology view to our generated subset\nbecause its definition is focused on user customization and well-founded because our algorithm\nuses UFO meta-properties. We tested over the petrography domain taking the communities of\nDiagenesis and MicroStructural adopting the well known criteria of precision and recall. The\nexperimental results show that relevant terms obtained from the documents of a community\nvaries from 10 to 70% of precision and 20 to 40% of recall depending on the approach selected\nand the parameters combination.\n\nOn the interface side, we used the theory previously defined to establish that new commu-\nnities, which have partial acknowledge of the ontology, can benefit of the view visualizing the\nconcepts that are just well understood by them. Thus, instead of showing lists of concepts,\nattributes and values; we presented a module that visualizes the ontology, but without the an-\nnotating meta-data. Finally, we developed a new interaction design implemented in RockQuery\nprototype as a result of the experimentation.\n\n1.3 Research Contributions\n\nAs we know, systems evolve over time, being extended, combined and integrated. Knowledge-\nbased systems and their ontology modeled portion that affects the end-users interaction. There-\nfore, this thesis bridges ontology and HCI research. We contribute by answering two important,\nfundamental research questions:\n\n\n\n24\n\n\u2022 How can we improve the comprehension of data to be consulted in a large knowledge\nbase? Our idea is an Ontology View Approach.\n\n\u2022 How to enhance the interaction in the Visual Query System PetroQueryr Our idea is\nthe use of HCI techniques and Visualization.\n\nA summary of contributions are listed:\n\n\u2022 Algorithms: We design and develop an algorithm that performs the sub-ontology extrac-\ntion using UFO as a base to obtain the adequate subset of concepts for the view.\n\n\u2022 Theories: We present the formalization of the ontology view approach, which enables the\nsegmentation of the ontology and let the extension to the new community knowledge.\n\n\u2022 Tools: We develop an application that lets a user import an well- founded ontology mod-\neled with OLED and perform a different subset extraction method.\n\n\u2022 Prototype: We develop an interaction design implemented in the RockQuery prototype.\nWe deal with the problems of overhead of terminology with the use of ontology view in\nthe exploration of concepts to formulate the query.\n\n1.4 Structure of this dissertation\n\nThis text consists of nine chapters. The core theory is in chapter 6. This chapter has been\nsubmitted for publication and accepted in the IEEE International Conference on Tools with\nArtificial Intelligence (LOZANO et al., 2014).\n\nChapter 1 describes the research background and the main ideas, and then specifies the\nresearch contributions in the research questions and outlines the structure of the dissertation.\n\nChapter 2 describes the related work done in the area of visual query systems and a literature\nreview of HCI techniques that were used in our development.\n\nChapter 3 summarizes the ontology issues, foundational ontology theory and ontology vi-\nsualization.\n\nChapter 4 describes the different techniques for sub-ontology extraction. Three main groups\nare identified: query base, network partitioning and traversal approach.\n\nChapter 5 describes the well-founded ontology developed for purpose of testing the ontology\nview approach.\n\nChapter 6 describes the fundamentals of our ontology view approach. It defines the ontology\nview, presents the different algorithms used in the extraction, defines the approach for obtaining\nthe view. Also, it contains a description of a tool, that lets the ontology engineer to extracts\nsubsets of any ontology modeled with OLED.\n\nChapter 7 describes the visual query system, the components and the interaction design. A\nfurther description of the prototypes done before the final implementation are discussed in the\n\n\n\n25\n\nappendix B. In addition, we performed an experimentation of PetroQueryr and it is described\nin appendix A.\n\nChapter 8 describes the evaluation of our ontology view approach and the visual query\nsystem. We make a comparison in the part of ontology selection with other techniques and the\nprecision and recall are calculated through a control experiment described in the chapter. We\nalso discuss the construction of a well founded ontology of the petrography domain and the\nacceptance of the developed visual query system prototype with an experimental study.\n\nFinally, Chapter 9 concludes this thesis. It gives a summary (Section 9.1) and a scope to\npotential future development directions (Section 9.2).\n\n\n\n26\n\n\n\n27\n\n2 VISUAL QUERY SYSTEMS AND ISSUES IN HCI: FUNDAMENTALS\n\nThe majority of visual query systems rely mostly on tabular data displays and the process\nof querying has not a navigation structure to guide users in the formulation task. Thus, the user\ninterface is often not designed for situations at which users can hamper the query interaction.\nThis chapter introduces the most important concepts and methods employed in the field of\nVisual Query System. We start by reviewing some key concepts that are particularly relevant for\nour work: interaction design, information visualization, sensemaking. A proper understanding\nof these aspects is indeed a prerequisite for the design of conversationally competent visual\nquery system. After this overview, we move to a more technical discussion of the software\narchitectures used to implement practical visual query systems.\n\n2.1 Interaction Design\n\nBefore explaining interaction design, we introduce briefly basic notions of HCI. In general,\nthe goal of HCI design is to produce an user interface that is easy to use and learn. HCI has really\nbeen changing over the years. There are three waves of HCI research. The first wave in 1980\nwas in studying ergonomic and human factors issues of interaction with computing systems.\nThen in 1990s was a focus on tasks, efficiency, and completion rates through controlled lab\nexperiments. Now the tendency is a focus on understanding use of new systems in daily life\nand how to improve the users\u2019 experiences.\n\nDesign according to Oxford Dictionary is a planning or intention in mind with the purpose\nto be executed. Design is balance between the utility, the usability and the beauty. The field\nof interaction design is concerned with the development of products and systems that support\nthe way people think and behave, to provide satisfying interactive experiences. In addition,\nmany academic disciplines contribute to the study and application of interaction design, such\nas psychology, cognitive science, engineering and computer science. Each of these academic\ndisciplines informs the process of developing interactive products or systems that provide a\npositive user experience.\n\nThe process of interaction design (ROGERS; SHARP; PREECE, 2011) involves many steps\nin different detailed levels. First, we have to think about the design problem, understand the\nusers\u2019 needs, produce possible conceptual models, prototypes, evaluate them according to us-\nability guidelines and objectives of user experience, think about implications of the design from\nthe usability test, do modifications in prototypes and so on. There are three key characteristics\nof interaction design (a) Focus in the user tasks, (b) Empirical evaluation, (c) Iterative Design.\nThe process of interaction design involves four basic activities:\n\nEstablishing Requirements: This stage involves establishing and answering a series of design\nquestions, such as: What does the user need from the design? How easy is it to use the\nsystem or product? Does it fit the context? Does it provide the user with sufficient means\n\n\n\n28\n\nof completing their device or system-based aims and objectives? Does it have superficial\nappeal?\n\nDesign alternatives: The process seeks input from users themselves to ensure the final design\nis as free from user-unfriendly elements as possible. The opinions of intended users are\nsought through questionnaires and interviews, whilst naturalistic observation can be par-\nticularly informative. If problems are identified during this phase then alternative designs\nare, therefore, necessary.\n\nPrototyping: The design process is iterative; at various stages it is important to trial your\nproduct or system to ensure any unforeseen problems are brought to light so they can be\nremedied before the final design is set in stone. Prototypes allow you to see how real\nusers, free from the biases that might influence the interactions of those involved in the\ndesign process, interact with your product or system.\n\nEvaluating: This last activity is known as usability engineering. Usability engineering speci-\nfies quantitative metrics about a product performance, document and evaluate with respect\nto those metrics. These four stages are then repeated until problems are eliminated, user\nneeds are satisfied and an enjoyable user experience is provided.\n\nSome guidelines for user interface design are described in Smith and Mosier (1986). Further-\nmore, there are eight rules for interface design explained in Shneiderman and Plaisant (2004).\nThese rules are:\n\n\u2022 Strive for consistency: it implies the same thing in a similar situation. Thus the interface\nshould contain consistent visual layout and identical terminology.\n\n\u2022 Enable use shortcuts: The interface should have a set of familiar abbreviations, special\nkeys for most frequently used tasks.\n\n\u2022 Offer informative feedback: The interface should show response to reduce uncertainty\nwhen performing operations and the status of operation.\n\n\u2022 Design dialogs to yield closure: dialogs should have a beginning, middle and end. The\ninformative feedback at the completion of a group of actions gives the operators the sat-\nisfaction of accomplishment, a sense of relief, the signal to drop contingency plans and\noptions from their minds, and an indication that the way is clear to prepare for the next\ngroup of actions.\n\n\u2022 Prevent errors: Limit errors a user can make. If an error is made, the system should be\nable to detect the error and offer simple, comprehensible mechanisms for handling the\nerror.\n\n\n\n29\n\n\u2022 Permit easy reversal of actions: The interface should have buttons that return to previous\nstep.\n\n\u2022 Support internal locus of control: Means to design the system to make users the initiators\nof actions rather than the responders.\n\n\u2022 Reduce short term memory load: The basis for design decisions is from the Miller\u2019s\nMagic 7 theory (MILLER, 1956).\n\nThere are cognitive processes (POSNER, 1993) underlying the interactive experience, which\nare as follows:\n\n\u2022 Attention is the cognitive process of selecting sensory information from our environment,\nwhilst ignoring or filtering out everything else in the sensory stream.\n\n\u2022 Memory is the cognitive process responsible for the encoding, storage and retrieval of\ninformation received by our senses.\n\n\u2022 Language is a cognitive process that involves learning, understanding, producing and\nsharing meaning. Almost all tasks require some form of communication, whether it is\nthrough written or verbal instruction, so it is essential to use appropriate language in\ndesign; otherwise the user will not know what, where, why, when or how they should\ninteracting in order to achieve their device- or system-based aims and objectives.\n\n\u2022 Reasoning is the cognitive process enabling evaluation and generation of logical argu-\nments, verification of facts and the assimilation, accommodation and rejection of new\ninformation on the basis of existing knowledge. Reasoning also allows us to develop new\nways of thinking with one idea leading to another. Reasoning underlies the selection of\nalternate strategies when an existing approach to a problem proves unsuccessful.\n\n\u2022 Problem-Solving is the cognitive process enabling evaluation and generation of logical\narguments, verification of facts and the assimilation, accommodation and rejection of new\ninformation on the basis of existing knowledge. Reasoning also allows us to develop new\nways of thinking with one idea leading to another. Reasoning underlies the selection of\nalternate strategies when an existing approach to a problem proves unsuccessful. There\nare three special characteristics that define problem solving:\n\n\u2013 Goal directness: behavior is generated on the basis of a current goal.\n\n\u2013 Sub-goal decomposition: if a goal is completed with one simple motion, then\nthis represents the most primitive form of problem-solving. However, higher order\nproblem-solving involves the deconstruction of the overall goal into the necessary\ncomponent behaviors.\n\n\n\n30\n\n\u2013 Operator selection: each sub-goal involves the selection of an appropriate action\nthat fits into the overall sequence. Each of these sub-goal actions is an operator, and\nin the correct order they solve the overall problem.\n\n\u2022 Decision making is important to minimize the costs associated with users\u2019 actions, so\nthey cannot cause damage and they feel able to move freely through the system or inter-\nact with a device confident in the knowledge that their decision making will not prove\ndeleterious.\n\n2.1.1 Research Methods and Techniques\n\nUnderstanding who users are and what they are doing can and should be a critical component\nin interaction design. The techniques and methods used to obtain user and task information in\nour work is described below.\n\n2.1.1.1 Survey Methods\n\nSurvey research is one of the most important areas of measurement in applied social re-\nsearch. They provide feedback from the point of view of users. Although , the data collected in\nthe survey can be biased. This means that the answers for some kind of questions may not be\nreliable. Thus, we have to care when planning the goals of the survey and selecting a represen-\ntative part of population. Researches use three types of questions in surveys, namely multiple\nchoice, numeric open-end and text open-end (TROCHIM; DONNELLY, 2008). There are two\nforms of survey research Questionnaire and interviews.\n\nQuestionnaire is a method for the elicitation, and recording and collecting information. HCI\nresearchers use questionnaires as tools to capture users\u2019 mind. Some well known questionnaires\nin HCI are listed below:\n\n\u2022 Questionnaire for user interface satisfaction(QUIS) (CHIN; DIEHL; NORMAN, 1988)\naims to assess users\u2019 subjective satisfaction with specific aspects of the human-computer\ninterface. It also contains eleven specific interface factors that are organized hierarchi-\ncally, namely screen factors, terminology and system feedback, learning factors, system\ncapabilities, technical manuals, on-line tutorials, multimedia, voice recognition, virtual\nenvironments, internet access, and software installation. Each factor measures users\u2019 sat-\nisfaction with the general properties of the interface as well as the specific ones.\n\n\u2022 Perceived Usefulness and Ease of use(PUEU) (DAVIS, 1989) refers to the degree to which\nperson believes that using a particular system would be free of effort in the case of ease\nof use and that particular system would enhance his or her job performance in the case of\nusefulness.\n\n\n\n31\n\n\u2022 Nielsen\u2019s attributes for usability(NAU) (NIELSEN, 1993) are five components, which are\nassessed in a user interface. Those are: learnability, efficiency, memorability, errors, and\nsatisfaction. Based on these attributes are formed questions for testing the user interface\nusability.\n\n\u2022 Nielsen\u2019s heuristic evaluation(NHE) (NIELSEN, 1993) is a usability engineering method\nfor finding and assessing usability problems in a user interface design as part of an iter-\native design process. They are called heuristics because they are more in the nature of\nrules of thumb than specific usability guidelines. Examples of these questionnaires are\nfound Perlman\u2019s site1.\n\nInterviews are flexible because the interviewer has the freedom to change some questions or\nthe asking order of the questions according to the reactions of the users. Finally, interviews are\nparticipatory since they require both the interviewer and the participant to join in an interactive\nconversation. Shaughnessy, Zechmeister and Zechmeister (2006) present the most important\ntypes of interviews, which are face-to-face and telephone interviews. In face-to-face interviews,\nthe interviewer works directly with the respondent. Unlike questionnaires, the interviewer has\nthe opportunity to monitor the user and ask follow-up questions. On the other hand, telephone\ninterviews enable a researcher to gather information rapidly, but the interviewed people can feel\nuncomfortable.\n\nMainly, there are three methods that are used in designing the interviews in HCI research\n(ROGERS; SHARP; PREECE, 2011). Unstructured interviewing methods are used during the\nearlier stages of usability evaluation. The interviewer\u2019s objective at this stage is to gather as\nmuch information as possible concerning the user\u2019s experience and on their expectations of the\nsystem. Semi-structured interviews are used when the interviewer has a better understanding\nof system requirements. Therefore, a more focused interview design can be used to focus on\nthe points of interest. However, there can still be a degree of flexibility to allow the user to\nexpand on an answer. Finally, structured interviewing has a specific, predetermined agenda\nwith specific questions to guide and direct the interview. The interviewer, in this design, has a\nfully developed product and prepares questions to measure the user\u2019s reactions to that product.\n\n2.1.1.2 GQM approach\n\nGoal Question Metric (GQM) approach (BASILI; CALDIERA; ROMBACH, 1994) is a\nmeasure for software quality. It is based upon the assumption that for an organization to mea-\nsure in a purposeful way it must first specify the goals for itself and its projects, then it must\ntrace those goals to the data that are intended to define those goals operationally, and finally\nprovide a framework for interpreting the data with respect to the stated goals. Furthermore, it\nconsists of three major levels: Conceptual level (Goal), Operative level (Question), Quantita-\n\n1http://hcibib.org/perlman/question.html\n\n\n\n32\n\ntive level (Metric). In the conceptual level, a goal is defined for an object relative to a particular\nenvironment. In the operational level, it is defined a set of questions that will assess the specific\ngoal. In the quantitative level, it is measured the answer into metrics that could be objective or\nsubjective metric.\n\n2.1.1.3 Paper Prototyping\n\nPaper prototyping is a method mainly used to design, test and improve user interfaces. Sny-\nder (2003) defined paper prototyping as one type of usability test of the user interface. Paper-\nbased prototyping is the quickest way to get feedback on your preliminary user interface infor-\nmation architecture, design, and content. Paper prototypes are easy to create and require only\npaper, scissors and sticky notes.\n\nSnyder (2003) explains in details how it works. The first step is to come up with some\nscenarios or tasks that you would like the users to perform. Having that on mind, the next step\nis to make paper-based prototype, which could be a simple drawing on paper or printed-out\nscreen-shots. The real session begins when you present the paper-based prototype design to the\npotential end users and inform them what task they are required to perform. Users will try to\nthink how they perform the tasks by using this prototype design. In this process the users will\nfeel in real if the interface or solution works for them and have a direct opinion about the design.\nOne of the advantages of using paper prototyping is that we foster design thinking (BUXTON,\n2010).\n\nLow-fidelity prototypes are often paper-based and do not allow user interactions. They\nrange from a series of hand-drawn mock-ups to printouts. In theory, low-fidelity sketches are\nquicker to create. Low-fidelity prototypes are helpful in enabling early visualization of alterna-\ntive design solutions, which provokes innovation and improvement. An additional advantage is\nthat users may feel more comfortable suggesting changes.\n\nHigh-fidelity prototypes are computer-based, and usually allow realistic (mouse-keyboard)\nuser interactions. They are assumed to be much more effective in collecting true human per-\nformance data (e.g., time to complete a task), and in demonstrating actual products to clients,\nmanagement, and others.\n\n2.2 Information Visualization\n\nWhy should we be interested in visualization (WARE, 2004)? Because the human visual\nsystem is a pattern seeker of enormous power and subtlety. The eye and the visual cortex\nof the brain form a massively parallel processor that provides the highest-bandwidth channel\ninto human cognitive centers. At higher levels of processing, perception and cognition are\nclosely interrelated, which is the reason why the words understanding and seeing are used\nas synonymous. However, the visual system has its own rules. We can easily see patterns\n\n\n\n33\n\npresented in certain ways, but if they are presented in other ways, they become invisible. The\nmore general point is that when data is presented in certain ways, the patterns can readily be\nperceived. If we can understand how perception works, our knowledge can be translated rules\nfor displaying information. Following perception-based rules, we can present our data in such\nway that the important and informative patterns stand out. If we disobey the rules, our data will\nbe incomprehensible or misleading.\n\nVisualization can be a means to let users gain insights into large amounts of information\nquickly. The information visualization mantra stated by Shneiderman (1996) suggests how tasks\ncan be supported through interactive visualization: Overview first, zoom and filter, then details-\non-demand. Data visualization builds a bridge from data to knowledge, but only if the tools\nthat we use were built on understanding of visual perception (how we see) and cognition (how\nwe think). Data visualization tools must focus attention and augment memory. Memory plays\nan important role in human cognition. Because memory suffers from certain limitations, visual\nanalysis tools must be rooted in an understanding of how people think to augment memory.\nAccording to Few (2006), good tools can help us increase:\n\n\u2022 The amount of information that we can compare (that is, greater quantity)\n\n\u2022 The range of information that we can compare (that is, more dimensions)\n\n\u2022 The different views of the information that we can compare (that is, multiple perspectives)\n\nThere are a diversity of works in the field of information visualization that address visual-\nization variants for different data types and structures, as well as suitable interaction techniques\nto let users interactively explore and exploit the presented information. Card, Mackinlay and\nShneiderman (1999) provide a selection of computer aided approaches in the field and a refer-\nence model.\n\nThis model is divided into several stages starting with raw data that is subsequently trans-\nformed into data tables. These data tables are enriched to visual structures by mapping them to\nvisual attributes. Finally, the visual data gets rendered into a view that is perceived by a user. In\neach stage the user can interact in different ways.\n\nResearch into the visualization of information has shown that third dimension can inhibit\nusers and make interfaces more confusing. 3D visualizations have often hindered, rather than\nsupported, participants in their searching activities. Research by Modjeska (2000) has shown\nthat 25 % of the population struggle with 3D visualization displayed on 2D device, such as\ncomputer screen. Investigation by Sebrechts et al. (1999) also showed that participants were\nsignificantly slower at using a 3D interface, unless they had significant computer skills. Con-\nsidering these challenges, however, the research described below highlights some of the ideas\nthat have been proposed for 3D visualizations.\n\n\n\n34\n\n2.3 Sensemaking\n\nSensemaking seems primarily to denote a psychological phenomenon defining how people\nmake sense out of their experience in the world (DERVIN, 1983). On the basis of this definition,\nKlein, Moon and Hoffman (2006) discuss that sensemaking is not a reinvention of the wheel of\nthe concepts creativity, curiosity, comprehension, mental modeling, and situation awareness, but\nit is more than that; concluding that sensemaking is a motivated continuous effort to understand\nconnections in order to anticipate their trajectories and act effectively.\n\nIn HCI perspective, sensemaking refers to the iterative process of building up a represen-\ntation of an information space that is useful for achieving the user\u2019s goal (RUSSELL et al.,\n1993). Pirolli and Card (2005) identified a sensemaking model (Figure 2.1) composed of dif-\nferent stages and the different ways to proceed from one stage to another. These stages are\ngrouped in information foraging loop and sensemaking loop. In the information foraging, the\nsubtasks of searching, collecting, filtering and preparing are involved. In the sensemaking, the\ninformation is analyzed, hypothesis are built and tested based on the previously collected data,\nconclusions are derived from the information, before it is finally exploited to according action.\n\nFigure 2.1: Sensemaking model\n\nSource: Pirolli and Card (2005)\n\nGood data sensemaking tools support statistical calculations, using the strength of comput-\n\n\n\n35\n\ners to perform those calculations quickly and accurately, and interactive visualizations, making\nit possible to find and understand the meaningful patterns in our data.\n\n2.4 User Interface for Search\n\nUser interface design is a practice whose techniques are encompassed by the field of HCI.\nOn the other hand, searching involves a range of tactics and techniques, rather than simply sub-\nmitting a query and seeing a list of matching results. As part of special issue on exploratory\nsearch, Marchionini (2006) identified a series of strategies that users may often need to employ\nto achieve their goals, such as comparing, synthesizing and evaluating. It is plain to see that a\nquery interface needs to provide more than a simple keyword search form, or query by exam-\nple to support users in applying such strategies. Thus, the search session is a cycle of query\nspecification, inspection of retrieval results, and query reformulation in the field of information\nretrieval. In our case the search session will be composed of two components of the visual query\nsystem visual query definition and visual result set presentation.\n\nA set of guidelines for user interface has been identified in section 2.1 within the interaction\ndesign process. But, how we put these guidelines into search interfaces. Search in information\nretrieval is a text search that supports keyword, boolean operators and command-based syn-\ntax. Thus, we have to keep user staying in the flow while searching in order to improve user\ninteraction. We describe below what are interfaces of flow.\n\n2.4.1 Interfaces of Flow\n\nThe theory of flow was developed by the psychologist Csikszentmihalyi, as described in\nhis book, Flow: The Psychology of Optimal Experience (CSIKSZENTMIHALYI, 2009). The\nessence of Csikszentmihalyi\u2019s notion is that a person who experiences flow is completely ab-\nsorbed by an activity for the pleasure that it provides, and all other stimulation and activities are\nimperceptible to that person. He describes how he and many other researchers around the world\napplied the experience sampling method to try, understand and characterize this elusive human\nexperience. Csikszentmihalyi\u2019s theory of flow is defined by seven characteristics, from which\nBederson (2004) focuses on five of them along with interfaces that exemplify those character-\nistics:\n\n\u2022 Challenge and require skill: If users have to re-figure something out, or fight with an\nunstable feature regularly, they won\u2019t be able to get to the point of concentrating on the\ntask. Also, it is important to balance between needs of novice and experts.\n\n\u2022 Concentrate and avoid interruption: the interface must be able to focus user\u2019s attention at\nlength on the task at hand.\n\n\n\n36\n\n\u2022 Maintain control: user must be able to maintain the control over the activity. More, the\ninterface should be adaptable to user needs.\n\n\u2022 Speed and feedback: user must receive quick feedback in response to their actions.\n\n\u2022 Transformation of time: The user\u2019s perception changes when they are in the flow. These\nchanges are due to the difficulty level of the task. Thus, this offers a direction to a possible\nmetric for understanding flow.\n\nA set of properties that a interface with flow should have is described in Hearst (2009).\nThose properties are:\n\n\u2022 Inviting\n\n\u2022 Support interrupt-free engagement in the task.\n\n\u2013 No blockages\n\n\u2013 Easy reversal of actions\n\n\u2013 Next steps seem to suggest themselves.\n\n2.5 Visual Query Systems\n\nVisual Query Systems (VQS) (CATARCI et al., 1997) use a visual representation that is\neffective to express different kinds of knowledge in order to depict a domain of interest in\nexpressing related queries. According to Catarci et al. (1997), the goal of people working with\nVQS is to retrieve the aimed data. Indeed, two main activities are:\n\n\u2022 Understanding the reality of interest: consists in the accurate definition of the fragments\nof schema involved in the query. One technique is the browsing. This browsing may be\nspecialized into an intentional and extensional case. In the intentional case, it is performed\non the schema(metadata) of the database. In the extensional one, it is performed on the\ndata itself.\n\n\u2022 Formulating the Query: consists in formally express the operands involved in the query,\nwith their related operators. There are different strategies for formulating a query. They\nare schema navigation, sub-queries, matching and range selection.\n\nThe visual representations (CATARCI et al., 1997) are:\n\n\u2022 Form-Based: it facilitates non expert users by capitalizing on the natural tendency of\npeople to use regular structures and organize data into tables.\n\n\n\n37\n\nFigure 2.2: Visual Representation of Spatial Objects\n\nSource: Morris et al. (2004)\n\n\u2022 Diagram-Based: it uses visual components that have one to one correspondence with\nspecific concept types. It offers the visualization of relationships between concepts. The\nquery is done through selection of visual elements, the traversal on adjacent elements,\nand the creation of a bridge between disconnected elements.\n\n\u2022 Icon-Based: it uses set of icons which denote both the entities of real world and the\navailable functions of the system. The query is expressed by combining icons according\nto some spatial syntax. This type is affordable for users who are not familiar with the\nconcepts of the data model.\n\n\u2022 Hybrid: it uses an arbitrary combination of the above three visual formalisms.\n\nWhen developing VQS it should be emphasized in the identification of the users and their\nneeds, using it for developing a suitable interface and validated it with usability evaluation.\nFurthermore, the cycle session of visual query systems is composed of visual query definition\nand analysis of visual result presentation, described below.\n\n2.5.1 Visual Query Definition\n\nVisual query definition associates query criteria in a display (TUNNING, 2005). Also it is\ncalled visual query formulation or specification. By means, the user needs to be able to specify\nthe query visually and interactively when queries tend to get large or complex, and iterative\nprocedures are applied to refine it. Here visual representations of the query structure provide\noverview and help users to maintain the stay of flow in the interface. For example, visual query\ndefinition for a spatial database, (MORRIS et al., 2004) define visual representations for spatial\nobjects (see Figure 2.2), which will be used in the interface to formulate the query.\n\n2.5.2 Visual Result Set Presentation\n\nThe visualization of large amounts of data needs an appropriate presentation in order to\nmake sense to the user. Depending on the data type, a broad variety of information visualization\ntechniques is and has been mentioned before in section 2.2. PetroQueryr data result relies\n\n\n\n38\n\nFigure 2.3: Ranking graph\n\nSource: Few (2013)\n\nmostly on tabular data displays (see Figure 2.8). Tables are the best approach if you need to look\nup individual values, compare a single value to another, or know values precisely, but they do\nnot display patterns or trends. This is a problem, because geologists try to find patterns and trend\nin the data. Therefore, it is important to provide a visual thinking of the data in order to enable\nmeaningful patterns. One way is through graphs. Properly designed graphs can make user hold\nmuch more information in memory. For example, if user needs to remember information in the\ntable, user could hold only about four of the values (that is, four of the monthly sales numbers)\nin working memory at any one time. But by relying on the graph, twelve values are combined\ninto each of the four lines to form a pattern that user could hold entirely as a single chunk in\nworking memory. Few (2013) presents seven common quantitative relationship graphs, from\nwhich we are interested in the following ones:\n\n\u2022 A ranking graph shows the sequence of a series of categorical subdivisions, based on the\nmeasures associated with them. For example, the sequence of minerals from top to down\nthat occurs in a sample description (see Figure 2.3).\n\n\u2022 A part-to-whole graph shows how the measures associated with the individual categorical\nsubdivisions of a full set relate to the whole and to one another. For example, this graph\nwill help user to get sense of the composition of a rock (see Figure 2.4).\n\n\u2022 A correlation graph shows whether two paired sets of measures vary in relation to one\nanother, and if so, in which direction (positive or negative) and to what degree (strong\nor weak). For example, the percentage comparison of two minerals in a well (see Figure\n2.5).\n\n\u2022 A distribution graph shows the number of times something occurs across consecutive\nintervals of a larger quantitative range. For example, the distribution of a mineral in\ncertain sample descriptions from a Basin (see Figure 2.6)\n\n\u2022 A geospatial display shows the locations of values, which is useful when geography is\nrelevant to the story that you are telling. It is important this display for geologists because\n\n\n\n39\n\nFigure 2.4: Part-whole graph\n\nSource: Few (2013)\n\nFigure 2.5: Correlation graph\n\nSource: Few (2013)\n\nFigure 2.6: Distribution graph\n\nSource: Few (2013)\n\n\n\n40\n\nFigure 2.7: Geospatial graph\n\nSource: Few (2013)\n\nthey recognize immediately map visualizations (see Figure 2.7).\n\n2.6 Four Ontology-based VQS\n\nIn the following, we describe four ontology-based visual query systems. The first one is the\nmotivation of our thesis and employs list-views. The second system use a tree view approach,\nwhich is used by the majority of systems. The third system use a graph representation to guide\nthe consultation. The fourth system combine textual and graph representation. Our proposed\nsystem (described in chapter 7) uses the graph representation, but reducing the amount of in-\nformation showing in the graph according to the user\u2019s community. Also, we focus in the result\nvisualization providing other data visualizations.\n\n2.6.1 PetroQueryr\n\nPetroQueryr (CASTRO et al., 2005) is a commercially mature visual query system that\nsupports multidimensional, user-defined queries over a petrographic data controlled by ontolo-\ngies. PetroQueryr works on top of Petroledge database. Petroledge database is based in the\n\n\n\n41\n\nFigure 2.8: PetroQueryr Interface\n\nSource: Castro et al. (2005)\n\nknowledge model of Abel (2001) that consists of a petrographic ontology, which has been im-\nplemented originally using a frame representation format, and other abstract concepts that give\nsupport to the petrographic description, which is the extensional part. In Silva (2001), it is de-\nscribed part of the structure of the database of the system focusing in the rock interpretation.\nPetroQueryr GUI consists of three sections (see Figure 2.8). In the first section there are list\nboxes for the concept, attribute and value selection. In the second section, the query is shown in\na structured query language (SQL) like form in a list box. The last section contains the results\nwhich are represented in a table. The process of query formulation starts selecting one or mul-\ntiple samples, and then it is selected the concept, attribute or value that the sample can contain.\nThrough the process of selecting concepts, a textual query appears in the second section. Each\nline is a SQL like query. The user has the ability to delete a line of the query. At the same time,\nthat query line text is added to the list box, the result appears in the table. Also, the user can\nvisualize in a ternary plot the results in another window.\n\n\n\n42\n\nFigure 2.9: GRQL Interface\n\nSource: Athanasis, Christophides and Kotzinos (2004)\n\n2.6.2 Graphical RQL\n\nGraphical RQL (ATHANASIS; CHRISTOPHIDES; KOTZINOS, 2004) is a user-friendly\nGUI for browsing and filtering RDFs description bases. The GRQL GUI consists of three basic\ninteraction areas. The left area provides a tree-shaped display of the subsumption hierarchies of\nboth the classes and properties defined in an RDF schema. The right upper area of the GRQL\nGUI allows users to explore progressively the individual RDF class and property definitions\nand generate navigational and/or filtering RQL queries. Finally, the right lower area visualizes\nthe constructed query/view results. A snapshot of the GRQL GUI is illustrated in Figure 2.9.\nThe process of query formulation starts in the left area. Users select a node in the tree display\nand can access their subclasses and sub-properties by expanding the tree node. After selecting\nthe concept or property, its complete definition is shown in the right upper area and user can\nperform operations over the instance level.\n\n2.6.3 VisualSPEED\n\nVisualSPEED (see Figure 2.10) is a visual query interface that provides a natural visual\nquery interface, and supports automatic query generation (ALENCAR; SALGADO, 2013). The\nsystem is structured mainly by the user interaction layer and the management layer. The user\ninteraction layer consists of four modules:\n\n\u2022 View Ontology: responsible for ontology visualization.\n\n\u2022 Form Query: responsible for formulating queries that are sent to the query module.\n\n\u2022 View Results: responsible for organizing and displaying the results of queries.\n\n\u2022 View network: responsible for displaying network topology.\n\n\n\n43\n\nFigure 2.10: VisualSPEED Interface\n\nSource: Alencar and Salgado (2013)\n\n\n\n44\n\nThe management layer is composed by two modules responsible for the communication be-\ntween the User Interaction and the SPEED\u2019s core layers:\n\n\u2022 Query Manager: it performs the integration of query results translating them into a format\ncomprehensible by the View Results module.\n\n\u2022 Communication Manager: responsible for communicating the User Interaction Layer\nwith SPEED core.\n\nThe process of query formulation is done through the selection of concepts in the graphical\nrepresentation of the ontology. The selected concepts will be showed on the query composition\nfield, which is in the form query module. In this area, constructors as OR, AND or NOT can\nbe used to compose the query. The query submitted by the user is interpreted by the system\nand translated to a SPARQL command to be executed in data. Users can customize the query\nby selecting and prioritizing enriching variables (approximation, subconcept, superconcept and\naggregation). These variables represent semantic relationships between the concepts of the\nquery represented by the generated semantic correspondences. The enrichment of the query is\nshown in the bottom right side of Figure 2.10. The system displays the results organized in a\ntable shown in the bottom right side of Figure 2.10. Users can also see a visualization of the data\nin another window. This VQS combines a graph representation for performing their queries.\n\n2.6.4 OptiqueVQS\n\nOptiqueVQS (SOYLU et al., 2013) is an ontology-based visual query system for the Op-\ntique Scalable End-user Access to Big Data project2. It relies on an ontology-based data access\n(OBDA) framework (KOGALOVSKY, 2012), which is not part of the scope of our thesis, that\nallows access to relational data over ontologies. OptiqueVQS is designed as a user-interface\n(UI) mashup built on widgets. According to authors, widgets are the building blocks of their\nVQS and refer to portable, self-contained, full-edged, and mostly client side applications with\nlimited functionality and complexity. They have three widgets depicted in Figure 2.11. The\nfirst widget (W1 - see the bottom-left part of Figure 2.11) is a menu-based query by navigation\nwidget and allows users to navigate concepts through pursuing relationships between them,\nhence joining relations in a database. The second widget (W2 - see the bottom-right part of\nFigure 3) is a form-based widget, which presents the attributes of a selected concept for selec-\ntion and projection operations. The third widget (W3 - see the top part of Figure 2.11) is a\ndiagram-based widget and provides an overview of the constructed query and affordances for\nmanipulation.\n\nThe process of query formulation is described as follows: a user first selects a kernel con-\ncept, i.e., the starting concept, from W1, which initially lists all domain concepts accompanied\n\n2http://www.optique-project.eu/\n\n\n\n45\n\nFigure 2.11: Optique Query Interface\n\nSource:Soylu et al. (2013)\n\nwith icons, descriptions, and the potential/approximate number of results. The selected concept\nbecomes the focus/pivot concept (i.e., the node coloured in orange or highlighted), appears on\nthe graph (i.e., W3) as a variable-node , W2 displays its attributes, and W1 displays all concept-\nrelationship pairs pertaining to this concept. The user can select attributes to be included in the\nresult list (i.e., using the eye button) and/or impose constraints on them through form elements\n(i.e., W2). Currently, the attributes selected for output appear on the corresponding variable-\nnode in black with a letter o, while constrained attributes appear in blue with letter c. The user\ncan select any available option from the list, which results in a join between two variable-nodes\nover the specified relationship and moves focus to the selected concept (i.e., pivot). The user\nhas to follow the same steps to involve new concepts in the query and can always jump to a\nspecific part of the query by clicking on the corresponding variable-node. The arcs that connect\nvariable-nodes do not have any direction, since for each active node only outgoing relation-\nships, including inverse relationships, are presented for selection in W1; this allows queries to\nbe always read from left to right. The user can also switch to SPARQL mode and see the textual\nfrom of the query by clicking on SPARQL Query button at the bottom-right part of the W3 as\ndepicted in Figure 2.11. The user can keep interacting with the system in textual form and\ncontinue to formulation process by interacting with the widgets. For this purpose, pivot/focus\nnode is highlighted and every variable-node is made clickable to allow users to change focus.\nCurrently, the textual SPARQL query is non-editable and is for didactical purposes, so that ad-\n\n\n\n46\n\nvanced end-users, who are eager to learn the textual query language, could switch between two\nmodes and see the new query fragments added after each interaction.\n\nOptiqueVQS presents in its interaction design the importance of using search filters because\nit lets the user find easily the desired term. In our interaction design, we also considered the\nsearch filters for searching concepts or values of the concepts.\n\n2.7 Summary\n\nIn this introductory chapter, we provided the background used in the practical side of our\nthesis. Also, we described four ontology-based visual query systems. Furthermore, we follow\nthe interaction design process in the implementation of RockQuery system prototype. We used\nthe research methods and techniques in the preliminary PetroQueryr study described in ap-\npendix A, which gave us the basis for understanding and establishing the requirements. Then,\nthe design alternatives are presented in appendix B. Finally, prototyping and evaluating are\ndiscussed in chapter 7 and in subsection 8.2.\n\n\n\n47\n\n3 ONTOLOGY, UFO AND ONTOLOGY VISUALIZATION\n\nThis chapter explains the basic notions of ontology, foundational ontology and ontology\nvisualization. First, we start defining what is an ontology. Then, we describe the Unified Foun-\ndational Ontology (UFO), which is used in our ontology view extraction approach. Finally, we\npresent some ontology visualization works.\n\n3.1 Ontology\n\nAn ontology is a collection of concepts and relationships among them organized in a special\nstructure. Some authors misused the term ontology as a taxonomy of concepts or names without\nspecification of formal relations between classes. In this section, we describe the definition of\nontology and types of ontologies and provide the notion of foundational ontology.\n\n3.1.1 Definition\n\nOntology begins with the field of philosophy with the classical study of being which remotes\nto the Greek philosopher Aristotle BC. Aristotle\u2019s description the study of being qua being\ninvolves three things: (1) a study, (2) a subject matter (being), and (3) a manner in which the\nsubject matter is studied (qua being); which introduce the base to the science of metaphysics of\nfirst philosophy. So in a philosophical discipline, ontology is characterized by being singular,\nperspective- and domain independent- and oriented towards making strong claims about the\nworld (ORSTROM; ANDERSEN; SCHARFE, 2005). However, the term ontology was itself\ncoined in 1613 by two philosophers, Rudolf Gockel (Goclenius), in his Lexicon philosophicum\nand Jacob Lorhard (Lorhardus), in his Theatrum philosophicumm (SMITH; WELTY, 2001).\n\nThe importance of ontology in computer science has grown in the last decade gaining a\nspecific role in Artificial Intelligence, Computational Linguistics, and Database theory. Thus,\nontology in computer science has begun with the definition of Neches et al. (1991), who stated\nthat ontology establishes the basic terms and relations comprising the vocabulary of a topic area\nas well as the rules for combining terms and relations to define extensions to the vocabulary.\nLater on, Gruber (1993) defined as an explicit specification of a conceptualization. Based on\nGruber\u2019s definition, Borst (1997) defined as a formal specification of a shared conceptualiza-\ntion. After that, Studer\u2019s definition merges Borst and Gruber defining ontology as a formal\nand explicit specification of a shared conceptualization (STUDER; BENJAMINS; FENSEL,\n1998). However, we adopt Guarino\u2019s definition (GUARINO, 1998) who considers ontology as\na logical theory accounting for the intending meaning of a formal vocabulary. The intended\n\nmodels of a logical language using such vocabulary are constrained by its ontological commit-\n\nment. An ontology indirectly reflects this commitment (and the underlying conceptualization)\n\nby approximating these intended models.\n\n\n\n48\n\nThere exist many classifications of ontology that Gomez-Perez, Fernandez-Lopez and Cor-\ncho (2007) present, but in general they can be categorized based on the formalness of the knowl-\nedge captured. According to Baader et al. (2003) there are top-level ontology, domain ontology\nand application ontology which are similar to Guarino\u2019s classification (1997), excepted for the\ntask ontology that is not included. Thus, Guarino (1997) distinguishes four types of ontologies\nwhich are:\n\n\u2022 Top Level Ontologies- describe general concepts that are independent of a domain.\n\n\u2022 Domain Ontologies- describe vocabulary related to a generic domain.\n\n\u2022 Task Ontologies- describe vocabulary related to a generic task.\n\n\u2022 Application Ontologies- describe concepts depending of a particular domain or task.\nThese concepts often correspond to roles played by domain entities while performing\ncertain activity.\n\nFurthermore, domain specific ontology includes among other terminologies, glossaries, thesauri\nand nomenclatures which are associated to specific domains.\n\nIt is important to mention that for the semantic web community some definitions are dif-\nferent. A Concept can be defined in a variety of ways, potentially providing a lot of additional\ninformation about itself, and its relationships (and topological proximity) to other elements.\nThrough an inheritance structure concepts can be made specializations and generalizations of\nother concepts. The conventions used for a concept are exactly the same as what is labeled\na class in the ontology web language (OWL)1. Also, both attributes and relationships are re-\ngarded as properties that belong to a concept.\n\n3.2 Foundational Ontologies and UFO\n\nFoundational Ontologies are theoretically well-founded domain independent systems of cat-\negories that can be used to develop models of specific domains (GUIZZARDI, 2005). Being\ndomain independent well-grounded formal theories, they can serve as a foundation for analyz-\ning domain specific concepts, providing guides to make modeling decisions in the conceptual\nmodeling process, clarifying and justifying the meaning of the models, expliciting the ontolog-\nical commitments that underlie the ontologies, improving the understandability and reusability.\nIn this work, we adopt a foundational ontology called Unified Foundational Ontology (UFO).\nThis ontology provides a set of categories that account for the ontological distinctions under-\nlying language and cognition, and that are empirically supported by investigations in cognitive\nsciences.\n\nUFO is an ontology of particulars and universals. Roughly speaking, the distinction be-\ntween particular (or individual) and universal is analogous to the distinction between types\n\n1http://www.w3.org/TR/2004/REC-owl-guide-20040210/\n\n\n\n49\n\n(class or classifier) and their instances, in conceptual modeling (GUIZZARDI, 2005). Thus,\nUFO provides a set of categories of particulars and a set of categories of universals. The cate-\ngories of universals can be viewed as meta-types, since they can be understood as types of types.\nThese meta-types are characterized according to meta-properties and classify concepts in spe-\ncific (domain) ontologies. In this sense, we can view the concepts in specific domain ontologies\nas instances of the meta-types provided by UFO. Following, we will summarize the main UFO\nfeatures that we will apply in this work. A full description of UFO can be found in Guizzardi\n(2005).\n\nThe meta-types of UFO are organized in a taxonomy according to some ontological meta-\nproperties, such as identity, rigidity, existential dependency, relational dependency and so on.\nThus, UFO includes the principles of the the well-known OntoClean methodology (GUARINO;\nWELTY, 2004), which allows (a) the analysis of the concepts in domain ontologies according\nto philosophically well founded meta-properties and (b) the subsequent meta-classification of\nthese concepts. The meta-properties and meta-types of UFO are very similar to the ones pro-\nvided by OntoClean. Indeed, UFO can be viewed as an integration of several aspects of On-\ntoclean (GUARINO; WELTY, 2004), DOLCE(GANGEMI et al., 2002), GFO(HERRE, 2010)\nand GOL(DEGEN et al., 2001), covering some problematic issues that were not covered in a\nsatisfactory manner by existing foundational ontologies.\n\nIn this work we propose using meta-properties (and meta-types as well) for guiding the sub-\nontology extraction algorithm. Due to this, an ontology of universals (that provides meta-types)\nis needed instead of an ontology of particulars (such as DOLCE). Thus, we have adopted UFO\nbecause it extends the framework of OntoClean and provides a strongly formalization for its\nmeta-types and meta-properties.\n\nAs summarized in Carbonera (2012), the most generic UFO concept is Thing, which is spe-\ncialized in two fundamental entities: Urelement and Set. Urelement is an entity that is not a set.\nThe first distinction that is made between the specializations of Urelement is the fundamental\ndistinction between the categories of Individuals and Universals. Individuals are entities that\nexist in reality, such as a person, an apple, etc. Universals, in turn, are standard features that can\nbe instantiated in a number of different individuals; it can be understood as high-level abstrac-\ntions that characterize different classes of individuals. In general, for each of the specializations\nfor Universals, UFO also provides a corresponding specialization for Individuals.\n\nInitially, UFO makes a distinction between Endurant Universal and Perdurant Universal\n(or Event Universal) as shown in Figure 3.2. Instances of an Endurant Universal (such as Dog,\nPerson, Country, etc) are individuals wholly present whenever they are present. On the other\nhand, instances of a Perdurant Universal (or Events), such as Game, War, etc, are individuals\ncomposed by temporal parts, that is, they happen in time, accumulating temporal parts.\n\nWithin the Endurant Universals, UFO defines Substantial Universals, whose instances are\nindividuals that, in general, are existentially independent from all other individuals. Some of\ntheir instances can be existentially dependent when they are considered inseparable parts of\n\n\n\n50\n\ntheir hosts. Some Substantial Universals are Sortal Universals, which have some principle of\nidentity (PI). In this context, a PI supports the judgment whether two instances of the universal\nare the same.\n\nAt this point, it is important to introduce the notion of rigidity. A certain universal is rigid\nwhen its extension is the same in all possible worlds. That is, an instance of a rigid universal\ncannot cease to be an instance of it without ceasing to exist. This notion can be clarified con-\nsidering the distinction between Person and Student. Person can be viewed as a rigid universal,\nsince any person cannot cease to be a person without ceasing to exist; meanwhile all instances of\nStudent (which is an anti-rigid universal) can still exist (as persons) if they cease to be students.\n\nWithin the sortal universals, UFO includes three distinct types of substance sortals, which\nare rigid sortals that provide their own principle of identity: Kind, which represents complexes\nintegral wholes (Person, Dog, Chair, etc); Collective (Swarm, Forest, etc), which represents\ncollectives; and Quantity, which represents objectified portions of matter (Wine, Water, Gold,\netc). Besides that, Subkind is a rigid sortal that does not provide its own PI, but carries a\nprinciple of identity which is supplied by a given substance sortal.\n\nUFO also defines two anti-rigid sortals: Roles and Phases. Phases are universals that con-\nstitute possible stages in the history of a substance sortal. Phases are relationally independent,\nsince they depend solely on intrinsic properties. For example, Caterpillar and Butterfly are\nconsidered phases of Lepidopteran; as well as Baby, Toddler, Kid, Teenager and Adult are\nconsidered phases of Human. On the other hand, Roles are relationally dependent, since they\ndepend on extrinsic (relational) properties. This is the case, for example, when we say that\nfor an instance of person to be considered a student, she must be enrolled at an educational\ninstitution.\n\nOther substantial universals do not have the properties of sortals; they are dispersive uni-\nversals. This is the case, for example, of Category, which is a rigid universal that does not\nhave a PI. Categories represent essential properties that are common to all instances of many\ndisjoint universals that provide distinct PIs. Rational agent is an example of Category, since\nit abstracts an essential property (namely, the rationality) of instances of Person and Artificial\nAgent, which are disjoint universals, with distinct PIs. Role Mixin, on the other hand, is an anti-\nrigid universal that does not have a PI. It can be viewed as a generalization of roles of different\nsubstance sortals. For example, Customer is a role mixin that generalizes Personal Customer,\nwhich is a role of Person; and Corporate Customer, which is a role of Organization. Finally,\nMixin is a universal that does not have a PI and that is semi-rigid; that is, it has some instances\nthat are necessarily its instances, but it also has some instances that are only contingently its\ninstances. It usually generalizes rigid and anti-rigid universals. For example, Seatable Object is\na mixin that generalizes Chair, which is a rigid universal; and Solid Crate, which is an anti-rigid\nuniversal (actually, it is a phase of a Crate, which can also be a Broken Crate).\n\nOn the other hand, Moment Universals are Endurant Universals whose instances are existen-\ntially dependent individuals that inheres in other individuals. Some moment universals depend\n\n\n\n51\n\nFigure 3.1: Diagram representing a modeling scenario using kinds, roles, relators and role\nmixins.\n\nSource: The authors\n\nexistentially on a single entity. This is the case of Quality Universals and Modes. Quality Uni-\nversals represent the properties in the conceptual models. A Quality Universal characterizes\nother Universals and is related to Quality Structures, that is, a structure that represents a set of\nall values that a quality can assume. Thus, considering the property color as a Quality Univer-\nsal, a given instance of Car could be characterized by an instance of quality Color, which is\nassociated with a value (called quale) in the ColorStructure, which represents all the possible\nvalues that the property color can assume. On the other hand, Modes are universals whose in-\nstances are existentially dependent individuals, and that are not associated to Quality Structures.\nExamples of modes are Skill, Belief, Headache, etc. Both Quality universals and Modes are re-\nlated to the entities that they characterize through a relation of characterization. Besides that,\nRelators are moments that depend existentially on two or more entities. Examples of relators\nare enrollment, contract, etc. Relators are related to entities that it relates through a relation of\nmediation. The relators also represent the relational dependency of roles and role mixins. Due\nto this, roles and role mixins must be related to some relator, through a relation of mediation.\nFigure 3.1 represents a modeling case using relators, roles and role mixins.\n\nUFO proposes four types of parthood relations, clarifying its semantics: componentOf,\nmemberOf, subCollectionOf and subQuantityOf. Each parthood relation can only be estab-\nlished between individuals of specific UFO meta-types, respecting some ontological constraints\nembedded in UFO. These relations can be characterized by five meronymic meta-properties that\nindicate: essential part, inseparable part, immutable part, immutable whole and shareable part.\n\nAs important as the characterization of the meta-properties and meta-types, UFO also pro-\nvides some postulates that a model must follows:\n\n\u2022 Postulate 1: Every individual in a conceptual model of the domain must be an instance\nof a sortal.\n\n\u2022 Postulate 2: An individual represented in a conceptual model of the domain must instan-\ntiate exactly one ultimate Substance Sortal (kind, quantity or collective).\n\n\u2022 Postulate 3: A rigid universal cannot specialize (restrict) an anti-rigid one.\n\n\n\n52\n\n\u2022 Postulate 4: A dispersive universal cannot specialize a Sortal.\n\nFurthermore, it is important to notice that every sortal that does not provide its own principle\nof identity (Role, Phase and SubKind) must be subsumed by exactly one concept that provides\nits own identity (one of the Substance Sortals). We use the described meta-types to orient the\nselection of concepts in the ontology in order to guarantee that the concepts that are inserted in\nthe view preserve their integral meaning.\n\nBesides the UFO itself, in Guizzardi (2005) it is proposed a conceptual modeling and ontol-\nogy representation language called OntoUML. OntoUML is a redesign of the Unified Model-\ning Language (UML) meta-model, assuming the ontological distinctions and formal constraints\nprescribed by UFO. Thus, it can be used for representing reference ontologies according to\nUFO distinctions. According to Benevides et al. (2009), OntoUML is a modeling conceptual\nlanguage because it offers meta constructs that represent the ontological distinctions described\nin UFO, and facilitates the ontology engineer the model conceptualization. In addition, the\nlanguage was created adapting the basics of UML 2.0. and increasing the formal constraints\nthat guarantee that the language will just accept models that satisfy the axiomatization estab-\nlished by the foundational ontology UFO. In our work, we developed a tool for ontology view\nextraction that uses as input ontologies represented as OntoUML models.\n\nFigure 3.2: UFO Structure\n\nSource:Guizzardi (2005)\n\nIn UFO-B, described in Guizzardi and Wagner (2008), the main focus is Event (Perdurant or\nOccurrent) which are possible changes from a portion of reality to another, i.e., they may trans-\n\n\n\n53\n\nform reality by changing the state of affairs from one pre-state situation to a post-state situation.\nEvents are existentially dependent on their participants in order to exist. Each participation is\nitself an event that can be atomic (with no improper parts) or complex (composed of at least\ntwo events that can themselves be atomic or complex), but that existentially depends on a single\nsubstantial. UFO-B is appreciated in the Figure 3.3.\n\nFigure 3.3: UFO B\n\nSource:Guizzardi (2005)\n\n3.3 Ontology Visualization\n\nVisualizations are commonly used as a cognitive aid for presenting large ontologies and\ninstance data. While several visualizations for ontologies have been developed in the last cou-\nple of years, they either focus on specific ontology aspects or are hard to read for non-expert\nusers. The silver bullet would be an ontology visualization that is equally comprehensive and\ncomprehensible. It must be printable, but also provides intuitive ways to interactively explore\nontologies. Some of ontology visualizations are described below.\n\nThe ontology visualization should concatenate visualization techniques with customization\noperators such as pruning (BERCOVICI, 2008). These operators may help to show only the\nrelevant, more focused parts of ontologies, rather than showing the entire graphs with potential\nthousands of nodes.\n\nProtege VOWL, presented by Lohmann, Negru and Bol (2014), is an OWL plugin visual-\nization module. In their work, it was presented a visual notation for OWL ontologies and were\ndefined for many elements of OWL graphical depictions. These visual elements are based on\nonly a handful graphical primitives forming the alphabet of the visual language: Classes are\ndepicted as circles that are connected by lines and arrows representing the property relations,\nwhile property labels and datatypes are shown in rectangles. The visual elements are combined\n\n\n\n54\n\nto a graph visualization representing the ontology and being arranged in a force-directed layout.\n\nSome OWL elements are treated in a special way to increase the readability of the visual-\nization. For instance, the predefined classes owl:Thing and rdfs:Resource usually do not carry\ndomain information. They are multiplied and depicted in smaller size in order to give them less\nprominence in the visualization. Similarly, rdfs:datatype and rdfs:literal are shown multiple\ntimes so that datatype properties are arranged radially around the classes they are connected\nwith. In addition, VOWL defines a color scheme for a better distinction of the different ele-\nments. The colors are defined in an abstract way leaving room for customization, but concrete\ncolors and color codes are recommended by VOWL. VOWL viewer uses Prefuse for graph\ndiagramming. Prefuse uses a physics simulation to generate the force-directed graph layout,\nconsisting of three different forces: edges act as springs, while nodes repel each other and drag\nforces ensure that nodes settle (HEER; CARD; LANDAY, 2005). The forces are iteratively\napplied resulting in an animation that dynamically positions the nodes. The user can smoothly\nzoom in to analyze certain ontology parts in detail or zoom out to explore the global structure\nof the ontology. They can pan the background and move elements around, which results in a\nrepositioning of the nodes by an animated adaptation of the force-directed layout.\n\nFigure 3.4: Protege VOWL\n\nSource: Adapted from Lohmann, Negru and Bol (2014)\n\nGrafoo (FALCO et al., 2014) is a graphical notation for OWL ontologies that uses the stan-\ndard library yEd2. In Graffoo, there are two different kinds of graphical elements, blocks (or\nnodes) and arcs. Blocks are used to define classes and class restrictions (yellow rectangles\n\n2Available at http://www.yworks.com/en/products yed about.html.\n\n\n\n55\n\nwith solid and dotted borders respectively), datatypes and datatype restrictions (green rhom-\nboids with solid and dotted borders respectively), individuals (pink circles with solid black\nborder), ontologies (boxes with light-blue heading and dotted black border), additional axioms\nin Manchester Syntax for all those constructs that are not directly supported by a particular\ngraphical element (light-blue and folded boxes), and rules (boxes with light-grey heading and\nblack dashed border). Arcs are used to define assertions (black lines ending with a solid arrow),\nannotation properties (orange lines beginning with backslash and ending with a dashed arrow),\ndata properties (green lines beginning with an empty circle and ending with an empty arrow),\nand object properties (blue lines beginning with a solid circle and ending with a solid arrow).\nIn addition to these graphical elements, there is a particular kind of graphical element (named\nproperty facilities, i.e., arcs having dotted border and referring to data, object and annotation\nproperties), that were studied to decrease the cognitive effort of users when understanding an\nontology. For instance, they allow one to say explicitly that a certain property can be used in\nthe context of two classes without declaring them as domain and range. They evaluate their tool\nbased in learnability and usability.\n\nFigure 3.5: Grafoo Tool\n\nSource:Falco et al. (2014)\n\nGrOWL (KRIVOV et al., 2007) is another visualization model. It uses color, shading, and\nshape of nodes to encode properties of the basic language constructs. The objective of GrOWL\nwas to make browsing ontologies more intuitive for non-technical users, limiting exposure to\nthe complexities of DL.\n\nOntology navigation can be treated as a cognitive task. It is a complex process that involves\nthe cognitive abilities that allow us to understand our environment, to plan actions and then\nto execute those actions (JUL, 2004). These cognitive abilities are: (a)information gathering,\nwhich refers to collect information about the environment such as where things are and how\nthey are related spatially, (b) spatial knowledge preservation, which refers to encode and store\nspatial knowledge as well as recall and decode such information, (c) wayfinding, which refers\nto solve a spatial problem that involves determining where to go and how to go there, (d) lo-\n\n\n\n56\n\ncomotion, which refers to direct and control environment. A set of principles for providing\ncognitive support for navigating ontologies is described in d\u2019Entremont and Storey (2009) and\nthose principles are:\n\nProvide Overviews: An overview of the whole ontology supports the information gathering\nprocess by enabling users to understand the scope of the ontology.\n\nProvide Context: It allows users to see where they are within the structure and what other part\nexists. It is related with the cognitive ability spatial knowledge preservation.\n\nReduce complexity: It allows user to focus on smaller chunks of the ontology. It is related\nwith the cognitive ability wayfinding process.\n\nIndicate point of interest: It supports users in determining which areas within the ontology are\nworthy of further exploration. It is related with the cognitive ability locomotion.\n\nAllow incremental exploration: It allows users to travel a route and enables browsing of the\nontology with the current term as the focal point. It is related with the cognitive abilities\ninformation gathering and locomotion.\n\nAs a result, Diamond (D\u2019ENTREMONT; STOREY, 2009), a visualization plugin for protege,\nis based on these principles. One of the advantages is that Diamond uses the fisheye strategy,\nwhich defines a Degree of interest (DOI) function. This function assigns a value to each item in\nthe information structure. The authors introduce the notion attention reactive interfaces, which\nbasically employs the DOI to reduce navigation overhead. Diamond uses two threshold values\nto define three interest levels: non-interesting, interesting and landmark. For each level, it\nallows users to specify a color, which help user to identify the level. The focus of these plugin\nwas mostly for experienced users.\n\nWe review the ontology visualizations works because in the ontology exploration the visu-\nalization should help user to understand the ontology. We implement our ontology visualization\nin a very simple manner with the basic functionalities of zooming, panning, lenses and color\nnodes.\n\nIn the next chapter, we explain the sub-ontology extraction techniques used in the literature\nto obtain a subset of a larger ontology.\n\n\n\n57\n\n4 SUB ONTOLOGY EXTRACTION\n\nIn this work, we assume that both ontology module extraction and ontology view extraction\ninvolve a common step of sub-ontology extraction, whose goal is to select a subset of semanti-\ncally related elements of a given ontology. The idea of extracting a subset of a larger ontology\nis referred to many different names by different authors. According to (SEIDENBERG; REC-\nTOR, 2006), subset extraction techniques can be broken down into three main categories:\n\n\u2022 Query-based methods\n\n\u2022 Network Partitioning\n\n\u2022 Traversal Approach\n\nThere is also the logical approach (VESCOVO et al., 2013; TSARKOV; PALMISANO,\n2012) that is receiving a lot of attention due to its applicability to web semantic. The logical ap-\nproach is considered as a modularization technique (PARENT; SPACCAPIETRA, 2009). The\nnetwork partitioning approach can be considered as included in the logical approach classifica-\ntion, because it uses the advantages of a logical language. In the logical approach, one seeks\nwhat logical language offers the conditions for being a modular ontology language. The most\nwell-known logical languages are Distribution Description logics and its syntax C-OWL, E-\nconnection and Packaged-extended Description logics(P-DL). Two broad classes of approaches\nare adopted to asserting and using semantic relations between multiple ontology modules: DDL\nand E-connections adopt the linking approach that assumes that the modules are nonoverlapping\nor disjoint, while P-DL adopts the importing approach that allows direct use of foreign terms\nin an ontology module. As we can see, one of the drawbacks of using logical approaches is\nthe language dependency. A detailed description can be found in Bao, Caragea and Honavar\n(2006). In the next section we present the use of network partitioning applied with logical\napproach.\n\nIn this chapter, we will describe above the categories in the following order: query-based\nmethods, network partitioning and traversal approach.\n\nThe sub-ontology extraction step is performed differently in module extraction and view\nextraction, since the requirements that the sub-ontology should meet in both approaches can\nbe different. We roughly define what is ontology module and ontology view, before presenting\neach technique.\n\nThe notion of a module is well-understood in the software engineering community, but on\nontology modularization it can be understood in rather different ways. Doran (2009) in his\nPhD thesis presents the principles of ontology modularization and the following definition: An\nontology module is a reusable component of a larger or more complex ontology, which is self-\n\ncontained but bears a definite association to other ontology modules, including the original\n\nontology.\n\n\n\n58\n\nThe notion of view is well-defined in the database community, but in the ontology view\ncommunity it can also be understood in rather different ways. According to Noy and Musen\n(2009), Bhatt et al. (2004a), ontology view is a portion of an ontology, which is extracted\naccording to the user requirements and that can overlap other ontology views.\n\n4.1 Query-based Methods\n\nQuery-based methods provide a view mechanism similar to those existing in SQL. This\nmechanism makes them intuitively familiar to computer scientists with a background in databases.\nThe shortcomings of these approaches are that they provide only very low-level access to the\nsemantics of the ontology being queried. Query-based views are good for getting very small,\ncontrolled, single-use extracts, which are tightly focused around a few concepts of interest. By\ncontrast, the methods presented herein create self-standing, persistent, multi-use ontology sub-\nset. The examples provided by the different works consider ontology not only the classes and\nrelations but also the instances within the ontology definition. In the following, we describe\nsome characteristics of some query-based methods, namely vSPARQL, KAON views, RVL and\nSAIQL.\n\n4.1.1 vSPARQL\n\nThe view definition language vSPARQL (SHAW et al., 2011) allows to define views for\nsemantic web content. vSPARQL is used to specify both the selection of the information that\ncan be accessed through the view and how the selected information is reorganized and modified\nthrough the view. vSPARQL might be a good low-level tool for extracting views, but it is not a\nsolution itself.\n\nThey define the following requirements for their language:\n\n\u2022 The input and output should be RDF graphs.\n\n\u2022 View definitions should be able to include arbitrary facts. By means, it must explicitly\nindicate the triples to include and exclude. vSPARQL supports basic edge selection,\nspecification of paths of arbitrary length.\n\n\u2022 The view definition language should allow the combination of content from different\ngraphs.\n\n\u2022 Views should be able to restructure, modify or augment selected facts. Indeed, they add\nnew information to the original subset.\n\nTheir view definition language does not use formal logics to guarantee that a derived subset\nhas the same properties as the original ontology. Instead, it allows the application developer to\n\n\n\n59\n\nspecify exactly which facts are relevant and how those facts should be arranged or augmented.\nOne of the drawbacks is that vSPARQL can be difficult to write for users who are not computer\nscientists.\n\n4.1.2 KAON views\n\nAn ontology view mechanism (VOLZ; OBERLE; STUDER, 2003) is defined based upon\nthe RQL query language(ALEXAKI et al., 2000) that allows easy selection, customization and\nintegration on the semantic web. It defines views for classes and properties. Authors imple-\nmented their view mechanism in the KAON Server (BOZSAK et al., 2002). Views definitions\nare stored in RDF syntax. As soon as the view is created by the user, consistency checks are per-\nformed through a set of axioms. The use of this query language as the previous one is focused\non users that are computer scientists.\n\n4.1.3 RVL\n\nThe view definition language RVL (MAGKANARAKI et al., 2004) is a conceptually simple\nlanguage that enables both humans and applications to understand view specifications as normal\nRDF/S schemas. An RVL view specifies a virtual description schema graph (or virtual schema\nfor brevity). Its extension corresponds to a virtual description base graph (or virtual base for\nbrevity), which is a valid instance of the virtual view schema.\n\nRVL allows queries to reorganize the RDFS hierarchy when creating a view. This allows\nviews to be customized on-the-fly for specific applications\u2019 requirements. It can be used to\nimplement advanced user aids, such as personalized navigation and knowledge maps. Their\nviews are merely a collection of pointers to the actual concepts, and are discarded after they\nhave served their purpose.\n\n4.1.4 SAIQL\n\nOWL-SAIQL (Schema And Instance Query Language) (BERCOVICI, 2008) is a query\nlanguage that combines T-Box and A-Box in an integrated manner. SAIQL defines a query\nmechanism with template patterns. The query template pattern extracts all the concepts, their\nindividuals and the description concepts related to them. The benefit provided by SAIQL in this\nspecific case is twofold: first, Bercovici is not only pruning an ontology but, at the same time,\nhe extracts a part of this ontology. This means the part comprising the relation, the concepts,\ntheir description and the associated individuals. Whereas the previous pruning methods only\nprovide the concepts and their subsumed concepts. The second benefit of SAIQL is that the\nquery patterns allow very fine-grained statements to be crafted and organized into families or\ngroups that can be eventually invoked by the user through a graphical user interface. Hence,\n\n\n\n60\n\nquery-based customization operators can be numerous and can include both generic and highly\ndomain-specialized templates, which lead to substantially more numerous ways for also cus-\ntomizing ontologies.\n\n4.2 Network Partitioning\n\nIn this case, the ontology is treated as a network of nodes connected by links. The class\nhierarchy can be interpreted as a directed acyclic graph and any relations between classes can\nbe represented as links between the nodes. They use the idea of network partitioning in their\nalgorithms. But, the result is not always an ontology that guarantees semantic understandability\nbecause the algorithms are focused in decomposing the ontology creating clusters, which is\ndifferent from obtaining a well sub-ontology. Some works done with the idea of partitioning\nare presented below, but we do not describe detailing the algorithms because it focused in a\nlogical approach employing description logic syntax, which is out of our scope.\n\n4.2.1 Structure based partitioning\n\nThis method, explained in Stuckenschmidt and Schlicht (2009), partitions large ontologies\ninto smaller modules. Its focus is on obtaining a set of modules or partitions, where modules\nhave not overlapping portions. Modules are disjoint and consist of a set of concepts that are\nconnected semantically to each other and do not have strong semantical dependency with in-\nformation from outside the module. Authors introduce the notion of dependency, which is used\nthroughout their technique. Their method consists of five independent steps:\n\n\u2022 Creating a dependency graph: a dependency graph is extracted from a source file.\n\n\u2022 Determining the strength of dependencies: Based in the structure of the dependency graph\nthe weight of the dependencies is determined. They use the social network theory.\n\n\u2022 Determining the modules: the sets of strongly related concepts are detected.\n\n\u2022 Assigning single concepts during the partition. Then, those nodes were isolated using the\ndegree of proximity with other nodes.\n\n\u2022 Module Merging: two adjacent modules can be merged if the height is 1.0 or 0.5. This\nheight is a measure used for checking the strength of the internal dependency.\n\nAs part of the algorithm, users have to define the size of the module, which can be difficult\nto assign when the objective is to obtain consistent modules. They prove their algorithm over\nSUMO and NCI cancer ontology. One of the disadvantages is the criteria for assigning heights.\nIt is not well explained and does not offer a consistent ontological principles for doing that.\n\n\n\n61\n\n4.2.2 Automated Partitioning using E-connections\n\nThis method, presented in Grau et al. (2005), partitions a knowledge base (KB) repre-\nsented in OWL formalism. For that purpose, E-connection, which is a language for combining\nSHOIN KB that is a family of a description logic, provides modularity benefits. The modules\nproduced by their algorithm are formally proven to contain the minimal set of atomic axioms\nnecessary in order to maintain crucial entailments. One disadvantage is that this method is just\napplied to one description logic family.\n\n4.3 Traversal Approach\n\nOn the other hand, traversal approaches represent the extraction as a graph traversal. Traver-\nsal methods start from one or several concepts of the ontology, and include in the module the\nconcepts and relations that are linked to these elements. Some traversal-based approaches are\nlanguage-dependent as well, since they assume that the ontology is represented in a specific\nontology representation language, such as OWL. However, some approaches represent the on-\ntology as an abstract graph, in a language-independent way. Due to this feature, here we focus\nin traversal-based approaches for subset extraction.\n\nd\u2019Aquin, Sabou and Motta (2006) extract modules including all elements that are either\ndirectly or indirectly related with the target entities. Their approach assumes the OWL formal-\nism, taking advantage of inferences, which are used during the extraction. The advantage is that\nthey include elements that are implicitly related by the mean of inferences. The input of their\nalgorithm is the ontology O and the sub-vocabulary SV of O that the extracted module should\ncover. SV is described by a set C(SV) ?C(O) of concept names, a set P(SV) ? P(O) of property\nnames and a set I(SV) ? C(O) of individual names.\n\nThe modularization algorithm consists in computing C(M), P(M), I(M) and A(M) recur-\nsively, in a fix-point like algorithm. All of them composed the subset extracted. They defined\nthe following rules for selecting concepts, properties, individuals and assertions.\n\nConcept: The algorithm takes a concept C if C is the super concept of two concepts already in\nthe subset C(M); if C is the most specific concept of an individual already in the subset\nI(M); if C is a concept expression such that a concept D, which D ? C(M), D ? C or if C\nis in a D expression.\n\nProperty: The algorithm takes a property p if p is the super-property of two properties in P(M),\nif p relates an individual such p(a,b) and a? I(M), or if P is in a concept expression that\nbelongs to C(M)\n\nInstance: The algorithm takes an individual a if p(b,a) and b in I(M). Also, if the individual is\nan instance of a concept c in C(M).\n\n\n\n62\n\nAssertion: The algorithm takes an assertion A if A relates elements of C(M), P(M) or I(M).\n\nFor example in Figure 4.1, we have the original ontology in the part a and the result in the\npart b. We are interested in extracting from this ontology the knowledge concerning Samantha\nand the concept of mother. Therefore, the sub-vocabulary SV used as an input for the algorithm\nis: C(SV) =Mother,P(SV) =female, and I(SV)=samantha. We start the algorithm with Mother\nconcept and it is in C(M). It is added the properties hasChild and hasSex because those prop-\nerties relate the Mother concept, which is in C(M). Then, it is included tabatha because it is\nrelated with Samantha which is in I(M) and female because it is used in an included concept\nexpression. Also, Gender and Child are selected because they are the most specific concepts\nof the individuals female and Tabatha, respectively. Then it is taken Person because is the\nsuperconcept of two concepts that are already in the subset which are Mother and Child.\n\nFigure 4.1: The original ontology (a) and the resulting module (b)\n\nSource: d\u2019Aquin, Sabou and Motta (2006))\n\nThe main criticism of this approach is that it is tightly focused on knowledge selection. Due\nto that it is also considered the selection of individuals. Using individuals involves to select the\nconcepts from which individuals are instantiated. These concepts can be disjoint.\n\nDoran, Tamma and Iannone (2007) tackle the problem of ontology module extraction from\nthe perspective of an Ontology Engineer wishing to reuse part of an existing ontology. The\napproach extracts an ontology module corresponding to a single user-supplied concept that is\nself-contained, concept centered and consistent. They proposed an abstract graph model for the\nextraction process. The model is an edge-labeled directed graph G, given an alphabet\n\n?\nE, is\n\nan ordered pair G=(V,E) where:\n\n\u2022 V is a finite set of vertices\n\n\u2022 E?V\u00d7\n?\n\nE \u00d7V is a ternary relation describing the edges(including label). Needles to\nsay, E is not symmetric.\n\n\n\n63\n\nThe ontology model is defined as GM = (VM, EM). Their technique do not traverse disjoint\nlabeled edges. Their algorithm is called recursively. It is used a container of booleans for E\nnot to be followed (Excluded); V that have been visited (Visited) and V to be visited (ToVisit).\nThe algorithm input is a vertex. If the vertex is not visited, the algorithm inserts into Visited\nand create a container of the relations where the given vertex is the source. Then, the algorithm\nloops through that container and takes the first element of the container and if it is not in the\nprohibited relations, it is added to EM and inserts the range vertex in the container of ToVisit.\nIf ToVisit is not empty we extract the first element and called again the algorithm. The pseudo-\ncode is presented in algorithm 1.\n\nAlgorithm 1 Module Extraction (DORAN; TAMMA; IANNONE, 2007)\n1: procedure EXTRACTMODULE(V ertex s)\n2: if s /? Visited then\n3: insert s into Visited\n4: create containerX = e ? E|s\u00d7\n\n?\nE \u00d7v Visited\n\n5: while X is not empty do\n6: y = first element of X\n7: if y /? Excluded then\n8: y ?EM\n9: insert rsuch that y = s\u00d7\n\n?\nE \u00d7r intoToVisit\n\n10: end if\n11: if ToVisit is not empty then\n12: t = first element of ToVisiti\n13: remove t from ToVisit\n14: extractModule(t)\n15: else\n16: output GM\n17: end if\n18: end while\n19: end if\n20: end procedure\n\nAs result, they implement their algorithm in ModTool. Their tool makes use of JENA1\n\nfor storing the generated ontology and Pellet 2 for checking consistency. They take an ontology\nabout the University domain illustrated in Figure 4.2. The input of the algorithm is the Academic\nStaff. In the first iteration, Academic Staff is added to Visited. Due to Admin Staff is disjoint\nwith Academic Staff, Admin Staff is not added to ToVisit. Admin Staff has no more edges to\ntraverse and is removed from ToVisit; the extraction now continues with Lecturer as the concept\nof focus.\n\nIn the second iteration, Lecturer is added to Visited. Lecturer is the domain of the object\nproperty supervises; the range of this property is PhD Student, thus PhD Student is added to\nToVisit. Lecturer has no more edges to traverse and is removed from ToVisit; the extraction now\ncontinues with Research Staff as the concept of focus.\n\nIn the third iteration, Research Staff is added to Visited. Research Staff has one subclass\n\n1http://jena.sourceforge.net/\n2http://clarkparsia.com/pellet/\n\n\n\n64\n\nPhD Student. PhD Student has already been added to ToVisit, which does not permit duplicate\nelements, however the edge that describes the subclass relation will be included in the module.\nResearch Staff has no more edges to traverse and is removed from ToVisit; the extraction now\ncontinues with PhD Student as the concept of focus.\n\nFinally, PhD Student is added to Visited. PhD Student has no valid edges to traverse. Even\nthough PhD Student is the range of an object property, this edge is not traversed. PhD Student\nis removed from ToVisit. ToVisit is now empty; the extraction process ends and the ontology\nmodule is outputted.\n\nFigure 4.2: Ontology of the University domain\n\nSource: Doran, Tamma and Iannone (2007)\n\nThe advantage of this approach is that it is easy to understand and adapt to any kind of\nformalism. But, a container is created for excluded relations, which means that the ontology\nengineer should know what relations are not going to be taken. This seems to be a manual\noperation performed by the ontology engineer.\n\nThe approach proposed by Seidenberg and Rector (2006) takes advantage of the detailed\nsemantics captured within an OWL format. It was exemplified with the Galen Ontology. They\ncalled the subset of an ontology segments. But the idea is the same. Thus, their algorithm\ntraverses upwards of the hierarchy until the top concept is reached. The algorithm goes down\nthe class hierarchy. The property hierarchy is, however, never traversed downwards. Properties\nare not of interest unless they are used in the class hierarchy. So, if they are used, they and their\nsuper-properties and no other properties, are included. Sibling classes are not included in the\nextract.\n\nHaving selected the classes up and down the hierarchy from the target class, their restric-\ntions, intersection, union and equivalent classes now need to be considered: intersection and\nunion classes can be broken apart into other types of classes and processed accordingly. Equiv-\nalent classes (defined classes, which have another class or restriction as both their subclass and\n\n\n\n65\n\ntheir superclass) can be included like any other superclass or restriction, respectively. Restric-\ntions generally have both a type (property) and a filler (class), both of which need to be included\nin the subset.\n\nAdditionally, the superproperties and superclasses of these newly included properties and\nclasses also need to be recursively included, otherwise these concepts would just float in OWL\nhyperspace. The authors do not include the subclasses of those classes included via links be-\ncause there is the risk that the result could be the entire ontology.\n\nAfter that the subset is constrained by property filtering and depth limiting using boundary\nclasses. In property filtering, they did an analysis of GALEN property hierarchy and organize\nthem in upper level meta-properties which are: modifierAttribute, constructiveAttribute, loca-\ntiveAttribute, structuralAttribute, partitiveAttribute and functionalAttribute. Depth limiting is a\nnumber, which limits the traversal depth. It occurs when a set of links or properties are added\nwhen doing the extraction. Each classes\u2019 restrictions has links to other classes, which are in-\ncluded to produce a semantically correct extract. However, if, upon reaching a certain recursion\ndepth, calculated from the target concept, all the links on a class are removed, this class becomes\na boundary class.\n\nIn the example below, one might remove the axiom stating that the Pericardium (the mem-\nbrane that surrounds the heart) is a component of the CardiovasuclarSystem (line three of the\nFigure), since one may not be interested in including the CardiovascularSystem and everything\nrelated to it in a segment of the Heart. This creates a boundary class.\n\nHeart ??hasStructuralComponent.Pericardium\nPericardium ? SerousMembrane\nPericardium ??isStructuralComponentOf.CardiovascularSystem\n\nThe approach is more automated, aiming to produce a heuristic algorithm that creates a\nuseful segment without much user intervention. Another advantage of their technique is that\nthey constrain the module size. Even though they mention that they use meta properties for\nproperties, it is just relation attributes that are not ontological meta-properties.\n\n\n\n66\n\n4.3.1 PROMPT\n\nNoy and Musen (2003) present an extension to the PROMPT suite of ontology maintenance\ntools, which is a plugin to the Protege ontology editor. Noy and Musen (2009) introduce the\nnotion of traversal view, which is a view where a user specifies the central concept or concepts of\ninterest, the relationships to traverse to find other concepts to include in the view, and the depth\nof the traversal. For example, given a large ontology of anatomy, a user may use a traversal\nview to extract a concept of Lung and organ parts that surround the lung or are contained\nin the lung. They consider ontologies expressed in RDF Schema, and also adapted to OWL\nformalism. They present a formal definition for traversal view, which consists of two parts:\nthe view specification and the view computation. As part of view specification, it is defined\ntraversal directive and a traversal view specification, where this last one is defined as a set of\ntraversal directives. Traversal directive is defined as pair of (Cst, PT) where Cst is a class\nor an instance in the ontology (the starter concept of the traversal); PT is a set of property\ndirectives. Each property directive is a pair (P, n), where P is a property in the ontology and\nn is a non negative integer or infinity (inf), which specifies the depth of the traversal along the\nproperty P. In the view computation, it is presented traversal directive result , which is the result\nof applying the directive; and traversal view, which is the union of traversal directive results for\neach traverse directive.\n\nThe algorithm starts from one class of the ontology being considered. Relations from this\nclass are recursively traversed to include the related entities. These relations are selected by the\nuser, and for each relation selected, a depth of traversal (or traversal directive) is assigned. The\ntraversal directive is used to halt the traversal of the corresponding relation when the specified\ndepth is reached.\n\nFor example, in their work was taken the Foundational Model of Anatomy (FMA) ontol-\nogy was used, and extracted a subset through the traversal directive: Cst = Lung; PT =\n(hasPart, 2), (containedIn, 1).\n\n\u2022 Lung is included in the view.\n\n\u2022 If Lung is in the domain of the property hasPart, then all classes in the range of this\nproperty are also included in the view. We will denote the set of these classes ChasPart\n. From the classes in Figure 4.3, at this step, it will be added LungParenchyma and\nPulmonaryLymphaticTree to the view and to ChasPart.\n\n\u2022 If Lung is also an instance (RDF Schema does not prevent classes from being instances as\nwell) and has a value for the property hasPart, those values are also included in the view.\nThen, it is added these values to the set ChasPart. The view now contains the traversal\nalong the hasPart property of depth 1.\n\n\u2022 It is repeated steps 2 and 3 once for each concept in the set ChasPart to add values for\n\n\n\n67\n\nthe traversal along the hasPart property of depth 2. In the example, in Figure 4.3, this step\nwill add the class PulmonaryInterstitium to the view.\n\n\u2022 Then it is repeated steps 2 and 3 for the class Lung and property containedIn once, adding\nvalues for the traversal along the property containedIn of depth 1. This step will add the\nclass ThoracicCavity from Figure 4.3 to the view.\n\nFigure 4.3: A subset of FMA, having the class Lung as input\n\nSource: Adapted from Noy and Musen (2009)\n\nThis flexible approach allows an Ontology Engineer to iteratively construct the ontology\nmodule that they require by extending the current view. However, the ontology engineer needs\nto have a deep understanding of the ontology that is being used. This technique is not auto-\nmatic and takes into account the user involvement in selecting the relations to be traversed and\nassociating to each of them a level of recursion, at which the algorithm should stop traversing\nrelations. The focus of this method is on query answering.\n\n4.3.2 MOVE\n\nBhatt et al. (2004a) present a distributed approach to sub-ontology extraction. They called\nthe result of this process a sub-ontology or materialized ontology view.\n\nThe process begins with the import of an ontology (i.e. constructing an internal memory\nrepresentation of the ontology), which is represented using an ontology standard. Also the user\n(or application) requirements and specifications are imported. By means, it allows a user to\nprovide subjective information, pertaining to what must/must not be included in the target sub-\nontology, on which the extraction process is based on. The input can be a concept, attribute, or\nrelationship.\n\n\n\n68\n\nEvery ontological element may have a labeling of selected, must be present in the sub-\nontology; deselected, must be excluded from the sub-ontology or void, the extraction algorithm\nis free to decide the respective elements inclusion/exclusion in the sub-ontology.\n\nIn the extraction process optimization schemes are defined, which handle several issues\npertaining to it, such as ensuring the consistency of initial requirements. They do not use a\ngraph representation for their algorithm. Instead, they propose an object-oriented design cre-\nating partitions and applying the parallelism paradigm. This is followed by the execution of\nthe optimization algorithms that finally produce the extracted sub-ontology. The first one is\nRequirements Consistency Optimization Scheme (RCOS), which ensures that the requirements\nas expressed by the user are consistent and correct. These rules were defined in Wouters et al.\n(2002) and they are described below.\n\n\u2022 RCOS1: This rule stipulates that if a binary relationship is selected, the two concepts\nmust be in the target ontology.\n\n\u2022 RCOS2: This rule enforces the condition that if an attribute mapping has a selected la-\nbelling, the associated attribute and the concept that it is mapped onto must be selected to\nbe present in the target ontology.\n\n\u2022 RCOS3: This rule stipulates that if an attribute mapping has a deselected labelling, its\nassociated attribute must be disqualified from the target ontology.\n\n\u2022 RCOS4: It uses the notion of path. If an attribute is selected, but the concept it belongs\n(mapped) to is deselected, there must exist a path from the attribute to another concept\nthat is not deselected.\n\nThe second optimization scheme is called Semantic Completeness (SCOS) (BHATT et al.,\n2004b) that states the following conditions:\n\n\u2022 SCOS1: If a concept is selected, all its super-concepts, and the inheritance relationships\nbetween the concepts and its super-concepts have to be selected.\n\n\u2022 SCOS2: If a concept is selected, all the aggregate part-of concepts of this concept, to-\ngether with the aggregation relationship have to be selected as well.\n\n\u2022 SCOS3: If a concept is selected, all the attributes it possesses with a minimum cardinality\nother than zero and their attribute mappings should be selected as well.\n\nThe third optimization scheme is called Well Formedness (WFOS). This optimization scheme\ncontains the proper rules to check that the new sub-ontology is a valid ontology. By means, if\na concept was deselected its attributes must be deselected, if an attribute is deselected the map-\nping between the attribute and the concept must be deselected, if relationship is deselected, the\nconcepts that are in the relationship must be deselected. As a result, it should not exist islands\n\n\n\n69\n\nin the ontology. An island is defined as a group of 1 or more ontological concepts that cannot\nreach every other ontological concept in the total group.\n\nThe last optimization scheme is called Total Simplicity (TSOS). The result is a smallest\nsubset that is still a valid ontology. It is applied a modified version of kruskal algorithm for\nminimal spanning trees. For that purpose the elements that are with void label are changed with\naccepted and rejected label following certain rules defined in Wouters et al. (2009). A detailed\ndescription of their algorithms is in Wouters et al. (2009)\n\nMaterialized ontology view (WOUTERS et al., 2009) is a (valid) ontology that consists\nsolely of projections, copies, compressions, and/or combinations of elements of the base ontol-\nogy, presenting a varying and/or restricting perception of the base ontology, without introducing\nnew semantic data. Also for a minimum quality in materialized ontology view should include\nthese two optimization schemes RCOS and WFOS.\n\nIn the import process they annotate a concept with a label. The advantage of this process are\nthese optimization schemes, which provide a way to introduce quality in the extraction process;\nand being user centered, language independent. The focus of their algorithm is to improve the\nefficiency of information retrieval.\n\nAlthough, the extraction mechanism is user centered, this process implies many interactions\nbecause user has to define what optimization schemes to follow. They stated that the less rela-\ntionships, the better is the sub-ontology extracted. Thus, their method achieves the statement\nabove by their optimization schemes. However, when reducing relationships and clustering\nconcepts, there are lost of information. Unless the user is an expert in the domain, this will be\nhelpful, otherwise not.\n\nThe algorithm is exemplified in Flahive et al. (2011) with a portion of the Unified Medical\nLanguage (UMLS) meta-thesaurus ontology, which is the pharmacy ontology depicted in Figure\n4.5. The scenario is when a pharmacist selects the main pieces of information required from the\nUMLS ontology and passes the list to the ontology engineer. The ontology engineer uses this\nlist as a labeling for the UMLS ontology. The concepts are labeled with selected, deselected and\nvoid depicted in Figure 4.4 with nodes in gray, dark gray, and white color, respectively. After\nthat, the extraction of the selected elements is done following RCOS and WFOS. The next step\nis to ensure that each element in the sub-set is connected by some path, which is done according\nto SCOS. So for example, Fatty Acids concept has the label selected, and for SCOS1, Lipids\nconcept must be selected as well. The extracted sub-set is depicted in Figure 4.5.\n\n4.4 Discussion\n\nIn the approaches mentioned above, two main limitations are noticed. First, the existing\napproaches of ontology modularization rely on static ontologies that can be inconsistent to\ncover basic user\u2019s tasks. Second, modularization algorithms consider mainly the structure of\nthe input ontology, instead of semantics. Consequently, we need semantics-based criteria to\n\n\n\n70\n\ndetermine the border of ontology modules. Moreover, the contextuality of the ontology module\nor ontology view will considerably depend on the semantic covertness of the original input\nontologies. Our proposal presented in the next chapter considers the use of meta-properties in\nthe sub-extraction algorithm to cover this gap.\n\n\n\n71\n\nFigure 4.4: A Labeled Portion of the UMLS Meta-thesaurus Ontology as a Connected Graph\n\nSource: Flahive et al. (2011)\n\n\n\n72\n\nFigure 4.5: Extracted sub-set\n\nSource: Flahive et al. (2011)\n\n\n\n73\n\n5 DOMAIN ONTOLOGY FOR DIAGENESIS AND MICROSTRUCTURAL\n\nIn this chapter, we describe the well-founded domain ontology developed for testing our\napproach covering the communities of sedimentary diagenesis and microstructural characteri-\nzation. In this case, a knowledge community is the group of people whose job requires shared\ndomain knowledge to support problem solving. Firstly, we describe the domains of diagen-\nesis and microstructural analysis. Then, we explain the most important terms of the domain\nontology and finally, we discuss about the developed ontology.\n\nThis well-founded domain ontology was the result of an ontological analysis over the\nPetroledger ontology, restructuring the ontology based on foundational ontology principles\npreserving the original conceptualization that supports the knowledge models. Furthermore,\nthis ontology was extended with microstructural terms and validated by geologists.\n\n5.1 Diagenesis and Microstructural Analysis\n\nIn this section, we introduce the basic notions of diagenesis and microstructural character-\nization. For that purpose, the larger areas that involve those domains are those of Petrology\nand Microtectonics, respectively. Petrology is a subfield of geology that involves the study of\nrocks, their composition, textures and the process that formed them. Petrology is closely re-\nlated to Geochronology, involving techniques for the determination of the ages of rock, and to\nGeochemistry, which deals with the amount, distribution, and migration of chemical elements\n(and their isotopes) contained in minerals, rocks and soils in materials from the Earth and other\nplanetary bodies. Microtectonics (PASSCHIER; TROUW, 2005) concerns the interpretation\nof geometries of solid-state deformation in rock thin sections, in order to reconstruct their tec-\ntonic evolution. It is also related to Structural Geology. Structural Geology is the study of the\nthree-dimensional distribution of rock units with respect to their deformational histories.\n\nDiagenesis comprises a broad spectrum of physical, chemical and biological post-depositional\nprocesses, by which original sedimentary assemblages and their pore waters react at low temper-\natures (below 200 degrees Celsius) by attempting to reach textural and geochemical equilibrium\nwith their environment. These processes are continually active as the environment evolves in\nterms of temperature pressure and chemistry during the deposition burial and uplift cycles of\nsedimentary basin.\n\nThe terms defining texture, composition of minerals and fluids, their paragenetic sequence,\nporosity, and diagenetic processes are fundamental for the diagenesis community. The compo-\nsition of rocks corresponds to a set of detrital constituents, diagenetic constituents and pores.\nDetrital and Diagenetic constituent are composed of minerals. A mineral (KLEIN, 2002) is a\nnaturally occurring substance with a highly ordered atomic arrangement and a definite chemical\ncomposition. Most minerals are naturally formed by inorganic process. Minerals are most com-\nmonly classified on the basis of the presence of their major chemical component into oxides,\n\n\n\n74\n\nFigure 5.1: Diagenesis Processes\n\nSource: Adapted from Press et al. (2006)\n\nsulfides, silicates, carbonates, phosphates, and so forth. Grains (PASSCHIER; TROUW, 2005)\nare volumes of crystalline material separated from other grains of the same or other minerals\nby a definite boundary. Grains can be subdivided into Monominerallic grains, Rock Fragments\nand Intrabasinal constituents, such as Bioclasts. Bioclasts are fragmented or full skeletal rem-\nnants(fossils) of an organism preserved since some time in the geologic past. Rock Fragments\nconsist of polymineralic or polygranular grains that are particles eroded from igneous, sedi-\nmentary, or metamorphic rocks. Pores (NICHOLS, 2009) correspond to the volume between or\nwithin grains that is void. Pores may be connected through pore throats forming a pore system.\nThe porosity of a rock is the proportion of its volume that is not occupied by solid material but\nis instead filled with a gas or liquid. A paragenetic sequence (WORDEN; BURLEY, 2009) is\nthe interpreted order in which diagenetic processes occurred during rock formation.\n\nThe diagenetic processes are the physical and chemical changes that alter the characteris-\ntics of sediments after deposition. Those processes are compaction, cementation, dissolution,\nrecrystallization and replacement. The effect of compaction in a clastic rock is determined\nby looking at the nature of the grain contacts (see Figure 5.2 ). Contacts can be point, long,\nconcavo-convex and sutured. In the cementation process, it occurs the nucleation and growth\nof crystals within pore spaces in sediments. Chemical compaction involves the dissolution of\ngrains by pressure dissolution along grain contacts. Recrystallization is the formation in situ of\nnew crystal while retaining the same mineral composition. Replacement refers to the process\nwhereby one mineral dissolves and another is precipitated in its place essentially simultane-\nously. These process are important to be modeled, however, in this work we aim to deal only\nwith concepts of endurants(UFO-A) and then not with events.\n\n\n\n75\n\nFigure 5.2: Types of grain contacts\n\nSource: Press et al. (2006)\n\nMicrostructures (PRIOR; RUTTER; TATHAM, 2011) play a key role in studies of the de-\nformations caused by differential stresses that affected rocks. Microstructures are characterized\nmainly based on careful observation of fabrics in order to understand the sequence of events\nthat affected the rock. The main objective of microstructural analysis is therefore to unravel the\nrelation between deformation and diagenesis events that have affected the texture and structures\nof a sedimentary rock, and their effects on porosity and permeability.\n\nA structure (SNOKE; TULLIS; TODD, 1998) is understood as the arrangement of the parts\nof a rock mass irrespective of scale, including spatial relationships between the parts, their rela-\ntive size and shape and the internal features of the parts. A deformational structure is a disorder\nin the arrangement of the parts. The effects of the deformation process over sedimentary rocks\nare deformational structures and deformation zones. The terms deformation band, fault, joint,\nvein, stylolite, breccia, deformation zone, fault rock are fundamental for the microstructure\ncommunity.\n\nDeformational Processes are classified as brittle deformation and ductile deformation. Brit-\ntle deformation occurs when a rock breaks. Ductile deformation occurs when rocks bend or\nflow. As a result of Brittle deformation, fractures and fault zones occur. A fracture is a planar\ndiscontinuity usually involving some dilation, including cracks, joints (large cracks) and faults.\nFractures are easy to recognize by their sharp, narrow and usually straight nature and by the\ndisplacement of markers. A joint is a plane surface of fracture or parting in a rock, without dis-\nplacement. A fault is a shear fracture. Normal Fault, reverse fault, strike-slip fault (FOSSEN,\n2010) are types of faults.\n\nDeformation zones are portions of rock bodies that have suffered deformation. The defor-\nmation zones can be further divided into fracture zones and shear zones. A fault zone is a type\nof fracture zone. Deformation bands(PASSCHIER; TROUW, 2005) are brittle fault zones that\n\n\n\n76\n\ndevelop very close to the Earth\u2019s surface in poorly or even unconsolidated porous sediment.\nThey can be divided into disaggregation band, phyllosilicate band, dissolution band, cataclas-\ntic band, and dilatation band. A fault zone has three components: fault core, damage zone\nand protolith. In coherent sandstones, fault cores (LAUBACH et al., 2014) are usually narrow\n(less than 1 meter), consisting of low-porosity highly deformed materials. Damage zone (FOS-\nSEN, 2010) is the volume of deformed rocks that results from initial process zone development\nand subsequent slip surface initiation, propagation, and linkage or interaction in the fault zone.\nProtolith corresponds to the original undeformed rock.\n\nDuring dilatation, structures such as veins, strain shadows, fringes and microboudins can\nbe formed. ((PASSCHIER; TROUW, 2005)). Veins are subplanar concentrations of minerals\nthat have precipitated from solution along fracture. When a vein lies at a high angle relative to\ntheir opening direction it is called an extension vein or tension gash, and when it lies at small\nangle, it is called a shear vein. A Strain shadow is when the dilatation site happens flanking\nrigid objects. A Strain fringe is a type of strain shadow containing fibrous material precipitated\nadjacent to a stiff or rigid object. A jog is a step in a planar structure such as a fault.\n\nFolds occurs as a result of ductile deformation. Folds (HUDLESTON; TREAGUS, 2010)\nare geological structures that are seen in layered rocks in many different scales. Folds are\nclassified as anticlinal and synclinal. Fault rocks are volumes of rocks delimited by shear zones\n(SIBSON, 1977).\n\nBrittle fault rocks can be subdivided into incohesive and cohesive types. Incohesive brittle\nfault rocks can be subdivided into incohesive breccia, incohesive cataclasite and fault gouge.\nClay smear is clay-rich fault gouge formed in sedimentary sequences containing clay-rich layers\nwhich are strongly deformed and sheared into the fault gouge. Incohesive cataclasite can be\nsubdivided into ultraclasite,mesocataclasite and protocataclasite. Cohesive fault rocks can be\nsubdivided into cohesive breccia, cohesive cataclasite and pseudotachylyte. Mylonite is a fault\nrock which is cohesive and characterized by a well developed schistosity resulting from tectonic\nreduction of grain size. Mylonites may be subdivided according to the relative proportion of\nfiner-grained matrix into protomylonite, mesomylonite and ultramylonite.\n\nMicrofractures (BLENKINSOP, 2000) can be sub-divided into microfaults and microcracks.\nMicrocracks are planar discontinuities at the grain scale or smaller, commonly with some di-\nlation but with negligible displacement. Microcracks can be classified as intragranular (within\nsingle grains), transgranular (across two or more grains) and circumgranular or along grains\nboundaries. Microfaults are shear microfractures that contain grain fragments formed by cata-\nclasis. Microfractures are called intragranular if they affect only single grains, and intergranular\nif they affect two or more grains.\n\nWithin those other types of structure deformation we found microkinks, deformation lamel-\nlae, and deformation twin. Microkinks occur as small isolated structures in quartz and feldspars.\nDeformation lamellae are particularly common in quartz, where they usually have a sub-basal\norientation. Deformation twin occurs common in deformed carbonates and plagioclase feldspar.\n\n\n\n77\n\nIn the next section, we describe the domain ontology of our case study developed for en-\nhancing and improving the PetroQueryr system.\n\n5.2 Domain Ontology of Case Study\n\nThe PetroQueryr (described in section 2.5) system was initially designed for the purpose\nof consultation of petrographic features of siliciclastic rocks. But the software evolution has ex-\npanded the scope of the knowledge-domain and increased the number of terms accessed by the\ninterface. In our work, we started with the well-established ontology of Petroledger for sedi-\nmentary rocks (described in appendix A) and then we introduced the concepts of microstructural\ndomain. After interviews, ontological analysis of ontology of Petroledger and literature review\nof the concepts that are found in the petrography description, we obtain a well founded ontology\nvalidated with OLED 1.\n\nFor testing purpose, we studied the terminology of diagenesis and microstructure commu-\nnities. The ontology presented in our work was done based in UFO-A. Therefore, we used\nOntoUML(Ontological Unified Modeling Language) as language modeling. It is important to\nmention that OntoUML does no contain the primitives to model UFO-B(perdurants), thus, we\ndo not model the events involved in the area of diagenesis neither microstructural.\n\nThe current work started with the model established in (ABEL, 2001) and the set of terms in\nthe Petroledge database. Based on these structure, we modified and expanded with other terms\nextracted from different geology bibliographic sources ((TEIXEIRA et al., 2008), (NICHOLS,\n2009), (WORDEN; BURLEY, 2009), (LAUBACH et al., 2010), (FETTER; ROS; BRUHN,\n2009), (TORABI; FOSSEN, 2009), (FISHER; KNIPE, 1998), (DEHLER et al., 2009)), wikipedia2.\nMostly of terms were verified with an expert through interviews to verify the consistency of each\nterm metatype. Thus, we present the definitions and ontological analysis of the main terms and\nthe general taxonomy of each of them.\n\nThe diagenesis ontology (see Figure 5.3) contains the following main concepts basin, bio-\nconstructor, matrix, grain, mineral, pore, fluid, cement, rock sample, paragenesis.\n\nBasin is an area where sediments have been deposited. Ontologically, it has its own identity\nand it is rigid for all the worlds. The basin is localized in a Country, which its meta-type is a\nKind because country implies a region and it obeys the counting principle and it is rigid.\n\nMineral is a crystalline natural substance represented by a chemical formula. Chemical\ncomposition and crystalline structure give the identity criteria to each mineral. It is not count-\nable, which means that lack of unity. Thus, its meta-type is a quantity. In Figure 5.4, we observe\nthe principle taxonomy of minerals following their identity criteria. The main mineral families\nare carbonates, oxides, sulfides, phosphates, vanadates, halides, sulfates, hydroxides, and the\nmost abundant, silicates, which contains five main sub families: tectosilicate, sheet silicate\n\n1https://code.google.com/p/ontouml-lightweight-editor/\n2http://www.wikipedia.org/\n\n\n\n78\n\nFigure 5.3: Diagenesis Ontology\n\nSource: The authors\n\n\n\n79\n\nFigure 5.4: Mineral taxonomy\n\nSource: The authors\n\n(also called phyllosilicate), chainsilicate, sorosilicate and orthosilicate.\n\nGrain is a 3D spatial region that limits a specific mineral. In the same way that a cattail\nlimits the wood in the space , a Grain is related with Mineral with the relation of constitution\nand they are collocated in the space. Thus, Grain\u2019s meta-type is kind. Grains are further divided\ninto Monominerallic grains (constituted by a single mineral), Rock Fragments and Intrabasinal\ngrains (see Figure 5.5), which include Bioclasts, intraclasts, ooids, peloids. A Bioclast is a\ngrain that contains whole or broken pieces of the hard parts of organisms. Most organisms use\ncalcium carbonate minerals to construct their hard parts. Its meta-type is a subkind. Carbonatic\nbioclast, phosphatic bioclast are subtypes of Bioclast. They inherit its ontological properties.\nForaminifer bioclast, Algae bioclast,Coral bioclast are subtypes of carbonatic bioclast. They\ninherit its ontological properties. Rock Fragment is made up of multiple grains that are con-\nnected on the grain scale. It is a subtype of grain and inherits its ontological meta-properties.\nIn the literature, its synonym is lithic fragment. Sedimentary Rock Fragment, Metamorphic\nRock Fragment, Plutonic Rock Fragment and Volcanic Rock Fragment are subtypes of Rock\nFragment. They inherit its ontological properties. Grains have the attribute of grain shape.\n\nThe Framework of sedimentary rocks is formed by grains and minerals that support the\nrock. A framework can stop being considered a framework because the rock is broken, but\nthe concrete entities that were before a framework (grain and mineral) is still there. Thus,\nframework will subsume grain and mineral, which are rigids, we suggest modeling as category.\n\nBioconstructor are marine organisms, such as encrusting calcareous algae, that form part of\n\n\n\n80\n\nFigure 5.5: Grain taxonomy\n\nSource: The authors\n\n\n\n81\n\nbiogenic rocks. Thus, bioconstructor represents an essential property of marine organisms and\nit is rigid because it is broken it continue being a bioconstructor. Therefore, its metatype is a\ncategory.\n\nMatrix is the finer grained mass of material in which larger grains, crystals or clasts are\nembedded. In the same way, framework can cease to exist when a rock is broken, a matrix\nsuffers the same phenomenon. Thus, its metatype is category.\n\nCement is a mineral originated filling a pore. The term cement is anti-rigid. Thus, we\nsuggest modeling as a role of mineral and with Filling as a relator that mediates between cement\nand pore. PseudoMatrix is a fine-grained material placed among the grains as result of the\nextreme deformation of some grains through compaction. In the same way that a matrix can\ncease to exist, a pseudo matrix can also cease to exist when a rock is broken. We suggest\nmodeling pseudomatrix as category.\n\nConstituent defines the instances of pore, mineral, diagenetic and detrital constituent that\nconstitute the rock. It subsumes detrital constituent, diagenetic constituent and pore. It has as\nan attribute the modifier, which represents the modifications that the constituent suffered. The\nmodifier is inherent to the constituent, its metatype is quality. Constituent\u2019s taxonomy can be\nseen in Figure 5.3. Detrital constituent\u2019s meta-type is a Category because it groups the detri-\ntal characteristic of grain, bioconstructor,framework and matrix, which are rigids. Diagenetic\nconstituent\u2019s metatype is a Mixin because subsumes concepts whose meta-types are role and\ncategory. It is constituted by mineral. It subsumes pseudomatrix and cement. Diagenetic con-\nstituents have their habits as attribute. Habits refers to how crystals are organized in diagenetic\nconstituent. Thus it is a characteristic inherent to the diagenetic constituent having as metatype\nquality. The quality domain of habit is composed of: acicular, blocky, booklet, botryoidal,\nfibrous, cubic, drusiform, felted, hopper, lamellar, fascicular, vermicule, meniscus, ingrowth,\noutgrowth, poikilotopic and pendular.\n\nRock is defined by its internal petrological properties: chemical and mineral composition,\ntexture, porosity, density, permeability. It can not be individualized and does not obey the\ncounting principle inferring that rock\u2019s meta-type is a quantity. Rock has the following at-\ntributes texture, fabric, structure, porosity, density and permeability. The quality domain of\ntexture is composed of grain size, crystal size, crystallinity, sphericity, roundness, sorting. The\nquality domain of fabric is composed of orientation, support, packing. Roundness is a charac-\nteristic inherent of the grains. Its metatype is a quality. The quality domain is composed of well\ngrounded, rounded, subrounded, subangular, angular, very angular.\n\nSedimentary Rock is a type of rock. As a consequence Sedimentary Rock is an specialization\nof quantity, called subquantity. In the OLED tool this subquantity is modeled through a subkind.\nWe should not confuse that subkind is only use for specifying a subtype of kind. We can model\nan object with subkind metatype where the entity that gives identity is a substance sortal. The\nrock hierarchy is composed of sedimentary rock,igneous rock (see Figure 5.6) and metamorphic\nrock (see Figure 5.7). Sedimentary Rock can be subdivided into extrabasinal rock, intrabasinal\n\n\n\n82\n\nFigure 5.6: Igneous Rock taxonomy\n\nSource: The authors\n\nrock and volcanoclastic rock . Intrabasinal rock can be further divided into phosphatic rock,\ncarbonate rock , evaporitic rock, ferriferous rock, siliceous rock. Intrabasinal rocks are also\ncalled organic chemical rocks. Limestone and dolstone are subtypes of Carbonate rock(see\nFigure 5.9).\n\nIgneous rock can be subdivided into volcanic rock,plutonic rock. Schist,marble, gneiss,\nslate, quarzite,phyllite are subtypes of metamorphic rock. They inherit metamorphic rock onto-\nlogical meta-properties.\n\nPore system is composed of pores and pore throats. It has its own identity but it can not\nbe countable. Thus, its meta-type is quantity. Pore is a discrete space within the rock fabric.\nAlthough pores may be considered as discrete entities, pore systems are continuous spaces. Due\nto the definition of discrete, we can identify a pore. Also, it has not relational dependency, so we\ncan assume that its meta-type is a kind. Pore throat are the connections between pores. A Pore\nthroat is countable and it has its own identity. Intergranular pore, interparticle pore, cavern\npore, vug pore, moldic pore,fracture pore are subtypes of Pore and inherit its ontological meta-\nproperties. Figure 5.8 illustrates some subtypes of Pore. The pores contain fluid such as liquid\nand gaseous, hydrocarbons, water and air. Its meta-type is quantity. We will only adopt the\nterm Hydrocarbon Fluid in the model. Oil, Gas and Condensate are subtypes of Hydrocarbon\nfluid and inherit its ontological properties, such as being uncountable.\n\nRock Sample is the central concept that involves the petrographic study. The identity criteria\n\n\n\n83\n\nFigure 5.7: Metamorphic Rock taxonomy\n\nSource: The authors\n\n\n\n84\n\nFigure 5.8: Partial Pore taxonomy\n\nSource: The authors\n\nFigure 5.9: Carbonate Rock taxonomy\n\nSource: The authors\n\n\n\n85\n\nFigure 5.10: Rock taxonomy for the Microstructural Community\n\nSource: The authors\n\nof a rock sample includes its topological whole and physical body. The rock sample can be\nfurther divided in rock thin section, well core sample and outcrop sample. Rock Sample is rigid\nin all the possible worlds. Its meta-type is kind and the meta-type of their sub types are subkind.\n\nThe term Crystal, similar to grain, delimits in the space the mineral because the arrangement\nof the mineral form a crystalline structure. It can be individually visualized. This concept is\nthe constituent of igneous, metamorphic, and carbonate rocks. Crystal can be further divided in\nPhenocryst and Xenocryst. Phenocrysts usually formed earlier in the crystallization sequence\nof a magma, however, they can also form by later hydrothermal growth or diagenesis process.\nCrystal size is a property of crystalline rocks, such as some carbonatic (e.g dolostone), evaporitic\nand siliceous rocks where it is used as quality of the texture domain.\n\nParagenetic sequence is the result spatial relationship among the grains that reflects the\ntemporal order in which diagenetic process occurred. Thus, we modeled it as the paragenetic\nrelation between constituents, which the endurant results of the perdurant diagenetic processes.\n\nThe core microstructural ontology is composed of three main taxonomies, which are the\nunit rock taxonomy, deformation zone taxonomy and intracrystalline deformation structure.\n\nRock Body is a term, which meta-type is a kind, because it represents a whole delimited by\nour mind, it has its own identity and is constituted by rock. Rock body is composed of Rock\nUnit, which meta-type is kind. Its taxonomy is illustrated in Figure 5.10.\n\nFault Rock is a specialization of Rock and inherits its ontological metaproperties. Fault\nrock has as subtypes mylonite, stripped gneiss and brittle fault rock. These subtypes inherit\n\n\n\n86\n\nFigure 5.11: Fracture Zone taxonomy\n\nSource: The authors\n\nthe ontological meta-properties of Fault rock. Mylonite can be further subdivided into ultramy-\nlonite, mesomylonite, protomylonite. Those concepts inherit the ontological meta-properties of\nMylonite. According to the literature, brittle fault rock can be further subdivided in incohesive\nfault rock and cohesive fault rock, but also there is another classification that groups some of the\nsubtypes of incohesive fault rock and cohesive fault rock, being breccia and cataclasite. These\nterms\u2019 meta-types are subkinds. Incohesive breccia,incohesive cataclasite and fault gouge are\nsubtypes of incohesive fault rock and inherits its ontological meta-properties. Cohesive breccia,\ncohesive cataclasite and pseudotachylyte are subtypes of cohesive fault rock and they inherit its\nontological meta-properties.\n\nIncohesive cataclasite can be divided in ultraclasite, mesocataclasite, protoclasite. These\nconcepts inherit the ontological metaproperties of Incohesive cataclasite.\n\nClay smear is clay-rich fault gouge. It is a subtype of Fault Gouge and inherits its ontologi-\ncal meta-properties. The same analysis is done for shale smear.\n\nDeformation zone is considered as kind because is a portion of rock body and this portion\noffers its own identity and counting principles. The relation between these two concepts is\ncomponent-Of. Deformation zone is further divided in fracture zone and shear zone. Its tax-\nonomy is illustrated in Figure 5.11. Fault zone is a subtype of fracture zone. Deformational\nband is a subtype of brittle fault zone, and inherits its ontological properties. Its meta-type is\nsubkind. Fault zone is composed of protolith, fault core and damage zone. Damage zone is\na volume of deformed rock and it can be delimited by its boundaries. It has its own identity.\nThus, its meta-type is kind. Protolith\u2019s meta-type is a quantity because of its definition of being\nunmetamorphosed rock. In the literature, it is not considered as a type of rock, however it has\nthe behavior of substance.\n\nSedimentary Facies constitute a functional complex that is composed of other functional\ncomplexes. (CARBONERA, 2012) modeled an ontology detailing the taxonomy of deposi-\n\n\n\n87\n\nFigure 5.12: Deformation Structure taxonomy\n\nSource: The authors\n\ntional structure and established the relation of component-Of with Sedimentary Facies having\nthe characteristic that the relation was inseparable-part. He gave the metatype of Category\nto depositional structure because it contains all types of specific depositional structures. The\nsame analysis can be done for deformation structure. Deformation structure is the category of\nfold, fracture, vein, fringe, strain shadow, which are kinds because each of them represent a\nstructure generated by the effect of deformation process. Its taxonomy is illustrated in Figure\n5.12. Fault,joint and crack are subtypes of Fracture and inherit its ontological meta-properties.\nShear vein and extension vein are subtypes of vein and inherit its ontological meta-properties.\nSynclinal and anticlinal are subtypes of Fold and inherit its ontological meta-properties.\n\nFinally, Intracrystalline Deformation Structure is related to grains with a component-Of re-\nlation. Its taxonomy is seen in Figure 5.13. We applied the same analysis used for deformation\nstructure. Thus, intracrystalline deformation structure\u2019s meta-type is a kind. It is further subdi-\nvided into microfracture, microfold, microkink, deformation twin, deformation lamellae, which\nare subkind.\n\n\n\n88\n\nFigure 5.13: Intracrystalline Deformation Structure taxonomy\n\nSource: The authors\n\n\n\n89\n\n5.2.1 Discussion\n\nRock, mineral and fluid do not represent topology wholes. They need to be individuated\nby a second object that delimits their existence. A rock sample has instances, but these are\ninstances of the sample concept and not instances of the rock concept.\n\nIn the literature, there are different classifications of sedimentary rocks. Initially, we had\nused the term clastic rock as a subtype of extrabasinal rock. However, the usage\u2019s term also\nconsider vulcanoclastic rock. Thus, it will be better to change for siliciclastic rock which will\nbe the best term in this classification.\n\n\n\n90\n\n\n\n91\n\n6 ONTOLOGY VIEW: A PROPOSAL\n\nIn this chapter, we describe our approach for sub-ontology extraction that is agnostic with\nrespect to the language the ontology is represented in. Firstly, we shall provide some basic\ndefinitions in order to allow the understanding of our approach, including the formal charac-\nterization of an ontology. Then, we describe the minimal requirements that an ontologically\nwell-founded ontology view must meet and we describe the sub-ontology extraction algorithm.\n\n6.1 Well Founded Ontology View\n\nInitially, there is a necessity of downsizing the knowledge presented in a complete ontology.\nTherefore, an ontology subset should be extracted. But, this subset should be consistent and\nfulfill ontological requirements. Thus, for doing the extraction the input ontology should be\nwell founded. In the following section, our approach is described.\n\n6.1.1 Basic Definitions\n\nBefore describing our approach, we provide a formal description of a well-founded ontol-\nogy, which will be used in the context of this approach. Let Ob = (C, R) be a base ontology,\nwhere C = {c1, . . . , cn} is a set of concepts and R = {r1, . . . , rn} is a set of semantic relation-\nships (between concepts). Each ci ? C is a 3-tuple, such that, ci = (cn, def, cmt), where cn is\nthe concept name; def is the concept definition and cmt is the concept metatype. On the other\nhand, each ri ? R is a 5-tuple, such that ri = (rn, rmt, rmp, cs, ct), where rn is the relation\nname; rmt is the meta-type of the relation; rmp is the set of meta-properties of relation; cs ? C,\nis the concept that belongs to the domain of the relation (the source); and ct ? C, is the concept\nthat belongs to the range of the relation (the target).\n\n6.1.2 View\n\nFor the purpose of this dissertation, the ontology must be well-founded and complete. More-\nover, we define the minimal requirements that the ontology view should have and define the\nontology view approach.\n\nDefinition 1. A View is a tuple\n\nV0 = (id, D, L, Ob, Cv) (6.1)\n\nwhere id corresponds to the identifier of the view, D is the description of the view, L is the\n\nontology language used to implement, Ob is the initial ontology, Cv is the set of concepts that\n\nwere the starting points for building the view.\n\n\n\n92\n\n6.1.3 Conservation Principles\n\nOur notion of ontologically well-founded ontology view is defined considering certain prin-\nciples of conservation that we have proposed having in mind the meta-properties and postulates\ndefined in Guizzardi (2005). These principles of conservation define which properties must be\npreserved in a view for it being considered an ontologically well-founded ontology view. Thus,\nan ontologically well-founded ontology view, in our perspective, is a view that complies with\nall the principles of conservation that are described below.\n\nConservation of identity: The view v must conserve the principle of identity of every concept\nc that it includes. This means that if v includes a given concept c that does not provide\nits own principle of identity, then the view must include also all the supertypes of c from\nwhich c inhered its principle of identity, as well as, all the subsumption relations that are\nheld between these concepts. It is important to notice that, ultimately, the substance sortal\n(kind, quantity or collective) that provides the principle of identity to all its subclasses,\nincluding c, must be included in the view. For instance, if the target concept is zeolite\nin the example illustrated in Figure 6.1. The conservation of identity will search to the\nconcept that offers identity. In this case, the algorithm will traverse in a bottom-up way\nuntil mineral concept that is a quantity.\n\nConservation of the existential dependence: If a given concept c1 is included in the view v,\nand instances of c1 are existentially dependent on instances of c2, then must also be in-\ncluded in v, the concept c2 and the relation held between c1 and c2 that is necessary for\nthe conservation of the existential dependence. This involves the analysis of the part-of\nrelation that are essential or inseparable because they imply an existential dependence.\nFor instance, if the target concept is Unit Rock, the concept Rock Body should be in-\ncluded because Unit Rock existentially depends of it. Another case, if the target concept\nis Porosity, the concept Rock must be included because porosity is existentially dependent\nof Rock (see Figure 6.2).\n\nConservation of relational dependence: If a given concept c1 is included in the view v, and\nc1 is relationally dependent on a relation (materialized through a given relator) with the\nconcepts in {c2, ..., cn}, then must also be included in v: the relator r, all the concepts\nin {c2, ..., cn} and all relations that are held between the concepts in {c2, ..., cn}, r and\nc1 that are necessary for the conservation of the relational dependence. For instance, if\nthe target concept is Cement, the concepts pore and filling should be included in the view\nbecause a mineral is considered cement when mineral is filling pore. Thus, cement is\nrelational dependent of filling and pore (see Figure 6.3).\n\nBesides these conservations principles, we also adopt strategies that were adopted in other\napproaches, including the conservation of the taxonomy and the conservation of attributes.\n\n\n\n93\n\nFigure 6.1: Conservation of identity example\n\nFigure 6.2: Conservation of the existential dependence example\n\n\n\n94\n\nFigure 6.3: Conservation of relational dependence example\n\nFigure 6.4: Conservation of taxonomy\n\nConservation of taxonomy: If a view v includes the concept c1, it must also include all the\nconcepts that are subsumed by c1. For instance, if the target concept is Silicate Mineral,\nall the taxonomy concepts that it subsumes are included in the view (see Figure 6.4).\n\nConservation of attributes: If a view includes a given concept c1, every attribute1 of c1 also\nmust be included in v. For instance, if the target concept is Diagenetic Constituent, the\nconcept habit is included in the view because it is a quality of Diagenetic Constituent (see\nFigure 6.5).\n\nConservation of formally related concepts: If a view includes a given concept c1, every\nconcept that is related with c1 in a formal relation is added. This principle was adopted in\nNoy and Musen (2009). If the target concept is Unit Rock, the concept Rock is included\n\n1Adopting the UFO, attributes are considered Quality Universals\n\n\n\n95\n\nFigure 6.5: Conservation of attributes\n\nFigure 6.6: Conservation of formally related concepts example\n\nin the view because there is the formal relation constitute by between Unit Rock and Rock\n(see Figure 6.6).\n\nConservation of parts: If a view includes a given concept c1, all the concepts whose instances\nare parts of instances of c1 should be included. The part-of relations are also conserved\nin Bhatt et al. (2004a). However, if the instance of the concept c1 is a part of another\ninstance. Then, in this case is applied the conservation of the existential dependence. For\ninstance, if the target concept is Unit Rock, the concepts deformation zone and sedimen-\ntary facies are included in the view (see Figure 6.7).\n\n\n\n96\n\nFigure 6.7: Conservation of parts example\n\n6.2 Sub-Ontology Extraction Algorithm\n\nWe have presented some sub-extraction methods and their details earlier (Chapter 4). Now\nwe describe our algorithm for sub-ontology extraction. Before introducing the algorithm, we\ndefine some functions that will be used in the algorithm. The function\n\nRel : rMT \u00d7C \u00d7C ? R (6.2)\n\nmaps a relation metatype rmt ? rMT , the source concept cs ? C of a relation, the target\nconcept ct ? C of a relation to a given relation r ? R. For example,\n\nRel(subsumption, c, v)\n\nmaps to a relation r ? R where c is subsumed by concept v. On the other hand, the function\n\nmetaType : C ? cMT (6.3)\n\n. maps a given concept c1 ? C to its metatype cmt ? cMT , where cMT is a set of concept\nmetatypes cMT = {mt1, mt2, . . . , mtn}. For our approach, we are using the metatypes defined\nin UFO. Thus, cMT = {ROLE, MIXIN, . . .}, which were explained in Section 3. Finally,\nthe relation\n\nrelMP : rMT \u00d7 rMP \u00d7C \u00d7C ? R (6.4)\n\nmaps a relation metatype rmt ? rMT , a meta-property rmp ? rMP , the source concept\ncs ? C of a relation, the target concept ct ? C of a relation to a given relation r ? R. For\n\n\n\n97\n\nexample,\nrelMP(componentOf, essential, c, v)\n\nmaps to a relation r ? R where c is component of v. Notice that in addition to the relation\nmetatype it is also provided a relation meta-property. In this example, c is a essential component\nof v.\n\nThe algorithm that performs the sub-ontology extraction is denoted as SEL. The SEL algo-\nrithm (presented in Algorithm 2) is a recursive algorithm that receives as input the following\nparameters: the ontology base (Ob), a set of user required concepts (targets), a set of relations\n(relations), and the resulting extracted sub-ontology (So). At the beginning, relations and So\nare empty. The algorithm analyses each concept in targets. For each concept, the conservation\nprinciples are applied for ensuring that the result will be an ontologically well- founded ontol-\nogy view. The conservation principles are applied through the following functions: conserves-\nTAX, for conservation of taxonomy; conservesQUA for conservation of attributes; conservesIP,\nfor conservation of identity principle; conservesED for conservation of existential dependence;\nand conservesRD, for conservation of relational dependence. In the main loop, these functions\naccumulate concepts (in newC) and relations (in newR) that are necessary for ensuring the\ndefined principles for a given concept c in targetConcepts.\n\nAlgorithm 2 Sub-Ontology Extraction\nRequire: Well-Founded Ontology\n\n1: procedure SEL(Ob, targetConcepts, targetRelations, So)\n2: So.C ? So.C ? targetConcepts\n3: So.R ? So.R ? targetRelations\n4: newC ??\n5: newR ??\n6: for all c ? targetConcepts do // Apply the conservation principles\n7: conservesTAX(Ob, c, newC, newR) // Conservation of taxonomy\n8: conservesQUA(Ob, c, newC, newR) // Conservation of attributes\n9: conservesIP (Ob, c, newC, newR) // Conservation of identity\n\n10: conservesED(Ob, c, newC, newR) // Conservation of existential dependence\n11: conservesRD(Ob, c, newC, newR) // Conservation of relational dependence\n12: conservesFR(Ob, c, newC, newR) // Conservation of formally related concepts\n13: conservesPR(Ob, c, newC, newR) // Conservation of parts\n14: newC ? newC ?So.C\n15: newR ? newR ?So.R\n16: end for\n17: if newC 6= ? then\n18: SEL(Ob, newC, newR, So) // Call recursively\n19: else\n20: if newR 6= ? then\n21: So.R ? So.R ?newR\n22: end if\n23: end if\n24: end procedure\n\nThe function conservesTAX(algorithm 3) selects the concept taxonomies of a given concept.\nIt takes as parameters the ontology base Ob, a given concept c, and the set of new targets\n\n\n\n98\n\n(newC) and relations (newR) that will store all the concepts and relations that must be included.\nIntuitively, this function searches all the concepts that are subsumed by c and includes them in\nnewC. The subsumption relations that are held between these concepts are included in newR.\nThe same process is applied for conservesPR, which selects all the parts of a given concept. The\ndifference is that the algorithm analyses parthood relations instead of subsumption relations.\n\nAlgorithm 3 Conserve Taxonomy\n1: procedure CONSERVESTAX(Ob, c, newC, newR)\n2: for all v ? Ob.C|?r = Rel(subsumption, c, v) do\n3: newR ? newR ?r\n4: newC ? newC ?v\n5: conservesTAX(Ob, v, newC, newR)\n6: end for\n7: end procedure\n\nThe function conservesIP (algorithm 4) analyzes those concepts that do not provide their\nown principle of identity and searches for concepts that provide the principle of identity. It is\nused a path variable that is used by the function findIdentityProvider (algorithm 5). Essentially,\nthe algorithm traverses the taxonomy in a bottom-up way, trying to find the substance sortals\n(kind, quantity or collective) that provide the identity to a given concept c. When the algorithm\nfinds such concept, it is stored in the path and the algorithm halts returning true. If the algorithm\nfinds a dispersive universal (mixin, role mixin or category), this means that in this path there is\nno substance sortal. In this case, the algorithm halts, returning false. The algorithm includes\nall the concepts in the path between the concept c and its identity provider. The subsumption\nrelations are also included in the path. Finally, the concepts and relations in the path are included\nin the view.\n\nAlgorithm 4 Conserves Identity\n1: procedure CONSERVESIP(Ob, c, newC, newR)\n2: for all v ? Ob.C |?r =\n3: Rel(subsumption, c, v) do\n4: path.C ??\n5: path.R ??\n6: result ? findIdentityProvider(Ob, c, path)\n7: if result = True then\n8: newC ? newC ?path.C\n9: newR ? newR ?path.R\n\n10: end if\n11: end for\n12: end procedure\n\nThe function conservesQUA (algorithm 6), which conserves the concept attributes, iterates\nthrough the characterization relation with the concept c, including the respective quality uni-\nversals that characterizes c.\n\nThe function conservesED (algorithm 7) includes all the concepts from whose instances\nthe instances of quality universals, modes and relators are existentially dependent on. It is\n\n\n\n99\n\nAlgorithm 5 Find Identity Provider\n1: procedure FINDIDENTITYPROVIDER(Ob, c, path)\n2: if (metaType(c) ?{Subkind, Phase, Role}) then\n3: for all v ? Ob.C |?r = Rel(subsumption, v, c) do\n4: path.C ? path.C ?v\n5: path.R ? path.R ?r\n6: if metaType(v) ?{Kind, Quantity, Collective} then\n7: return true\n8: else\n9: return findIdentityProvider(Ob, v, path)\n\n10: end if\n11: end for\n12: else\n13: if metaType(c) ?{Relator, Mode, Quality} then\n14: if v ? Ob.C|?r = Rel(subsumption, c, v) then\n15: for all v ? Ob.C |?r = Rel(subsumption, c, v) do\n16: path.C ? path.C ?v\n17: path.R ? path.R ?r\n18: return findIdentityProvider(Ob, v, path)\n19: end for\n20: else\n21: return true\n22: end if\n23: end if\n24: end if\n25: return false\n26: end procedure\n\nAlgorithm 6 Conserves Qualities\n1: procedure CONSERVESQUA(Ob, c, newC, newR)\n2: for all v ? Ob.C|?r = Rel(characterization, c, v) do\n3: newC ? newC ?v\n4: newR ? newR ?r\n5: end for\n6: end procedure\n\n\n\n100\n\nalso defined the function findEssentialWhole (algorithm 8), which traverses the taxonomy in a\nbottom-up way, trying to find a substance sortal from which a concept is an inseparable part in\na parthood relation.\n\nAlgorithm 7 Conserve Existential Dependency\n1: procedure CONSERVESED(Ob, c, newC, newR)\n2: if metaType(c) ?{Relator, Mode, Quality} then\n3: if metaType(c) ?{Mode, Quality} then\n4: for all v ? Ob.C|?r = Rel(characterization, c, v) do\n5: newC ? newC ?v\n6: newR ? newR ?r\n7: end for\n8: else\n9: for all v ? Ob.C|?r = Rel(mediation, c, v) do\n\n10: newC ? newC ?v\n11: newR ? newR ?r\n12: end for\n13: end if\n14: else\n15: if v ? Ob.C |?r = RelMP (parthood, inseparablepart, c, v) then\n16: for all v ? Ob.C|?r = RelMP (parthood, inseparablepart, c, v) do\n17: path.C ? path.C ?v\n18: path.R ? path.R ?r\n19: end for\n20: else\n21: for all v ? Ob.C |?r = Rel(subsumption, c, v) do\n22: path.C ??\n23: path.R ??\n24: if findEssentialWhole(Ob, v, path) then\n25: newC ? newC ?path.C\n26: newR ? newR ?path.R\n27: end if\n28: end for\n29: end if\n30: end if\n31: end procedure\n\nThe function conservesRD (algorithm 9) includes all the concepts from which the roles and\nrole mixins are relational dependent on. Moreover, it includes the respective relations between\nthe concepts.\n\nThe function conservesFR (algorithm 10) includes the concepts that are related with formal\nrelations from which the target concept is the source of the relation.\n\nFurthermore, we present two variations of the basic approach 1. One variation consists in\ntaking just the taxonomy of the original target concepts. The function conserves the taxonomy\nis called once in order to extract only the target concepts taxonomy. We called this approach\nthe approach 2 (see algorithm 11). This algorithm calls the sub-ontology extraction target (see\nalgorithm 12). For instance in the example illustrated in figure 6.8 (a), if the target concept is\ngrain, the basic approach will include all those concepts. Thus, the second approach will ana-\nlyze only one time with the conservation of taxonomy and apply to those concepts surrounded\nby a circle in figure 6.8 (b) the other conservation principles. As result, the sub-ontology will\n\n\n\n101\n\nAlgorithm 8 Find Essential Whole\n1: procedure FINDESSENTIALWHOLE(Ob, c, path)\n2: if v ? Ob.C |?r =\n3: RelMP (parthood, inseparablepart, c, v) then\n4: for all v ? Ob.C|?r =\n5: RelMP (parthood, inseparablepart, c, v) do\n6: path.C ? path.C ?v\n7: path.R ? path.R ?r\n8: end for\n9: return : true\n\n10: else\n11: for all v ? Ob.C |?r = Rel(subsumption, c, v) do\n12: path.C ? path.C ?v\n13: path.R ? path.R ?r\n14: return : findEssentialWhole(Ob, v, path)\n15: end for\n16: end if\n17: return false\n18: end procedure\n\nAlgorithm 9 Conserve Relational Dependency\n1: procedure CONSERVESRD(Ob, c, newC, newR)\n2: if metatype(c) ?{Role, RoleMixin} then\n3: for all v ? Ob.C|?r = Rel(mediation, v, c) do\n4: newC ? newC ?v\n5: newR ? newR ?r\n6: end for\n7: for all v ? Ob.C|?r = Rel(material, c, v) do\n8: newC ? newC ?v\n9: newR ? newR ?r\n\n10: end for\n11: for all v ? Ob.C|?r = Rel(subsumption, c, v) do\n12: if metaType(v) = RoleMixin then\n13: newC ? newC ?v\n14: newR ? newR ?r\n15: conservesRD(Ob, v, newC, newR)\n16: end if\n17: end for\n18: end if\n19: end procedure\n\nAlgorithm 10 Conserve Formally related concepts\n1: procedure CONSERVESFR(Ob, c, newC, newR)\n2: for all v ? Ob.C|?r = Rel(formalAssociation, c, v) do\n3: newC ? newC ?v\n4: newR ? newR ?r\n5: end for\n6: end procedure\n\n\n\n102\n\nnot include the taxonomy of Mineral and Intracrystalline deformational structure depicted in\nfigure 6.8 (b).\n\nAlgorithm 11 Sub Ontology Extraction selecting just the taxonomy of the original target con-\ncepts\nRequire: Well-Founded Ontology\n\n1: procedure SELATARGET(Ob, targetConcepts, targetRelations, So)\n2: So.C ? So.C ? targetConcepts\n3: newC ??\n4: newR ??\n5: for all c ? targetConcepts do\n6: conservesTAX(Ob, c, newC, newR)\n7: end for\n8: newC ? newC ? targetConcepts\n9: newR ? newR ? targetRelations\n\n10: selversion2(Ob, newC, newR, So) // Call a variation of the sub-ontology extraction algorithm that not\ntakes conservation of taxonomy\n\n11: end procedure\n\nAlgorithm 12 Sub-Ontology Extraction Target\nRequire: Well-Founded Ontology\n\n1: // It is not called the function of conservation of taxonomy\n2: procedure SELVERSION2(Ob, targetConcepts, targetRelations, So)\n3: So.C ? So.C ? targetConcepts\n4: So.R ? So.R ? targetRelations\n5: newC ??\n6: newR ??\n7: for all c ? targetConcepts do\n8: conservesQUA(Ob, c, newC, newR)\n9: conservesIP (Ob, c, newC, newR)\n\n10: conservesED(Ob, c, newC, newR)\n11: conservesRD(Ob, c, newC, newR)\n12: conservesFR(Ob, c, newC, newR)\n13: conservesPR(Ob, c, newC, newR)\n14: newC ? newC ?So.C\n15: newR ? newR ?So.R\n16: end for\n17: if newC 6= ? then\n18: selversion2(Ob, newC, newR, So)\n19: else\n20: if newR 6= ? then\n21: So.R ? So.R ?newR\n22: end if\n23: end if\n24: end procedure\n\nThe second variation consists in not analyzing the elements obtained when it is performed\nthe Identity Provider function (algorithm 5). This means that the path obtained to find the\nidentity provider concept is not analyzed by the other conservation algorithms. We called this\napproach the approach 3 (see algorithm 13). For this purpose, we define two variables called\nnewCup and newRup, which will store the concepts and relations obtained from algorithm 5.\n\n\n\n103\n\nFigure 6.8: Approach 2 example\n\n(a) If it were applied the approach 1 in the target concept, the concepts colored in light blue are\nincluded in the view. (b) If were applied the approach 2.\n\n\n\n104\n\nFigure 6.9: Approach 3 example\n\n(a) If it were applied the approach 1 in the target concept, the concepts colored in light blue are\nincluded in the view. (b) If were applied the approach 3.\n\nFor instance, in the example illustrated in figure 6.9 (a), if the target concept is zeolite, the\napproach 1 will recover all the concepts colored. But, in approach 3, the concepts sheet silicate,\ncement, filling and pore will not be included in the view because those concepts are included as\na result of analyzing the path recovered by the conservation of identity. The result is depicted\nin figure 6.9 (b).\n\nThe application offers the flexibility of setting three parameters through the variables withP\n(with Partonomy), onlyR(only Rigid Taxonomy) and withFR (with formal relation). The on-\ntology engineer can specify if the desired subset should bring the partonomies or not, should\ninclude or not the concepts that are connected through the part-of relationship, the rigid tax-\nonomies or non rigid objects, and all formal relations. For instance, we illustrate the modifica-\ntion in the original approach in algorithm 14.\n\nIn order to provide the option of rigid taxonomy, we implement a variation of the conserva-\n\n\n\n105\n\nAlgorithm 13 Sub-Ontology Extraction Identity\nRequire: Well-Founded Ontology\n\n1: procedure SELAIDENTITY(Ob, targetConcepts, targetRelations, So)\n2: So.C ? So.C ? targetConcepts\n3: So.R ? So.R ? targetRelations\n4: newC ??\n5: newR ??\n6: newCup ?? // Store concepts of conservesIP\n7: newRup ?? // Store relations of conservesIP\n8: for all c ? targetConcepts do\n9: conservesTAX(Ob, c, newC, newR)\n\n10: conservesQUA(Ob, c, newC, newR)\n11: conservesIP (Ob, c, newCup, newRup)\n12: conservesED(Ob, c, newC, newR)\n13: conservesRD(Ob, c, newC, newR)\n14: conservesFR(Ob, c, newC, newR)\n15: conservesPR(Ob, c, newC, newR)\n16: newC ? newC ?So.C\n17: newR ? newR ?So.R\n18: newCup ? newCup?So.C\n19: newRup ? newRup?So.R\n20: end for\n21: if newCup 6= ? then\n22: So.C ? So.C ?newCup\n23: So.R ? So.R ?newRup\n24: end if\n25: if newC 6= ? then\n26: selAIdentity(Ob, newC, newR, So)\n27: else\n28: if newR 6= ? then\n29: So.R ? So.R ?newR\n30: end if\n31: end if\n32: end procedure\n\n\n\n106\n\nAlgorithm 14 Sub-Ontology Extraction\nRequire: Well-Founded Ontology\n\n1: procedure SELPARAMETERIZED(Ob, targetConcepts, targetRelations, So, withP, onlyR, withFR)\n2: So.C ? So.C ? targetConcepts\n3: So.R ? So.R ? targetRelations\n4: newC ??\n5: newR ??\n6: for all c ? targetConcepts do\n7: if onlyR then\n8: conservesTAXR(Ob, c, newC, newR)\n9: else\n\n10: conservesTAX(Ob, c, newC, newR)\n11: end if\n12: conservesQUA(Ob, c, newC, newR)\n13: conservesIP (Ob, c, newC, newR)\n14: conservesED(Ob, c, newC, newR)\n15: conservesRD(Ob, c, newC, newR)\n16: if withFR then\n17: conservesFR(Ob, c, newC, newR)\n18: end if\n19: if withP then\n20: conservesPR(Ob, c, newC, newR)\n21: end if\n22: newC ? newC ?So.C\n23: newR ? newR ?So.R\n24: end for\n25: if newC 6= ? then\n26: selParameterized(Ob, newC, newR, So, withP, onlyR, withFR)\n27: else\n28: if newR 6= ? then\n29: So.R ? So.R ?newR\n30: end if\n31: end if\n32: end procedure\n\n\n\n107\n\ntion taxonomy principle taking just the substance sortals, subkind and category (see algorithm\n15).\n\nAlgorithm 15 Conserve Taxonomy only Rigid\n1: procedure CONSERVESTAXR(Ob, c, newC, newR)\n2: for all v ? Ob.C|?r = Rel(subsumption, c, v) do\n3: if metaType(v) ?{SubKind, Collective, Kind, Quantity, Category} then\n4: newR ? newR ?r\n5: newC ? newC ?v\n6: conservesTAXR(Ob, v, newC, newR)\n7: end if\n8: end for\n9: end procedure\n\n\n\n108\n\n6.3 Summary\n\nIn this chapter, we present the notion of well-founded ontology view, its formalization, the\nconservation principles that the ontology view should preserve and our sub-ontology extraction\nalgorithm along with its two variants. Also, we provided an approach for obtaining an ontology\nview. Finally, we finalize the part-of relations under the conservation of existential dependence\nand conservation of parts, but from different perspectives. The first one is applied when the\ngiven concept is a part and the relation is analyzed if it contains the essential or inseparable\nmeta-properties. The other conservation principle is applied when the concept is a whole and\nall concept parts are recovered independently of the meta-properties of the relation.\n\n\n\n109\n\n7 ONTOLOGY VIEW BASED QUERY SYSTEM FOR RESERVOIR PETROGRA-\n\nPHY\n\nIn this chapter, we describe our proposal of RockQuery, a system that uses sub-ontology\nextraction method to guide the consultation and lets users to analyze data combining visual-\nization and rich user interaction. The ontology applied is described in section 5.2. In order\nto understand the requirements, we performed a previous study over PetroQueryr System\n(described in section 2.5). Based on this study and following the interaction design process,\ndifferent prototypes were proposed and tested with the user. The final prototype was evaluated\nby 5 participants in a controlled experimental study in order to find if the new interaction design\nwas relevant. Subjective feedback of RockQuery was very positive. In the following, OVUFO\nvisualizer is described.\n\n7.1 OVUFO Visualizer\n\nIn this section, we describe OVUFO (Ontology View for Unified Foundational Ontology)\nthe interface for visualizing the results of performing the sub-ontology extraction algorithm.\nOVUFO visualizer (see Figure 7.2) is a tool that allows an ontology engineer to extract well-\nfounded views of a big founded ontology modeled with UFO. The motivation of building this\ntool was to help the ontology engineer in the establishment of the initial ontology graph that\nwill appear in the interface when the user signs in. However, it can be used independently of\ndomain for modeling purpose.\n\nOVUFO module implements all the proposed theory incorporating the three approaches of\nthe sub-ontology extraction algorithm and offering more flexibility to the ontology engineer\nto parametrize the algorithm with the options of conserving partonomy, conserving only rigid\ntaxonomy and conserving formal relation. In this way, the ontology engineer will perceive what\nis the best subset generated for a posterior use.\n\nThe interface is designed to be simple to use. It consists of two panels. The visualization\npanel where is shown the ontology and the operation panel. User starts by opening a file that\ncontains the ontology. Since we work with foundational ontologies, we filter files exported by\nOLED, which are in the RefOntoUML format. After that, the user enters the target term, select\nthe approach and click in the Extract Sub-Ontology button. The tool converts the file into an\nontology graph, where nodes are concepts and edges are relations. Each of them has metadata\nthat are used in the sub-ontology extraction algorithms. The architecture of the tool is illustrated\nin Figure 7.1.\n\n\n\n110\n\nFigure 7.1: Architecture OVUFO Visualizer\n\n7.2 RockQuery Architecture\n\nThe visual query system RockQuery architecture (see Figure 7.3 ) is composed of a knowl-\nedge base, a relational database and Petroledger system. The knowledge base is materialized\nin the relational database. Petroledger system saves rock descriptions in the database. Rock-\nQuery uses OVUFO module to obtain a sub-ontology having as input a term entered by a user\nand the knowledge base, which contains the well founded ontology. Then, RockQuery queries\nto the database through the ontology graph, retrieving the data entered by Petroledger. Thus,\nthe ontology controls the query definition.\n\nThe sequence of activities that user performs to query data are depicted in Figure 7.4. User\nstarts entering a term. Then, RockQuery calls OVUFO module that will return the sub-ontology\nand the system will show it as graph. Moreover, user selects a node of the graph and RockQuery\nqueries the database passing as parameter the node selected. The query result is shown in a list\nbox of RockQuery. User refines its query selecting the instances that he wants and RockQuery\nshows the data visualization.\n\nIt is important to mention that OVUFO module is configured to run over the second ap-\nproach, which applies only one time the conservation of taxonomy, parametrized with the op-\ntion with Partonomy assigned with value true and the other two parameters in false. The reason\nof using second approach with this parameter combination is because in the sub-ontology evalu-\n\n\n\n111\n\nFigure 7.2: OVUFO Visualizer\n\n\n\n112\n\nFigure 7.3: RockQuery Architecture\n\n\n\n113\n\nFigure 7.4: RockQuery Activity Diagram\n\nation method performed over the literature of diagenesis community, explained in section 8.1.1,\nthe recall was the highest.\n\n7.3 Functional Requirements\n\nThe principal functional requirement identified was to get the right information by reducing\nthe quantity of terms and showing the principal concepts that users employ in their daily tasks.\nAlso, the importance of filtering support was raised from the empirical observation.\n\nAnother functional requirement was to integrate the data analysis area and the query area in\na single interface. Also, the necessity of other data visualizations rather than ternary and scatter\nplot was pointed out by users.\n\n7.4 RockQuery Functionalities Description\n\nThe interface consists of three main areas.\n\n\u2022 The Exploration panel (see Figure 7.5): is located on the left side of the interface. It\nprovides several means for the user to get acknowledge of the ontology.\n\n\u2022 The Processing panel (see Figure 7.6 ): provides the selection of the desired instances and\nif instances were numeric values, the user can perform operations over that.\n\n\u2022 The Analysis panel (see Figure 7.7 ): lets the user visualize the results using different\nkinds of graphs.\n\nWe describe these with more detail in the following subsections.\n\n\n\n114\n\nFigure 7.5: Exploration Panel\n\n7.4.1 Exploration Panel\n\nThe exploration panel(see Figure 7.5) consists of three widgets, which are a text box, an\nontology visualization widget and a recently Queries widget . A widget is any object in a\ngraphical user interface that displays information and/or allows the user to interact with an\napplication. The first one is a text box where the user can filter the term that he/she is searching.\nWhile the user is writing, there will be an auto-complete function that will suggest possible\nrelated terms. Then, the ontology visualization widget shows the ontology according to the\ninput terms enter in the text box offering the capabilities of zooming and panning. Finally, the\nRecently Queries widget shows queries saved by the user.\n\n7.4.2 Processing Panel\n\nThe processing panel (see Figure 7.6) consists of two sections, a filter text and a list box\nwhere it is shown the instances of the selected concept. User can select multiple instances, and\nwhile selection occurs, the query visualizer section is updating adding the instance to the tree\nbox. The user can also delete instances in tree box, and the tabular data shown in the analysis\npanel are updating.\n\n7.4.3 Analysis Panel\n\nAnalysis panel (see Figure 7.7) consists of two displays. One is the tabular display, and\nthe other is the data visualization. Both of them are fundamental to facilitate users in their\nanalysis and having them in the same interface is suitable. The quantitative relationship graphs\nthat should be implemented are the stacked bar and the datamap. This will help the geologist to\n\n\n\n115\n\nFigure 7.6: Processing Panel\n\nperceive the spatial data. We also included the ternary and scatter plot that PetroQueryr offers.\n\n7.4.4 Application of RockQuery in a case study\n\nIn order to evaluate the functionality of the Rockquery interface, this section will describe\na sequence of use of the interface through a real petrological case. The initial consultation\nis retrieving sample descriptions that include blocky dolomite. The user begins with the login\ndialog (see Figure 7.8) where he fills its user name and password. Then, the interface (see Figure\n7.9) shows a graph of concepts and relations (ontology) related to the community where the user\nbelongs. After viewing the graph and navigating through it, user can be aware of the concepts\nand formulate the query. The user selects on one of the nodes that represents the concept and\nthe system lists all instances in the right side. At the same time, the node is added to the query\nvisualizer. The interface allows to hide the panels in order to let more space for the navigation or\ndata visualization. The user can switch from the node inclusion panel to exploration panel as he\nwishes. The query formulation is an iterative process of selecting a concept and its respective\ninstance. This involves the use of the exploration and processing panel. The feature of text\nfilters in both panels helps in finding the desired term. At the end of the process, the user can\nsave its query.\n\nFollowing this workflow, our user can iteratively construct its query, refine it and visual-\nize the resulted data. The user\u2019s landscape of the areas related to sensemaking, following the\niterations, is shown in Figure 7.10.\n\n\n\n116\n\nFigure 7.7: Analysis Panel\n\nFigure 7.8: Login\n\n\n\n117\n\nFigure 7.9: Initial Interface after user logged in\n\n\n\n118\n\nFigure 7.10: Interaction\n\na)RockQuery\u2019s interface at start up, showing the ontology according to his community. b-\ne) First, user searches a concept in exploration panel and the ontology visualization changes\nperforming the sub-ontology extraction algorithm with the given concept as an input. User finds\nthe concept and selects it; the visualization change the color of the node selected and appears in\nthe processing panel the list of values of that concept. The system offers the capability to filters\nthe data. Through each iteration, the query visualizer is updated. At the same time, it appears\nthe tabular data with a respective data visualization in the analysis panel.\n\n\n\n119\n\nFigure 7.11: Autocomplete Screenshot\n\n7.5 Core Design Rationale\n\nBelow we discuss core factors that demonstrate RockQuery\u2019s contribution in supporting\nsensemaking. A key factor in the design of RockQuery was the ontology visualization, which\nguides the query formulation. Using the structure of the ontology, novel user can better ac-\nquire the model of the whole ontology by focusing in a specific part. Therefore, our algorithm\nis designed to split a well-founded ontology subset of the complete ontology to be visualized.\nThe system retrieves the professional user community and performs internally the sub-ontology\nextraction algorithm using the target taxonomy approach defined previously in chapter 6. Fur-\nthermore, the system autocompletes when user writes in the search area (see Figure 7.11).\n\nTypically, tabular data is used to present query results and the data analysis is performed in\na different interface. RockQuery\u2019s main difference is that in single interface, user can visualize\nthe tabular data and perceive its visualization. We take care in searching which visualizations\nwill be more pertinent for geologist users. Those data visualizations are ternary graph plot,\nscatter plot, stacked bar, data-map diagram and balloon diagram.\n\n7.6 Implementation and Development\n\nWe have adopted the interaction design process. We started with understanding and estab-\nlishing the requirements through a preliminary PetroQueryr study described in appendix A.\nThen, we design alternatives presented in appendix B. The final prototype is discussed in this\nchapter. We also describe the system implementation and the data persistence in the following\nsubsections. Finally, the evaluation is presented in subsection 8.2.\n\n\n\n120\n\n7.6.1 Data Persistence\n\nThe notion of view to be applied in our case study was conceived through the use of commu-\nnities. In the community table is established the main terms of the community that will be the\ninput to our algorithm. A user can belong to one or more communities. The terms established\nfor each community was obtained from the experts establishing from one to seven terms.\n\nFrom Petroledge database, we analyzed the tables that will be necessary for our case study.\nWe add the tables of community, community_user. In order to show the cognitive walkthrough\nof our proposed system, we implemented the store procedures for mapping the ontology con-\ncepts of basin, constituent and description.\n\n7.7 Rock Query Limitations\n\nRockQuery limitations are described according to its three main areas. In the analysis panel,\nthere is a lack of user customization for plotting data visualization. User needs to compare\nbetween different visualizations and RockQuery only plots one graphic. In the processing panel,\nthe query visualizer does not visualize the query in a specific query language such as SQL. The\nlist view shows the instances in descending order, but there is no capability of reorganizing this\nlist. In the case of the exploration panel, the ontology visualization does not offer the capability\nof folding nodes and coloring the paths when a node is selected. The visualization does not\ncontain symbols or icons related to the concept, which in other ontology visualizations enhance\nthe understandability. Also, RockQuery does not deal with synonyms. This means that a user\ncan enter a term that is not in the ontology, but it is a synonym of one of the ontological terms.\nThe query history shows the query names labeled by other users, but the query definition in\nterms of concepts and instances is not shown.\n\n7.8 Discussion\n\nThe limitations of Petroqueryr system identified in our study within the community of\nusers include: (1) difficulties in identifying extensions of entities that are collocated in the space,\nsuch as, sample (container) and rock (substance); (2) selection of entities and values from a long\nlist of terms, considering that part of the list is unfamiliar for the user; (3) difficulties in the data\nanalysis.\n\nThese limitations were solved in our interaction design by modeling the domain with a\nwell-founded ontology and using the sub-ontology extraction algorithm to show the user the\nconcepts that belongs to his community. Furthermore, the filtering feature reduce the search\nspace. Finally, the data analysis is improved with more data visualizations and all the user\ninteraction is center in a single interface.\n\n\n\n121\n\n8 EVALUATION OF RESULTS\n\nThis chapter describes the validation approach of the proposed algorithm and the prototype.\nThe effectiveness of the well-founded ontology view that is retrieved by the sub-ontology ex-\ntraction algorithm is measured through precision and recall. In order to test our approach, the\nanalysis of two communities (diagenesis and microstructural) was considered and the develop-\nment of well-founded ontology base. The well-founded ontology base is described in chapter\n5. The method developed for test our approach is described in the following section.\n\nMoreover, in the validation of the proposed prototype, we want to know whether it ade-\nquately supports users in their tasks and in the environment in which it is going to be used. In\naddition, functionality tests are needed to verify the robustness of the implementation. Also,\nthis chapter describes the validation approach of the proposed system and the experimentation\nfor identifying the limitations of our proposed environment. Also we discuss the domain on-\ntology used for our case study. We measure the amount of user satisfaction achieved by the\noutputs of each step in the query process. A major obstacle in this approach is that the notion\nof satisfiability is highly subjective, and hence difficult to approximately quantify through a\nsubjective judgment of users. The results are presented in section 8.2.\n\n8.1 Generated subset Evaluation\n\nIn the literature of ontology engineering, there is no consensual methodology for assess-\ning the quality of the ontology view. Thus, we designed our evaluation method based on an\ninformation retrieval metric. The quality of the sub-ontology extraction is measured by the\nsuitability of the generated subset. Thus, the generated subset evaluation consists of proving\nthat one Well-founded ontology view generated for a community A has greater f-measure than\nother well-founded ontology view generated for a community B, when the set of terms extracted\nare from community A. By proving this, we verify that our sub-ontology extraction algorithm\nextracts the terms required for user task at hand. In other words, a view generated for com-\nmunity X should fit better the community X rather than other community. We assumed that a\ncommunity conceptualization is materialized in the literature of this community. For instance,\nit is expected that scientific articles from Sedimentary Stratigraphy are marked by terms related\nto the Sedimentary Stratigraphy concepts. In this sense, the idea is to measure the fitness of\na generated view for a given community X verifying how much the ontology is fitted to the\nliterature of the community X. In this work, this fitness was measure through f-measure, which\nis a combination of two metrics broadly used in information retrieval precision and recall.\n\nThe more important IR metrics in our study are precision, recall and f-measure. Precision is\nthe fraction of retrieved instances that are relevant. Recall is the fraction of relevant instances\n\nthat are retrieved. The relevance is defined as how well information meets user tasks. Precision\nand recalled are calculated based on true positive (TP), false positive (FP) and false negative\n\n\n\n122\n\n(FN). Precision measures the ratio of correctly found correspondences (true positives) over the\ntotal number of returned correspondences (true positives and false positives). This is supposed\nto measure the correctness of the method. Recall also called true positive rate measures the\nproportion of actual positives(true positives) over the total number of expected correspondences\n(true positives and true negatives). This is a completeness measure. F-measure is the harmonic\nmean of precision and recall.\n\nIn our evaluation, the meaning of TP,FP and FN are those described below.\n\n\u2022 TP case was positive and predicted positive. In our evaluation, it is the intersection be-\ntween community terms and the generated subset terms.\n\n\u2022 FP case was negative but predicted positive. In our evaluation, it is the set difference of\nthe generated subset terms from the community terms.\n\n\u2022 FN case was positive and predicted negative. In our evaluation, it is the set difference of\ncommunity terms from the generated subset terms.\n\nThe precision, recall and f-measure in our evaluation method (see Figure 8.1) is defined as:\n\nDefinition 2. Given community terms CT , the precision of the subset generated ST is given by\n\nP(ST, CT) =\n|ST ?CT|\n|ST|\n\n(8.1)\n\nand recall is given by\n\nR(ST, CT) =\n|ST ?CT|\n|CT|\n\n(8.2)\n\nand F-measure is given by\n\nF(ST, CT) = 2?\nP(ST, CT)?R(ST, CT)\nP(ST, CT) + R(ST, CT)\n\n(8.3)\n\nwhere |A| indicates the cardinality of the set A.\n\nThe f-measure is employed to measure the suitability of the generated subset (ontology\nview). Thus, there are two ontology views O1 and O2 for representing community C1 and C2,\nrespectively. Then, it is considered two sets of terms S1 and S2, which corresponds to the sets\nof representative community terms of C1 and C2, respectively. It is expected that f-measure\nbetween O1 and S1 (F(O1, S1)) is greater than the f-measure between O2 and S1 (F(O2, S1)).\nIn the same way, it is expected that f-measure between O2 and S2 (F(O2, S2)) is greater than the\nf-measure (F(O1, S2)) between O1 and S2. In this work, we applied this evaluation approach\n(see Figure 8.2) considering two communities that are part of the broad geological community:\nthe community of diagenesis and the community of microstructural.\n\nIn order to obtain the set of representative community terms, we selected six papers about\ndiagenesis and six papers about microstructural. These sets of papers was selected according to\n\n\n\n123\n\nFigure 8.1: Precision and Recall\n\nST=Subset terms,CT=Community Terms\n\nSource: The authors\n\nthe recommendation made by experts, articles where experts where author and related journals\nwhere the expert has published. The selected articles for diagenesis community were (WOR-\nDEN; BURLEY, 2009), (HENARES et al., 2014), (CARPENTIER et al., 2014), (MANSURBEG\net al., 2012), (GIER et al., 2008) and (KIM; LEE; HISADA, 2007). The selected articles for the\nmicrostructural community were (FISHER; KNIPE, 1998), (BUATIER et al., 2012), (MOLLI et\nal., 2010), (HAERTEL; HERWEGH, 2014), (SCHUELLER et al., 2013) and (BAZALGETTE\net al., 2010).\n\nIn the next step, the terms extraction from the articles follows the sequence of steps defined\nin (ABEL, 2001):\n\n\u2022 Exclude all common words: prepositions, articles, adverbs and connection verbs.\n\n\u2022 Mark all geological terms specific of the domain in study including the terms formalized\nin the well-founded base ontology.\n\nFurthermore, this process was done manually to guarantee the quality of extraction. In the\nfirst step of this sequence, we also exclude the terms that were not exclusive of the diagenesis\nand microstructural domain. After the second step, we refine the set by excluding the common\nterms for both diagenesis and microstructural. The result was a list of geological terms by article\nstored in files labeled with A1, A2, A3, A4, A5, A6 for diagenesis articles and B1, B2, B3, B4,\nB5, B6 for microstructural articles. It was also generated two files AT and BT that contains\nall the terms extracted for diagenesis and microstructural, respectively. As a result we obtained\ngeological terms for diagenesis (DT) and for microstructural (MT).\n\nIn order to obtain well-founded ontology views, it was taken a well-founded base ontology\nthat covers the domain of diagenesis and microstructural developed by the group. Then, it is\napplied the sub-ontology extraction algorithm to generate a well-founded ontology view taking\n\n\n\n124\n\nas an input key terms established by a representative community expert. These key terms were\nselected from the base ontology. The terms detrital constituent, diagenetic constituent and\npore are the key concepts for diagenesis and the terms deformational band, fault, breccia and\nmicrofracture are key concepts for microstructural.\n\nThe result is an ontology view for diagenesis (DO) and ontology view for microstructural\n(MO) that, in our evaluation approach, are O1 and O2. Moreover, it is tested the parameters\nwith partonomy (wP) only rigid taxonomy (RT) and formal relation(FR) generating different\nvariations of DO and MO. Also, the three different approaches of the sub-ontology extraction\nalgorithm (approach 1, approach 2, and approach 3) are evaluated with the parameters combi-\nnation. Approach 1 consists in performing all the conservation principles. Approach 2 consists\nin performing only one time the conservation of taxonomy to the target concepts and with this\nresult, applying the other conservation principles. Approach 3 consists in not applying the other\nconservation principles to the result of the principle conservation of identity.\n\nThe next step in our evaluation approach is to compare the f-measure. As depicted in Fig-\nure 8.2, we should verify that f-measure (FDD = F(DO, DT)) between ontology view for\ndiagenesis (DO) and diagenesis geological terms (DT ) is greater than f-measure (FDM =\nF(MO, DT)) between ontology view for microstructural MO and diagenesis geological terms\nDT ; in the same way, it is expected that f-measure (FMM = F(MO, MT)) between MO and\nMT is greater than the f-measure (FMD = F(DO, MT)) between DO and MT.\n\nThe results of ontology view for diagenesis and ontology view for microstructural is de-\nscribed in the following subsections.\n\n8.1.1 Evaluation of the Ontology View for Diagenesis\n\nFor the approach 1, we obtained the following results. In the comparisons with the types\nwP, RT, wP-RT and without parameters (parameter with value false), the P, R, F for diagen-\nesis sub-ontology were greater than the obtained for microstructural sub-ontology. In the rest\nof comparisons with the other types, R, F for diagenesis sub-ontology were greater than the\nobtained for microstructural sub-ontology with the exception of file AT. In the case of preci-\nsion for diagenesis sub-ontology were less than the obtained for microstructural sub-ontology.\nHowever, this happens because those types employs the option FR. The reason is that the option\nFR (Formal relation) can take formal relations that are shared with other communities. Recall\nobtained for diagenesis sub-ontology with all the parameters combinations is always greater\nthan the obtained for microstructural sub-ontology. This means that the sub-ontology generated\nin the approach 1 for diagenesis community contains more relevant terms than the obtained for\nmicrostructural community. In general, approach 1 results satisfy the fitness of the ontology\nview for each single file. But in the summarized file AT, only the types wP, FR, RT, wP-RT\nand without parameters (parameter with value false) satisfies the fitness of the sub-ontology\n(ontology view). The results for the approach 1 are presented in Table C.1.\n\n\n\n125\n\nFigure 8.2: Evaluation Method\n\nFDD=F(DT, DO), FDM=F(DT, MO),FMD=F(DO, MT),FMM=F(MO, MT)\nF=F-measure, D=Diagenesis, M=Microstructural, T=Terms, O=Ontology\n\nSource: The authors\n\n\n\n126\n\nFor the approach 2, for all eight comparisons the P, R, F for diagenesis sub-ontology were\ngreater than the obtained for microstructural sub-ontology. This occurs because when it is\napplied the principle of taxonomy just once to the target concept, and them analyze with the\nother conservation principles, the subset obtained is going to depend on the input terms to the\nalgorithm. If these input terms are the key terms of the community, the percentages will be\ngreater. In general, approach 2 results satisfy the fitness of the sub-ontology for all set of\nrepresentative terms given in this case study. The results for the approach 2 are presented in\nTable C.2.\n\nFor the approach 3, the results are similar to the approach 2. The P, R, F for diagenesis\nsub-ontology were greater than the obtained for microstructural sub-ontology. However, the\ndifference between f-measures is not as greater as in approach 2 in the types FR, RT-FR, wP-\nFR,wP-RT-FR. This happens because it was applied the option FR. As in approach 1, types\nwith the option FR can take formal relations are shared with other communities. In general,\napproach 3 results satisfy the fitness of the sub-ontology for all set of representative terms. The\nresults for identity approach are presented in Table C.3.\n\n8.1.2 Evaluation of the Ontology View for Microstructural\n\nFor the approach 1, we obtain the following results(see Table C.4). In the comparisons with\nthe types wP, FR, RT-FR,wP-FR, wP-RT-FR and without parameters (parameter with value\nfalse), the P, R, F for microstructural sub-ontology were greater or equal than the obtained for\ndiagenesis sub-ontology. However, the comparison in the type RT and wP-RT, the P, R, F for\nmicrostructural sub-ontology were less or equal than the obtained for diagenesis sub-ontology\nin the files B1 and B2. The recall was low in all the results. In general, approach 1 results\nsatisfy the fitness of the sub-ontology for all set of representative terms given in this case study.\n\nFor the approach 2, results are presented in Table C.5. The comparisons showed that the\napproach 2 satisfies the fitness of the sub-ontology. However, the precision in all types for\nmicrostructural sub-ontology were less or equal than the obtained for diagenesis sub-ontologyin\nfiles B1 and B2. The recall increases in comparison with the approach 1 and approach 3.\n\nFor the approach 3, results are presented in Table C.6. The comparisons demonstrated\nthe fitness of sub-ontology with five exceptions where the f-measure for microstructural sub-\nontology that was less or equal than the obtained for diagenesis sub-ontology in the types wP,\nRT, wP-RT and without parameters (parameter with value false) in files B2 and BT. Also the\ncomparison in the same types showed that precision for microstructural sub-ontology that was\nless than the obtained for diagenesis sub-ontology in files B1, B2 and BT.\n\n\n\n127\n\n8.1.3 Summary of results\n\nIn the following, we present the proportions of precision, recall, f-measure between the\nontology view for diagenesis and the ontology view for microstructural that summarize the\nresults obtained from the evaluation. The expected value of the proportions should be greater\nthan one. This means that the ontology view generated for that community fits community\nconceptualization materialized in the literature.\n\nThe table 8.1 shows the results of proportion of diagenesis over microstructural applied in\nthe file AT. The values should be greater than one in order to satisfy the evaluation approach.\nHowever, approach 1 does not satisfy this condition in the types RT-FR, wP-FR and wP-RT-FR.\nApproach 2 obtains better results in precision, recall and f-measure.\n\nIn the case of precision, the use of parameter FR (formal relation) in approach 1 produces\nbad results because this option brings concepts that will belong to microstructural commu-\nnity. But in all the approaches with the different combination of parameters, the proportion of\nrecall of the sub-ontology generated for diagenesis is greater than one that means that the sub-\nontology contains relevant terms for the query. The table 8.2 shows the results of proportion of\nmicrostructural over diagenesis applied in the file BT. All the approaches satisfy the condition\nof evaluation approach. In comparison with table 8.1, the values are lower. This means that\nwere few relevant terms retrieved by the different approaches. Furthermore, in approach 2, the\nprecision of microstructural sub-ontology was less than diagenesis sub-ontology. This occurs\nbecause articles of microstructural community contain terms related with diagenesis and when\napproach 2 is applied, only concepts of microstructural community are recovered. Thus, the\nprecision is lower when there is significantly portion of concepts of diagenesis community. A\nsimilar situation happens in approach 3, the proportion of precision is lower than 1. This occurs\nbecause the algorithm will recover concepts that belong only to microstructural community.\nBut the articles contains significantly quantity of terms of diagenesis community causing that\nthe precision of microstructural sub-ontology was less than diagenesis sub-ontology. However,\nwhen the algorithm is applied using the parameter of FR (formal relation), the proportion of\nprecision is greater than 1. This means that the algorithm recovers concepts that belong to\ndiagenesis community increasing the precision. Approach 1 obtains for every proportion of\nprecision values greater than 1 because this approach recovers the maximum quantity of terms\nof three variants containing in the set. Finally, the recall for all the approaches with the differ-\nent combinations obtain values greater than 1. This occurs because the generated sub-ontology\ncontains great quantity of relevant terms.\n\nIn comparison with table 8.1, a better recall was obtained. Thus, depending of the context\nand application of the geology articles, the taxonomy approach will be the best option. Results\nover other domains will change depending of the granularity of concepts and relations that exist\nin the ontology.\n\nIn certain cases, the expected result was not obtained because, even if they belong to a\n\n\n\n128\n\nTable 8.1: Proportion D/M over file AT\n\nType Measure Approach 1 Approach 2 Approach 3\nP 1.57 22.00 8.80\nR 1.55 3.88 3.88\nF 1.61 9.25 5.29\n\nwP\nP 1.57 22.00 8.80\nR 1.53 4.43 3.63\nF 1.52 9.00 5.00\n\nFR\nP 0.70 15.67 1.14\nR 1.22 3.20 1.38\nF 1.03 7.60 1.29\n\nRT\nP 1.69 22.00 8.80\nR 1.24 1.94 2.82\nF 1.48 9.25 5.29\n\nwP-RT\nP 1.69 22.00 8.80\nR 1.21 2.21 2.64\nF 1.40 9.00 5.00\n\nRT-FR\nP 0.71 15.67 1.39\nR 1.06 1.68 1.38\nF 0.93 7.60 1.43\n\nwP-FR\nP 0.69 15.67 1.14\nR 1.15 3.56 1.29\nF 0.97 7.60 1.23\n\nwP-RT-FR\nP 0.71 15.67 1.39\nR 1.03 1.88 1.29\nF 0.90 7.60 1.36\n\nSource: The authors\n\njournal of a specific community, some articles used terms from the other community to describe\nspecific situations. The average of terms per articles were of 60 terms for diagenesis articles\nand 24 terms for microstructural articles.\n\nIn addition, we observed that when the approach 2 is applied the rate of recall increases\nin comparison with the other approaches. This means that approach 2 recovers more relevant\nterms. Also, we observed that when the parameter formal relation has the value of true, the\nprecision increases and the recall decreases. In general the precision of our ontology is of 56 %\nfor diagenesis community and 40 % for microstructural community.\n\n\n\n129\n\nTable 8.2: Proportion M/D over file BT\n\nType Measure Approach 1 Approach 2 Approach 3\nP 1.67 0.75 0.83\nR 1.62 3.38 1.77\nF 1.75 1.56 1.31\n\nwP\nP 1.59 0.84 0.74\nR 1.69 3.69 1.77\nF 1.67 1.71 1.17\n\nFR\nP 2.56 0.72 1.64\nR 1.50 3.15 1.42\nF 1.65 1.47 1.41\n\nRT\nP 1.04 0.54 0.58\nR 1.38 5.23 1.77\nF 1.31 1.38 1.13\n\nwP-RT\nP 1.04 0.64 0.52\nR 1.54 5.62 1.77\nF 1.28 1.59 1.00\n\nRT-FR\nP 1.92 0.52 1.36\nR 1.33 4.77 1.42\nF 1.41 1.29 1.35\n\nwP-FR\nP 2.39 0.81 1.46\nR 1.46 3.46 1.31\nF 1.61 1.56 1.33\n\nwP-RT-FR\nP 1.86 0.62 1.21\nR 1.31 5.15 1.31\nF 1.39 1.44 1.28\n\nSource: The authors\n\n8.2 RockQuery System Evaluation\n\nWe follow the Goal Question Metric (GQM) (BASILI; CALDIERA; ROMBACH, 1994)\napproach to measure the quality of our system. Our usability evaluation of RockQuery system\nconsists of a questionnaire where we evaluate interaction, interface, usefulness and graph ex-\nploration. The questions are oriented to measure look and feel, interface layout, ease of use and\nflexibility, respectively. Those questions are:\n\nQ1 Does the RockQuery enhance the interaction in the consultation process?\n\nQ2 How satisfied are you with the new interface?\n\nQ3 How likely are you in using RockQuery?\n\n\n\n130\n\nQ4 Does graph-based exploration help you understand the data structure for formulating your\nqueries?\n\nEach question has a set of answers that follows the Likert scale, with values from one to\nthree. The meaning of the response scale varies according to the question, as presented in Table\n8.3. For instance, the question Q1 with an answer Not helpful will have a value of one, question\nQ2 with an answer Neutral will have a value of two, question Q3 with an answer Frequently\nwill have a value of three.\n\nTable 8.3: Meaning of the response scale varies according to the question.\n\nQuestion\nAnswers\n\n1 2 3\nQ1 Not helpful Neutral It improves the interaction\nQ2 Unsatisfied Neutral Satisfied\nQ3 Never Sometimes Frequently\nQ4 No Neutral Yes\n\nSource: The authors\n\nWe evaluated five users. User1 U1 and user2 U2 are master\u2019s students in Geology, one is\nspecialized in carbonate rocks and the other is specialized in siliciclastic rocks. User3 U3 and\nuser4 U4 are experts in sedimentology and diagenesis, respectively. The last user U5 is expert\nin stratigraphy. U1 and U2 use frequently Petroledge and Petroquery, an average of six and two\nhours per day, respectively. U3 uses Petroledge one hour and PetroQueryr two hours per day.\nU4 uses Petroledge one hour and PetroQueryr ten minutes per day. U5 uses Petroledge two\nhours and PetroQueryr thirty minutes. U1 and U2 are 22 years old and they can be considered\nnormal expert users. U3 has 44 years old and U4 has 57 years old; and both of them are experts\nin the domain, however, U4 is not a normal user of PetroQueryr because he does not use\nfrequently. U5 has 43 years old and can be considered a soft user, not an expert in the domain\nof diagenesis. In summary, they are all petroleum geologists who have different ages and levels\nof experience and work focus. All of them have previous experience in using PetroQueryr.\nThe majority of them have basic notion in computer science. U3, U4 and U5 have notions of\nontology. Table 8.4 illustrates the user characterization described above.\n\nIn our evaluation procedure, firstly, the users use the RockQuery for performing some\nqueries. After, the users experience was measured through a questionnaire. The following\nqueries were used in the test:\n\n\u2022 P1. Select the Espirito Santo basin\n\n\u2022 P2. Select the thin sections with the constituents\u2019 quartz, zeolite and sillimanite, which\nare localized in the framework or in burrow pore.\n\n\n\n131\n\nTable 8.4: Users Characterization\n\nAge Expert Specialization\nPetroledge\n\nUsage\n(Hours per day)\n\nPetroQueryr\nUsage\n\n(Hours per day)\nOntology\nNotion\n\nSex\n\nU1 22 No Geologist 6 4 No M\nU2 22 No Geologist 6 4 No M\nU3 44 Yes Sedimentology 1 2 Yes F\nU4 57 Yes Diagenesis 1 0.01 Yes M\nU5 43 Yes Stratigraphy 2 2 Yes F\n\nSource: The authors\n\n\u2022 P3. Select the diagenetic constituents with blocky habit\n\nThe purpose of applying these queries was to evaluate the interaction of the users with\nthe tool in a task of query formulation, where the user had to select a different number of\nconcepts with its instances. For instance, in query P1 the user is asked to select one concept\nand one instance. Here the user should use the filter area, because the concept basin has many\ninstances. In the query P2, the user need to select one concept (constituent) related with another\n(pore). In the query P3, it is tested in the user is able to select one attribute (blocky habit) of a\nconcept (constituent). The usefulness and the interface are measured through simple questions\npresented to the user after their experiences with the RockQuery, asking how they feel about\nthe experiences with the tool and if they liked to use it.\n\nAccording to the evaluation test, users find the concept and perform the query in a minor\ntime that using the whole ontology. However, the visualization of the ontology does not facili-\ntate the choice of the relationship when it relates the same concept. For instance, all users could\nnot perform the question P2 because the statement contains the relationship localized in and\nthis relation in the layout (see Figure 8.3) was difficult to select.\n\nFigure 8.3: Problem Detected in Graph Layout\n\nSource: The authors\n\nFurthermore, most of the users reported that the question P2 was not easy to formulate\nbecause the relations in framework or filling burrow pore are instances of locatedIn relation,\n\n\n\n132\n\nwhich in the ontology visualization is not clearly visible. The other questions were answered\nwithout problems.\n\nAccording to the majority of users, the ontology could help for novice users, but it makes\nslower the process for advanced users, because they already know the hierarchy. U1 made the\nfollowing observation: ... the use of the ontology is not clear for me, I prefer to use lists to select\nthe concepts.... U2 points out that ...the ontology contains the principal taxonomy, however, it\ncould be reduced to show just the leaf nodes. Almost for me that I am advanced user, I know\n\nthat hierarchy... . As U1, U2 is used to deal with lists and also points out that ...maybe the use\nof tree table view will be better... . U3 mentions that ...the use of shortcuts in some interactions\nwill be better than the use of mouse. U3 and U5 likes the ontology as an innovation to perform\nthe query. Furthermore, U4 mentions that ... the use of filters helps in the formulation of the\nquery, but the ontology graph confuses me. I prefer the use of lists. Finally, all users note the\nimportance of having an analysis section in the same interface.\n\nThus, the evaluation suggests the necessity of an alternative to the graph visualization widget\nfor displaying the ontology or more visualization operations that will help to interact with the\ngraph like folding and expanding the node. As a future work, we will experiment the use of our\napproach with a tree table view in the exploration panel.\n\nQuestionnaire results (see Figure 8.4) show that RockQuery enhances the user interaction\nreceiving the majority of points in the scale. Users liked the new interface prototype, but are\nneutral to use our system because of the graph visualization plugin. The graph-based explo-\nration should be improved with a tree table view and with a better graph layout. Other types of\nusability evaluation were not applied due to the lack of users availability.\n\nFigure 8.4: Questionnaire Results using the Likert scale\n\nFrom 1-5 user are not agree with the question, 6-10 user are neutral,11-15 user agree with the\nquestion\n\nSource: The authors\n\n\n\n133\n\nFinally, we present a comparison table of our system (see Table 8.5) and some visual query\nsystems (PetroQueryr, VisualSPEED, Graphical RQL and Optique ) over terminologies or\nontologies described in section 2.5. The criteria contains the following items:\n\n\u2022 Result visualization: Evaluates if the interface has a section for data visualization. This\nmeans different diagrams that help user to understand the data.\n\n\u2022 Query History: Evaluates if the interface has a section for query history. It is common in\nsearch interface to have a query history because it helps users to reuse a previous query.\n\n\u2022 Ontology visualization: Evaluates if the interface has a section for the ontology visualiza-\ntion. An ontology visualization will help in the exploration and navigation of concepts to\nformulate the query.\n\n\u2022 Text Filter: Evaluates if the interface has text filters. Text filters are important in search\ninterface. It is the widget where the user informs a keyword for searching it within a list\nof terms.\n\n\u2022 Query Visualizer: Evaluates if the interface has a section to visualize the query formula-\ntion.\n\n\u2022 Knowledge Adaptation: Evaluates if the system allows presenting in the interface with\nonly the amount of information that is necessary for the task at hand.\n\n\u2022 Codification: Evaluates if the interface has a section where the user enters his query using\nany syntax of a query language.\n\nThe results shown that RockQuery is the only one that contains a section for data visualiza-\ntion in a single interface. The other systems provide in a separate interface. Also, our system\nand PetroQueryr have query history feature that the other VQSs not have. RockQuery and\nVisualSPEED are the VQSs that offer a panel for ontology visualization. VisualSPEED\u2019s visu-\nalization use icons in the representation of concepts. Optique uses filters for searching concepts\nand attributes. RockQuery uses filters to either navigate the ontology in the exploration panel;\nor to filter the terms in the processing panel. Moreover, no VQS tries to adapt the information\nshown in the interface to the user requirements. That is, if the ontology has a huge amount of\nterms, the interface will list all of them. But, RockQuery try to adapt the information applying\nthe sub-ontology extraction algorithm having as input the key terms of the community where\nuser belongs. Optique and VisualSPEED offer the capacity to codify the query in SPARQL. In\nsummary, our system can be improved by using icons in the concepts. As future work, our sys-\ntem should let advanced users to codify its query. VisualSPEED, Graphical RQL and Optique\nconsult over semantic web data stored in a RDF or OWL database. RockQuery and PetroQuey\nconsult over relational data controlled by an ontology.\n\n\n\n134\n\nTable 8.5: Comparison of four Visual Query Systems.\n\nCriteria PetroQueryr VisualSPEED Graphical RQL Optique RockQuery\nResult\n\nvisualization\nNo No No No Yes\n\nQuery\nhistory\n\nYes No No No Yes\n\nOntology\nvisualization\n\nNo Yes No No Yes\n\nText\nFilters\n\nNo No No Yes Yes\n\nQuery\nvisualizer\n\nYes Yes Yes Yes Yes\n\nCodification No Yes No Yes No\nKnowledge\nadaptation\n\nNo No No No Yes\n\nSource: The authors\n\n\n\n135\n\n9 CONCLUSION &amp; FUTURE DIRECTIONS\n\nIn this chapter, we summarize the contributions of this dissertation, and concentrate on the\nvarious possible future directions, given the research material presented in the previous chapters.\n\n9.1 Novel Contributions of the Dissertation\n\nIn recent years the development of ontologies has been moving from the realm of Artificial-\nIntelligence laboratories to the desktops of domain experts. Ontologies have become important\nto guide the development of knowledge-based systems for a decade by now and currently these\napplications are achieving their maturity. During this period, the ontology evolves, incorpo-\nrating new knowledge that is necessary for some of the users. However, sometimes this new\nknowledge is not fully acknowledged by other users of the application. Thus, the application\nshould provide some capability of reorganizing the knowledge, partitioning the set of concepts\nin smaller portions according to the user previous knowledge and the task at hand. Moreover,\nthe size and complexity of ontology represent a challenge in retrieving information. Finding a\nportion of interest that can be used as a virtual substitute for a whole ontology for guiding the\nconsultation is highly desired objective, because it reduces the complexity in the user interac-\ntion. This dissertation advocates for the use of ontology views to enhance the query formulation\nin visual query systems. We claim that, by combining ontology views with Human Computer\nInteraction (HCI) techniques, the applications can provide a better user interaction in the query\nand analysis of data.\n\nThe main principal contribution of our work are the formalization of well-founded ontology\nview, the conservation principles, and the different algorithms that satisfied the conservation\nprinciples. Also, this research has resulted in a visual tool that helps ontology engineer to\nperform ontology view extraction. We summarize our contributions:\n\n\u2022 We proposed the notion of well-founded ontology view.\n\n\u2022 We proposed a set of conservation principles that an ontology view should follow for\nbeing considered a well founded ontology view. These conservation principles were spec-\nified considering the postulates and ontology meta-properties provided by UFO (Unified\nfoundational ontology).\n\n\u2022 We have developed a visual tool that helps the ontology engineer to perform ontology\nview extraction.\n\n\u2022 We have developed a new sub-ontology extraction algorithm based in the Unified Foun-\ndational Ontology meta-properties.\n\n\u2022 We have created an ontology for the domain of petrography, covering the concepts of\ndiagenesis and microstructural community.\n\n\n\n136\n\n\u2022 We analyzed a visual query system PetroQueryr in the domain of Petrography, identi-\nfying user interaction problems that can be enhanced by using our novel approach. We\npresent different prototypes and implement RockQuery, a system that uses the idea of\nwell-founded view and the algorithm of sub-ontology extraction and combines with data\nvisualizations and HCI techniques.\n\n9.2 Future Research Directions\n\nAs a future work, we intend to improve the set of conservation principles focusing in quality\nuniversals and developing a new set of sub-ontology extraction algorithms to deal with events.\nAs a consequence, the sub-extraction algorithm will generate well-founded views not only for\nendurant universals, but also for perdurant universals. Regarding the interaction design, we can\nuse the query log to enhance the visualization by using the node size as the number of term\nusage in the query log.\n\nFurthermore, systems evolve over time, being extended, combined, and integrated. A core\nmodel for knowledge representation needs to support system evolution by being extensible to-\nwards new developments and functional requirements that arise. Thus, our approach can be\nused for enhancing the interactive ontology evolution process (STOJANOVIC, 2004). Ontol-\nogy evolution involves challenging tasks. For instance, reduce, increase, or update concepts in\nan ontology could generate inconsistencies with other parts of the ontology. Our approach of\nsub-ontologies extraction is capable of identifying all the universals that are intrinsically or im-\nportantly related with a specific concept, according to ontological meta-properties. From these\ntwo premises, we consider that the ontology view approach can identify a critic region of an\nontology (critical sub-ontology) that can suffer inconsistencies in the case of modification in a\nspecific concept. In other words, the use of ontology views will help to reduce the search space\nof concepts that will suffer collateral effects in an event of concept changing.\n\n\n\n137\n\nREFERENCES\n\nABEL, M. Study of Expertise in Sedimentary Petrography and their importance for Knowledge\nEngineering. 239 p. Thesis (PhD) \u2014 Federal University of Rio Grande do Sul, Porto Alegre,\n2001.\n\nABEL, M. et al. Lithologic logs in the tablet through ontology-based facies description.\nAmerican Association of Petroleum Geologists, USA, 2012.\n\nALENCAR, A. L. de; SALGADO, A. C. A visual query interface for ontology-based peer data\nmanagement systems. Brazilian Simposium of Information Systems, Minas Gerais, 2013.\n\nALEXAKI, S. et al. Managing rdf metadata for community webs. In: WORKSHOPS ON\nCONCEPTUAL MODELING APPROACHES FOR E-BUSINESS AND THE WORLD\nWIDE WEB AND CONCEPTUAL MODELING: CONCEPTUAL MODELING FOR\nE-BUSINESS AND THE WEB, 2000, Salt Lake City, Utah, USA. Proceedings... London,\nUK, UK: Springer-Verlag, 2000. p. 140\u2013151.\n\nATHANASIS, N.; CHRISTOPHIDES, V.; KOTZINOS, D. Generating on the fly queries\nfor the semantic web: The ics-forth graphical rql interface (grql). In: MCILRAITH, S.;\nPLEXOUSAKIS, D.; HARMELEN, F. van (Ed.). The Semantic Web \u2013 ISWC 2004. [S.l.]:\nSpringer Berlin Heidelberg, 2004. v. 3298, p. 486\u2013501.\n\nBAADER, F. et al. The Description Logic Handbook: Theory, Implementation, and\nApplications. New York, NY, USA: Cambridge University Press, 2003.\n\nBAO, J.; CARAGEA, D.; HONAVAR, V. G. Modular ontologies a formal investigation of\nsemantics and expressivity. In: FIRST ASIAN CONFERENCE ON THE SEMANTIC WEB,\n2006, Beijing, China. Proceedings... Berlin, Heidelberg: Springer-Verlag, 2006. p. 616\u2013631.\n\nBASILI, V. R.; CALDIERA, G.; ROMBACH, H. D. The goal question metric approach. In:\nEncyclopedia of Software Engineering. [S.l.]: Wiley, 1994.\n\nBASILI, V. R.; SELBY, R. W.; HUTCHENS, D. H. Experimentation in software engineering.\nIEEE Trans. Softw. Eng., IEEE Press, Piscataway, NJ, USA, v. 12, n. 7, p. 733\u2013743, jul. 1986.\n\nBAZALGETTE, L. et al. Aspects and origins of fractured dip-domain boundaries in folded\ncarbonate rocks. Journal of Structural Geology, Amsterdam, Netherlands, v. 32, n. 4, p. 523 \u2013\n536, April 2010.\n\nBEDERSON, B. B. Interfaces for staying in the flow. Ubiquity, ACM, New York, NY, USA,\nv. 2004, n. September, p. 1\u20131, sep. 2004.\n\nBENEVIDES, A. et al. Assessing modal aspects of ontouml conceptual models in alloy.\nIn: HEUSER, C.; PERNUL, G. (Ed.). Advances in Conceptual Modeling - Challenging\nPerspectives. [S.l.]: Springer Berlin Heidelberg, 2009. v. 5833, p. 55\u201364.\n\nBERCOVICI, N. Ontology customization and module creation: query-based customization\noperators and model. [S.l.], 2008.\n\nBHATT, M. et al. A distributed approach to sub-ontology extraction. In: ADVANCED\nINFORMATION NETWORKING AND APPLICATIONS, 2004, Fukuoka, Japan.\nProceedings... [S.l.], 2004. v. 1, p. 636\u2013641.\n\n\n\n138\n\nBHATT, M. et al. Semantic completeness in sub-ontology extraction using distributed methods.\nIn: LAGANA, A. et al. (Ed.). Computational Science and Its Applications ICCSA 2004. [S.l.]:\nSpringer Berlin Heidelberg, 2004, (Lecture Notes in Computer Science, v. 3045). p. 508\u2013517.\n\nBLENKINSOP, T. Deformation Microstructures and Mechanisms in Minerals and Rocks.\n[S.l.]: Springer Netherlands, 2000.\n\nBORST, W. N. Construction of Engineering Ontologies for Knowledge Sharing and Reuse.\n243 p. Thesis (PhD) \u2014 University of Twente, Netherlands, 1997.\n\nBOZSAK, E. et al. Kaon towards a large scale semantic web. In: BAUKNECHT, K.; TJOA,\nA.; QUIRCHMAYR, G. (Ed.). E-Commerce and Web Technologies. [S.l.]: Springer Berlin\nHeidelberg, 2002. v. 2455, p. 304\u2013313.\n\nBUATIER, M. et al. Origin and behavior of clay minerals in the bogd fault gouge, mongolia.\nJournal of Structural Geology, Amsterdam, Netherlands, v. 34, n. 0, p. 77 \u2013 90, 2012.\n\nBUXTON, B. Sketching User Experiences: Getting the Design Right and the Right Design:\nGetting the Design Right and the Right Design. [S.l.]: Elsevier Science, 2010. (Interactive\nTechnologies).\n\nCARBONERA, J. Reasoning over Visual Knowledge: An study in Sedimentary Stratigraphy.\nDissertation (Master) \u2014 Federal University of Rio Grande do Sul, 2012.\n\nCARD, S.; MACKINLAY, J.; SHNEIDERMAN, B. Readings in Information Visualization:\nUsing Vision to Think. [S.l.]: Morgan Kaufmann Publishers, 1999. (Interactive Technologies\nSeries).\n\nCARPENTIER, C. et al. Impact of basin burial and exhumation on jurassic carbonates\ndiagenesis on both sides of a thick clay barrier (paris basin, {NE} france). Marine and\nPetroleum Geology, Amsterdam, Netherlands, v. 53, p. 44 \u2013 70, 2014.\n\nCASTRO, E. et al. Petroquery: a tool for consultation and navigation over ontology. Regional\nSchool of Database, Porto Alegre, 2005.\n\nCATARCI, T. et al. Visual query systems for databases: A survey. Journal of Visual Languages\n&amp; Computing, Amsterdam, Netherlands, v. 8, n. 2, p. 215 \u2013 260, 1997.\n\nCHIN, J. P.; DIEHL, V. A.; NORMAN, K. L. Development of an instrument measuring user\nsatisfaction of the human-computer interface. In: SIGCHI CONFERENCE ON HUMAN\nFACTORS IN COMPUTING SYSTEMS, 1988, Washington, D.C., USA. Proceedings... New\nYork, NY, USA: ACM, 1988. (CHI \u201988), p. 213\u2013218.\n\nCSIKSZENTMIHALYI, M. Flow. [S.l.]: HarperCollins, 2009.\n\nD\u2019AQUIN, M.; SABOU, M.; MOTTA, E. Modularization: a key for the dynamic selection of\nrelevant knowledge components. In: ISWC, 2006, Athens, Georgia, USA. 1st International\nWorkshop on Modular Ontologies, WoMO\u201906. [S.l.], 2006.\n\nDAVIS, F. D. Perceived usefulness, perceived ease of use, and user acceptance of information\ntechnology. MIS Q., Society for Information Management and The Management Information\nSystems Research Center, Minneapolis, MN, USA, v. 13, n. 3, p. 319\u2013340, sep. 1989.\n\n\n\n139\n\nDEGEN, W. et al. Gol: Toward an axiomatized upper-level ontology. In: INTERNATIONAL\nCONFERENCE ON FORMAL ONTOLOGY IN INFORMATION SYSTEMS, 2001, New\nYork, NY, USA. Proceedings... New York, NY, USA: ACM, 2001. (FOIS \u201901), p. 34\u201346.\n\nDEHLER, N. et al. Structural analysis of a core on fractured carbonate reservoir, brazil:\nImplications for exploration and reservoir modeling. Journal for E&amp;P Geoscientists,\nAmsterdam, Netherlands, 2009.\n\nD\u2019ENTREMONT, T.; STOREY, M. Using a degree of interest model to facilitate ontology\nnavigation. In: VISUAL LANGUAGES AND HUMAN-CENTRIC COMPUTING, 2009,\nOregon,USA. Proceedings... [S.l.], 2009. p. 127\u2013131.\n\nDERVIN, B. An Overview of Sense-making Research: Concepts, Methods, and Results to\nDate. [S.l.]: The Author, 1983. (Sense-making packet).\n\nDORAN, P. Ontology Modularization: Principles and Practice. 150 p. Thesis (PhD) \u2014\nUniversity of Liverpool, United Kingdom, 2009.\n\nDORAN, P.; TAMMA, V.; IANNONE, L. Ontology module extraction for ontology reuse:\nAn ontology engineering perspective. In: ACM CONFERENCE ON CONFERENCE\nON INFORMATION AND KNOWLEDGE MANAGEMENT, 2007, Lisbon, Portugal.\nProceedings... New York, NY, USA: ACM, 2007. (CIKM \u201907), p. 61\u201370.\n\nFALCO, R. et al. Modelling owl ontologies with graffoo. In: ESWC, 2014, Creete, Greece.\nProceedings... [S.l.], 2014.\n\nFETTER, M.; ROS, L. F. D.; BRUHN, C. H. Petrographic and seismic evidence for the\ndepositional setting of giant turbidite reservoirs and the paleogeographic evolution of campos\nbasin, offshore brazil. Marine and Petroleum Geology, Amsterdam, Netherlands, v. 26, n. 6, p.\n824 \u2013 853, 2009.\n\nFEW, S. Information Dashboard Design: The Effective Visual Communication of Data. [S.l.]:\nO\u2019Reilly Media, Incorporated, 2006. (O\u2019Reilly Series).\n\nFEW, S. Data Sensemaking: An interaction of Eyes and Mind. 2013.\n\nFISHER, Q. J.; KNIPE, R. J. Fault sealing processes in siliciclastic sediments. Geological\nSociety, London, London, v. 147, n. 1, p. 117\u2013134, 1998.\n\nFLAHIVE, A. et al. Ontology expansion: appending with extracted sub-ontology. Logic\nJournal of IGPL, Oxford,UK, v. 19, n. 5, p. 618\u2013647, 2011.\n\nFOSSEN, H. Structural Geology. [S.l.]: Cambridge University Press, 2010.\n\nGANGEMI, A. et al. Sweetening ontologies with dolce. In: INTERNATIONAL CONFER-\nENCE ON KNOWLEDGE ENGINEERING AND KNOWLEDGE MANAGEMENT, 2002,\nLondon, UK, UK. Proceedings ... London, UK, UK: Springer-Verlag, 2002. (EKAW \u201902), p.\n166\u2013181.\n\nGIER, S. et al. Diagenesis and reservoir quality of miocene sandstones in the vienna basin,\naustria. Marine and Petroleum Geology, Amsterdam, Netherlands, v. 25, n. 8, p. 681 \u2013 695,\n2008.\n\n\n\n140\n\nGOMEZ-PEREZ, A.; FERNANDEZ-LOPEZ, M.; CORCHO, O. Ontological Engineering:\nWith Examples from the Areas of Knowledge Management, e-Commerce and the Semantic Web.\n(Advanced Information and Knowledge Processing). Secaucus, NJ, USA: Springer-Verlag\nNew York, Inc., 2007.\n\nGRAU, B. C. et al. Automatic partitioning of owl ontologies using e-connections. In:\nINTERNATIONAL WORKSHOP ON DESCRIPTION LOGICS, 2005, Edinburgh,Scotland,\nUK. Proceedings... [S.l.], 2005.\n\nGRUBER, T. R. A translation approach to portable ontology specifications. Knowl. Acquis.,\nAcademic Press Ltd., London, UK, UK, v. 5, n. 2, p. 199\u2013220, jun. 1993.\n\nGUARINO, N. Semantic matching: Formal ontological distinctions for information\norganization, extraction, and integration. In: PAZIENZA, M. (Ed.). Information Extraction A\nMultidisciplinary Approach to an Emerging Information Technology. [S.l.]: Springer Berlin\nHeidelberg, 1997. v. 1299, p. 139\u2013170.\n\nGUARINO, N. Formal ontology and information systems. In: FOIS, 1998, Trento-Italy.\nProceedings ... [S.l.]: IOS Press, 1998. p. 3\u201315.\n\nGUARINO, N.; WELTY, C. A. An overview of ontoclean. In: STAAB, S.; STUDER, R. (Ed.).\nHandbook on Ontologies. [S.l.]: Springer Berlin Heidelberg, 2004. p. 201\u2013220.\n\nGUIZZARDI, G. Ontological Foundations for Structural Conceptual Models. 441 p. Thesis\n(PhD) \u2014 University of Twente, The Netherlands, 2005.\n\nGUIZZARDI, G.; WAGNER, G. What\u2019s in a relationship: An ontological analysis. In: LI, Q.\net al. (Ed.). Conceptual Modeling - ER 2008. [S.l.]: Springer Berlin Heidelberg, 2008. v. 5231,\np. 83\u201397.\n\nHAERTEL, M.; HERWEGH, M. Microfabric memory of vein quartz for strain localization\nin detachment faults: A case study on the simplon fault zone. Journal of Structural Geology,\nAmsterdam, Netherlands, n. 0, p. \u2013, 2014.\n\nHEARST, M. A. Search User Interfaces. 1st. ed. New York, NY, USA: Cambridge University\nPress, 2009.\n\nHEER, J.; CARD, S. K.; LANDAY, J. A. Prefuse: A toolkit for interactive information\nvisualization. In: SIGCHI CONFERENCE ON HUMAN FACTORS IN COMPUTING\nSYSTEMS, 2005, Portland, Oregon USA. Proceedings... New York, NY, USA: ACM, 2005.\n(CHI \u201905), p. 421\u2013430.\n\nHENARES, S. et al. The role of diagenesis and depositional facies on pore system evolution\nin a triassic outcrop analogue (se spain). Marine and Petroleum Geology, Amsterdam,\nNetherlands, v. 51, n. 0, p. 136 \u2013 151, 2014.\n\nHERRE, H. General formal ontology (gfo): A foundational ontology for conceptual modelling.\nIn: POLI, R.; HEALY, M.; KAMEAS, A. (Ed.). Theory and Applications of Ontology:\nComputer Applications. [S.l.]: Springer Netherlands, 2010. p. 297\u2013345.\n\nHUDLESTON, P. J.; TREAGUS, S. H. Information from folds: A review. Journal of Structural\nGeology, Amsterdam, Netherlands, v. 32, n. 12, p. 2042 \u2013 2071, 2010. Structural Diagenesis.\n\n\n\n141\n\nJUL, S. From Brains to branch points: Cognitive constraints in navigational Design. 410 p.\nThesis (PhD) \u2014 Michigan University, Michigan, 2004.\n\nKIM, J. C.; LEE, Y. I.; HISADA, K. ichiro. Depositional and compositional controls on\nsandstone diagenesis, the tetori group middlejurassicearlycretaceous, central japan.\nSedimentary Geology, Amsterdam, Netherlands, v. 195, n. 34, p. 183 \u2013 202, 2007.\n\nKLEIN, C. Manual of Mineral Science. [S.l.]: John Wiley &amp; Sons Australia, Limited, 2002.\n\nKLEIN, G.; MOON, B.; HOFFMAN, R. Making sense of sensemaking 1: Alternative\nperspectives. Intelligent Systems, IEEE, Washington, DC, USA, v. 21, n. 4, p. 70\u201373, July\n2006.\n\nKOGALOVSKY, M. Ontology-based data access systems. Programming and Computer\nSoftware, SP MAIK Nauka/Interperiodica, Berlin, v. 38, n. 4, p. 167\u2013182, 2012.\n\nKRIVOV, S. et al. On visualization of owl ontologies. In: BAKER, C.; CHEUNG, K.-H. (Ed.).\nSemantic Web. [S.l.]: Springer US, 2007. p. 205\u2013221.\n\nLAUBACH, S. et al. Fault core and damage zone fracture attributes vary along strike owing\nto interaction of fracture growth, quartz accumulation, and differing sandstone composition.\nJournal of Structural Geology, Amsterdam, Netherlands, n. 0, p. \u2013, 2014.\n\nLAUBACH, S. et al. Structural diagenesis. Journal of Structural Geology, Amsterdam,\nNetherlands, v. 32, n. 12, p. 1866 \u2013 1872, 2010. Structural Diagenesis.\n\nLOHMANN, S.; NEGRU, S.; BOL, D. The protege vowl plugin: Ontology visualization for\neveryone. In: ESWC, 2014, Creete, Greece. Proceedings... [S.l.], 2014.\n\nLOZANO, J. et al. Ontology view extraction: an approach based on ontological\nmeta-properties. In: ICTAI, 2014, Limassol, Cyprus. Proceedings... [S.l.], 2014.\n\nMAGKANARAKI, A. et al. Viewing the semantic web through {RVL} lenses. Web Semantics:\nScience, Services and Agents on the World Wide Web, Amsterdam, Netherlands, v. 1, n. 4, p.\n359 \u2013 375, 2004.\n\nMANSURBEG, H. et al. Meteoric-water diagenesis in late cretaceous canyon-fill turbidite\nreservoirs from the espirito santo basin, eastern brazil. Marine and Petroleum Geology,\nAmsterdam, Netherlands, v. 37, n. 1, p. 7 \u2013 26, 2012.\n\nMARCHIONINI, G. Exploratory search: From finding to understanding. Commun. ACM,\nACM, New York, NY, USA, v. 49, n. 4, p. 41\u201346, abr. 2006.\n\nMILLER, G. A. The magical number seven, plus or minus two: Some limits on our capacity\nfor processing information. Psychological Review, Washington, DC,USA, 1956.\n\nMODJESKA, D. K. Hierarchical Data Visualization in Desktop Virtual Reality. Thesis (PhD)\n\u2014 University of Toronto, Toronto, Ont., Canada, Canada, 2000. AAINQ53695.\n\nMOLLI, G. et al. Fault zone structure and fluidrock interaction of a high angle normal fault in\ncarrara marble (nw tuscany, italy). Journal of Structural Geology, Amsterdam, Netherlands,\nv. 32, n. 9, p. 1334 \u2013 1348, 2010.\n\n\n\n142\n\nMORRIS, A. et al. A filter flow visual querying language and interface for spatial databases.\nGeoInformatica, Kluwer Academic Publishers, Berlin, v. 8, n. 2, p. 107\u2013141, 2004.\n\nNECHES, R. et al. Enabling technology for knowledge sharing. AI Mag., American\nAssociation for Artificial Intelligence, Menlo Park, CA, USA, v. 12, n. 3, p. 36\u201356, sep. 1991.\n\nNICHOLS, G. Sedimentology and Stratigraphy. [S.l.]: Wiley, 2009. (Wiley Desktop Editions).\n\nNIELSEN, J. Usability Engineering. [S.l.]: Morgan Kaufmann, 1993. (Interactive\ntechnologies).\n\nNOY, N.; MUSEN, M. Traversing ontologies to extract views. In: STUCKENSCHMIDT,\nH.; PARENT, C.; SPACCAPIETRA, S. (Ed.). Modular Ontologies. [S.l.]: Springer Berlin\nHeidelberg, 2009. v. 5445, p. 245\u2013260.\n\nNOY, N. F.; MUSEN, M. A. The prompt suite: interactive tools for ontology merging and\nmapping. International Journal of Human-Computer Studies, Amsterdam, Netherlands, v. 59,\nn. 6, p. 983 \u2013 1024, 2003.\n\nORSTROM, P.; ANDERSEN, J.; SCHARFE, H. What has happened to ontology. In: DAU,\nF.; MUGNIER, M.-L.; STUMME, G. (Ed.). Conceptual Structures: Common Semantics for\nSharing Knowledge. [S.l.]: Springer Berlin Heidelberg, 2005. v. 3596, p. 425\u2013438.\n\nPARENT, C.; SPACCAPIETRA, S. An overview of modularity. In: Modular Ontologies. [S.l.:\ns.n.], 2009. p. 5\u201323.\n\nPASSCHIER, C.; TROUW, R. Microtectonics. [S.l.]: Springer, 2005.\n\nPIROLLI, P.; CARD, S. The sensemaking process and leverage points for analyst technology\nas identified through cognitive task analysis. In: INTERNATIONAL CONFERENCE ON\nINTELLIGENCE ANALYSIS, 2005, McLean, VA, USA. Proceedings ... [S.l.], 2005. v. 2005,\np. 24.\n\nPOLSON, P. G. et al. Cognitive walkthroughs: A method for theory-based evaluation of user\ninterfaces. Int. J. Man-Mach. Stud., Academic Press Ltd., London, UK, UK, v. 36, n. 5, p.\n741\u2013773, may 1992.\n\nPOSNER, M. Foundations of Cognitive Science. [S.l.]: Bradford, 1993. (A Bradford book).\n\nPRESS, F. et al. Para entender a Terra. [S.l.]: Bookman, 2006.\n\nPRIOR, D. J.; RUTTER, E. H.; TATHAM, D. J. Deformation Mechanisms, Rheology and\nTectonics. [S.l.]: Geological Society of London, 2011. 349 p.\n\nROGERS, Y.; SHARP, H.; PREECE, J. Interaction Design: Beyond Human - Computer\nInteraction. [S.l.]: Wiley, 2011. (Interaction Design: Beyond Human-computer Interaction).\n\nRUSSELL, D. M. et al. The cost structure of sensemaking. In: CONFERENCE ON HUMAN\nFACTORS IN COMPUTING SYSTEMS, 2003, Amsterdam, The Netherlands. Proceedings...\nNew York, NY, USA: ACM, 1993. (CHI \u201993), p. 269\u2013276.\n\nSCHUELLER, S. et al. Spatial distribution of deformation bands in damage zones of\nextensional faults in porous sandstones: Statistical analysis of field data. Journal of Structural\nGeology, Amsterdam, Netherlands, v. 52, n. 0, p. 148 \u2013 162, July 2013.\n\n\n\n143\n\nSEBRECHTS, M. M. et al. Visualization of search results: A comparative evaluation\nof text, 2d, and 3d interfaces. In: ACM SIGIR CONFERENCE ON RESEARCH AND\nDEVELOPMENT IN INFORMATION RETRIEVAL, 1999, Berkeley, California, USA.\nProceedings ... New York, NY, USA: ACM, 1999. (SIGIR \u201999), p. 3\u201310.\n\nSEIDENBERG, J.; RECTOR, A. Web ontology segmentation: Analysis, classification and\nuse. In: INTERNATIONAL CONFERENCE ON WORLD WIDE WEB, 2006, Edinburgh,\nScotland. Proceedings of the 15th. New York, NY, USA: ACM, 2006. (WWW \u201906), p. 13\u201322.\n\nSHAUGHNESSY, J.; ZECHMEISTER, E.; ZECHMEISTER, J. Research Methods In\nPsychology. [S.l.]: McGraw-Hill, 2006.\n\nSHAW, M. et al. vsparql: A view definition language for the semantic web. Journal of\nBiomedical Informatics, Amsterdam, Netherlands, v. 44, n. 1, p. 102 \u2013 117, February 2011.\n\nSHNEIDERMAN, B. The eyes have it: a task by data type taxonomy for information\nvisualizations. In: VISUAL LANGUAGES, 1996, Boulder, CO. Proceedings ... [S.l.], 1996. p.\n336\u2013343.\n\nSHNEIDERMAN, B.; PLAISANT, C. Designing the User Interface: Strategies for Effective\nHuman-Computer Interaction (4th Edition). [S.l.]: Pearson Addison Wesley, 2004.\n\nSIBSON, R. Fault rocks and fault mechanisms. Journal of the Geological Society, London,\nv. 133, n. 3, p. 191\u2013213, March 1977.\n\nSILVA, L. A. Aplication of problem solving methods in tasks of rock interpretation. 160 p.\nDissertation (Master) \u2014 Federal University of Rio Grande do Sul, Porto Alegre, 2001.\n\nSMITH, B.; WELTY, C. Ontology:towards a new synthesis. In: INTERNATIONAL\nCONFERENCE ON FORMAL ONTOLOGY IN INFORMATION SYSTEMS, 2001,\nOgunquit, Maine, USA. Proceedings ... New York, NY, USA: ACM, 2001. (FOIS \u201901), p.\n.3\u2013.9.\n\nSMITH, S. L.; MOSIER, J. N. Guidelines for designing user interface software. [S.l.], 1986.\n\nSNOKE, A.; TULLIS, J.; TODD, V. Fault-related Rocks: A Photographic Atlas. [S.l.]:\nPrinceton University Press, 1998. (Princeton Legacy Library).\n\nSNYDER, C. Paper Prototyping: The Fast and Easy Way to Design and Refine User Interfaces.\n[S.l.]: Morgan Kaufmann, 2003. (Interactive Technologies Series).\n\nSOYLU, A. et al. Optiquevqs \u2013 towards an ontology-based visual query system for big data.\nIn: INTERNATIONAL CONFERENCE ON MANAGEMENT OF EMERGENT DIGITAL\nECOSYSTEMS, 2013, Luxemburg. Proceedings... Luxemburg: ACM, 2013.\n\nSTOJANOVIC, L. Methods and Tools for Ontology Evolution. 249 p. Thesis (PhD) \u2014\nUniversitaet Karlsruhe, Germany, 2004.\n\nSTUCKENSCHMIDT, H.; SCHLICHT, A. Structure-based partitioning of large ontologies.\nIn: STUCKENSCHMIDT, H.; PARENT, C.; SPACCAPIETRA, S. (Ed.). Modular Ontologies.\n[S.l.]: Springer Berlin Heidelberg, 2009, (Lecture Notes in Computer Science, v. 5445). p.\n187\u2013210.\n\n\n\n144\n\nSTUDER, R.; BENJAMINS, V.; FENSEL, D. Knowledge engineering: Principles and\nmethods. Data &amp; Knowledge Engineering, Amsterdam, Netherlands, v. 25, n. 12, p. 161 \u2013 197,\n1998.\n\nTEIXEIRA, W. et al. Decifrando a Terra. [S.l.]: Companhia Editora Nacional, 2008.\n\nTORABI, A.; FOSSEN, H. Spatial variation of microstructure and petrophysical properties\nalong deformation bands in reservoir sandstones. AAPG Bulletin, USA, v. 93, n. 7, p. 919\u2013938,\n2009.\n\nTROCHIM, W.; DONNELLY, J. Research Methods Knowledge Base. [S.l.]: Atomic\nDog/Cengage Learning., 2008.\n\nTSARKOV, D.; PALMISANO, I. Divide et impera: Metareasoning for large ontologies. In:\nOWL: EXPERIENCES AND DIRECTIONS WORKSHOP, 2012, Heraklion, Crete, Greece.\nProceedings... [S.l.], 2012.\n\nTUNNING, B. Visual query. [S.l.]: Google Patents, 2005. US Patent App. 10/786,453.\n\nVESCOVO, C. D. et al. Empirical study of logic-based modules: Cheap is cheerful. In:\nINTERNATIONAL WORKSHOP ON DESCRIPTION LOGICS, 2013, Ulm, Germany.\nProceedings... [S.l.], 2013. p. 144\u2013155.\n\nVOLZ, R.; OBERLE, D.; STUDER, R. Views for light-weight web ontologies. In: ACM\nSYMPOSIUM ON APPLIED COMPUTING, 2003, Melbourne, Florida, USA. Proceedings...\nNew York, NY, USA: ACM, 2003. (SAC \u201903), p. 1168\u20131173.\n\nWARE, C. Information Visualization: Perception for Design. [S.l.]: Elsevier Science, 2004.\n(Interactive Technologies).\n\nWORDEN, R. H.; BURLEY, S. D. Sandstone diagenesis: The evolution of sand to stone. In:\n. Sandstone Diagenesis. [S.l.]: Blackwell Publishing Ltd., 2009. p. 1\u201344.\n\nWOUTERS, C. et al. A practical walkthrough of the ontology derivation rules. In:\nHAMEURLAIN, A.; CICCHETTI, R.; TRAUNMULLER, R. (Ed.). Database and Expert\nSystems Applications. [S.l.]: Springer Berlin Heidelberg, 2002. v. 2453, p. 259\u2013268.\n\nWOUTERS, C. et al. Extraction process specification for materialized ontology views. In:\nDILLON, T. et al. (Ed.). Advances in Web Semantics I. [S.l.]: Springer Berlin Heidelberg,\n2009. v. 4891, p. 130\u2013175.\n\nZLOOF, M. M. Query-by-example: The invocation and definition of tables and forms. In:\nINTERNATIONAL CONFERENCE ON VERY LARGE DATA BASES, 1975, Framingham,\nMassachusetts. Proceedings... New York, NY, USA: ACM, 1975. (VLDB \u201975), p. 1\u201324.\n\n\n\n145\n\nAppendices\n\n\n\n\n\n147\n\nAppendixA PRELIMINARY PETROQUERYr STUDY\n\nThis appendix contains a conceptual analysis and experimentation performed over PetroQueryr\n\nsystem, discussed in section A.1 and A.2 respectively. Concretely, we crafted this study to help\nus learn:\n\n\u2022 What are the conceptual problems inside PetroQuery System?\n\n\u2022 Does PetroQuery System require a better user interaction?\n\nWe discussed the results of the experimentation in section A.3.\n\nA.1 Conceptual Analysis\n\nAs a first step towards understanding the impact of software evolution, we conducted a\nconceptual analysis, which consists of analyzing the query history and knowledge model used\nto implement the database structure. Thus, we make an ontological analysis over the original\nknowledge base model used to implement the database. This analysis helps us understanding\nthe misconceptualization of some terms used in the knowledge model, which collapses different\ndefinitions in some terms.\n\nA.1.1 Analysis of Petroledge Knowledge Model\n\nThe knowledge model, described in (ABEL, 2001), was designed to describe siliciclas-\ntic reservoir rocks. The original model (see Figure A.1) describes the extensional portion of\nknowledge requested to describe rock samples and the ontological concepts. The terminology\nwas collected from both experts and scientific entities that are responsible for the definition\nand divulgation in standards in Sedimentary Geology. In the last years, the ontology was ex-\npanded to describe other compositional classes of rocks and additional petrographic features,\nsuch as structural aspects of the rock and the description of the pore system of reservoirs. This\nknowledge model was mapped to a database model, described in (SILVA, 2001).\n\nThe database model design prioritizes queries over multidimensional data that apply several\ndifferent attributes for selection of few instances in the database. The dimensions applied for\nselection are those defined in the domain ontology and are applied dynamically by the system\nas the ontology grows.\n\nIt has been developed different systems over this database model, such as Petroledge and\nPetroQUery. PetroQuery, described in section 2.6.1 follows the QBE (Query By Example\n(ZLOOF, 1975) paradigm using a mapping table that plays the role of ontology to guide the\nconsultation. This table mapping includes other terms from the knowledge model, which were\nnot ontologically consistent. Furthermore, the knowledge model is analyzed using the following\n\n\n\n148\n\nFigure A.1: Original Knowledge model of Petroledger.\n\nThe concepts described as subparts of Nomenclature composes the ontology concepts. The\nother concepts of the models represent the extensional knowledge that supports the petrographic\ndescription task.\n\nSource: (ABEL, 2001)\n\nontological properties, according to the proposal of (GUARINO; WELTY, 2004) and (GUIZ-\nZARDI, 2005).\n\n\u2022 P1. Identity: the properties supply some own (O) identity criteria, which are not inherited\nfrom the subsuming properties, or the criteria of identity are inherited along property\nsubsumption hierarchies. or only hold for some instances and not for the others (I);\n\n\u2022 P2. Unity (U): the property defines countable instances;\n\n\u2022 P3. Existential dependence (E): the concept X is existential dependent of another Y, if it\nexists intrinsic individualized properties of X dependent of Y.\n\n\u2022 P4. Relational dependence (D): the concept X is relational dependent of another one Y, if\nevery instances of X is related to Y.\n\nConsidering the point of view that the system use an ontology to guide the consultation, the\nterms that appears in the interface, such as sample description, classification, diagenetic com-\n\n\n\n149\n\nposition, detrital composition and macroporosity should be considered ontological concepts.\nThe terms from the knowledge model with its analysis are listed below:\n\n\u2022 Sample Description is a piece of information where is registered the petrographic char-\nacteristics of what is observed about the rock. Because it is an artifact, it not clear the\nontological properties. However, we can view as a relator of petrographer and a rock\nsample. In addition, this concept was mapped to a table in the database. It contains as\nattributes: basin, well and outcrop. Basin is an area where sediments have been deposited\nduring a stratigraphic event. Ontologically, it has its own identity and unity. Well is the\nidentification of the well from where the rock sample was extracted. It has its own iden-\ntity and unity. Outcrop is a visible exposure of bedrock on the surface of the earth. It\nhas its own identity and unity because we can delimit visually the part of bedrock in the\nsurface. All these characteristics are collapsed as attributes of Sample Description. This\nterm appear in the interface as ontology concept, which is correct.\n\n\u2022 Macroporosity is a term that involves pore and types of pore. Ontologically it has no\nsense. It was represented as a table and appears in the interface as an ontology concept,\nwhich is incorrect.\n\n\u2022 Detrital composition is part of sedimentary rock. It has no identity, but it is rigid. It is\nthe set of mineral, fragments of rock or bioclasts that build the sedimentary rock. Thus,\nit is relational dependent of sedimentary rock. It can be considered as a role mixin. It is\nrepresented as a table and appears in the interface as ontology concept, which is correct.\n\n\u2022 Diagenetic composition is the set of diagenetic constituents, which are minerals that were\ncrystallized by physical and chemical reactions after the sediment deposition. It was\nmapped to a table. It has no identity, neither unity, but it has rigidity.\n\n\u2022 Classification is a property of the sample description that defines the compositional or\ntextural petrologic class of the rock. Ontologically has no sense. It was represented as a\ntable and it appears in the interface as carbonate classification and siliciclastic classifica-\ntion, which is incorrect.\n\nThe analysis shows that there are terms from the knowledge model that ontologically have\nno sense. Also, there are terms that appear in the interface that represent measures, which are\nnot ontological concepts. For instance, the term Total appears in the interface as a concept, but\nit represents a resume of the rock composition, describing the proportion of each mineral class\nin the rock. Several other operations accomplished over the data by system modules are mixed\nwith the static description of concepts and instances in the query system.\n\n\n\n150\n\nA.1.2 Analysis of Query History\n\nThe query history contains the list of terms employed by user in each saved query. It was\nanalysed 453 queries in total from 25 users registered in the database. The analysis shows\na strong repetition of queries among users, applying few concepts. The concepts are mainly\nrelated to basin and author. This means that users do not explore the combination of other con-\ncepts because the interface does not offer the exploration of concepts in a suitable manner. This\nis an interface disadvantage, since it provides full possibility of complex geological analysis\nover the data, which is hardly reachable by eventual use of spreadsheets or statistic tool, and it\nis not applied by the users.\n\nA.2 Experimentation\n\nInteraction problems from PetroQuery\u2019s users were reported. We design an controlled ex-\nperiment to understand the issues in the interaction between end-users and the PetroQuery sys-\ntem. In the following we describe methodology and result of such experiment. The experiment\nfollows the methodology described in (BASILI; SELBY; HUTCHENS, 1986) and is presented\nin the following subsections. For the purposes of this study, we only analyze user\u2019s comments,\nprovided either during interviews or as results of thinking aloud protocol during the sessions of\ndemonstration. All users\u2019 comments have been analyzed in order to describe the user perception\nabout PetroQuery.\n\nA.2.1 Definition\n\nOur research questions were:\n\n\u2022 How users initiate an exploration task in PetroQuery Interface: An important step to not\nfrustrate the formulation of query is how the user begins the exploration of concepts in\nthe interface.\n\n\u2022 How users navigate and browse through data in PetroQuery: Important aspect to be\nmeasured in order to identify problems that make complex the interaction between the\nuser and system.\n\n\u2022 Data filtering is supported or not: Part of a good formulation of query implies that the\ninterface offers filters to choose the correct term.\n\n\u2022 What additional utilities PetroQuery provides that is being used: We want to identify the\nfrequency of use of other utilities incorporated in PetroQuery that help users to do a better\nanalysis and interpretation of data.\n\n\n\n151\n\nTable A.1: Question and Metric\n\nQuestion Metric\nQ1.Description of situation when using Subjective evaluation of use context\n\nQ2.What is the frequency of reusing your own\ndefined queries\n\n% of use of the module Query Saved\n\nQ3.What is the frequency of reusing queries\ndefined\n\n% of use of the module Query Saved\n\nQ4.What is the frequency of using triangular\nClassification\n\n% of use analytics module\n\nQ5.What is the frequency of using query with\nretrieval images\n\n% of use photos of the samples\n\nSource: The authors\n\nA.2.2 Design\n\nIn the phase of data collection, we elaborated questionnaires and performed interviews. In\naddition, the user demonstrates how he or she develops a query. The time of consultation is\nmeasured and observed the difficulties of interaction. All the interaction is recorded. In the\nelaboration of the questionnaire, it was considered the approach of GQM where the goal is the\nAnalysis of Query Process in PetroQuery and the defined questions with respective metric are\nshown in Table A.1.\n\nIn the phase of data analysis we identified the way of browsing and navigating through\nontology by the audio and mouse track files. Also, we annotated the difficulties found during\nthe interaction.\n\nA.2.3 Implementation and Execution\n\nWe conducted the evaluation with six participants from different oil companies that use\nPetroQuery, two from each company. Although they are all petroleum geologists, the users show\ndifferent ages and levels of experience and work focus. All of them have previous experience\nin using PetroQuery. The majority of them have basic notion in computer science. The tasks\nto be completed by the user were a questionnaire and a test, in which the user needs to propose\nqueries and evaluate the level of difficulty of building the query in the system.\n\nIn the interview, it was applied a questionnaire and it was recorded. For the part of demon-\nstration, it was used a mouse tracker software to identify the flux and the time of performing\nthe query. Users reported several difficulties to find information. Also they mentioned some\ninteresting functionalities that are not available in the system, and it were recorded for further\nstudies.\n\n\n\n152\n\nA.3 Results\n\nIn this section, we present the results from the different methods used along the experimen-\ntation. First of all, we analyze the findings in terms of the answers provided in the interviews.\nThen we illustrate the problem of interaction in terms of the observation and comments during\nthe demonstration.\n\nA.3.1 Interview Analysis\n\nThe interview analysis covers 6 users, which were geologists with different backgrounds. A\nuser information is provided in Table A.2, which contains the media of hours per day of use of\nPetroledge and PetroQuery, the specialization and the age. The results of the questionnaire is\nillustrated in Figure A.2.\n\nAccording to users, the context of use is oriented to generate graphics, to retrieve data from\nprevious years and discover patterns through comparisons. The user U3 illustrates it: \"Two\ngeologists are talking about porosity that is decreasing due to the occurrence of microcrystalline\n\nquartz precipitated between grains of the matrix. Then, they formulated the question whether\n\nthis happens locally in a surface or in the whole basin. Thus, they used PetroQuery to identify\n\nif there are other wells that have the same pattern. Using the structure provided by PetroQuery\n\nthe question will be following the concepts and instance: Basin > Diagenetic constituent >\n\nmicrocrystalline quartz > porosity inter-granular filling porosity...\" Also, user U5 mentions\n\"PetroQuery is used to retrieve specific descriptions, that have determined characteristics, to\n\nmake classifications of set of samples and export them...\". But, we think PetroQuery can be\nused for other purposes in other geology domains where the object of consultation is not going\nto be the Sample Description. Thus, the consultation interface should be designed to offer an\neasy navigation in order to build the query.\n\nQuestions Q2 and Q3 are related to the percentage of reuse of saved queries. The user will\nreuse the queries as much as more complex they are and demand great number of concepts.\nSimple consultation with few concepts for selection will always be developed in the time of\nconsultation. As it was mention, when working in a particular project, more frequently they\nreuse queries because specific studies involve more complex queries with more than 5 con-\ncepts. User U5 identifies two types of users according the type of query, as mentions \"Users\nthat generated petrographic data just make basic queries like petrographers, and users that do\n\ncomplex queries mixing different concepts are the interpreters like reservoir engineer. These\n\ninterpreters don\u2019t know about petrographic concepts...\". Thus, we should turn more natural the\nformulation of queries for users who do not have background on petrography.\n\nFinally, in the case of writing queries, some users did not achieve the task of writing queries\nwith more than five concepts, even having a good experience in the use of Petroledge and\nPetroQuery. We concluded that the basic path of queries is Basin-Well or Sample description\n\n\n\n153\n\nTable A.2: User Information for contextualizing the use of PetroQuery\n\nAbbreviations for specializations: Sedimentology SED, Stratigraphy STR, Geology G, Petrog-\nraphy PG. The following abbreviations for reuse of queries: H=high, M= medium, L=low.\n\nInterviewers 1 2 3 4 5 6\nHours per day\n\nof Use\nPetroledge\n\n5 6 2 6 1 1\n\nHours per day\nof Use\n\nPetroQuery\n\n1/2 2 1/2 2 1/10 2\n\nSpecialization SED PG STR G PG SED\nAge 31 34 43 22 57 44\n\nSource: The authors\n\nand then any attribute of the Sample description. Thus, user has not employ other concepts\ncombinations because the interface not supports a good exploration and analysis. For instance,\nU5 mentions that ...different tools from Endeeper are not well integrated that let an easy analysis\nof petrography data....\n\nFigure A.2: Frequency of use according to the defined Questions\n\nSource: The authors\n\nA.3.2 Observation Analysis\n\nUsers is required to start with the concept sample description navigating through its at-\ntributes. This is a request for query optimization, since it reduces drastically the search space\n\n\n\n154\n\nfor the database management system, making possible to support complex multidimensional\nconsultation over databases as large as 10th or 15th instances. Otherwise, in the view of onto-\nlogical modelling, this initial filter makes no sense since any attribute of the rock are potentially\nconsultable. Moreover it reduces flexibility of the query, requiring the user to understand the\nSample concept to continue formulating the query.\n\nIn the part of navigation and browsing of concepts, the user has to come back in some cases\nto redo the query and has to click in the button A from the Figure A.3. This not satisfies the\nprinciple of Recognition rather than recall from the Nielsen heuristics. The user U1 takes ten\nminutes to formulate a query because he could not identify the sequence of concepts scoring this\nquery as difficult. Although, for other users, this query was solved in one minute. According\nto the cognitive walkthroughs (POLSON et al., 1992) method, we define that the goal was to\nperform five queries and measure the time of each one. The actions were the selection of appro-\npriate concepts to retrieve the desired information. During this, it was identified the absence of\nsome buttons like Clear, Erase selection. Also, we observed the absence of a filter (see Figure\nA.3) when the user has to select an instance that was in the last position. Furthermore, there is\nno explicit indication of how to group concepts like using the operators or or and.\n\nFigure A.3: Screenshot of PetroQuery\n\nSource: The authors\n\nFor this part, we conclude the following:\n\n\u2022 The query is forced to start in Sample Identification concept.\n\n\u2022 There is No Filtering support.\n\n\n\n155\n\n\u2022 There is No good exploration and browsing.\n\nWe concluded from the observations that the lack of intention and homogeneity in the design\nof the PetroQuery consultation system limit the power of using multidimensional consultation\nassociated to a heavy and mature domain ontology. The user does not acknowledge Petro-\nQuery\u2019s potential as a consequence of the interface is not well designed to approximate the\ncognitive understanding of the domain by the user and the exposition of the data by the system.\n\n\n\n156\n\n\n\n157\n\nAppendixB DESIGN ALTERNATIVES\n\nThis appendix contains the design attempts resulted from the preliminary PetroQueryr\n\nstudy. In the study were identified the following requirements: a text filter, button for save\nand create new query, use of a new exploration structure for query formulation, a module for\nanalysis of petrographic data and the enhance of user interaction. All of these must be in one\ninterface.\n\nThose were designed with Lucidchart 1 and Balsamiq 2. The first design (see Figure B.1)\nis an arrangement of the PetroQueryr interface increasing two new features, which are profile\nand recommender queries. The interface contains three panels. The first panel covers the profile\nand a list view containing the sample descriptions. The second panel covers the formulation and\nresults. The third panel is the recommender section and conditions criteria. This design lacks\nof a query visualizer. Thus, it was discarded.\n\nThe second design has two horizontal panels. The first panel contains two sections, the first\nsection has four list views for selecting descriptions, concepts, attributes, values. In the center of\nthis list views, the user selects if they were going to study sedimentary, igneous or metamorphic\nrock. The second section has the query visualizer, which consists of a conceptual structure that\nwill be built when adding new concept to the query formulation. The second panel contains the\nresult table. However, this design was discarded because it not offers analysis capability and\nthe process of query interaction is difficult to perform.\n\nThe third design has two vertical panels. The first panel contains a text filter and a tree view.\nIn the tree view it is displayed the taxonomy of the queried term. The second panel contains the\nquery visualizer, text query visualizer and a table of results. The query visualizer is a diagram.\nThe lack of this design is that the term could be related with other terms that are not in the\ntaxonomy. This design was discarded because it not offer the analysis capacity. However, the\nuse of a text filter was considered as a widget that should be in the system.\n\nThe fourth design has three vertical panels. The first panel contains the text filter, a ontology\nvisualization plugin, and a section for recommender queries. The second panel contains also a\ntext filter, a tag cloud, the query visualizer (a simple table) and a text query visualizer. The third\npanel contains a result table with a button called Analytics, which will pop up a new window\nwith a graphic. It also contains a section for brief description of each sample and the buttons of\nnew and save. On the top, next to the title bar is the user profile section.\n\nThis design was adopted and adapted during the prototype construction. The justification of\neach component is detailed below. The use of text filter was a requirement from the experimen-\ntation. In the use of another structure for query formulation, we employ a graph visualization\nplugin of an ontology because it has the main structure. However, we should show just part of\nit and not all the concepts. Thus, the use of our approach will help. The recommender queries\n\n1https://www.lucidchart.com/\n2https://balsamiq.com/\n\n\n\n158\n\nwas one of our ideas, because in many recently visual query systems, they have a section for\nrecommender queries. The panel of analysis visualization is because the comment done by U5\nin the experimentation about the necessity of an easy analysis of petrographic data.\n\n\n\n159\n\nFigure B.1: Design One\n\nSource: The authors\n\n\n\n160\n\nFigure B.2: Design Two\n\nSource: The authors\n\n\n\n161\n\nFigure B.3: Design Three\n\nSource: The authors\n\n\n\n162\n\nFigure B.4: Design Four\n\nSource: The authors\n\n\n\n163\n\nAppendixC TABLE RESULTS\n\n\n\n164\n\nTa\nbl\n\ne\nC\n\n.1\n:\n\nA\npp\n\nro\nac\n\nh\n1:\n\nP\nre\n\nci\nsi\n\non\nan\n\nd\nR\n\nec\nal\n\nl\n\nT\nyp\n\ne\nM\n\nea\nsu\n\nre\nA\n\n1\nA\n\n2\nA\n\n3\nA\n\n4\nA\n\n5\nA\n\n6\nA\n\nT\nD\n\nM\nD\n\nM\nD\n\nM\nD\n\nM\nD\n\nM\nD\n\nM\nD\n\nM\nP\n\n0.\n47\n\n0.\n18\n\n0.\n62\n\n0.\n22\n\n0.\n56\n\n0.\n17\n\n0.\n58\n\n0.\n28\n\n0.\n51\n\n0.\n31\n\n0.\n61\n\n0.\n28\n\n0.\n44\n\n0.\n28\n\nR\n0.\n\n15\n0.\n\n05\n0.\n\n17\n0.\n\n06\n0.\n\n05\n0.\n\n02\n0.\n\n18\n0.\n\n09\n0.\n\n11\n0.\n\n07\n0.\n\n12\n0.\n\n05\n0.\n\n31\n0.\n\n20\nF\n\n0.\n23\n\n0.\n08\n\n0.\n27\n\n0.\n09\n\n0.\n10\n\n0.\n03\n\n0.\n28\n\n0.\n13\n\n0.\n18\n\n0.\n11\n\n0.\n20\n\n0.\n09\n\n0.\n37\n\n0.\n23\n\nw\nP\n\nP\n0.\n\n47\n0.\n\n18\n0.\n\n62\n0.\n\n22\n0.\n\n56\n0.\n\n17\n0.\n\n58\n0.\n\n28\n0.\n\n51\n0.\n\n31\n0.\n\n61\n0.\n\n28\n0.\n\n44\n0.\n\n28\nR\n\n0.\n14\n\n0.\n05\n\n0.\n16\n\n0.\n06\n\n0.\n05\n\n0.\n02\n\n0.\n17\n\n0.\n09\n\n0.\n10\n\n0.\n06\n\n0.\n11\n\n0.\n05\n\n0.\n29\n\n0.\n19\n\nF\n0.\n\n21\n0.\n\n08\n0.\n\n25\n0.\n\n09\n0.\n\n09\n0.\n\n03\n0.\n\n26\n0.\n\n13\n0.\n\n17\n0.\n\n11\n0.\n\n19\n0.\n\n09\n0.\n\n35\n0.\n\n23\n\nF\nR\n\nP\n0.\n\n56\n0.\n\n70\n0.\n\n68\n0.\n\n86\n0.\n\n61\n0.\n\n67\n0.\n\n61\n0.\n\n81\n0.\n\n59\n0.\n\n77\n0.\n\n69\n0.\n\n86\n0.\n\n50\n0.\n\n71\nR\n\n0.\n17\n\n0.\n12\n\n0.\n18\n\n0.\n12\n\n0.\n06\n\n0.\n03\n\n0.\n18\n\n0.\n13\n\n0.\n12\n\n0.\n09\n\n0.\n13\n\n0.\n09\n\n0.\n33\n\n0.\n27\n\nF\n0.\n\n26\n0.\n\n20\n0.\n\n28\n0.\n\n22\n0.\n\n10\n0.\n\n07\n0.\n\n28\n0.\n\n23\n0.\n\n20\n0.\n\n16\n0.\n\n22\n0.\n\n16\n0.\n\n40\n0.\n\n39\n\nR\nT\n\nP\n0.\n\n47\n0.\n\n14\n0.\n\n62\n0.\n\n20\n0.\n\n56\n0.\n\n17\n0.\n\n58\n0.\n\n28\n0.\n\n51\n0.\n\n31\n0.\n\n61\n0.\n\n28\n0.\n\n44\n0.\n\n26\nR\n\n0.\n15\n\n0.\n06\n\n0.\n17\n\n0.\n08\n\n0.\n05\n\n0.\n02\n\n0.\n18\n\n0.\n12\n\n0.\n11\n\n0.\n09\n\n0.\n12\n\n0.\n08\n\n0.\n31\n\n0.\n25\n\nF\n0.\n\n23\n0.\n\n08\n0.\n\n27\n0.\n\n11\n0.\n\n10\n0.\n\n04\n0.\n\n28\n0.\n\n17\n0.\n\n18\n0.\n\n14\n0.\n\n20\n0.\n\n12\n0.\n\n37\n0.\n\n25\n\nw\nP\n\n-R\nT\n\nP\n0.\n\n47\n0.\n\n14\n0.\n\n62\n0.\n\n20\n0.\n\n56\n0.\n\n17\n0.\n\n58\n0.\n\n28\n0.\n\n51\n0.\n\n31\n0.\n\n61\n0.\n\n28\n0.\n\n44\n0.\n\n26\nR\n\n0.\n14\n\n0.\n06\n\n0.\n16\n\n0.\n07\n\n0.\n05\n\n0.\n02\n\n0.\n17\n\n0.\n12\n\n0.\n10\n\n0.\n09\n\n0.\n11\n\n0.\n07\n\n0.\n29\n\n0.\n24\n\nF\n0.\n\n21\n0.\n\n08\n0.\n\n25\n0.\n\n11\n0.\n\n09\n0.\n\n04\n0.\n\n26\n0.\n\n17\n0.\n\n17\n0.\n\n14\n0.\n\n19\n0.\n\n12\n0.\n\n35\n0.\n\n25\n\nR\nT-\n\nF\nR\n\nP\n0.\n\n56\n0.\n\n68\n0.\n\n68\n0.\n\n86\n0.\n\n61\n0.\n\n72\n0.\n\n61\n0.\n\n82\n0.\n\n59\n0.\n\n79\n0.\n\n69\n0.\n\n89\n0.\n\n50\n0.\n\n70\nR\n\n0.\n17\n\n0.\n13\n\n0.\n18\n\n0.\n15\n\n0.\n06\n\n0.\n04\n\n0.\n18\n\n0.\n16\n\n0.\n12\n\n0.\n11\n\n0.\n13\n\n0.\n11\n\n0.\n33\n\n0.\n31\n\nF\n0.\n\n26\n0.\n\n22\n0.\n\n28\n0.\n\n25\n0.\n\n10\n0.\n\n08\n0.\n\n28\n0.\n\n27\n0.\n\n20\n0.\n\n19\n0.\n\n22\n0.\n\n19\n0.\n\n40\n0.\n\n43\n\nw\nP\n\n-F\nR\n\nP\n0.\n\n56\n0.\n\n72\n0.\n\n68\n0.\n\n88\n0.\n\n61\n0.\n\n72\n0.\n\n61\n0.\n\n82\n0.\n\n59\n0.\n\n79\n0.\n\n69\n0.\n\n89\n0.\n\n50\n0.\n\n72\nR\n\n0.\n16\n\n0.\n12\n\n0.\n17\n\n0.\n13\n\n0.\n05\n\n0.\n04\n\n0.\n17\n\n0.\n13\n\n0.\n11\n\n0.\n09\n\n0.\n12\n\n0.\n09\n\n0.\n31\n\n0.\n27\n\nF\n0.\n\n24\n0.\n\n20\n0.\n\n27\n0.\n\n22\n0.\n\n10\n0.\n\n07\n0.\n\n27\n0.\n\n23\n0.\n\n19\n0.\n\n16\n0.\n\n21\n0.\n\n17\n0.\n\n38\n0.\n\n39\n\nw\nP\n\n-R\nT-\n\nF\nR\n\nP\n0.\n\n56\n0.\n\n68\n0.\n\n68\n0.\n\n86\n0.\n\n61\n0.\n\n72\n0.\n\n61\n0.\n\n82\n0.\n\n59\n0.\n\n79\n0.\n\n69\n0.\n\n89\n0.\n\n50\n0.\n\n70\nR\n\n0.\n16\n\n0.\n13\n\n0.\n17\n\n0.\n14\n\n0.\n05\n\n0.\n04\n\n0.\n17\n\n0.\n16\n\n0.\n11\n\n0.\n10\n\n0.\n12\n\n0.\n11\n\n0.\n31\n\n0.\n30\n\nF\n0.\n\n24\n0.\n\n22\n0.\n\n27\n0.\n\n25\n0.\n\n10\n0.\n\n08\n0.\n\n27\n0.\n\n27\n0.\n\n19\n0.\n\n18\n0.\n\n21\n0.\n\n19\n0.\n\n38\n0.\n\n42\n\n\n\n165\n\nTa\nbl\n\ne\nC\n\n.2\n:\n\nA\npp\n\nro\nac\n\nh\n2:\n\nP\nre\n\nci\nsi\n\non\nan\n\nd\nR\n\nec\nal\n\nl\n\nT\nyp\n\ne\nM\n\nea\nsu\n\nre\nA\n\n1\nA\n\n2\nA\n\n3\nA\n\n4\nA\n\n5\nA\n\n6\nA\n\nT\nD\n\nM\nD\n\nM\nD\n\nM\nD\n\nM\nD\n\nM\nD\n\nM\nD\n\nM\nP\n\n0.\n47\n\n0.\n02\n\n0.\n62\n\n0.\n02\n\n0.\n56\n\n0.\n00\n\n0.\n58\n\n0.\n04\n\n0.\n51\n\n0.\n03\n\n0.\n61\n\n0.\n00\n\n0.\n44\n\n0.\n02\n\nR\n0.\n\n15\n0.\n\n03\n0.\n\n17\n0.\n\n03\n0.\n\n05\n0.\n\n00\n0.\n\n18\n0.\n\n05\n0.\n\n11\n0.\n\n03\n0.\n\n12\n0.\n\n00\n0.\n\n31\n0.\n\n08\nF\n\n0.\n23\n\n0.\n02\n\n0.\n27\n\n0.\n02\n\n0.\n10\n\n0.\n00\n\n0.\n28\n\n0.\n04\n\n0.\n18\n\n0.\n03\n\n0.\n20\n\n0.\n00\n\n0.\n37\n\n0.\n04\n\nw\nP\n\nP\n0.\n\n47\n0.\n\n02\n0.\n\n62\n0.\n\n02\n0.\n\n56\n0.\n\n00\n0.\n\n58\n0.\n\n04\n0.\n\n51\n0.\n\n03\n0.\n\n61\n0.\n\n00\n0.\n\n44\n0.\n\n02\nR\n\n0.\n15\n\n0.\n02\n\n0.\n17\n\n0.\n02\n\n0.\n05\n\n0.\n00\n\n0.\n18\n\n0.\n05\n\n0.\n11\n\n0.\n02\n\n0.\n12\n\n0.\n00\n\n0.\n31\n\n0.\n07\n\nF\n0.\n\n22\n0.\n\n02\n0.\n\n26\n0.\n\n02\n0.\n\n10\n0.\n\n00\n0.\n\n27\n0.\n\n04\n0.\n\n18\n0.\n\n02\n0.\n\n20\n0.\n\n00\n0.\n\n36\n0.\n\n04\n\nF\nR\n\nP\n0.\n\n51\n0.\n\n04\n0.\n\n66\n0.\n\n02\n0.\n\n61\n0.\n\n00\n0.\n\n60\n0.\n\n04\n0.\n\n54\n0.\n\n03\n0.\n\n67\n0.\n\n00\n0.\n\n47\n0.\n\n03\nR\n\n0.\n16\n\n0.\n05\n\n0.\n18\n\n0.\n02\n\n0.\n06\n\n0.\n00\n\n0.\n18\n\n0.\n05\n\n0.\n11\n\n0.\n02\n\n0.\n13\n\n0.\n00\n\n0.\n32\n\n0.\n10\n\nF\n0.\n\n24\n0.\n\n04\n0.\n\n28\n0.\n\n02\n0.\n\n11\n0.\n\n00\n0.\n\n28\n0.\n\n04\n0.\n\n19\n0.\n\n02\n0.\n\n22\n0.\n\n00\n0.\n\n38\n0.\n\n05\n\nR\nT\n\nP\n0.\n\n47\n0.\n\n02\n0.\n\n62\n0.\n\n02\n0.\n\n56\n0.\n\n00\n0.\n\n58\n0.\n\n04\n0.\n\n51\n0.\n\n03\n0.\n\n61\n0.\n\n00\n0.\n\n44\n0.\n\n02\nR\n\n0.\n15\n\n0.\n05\n\n0.\n17\n\n0.\n05\n\n0.\n05\n\n0.\n00\n\n0.\n18\n\n0.\n11\n\n0.\n11\n\n0.\n05\n\n0.\n12\n\n0.\n00\n\n0.\n31\n\n0.\n16\n\nF\n0.\n\n23\n0.\n\n03\n0.\n\n27\n0.\n\n03\n0.\n\n10\n0.\n\n00\n0.\n\n28\n0.\n\n05\n0.\n\n18\n0.\n\n03\n0.\n\n20\n0.\n\n00\n0.\n\n37\n0.\n\n04\n\nw\nP\n\n-R\nT\n\nP\n0.\n\n47\n0.\n\n02\n0.\n\n62\n0.\n\n02\n0.\n\n56\n0.\n\n00\n0.\n\n58\n0.\n\n04\n0.\n\n51\n0.\n\n03\n0.\n\n61\n0.\n\n00\n0.\n\n44\n0.\n\n02\nR\n\n0.\n15\n\n0.\n05\n\n0.\n17\n\n0.\n05\n\n0.\n05\n\n0.\n00\n\n0.\n18\n\n0.\n09\n\n0.\n11\n\n0.\n05\n\n0.\n12\n\n0.\n00\n\n0.\n31\n\n0.\n14\n\nF\n0.\n\n22\n0.\n\n03\n0.\n\n26\n0.\n\n03\n0.\n\n10\n0.\n\n00\n0.\n\n27\n0.\n\n05\n0.\n\n18\n0.\n\n03\n0.\n\n20\n0.\n\n00\n0.\n\n36\n0.\n\n04\n\nR\nT-\n\nF\nR\n\nP\n0.\n\n51\n0.\n\n04\n0.\n\n66\n0.\n\n02\n0.\n\n61\n0.\n\n00\n0.\n\n60\n0.\n\n04\n0.\n\n54\n0.\n\n03\n0.\n\n67\n0.\n\n00\n0.\n\n47\n0.\n\n03\nR\n\n0.\n16\n\n0.\n10\n\n0.\n18\n\n0.\n05\n\n0.\n06\n\n0.\n00\n\n0.\n18\n\n0.\n10\n\n0.\n11\n\n0.\n05\n\n0.\n13\n\n0.\n00\n\n0.\n32\n\n0.\n19\n\nF\n0.\n\n24\n0.\n\n05\n0.\n\n28\n0.\n\n03\n0.\n\n11\n0.\n\n00\n0.\n\n28\n0.\n\n05\n0.\n\n19\n0.\n\n03\n0.\n\n22\n0.\n\n00\n0.\n\n38\n0.\n\n05\n\nw\nP\n\n-F\nR\n\nP\n0.\n\n51\n0.\n\n04\n0.\n\n66\n0.\n\n02\n0.\n\n61\n0.\n\n00\n0.\n\n60\n0.\n\n04\n0.\n\n54\n0.\n\n03\n0.\n\n67\n0.\n\n00\n0.\n\n47\n0.\n\n03\nR\n\n0.\n15\n\n0.\n05\n\n0.\n18\n\n0.\n02\n\n0.\n06\n\n0.\n00\n\n0.\n18\n\n0.\n05\n\n0.\n11\n\n0.\n02\n\n0.\n13\n\n0.\n00\n\n0.\n32\n\n0.\n09\n\nF\n0.\n\n24\n0.\n\n04\n0.\n\n28\n0.\n\n02\n0.\n\n11\n0.\n\n00\n0.\n\n28\n0.\n\n04\n0.\n\n19\n0.\n\n02\n0.\n\n21\n0.\n\n00\n0.\n\n38\n0.\n\n05\n\nw\nP\n\n-R\nT-\n\nF\nR\n\nP\n0.\n\n51\n0.\n\n04\n0.\n\n66\n0.\n\n02\n0.\n\n61\n0.\n\n00\n0.\n\n60\n0.\n\n04\n0.\n\n54\n0.\n\n03\n0.\n\n67\n0.\n\n00\n0.\n\n47\n0.\n\n03\nR\n\n0.\n15\n\n0.\n08\n\n0.\n18\n\n0.\n04\n\n0.\n06\n\n0.\n00\n\n0.\n18\n\n0.\n08\n\n0.\n11\n\n0.\n04\n\n0.\n13\n\n0.\n00\n\n0.\n32\n\n0.\n17\n\nF\n0.\n\n24\n0.\n\n05\n0.\n\n28\n0.\n\n03\n0.\n\n11\n0.\n\n00\n0.\n\n28\n0.\n\n05\n0.\n\n19\n0.\n\n03\n0.\n\n21\n0.\n\n00\n0.\n\n38\n0.\n\n05\n\n\n\n166\n\nTa\nbl\n\ne\nC\n\n.3\n:\n\nA\npp\n\nro\nac\n\nh\n3:\n\nP\nre\n\nci\nsi\n\non\nan\n\nd\nR\n\nec\nal\n\nl\n\nT\nyp\n\ne\nM\n\nea\nsu\n\nre\nA\n\n1\nA\n\n2\nA\n\n3\nA\n\n4\nA\n\n5\nA\n\n6\nA\n\nT\nD\n\nM\nD\n\nM\nD\n\nM\nD\n\nM\nD\n\nM\nD\n\nM\nD\n\nM\nP\n\n0.\n47\n\n0.\n02\n\n0.\n62\n\n0.\n02\n\n0.\n56\n\n0.\n06\n\n0.\n58\n\n0.\n07\n\n0.\n51\n\n0.\n10\n\n0.\n61\n\n0.\n08\n\n0.\n44\n\n0.\n05\n\nR\n0.\n\n15\n0.\n\n01\n0.\n\n17\n0.\n\n01\n0.\n\n05\n0.\n\n01\n0.\n\n18\n0.\n\n05\n0.\n\n11\n0.\n\n05\n0.\n\n12\n0.\n\n04\n0.\n\n31\n0.\n\n08\nF\n\n0.\n23\n\n0.\n01\n\n0.\n27\n\n0.\n01\n\n0.\n10\n\n0.\n02\n\n0.\n28\n\n0.\n06\n\n0.\n18\n\n0.\n07\n\n0.\n20\n\n0.\n05\n\n0.\n37\n\n0.\n07\n\nw\nP\n\nP\n0.\n\n47\n0.\n\n02\n0.\n\n62\n0.\n\n02\n0.\n\n56\n0.\n\n06\n0.\n\n58\n0.\n\n07\n0.\n\n51\n0.\n\n10\n0.\n\n61\n0.\n\n08\n0.\n\n44\n0.\n\n05\nR\n\n0.\n14\n\n0.\n01\n\n0.\n16\n\n0.\n01\n\n0.\n05\n\n0.\n01\n\n0.\n17\n\n0.\n05\n\n0.\n10\n\n0.\n05\n\n0.\n11\n\n0.\n04\n\n0.\n29\n\n0.\n08\n\nF\n0.\n\n21\n0.\n\n01\n0.\n\n25\n0.\n\n01\n0.\n\n09\n0.\n\n02\n0.\n\n26\n0.\n\n06\n0.\n\n17\n0.\n\n07\n0.\n\n19\n0.\n\n05\n0.\n\n35\n0.\n\n07\n\nF\nR\n\nP\n0.\n\n56\n0.\n\n51\n0.\n\n68\n0.\n\n56\n0.\n\n61\n0.\n\n50\n0.\n\n61\n0.\n\n56\n0.\n\n59\n0.\n\n54\n0.\n\n69\n0.\n\n58\n0.\n\n50\n0.\n\n44\nR\n\n0.\n17\n\n0.\n12\n\n0.\n18\n\n0.\n12\n\n0.\n06\n\n0.\n04\n\n0.\n18\n\n0.\n14\n\n0.\n12\n\n0.\n09\n\n0.\n13\n\n0.\n09\n\n0.\n33\n\n0.\n24\n\nF\n0.\n\n26\n0.\n\n20\n0.\n\n28\n0.\n\n20\n0.\n\n10\n0.\n\n07\n0.\n\n28\n0.\n\n22\n0.\n\n20\n0.\n\n15\n0.\n\n22\n0.\n\n15\n0.\n\n40\n0.\n\n31\n\nR\nT\n\nP\n0.\n\n47\n0.\n\n02\n0.\n\n62\n0.\n\n02\n0.\n\n56\n0.\n\n06\n0.\n\n58\n0.\n\n07\n0.\n\n51\n0.\n\n10\n0.\n\n61\n0.\n\n08\n0.\n\n44\n0.\n\n05\nR\n\n0.\n15\n\n0.\n02\n\n0.\n17\n\n0.\n02\n\n0.\n05\n\n0.\n02\n\n0.\n18\n\n0.\n06\n\n0.\n11\n\n0.\n06\n\n0.\n12\n\n0.\n05\n\n0.\n31\n\n0.\n11\n\nF\n0.\n\n23\n0.\n\n02\n0.\n\n27\n0.\n\n02\n0.\n\n10\n0.\n\n02\n0.\n\n28\n0.\n\n07\n0.\n\n18\n0.\n\n08\n0.\n\n20\n0.\n\n06\n0.\n\n37\n0.\n\n07\n\nw\nP\n\n-R\nT\n\nP\n0.\n\n47\n0.\n\n02\n0.\n\n62\n0.\n\n02\n0.\n\n56\n0.\n\n06\n0.\n\n58\n0.\n\n07\n0.\n\n51\n0.\n\n10\n0.\n\n61\n0.\n\n08\n0.\n\n44\n0.\n\n05\nR\n\n0.\n14\n\n0.\n02\n\n0.\n16\n\n0.\n02\n\n0.\n05\n\n0.\n02\n\n0.\n17\n\n0.\n06\n\n0.\n10\n\n0.\n06\n\n0.\n11\n\n0.\n05\n\n0.\n29\n\n0.\n11\n\nF\n0.\n\n21\n0.\n\n02\n0.\n\n25\n0.\n\n02\n0.\n\n09\n0.\n\n02\n0.\n\n26\n0.\n\n07\n0.\n\n17\n0.\n\n08\n0.\n\n19\n0.\n\n06\n0.\n\n35\n0.\n\n07\n\nR\nT-\n\nF\nR\n\nP\n0.\n\n56\n0.\n\n40\n0.\n\n68\n0.\n\n48\n0.\n\n61\n0.\n\n33\n0.\n\n61\n0.\n\n47\n0.\n\n59\n0.\n\n44\n0.\n\n69\n0.\n\n50\n0.\n\n50\n0.\n\n36\nR\n\n0.\n17\n\n0.\n12\n\n0.\n18\n\n0.\n12\n\n0.\n06\n\n0.\n03\n\n0.\n18\n\n0.\n14\n\n0.\n12\n\n0.\n09\n\n0.\n13\n\n0.\n09\n\n0.\n33\n\n0.\n24\n\nF\n0.\n\n26\n0.\n\n18\n0.\n\n28\n0.\n\n20\n0.\n\n10\n0.\n\n06\n0.\n\n28\n0.\n\n22\n0.\n\n20\n0.\n\n15\n0.\n\n22\n0.\n\n16\n0.\n\n40\n0.\n\n28\n\nw\nP\n\n-F\nR\n\nP\n0.\n\n56\n0.\n\n51\n0.\n\n68\n0.\n\n56\n0.\n\n61\n0.\n\n50\n0.\n\n61\n0.\n\n56\n0.\n\n59\n0.\n\n54\n0.\n\n69\n0.\n\n58\n0.\n\n50\n0.\n\n44\nR\n\n0.\n16\n\n0.\n12\n\n0.\n17\n\n0.\n12\n\n0.\n05\n\n0.\n04\n\n0.\n17\n\n0.\n14\n\n0.\n11\n\n0.\n09\n\n0.\n12\n\n0.\n09\n\n0.\n31\n\n0.\n24\n\nF\n0.\n\n24\n0.\n\n20\n0.\n\n27\n0.\n\n20\n0.\n\n10\n0.\n\n07\n0.\n\n27\n0.\n\n22\n0.\n\n19\n0.\n\n15\n0.\n\n21\n0.\n\n15\n0.\n\n38\n0.\n\n31\n\nw\nP\n\n-R\nT-\n\nF\nR\n\nP\n0.\n\n56\n0.\n\n40\n0.\n\n68\n0.\n\n48\n0.\n\n61\n0.\n\n33\n0.\n\n61\n0.\n\n47\n0.\n\n59\n0.\n\n44\n0.\n\n69\n0.\n\n50\n0.\n\n50\n0.\n\n36\nR\n\n0.\n16\n\n0.\n12\n\n0.\n17\n\n0.\n12\n\n0.\n05\n\n0.\n03\n\n0.\n17\n\n0.\n14\n\n0.\n11\n\n0.\n09\n\n0.\n12\n\n0.\n09\n\n0.\n31\n\n0.\n24\n\nF\n0.\n\n24\n0.\n\n18\n0.\n\n27\n0.\n\n20\n0.\n\n10\n0.\n\n06\n0.\n\n27\n0.\n\n22\n0.\n\n19\n0.\n\n15\n0.\n\n21\n0.\n\n16\n0.\n\n38\n0.\n\n28\n\n\n\n167\n\nTa\nbl\n\ne\nC\n\n.4\n:\n\nA\npp\n\nro\nac\n\nh\n1:\n\nP\nre\n\nci\nsi\n\non\nan\n\nd\nR\n\nec\nal\n\nl\n\nT\nyp\n\ne\nM\n\nea\nsu\n\nre\nB\n\n1\nB\n\n2\nB\n\n3\nB\n\n4\nB\n\n5\nB\n\n6\nB\n\nT\nM\n\nD\nM\n\nD\nM\n\nD\nM\n\nD\nM\n\nD\nM\n\nD\nM\n\nD\nP\n\n0.\n47\n\n0.\n31\n\n0.\n43\n\n0.\n40\n\n0.\n45\n\n0.\n19\n\n0.\n63\n\n0.\n11\n\n0.\n56\n\n0.\n06\n\n0.\n62\n\n0.\n00\n\n0.\n40\n\n0.\n24\n\nR\n0.\n\n08\n0.\n\n05\n0.\n\n08\n0.\n\n08\n0.\n\n08\n0.\n\n03\n0.\n\n07\n0.\n\n01\n0.\n\n05\n0.\n\n01\n0.\n\n04\n0.\n\n00\n0.\n\n21\n0.\n\n13\nF\n\n0.\n14\n\n0.\n09\n\n0.\n14\n\n0.\n13\n\n0.\n13\n\n0.\n06\n\n0.\n12\n\n0.\n02\n\n0.\n09\n\n0.\n01\n\n0.\n08\n\n0.\n00\n\n0.\n28\n\n0.\n16\n\nw\nP\n\nP\n0.\n\n47\n0.\n\n34\n0.\n\n46\n0.\n\n40\n0.\n\n55\n0.\n\n26\n0.\n\n63\n0.\n\n16\n0.\n\n69\n0.\n\n06\n0.\n\n62\n0.\n\n00\n0.\n\n43\n0.\n\n27\nR\n\n0.\n08\n\n0.\n06\n\n0.\n09\n\n0.\n07\n\n0.\n09\n\n0.\n04\n\n0.\n06\n\n0.\n02\n\n0.\n06\n\n0.\n01\n\n0.\n04\n\n0.\n00\n\n0.\n22\n\n0.\n13\n\nF\n0.\n\n14\n0.\n\n10\n0.\n\n14\n0.\n\n12\n0.\n\n16\n0.\n\n07\n0.\n\n12\n0.\n\n03\n0.\n\n11\n0.\n\n01\n0.\n\n08\n0.\n\n00\n0.\n\n30\n0.\n\n18\n\nF\nR\n\nP\n0.\n\n75\n0.\n\n31\n0.\n\n80\n0.\n\n40\n0.\n\n68\n0.\n\n23\n0.\n\n74\n0.\n\n11\n0.\n\n56\n0.\n\n06\n0.\n\n62\n0.\n\n00\n0.\n\n64\n0.\n\n25\nR\n\n0.\n07\n\n0.\n05\n\n0.\n08\n\n0.\n07\n\n0.\n06\n\n0.\n04\n\n0.\n04\n\n0.\n01\n\n0.\n03\n\n0.\n01\n\n0.\n02\n\n0.\n00\n\n0.\n18\n\n0.\n12\n\nF\n0.\n\n13\n0.\n\n09\n0.\n\n15\n0.\n\n12\n0.\n\n11\n0.\n\n06\n0.\n\n08\n0.\n\n02\n0.\n\n05\n0.\n\n01\n0.\n\n04\n0.\n\n00\n0.\n\n28\n0.\n\n17\n\nR\nT\n\nP\n0.\n\n22\n0.\n\n31\n0.\n\n29\n0.\n\n40\n0.\n\n26\n0.\n\n19\n0.\n\n42\n0.\n\n11\n0.\n\n44\n0.\n\n06\n0.\n\n46\n0.\n\n00\n0.\n\n25\n0.\n\n24\nR\n\n0.\n05\n\n0.\n05\n\n0.\n08\n\n0.\n08\n\n0.\n06\n\n0.\n03\n\n0.\n06\n\n0.\n01\n\n0.\n05\n\n0.\n01\n\n0.\n05\n\n0.\n00\n\n0.\n18\n\n0.\n13\n\nF\n0.\n\n09\n0.\n\n09\n0.\n\n12\n0.\n\n13\n0.\n\n10\n0.\n\n06\n0.\n\n11\n0.\n\n02\n0.\n\n09\n0.\n\n01\n0.\n\n08\n0.\n\n00\n0.\n\n21\n0.\n\n16\n\nw\nP\n\n-R\nT\n\nP\n0.\n\n22\n0.\n\n34\n0.\n\n31\n0.\n\n40\n0.\n\n35\n0.\n\n26\n0.\n\n42\n0.\n\n16\n0.\n\n56\n0.\n\n06\n0.\n\n46\n0.\n\n00\n0.\n\n28\n0.\n\n27\nR\n\n0.\n05\n\n0.\n06\n\n0.\n08\n\n0.\n07\n\n0.\n08\n\n0.\n04\n\n0.\n06\n\n0.\n02\n\n0.\n07\n\n0.\n01\n\n0.\n04\n\n0.\n00\n\n0.\n20\n\n0.\n13\n\nF\n0.\n\n08\n0.\n\n10\n0.\n\n13\n0.\n\n12\n0.\n\n13\n0.\n\n07\n0.\n\n10\n0.\n\n03\n0.\n\n12\n0.\n\n01\n0.\n\n08\n0.\n\n00\n0.\n\n23\n0.\n\n18\n\nR\nT-\n\nF\nR\n\nP\n0.\n\n50\n0.\n\n31\n0.\n\n66\n0.\n\n40\n0.\n\n48\n0.\n\n23\n0.\n\n53\n0.\n\n11\n0.\n\n44\n0.\n\n06\n0.\n\n46\n0.\n\n00\n0.\n\n48\n0.\n\n25\nR\n\n0.\n05\n\n0.\n05\n\n0.\n08\n\n0.\n07\n\n0.\n05\n\n0.\n04\n\n0.\n03\n\n0.\n01\n\n0.\n02\n\n0.\n01\n\n0.\n02\n\n0.\n00\n\n0.\n16\n\n0.\n12\n\nF\n0.\n\n10\n0.\n\n09\n0.\n\n14\n0.\n\n12\n0.\n\n09\n0.\n\n06\n0.\n\n06\n0.\n\n02\n0.\n\n05\n0.\n\n01\n0.\n\n04\n0.\n\n00\n0.\n\n24\n0.\n\n17\n\nw\nP\n\n-F\nR\n\nP\n0.\n\n75\n0.\n\n34\n0.\n\n83\n0.\n\n40\n0.\n\n77\n0.\n\n29\n0.\n\n74\n0.\n\n16\n0.\n\n69\n0.\n\n06\n0.\n\n62\n0.\n\n00\n0.\n\n67\n0.\n\n28\nR\n\n0.\n07\n\n0.\n05\n\n0.\n08\n\n0.\n07\n\n0.\n07\n\n0.\n04\n\n0.\n04\n\n0.\n01\n\n0.\n03\n\n0.\n00\n\n0.\n02\n\n0.\n00\n\n0.\n19\n\n0.\n13\n\nF\n0.\n\n13\n0.\n\n09\n0.\n\n15\n0.\n\n12\n0.\n\n13\n0.\n\n08\n0.\n\n08\n0.\n\n03\n0.\n\n06\n0.\n\n01\n0.\n\n04\n0.\n\n00\n0.\n\n29\n0.\n\n18\n\nw\nP\n\n-R\nT-\n\nF\nR\n\nP\n0.\n\n50\n0.\n\n34\n0.\n\n69\n0.\n\n40\n0.\n\n58\n0.\n\n29\n0.\n\n53\n0.\n\n16\n0.\n\n56\n0.\n\n06\n0.\n\n46\n0.\n\n00\n0.\n\n52\n0.\n\n28\nR\n\n0.\n05\n\n0.\n05\n\n0.\n08\n\n0.\n07\n\n0.\n06\n\n0.\n04\n\n0.\n03\n\n0.\n01\n\n0.\n03\n\n0.\n00\n\n0.\n02\n\n0.\n00\n\n0.\n17\n\n0.\n13\n\nF\n0.\n\n10\n0.\n\n09\n0.\n\n14\n0.\n\n12\n0.\n\n11\n0.\n\n08\n0.\n\n06\n0.\n\n03\n0.\n\n06\n0.\n\n01\n0.\n\n04\n0.\n\n00\n0.\n\n25\n0.\n\n18\n\n\n\n168\n\nTa\nbl\n\ne\nC\n\n.5\n:\n\nA\npp\n\nro\nac\n\nh\n2:\n\nP\nre\n\nci\nsi\n\non\nan\n\nd\nR\n\nec\nal\n\nl\n\nT\nyp\n\ne\nM\n\nea\nsu\n\nre\nB\n\n1\nB\n\n2\nB\n\n3\nB\n\n4\nB\n\n5\nB\n\n6\nB\n\nT\nM\n\nD\nM\n\nD\nM\n\nD\nM\n\nD\nM\n\nD\nM\n\nD\nM\n\nD\nP\n\n0.\n19\n\n0.\n31\n\n0.\n20\n\n0.\n40\n\n0.\n26\n\n0.\n19\n\n0.\n21\n\n0.\n11\n\n0.\n44\n\n0.\n06\n\n0.\n38\n\n0.\n00\n\n0.\n18\n\n0.\n24\n\nR\n0.\n\n15\n0.\n\n05\n0.\n\n18\n0.\n\n08\n0.\n\n21\n0.\n\n03\n0.\n\n10\n0.\n\n01\n0.\n\n18\n0.\n\n01\n0.\n\n13\n0.\n\n00\n0.\n\n44\n0.\n\n13\nF\n\n0.\n17\n\n0.\n09\n\n0.\n19\n\n0.\n13\n\n0.\n23\n\n0.\n06\n\n0.\n14\n\n0.\n02\n\n0.\n25\n\n0.\n01\n\n0.\n19\n\n0.\n00\n\n0.\n25\n\n0.\n16\n\nw\nP\n\nP\n0.\n\n19\n0.\n\n34\n0.\n\n23\n0.\n\n40\n0.\n\n35\n0.\n\n19\n0.\n\n21\n0.\n\n11\n0.\n\n56\n0.\n\n06\n0.\n\n38\n0.\n\n00\n0.\n\n21\n0.\n\n25\nR\n\n0.\n14\n\n0.\n06\n\n0.\n19\n\n0.\n08\n\n0.\n26\n\n0.\n03\n\n0.\n10\n\n0.\n01\n\n0.\n21\n\n0.\n01\n\n0.\n12\n\n0.\n00\n\n0.\n48\n\n0.\n13\n\nF\n0.\n\n16\n0.\n\n10\n0.\n\n21\n0.\n\n13\n0.\n\n30\n0.\n\n06\n0.\n\n13\n0.\n\n02\n0.\n\n31\n0.\n\n01\n0.\n\n18\n0.\n\n00\n0.\n\n29\n0.\n\n17\n\nF\nR\n\nP\n0.\n\n19\n0.\n\n31\n0.\n\n20\n0.\n\n40\n0.\n\n26\n0.\n\n23\n0.\n\n21\n0.\n\n11\n0.\n\n44\n0.\n\n06\n0.\n\n38\n0.\n\n00\n0.\n\n18\n0.\n\n25\nR\n\n0.\n15\n\n0.\n05\n\n0.\n17\n\n0.\n08\n\n0.\n20\n\n0.\n04\n\n0.\n10\n\n0.\n01\n\n0.\n17\n\n0.\n01\n\n0.\n12\n\n0.\n00\n\n0.\n41\n\n0.\n13\n\nF\n0.\n\n16\n0.\n\n09\n0.\n\n18\n0.\n\n13\n0.\n\n22\n0.\n\n06\n0.\n\n13\n0.\n\n02\n0.\n\n25\n0.\n\n01\n0.\n\n19\n0.\n\n00\n0.\n\n25\n0.\n\n17\n\nR\nT\n\nP\n0.\n\n12\n0.\n\n31\n0.\n\n14\n0.\n\n40\n0.\n\n19\n0.\n\n19\n0.\n\n16\n0.\n\n11\n0.\n\n38\n0.\n\n06\n0.\n\n31\n0.\n\n00\n0.\n\n13\n0.\n\n24\nR\n\n0.\n21\n\n0.\n05\n\n0.\n26\n\n0.\n08\n\n0.\n32\n\n0.\n03\n\n0.\n16\n\n0.\n01\n\n0.\n32\n\n0.\n01\n\n0.\n21\n\n0.\n00\n\n0.\n68\n\n0.\n13\n\nF\n0.\n\n16\n0.\n\n09\n0.\n\n19\n0.\n\n13\n0.\n\n24\n0.\n\n06\n0.\n\n16\n0.\n\n02\n0.\n\n34\n0.\n\n01\n0.\n\n25\n0.\n\n00\n0.\n\n22\n0.\n\n16\n\nw\nP\n\n-R\nT\n\nP\n0.\n\n12\n0.\n\n34\n0.\n\n17\n0.\n\n40\n0.\n\n29\n0.\n\n19\n0.\n\n16\n0.\n\n11\n0.\n\n50\n0.\n\n06\n0.\n\n31\n0.\n\n00\n0.\n\n16\n0.\n\n25\nR\n\n0.\n18\n\n0.\n06\n\n0.\n27\n\n0.\n08\n\n0.\n41\n\n0.\n03\n\n0.\n14\n\n0.\n01\n\n0.\n36\n\n0.\n01\n\n0.\n18\n\n0.\n00\n\n0.\n73\n\n0.\n13\n\nF\n0.\n\n15\n0.\n\n10\n0.\n\n21\n0.\n\n13\n0.\n\n34\n0.\n\n06\n0.\n\n15\n0.\n\n02\n0.\n\n42\n0.\n\n01\n0.\n\n23\n0.\n\n00\n0.\n\n27\n0.\n\n17\n\nR\nT-\n\nF\nR\n\nP\n0.\n\n12\n0.\n\n31\n0.\n\n14\n0.\n\n40\n0.\n\n19\n0.\n\n23\n0.\n\n16\n0.\n\n11\n0.\n\n38\n0.\n\n06\n0.\n\n31\n0.\n\n00\n0.\n\n13\n0.\n\n25\nR\n\n0.\n19\n\n0.\n05\n\n0.\n24\n\n0.\n08\n\n0.\n29\n\n0.\n04\n\n0.\n14\n\n0.\n01\n\n0.\n29\n\n0.\n01\n\n0.\n19\n\n0.\n00\n\n0.\n62\n\n0.\n13\n\nF\n0.\n\n15\n0.\n\n09\n0.\n\n18\n0.\n\n13\n0.\n\n23\n0.\n\n06\n0.\n\n15\n0.\n\n02\n0.\n\n32\n0.\n\n01\n0.\n\n24\n0.\n\n00\n0.\n\n22\n0.\n\n17\n\nw\nP\n\n-F\nR\n\nP\n0.\n\n19\n0.\n\n34\n0.\n\n23\n0.\n\n40\n0.\n\n35\n0.\n\n23\n0.\n\n21\n0.\n\n11\n0.\n\n56\n0.\n\n06\n0.\n\n38\n0.\n\n00\n0.\n\n21\n0.\n\n26\nR\n\n0.\n14\n\n0.\n06\n\n0.\n18\n\n0.\n07\n\n0.\n25\n\n0.\n04\n\n0.\n09\n\n0.\n01\n\n0.\n20\n\n0.\n01\n\n0.\n11\n\n0.\n00\n\n0.\n45\n\n0.\n13\n\nF\n0.\n\n16\n0.\n\n10\n0.\n\n20\n0.\n\n13\n0.\n\n29\n0.\n\n06\n0.\n\n13\n0.\n\n02\n0.\n\n30\n0.\n\n01\n0.\n\n18\n0.\n\n00\n0.\n\n28\n0.\n\n18\n\nw\nP\n\n-R\nT-\n\nF\nR\n\nP\n0.\n\n12\n0.\n\n34\n0.\n\n17\n0.\n\n40\n0.\n\n29\n0.\n\n23\n0.\n\n16\n0.\n\n11\n0.\n\n50\n0.\n\n06\n0.\n\n31\n0.\n\n00\n0.\n\n16\n0.\n\n26\nR\n\n0.\n17\n\n0.\n06\n\n0.\n25\n\n0.\n07\n\n0.\n38\n\n0.\n04\n\n0.\n12\n\n0.\n01\n\n0.\n33\n\n0.\n01\n\n0.\n17\n\n0.\n00\n\n0.\n67\n\n0.\n13\n\nF\n0.\n\n14\n0.\n\n10\n0.\n\n20\n0.\n\n13\n0.\n\n33\n0.\n\n06\n0.\n\n14\n0.\n\n02\n0.\n\n40\n0.\n\n01\n0.\n\n22\n0.\n\n00\n0.\n\n26\n0.\n\n18\n\n\n\n169\n\nTa\nbl\n\ne\nC\n\n.6\n:\n\nA\npp\n\nro\nac\n\nh\n3:\n\nP\nre\n\nci\nsi\n\non\nan\n\nd\nR\n\nec\nal\n\nl\n\nT\nyp\n\ne\nM\n\nea\nsu\n\nre\nB\n\n1\nB\n\n2\nB\n\n3\nB\n\n4\nB\n\n5\nB\n\n6\nB\n\nT\nM\n\nD\nM\n\nD\nM\n\nD\nM\n\nD\nM\n\nD\nM\n\nD\nM\n\nD\nP\n\n0.\n22\n\n0.\n31\n\n0.\n20\n\n0.\n40\n\n0.\n29\n\n0.\n19\n\n0.\n32\n\n0.\n11\n\n0.\n31\n\n0.\n06\n\n0.\n46\n\n0.\n00\n\n0.\n20\n\n0.\n24\n\nR\n0.\n\n08\n0.\n\n05\n0.\n\n08\n0.\n\n08\n0.\n\n11\n0.\n\n03\n0.\n\n07\n0.\n\n01\n0.\n\n06\n0.\n\n01\n0.\n\n07\n0.\n\n00\n0.\n\n23\n0.\n\n13\nF\n\n0.\n12\n\n0.\n09\n\n0.\n12\n\n0.\n13\n\n0.\n16\n\n0.\n06\n\n0.\n12\n\n0.\n02\n\n0.\n10\n\n0.\n01\n\n0.\n12\n\n0.\n00\n\n0.\n21\n\n0.\n16\n\nw\nP\n\nP\n0.\n\n22\n0.\n\n34\n0.\n\n20\n0.\n\n40\n0.\n\n29\n0.\n\n26\n0.\n\n32\n0.\n\n16\n0.\n\n31\n0.\n\n06\n0.\n\n46\n0.\n\n00\n0.\n\n20\n0.\n\n27\nR\n\n0.\n08\n\n0.\n06\n\n0.\n08\n\n0.\n07\n\n0.\n11\n\n0.\n04\n\n0.\n07\n\n0.\n02\n\n0.\n06\n\n0.\n01\n\n0.\n07\n\n0.\n00\n\n0.\n23\n\n0.\n13\n\nF\n0.\n\n12\n0.\n\n10\n0.\n\n12\n0.\n\n12\n0.\n\n16\n0.\n\n07\n0.\n\n12\n0.\n\n03\n0.\n\n10\n0.\n\n01\n0.\n\n12\n0.\n\n00\n0.\n\n21\n0.\n\n18\n\nF\nR\n\nP\n0.\n\n47\n0.\n\n31\n0.\n\n54\n0.\n\n40\n0.\n\n48\n0.\n\n23\n0.\n\n42\n0.\n\n11\n0.\n\n31\n0.\n\n06\n0.\n\n46\n0.\n\n00\n0.\n\n41\n0.\n\n25\nR\n\n0.\n06\n\n0.\n05\n\n0.\n08\n\n0.\n07\n\n0.\n06\n\n0.\n04\n\n0.\n03\n\n0.\n01\n\n0.\n02\n\n0.\n01\n\n0.\n03\n\n0.\n00\n\n0.\n17\n\n0.\n12\n\nF\n0.\n\n11\n0.\n\n09\n0.\n\n14\n0.\n\n12\n0.\n\n11\n0.\n\n06\n0.\n\n06\n0.\n\n02\n0.\n\n04\n0.\n\n01\n0.\n\n05\n0.\n\n00\n0.\n\n24\n0.\n\n17\n\nR\nT\n\nP\n0.\n\n16\n0.\n\n31\n0.\n\n14\n0.\n\n40\n0.\n\n19\n0.\n\n19\n0.\n\n26\n0.\n\n11\n0.\n\n25\n0.\n\n06\n0.\n\n31\n0.\n\n00\n0.\n\n14\n0.\n\n24\nR\n\n0.\n08\n\n0.\n05\n\n0.\n08\n\n0.\n08\n\n0.\n10\n\n0.\n03\n\n0.\n08\n\n0.\n01\n\n0.\n06\n\n0.\n01\n\n0.\n06\n\n0.\n00\n\n0.\n23\n\n0.\n13\n\nF\n0.\n\n11\n0.\n\n09\n0.\n\n10\n0.\n\n13\n0.\n\n13\n0.\n\n06\n0.\n\n12\n0.\n\n02\n0.\n\n10\n0.\n\n01\n0.\n\n11\n0.\n\n00\n0.\n\n18\n0.\n\n16\n\nw\nP\n\n-R\nT\n\nP\n0.\n\n16\n0.\n\n34\n0.\n\n14\n0.\n\n40\n0.\n\n19\n0.\n\n26\n0.\n\n26\n0.\n\n16\n0.\n\n25\n0.\n\n06\n0.\n\n31\n0.\n\n00\n0.\n\n14\n0.\n\n27\nR\n\n0.\n08\n\n0.\n06\n\n0.\n08\n\n0.\n07\n\n0.\n10\n\n0.\n04\n\n0.\n08\n\n0.\n02\n\n0.\n06\n\n0.\n01\n\n0.\n06\n\n0.\n00\n\n0.\n23\n\n0.\n13\n\nF\n0.\n\n11\n0.\n\n10\n0.\n\n10\n0.\n\n12\n0.\n\n13\n0.\n\n07\n0.\n\n12\n0.\n\n03\n0.\n\n10\n0.\n\n01\n0.\n\n11\n0.\n\n00\n0.\n\n18\n0.\n\n18\n\nR\nT-\n\nF\nR\n\nP\n0.\n\n41\n0.\n\n31\n0.\n\n46\n0.\n\n40\n0.\n\n35\n0.\n\n23\n0.\n\n37\n0.\n\n11\n0.\n\n25\n0.\n\n06\n0.\n\n31\n0.\n\n00\n0.\n\n34\n0.\n\n25\nR\n\n0.\n07\n\n0.\n05\n\n0.\n08\n\n0.\n07\n\n0.\n06\n\n0.\n04\n\n0.\n04\n\n0.\n01\n\n0.\n02\n\n0.\n01\n\n0.\n02\n\n0.\n00\n\n0.\n17\n\n0.\n12\n\nF\n0.\n\n12\n0.\n\n09\n0.\n\n14\n0.\n\n12\n0.\n\n10\n0.\n\n06\n0.\n\n07\n0.\n\n02\n0.\n\n04\n0.\n\n01\n0.\n\n04\n0.\n\n00\n0.\n\n23\n0.\n\n17\n\nw\nP\n\n-F\nR\n\nP\n0.\n\n47\n0.\n\n34\n0.\n\n54\n0.\n\n40\n0.\n\n48\n0.\n\n29\n0.\n\n42\n0.\n\n16\n0.\n\n31\n0.\n\n06\n0.\n\n46\n0.\n\n00\n0.\n\n41\n0.\n\n28\nR\n\n0.\n06\n\n0.\n05\n\n0.\n08\n\n0.\n07\n\n0.\n06\n\n0.\n04\n\n0.\n03\n\n0.\n01\n\n0.\n02\n\n0.\n00\n\n0.\n03\n\n0.\n00\n\n0.\n17\n\n0.\n13\n\nF\n0.\n\n11\n0.\n\n09\n0.\n\n14\n0.\n\n12\n0.\n\n11\n0.\n\n08\n0.\n\n06\n0.\n\n03\n0.\n\n04\n0.\n\n01\n0.\n\n05\n0.\n\n00\n0.\n\n24\n0.\n\n18\n\nw\nP\n\n-R\nT-\n\nF\nR\n\nP\n0.\n\n41\n0.\n\n34\n0.\n\n46\n0.\n\n40\n0.\n\n35\n0.\n\n29\n0.\n\n37\n0.\n\n16\n0.\n\n25\n0.\n\n06\n0.\n\n31\n0.\n\n00\n0.\n\n34\n0.\n\n28\nR\n\n0.\n07\n\n0.\n05\n\n0.\n08\n\n0.\n07\n\n0.\n06\n\n0.\n04\n\n0.\n04\n\n0.\n01\n\n0.\n02\n\n0.\n00\n\n0.\n02\n\n0.\n00\n\n0.\n17\n\n0.\n13\n\nF\n0.\n\n12\n0.\n\n09\n0.\n\n14\n0.\n\n12\n0.\n\n10\n0.\n\n08\n0.\n\n07\n0.\n\n03\n0.\n\n04\n0.\n\n01\n0.\n\n04\n0.\n\n00\n0.\n\n23\n0.\n\n18\n\n\n\tAcknowledgements\n\tAbstract\n\tResumo\n\tList of Figures\n\tList of Tables\n\tList of Abbreviations and Acronyms\n\tContents\n\t1 INTRODUCTION\n\t1.1 Why Combining Ontology &amp; HCI\n\t1.2 Dissertation Overview &amp; Main Ideas\n\t1.3 Research Contributions\n\t1.4 Structure of this dissertation\n\n\t2 VISUAL QUERY SYSTEMS and issues in HCI: fundamentals \n\t2.1 Interaction Design\n\t2.1.1 Research Methods and Techniques\n\n\t2.2 Information Visualization\n\t2.3 Sensemaking\n\t2.4 User Interface for Search\n\t2.4.1 Interfaces of Flow\n\n\t2.5 Visual Query Systems\n\t2.5.1 Visual Query Definition\n\t2.5.2 Visual Result Set Presentation\n\n\t2.6 Four Ontology-based VQS\n\t2.6.1 PetroQuery\"472\n\t2.6.2 Graphical RQL\n\t2.6.3 VisualSPEED\n\t2.6.4 OptiqueVQS\n\n\t2.7 Summary\n\n\t3 ONTOLOGY, UFO AND Ontology Visualization\n\t3.1 Ontology\n\t3.1.1 Definition\n\n\t3.2 Foundational Ontologies and UFO\n\t3.3 Ontology Visualization\n\n\t4 SUB ONTOLOGY EXTRACTION\n\t4.1 Query-based Methods\n\t4.1.1 vSPARQL\n\t4.1.2 KAON views\n\t4.1.3 RVL\n\t4.1.4 SAIQL\n\n\t4.2 Network Partitioning\n\t4.2.1 Structure based partitioning\n\t4.2.2 Automated Partitioning using E-connections\n\n\t4.3 Traversal Approach\n\t4.3.1 PROMPT\n\t4.3.2 MOVE\n\n\t4.4 Discussion\n\n\t5 DOMAIN ONTOLOGY FOR DIAGENESIS AND MICROSTRUCTURAL\n\t5.1 Diagenesis and Microstructural Analysis\n\t5.2 Domain Ontology of Case Study\n\t5.2.1 Discussion\n\n\n\t6 ONTOLOGY VIEW: A PROPOSAL\n\t6.1 Well Founded Ontology View\n\t6.1.1 Basic Definitions\n\t6.1.2 View\n\t6.1.3 Conservation Principles\n\n\t6.2 Sub-Ontology Extraction Algorithm\n\t6.3 Summary\n\n\t7 ONTOLOGY VIEW BASED QUERY SYSTEM FOR RESERVOIR PETROGRAPHY\n\t7.1 OVUFO Visualizer\n\t7.2 RockQuery Architecture\n\t7.3 Functional Requirements\n\t7.4 RockQuery Functionalities Description\n\t7.4.1 Exploration Panel\n\t7.4.2 Processing Panel\n\t7.4.3 Analysis Panel\n\t7.4.4 Application of RockQuery in a case study\n\n\t7.5 Core Design Rationale\n\t7.6 Implementation and Development\n\t7.6.1 Data Persistence\n\n\t7.7 Rock Query Limitations\n\t7.8 Discussion\n\n\t8 EVALUATION OF RESULTS\n\t8.1 Generated subset Evaluation\n\t8.1.1 Evaluation of the Ontology View for Diagenesis\n\t8.1.2 Evaluation of the Ontology View for Microstructural\n\t8.1.3 Summary of results\n\n\t8.2 RockQuery System Evaluation\n\n\t9 CONCLUSION &amp; FUTURE DIRECTIONS\n\t9.1 Novel Contributions of the Dissertation\n\t9.2 Future Research Directions\n\n\tReferences\n\tAppendices\n\tAppendixA   PRELIMINARY PETROQUERY\"472 STUDY\n\tA.1 Conceptual Analysis\n\tA.1.1 Analysis of Petroledge Knowledge Model\n\tA.1.2 Analysis of Query History\n\n\tA.2 Experimentation\n\tA.2.1 Definition\n\tA.2.2 Design\n\tA.2.3 Implementation and Execution\n\n\tA.3 Results\n\tA.3.1 Interview Analysis\n\tA.3.2 Observation Analysis\n\n\n\tAppendixB  DESIGN ALTERNATIVES\n\tAppendixC   TABLE RESULTS"}]}}}