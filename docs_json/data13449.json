{"add": {"doc": {"field": [{"@name": "docid", "#text": "BR-TU.17248"}, {"@name": "filename", "#text": "24027_DissertacaoFinal_Grace.pdf"}, {"@name": "filetype", "#text": "PDF"}, {"@name": "text", "#text": "Fluxo de dados em redes de Petri \ncoloridas e em grafos orientados a \n\natores \n \n\n \n\nGrace Anne Pontes Borges \n \n\n \n\n \n\n \nDISSERTA\u00c7\u00c3O APRESENTADA \n\nAO \nINSTITUTO DE MATEM\u00c1TICA E ESTAT\u00cdSTICA \n\nDA \nUNIVERSIDADE DE S\u00c3O PAULO \n\nPARA \nOBTEN\u00c7\u00c3O DO T\u00cdTULO \n\nDE \nMESTRE EM CI\u00caNCIAS \n\n \n \n \n \n\n\u00c1rea de Concentra\u00e7\u00e3o: Ci\u00eancia da Computa\u00e7\u00e3o \n\nOrientador: Prof. Dr. Jo\u00e3o Eduardo Ferreira \n\n \n\n \n\n- S\u00e3o Paulo, outubro de 2008 - \n\n \n\n\n\n\n\n \n \n \n \n\nFluxo de dados em redes de Petri \ncoloridas e em grafos orientados a \n\natores \n \n\n \n\n \n\n \n\n \n\nEste exemplar corresponde \u00e0 reda\u00e7\u00e3o final da \n\ndisserta\u00e7\u00e3o devidamente corrigida e defendida por \n\nGrace Anne Pontes Borges e aprovada pela \n\nComiss\u00e3o Julgadora. \n\n \n\n \n\n \n\nS\u00e3o Paulo, 09 de outubro de 2008. \n\n \n\n \n\n \n\n \n\n \n\n \n\nBanca Examinadora: \n\n\u2022 Prof. Dr. Jo\u00e3o Eduardo Ferreira (orientador) - IME-USP \n\n\u2022 Prof. Dr. Roberto Hirata Junior - IME/USP \n\n\u2022 Prof. Dr. Jorge Rady de Almeida Junior - EP/USP \n\n \n\n\n\n\n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\nAo meu marido Jos\u00e9 Paulo \n\npor sua compreens\u00e3o, incentivo e \n\ncompanheirismo na concretiza\u00e7\u00e3o \n\ndeste trabalho. \n\n \n\n \n\n\n\n\n\n \n\n \n\n \n \n \n\nAgradecimentos \n \n\nAo meu orientador, Prof. Dr. Jo\u00e3o Eduardo Ferreira, pelos ensinamentos, aten\u00e7\u00e3o e apoio. Seu exemplo de \n\nexcelente professor e profissional despertou meu interesse pelo mestrado. Obrigada pela oportunidade, confian\u00e7a \n\nno meu trabalho e paci\u00eancia nos momentos dif\u00edceis. \n\nAgrade\u00e7o especialmente \u00e0 minha m\u00e3e por tudo que me ensinou ainda em vida e por tudo que ainda aprendo \n\ncom ela depois de sua partida. Sei que, onde estiver, sempre torcer\u00e1 por mim. Obrigada D. Neila. \n\nAo imenso carinho, apoio e dedica\u00e7\u00e3o do meu pai Herivelto e sua esposa Joelma. Aos meus irm\u00e3os, por todo \n\nincentivo nessa caminhada, pelas palavras de conforto nos momentos dif\u00edceis, pelos conselhos, orienta\u00e7\u00f5es e \n\ncontribui\u00e7\u00f5es para este trabalho, cada um \u00e0 sua maneira, provando que dist\u00e2ncia f\u00edsica n\u00e3o \u00e9 problema quando \n\nqueremos estar presentes na vida de quem amamos.  \n\nAo meu marido Jos\u00e9 Paulo, grande incentivador deste e de todos meus projetos de vida, por tudo o que \n\ncompartilhamos diariamente, inclusive sua fam\u00edlia, que tamb\u00e9m tem sido a minha. \n\nAos professores Cristina Gomes Fernandes e Roberto Hirata Jr. pelos coment\u00e1rios feitos em meu exame de \n\nqualifica\u00e7\u00e3o, contribuindo para o enriquecimento desta disserta\u00e7\u00e3o. \n\nAos amigos do IME-USP, Ana Beatriz Graciano, Arnaldo C\u00e2mara Lara, David da Silva Pires, M\u00e1rcio \n\nKatsumi Oikawa e William Tankiti Yamamoto pelo companheirismo e pelas contribui\u00e7\u00f5es diretas ou indiretas a \n\neste mestrado. Em especial, agrade\u00e7o a Kelly Rosa Braghetto e Pedro Losco Takecian por todo apoio dado, pelo \n\nque me ensinaram, por estarem ao meu lado em momentos dif\u00edceis, compartilhando tamb\u00e9m os momentos bons e \n\npor toda a ajuda na realiza\u00e7\u00e3o deste trabalho. \n\nAos colegas de trabalho e amigos professores da FATEC-SP, por acreditarem no meu trabalho e me \n\nincentivarem cada vez mais na carreira acad\u00eamica. \n\nAos meus amigos da turma FATEC-PD/97 e \u201cagregados\u201d, pela for\u00e7a, carinho e momentos de descontra\u00e7\u00e3o. \n\nAos amigos da Associa\u00e7\u00e3o ARAC\u00ca pelos v\u00e1rios momentos de reflex\u00e3o e compreens\u00e3o sobre a import\u00e2ncia \n\ndeste trabalho na minha vida, cada pensamento positivo, cada demonstra\u00e7\u00e3o de carinho, especialmente a Ana \n\nSeno e Marcelo Rouanet, que, al\u00e9m de amigos muito queridos, contribu\u00edram com a revis\u00e3o deste texto. \n\nA todos que contribu\u00edram e acompanharam este trabalho de diferentes maneiras. \n\n \n\n\n\n \n\n \n\n \n\n \n\n \n\n \n\n \n \n\n\n\n \n\n \n\n \n \n \n \n \n\nResumo \n \n\nH\u00e1 tr\u00eas d\u00e9cadas, os sistemas de informa\u00e7\u00e3o corporativos eram projetados para apoiar a execu\u00e7\u00e3o de tarefas \n\npontuais. Atualmente, esses sistemas tamb\u00e9m precisam gerenciar os fluxos de trabalho (workflows) e processos \n\nde neg\u00f3cio de uma organiza\u00e7\u00e3o. Em comunidades cient\u00edficas de f\u00edsicos, astr\u00f4nomos, bi\u00f3logos, ge\u00f3logos, entre \n\noutras, seus sistemas de informa\u00e7\u00f5es distinguem-se dos existentes em ambientes corporativos por: tarefas \n\nrepetitivas (como re-execu\u00e7\u00e3o de um mesmo experimento), processamento de dados brutos em resultados \n\nadequados para publica\u00e7\u00e3o; e controle de condu\u00e7\u00e3o de experimentos em diferentes ambientes de hardware e \n\nsoftware.  \n\nAs diferentes caracter\u00edsticas dos dois ambientes \u2013 corporativo e cient\u00edfico \u2013 propiciam que ferramentas e \n\nformalismos existentes ou priorizem o controle de fluxo de tarefas, ou o controle de fluxo de dados. Entretanto, \n\nh\u00e1 situa\u00e7\u00f5es em que \u00e9 preciso atender simultaneamente ao controle de transfer\u00eancia de dados e ao controle de \n\nfluxo de tarefas. \n\nEste trabalho visa caracterizar e delimitar o controle e representa\u00e7\u00e3o do fluxo de dados em processos de \n\nneg\u00f3cios e workflows cient\u00edficos. Para isso, s\u00e3o comparadas as ferramentas CPN Tools e KEPLER, que est\u00e3o \n\nfundamentadas em dois formalismos: redes de Petri coloridas e grafos de workflow orientados a atores, \n\nrespectivamente. A compara\u00e7\u00e3o \u00e9 feita por meio de implementa\u00e7\u00f5es de casos pr\u00e1ticos, usando os padr\u00f5es de \n\ncontrole de dados como base de compara\u00e7\u00e3o entre as ferramentas. \n\n \n\nPalavras-chave: redes de Petri coloridas, CPN Tools, workflows cient\u00edficos, KEPLER, padr\u00f5es de fluxo de \n\ndados, grafos de workflow orientados a atores \n\n \n \n\n\n\n\n\n \n\n \n\n \n \n \n \n \n\nAbstract \n \n\nThree decades ago, business information systems were designed to support the execution of individual tasks. \n\nToday\u2019s information systems also need to support the organizational workflows and business processes. In \n\nscientific communities composed by physicists, astronomers, biologists, geologists, among others, information \n\nsystems have different characteristics from those existing in business environments, like: repetitive procedures \n\n(such as re-execution of an experiment), transforming raw data into publishable results; and coordinating the \n\nexecution of experiments in several different software and hardware environments. \n\nThe different characteristics of business and scientific environments propitiate the existence of tools and \n\nformalisms that emphasize control-flow or dataflow. However, there are situations where we must \n\nsimultaneously handle the data transfer and control-flow. \n\nThis work aims to characterize and define the dataflow representation and control in business processes and \n\nscientific workflows. In order to achieve this, two tools are being compared: CPN Tools and KEPLER, which \n\nare based in the formalisms: colored Petri nets and actors-oriented workflow graphs, respectively. The \n\ncomparison will be done through implementation of practical cases, using the dataflow patterns as comparison \n\nbasis. \n\n   \n\nKeywords: colored Petri nets, CPN Tools, scientific workflows, KEPLER, dataflow patterns, actors-oriented \n\nworkflow graphs \n\n \n \n\n \n\n \n \n\n\n\n\n\n \n\n i \n\n \n \n \n \n \n\nSum\u00e1rio \n \n \n \n \n\nLISTA DE FIGURAS ....................................................................................................................................III \n\nLISTA DE TABELAS .................................................................................................................................... V \n\n1 INTRODU\u00c7\u00c3O............................................................................................................................................. 1 \n\n1.1. MOTIVA\u00c7\u00c3O............................................................................................................................................ 1 \n\n1.2. OBJETIVO ................................................................................................................................................ 2 \n\n1.3. CONTRIBUI\u00c7\u00d5ES...................................................................................................................................... 2 \n\n1.4. ORGANIZA\u00c7\u00c3O DO TEXTO ....................................................................................................................... 2 \n\n2 FUNDAMENTOS ......................................................................................................................................... 3 \n\n2.1. CONCEITOS DE WORKFLOW...................................................................................................................... 3 \n\n2.2. REDES DE PETRI ...................................................................................................................................... 5 \n\n2.2.1. Redes de Petri coloridas (rdPc) ....................................................................................................... 7 \n\n2.2.2. Defini\u00e7\u00e3o formal de redes de Petri coloridas.................................................................................... 7 \n\n2.3. WORKFLOWS CIENT\u00cdFICOS ...................................................................................................................... 11 \n\n2.3.1. Grafos de workflow hier\u00e1rquico orientado a atores........................................................................ 12 \n\n2.3.2. Modelos de computa\u00e7\u00e3o................................................................................................................. 14 \n\n2.4. CONCLUS\u00c3O.......................................................................................................................................... 15 \n\n\n\nii  SUM\u00c1RIO \n\n \n\n3 FERRAMENTAS PARA WORKFLOWS .................................................................................................. 17 \n\n3.1. CPN TOOLS ........................................................................................................................................... 17 \n\n3.1.1. Constru\u00e7\u00e3o e edi\u00e7\u00e3o de rdPc ......................................................................................................... 17 \n\n3.1.2. Processos de neg\u00f3cios em CPN Tools ............................................................................................ 19 \n\n3.2. SISTEMA KEPLER ................................................................................................................................ 20 \n\n3.2.1. Constru\u00e7\u00e3o e edi\u00e7\u00e3o de workflows cient\u00edficos ................................................................................ 21 \n\n3.2.2. Workflow cient\u00edfico no sistema KEPLER........................................................................................ 22 \n\n3.3. CONCLUS\u00c3O.......................................................................................................................................... 24 \n\n4 PADR\u00d5ES DE CONTROLE DE DADOS EM CPN TOOLS E KEPLER ................................................ 25 \n\n4.1. PADR\u00d5ES DE CONTROLE DE DADOS........................................................................................................ 25 \n\n4.2. REPRESENTA\u00c7\u00c3O DOS PADR\u00d5ES DE CONTROLE DE DADOS ..................................................................... 27 \n\n4.2.1. Padr\u00f5es de intera\u00e7\u00e3o de dados \u2013 grupo II ...................................................................................... 27 \n\n4.2.2. Padr\u00f5es de roteamento baseado em dados (controle de fluxo de tarefas) - grupo IV....................... 34 \n\n4.3. CONCLUS\u00c3O.......................................................................................................................................... 48 \n\n5 CONCLUS\u00c3O ............................................................................................................................................ 51 \n\n5.1. PRINCIPAIS CONTRIBUI\u00c7\u00d5ES .................................................................................................................. 51 \n\n5.2. SUGEST\u00d5ES PARA PESQUISAS FUTURAS ................................................................................................. 52 \n\nREFER\u00caNCIAS BIBLIOGR\u00c1FICAS .......................................................................................................... 53 \n\n \n\n \n\n\n\n \n\n iii \n\n \n \n \n \n \n\nLista de Figuras \n \n \n \n\n 2.1. COMPONENTES DE UM WORKFLOW [1]..................................................................................................... 4 \n\n 2.2. REDE DE PETRI PARA ATENDIMENTO A RECLAMA\u00c7\u00d5ES ........................................................................... 6 \n\n 2.3. DISPARO DA TRANSI\u00c7\u00c3O REGISTRAR........................................................................................................ 6 \n\n 2.4. REDE DE PETRI COLORIDA PARA ATENDIMENTO A RECLAMA\u00c7\u00d5ES ........................................................ 10 \n\n 2.5. GRAFO DE WORKFLOW .......................................................................................................................... 13 \n\n 2.6. GRAFO DE WORKFLOW \u2013 ABSTRA\u00c7\u00c3O (AW1) E REFINAMENTO (W1) ........................................................ 14 \n\n 3.1. INTERFACE CPN TOOLS ........................................................................................................................ 18 \n\n 3.2. EXEMPLO DE ATENDIMENTO DE RECLAMA\u00c7\u00d5ES USANDO CPN TOOLS ................................................... 19 \n\n 3.3. EXEMPLO DE ATENDIMENTO DE RECLAMA\u00c7\u00d5ES AP\u00d3S 20 TRANSI\u00c7\u00d5ES .................................................. 20 \n\n 3.4. EXEMPLO DE WORKFLOW ORIENTADO A ATOR REPRESENTADO NO SISTEMA KEPLER ........................... 23 \n\n 3.5. DETALHAMENTO DO ATOR COMPOSTO ESTAT\u00cdSTICA .............................................................................. 23 \n\n 4.1. CANAIS DE CONTROLE DE FLUXO E CONTROLE DE DADOS INTEGRADOS[1] ............................................ 27 \n\n 4.2. CANAIS DE DADOS DISTINTOS [1].......................................................................................................... 27 \n\n 4.3. SEM PASSAGEM DE DADOS [1] .............................................................................................................. 28 \n\n 4.4. ABORDAGENS PARA INTERA\u00c7\u00c3O DE DADOS ENTRE TAREFAS NO CPN TOOLS ........................................ 28 \n\n 4.5. ABORDAGENS PARA INTERA\u00c7\u00c3O DE DADOS ENTRE TAREFAS NO SISTEMA KEPLER .............................. 29 \n\n 4.6. INTERA\u00c7\u00c3O BLOCO DE TAREFAS - SUBWORKFLOW COM PASSAGEM DE DADOS IMPL\u00cdCITA [1].................. 30 \n\n 4.7. PASSAGEM DE DADOS EXPL\u00cdCITA VIA PAR\u00c2METROS [1]......................................................................... 30 \n\n\n\niv  LISTA DE FIGURAS \n\n \n\n 4.8. PASSAGEM DE DADOS EXPL\u00cdCITA VIA CANAIS DE DADOS [1] ................................................................. 31 \n\n 4.9. EXEMPLO DE BLOCOS DE TAREFA, OU SUPER-NODOS, EM CPN TOOLS ................................................... 31 \n\n 4.10. SUBWORKFLOW EM CPN TOOLS........................................................................................................... 32 \n\n 4.11. EXEMPLO DE BLOCOS DE TAREFA, OU ATOR COMPOSTO NO SISTEMA KEPLER ................................... 32 \n\n 4.12. SUBWORKFLOW DEMANDAESTOQUE. .................................................................................................. 33 \n\n 4.13. SUBWORKFLOW ATENDEDEMANDA..................................................................................................... 33 \n\n 4.14. PR\u00c9-CONDI\u00c7\u00c3O DE TAREFA \u2013 EXIST\u00caNCIA DE DADOS [1] ..................................................................... 34 \n\n 4.15. PR\u00c9-CONDI\u00c7\u00c3O DE TAREFA \u2013 EXIST\u00caNCIA DE DADOS EM CPN TOOLS .................................................. 35 \n\n 4.16. PR\u00c9-CONDI\u00c7\u00c3O DE TAREFA \u2013 EXIST\u00caNCIA DE DADOS EM CPN TOOLS .................................................. 35 \n\n 4.17. PR\u00c9-CONDI\u00c7\u00c3O DE TAREFA \u2013 EXIST\u00caNCIA DE DADOS \u2013 SISTEMA KEPLER COM DIRETOR SDF ............ 36 \n\n 4.18. PR\u00c9-CONDI\u00c7\u00c3O DE TAREFA \u2013 EXIST\u00caNCIA DE DADOS \u2013 SISTEMA KEPLER COM DIRETOR PN .............. 37 \n\n 4.19. PR\u00c9-CONDI\u00c7\u00c3O DE TAREFA \u2013 VALOR DE DADOS \u2013 CPN TOOLS ............................................................ 38 \n\n 4.20. PR\u00c9-CONDI\u00c7\u00c3O DE TAREFA \u2013 VALOR DE DADOS \u2013 KEPLER ................................................................ 39 \n\n 4.21. P\u00d3S-CONDI\u00c7\u00c3O DE TAREFA \u2013 EXIST\u00caNCIA DE DADOS [1] ..................................................................... 40 \n\n 4.22. GATILHO DE TAREFA BASEADO EM EVENTO [1]................................................................................... 41 \n\n 4.23. GATILHO DE TAREFA BASEADO EM DADOS [1] .................................................................................... 42 \n\n 4.24. GATILHO DE TAREFA BASEADO EM EVENTO ........................................................................................ 43 \n\n 4.25. AP\u00d3S REABASTECIMENTO................................................................................................................... 43 \n\n 4.26. QUANTIDADE DE ITENS ABAIXO DO VALOR M\u00cdNIMO ............................................................................ 43 \n\n 4.28. ROTEAMENTO BASEADO EM DADOS [1]............................................................................................... 46 \n\n 4.29. ROTEAMENTO BASEADO EM DADOS - CPN TOOLS ............................................................................... 47 \n\n 4.30. ROTEAMENTO BASEADO EM DADOS - SISTEMA KEPLER .................................................................... 48 \n\n \n\n\n\n \n\n v \n\n \n \n \n \n \n\nLista de Tabelas \n \n \n \n\n2.1. EQUIVAL\u00caNCIA DE TERMINOLOGIAS .......................................................................................................... 16 \n\n3.1. PRIMITIVAS B\u00c1SICAS DE PROJETO ORIENTADO A ATOR [24]........................................................................ 21 \n\n4.1. PADR\u00d5ES DE INTERA\u00c7\u00c3O DE DADOS INTERNOS DO WORKFLOW (GRUPO II) ................................................. 49 \n\n4.2. PADR\u00d5ES DE ROTEAMENTO BASEADO EM DADOS (CONTROLE DE FLUXO) (GRUPO IV) ................................ 50 \n\n \n\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n\n\n\n\n\n \n\n 1 \n\n \n \n \n \nCap\u00edtulo 1 \n\n \n \n \n \n\nIntrodu\u00e7\u00e3o \n \n1.1. Motiva\u00e7\u00e3o \n\nTradicionalmente, sistemas de informa\u00e7\u00e3o corporativos eram projetados para apoiar a execu\u00e7\u00e3o de tarefas \n\npontuais. Atualmente, esses sistemas de informa\u00e7\u00e3o tamb\u00e9m precisam controlar, monitorar e apoiar o \n\ngerenciamento de processos de neg\u00f3cio e fluxos de trabalho (workflows) [3].  \n\nEm comunidades cient\u00edficas de f\u00edsicos, astr\u00f4nomos, bi\u00f3logos, ge\u00f3logos, entre outras, os sistemas de \n\ninforma\u00e7\u00f5es diferem dos existentes em ambientes corporativos nos seguintes aspectos: realizam tarefas \n\nrepetitivas como re-execu\u00e7\u00e3o de um mesmo experimento; transformam dados brutos em resultados adequados \n\npara publica\u00e7\u00e3o; e controlam experimentos em diferentes ambientes de hardware e software. Para diferenciar \n\nworkflows utilizados em ambientes corporativos dos cient\u00edficos foi criado o termo workflows cient\u00edficos [21]. \n\nAo analisarmos projetos e modelos de execu\u00e7\u00e3o no gerenciamento de processos de neg\u00f3cios, a prioridade \u00e9 o \n\ncontrole de fluxo das tarefas, enquanto o fluxo de dados propriamente dito geralmente fica em segundo plano. \n\nPor outro lado, sistemas de workflows cient\u00edficos tendem \u00e0 execu\u00e7\u00e3o mais orientada a fluxo de dados, pois \n\ngerenciam aplica\u00e7\u00f5es com grande volume de dados, normalmente heterog\u00eaneos e distribu\u00eddos [22]. Essas \n\ndiferen\u00e7as incentivam a busca por alternativas que tratem fluxo de tarefas em conjunto com fluxo de dados \n\nampliando a capacidade de representa\u00e7\u00e3o de workflows em aplica\u00e7\u00f5es cient\u00edficas e em ambientes de neg\u00f3cios. \n\nTanto os processos de neg\u00f3cio, quanto os workflows cient\u00edficos podem ser representados por meio de \n\nmodelos, que s\u00e3o descri\u00e7\u00f5es de processos suficientemente detalhadas de modo que possam ser executadas \n\ndiretamente por um sistema de gerenciamento de workflow. Algumas das linguagens de modelagem existentes \n\napresentam arcabou\u00e7os formais que permitem an\u00e1lises dos processos, com objetivo de detec\u00e7\u00e3o de falhas e \n\nposs\u00edveis melhorias no projeto. Existem formalismos que priorizam a representa\u00e7\u00e3o do fluxo de tarefas, por \n\nexemplo, as \u00e1lgebras de processos [10]. Outros formalismos apresentam estruturas que permitem tamb\u00e9m a \n\nrepresenta\u00e7\u00e3o de dados, como as redes de Petri e suas extens\u00f5es [9] e os grafos de workflow [22]. \n\n\n\n2  CAP\u00cdTULO 1 \u2013 INTRODU\u00c7\u00c3O \n\n \n\n \n\n1.2. Objetivo \n\nEste trabalho tem como objetivo caracterizar e delimitar o controle e a representa\u00e7\u00e3o de dados em duas \n\nferramentas: CPN Tools e sistema KEPLER. A primeira \u00e9 usada para editar, simular e analisar redes de Petri \n\ncoloridas (Se\u00e7\u00e3o 2.1), uma abordagem amplamente utilizada para representa\u00e7\u00e3o de processos de neg\u00f3cios. E a \n\nsegunda tem sido bastante usada para projetar, executar e monitorar workflows cient\u00edficos e est\u00e1 fundamentada \n\nem grafos de workflow orientados a atores (Se\u00e7\u00e3o 2.2).  \n\nBusca-se identificar a abrang\u00eancia e os limites de cada ferramenta, comparando casos pr\u00e1ticos. Para tal \n\nfinalidade, analisou-se o poder de representa\u00e7\u00e3o dos padr\u00f5es de controle de dados definidos por Russel et al [1] \n\nem ambas ferramentas. \n\n \n\n1.3. Contribui\u00e7\u00f5es \n\nAs principais contribui\u00e7\u00f5es deste trabalho s\u00e3o: \n\n\u2022 Caracteriza\u00e7\u00e3o dos limites das redes de Petri coloridas para representa\u00e7\u00e3o de padr\u00f5es de dados por meio \n\nda ferramenta CPN Tools; \n\n\u2022 Caracteriza\u00e7\u00e3o dos limites de grafos de workflow orientado a atores para representa\u00e7\u00e3o de padr\u00f5es de \n\ndados por meio do sistema KEPLER; \n\n\u2022 Desenvolvimento da representa\u00e7\u00e3o dos padr\u00f5es de controle de dados de workflow em redes de Petri \n\ncoloridas e grafos de workflow orientado a atores; \n\n\u2022 Compara\u00e7\u00e3o entre implementa\u00e7\u00f5es em CPN Tools e KEPLER utilizando os padr\u00f5es de controle de \n\ndados de workflow. \n\n \n\n1.4. Organiza\u00e7\u00e3o do texto \n\nO restante do texto est\u00e1 organizado da seguinte forma: o Cap\u00edtulo 2 apresenta fundamentos te\u00f3ricos b\u00e1sicos \n\npara compreens\u00e3o deste trabalho, como redes de Petri e sua extens\u00e3o, redes de Petri coloridas (rdPc), al\u00e9m de \n\nworkflows cient\u00edficos e grafos de workflow. O Cap\u00edtulo 3 apresenta a ferramenta CPN Tools e o sistema \n\nKEPLER que ser\u00e3o usados para implementa\u00e7\u00e3o dos casos pr\u00e1ticos. No Cap\u00edtulo 4 ser\u00e3o apresentados os padr\u00f5es \n\nde controle de dados e a compara\u00e7\u00e3o entre redes de Petri coloridas e workflows cient\u00edficos usando as ferramentas \n\napresentadas no cap\u00edtulo anterior. No Cap\u00edtulo 5, \u00e9 apresentada a conclus\u00e3o do trabalho. \n\n \n\n\n\n? \n\n 3 \n\n \n \n \n \n \nCap\u00edtulo 2 \n\n \n \n \n \n\nFundamentos \n \n\nEste cap\u00edtulo apresenta os formalismos que embasam as ferramentas comparadas neste trabalho. Por\u00e9m, \n\nantes de aprofundar esses fundamentos, \u00e9 importante apresentar um conjunto de defini\u00e7\u00f5es geralmente utilizadas \n\nnos v\u00e1rios trabalhos sobre workflows, inclusive neste. \n\n \n\n2.1. Conceitos de Workflow \n\nSegundo a WfMC (Workflow Management Coalition) [7], workflow \u00e9 a automa\u00e7\u00e3o, completa ou parcial, de \n\num processo de neg\u00f3cio, na qual documentos, informa\u00e7\u00f5es ou tarefas s\u00e3o passados de um participante para outro \n\npor meio de a\u00e7\u00f5es seguindo um conjunto de regras de procedimento. Um sistema de gerenciamento de workflow \n\ndefine, cria e gerencia a execu\u00e7\u00e3o de workflows usando software. \n\nModelo de workflow \u00e9 a descri\u00e7\u00e3o de um processo de neg\u00f3cios suficientemente detalhada de modo que o \n\nprocesso possa ser executado diretamente por um sistema de gerenciamento de workflow [1]. Um modelo pode \n\nser representado por uma s\u00e9rie de tarefas ligadas na forma de grafo dirigido. Os elementos b\u00e1sicos de um \n\nworkflow s\u00e3o ilustrados na Figura 2.1 e descritos a seguir. \n\n\u2022 Caso ou inst\u00e2ncia de processo: inst\u00e2ncia de execu\u00e7\u00e3o de um modelo de workflow; \n\n\u2022 Tarefa: corresponde a uma unidade de trabalho. Pode ser: \n\na) At\u00f4mica: possui uma defini\u00e7\u00e3o simples e autocontida, n\u00e3o descrita em termos de outras tarefas. \n\nApenas uma inst\u00e2ncia da tarefa executa quando iniciada; \n\nb) Bloco de tarefas: a\u00e7\u00e3o complexa com implementa\u00e7\u00e3o descrita em termos de subworkflow. \n\nQuando um bloco de tarefas \u00e9 iniciado, ele passa o controle para a primeira tarefa do seu \n\nsubworkflow correspondente. O subworkflow realiza todas as tarefas que o comp\u00f5em devolvendo \n\n\n\n4  CAP\u00cdTULO 2 \u2013 FUNDAMENTOS \n\n \n\nent\u00e3o o controle ao bloco de tarefas ap\u00f3s sua conclus\u00e3o. No exemplo da Figura 2.1, o bloco de \n\ntarefas C define-se em termos do subworkflow compreendendo as tarefas X, Y e Z; \n\nc) Inst\u00e2ncia m\u00faltipla: uma tarefa que pode ter m\u00faltiplas inst\u00e2ncias distintas executando \n\nsimultaneamente no mesmo caso de workflow; \n\nd) Inst\u00e2ncia m\u00faltipla de bloco de tarefas: denota um bloco de tarefas que pode ter m\u00faltiplas \n\ninst\u00e2ncias distintas de execu\u00e7\u00e3o; \n\n\u2022 Inst\u00e2ncia de tarefa: cada tarefa em execu\u00e7\u00e3o; \n\n \n\nFigura 2.1. Componentes de um workflow [1] \n\n \n\n\u2022 Canal de controle: meio pelo qual ocorre o controle de fluxo das tarefas, ou seja, a seq\u00fc\u00eancia em que \n\nas tarefas ser\u00e3o realizadas. Representado na Figura 2.1 pelas setas cheias (?); \n\n\u2022 Canal de dados: meio de comunica\u00e7\u00e3o de dados entre duas tarefas. Representado na Figura 2.1 pelas \n\nsetas pontilhadas; \n\n\u2022 Dados: elementos usados pelas tarefas para armazenar informa\u00e7\u00f5es de produ\u00e7\u00e3o, ou pelo workflow \n\npara gerir controle de fluxo de tarefas. Tamb\u00e9m podem ser elementos de comunica\u00e7\u00e3o com o \n\ntarefa \n\ncaso \n\nC \ndef var M \n\nuse (M) \n\nA \n\nB \n\nD \n\nC C E \n\nX Y Z \n\nsubworkflow \n\nbloco de tarefas \n\npass (M) \n\n[M > 5] \n\nworkflow \n\ninst\u00e2ncia m\u00faltipla de tarefa \n\n\n\n2.2 Redes de Petri  5 \n\n \n\nambiente externo. S\u00e3o representados por vari\u00e1veis e podem ser passados de uma tarefa para outra \n\npor meio dos canais de dados. Na Figura 2.1, a vari\u00e1vel M \u00e9 definida no escopo da tarefa C para \n\narmazenamento de dado local. Esse mesmo valor enviado \u00e0 tarefa E tamb\u00e9m \u00e9 usado para gerenciar \n\no controle de fluxo para a tarefa D (M>5). \n\n \n\n2.2. Redes de Petri  \n\nO termo redes de Petri denomina uma t\u00e9cnica de especifica\u00e7\u00e3o formal largamente difundida e adequada para \n\nmodelagem de sistemas com atividades paralelas, concorrentes, ass\u00edncronas e n\u00e3o determin\u00edsticas [9]. \n\nRedes de Petri s\u00e3o utilizadas: na \u00e1rea de protocolo de comunica\u00e7\u00e3o, em sistemas operacionais, no projeto de \n\nhardware, em sistemas embutidos, no projeto de sistemas de software e reengenharia de processos de neg\u00f3cios. \n\nSua teoria foi apresentada em 1962 por Carl Adam Petri em sua tese de doutorado. \n\nDefini\u00e7\u00e3o 2.2.1: Uma rede de Petri cl\u00e1ssica \u00e9 dada por uma qu\u00edntupla RP = (P, T, A, W, M0) em que: \n\n(i) (P,T,A) \u00e9 um grafo bipartido dirigido 1, com conjunto de v\u00e9rtices P?T e conjunto de arcos A; \n\n(ii) W \u00e9 uma fun\u00e7\u00e3o, chamada peso, que associa um n\u00famero natural n\u00e3o nulo a cada arco de A, ou seja, \n\nW: A ? {1, 2, 3, ...}; \n\n(iii) M0 \u00e9 uma fun\u00e7\u00e3o, chamada marca\u00e7\u00e3o inicial, que associa um n\u00famero natural a cada v\u00e9rtice de P, ou \n\nseja, M0: P ???? {0, 1, 2, ...}; \n\nOs v\u00e9rtices de T denominam-se transi\u00e7\u00f5es e representam as tarefas realizadas pelo sistema modelado, \n\nenquanto os v\u00e9rtices de P s\u00e3o chamados de lugares ou estados, representando vari\u00e1veis de estado do sistema. \n\nQuando o arco parte de um lugar p ? P e incide em uma transi\u00e7\u00e3o t ? T, p \u00e9 chamado lugar de entrada de t e \n\nrepresenta uma pr\u00e9-condi\u00e7\u00e3o a ser atingida para que t ocorra. Quando um arco parte de uma transi\u00e7\u00e3o t e incide \n\nem um lugar p, este \u00e9 chamado lugar de sa\u00edda de t e representa um estado do sistema atingido ap\u00f3s ocorr\u00eancia de \n\nt. \n\nO funcionamento de uma rede de Petri \u00e9 controlado por meio de fichas (tokens) dispostas nos lugares e \n\ntamb\u00e9m pelo peso associado aos seus arcos. A fun\u00e7\u00e3o M0 d\u00e1 o posicionamento inicial das fichas. Para cada \n\nv\u00e9rtice p em P, considera-se que h\u00e1 M0(p) fichas em p. Em outras palavras, M0(p) representa o n\u00famero inicial de \n\nfichas em p. A fun\u00e7\u00e3o W(a) indica a quantidade de fichas a serem consumidas do lugar de entrada vinculado ao \n\n                                                 \n1 Um grafo bipartido dirigido (V, A) \u00e9 aquele em que o conjunto de v\u00e9rtices V \u00e9 dividido em dois conjuntos disjuntos P e \nT, tal que todo arco de A tem uma ponta em P e outra em T e ser\u00e1 denotado por (P, T, A). \n\n\n\n6  CAP\u00cdTULO 2 \u2013 FUNDAMENTOS \n\n \n\narco a ou a quantidade de fichas a serem acrescidas no lugar de sa\u00edda vinculado a esse arco. Quando o peso \n\nassociado ao arco \u00e9 1, sua representa\u00e7\u00e3o na rede pode ser omitida. \n\nApresenta-se a seguir um exemplo de redes de Petri para descrever seu funcionamento, conforme Figura 2.2. \n\nUtiliza-se um \u201cprocesso de atendimento a reclama\u00e7\u00f5es\u201d no qual \u00e9 poss\u00edvel identificar: as transi\u00e7\u00f5es (registrar, \n\npagar e enviar carta); os lugares (Reclama\u00e7\u00e3o, Sob avalia\u00e7\u00e3o e Pronto); os arcos de peso 1 e ainda marcas \n\niniciais (no lugar Reclama\u00e7\u00e3o), representando tr\u00eas reclama\u00e7\u00f5es a serem atendidas. \n\nUma transi\u00e7\u00e3o t est\u00e1 habilitada se, e somente se, para todo lugar de entrada da transi\u00e7\u00e3o, o lugar possuir um \n\nn\u00famero de marcas superior ou igual ao peso do arco ligando o lugar \u00e0 transi\u00e7\u00e3o. Essa regra habilita o disparo de \n\numa transi\u00e7\u00e3o, mas n\u00e3o \u00e9 obrigat\u00f3ria (n\u00e3o-determinismo). \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\nFigura 2.2. Rede de Petri para atendimento a reclama\u00e7\u00f5es \n\n \n\nO disparo de uma transi\u00e7\u00e3o subtrai marcas de todos os seus lugares de entrada (segundo o peso dos arcos \n\nligando os lugares de entrada \u00e0 transi\u00e7\u00e3o), acrescentando marcas em todos os seus lugares de sa\u00edda (segundo o \n\npeso dos arcos ligando a transi\u00e7\u00e3o aos seus lugares de sa\u00edda). \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\nFigura 2.3. Disparo da transi\u00e7\u00e3o registrar \n\nReclama\u00e7\u00e3o \n\nregistrar \n\nSob \navalia\u00e7\u00e3o \n\npagar \n\nenviar \ncarta \n\nPronto \n\nReclama\u00e7\u00e3o \n\nregistrar \n\npagar \n\nenviar \ncarta \n\nSob \navalia\u00e7\u00e3o Pronto \n\n\n\n2.2 Redes de Petri  7 \n\n \n\nA marca\u00e7\u00e3o de uma rede de Petri muda a cada disparo de transi\u00e7\u00e3o, permitindo simular o comportamento \n\ndin\u00e2mico do sistema e definir seu estado em dado momento. O exemplo da Figura 2.3 mostra o disparo da \n\ntransi\u00e7\u00e3o registrar, consumindo uma marca do lugar de entrada Reclama\u00e7\u00e3o e acrescentando uma marca no \n\nlugar de sa\u00edda Sob avalia\u00e7\u00e3o. \n\n \n\n2.2.1. Redes de Petri coloridas (rdPc) \n\nNas redes de Petri cl\u00e1ssicas existe apenas um tipo de marca, n\u00e3o permitindo diferenciar recursos em um \n\nlugar. Ademais, as redes de Petri cl\u00e1ssicas n\u00e3o s\u00e3o hier\u00e1rquicas, portanto, n\u00e3o permitem a constru\u00e7\u00e3o de modelos \n\na partir de submodelos separados com interfaces bem definidas [11]. \n\nEntre os anos 70 e 80, as redes de Petri foram estendidas considerando conceito de dados e hierarquia, \n\noriginando, assim, as redes de Petri coloridas e hier\u00e1rquicas [3]. As redes de Petri coloridas (rdPc) incorporam \n\ntipos de dados (conjuntos de cores) para representa\u00e7\u00e3o dos dados e podem utilizar a decomposi\u00e7\u00e3o hier\u00e1rquica, \n\nsem perder a consist\u00eancia das mesmas em rela\u00e7\u00e3o \u00e0s originais. \n\nAs rdPc se mostram um formalismo adequado para aprofundar e entender o controle de dados em processos \n\nde neg\u00f3cios, devido \u00e0 possibilidade de representa\u00e7\u00e3o de dados, o que n\u00e3o ocorre com redes de Petri cl\u00e1ssicas \n\n[14]. \n\nAs redes de Petri coloridas combinam a expressividade das redes de Petri com a expressividade das \n\nlinguagens de programa\u00e7\u00e3o. Redes de Petri oferecem primitivas para descrever sincroniza\u00e7\u00e3o de processos \n\nconcorrentes, enquanto linguagens de programa\u00e7\u00e3o oferecem primitivas para defini\u00e7\u00e3o de tipos de dados \n\n(conjuntos de cores) e manipula\u00e7\u00e3o de dados [16]. \n\nA principal finalidade das redes de Petri coloridas \u00e9 a redu\u00e7\u00e3o do tamanho do modelo, permitindo que \n\nmarcas distintas (de cores diferentes) representem diferentes processos ou recursos na mesma sub-rede. \n\n \n\n2.2.2. Defini\u00e7\u00e3o formal de redes de Petri coloridas \n\nPara a defini\u00e7\u00e3o formal de redes de Petri coloridas utilizar-se-\u00e1 dois conceitos importantes: multiconjunto e \n\nexpress\u00f5es.  \n\nDefini\u00e7\u00e3o 2.2.2: Multiconjunto \u00e9 um objeto cuja representa\u00e7\u00e3o se assemelha \u00e0 de um conjunto finito, mas \n\ndiferindo deste por permitir a exist\u00eancia do mesmo elemento v\u00e1rias vezes. Supondo-se um conjunto {b, c, f}, ao \n\nse adicionar o elemento c, ainda tem-se o conjunto {b, c, f}. Entretanto, supondo-se o multiconjunto {b, c, f}, ao \n\nse adicionar o elemento c, o resultado \u00e9 o multiconjunto {b, c, c, f}. \n\n\n\n8  CAP\u00cdTULO 2 \u2013 FUNDAMENTOS \n\n \n\nUm multiconjunto \u00e9 sempre definido sobre um conjunto S, ou seja, seus elementos pertencem a S. Um \n\nmulticonjunto pode ser descrito como uma soma formal em que cada elemento de S apresenta um coeficiente \n\ndizendo quantas vezes esse elemento aparece no multiconjunto. Por conven\u00e7\u00e3o, elementos com coeficiente zero \n\ns\u00e3o omitidos. Por exemplo, dado o multiconjunto m = {a, c, c, e}, definido sobre S = {a, b, c, d, e}, o mesmo \n\npode ser representado pela soma m = 1\u00b4a + 2\u00b4c + 1\u00b4e. \n\nDefini\u00e7\u00e3o 2.2.3: Express\u00f5es s\u00e3o estruturas com constantes, vari\u00e1veis e operadores, neste contexto, representam \n\nfun\u00e7\u00f5es que associam valores de um dado dom\u00ednio a valores booleanos ou a multiconjuntos. Chamar-se-\u00e1 \n\nexpress\u00f5es fechadas as fun\u00e7\u00f5es constantes, ou seja, compreendendo apenas constantes e operadores, sem \n\nvari\u00e1veis. \n\nDefini\u00e7\u00e3o 2.2.4: As redes de Petri coloridas s\u00e3o definas pela tupla rdPc = (?, P, T, A, C, G, E, I), em que: \n\n(i) ? ? ? ? \u00e9 um conjunto finito n\u00e3o-vazio de tipos (ou conjuntos de cores), ou seja, \u00e9 um conjunto de conjuntos \n\nde cores; \n\n(ii) (P,T,A) \u00e9 um grafo bipartido dirigido, com conjunto de v\u00e9rtices P?T e conjunto de arcos A; \n\n(iii) C \u00e9 uma fun\u00e7\u00e3o, chamada cor, que associa um tipo (conjunto de cores) definido em ? a cada v\u00e9rtice de \n\nP, ou seja, C: P ???? ?. \n\n(iv) B \u00e9 um conjunto de express\u00f5es de tipo booleano representadas por fun\u00e7\u00f5es b : ? : ? : ? : ? ???? {V, F} e G \u00e9 uma \n\nfun\u00e7\u00e3o, chamada express\u00e3o de guarda, que associa um elemento de B a cada v\u00e9rtice de T, ou seja, G: \n\nT ???? B. \n\n(v) E \u00e9 uma fun\u00e7\u00e3o, chamada express\u00e3o de arco, que associa uma express\u00e3o com dom\u00ednio em ? a cada \n\narco de A. A imagem de cada express\u00e3o de arco deve ser um multiconjunto definido sobre o tipo \n\nassociado a p(a), em outras palavras, um multiconjunto com elementos da mesma cor associada ao \n\nv\u00e9rtice p que est\u00e1 vinculado ao arco a, ou seja, E: A ???? {express\u00f5es}; \n\n(vi) I \u00e9 uma fun\u00e7\u00e3o, chamada inicializa\u00e7\u00e3o, que associa uma express\u00e3o fechada a cada v\u00e9rtice de P. A \n\nimagem de cada express\u00e3o de inicializa\u00e7\u00e3o deve ser um multiconjunto definido sobre o tipo associado \n\nao v\u00e9rtice p.  \n\nOs v\u00e9rtices de P s\u00e3o chamados de lugares ou estados, enquanto os v\u00e9rtices de T s\u00e3o chamados de transi\u00e7\u00f5es. \n\nAl\u00e9m de definir tipos, o conjunto ???? determina as opera\u00e7\u00f5es, fun\u00e7\u00f5es e vari\u00e1veis que podem ser usadas nas \n\ninscri\u00e7\u00f5es da rede, ou seja, determina as declara\u00e7\u00f5es necess\u00e1rias a cada modelo. \n\n\n\n2.2 Redes de Petri  9 \n\n \n\nO funcionamento de uma rede de Petri \u00e9 controlado por multiconjuntos de fichas (tokens) dispostas nos \n\nlugares e tamb\u00e9m por inscri\u00e7\u00f5es associadas \u00e0 estrutura da rede, como por exemplo: express\u00f5es de arco, \n\nexpress\u00f5es de guarda, tipos de cores associados aos lugares e express\u00f5es de inicializa\u00e7\u00e3o. \n\nCada multiconjunto de fichas dispostas em um lugar p deve ser definido sobre o tipo associado a p, ou seja, \n\ncada ficha deve apresentar uma cor que perten\u00e7a ao tipo C(p). O mesmo cuidado deve ser tomado com \n\nexpress\u00f5es de arco, pois determinam a quantidade e tipo (multiconjunto) de fichas a serem consumidas ou \n\ndepositadas em lugar vinculado ao arco em quest\u00e3o. \n\nCada express\u00e3o de guarda associada a uma transi\u00e7\u00e3o t ? T \u00e9 usada como pr\u00e9-condi\u00e7\u00e3o a ser atendida dentro \n\ndo modelo representado, habilitando ou n\u00e3o t para disparo, ou seja, define se tarefa associada t pode ser \n\nrealizada. \n\nA fun\u00e7\u00e3o I d\u00e1 o posicionamento inicial das fichas. Para cada p ? P, considera-se que h\u00e1 I(p) fichas em p. Em \n\noutras palavras, I(p) representa o multiconjunto inicial de fichas em p. \n\nA Figura 2.4 apresenta um exemplo de rede de Petri colorida. Utilizar-se-\u00e1 um \u201cprocesso de atendimento a \n\nreclama\u00e7\u00f5es\u201d, que ap\u00f3s o atendimento, computa clientes pagos e cartas enviadas e reporta ao respons\u00e1vel pelo \n\nprocesso, exemplificando os diferentes tipos de fichas que podem existir numa rede de Petri colorida. \u00c9 poss\u00edvel \n\nidentificar:  \n\n\u2022 Conjunto de cores com a defini\u00e7\u00e3o dos tipos: R e INT com seus respectivos elementos e a \n\ndeclara\u00e7\u00e3o de vari\u00e1veis (ce, cp e tr) do tipo definido INT; \n\n\u2022 Transi\u00e7\u00f5es: registrar, pagar, enviar carta, reportar; \n\n\u2022 Lugares: Reclama\u00e7\u00e3o, Sob avalia\u00e7\u00e3o, Carta enviada, Cliente pago e Pronto; \n\n\u2022 Arcos dirigidos entre transi\u00e7\u00f5es e lugares; \n\n\u2022 Cor R associada aos lugares: Reclama\u00e7\u00e3o e Sob avalia\u00e7\u00e3o, e cor INT associada aos lugares: Carta \n\nenviada, Cliente pago e Pronto; \n\n\u2022 Express\u00e3o de guarda [ce+cp>3] associada \u00e0 transi\u00e7\u00e3o reportar, representando pr\u00e9-condi\u00e7\u00e3o para o \n\ndisparo dessa transi\u00e7\u00e3o. A tarefa reportar s\u00f3 pode ser realizada caso a quantidade de cartas enviadas \n\nmais a quantidade de clientes pagos exceda tr\u00eas; \n\n\u2022 Uma express\u00e3o de arco associada a cada arco da rede. Algumas possuem express\u00f5es fechadas (1`r e \n\n1`0), enquanto outras utilizam express\u00f5es compostas por vari\u00e1veis do tipo associado ao lugar \n\nvinculado ao arco (ce, ce+1, cp, cp+1, tr, tr+ce+cp); \n\n\n\n10  CAP\u00cdTULO 2 \u2013 FUNDAMENTOS \n\n \n\n\u2022 Tamb\u00e9m \u00e9 definida a inicializa\u00e7\u00e3o da rede, ou seja, quantidade e tipo de marcas apresentadas \n\ninicialmente em cada lugar. O valor inicial do lugar Reclama\u00e7\u00e3o \u00e9 10`r(dez fichas de valor r), que \n\nrepresenta dez reclama\u00e7\u00f5es a serem atendidas. \n\n \nFigura 2.4. Rede de Petri colorida para atendimento a reclama\u00e7\u00f5es \n\n \n\nDe maneira semelhante \u00e0 rede de Petri cl\u00e1ssica, uma transi\u00e7\u00e3o t est\u00e1 habilitada se, e somente se, para todo \n\nlugar de entrada de t, o lugar possuir um multiconjunto de fichas satisfazendo \u00e0 express\u00e3o associada ao arco que \n\nliga o lugar \u00e0 transi\u00e7\u00e3o. Caso a transi\u00e7\u00e3o possua express\u00e3o de guarda associada, esta tamb\u00e9m precisa ser \n\nsatisfeita para que t seja habilitada. \n\nO disparo de uma transi\u00e7\u00e3o subtrai fichas de todos os seus lugares de entrada (segundo as express\u00f5es \n\nassociadas aos arcos ligando os lugares de entrada \u00e0 transi\u00e7\u00e3o) e deposita fichas em todos os seus lugares de \n\nsa\u00edda (segundo as express\u00f5es associadas aos arcos ligando a transi\u00e7\u00e3o aos seus lugares de sa\u00edda). \n\n1`r \n\nDeclara\u00e7\u00f5es (conjunto de cores) \n\ncor R = {r} \n\ncor INT = {0, 1, 2, ...}; \n\nvar ce, cp, tr: INT; \n\n \n\nReclama\u00e7\u00e3o \n\nSob  \navalia\u00e7\u00e3o \n\nregistrar \n\n1`r \n\n1`r \n\n1`r \n\nR R \npagar \n\nenviar  \ncarta \n\nINT \n\nINT \n\nINT \n\nreportar \n\nCarta \nenviada \n\nCliente \npago \n\nPronto \n\ncp \n\ncp + 1 \n\nce + 1 \n\nce \n\nce \n\ncp \n\n1`0 \n\n1`0 \n\n[ce+cp>3] \ntr+ce+cp \n\ntr \n\nInicializa\u00e7\u00e3o \n\nI(Reclama\u00e7\u00e3o) = 10\u00b4r \n\nI(Sob avalia\u00e7\u00e3o) = ? \nI(Carta enviada) = 1\u00b40 \n\nI(Cliente pago) = 1\u00b40 \n\nI(Pronto) = 1\u00b40 \n\n\n\n2.3 Workflows cient\u00edficos  11 \n\n \n\n \n\n2.3. Workflows cient\u00edficos \n\nApesar das defini\u00e7\u00f5es relacionadas a workflow se referirem a processos de neg\u00f3cios, os sistemas de \n\ngerenciamento de workflow v\u00eam sendo usados tamb\u00e9m em aplica\u00e7\u00f5es cient\u00edficas. \n\nPor\u00e9m, o ambiente cient\u00edfico difere do ambiente de neg\u00f3cios: re-executa um mesmo experimento, controla \n\ncondu\u00e7\u00e3o de experimentos em diferentes ambientes de hardware e software, trabalha com grande volume de \n\ndados, normalmente heterog\u00eaneos e distribu\u00eddos. Devido a essas peculiaridades, os workflows desse ambiente \n\ns\u00e3o chamados workflows cient\u00edficos. \n\nAs caracter\u00edsticas e requisitos de workflows cient\u00edficos assemelham-se parcialmente as de workflow de \n\nneg\u00f3cios. Historicamente, o workflow de neg\u00f3cios tem sua origem em sistemas de automa\u00e7\u00e3o de escrit\u00f3rio e, \n\nmais recentemente, teve seu uso destacado em modelagem e engenharia de processos de neg\u00f3cio [8]. Analisando \n\nos princ\u00edpios de projeto e modelos de execu\u00e7\u00e3o no gerenciamento de workflow de neg\u00f3cios, um foco em padr\u00f5es \n\nde controle de fluxo de tarefas e eventos torna-se aparente, enquanto o fluxo de dados geralmente fica relegado. \n\nPor outro lado, sistemas de workflows cient\u00edficos tendem a ter modelos de execu\u00e7\u00e3o orientados a dados, seja \n\nem sistemas acad\u00eamicos (por exemplo: KEPLER [22], Taverna [26] e Triana [27]), ou em sistemas comerciais \n\n(DiscoveryNet [29], Pipeline-Pilot [30] e LabView [31]). Workflows cient\u00edficos aproximam-se mais de \n\naplica\u00e7\u00f5es orientadas a fluxo de dados do que de aplica\u00e7\u00f5es de workflow de neg\u00f3cios. \n\nA diferen\u00e7a entre sistemas orientados a fluxo de dados e sistemas de controle de fluxo de tarefas pode ser \n\nobservada em v\u00e1rias representa\u00e7\u00f5es utilizadas para modelagem desses sistemas. Por exemplo, visualiza\u00e7\u00f5es de \n\nworkflows de neg\u00f3cios freq\u00fcentemente se assemelham a fluxogramas ou diagramas de transi\u00e7\u00e3o de estados \n\nenfatizando eventos e controle de fluxo de tarefas ao inv\u00e9s de dados. A an\u00e1lise formal de workflows geralmente \n\nenvolve o estudo de seus padr\u00f5es de controle de fluxo de tarefas [2] e freq\u00fcentemente \u00e9 representada por redes \n\nde Petri. J\u00e1 o modelo de execu\u00e7\u00e3o de sistemas de workflows cient\u00edficos geralmente se assemelha a redes de \n\nprocessamento de fluxo de dados [32] e s\u00e3o representados por grafos com v\u00e9rtices que podem ser vistos como \n\nprocessos concorrentes trocando dados por meio dos arcos. Essas redes de processamento de fluxo de dados \n\npossuem, tradicionalmente, aplica\u00e7\u00f5es em processamento digital de sinais e engenharia el\u00e9trica. \n\nEm [24], os autores definem um modelo formal para workflows cient\u00edficos embasado em modelagem e \n\nprojeto orientado a atores, originalmente desenvolvido para modelagem de sistemas concorrentes por Hewitt \n\n(1973) e, depois, estendido e formalizado por Agha (1985) [33]. Esse modelo formal \u00e9 proposto como base da \n\n\n\n12  CAP\u00cdTULO 2 \u2013 FUNDAMENTOS \n\n \n\nferramenta KEPLER e ser\u00e1 utilizado, neste trabalho, como ponto de partida para compreens\u00e3o dos fundamentos \n\napresentados pelos autores em [24] para abordagem de workflows cient\u00edficos. \n\n \n\n2.3.1. Grafos de workflow hier\u00e1rquico orientado a atores \n\nO modelo de atores proposto por Hewitt e Agha \u00e9 composto por um conjunto de entidades aut\u00f4nomas \n\nchamadas atores, componentes ativos com comportamento definido comunicando-se por passagem ass\u00edncrona de \n\nmensagens. Em grafos de workflow orientado a atores, a comunica\u00e7\u00e3o entre essas entidades \u00e9 realizada pela \n\npassagem de dados, n\u00e3o necessariamente ass\u00edncrona. Bowers e Ludascher apresentam esse modelo em [24] e \n\nseparam suas defini\u00e7\u00f5es em dois aspectos distintos: 1) a estrutura de comunica\u00e7\u00e3o entre os atores (fluxo de \n\ndados), que ser\u00e1 definida nesta Se\u00e7\u00e3o; 2) a coordena\u00e7\u00e3o total do workflow (orquestra\u00e7\u00e3o), definindo a natureza \n\nda comunica\u00e7\u00e3o entre as entidades, como por exemplo: se o envio de dados \u00e9 s\u00edncrono ou ass\u00edncrono. Esse \n\naspecto ser\u00e1 aprofundado na Se\u00e7\u00e3o 2.3.2. \n\nDefini\u00e7\u00e3o 2.3.1 Grafo de workflow: \u00e9 dado por W = (A, D), com conjunto de v\u00e9rtices A composto por atores e \n\nconjunto de hiperarestas 2 D composto por conex\u00f5es de fluxo de dados. \n\nDefini\u00e7\u00e3o 2.3.2 Atores: entidades representando componentes ou tarefas que processam os dados recebidos, ou \n\ncriadores e emissores de dados a outros atores por uma interface de comunica\u00e7\u00e3o chamada conjunto de portas. \n\nDefini\u00e7\u00e3o 2.3.3 Portas: interface de entrada e sa\u00edda de dados de um ator. Para todo ator a ? A existe um \n\nconjunto associado portas(a) de portas de dados, sendo que, para cada p ? portas(a) ou p \u00e9 uma porta de entrada \n\nou p \u00e9 uma porta de sa\u00edda, isto \u00e9, portas(a) \u00e9 a uni\u00e3o disjunta das portas de entrada e portas de sa\u00edda de a. \n\nDefini\u00e7\u00e3o 2.3.4 Conex\u00f5es de fluxo de dados: conectam atores por suas portas de dados para comunica\u00e7\u00e3o entre \n\neles por passagem de dados. Seja entradas(W) = ? a ? A entradas(a) o conjunto de todas as portas de entrada do \n\ngrafo de workflow W; os conjuntos sa\u00eddas(W) e portas(W) s\u00e3o definidos analogamente. Uma conex\u00e3o de fluxo \n\nde dados d ? D \u00e9 a hiperaresta dirigida d = (O, I), simultaneamente conectando n portas de sa\u00edda O = {o1, o2, ..., \n\non} ? sa\u00eddas(W) com m portas de entrada I = {i1, ..., im} ? entradas(W). Uma conex\u00e3o de fluxo de dados d = (O, \n\n                                                 \n2 Hiperaresta de um grafo G = (V, A) \u00e9 um par ordenado (X, Y) de subconjuntos disjuntos de v\u00e9rtices de V, ou seja, \u00e9 uma \naresta de A que interliga n v\u00e9rtices de X a m v\u00e9rtices de Y. \n \n\n\n\n2.3 Workflows cient\u00edficos  13 \n\n \n\nI) compreende uma etapa de jun\u00e7\u00e3o, combinando dados das portas de sa\u00edda O e, posteriormente, uma etapa de \n\ndistribui\u00e7\u00e3o que entrega os dados nas portas de entrada I3.  \n\nUma conex\u00e3o de fluxo de dados d = ({o1}, {i1}) entre uma \u00fanica porta de sa\u00edda e uma \u00fanica porta da entrada \n\ncorresponde a uma aresta dirigida o1 \nd\n? i1.Geralmente d \u00e9 representado como n\u00f3 auxiliar da conex\u00e3o com n \n\narestas chegando de todas as portas de sa\u00edda o ? O e m arestas saindo para todas as portas de entrada i ? I.  \n\nA Figura 2.5 exemplifica um grafo de workflow apresentando o conjunto de atores A, com suas portas de \n\nentrada e sa\u00edda, e conex\u00f5es de fluxo de dados D entre essas portas. \n\n \nFigura 2.5. Grafo de workflow \n\n \n\nDefini\u00e7\u00e3o 2.3.5 Abstra\u00e7\u00e3o e refinamento de workflow: abstra\u00e7\u00e3o e refinamento s\u00e3o primitivas cruciais de \n\nmodelagem. Quando se abstrai um grafo de workflow W, quer-se represent\u00e1-lo em um \u00fanico ator composto aW.  \n\nInversamente, pode-se querer refinar um ator a especificando-o mais por meio de um subworkflow Wa, tornando-\n\no desse modo um ator composto com Wa dentro dele. Em ambos os casos, deve-se certificar de que a assinatura \n\nde entrada e sa\u00edda ?a do ator composto combina com a assinatura de entrada e sa\u00edda ?w do subworkflow contido. \n\nSegue-se exemplo na Figura 2.6. \n\nDefini\u00e7\u00e3o 2.3.6 Portas Livres. Seja W = (A, D) um grafo de workflow. As portas livres de W s\u00e3o todas as portas \n\np sem participa\u00e7\u00e3o em nenhuma conex\u00e3o de dados d, isto \u00e9, portaslivres(W) := {p | ?d ? D: p ? d}. \n\n                                                 \n3 A sem\u00e2ntica de jun\u00e7\u00e3o e distribui\u00e7\u00e3o de fichas de dados diz respeito \u00e0 coordena\u00e7\u00e3o do workflow (orquestra\u00e7\u00e3o) e ser\u00e1 \ndiscutida na se\u00e7\u00e3o 2.3.2. \n\na2 \n\na3 \n\na1 \n\na5 \na4 \n\nW = (A, D) \nA = {a1, a2, a3, a4, a5} \nD = {d1, d2, d3} \n\nd1 \n\nd2 \nd3 \n\nW \n\n\n\n14  CAP\u00cdTULO 2 \u2013 FUNDAMENTOS \n\n \n\nDefini\u00e7\u00e3o 2.3.7 Ator composto: um ator composto aW \u00e9 um par (W, ?W), compreendendo um subworkflow de W \n\ne um conjunto de portas distintas ?W ? portaslivres(W), a assinatura de entrada e sa\u00edda de W. Requer-se \n\ncombina\u00e7\u00e3o entre as assinaturas de entrada e sa\u00edda do subworkflow de W e o ator composto aW contendo W, isto \n\n\u00e9, ?W = portas(aW ). \n\n \nFigura 2.6. Grafo de workflow \u2013 Abstra\u00e7\u00e3o (aw1) e Refinamento (W1) \n\n \n\nDefini\u00e7\u00e3o 2.3.8 Grafos de Workflow hier\u00e1rquico: um workflow hier\u00e1rquico W = (A, D, ?) \u00e9 definido como \n\num grafo de workflow em que atores podem ser compostos. Indutivamente, subworkflows podem ser \n\nhier\u00e1rquicos, portanto, qualquer n\u00edvel de aninhamento pode ser modelado. Para uniformidade, tamb\u00e9m se inclui \n\na assinatura de entrada e sa\u00edda ? do n\u00edvel mais alto do workflow. \n\n \n\n2.3.2. Modelos de computa\u00e7\u00e3o \n\nOs grafos de workflow orientados a ator apresentados anteriormente especificam apenas as liga\u00e7\u00f5es de \n\ncomunica\u00e7\u00e3o (fluxo de dados) entre componentes ou tarefas (representados por atores) e, em caso de workflows \n\nhier\u00e1rquicos, sua estrutura aninhada por meio do ator composto. Entretanto, o modelo de computa\u00e7\u00e3o de \n\nW \n\na1 \n\na5 \n\n \naw1 \n\n \n\na2 \n\na3 \na4 \n\nW1 \n\nd2 \n\n\n\n2.3 Workflows cient\u00edficos  15 \n\n \n\nworkflows pode ser escolhido por especificidade e necessidade de cada forma de orquestra\u00e7\u00e3o das tarefas a \n\nserem realizadas. No sistema KEPLER [22], tal coordena\u00e7\u00e3o \u00e9 realizada por uma primitiva de modelagem \n\nchamada de diretor.  \n\nO diretor \u00e9 a entidade que supervisiona os atores e direciona as a\u00e7\u00f5es na execu\u00e7\u00e3o de um workflow \n\n(orquestra\u00e7\u00e3o). Sua principal tarefa \u00e9 informar aos atores quando converter entrada em sa\u00edda (execu\u00e7\u00e3o). As \n\ntarefas b\u00e1sicas de um diretor s\u00e3o: \n\n\u2022 Conhecer o modo de conex\u00e3o entre os atores; \n\n\u2022 Mover os dados de um ator para outro; \n\n\u2022 Decidir e informar aos atores quando devem executar. \n\n \n\nDefini\u00e7\u00e3o 2.3.9 Grafos de Workflow e Modelos de Computa\u00e7\u00e3o. A defini\u00e7\u00e3o de grafos de workflow W pode se \n\nestendida para incluir o modelo de computa\u00e7\u00e3o por meio do diretor M, isto \u00e9, W = (A, D, ?, M). Em caso de \n\nn\u00e3o-especifica\u00e7\u00e3o da sem\u00e2ntica de jun\u00e7\u00e3o e distribui\u00e7\u00e3o de um n\u00f3 de conex\u00e3o de dados d = (O, I), um diretor M \n\npode prescrev\u00ea-la.  \n\nO sistema KEPLER fornece uma variedade de diretores que implementam diferentes sem\u00e2nticas. Os dois \n\ndiretores de maior interesse neste trabalho, por possu\u00edrem o conceito de seq\u00fc\u00eancia de ordem de execu\u00e7\u00e3o, s\u00e3o: \n\nSynchronous Data Flow (SDF), com seq\u00fc\u00eancia bem definida de eventos, mas requerendo disponibilidade dos \n\ndados nas entradas antes do processamento; e Process Network (PN), em que a disponibilidade de dados \n\ndetermina a ordem em que os atores executam. Mais detalhes ser\u00e3o abordados na Se\u00e7\u00e3o 3.2.2. \n\nO diretor que trabalha com conceito de tempo, que \u00e9 um pouco mais complexo que ordem de eventos, \n\nchama-se Continuous Time (CT). Vari\u00e1veis descrevem as freq\u00fc\u00eancias (taxas) de ocorr\u00eancia de eventos (execu\u00e7\u00e3o \n\ndos atores). \n\nO diretor de evento discreto chamado Discrete Event (DE), considera a ordem e o tempo em que os eventos \n\nocorrem. Os atores se comunicam atrav\u00e9s de fichas que representam seq\u00fc\u00eancias de eventos localizados no \n\ntempo, ao longo de uma linha em tempo real. Cada ficha \u00e9 composta de um valor e um r\u00f3tulo de tempo que \n\nespecificam a ordem cronol\u00f3gica em que as fichas devem ser processadas por seus respectivos receptores. \n\n \n\n2.4. Conclus\u00e3o \n\nAmbos os formalismos apresentados nas se\u00e7\u00f5es anteriores deste cap\u00edtulo s\u00e3o utilizados para representa\u00e7\u00e3o \n\nde workflows, o primeiro em ambientes de neg\u00f3cios e o segundo em ambientes cient\u00edficos. Cada um possui sua \n\n\n\n16  CAP\u00cdTULO 2 \u2013 FUNDAMENTOS \n\n \n\nterminologia pr\u00f3pria para representar seus elementos b\u00e1sicos. Por\u00e9m, como este trabalho visa caracterizar e \n\ndelimitar o poder de representa\u00e7\u00e3o de transfer\u00eancia e controle de dados em cada formalismo, requer-se \n\nequival\u00eancia com terminologia padr\u00e3o, apresentada na Se\u00e7\u00e3o 2.1. \n\nSegue-se tabela resumo da terminologia para cada formalismo, relacionando-a com os conceitos de \n\nworkflow. \n\nComponentes de workflow Redes de Petri Grafos de workflow  \n\norientado a atores \n\nTarefas Transi\u00e7\u00f5es Atores \n\n-- Lugares (de entrada e sa\u00edda) Portas (de entrada e sa\u00edda) \n\nCanal de dados Arcos dirigidos Conex\u00e3o de fluxo de dados \n\nCanal de controle Arcos dirigidos Diretores \n\nSubworkflow Submodelo Subworkflow \n\nBloco de tarefas Supernodo Ator composto \n\nVari\u00e1veis de Dados Marcas, Fichas ou Tokens Fichas de dados ou Tokens \n\nTabela 2.1 Equival\u00eancia de terminologias \n\n \n \n\n\n\n \n\n17 \n\n \n \n \n \n \nCap\u00edtulo 3 \n\n \n \n \n\nFerramentas para workflows \n \n\nNeste cap\u00edtulo, ser\u00e3o apresentadas as ferramentas CPN Tools e KEPLER descrevendo as principais \n\ncaracter\u00edsticas de cada uma e seus elementos de representa\u00e7\u00e3o dos formalismos apresentados no Cap\u00edtulo 2. \n\n \n\n3.1. CPN Tools \n\nCPN Tools [19] \u00e9 uma ferramenta para editar, simular e analisar redes de Petri coloridas (rdPc) e pretende \n\nsubstituir Design/CPN [18], pacote de software difundido para rdPc. Design/CPN foi lan\u00e7ado em 1989, para \n\nedi\u00e7\u00e3o e simula\u00e7\u00e3o de rdPc. Desde ent\u00e3o, um tempo consider\u00e1vel foi investido em desenvolvimento para \n\nsimula\u00e7\u00e3o, gera\u00e7\u00e3o e an\u00e1lise de espa\u00e7os de estados completos, parciais e reduzidos. \n\nA ferramenta CPN Tools \u00e9 o resultado do projeto de pesquisa CPN2000 [20], da universidade de Aarhus, \n\npatrocinada pelo Danish National Centre for IT Research (CIT), George Mason University, Hewlett-Packard, \n\nNokia e Microsoft. Essa ferramenta possibilita o projeto de rdPc, ou seja, modelos com tipos de dados \n\ncomplexos (conjunto de cores) e manipula\u00e7\u00f5es complexas de dados (express\u00f5es de guarda e de arco). A pr\u00f3xima \n\nse\u00e7\u00e3o apresenta os elementos b\u00e1sicos de constru\u00e7\u00e3o e edi\u00e7\u00e3o de rdPc usando CPN Tools. \n\n \n\n3.1.1. Constru\u00e7\u00e3o e edi\u00e7\u00e3o de rdPc \n\nO gerenciamento de ambiente de trabalho do CPN Tools (Figura 3.1) facilita controlar o grande n\u00famero de \n\np\u00e1ginas tipicamente encontradas em rdPc industriais. O espa\u00e7o de trabalho ocupa a tela inteira e cont\u00e9m janelas \n\nchamadas pastas (binders) com folhas. As pastas reduzem o n\u00famero de janelas na tela e o tempo gasto com \n\norganiza\u00e7\u00e3o. \u00c9 poss\u00edvel organizar o trabalho agrupando as folhas relacionadas, reduzindo o tempo gasto \n\nprocurando janelas escondidas. \n\n\n\n18  CAP\u00cdTULO 3 \u2013 FERRAMENTAS PARA WORKFLOW? \n\n \n\nO \u00edndice \u00e0 esquerda do espa\u00e7o de trabalho lista todas as ferramentas dispon\u00edveis e os elementos de rede no \n\nCPN Tools (Figura 3.1). Assemelha-se a \u00e1rvore de arquivos do Windows Explorer, e o usu\u00e1rio pode arrastar \n\npalhetas de ferramentas, p\u00e1ginas de rede de Petri colorida (New Page), ou declara\u00e7\u00f5es de conjuntos de cores \n\n(colset) ou vari\u00e1veis (var) para o espa\u00e7o de trabalho. No exemplo abaixo, as palhetas Create e Sim foram \n\narrastadas do \u00edndice para o espa\u00e7o de trabalho.  \n\n \nFigura 3.1. Interface CPN Tools \n\n \n\nCom a ferramenta Create criam-se elementos rdPc, isto \u00e9, lugares (elipses), transi\u00e7\u00f5es (ret\u00e2ngulos) e arcos \n\n(setas). Todos os elementos da rede podem ser criados usando palhetas ou menus de marca\u00e7\u00e3o (clique com bot\u00e3o \n\ndireito). Esses elementos podem ser posicionados livremente dentro de uma folha, ou ligados \u00e0s linhas guias \n\nmagn\u00e9ticas mantendo os objetos alinhados. \n\nA adi\u00e7\u00e3o de inscri\u00e7\u00f5es (nomes, express\u00f5es e tipos de cores associados aos lugares) aos elementos da rede \u00e9 \n\nfeita clicando sobre o elemento. Isso selecionar\u00e1 a inscri\u00e7\u00e3o-padr\u00e3o do elemento, por exemplo, o nome de um \n\nlugar ou a express\u00e3o de um arco. Para editar as demais inscri\u00e7\u00f5es de um mesmo objeto, a tecla TAB pode ser \n\nusada para se mover de uma inscri\u00e7\u00e3o para outra do objeto em quest\u00e3o. A verifica\u00e7\u00e3o de sintaxe do modelo em \n\nCPN Tools \u00e9 feita automaticamente a cada declara\u00e7\u00e3o ou inscri\u00e7\u00e3o editada. \n\n\n\n3.1 CPN Toos  19 \n\n \n\n \n\n3.1.2. Processos de neg\u00f3cios em CPN Tools \n\nA Figura 3.2 apresenta o modelo do \u201cprocesso de atendimento a reclama\u00e7\u00f5es\u201d, apresentado na Se\u00e7\u00e3o 2.2.1, \n\nimplementado pela ferramenta CPN Tools em sua marca\u00e7\u00e3o inicial. Apenas a transi\u00e7\u00e3o registrar est\u00e1 \n\ninicialmente habilitada para disparo, pois as fichas (10`r) em seu lugar de entrada (Reclama\u00e7\u00e3o) satisfazem a \n\nexpress\u00e3o de arco (1`r). \n\n \n\nFigura 3.2. Exemplo de atendimento de reclama\u00e7\u00f5es usando CPN Tools \n\n \n\nAs simula\u00e7\u00f5es s\u00e3o controladas pela ferramenta de simula\u00e7\u00e3o: palheta Sim. Os \u00edcones para as ferramentas da \n\nsimula\u00e7\u00e3o assemelham-se a teclas de um gravador de v\u00eddeo cassete (ver Figura 3.1). As teclas possuem as \n\nseguintes fun\u00e7\u00f5es ordenadas da esquerda para direita:  \n\n1\u00aa) Mais \u00e0 esquerda: retorna uma rdPc a sua marca\u00e7\u00e3o inicial;  \n\n2\u00aa) P\u00e1ra uma simula\u00e7\u00e3o de rdPc;  \n\n3\u00aa) Permite a escolha manual de uma transi\u00e7\u00e3o a ser disparada e o valor associado \u00e0s vari\u00e1veis em quest\u00e3o;  \n\n4\u00aa) Dispara uma transi\u00e7\u00e3o habilitada;  \n\n5\u00aa) Realiza um determinado n\u00famero de transi\u00e7\u00f5es exibindo as marca\u00e7\u00f5es intermedi\u00e1rias; \n\n6\u00aa) Realiza determinada quantidade de transi\u00e7\u00f5es sem exibir as marca\u00e7\u00f5es intermedi\u00e1rias.  \n\n \n\n\n\n20  CAP\u00cdTULO 3 \u2013 FERRAMENTAS PARA WORKFLOW? \n\n \n\n \n\nFigura 3.3. Exemplo de atendimento de reclama\u00e7\u00f5es ap\u00f3s 20 transi\u00e7\u00f5es \n\n \n\nNa Figura 3.3 visualiza-se o estado da rede ap\u00f3s 20 disparos de transi\u00e7\u00e3o simulados pela ferramenta CPN \n\nTools, habilitando a transi\u00e7\u00e3o reportar, pois o valor da ficha em Carta enviada (ce = 3) mais o valor da ficha em \n\nCliente pago (cp = 1) ultrapassa tr\u00eas, atendendo a express\u00e3o de guarda (ce+cp)>3. \n\n \n\n3.2. Sistema KEPLER \n\nMuitos cientistas conduzem an\u00e1lises em ambientes diferentes de hardware e software, coordenando \n\nmanualmente a exporta\u00e7\u00e3o e importa\u00e7\u00e3o de dados de um ambiente para outro. O sistema de workflow cient\u00edfico \n\nKEPLER, agilizando a cria\u00e7\u00e3o e execu\u00e7\u00e3o de workflows, \u00e9 de uso pr\u00e1tico aos cientistas, que assim podem \n\nprojetar, executar, monitorar, re-executar e comunicar procedimentos anal\u00edticos repetidamente com esfor\u00e7o \n\nm\u00ednimo. Esse sistema combina projeto de workflow em alto n\u00edvel com execu\u00e7\u00e3o e intera\u00e7\u00e3o em tempo de \n\nexecu\u00e7\u00e3o, acesso a dados remotos e locais e servi\u00e7os de invoca\u00e7\u00e3o remota e local. \n\nKEPLER foi constru\u00eddo a partir do sistema orientado a fluxo de dados PTOLEMY II [28], herdando suas \n\ncaracter\u00edsticas e acrescentando outras novas para apoiar workflows cient\u00edficos. Ambos est\u00e3o fundamentados em \n\nmodelo formal de workflow cient\u00edfico embasado em modelagem e projeto orientado a atores, originalmente \n\ndesenvolvido para modelagem de sistemas concorrentes complexos.  \n\n \n\n\n\n3.2 Sistema KEPLER  21 \n\n \n\n3.2.1. Constru\u00e7\u00e3o e edi\u00e7\u00e3o de workflows cient\u00edficos \n\nNesta se\u00e7\u00e3o, ser\u00e1 apresentada uma cole\u00e7\u00e3o de primitivas b\u00e1sicas de desenvolvimento de workflow cient\u00edfico \n\norientado a atores. Cada primitiva corresponde a uma opera\u00e7\u00e3o b\u00e1sica do modelo formal. Primitivas podem ser \n\ndescritas como transforma\u00e7\u00f5es resultantes da aplica\u00e7\u00e3o de opera\u00e7\u00f5es ao workflow.  \n\nTransforma\u00e7\u00e3o B\u00e1sica Workflow inicial Workflow resultante 1 Workflow Resultante 2 \n\nt1: Introdu\u00e7\u00e3o de entidade  \n\n(ator ou conex\u00e3o) \n\n \n\n \n  \n\n \n\nt2: Introdu\u00e7\u00e3o de porta  \n   \n\n \n\nt3: Abstra\u00e7\u00e3o hier\u00e1rquica \n  \n\n \n\n \n\nt4: Refinamento hier\u00e1rquico \n  \n\n \n\nt5: Conex\u00e3o de fluxo de \n\ndados    \n\n \n\nt6: Introdu\u00e7\u00e3o de diretor \n  \n\n \n\nTabela 3.1 Primitivas b\u00e1sicas de projeto orientado a ator [24] \n\nA Tabela 3.1 resume as primitivas: apresenta a transforma\u00e7\u00e3o associada a cada primitiva (primeira coluna) e \n\nos poss\u00edveis resultados (colunas 3 e 4) de sua aplica\u00e7\u00e3o num dado workflow inicial (coluna 2). S\u00e3o elas:  \n\nt1: Inserir novo ator e novas conex\u00f5es de fluxo de dados ao workflow; \n\nt2: Adicionar portas de entrada e sa\u00edda aos atores;  \n\nt3: Agrupar uma parte do workflow (abstra\u00e7\u00e3o) em um ator composto; \n\nt4: Definir um ator enquanto composi\u00e7\u00e3o; \n\nt5: Cria\u00e7\u00e3o de conex\u00e3o de fluxo de dados; \n\nt6: Associar um diretor a um workflow. \n\n\n\n22  CAP\u00cdTULO 3 \u2013 FERRAMENTAS PARA WORKFLOW? \n\n \n\nAtores do modelo proposto por Agha [33] s\u00f3 podem enviar mensagens para atores conhecidos - cujos \n\nendere\u00e7os lhes foram dados em tempo de cria\u00e7\u00e3o, ou recebidos por mensagem, ou atores que ele pr\u00f3prio criou. \n\nNo sistema KEPLER, a restri\u00e7\u00e3o equivalente \u00e9 que um ator s\u00f3 pode enviar uma mensagem para outro se existir \n\nrefer\u00eancia \u00e0 porta de entrada do \u00faltimo. Essa refer\u00eancia \u00e9 obtida pela topologia do workflow, ou seja, \n\nverificando-se as portas conectadas. \n\nO sistema KEPLER possui uma interface gr\u00e1fica e bibliotecas de componentes para cria\u00e7\u00e3o de workflows \n\ncient\u00edficos execut\u00e1veis. Para desenvolver um sistema de workflow cient\u00edfico no Kepler, o usu\u00e1rio utiliza a \n\ninterface gr\u00e1fica para arrastar e colocar os componentes na \u00e1rea de desenvolvimento, conectando-os de maneira a \n\nobter o fluxo de dados desejado. \n\nNovos atores podem ser codificados e adicionados a biblioteca local do sistema. Atores compostos podem \n\nser definidos e implementados a partir de outros atores j\u00e1 dispon\u00edveis nas bibliotecas. Segue exemplo de projeto \n\ne implementa\u00e7\u00e3o de workflow cient\u00edfico. \n\n \n\n3.2.2. Workflow cient\u00edfico no sistema KEPLER \n\nA Figura 3.4 apresenta um exemplo simples de workflow cient\u00edfico que utiliza componentes dispon\u00edveis na \n\nbiblioteca KEPLER como atores. Apenas o ator composto Estat\u00edstica foi criado por usu\u00e1rio. Essa implementa\u00e7\u00e3o \n\nl\u00ea uma lista de n\u00fameros inteiros do arquivo especificado em File Reader, calcula par\u00e2metros estat\u00edsticos b\u00e1sicos \n\n(m\u00e9dia, desvio-padr\u00e3o e vari\u00e2ncia) e grava os resultados em arquivo, especificado em File Writer. O ator \n\ncomposto Estat\u00edstica cont\u00e9m um subworkflow que calcula os valores estat\u00edsticos, convertendo-os em uma lista \n\nde valores (vetor). Os atores Expression To Token e Token To Expression foram utilizados para converter os \n\nvalores do tipo String para valores num\u00e9ricos e vice-versa. As portas de sa\u00edda dos atores Expression To Token e \n\nEstat\u00edstica est\u00e3o conectadas a atores do tipo Display, chamados Array Entrada e Array Sa\u00edda, que exibem na \n\ntela a lista de valores de entrada e sa\u00edda, respectivamente. \n\nCada a\u00e7\u00e3o \u00e9 representada pelos atores e estes se comunicam por meio de canais (conex\u00f5es de fluxo de \n\ndados). A execu\u00e7\u00e3o total do workflow \u00e9 orquestrada por um diretor de fluxo de dados s\u00edncrono (SDF). \n\n\n\n3.2 Sistema KEPLER  23 \n\n \n\n \n\nFigura 3.4. Exemplo de workflow orientado a ator representado no sistema KEPLER \n\nO mecanismo de ocultar detalhes de um subworkflow em um componente chamado ator composto \u00e9 \n\nessencial para moderar a complexidade. Esse conceito \u00e9 representado pelo ator Estat\u00edstica detalhado na Figura \n\n3.5. \n\nO ator SummaryStatistics recebe uma lista de inteiros em sua porta de entrada, que se comunica com a porta \n\nde entrada do subworkflow. Este ator calcula e envia para sua sa\u00edda os par\u00e2metros: m\u00e9dia, desvio-padr\u00e3o e \n\nvari\u00e2ncia dos valores de entrada. Esses resultados s\u00e3o recebidos na porta de entrada do ator Elements to Array e \n\ntransformados em uma lista de valores (vetor), enviada para sua porta de sa\u00edda, que se conecta \u00e0 porta de sa\u00edda \n\ndo subworkflow (port2). \n\n \nFigura 3.5. Detalhamento do ator composto Estat\u00edstica \n\n\n\n24  CAP\u00cdTULO 3 \u2013 FERRAMENTAS PARA WORKFLOW? \n\n \n\nO modelo de computa\u00e7\u00e3o, definido por meio da escolha de um diretor para o workflow, especifica todos os \n\ncomportamentos de comunica\u00e7\u00e3o entre atores, separando a preocupa\u00e7\u00e3o de orquestrar (diretor) da preocupa\u00e7\u00e3o \n\nde executar (ator). \n\nCom o diretor Process Network - PN, o sistema \u00e9 modelado como uma rede de processos, ou seja, o diretor \n\nexecuta cada ator como um processo (linha de execu\u00e7\u00e3o) independente, mas que se comunica com outros por \n\npassagem de mensagens (seq\u00fc\u00eancias de fichas de dados). Para isso, s\u00e3o utilizadas as conex\u00f5es de dados \u2013 com \n\ncanais unidirecionais do tipo FIFO (first-in-first-out). Tal comunica\u00e7\u00e3o \u00e9 ass\u00edncrona, ou seja, o emissor n\u00e3o \n\nprecisa esperar que o receptor esteja pronto para enviar fichas de dados. Da\u00ed a import\u00e2ncia do uso de canais do \n\ntipo FIFO para armazenar as fichas de dados que chegam \u00e0s portas de entrada dos atores. \n\nNesse modelo, os atores representam fun\u00e7\u00f5es mapeando seq\u00fc\u00eancias de fichas de entrada em seq\u00fc\u00eancias de \n\nsa\u00edda. Uma tarefa fica bloqueada tentando ler seu canal de dados vazio, at\u00e9 que a mensagem esteja dispon\u00edvel, ou \n\nseja, os dados apresentem-se em suas portas de entrada.  \n\nEsse diretor \u00e9 mais indicado para modelagem de sistemas paralelos ou que necessitam de controle de \n\nexecu\u00e7\u00e3o din\u00e2mico, ou seja, com ocorr\u00eancia de tarefas determinada em tempo de execu\u00e7\u00e3o. V\u00e1rios exemplos \n\napresentados na Se\u00e7\u00e3o 4.2 utilizam diretor PN. \n\nUsando-se o diretor Syncronous Dataflow - SDF, uma especializa\u00e7\u00e3o de Process Network, atores enviam ou \n\nrecebem uma quantidade fixa de fichas de dados a cada disparo (execu\u00e7\u00e3o). A ordem de disparo dos atores \u00e9 \n\ndeterminada estatisticamente antes da execu\u00e7\u00e3o do modelo, gerando um plano de execu\u00e7\u00e3o (schedule) antes da \n\nprimeira itera\u00e7\u00e3o do workflow. Essa ordena\u00e7\u00e3o garante que um ator s\u00f3 realiza sua tarefa ap\u00f3s a execu\u00e7\u00e3o de \n\natores cujos dados de sa\u00edda s\u00e3o necess\u00e1rios em sua entrada. \n\nO uso diretor SDF resulta numa execu\u00e7\u00e3o com sobrecarga m\u00ednima, assim como menos desperd\u00edcio de \n\nmem\u00f3ria e impossibilita a ocorr\u00eancia de um impasse. Apesar da execu\u00e7\u00e3o mais eficiente, o SDF \u00e9 est\u00e1tico, ou \n\nseja, o mesmo n\u00famero de fichas \u00e9 consumido a cada itera\u00e7\u00e3o por todos os atores. Isso impede o uso de estrutura \n\nde controle din\u00e2mica, pois ela pode decidir, em tempo de execu\u00e7\u00e3o, quais atores devem executar e a quantidade \n\nde fichas que ser\u00e1 consumida. No exemplo da Figura 3.4, apresenta-se um modelo simples, no qual a seq\u00fc\u00eancia \n\nde tarefas \u00e9 facilmente determinada pelo diretor SDF. Outros exemplos s\u00e3o apresentados na Se\u00e7\u00e3o 4.2. \n\n3.3. Conclus\u00e3o \n\nNeste cap\u00edtulo, foram apresentadas as ferramentas CPN Tools e KEPLER, que se prop\u00f5em a implementar os \n\nformalismos apresentados no Cap\u00edtulo 2. Elas ser\u00e3o comparadas no pr\u00f3ximo cap\u00edtulo, com base nos padr\u00f5es de \n\ndados propostos por Russel e Aalst. \n\n\n\n \n\n25 \n\n \n \n \n \n \nCap\u00edtulo 4 \n\n \n \n \n\nPadr\u00f5es de controle de dados em CPN Tools e KEPLER \n\n \n\nNeste cap\u00edtulo, s\u00e3o comparadas as ferramentas CPN Tools e KEPLER. Os padr\u00f5es de controle de dados de \n\nrefer\u00eancia s\u00e3o abordados na primeira se\u00e7\u00e3o deste Cap\u00edtulo. \n\nNa segunda se\u00e7\u00e3o, s\u00e3o apresentadas duas representa\u00e7\u00f5es para cada um dos padr\u00f5es comparados. A primeira \n\ncorresponde a uma possibilidade de representa\u00e7\u00e3o do padr\u00e3o utilizando CPN Tools, e a segunda, usando \n\nKEPLER. Para cada padr\u00e3o, ser\u00e3o discutidas as caracter\u00edsticas de cada ferramenta que permitem ou impedem a \n\nsua representa\u00e7\u00e3o, abordando, assim, os limites representativos de cada ferramenta e de seu respectivo \n\nformalismo. \n\nPara cada padr\u00e3o, as ferramentas ser\u00e3o classificadas segundo sua capacidade de represent\u00e1-lo. A ferramenta \n\nrepresentar\u00e1 o padr\u00e3o quando estiverem presentes estruturas e conceitos necess\u00e1rios para isso. A ferramenta n\u00e3o \n\nrepresentar\u00e1 o padr\u00e3o quando faltarem estruturas ou conceitos necess\u00e1rios para a sua representa\u00e7\u00e3o. Diz-se que a \n\nferramenta representa parcialmente o padr\u00e3o quando as estruturas e conceitos existentes s\u00e3o suficientes para \n\nrepresentar o padr\u00e3o indiretamente ou apenas parte das situa\u00e7\u00f5es compreendidas por ele. \n\nAp\u00f3s as compara\u00e7\u00f5es, a terceira se\u00e7\u00e3o apresenta sinteticamente os resultados obtidos e analisados em tabelas \n\nque facilitam a visualiza\u00e7\u00e3o dos resultados. \n\n \n\n4.1. Padr\u00f5es de controle de dados   \n\nAo propor uma caracteriza\u00e7\u00e3o e delimita\u00e7\u00e3o de representa\u00e7\u00e3o e controle de dados em ambientes distintos, de \n\nneg\u00f3cios e cient\u00edficos, comparando seus respectivos formalismos, surge o questionamento: como comparar \n\nabordagens com terminologias t\u00e3o diferentes? Por\u00e9m, apesar das diferen\u00e7as, processos de neg\u00f3cio e workflows \n\ncient\u00edficos possuem suas bases nos conceitos de workflow. Assim, a iniciativa de trabalho e pesquisa sobre \n\n\n\n26 CAP\u00cdTULO 4 \u2013 PADR\u00d5ES DE CONTROLE DE DADOS EM CPN TOOLS E KEPLER ? \n\n \n\npadr\u00f5es de dados de workflow, realizado por Russel e Aalst, fornece a base conceitual para an\u00e1lise aprofundada \n\nda perspectiva de controle de dados em ambos os formalismos. \n\nConsiderando uma s\u00e9rie de comportamentos-padr\u00e3o recorrente em diferentes paradigmas de modelagem de \n\nworkflow, Russel e Aaslt em [1] descrevem 39 padr\u00f5es de dados que podem ser classificados em quatro grupos: \n\nI) Visibilidade de dados: relacionados com a amplitude e a maneira pela qual os dados podem ser vistos por \n\nv\u00e1rios componentes de um workflow. Identifica o escopo dos dados em um modelo de workflow; \n\nII) Intera\u00e7\u00e3o de dados: centrados na maneira pela qual os dados s\u00e3o comunicados entre elementos ativos \n\n(componentes) dentro de um processo de workflow e como esses componentes podem influenciar o tr\u00e1fego \n\ndesses dados; \n\nIII) Transfer\u00eancia de dados: considera os meios pelos quais a transfer\u00eancia real de dados ocorre entre os \n\ncomponentes do workflow. Descreve os diversos mecanismos de transmiss\u00e3o de dados por meio da interface \n\nde um componente de workflow, caracterizando a passagem de dados por valor ou refer\u00eancia; \n\nIV) Roteamento baseado em dados (controle de fluxo de tarefas): caracteriza a maneira pela qual os dados \n\npodem influenciar o funcionamento de outros aspectos do workflow, em particular, a perspectiva de controle \n\nde fluxo de tarefas. \n\nPara o presente trabalho, foram escolhidos 10 padr\u00f5es para estudo e compara\u00e7\u00e3o de controle de dados nas \n\nferramentas de workflows apresentadas no Cap\u00edtulo 3. Como o enfoque deste trabalho est\u00e1 na caracteriza\u00e7\u00e3o de \n\ncomo cada formalismo e suas respectivas ferramentas representam o envio de dados entre as tarefas do workflow \n\ne como eles podem influenciar o controle de fluxo das tarefas, os padr\u00f5es descritos nos grupos I e III \n\nimediatamente s\u00e3o descartados por fugirem desse contexto. \n\nDentre os seis padr\u00f5es de intera\u00e7\u00e3o de dados (grupo II) foram selecionados os tr\u00eas padr\u00f5es mais simples, \n\nficando os demais para aprofundamento em trabalhos futuros. Os sete padr\u00f5es do quarto grupo - roteamento \n\nbaseado em dados \u2013 ser\u00e3o considerados nessa compara\u00e7\u00e3o por relacionarem-se diretamente \u00e0 influ\u00eancia dos \n\ndados no controle de fluxo de tarefas. \n\nPara cada padr\u00e3o, ser\u00e3o apresentadas as seguintes informa\u00e7\u00f5es: defini\u00e7\u00e3o, contendo a descri\u00e7\u00e3o do padr\u00e3o; \n\nmotiva\u00e7\u00e3o, descrevendo poss\u00edveis situa\u00e7\u00f5es ou exemplos justificando o uso do padr\u00e3o; implementa\u00e7\u00e3o, \n\napresentando poss\u00edveis solu\u00e7\u00f5es pr\u00e1ticas j\u00e1 observadas em distintas ferramentas dispon\u00edveis no mercado. Na \n\nseq\u00fc\u00eancia, ser\u00e3o apresentados exemplos de implementa\u00e7\u00e3o do padr\u00e3o em quest\u00e3o nas ferramentas CPN Tools e \n\nKEPLER, seguidos da an\u00e1lise da solu\u00e7\u00e3o dada. \n\n\n\n4.2 Representa\u00e7\u00e3o dos padr\u00f5es de controle de dados  27 \n\n \n\n \n\n4.2. Representa\u00e7\u00e3o dos padr\u00f5es de controle de dados \n\n4.2.1. Padr\u00f5es de intera\u00e7\u00e3o de dados \u2013 grupo II \n\nPadr\u00e3o 8: Tarefa a tarefa  \n\nDefini\u00e7\u00e3o. Capacidade de comunicar dados entre duas inst\u00e2ncias de tarefas em um mesmo caso. \n\nMotiva\u00e7\u00e3o. A passagem dos elementos de informa\u00e7\u00e3o (dados) entre tarefas \u00e9 fundamental em sistemas de \n\nworkflow. Em muitas situa\u00e7\u00f5es, tarefas realizam suas atividades em seu pr\u00f3prio espa\u00e7o de mem\u00f3ria sem \n\ncompartilhar dados em uma base global. O n\u00e3o compartilhamento requer transporte de dados entre tarefas \n\ndistintas, quando estas utilizam dados em comum. \n\nImplementa\u00e7\u00e3o. Todos os sistemas de workflow permitem a passagem de par\u00e2metros entre tarefas. No entanto, \n\nisso pode ocorrer de v\u00e1rias maneiras diferentes, dependendo da rela\u00e7\u00e3o entre as perspectivas de fluxo de dados e \n\nde controle de fluxo de tarefas no workflow. Seguem-se tr\u00eas abordagens para passagem de dados. \n\n1) Canais de controle de fluxo e controle de dados integrados (Figura 4.1): onde ambos, controle de fluxo de \n\ntarefas e dados, s\u00e3o transmitidos simultaneamente entre tarefas utilizando o mesmo canal. \n\n \nFigura 4.1. Canais de controle de fluxo e controle de dados integrados[1] \n\n2) Canais de dados distintos (Figura 4.2): os dados s\u00e3o transferidos entre tarefas via canais de dados \n\nexpl\u00edcitos, que s\u00e3o distintos dos canais de controle de fluxo de tarefas dentro do workflow. \n\n \nFigura 4.2. Canais de dados distintos [1] \n\nCanais de dados distintos \n\ntarefa \n\nA \nuse (X, Y) \n\nC \nuse (Y) \n\nB \nuse (X) \n\npass (Y) \npass (X) \n\npass (Y) \n\nCanais de controle de fluxo e controle de dados integrados \n\ntarefa \n\nA \nuse (X, Y) \n\nC \nuse (Y) \n\nB \nuse (X) \n\npass (Y) pass (X, Y) \n\n\n\n28 CAP\u00cdTULO 4 \u2013 PADR\u00d5ES DE CONTROLE DE DADOS EM CPN TOOLS E KEPLER ? \n\n \n\n3) N\u00e3o h\u00e1 passagem de dados (Figura 4.3): tarefas partilham os mesmos dados (por ex.: por meio de acesso a \n\ndados compartilhados globalmente), prescindindo de passagem expl\u00edcita de dados. \n\n \nFigura 4.3. Sem passagem de dados [1] \n\nCPN Tools: utiliza a primeira abordagem. Os dados s\u00e3o transmitidos entre tarefas (transi\u00e7\u00f5es) por meio de arcos \n\ne suas express\u00f5es. Na Figura 4.4, a express\u00e3o Eng representa o dado (ficha) a ser consumido pela tarefa \n\n(enviaEngradado ou recebeEngradado) ou produzido em sua sa\u00edda. \n\n \nFigura 4.4. Abordagens para intera\u00e7\u00e3o de dados entre tarefas no CPN Tools \n\nKEPLER: utiliza a primeira abordagem, por meio das conex\u00f5es de fluxo de dados (conex\u00e3o entre atores) e a \n\nterceira abordagem quando utiliza par\u00e2metros globais. A Figura 4.5 mostra os dois casos. Os dados dos atores \n\nAtor1, Ator2, Ator3 para AddSub s\u00e3o enviados por meio de suas respectivas conex\u00f5es. Entre o ator AddSub e os \n\natores Display e AtualizaParametro a mesma implementa\u00e7\u00e3o se repete. Um par\u00e2metro global, inicialmente \n\nvalendo 10, \u00e9 declarado e utilizado pelo Ator3. Esse mesmo par\u00e2metro \u00e9 atualizado em AtualizaParametro com \n\no resultado da soma enviado por AddSub. Numa segunda execu\u00e7\u00e3o desse mesmo workflow, o par\u00e2metro usado \n\npelo Ator3 j\u00e1 possui novo valor. Essa implementa\u00e7\u00e3o demonstra a possibilidade da ferramenta de transmitir \n\nvalores por meio de par\u00e2metros globais, sem a passagem expl\u00edcita de dados entre as tarefas. \n\nSem passagem de dados \n\ntarefa \n\nA \nuse (X, Y) \n\nC \nuse (Y) \n\nB \nuse (X) \n\ndados globais \n \ndef var X \ndef var Y \n\n\n\n4.2 Representa\u00e7\u00e3o dos padr\u00f5es de controle de dados  29 \n\n \n\n \nFigura 4.5. Abordagens para intera\u00e7\u00e3o de dados entre tarefas no sistema KEPLER \n\nPadr\u00e3o 9: Bloco de tarefas para subworkflow  \n\nDefini\u00e7\u00e3o. Capacidade de transmitir dados de uma inst\u00e2ncia de bloco tarefa (ator composto ou supernodo) ao \n\nsubworkflow correspondente. \n\nMotiva\u00e7\u00e3o. A maioria dos sistemas de workflow possui a no\u00e7\u00e3o de composi\u00e7\u00e3o ou blocos de tarefas de alguma \n\nforma. S\u00e3o an\u00e1logos a chamadas de procedimentos em linguagem de programa\u00e7\u00e3o. Indicam uma tarefa cuja \n\nimplementa\u00e7\u00e3o \u00e9 descrita mais detalhadamente em outro n\u00edvel de abstra\u00e7\u00e3o (normalmente em outras partes do \n\nprojeto de workflow). No n\u00edvel mais alto de abstra\u00e7\u00e3o, a composi\u00e7\u00e3o se denomina bloco de tarefas, ou \n\nsupernodo, em redes de Petri, ou ator composto em KEPLER. J\u00e1 o detalhamento, \u00e9 chamado subworkflow. A \n\nquest\u00e3o que surge quando os dados s\u00e3o passados para um bloco de tarefas \u00e9 se eles s\u00e3o imediatamente acess\u00edveis \n\npor todas as tarefas que comp\u00f5e a implementa\u00e7\u00e3o de seu subworkflow, ou se os dados devem passar \n\nexplicitamente entre o bloco de tarefas e os subworkflows. \n\nImplementa\u00e7\u00e3o. Normalmente, tr\u00eas abordagens podem ser usadas para tratar a comunica\u00e7\u00e3o de par\u00e2metros de \n\num bloco tarefa para sua implementa\u00e7\u00e3o (subworkflow). As caracter\u00edsticas de cada abordagem s\u00e3o as seguintes: \n\n1) Passagem de dados impl\u00edcita (Figura 4.6): o dado passado ao bloco de tarefas fica imediatamente \n\nacess\u00edvel a todas as sub-tarefas. Dispensa passagem expl\u00edcita de dados entre o bloco de atividades e sua \n\nimplementa\u00e7\u00e3o. Os dados est\u00e3o acess\u00edveis ao subworkflow; \n\n\n\n30 CAP\u00cdTULO 4 \u2013 PADR\u00d5ES DE CONTROLE DE DADOS EM CPN TOOLS E KEPLER ? \n\n \n\n \nFigura 4.6. Intera\u00e7\u00e3o bloco de tarefas - subworkflow com passagem de dados impl\u00edcita [1] \n\n2) Passagem de dados expl\u00edcita via par\u00e2metros (Figura 4.7): dados fornecidos ao bloco de tarefas devem ser \n\nespecificamente passados como par\u00e2metros para sua implementa\u00e7\u00e3o (subworkflow). Neste caso, os dados do \n\nbloco de tarefas s\u00e3o mapeados para dados do subworkflow, com nomes distintos. Esta capacidade proporciona \n\ncerta independ\u00eancia nos nomes de dados do bloco de tarefas e sua implementa\u00e7\u00e3o (subworkflow). Esta situa\u00e7\u00e3o \u00e9 \n\nparticularmente importante quando blocos de tarefas compartilham o mesmo subworkflow; \n\n \nFigura 4.7. Passagem de dados expl\u00edcita via par\u00e2metros [1] \n\nsubworkflow \n\nPassagem de dados expl\u00edcita via par\u00e2metros \n\ntarefa \n\nX \nuse (P, Q) \n\nBloco de tarefa \n\nA \nuse (M, N) \n\nZ \nuse (P, Q) \n\nY \nuse (P, Q) \n\npass (M, N) pass (M, N) \n\npar\u00e2m.entrada \nsubworkflow \n\n \ndef var P:=M \ndef var Q:=N \n\npar\u00e2m.sa\u00edda \nsubworkflow \n\n \ndevolve M:=P \ndevolve N:=Q \n\nsubworkflow \n\nPassagem de dados impl\u00edcita \n\ntarefa \n\nX \nuse (M, N) \n\nBloco de tarefa \n\nA \nuse (M, N) \n\nZ \nuse (N) \n\nY \nuse (M) \n\npass (N) pass (M, N) \n\npass (M, N) pass (M, N) \n\n\n\n4.2 Representa\u00e7\u00e3o dos padr\u00f5es de controle de dados  31 \n\n \n\n3) Passagem de dados expl\u00edcita via canais de dados (Figura 4.8): os dados s\u00e3o passados do bloco de tarefas, \n\nespecificamente via canais de dados, para todas as tarefas no subworkflow que exigem acesso a eles. \n\n \n\nFigura 4.8. Passagem de dados expl\u00edcita via canais de dados [1] \n\nCPN Tools: utiliza a primeira estrat\u00e9gia para passagem de dados para subworkflow. O exemplo da Figura 4.9 \n\nrepresenta quatro supernodos (Sender; Network; RecNo1; RecNo2) que podem ser detalhados em subworkflows. \n\nOs dados do workflow s\u00e3o diretamente acess\u00edveis pelos subworkflows. \n\n \n\nFigura 4.9. Exemplo de blocos de tarefa, ou super-nodos, em CPN Tools \n\nsubworkflow \n\nPassagem de dados explicita via canal de dados \n\ntarefa \n\nX \nuse (M, N) \n\nBloco de tarefa \n\nA \nuse (M, N) \n\nZ \nuse (N) \n\nY \nuse (M) \n\npass (M) \n\npass (N) \n\npass (M, N) pass (M, N) \n\npass (M, N) pass (M, N) \n\n\n\n32 CAP\u00cdTULO 4 \u2013 PADR\u00d5ES DE CONTROLE DE DADOS EM CPN TOOLS E KEPLER ? \n\n \n\nA Figura 4.10 detalha o bloco de tarefas Sender com acesso aos dados do workflow por meio dos lugares A (out) \n\ne D(in). \n\n \nFigura 4.10. Subworkflow em CPN Tools \n\nKEPLER: tamb\u00e9m utiliza a passagem de dados impl\u00edcita. No exemplo da Figura 4.11, o bloco de tarefas (ou \n\nator composto) DemandaEstoque recebe dados por meio de sua porta de entrada deixando-os automaticamente \n\ndispon\u00edveis para sua implementa\u00e7\u00e3o (subworkflow). \n\n \n\nFigura 4.11. Exemplo de blocos de tarefa, ou ator composto no sistema KEPLER \n\n\n\n4.2 Representa\u00e7\u00e3o dos padr\u00f5es de controle de dados  33 \n\n \n\n \n\nA Figura 4.12 detalha o ator composto DemandaEstoque, que por sua vez possui dois outros blocos de \n\ntarefas em sua implementa\u00e7\u00e3o: AtendeDemanda e EstocaEngradado.  \n\n \nFigura 4.12. Subworkflow DemandaEstoque. \n\nV\u00ea-se na Figura 4.12 o bloco de tarefas AtendeDemanda receber dados pela porta de entrada (port) e \n\ndisponibiliz\u00e1-los para sua implementa\u00e7\u00e3o (Figura 4.13). Ap\u00f3s atualiza\u00e7\u00e3o da vari\u00e1vel Demanda, o dado \u00e9 \n\nenviado para a porta de sa\u00edda (port2), ficando dispon\u00edvel para o bloco de tarefas EstocaEngradado (Figura 4.12). \n\n \n\nFigura 4.13. Subworkflow AtendeDemanda. \n\n \n\n\n\n34 CAP\u00cdTULO 4 \u2013 PADR\u00d5ES DE CONTROLE DE DADOS EM CPN TOOLS E KEPLER ? \n\n \n\nPadr\u00e3o 10: Subworkflow para bloco de tarefas \n\nDefini\u00e7\u00e3o. Capacidade de transmitir dados a partir de um subworkflow de volta para seu bloco de tarefa \n\n(inst\u00e2ncia) correspondente. \n\nMotiva\u00e7\u00e3o. Encerrando a execu\u00e7\u00e3o do subworkflow, os dados ficar\u00e3o dispon\u00edveis para o bloco de atividades que \n\no chamou. \n\nImplementa\u00e7\u00e3o. As abordagens adotadas para lidar com esse padr\u00e3o s\u00e3o essencialmente as mesmas \n\nidentificadas pelo Padr\u00e3o 9. Quando a transmiss\u00e3o dos dados \u00e9 expl\u00edcita, um mapeamento deve ser especificado \n\npara cada par\u00e2metro de sa\u00edda indicando quais elementos no n\u00edvel de bloco de tarefas receber\u00e3o os respectivos \n\nvalores de sa\u00edda. \n\n \n\n4.2.2. Padr\u00f5es de roteamento baseado em dados (controle de fluxo de tarefas) - grupo IV \n\nPadr\u00e3o 33: Pr\u00e9-condi\u00e7\u00e3o de tarefa \u2013 exist\u00eancia de dados (Figura 4.14) \n\nDefini\u00e7\u00e3o. Pr\u00e9-condi\u00e7\u00f5es baseadas em dados podem ser especificadas para tarefas dependentes da presen\u00e7a de \n\ndados em sua entrada no momento da execu\u00e7\u00e3o. \n\nMotiva\u00e7\u00e3o. \u00c9 desej\u00e1vel a habilidade para lidar com aus\u00eancia de dados no momento em que uma tarefa \u00e9 \n\ninvocada. Isto permite que sejam tomadas medidas corretivas durante a execu\u00e7\u00e3o do workflow, evitando erro e \n\ntravamento da a\u00e7\u00e3o. \n\n \n\nFigura 4.14. Pr\u00e9-condi\u00e7\u00e3o de tarefa \u2013 exist\u00eancia de dados [1] \n\nImplementa\u00e7\u00e3o. Geralmente, pr\u00e9-condi\u00e7\u00f5es de exist\u00eancia de dados s\u00e3o especificadas em par\u00e2metros de entrada \n\nda tarefa no modelo de projeto do workflow. Nesse contexto, a exist\u00eancia de dados refere-se \u00e0 capacidade de \n\ncaso \n\nworkflow \n\nA \n \n\nuse(R) \n\npar\u00e2metro de \nsa\u00edda \n\nR \n\nB \n \n\nuse(S) \n\npar\u00e2m. entrada \ndef var S:= R \n\npr\u00e9-condi\u00e7\u00e3o \nexiste(R) \n\ntarefa \n\n\n\n4.2 Representa\u00e7\u00e3o dos padr\u00f5es de controle de dados  35 \n\n \n\ndeterminar se um par\u00e2metro requerido foi definido e fornecido \u00e0 tarefa no momento da sua invoca\u00e7\u00e3o da tarefa e \n\nse foi atribu\u00eddo um valor. Uma das cinco a\u00e7\u00f5es \u00e9 poss\u00edvel quando falta a identifica\u00e7\u00e3o dos par\u00e2metros: \n\n1) Adiar in\u00edcio da tarefa at\u00e9 que os par\u00e2metros necess\u00e1rios estejam dispon\u00edveis; \n\n2) Especificar quais valores-padr\u00e3o os par\u00e2metros assumem quando indispon\u00edveis; \n\n3) Pedir valores interativamente para usu\u00e1rios do workflow; \n\n4) Passar essa tarefa e acionar a seguinte tarefa (s); \n\n5) Desativar essa linha de execu\u00e7\u00e3o (thread). \n\n \n\nCPN Tools: Utiliza a primeira abordagem, pois uma transi\u00e7\u00e3o s\u00f3 \u00e9 disparada se as fichas nos lugares de entrada \n\nsatisfizerem as condi\u00e7\u00f5es (express\u00f5es) dos arcos de entrada. No exemplo da Figura 4.15, apenas a transi\u00e7\u00e3o \n\nenviaEngradado est\u00e1 habilitada para disparo, pois as fichas no lugar de entrada Disponiveis (10`Eng) satisfazem \n\na condi\u00e7\u00e3o da express\u00e3o de arco (Eng).  \n\n \n\nFigura 4.15. Pr\u00e9-condi\u00e7\u00e3o de tarefa \u2013 exist\u00eancia de dados em CPN Tools \n\n \n\nJ\u00e1 a transi\u00e7\u00e3o recebeEngradado est\u00e1 desabilitada para disparo, e seu in\u00edcio ser\u00e1 adiado at\u00e9 que o lugar \n\nemTransito possua fichas satisfazendo a express\u00e3o de arco de entrada (Eng). No caso da Figura 4.16, ambas as \n\ntransi\u00e7\u00f5es est\u00e3o habilitadas para disparo. \n\n \nFigura 4.16. Pr\u00e9-condi\u00e7\u00e3o de tarefa \u2013 exist\u00eancia de dados em CPN Tools \n\n \n\n\n\n36 CAP\u00cdTULO 4 \u2013 PADR\u00d5ES DE CONTROLE DE DADOS EM CPN TOOLS E KEPLER ? \n\n \n\nKEPLER: A atividade s\u00f3 inicia quando os dados est\u00e3o dispon\u00edveis nas portas de entrada do ator. Por\u00e9m, os \n\nmecanismos de tratamento diferem com o diretor utilizado. Segue-se avalia\u00e7\u00e3o pra os diretores SDF e PN. \n\nDiretor SDF. Nesse caso, a sem\u00e2ntica de execu\u00e7\u00e3o das atividades funciona assim: uma seq\u00fc\u00eancia bem definida \n\nde realiza\u00e7\u00e3o das atividades \u00e9 determinada, mas para que esse processamento ocorra, dados devem estar \n\ndispon\u00edveis nas portas de entrada de cada ator antes de sua execu\u00e7\u00e3o. Na aus\u00eancia de dados, a atividade \u00e9 adiada \n\nat\u00e9 que os mesmos estejam dispon\u00edveis. Essa ordena\u00e7\u00e3o das atividades \u00e9 feita automaticamente antes da \n\nexecu\u00e7\u00e3o do workflow. \n\n \n\n \nFigura 4.17. Pr\u00e9-condi\u00e7\u00e3o de tarefa \u2013 exist\u00eancia de dados \u2013 Sistema KEPLER com diretor SDF \n\nDiretor PN. Nesse caso, todos os atores est\u00e3o ativos simultaneamente, exceto aqueles sem todos os dados \n\ndispon\u00edveis na entrada. Um ator com mais de uma porta de entrada, como o AddSub na Figura 4.18, depende da \n\nexist\u00eancia de dados em todas as suas portas para ent\u00e3o realizar sua tarefa. Assim, enquanto o ator aguarda a \n\nchegada de dados em uma de suas entradas, a(s) outra(s) pode(m) continuar recebendo dados e armazenando em \n\numa fila, para utiliz\u00e1-los posteriormente, quando a tarefa estiver apta para executar, ou seja, quando tiver dados \n\nem todas as suas portas de entrada. Por\u00e9m, enquanto o ator aguarda chegada de dados em uma de suas portas, \n\npode ocorrer estouro de fila nas demais, por excesso de dados. Isso ocasiona erro na execu\u00e7\u00e3o do workflow.  \n\nA Figura 4.18 exemplifica o ator AddSub recebendo dados do Ator1 v\u00e1rias vezes, por\u00e9m, s\u00f3 uma vez os do \n\nSingle Fire Constant. Assim, enquanto a atividade AddSub aguarda os dados na segunda porta de entrada, os \n\ndados chegando pela primeira porta s\u00e3o armazenados em fila (FIFO) at\u00e9 exceder a capacidade de \n\narmazenamento, gerando erro na execu\u00e7\u00e3o do workflow. \n\n\n\n4.2 Representa\u00e7\u00e3o dos padr\u00f5es de controle de dados  37 \n\n \n\nEsse erro n\u00e3o ocorre no diretor SDF, pois n\u00e3o possui o conceito de fila para armazenar dados em suas portas \n\nde entrada. As atividades s\u00e3o ordenadas e realizadas para gerar a quantidade exata de dados esperada pela \n\npr\u00f3xima atividade. N\u00e3o se gerando o dado, o processamento do workflow se interrompe at\u00e9 que o dado esteja \n\ndispon\u00edvel. \n\n \n\nFigura 4.18. Pr\u00e9-condi\u00e7\u00e3o de tarefa \u2013 exist\u00eancia de dados \u2013 Sistema KEPLER com diretor PN \n\n \n\nPadr\u00e3o 34: Pr\u00e9-condi\u00e7\u00e3o de tarefa \u2013 Valor de dados \n\nDefini\u00e7\u00e3o. Pr\u00e9-condi\u00e7\u00f5es baseadas em dados podem ser especificadas para tarefas que t\u00eam como base o valor de \n\ndeterminado par\u00e2metro no momento da execu\u00e7\u00e3o. \n\nMotiva\u00e7\u00e3o. Capacidade de especificar pr\u00e9-condi\u00e7\u00f5es baseadas no valor dos par\u00e2metros da tarefa, atrasando a \n\nexecu\u00e7\u00e3o da atividade (possivelmente indefinidamente), na qual uma pr\u00e9-condi\u00e7\u00e3o n\u00e3o \u00e9 satisfeita. \n\nImplementa\u00e7\u00e3o. Existem tr\u00eas alternativas poss\u00edveis quando uma pr\u00e9-condi\u00e7\u00e3o baseada em valor n\u00e3o \u00e9 \n\nencontrada: \n\n1) A tarefa pode ser ignorada e as tarefas subseq\u00fcentes iniciadas; \n\n\n\n38 CAP\u00cdTULO 4 \u2013 PADR\u00d5ES DE CONTROLE DE DADOS EM CPN TOOLS E KEPLER ? \n\n \n\n2) O in\u00edcio da tarefa pode ser adiado at\u00e9 que a condi\u00e7\u00e3o exigida seja satisfeita; \n\n3) A linha de execu\u00e7\u00e3o (thread) no workflow pode ser terminada. \n\n \n\nCPN Tools: implementa a segunda alternativa por meio de dois conceitos: express\u00e3o de arco e express\u00e3o de \n\nguarda. O primeiro, semelhante ao padr\u00e3o anterior, permite o adiamento do disparo de uma transi\u00e7\u00e3o at\u00e9 que a \n\nexpress\u00e3o, baseada em valores, associada ao arco de entrada dessa transi\u00e7\u00e3o seja satisfeita. O segundo adia o \n\ndisparo da transi\u00e7\u00e3o enquanto uma condi\u00e7\u00e3o associada \u00e0 mesma, chamada express\u00e3o de guarda, n\u00e3o for \n\nsatisfeita. Essa express\u00e3o \u00e9 baseada em valores de dados do arco de entrada. \n\nNo exemplo da Figura 4.19, a transi\u00e7\u00e3o enviaCarta n\u00e3o est\u00e1 habilitada, pois o valor da ficha em \n\nVagasVazias \u00e9 zero, n\u00e3o satisfazendo a express\u00e3o de guarda n>0. \n\n \n\n \nFigura 4.19. Pr\u00e9-condi\u00e7\u00e3o de tarefa \u2013 valor de dados \u2013 CPN Tools \n\nKEPLER: n\u00e3o apresenta implementa\u00e7\u00e3o direta de pr\u00e9-condi\u00e7\u00e3o nos atores com base em valores de dados. Esse \n\ntipo de comportamento \u00e9 referenciado em [28] como caracter\u00edstica do diretor Rendezvous, um modelo de \n\ncomputa\u00e7\u00e3o baseado em CSP (Communicating Sequencial Processes) implementado no sistema PTOLEMY, \n\npredecessor de KEPLER. Por\u00e9m, tal diretor n\u00e3o \u00e9 implementado por esse sistema, desviando-se do escopo deste \n\ntrabalho. \n\nPor outro lado, para representar a necessidade de uma tarefa atender a uma pr\u00e9-condi\u00e7\u00e3o baseada em valores \n\ndos dados, \u00e9 poss\u00edvel construir solu\u00e7\u00f5es a partir de alguns componentes do tipo Workflow Control, como o ator \n\n\n\n4.2 Representa\u00e7\u00e3o dos padr\u00f5es de controle de dados  39 \n\n \n\nBoolean Switch, usado no exemplo da Figura 4.20. O subworkflow DemandaEstoque s\u00f3 \u00e9 ativado quando o \n\npar\u00e2metro Demanda for diferente de zero. \n\n \n\nFigura 4.20. Pr\u00e9-condi\u00e7\u00e3o de tarefa \u2013 valor de dados \u2013 KEPLER \n\n \n\nO Boolean Switch copia a ficha da sua porta de entrada (\u00e0 esquerda) para a sa\u00edda correspondente ao valor \n\ninformado em sua porta de controle (embaixo). Ou seja, sempre que o valor na porta de controle for igual a \n\nverdadeiro, a sa\u00edda T possui uma c\u00f3pia da ficha da porta de entrada. Quando o valor de controle \u00e9 falso, a sa\u00edda \n\nF apresenta o valor copiado da entrada. \n\nNo exemplo da Figura 4.20, o valor gerado pelo ator Aciona Produ\u00e7\u00e3o \u00e9 enviado \u00e0 porta de entrada do \n\nBoolean Switch, por\u00e9m s\u00f3 \u00e9 copiado para a entrada do ator Demanda Estoque quando o ator Constant gerar o \n\nvalor verdadeiro em sua sa\u00edda, ou seja, quando a par\u00e2metro Demanda for diferente de 0. \n\n \n\nPadr\u00e3o 35: P\u00f3s-condi\u00e7\u00e3o de tarefa \u2013 Exist\u00eancia de dados (Figura 4.21) \n\nDefini\u00e7\u00e3o. P\u00f3s-condi\u00e7\u00f5es baseadas em dados podem ser especificadas para tarefas baseadas na exist\u00eancia de \n\ndeterminados par\u00e2metros em sua sa\u00edda no momento da execu\u00e7\u00e3o. \n\nMotiva\u00e7\u00e3o. A implementa\u00e7\u00e3o deste modelo garante que uma tarefa n\u00e3o pode concluir at\u00e9 que existam os \n\npar\u00e2metros de sa\u00edda especificados e tenham sido atribu\u00eddos valores a eles. \n\n\n\n40 CAP\u00cdTULO 4 \u2013 PADR\u00d5ES DE CONTROLE DE DADOS EM CPN TOOLS E KEPLER ? \n\n \n\n \nFigura 4.21. P\u00f3s-condi\u00e7\u00e3o de tarefa \u2013 exist\u00eancia de dados [1] \n\nImplementa\u00e7\u00e3o. Existem duas alternativas para a implementa\u00e7\u00e3o deste padr\u00e3o em que tarefas t\u00eam uma p\u00f3s-\n\ncondi\u00e7\u00e3o n\u00e3o atendida apesar de terem finalizado toda sua a\u00e7\u00e3o: \n\n1) A tarefa poder\u00e1 ser suspensa at\u00e9 que a p\u00f3s-condi\u00e7\u00e3o exigida seja satisfeita; \n\n2) Implicitamente, a tarefa poderia ser repetida at\u00e9 que a p\u00f3s-condi\u00e7\u00e3o seja alcan\u00e7ada. \n\nA implica\u00e7\u00e3o de ambos os cen\u00e1rios, no entanto, \u00e9 que a tarefa n\u00e3o passa adiante seu controle de fluxo \n\nenquanto os par\u00e2metros necess\u00e1rios n\u00e3o existirem e/ou n\u00e3o tiverem seus valores definidos. \n\nCPN Tools: n\u00e3o implementa este padr\u00e3o. Inexiste a suspens\u00e3o de uma tarefa no modelo CPN Tools, ou repeti\u00e7\u00e3o \n\nimpl\u00edcita, pela aus\u00eancia de dados em sua sa\u00edda. Os disparos das transi\u00e7\u00f5es s\u00e3o controlados por pr\u00e9-condi\u00e7\u00f5es, ou \n\nseja, dependem das fichas em seus lugares de entrada. \n\nKEPLER: n\u00e3o apresenta implementa\u00e7\u00e3o de p\u00f3s-condi\u00e7\u00e3o com base em exist\u00eancia de dados. Semelhante ao \n\npadr\u00e3o anterior, esse tipo de comportamento \u00e9 referenciado em [28] como sendo uma caracter\u00edstica do diretor \n\nRendezvous, um modelo de computa\u00e7\u00e3o implementado no Sistema PTOLEMY, por\u00e9m, inexistente no KEPLER. \n\n \n\nPadr\u00e3o 36: P\u00f3s-condi\u00e7\u00e3o de tarefa \u2013 Valor de dados \n\nDefini\u00e7\u00e3o. P\u00f3s-condi\u00e7\u00f5es baseadas em dados podem ser especificadas para tarefas baseadas no valor de \n\npar\u00e2metros espec\u00edficos em suas sa\u00eddas no momento da execu\u00e7\u00e3o. \n\nMotiva\u00e7\u00e3o. A implementa\u00e7\u00e3o desse padr\u00e3o garantiria a n\u00e3o conclus\u00e3o de uma tarefa at\u00e9 que par\u00e2metros \n\nespec\u00edficos de sa\u00edda tenham um valor determinado ou que seus os dados estejam em um intervalo especificado. \n\ncaso \n\nworkflow \n\nA \n \n\nuse(R) \n\npar\u00e2metro de \nsa\u00edda R \n\np\u00f3s-condi\u00e7\u00e3o \nexiste(R) \n\nB \n \n\nuse(S) \n\npar\u00e2metro de \nentrada \n\ndef var S:= R \n\nn\u00e3o (existe(R)) \n\ninst\u00e2ncia de tarefa \n\n\n\n4.2 Representa\u00e7\u00e3o dos padr\u00f5es de controle de dados  41 \n\n \n\nImplementa\u00e7\u00e3o. Similares ao Padr\u00e3o 35, existem duas op\u00e7\u00f5es para o tratamento de conclus\u00e3o de tarefa a partir \n\nde valores especificados de dados: \n\n1) Atrasar a execu\u00e7\u00e3o at\u00e9 que os valores necess\u00e1rios sejam alcan\u00e7ados.  \n\n2) Implicitamente reexecutar a tarefa. \n\nCPN Tools: de maneira semelhante ao Padr\u00e3o 35, a CPN Tools n\u00e3o implementa esse padr\u00e3o. Os disparos das \n\ntransi\u00e7\u00f5es s\u00e3o controlados por pr\u00e9-condi\u00e7\u00f5es, ou seja, dependem de fichas em seus lugares de entrada e n\u00e3o de \n\nsa\u00edda. \n\nKEPLER: semelhante ao Padr\u00e3o 35, n\u00e3o apresenta mecanismos de implementa\u00e7\u00e3o desse padr\u00e3o.  \n\n \n\nPadr\u00e3o 37 \u2013 Gatilho (trigger) de tarefa baseado em evento \n\nDefini\u00e7\u00e3o. Capacidade de um evento externo desencadear (iniciar) uma tarefa. \n\nMotiva\u00e7\u00e3o. Esse padr\u00e3o concentra-se na possibilidade de um acontecimento externo acionar o in\u00edcio ou rein\u00edcio \n\nde uma tarefa espec\u00edfica de uma inst\u00e2ncia de workflow. Isso permite que o controle de fluxo de tarefas seja \n\ninfluenciado por aplica\u00e7\u00f5es externas. \n\n \nFigura 4.22. Gatilho de tarefa baseado em evento [1] \n\nImplementa\u00e7\u00e3o. Esse dispositivo geralmente assume a forma de uma interface externa do workflow que fornece \n\num meio para aplica\u00e7\u00f5es externas acionarem a execu\u00e7\u00e3o de uma inst\u00e2ncia espec\u00edfica da tarefa. Existem tr\u00eas \n\ndiferentes cen\u00e1rios que podem surgir no contexto desse padr\u00e3o (Figura 4.22).  \n\ncaso \n\nworkflow Processo \nexterno \n\ntarefa \n\nB \n\ntarefa \n\nC \n\n inicia_A () \n\n inicia_B () \n\n inicia_C () \n\ntarefa \n\nA \n\n\n\n42 CAP\u00cdTULO 4 \u2013 PADR\u00d5ES DE CONTROLE DE DADOS EM CPN TOOLS E KEPLER ? \n\n \n\nA primeira alternativa (ilustrada pela fun\u00e7\u00e3o inicia_A( )) \u00e9 a de que a inst\u00e2ncia da tarefa a ser iniciada \u00e9 a \n\nprimeira tarefa no workflow. Isso equivale, em termos de controle, a iniciar um novo caso de workflow em que A \n\n\u00e9 a primeira tarefa. \n\nA segunda alternativa (ilustrada pela fun\u00e7\u00e3o inicia_B( )), \u00e9 a de que o evento externo est\u00e1 acionando o in\u00edcio \n\nde uma tarefa que est\u00e1 no meio de um processo de workflow. A tarefa j\u00e1 tem o controle passado para ela, mas sua \n\nexecu\u00e7\u00e3o \u00e9 suspensa at\u00e9 a ocorr\u00eancia de um evento externo. Tal situa\u00e7\u00e3o \u00e9 mostrada na Figura 4.20 com a tarefa \n\nB j\u00e1 desencadeada como resultado da conclus\u00e3o de A, mas interrompida at\u00e9 que o evento inicia_B( ) ocorra. \n\nA terceira alternativa \u00e9 a de que a tarefa \u00e9 isolada do controle de fluxo principal no workflow e que o \u00fanico \n\nmodo em que pode ser iniciada \u00e9 recebendo est\u00edmulo de um evento externo. A Figura 4.22 mostra inst\u00e2ncia da \n\ntarefa C que s\u00f3 pode ser acionada quando o evento inicia_C ( ) \u00e9 recebido. \n\nCPN Tools: nenhuma das tr\u00eas situa\u00e7\u00f5es \u00e9 implementada pela CPN Tools, pois a ferramenta n\u00e3o disp\u00f5e de \n\nmecanismos de acionamento externo. \n\nKEPLER: apesar de muitos atores da ferramenta KEPLER possu\u00edrem a possibilidade de acionamento por meio \n\nde um gatilho, a ferramenta n\u00e3o disp\u00f5e de mecanismos de acionamento externo. \n\n \n\nPadr\u00e3o 38 \u2013 Gatilho de tarefa baseado em dados (Figura 4.23) \n\nDefini\u00e7\u00e3o. Capacidade de tarefa espec\u00edfica ser desencadeada (iniciada) quando uma express\u00e3o baseada em dados \n\ndo workflow \u00e9 avaliada como verdadeira. \n\n \n\nFigura 4.23. Gatilho de tarefa baseado em dados [1] \n\nMotiva\u00e7\u00e3o. Esse padr\u00e3o fornece um meio de desencadear o in\u00edcio ou rein\u00edcio de uma inst\u00e2ncia de tarefa, quando \n\numa condi\u00e7\u00e3o baseada em dados do workflow \u00e9 satisfeita. \n\nCPN Tools: Esse padr\u00e3o \u00e9 indiretamente implementado por meio de express\u00f5es de guarda incorporando \n\ncondi\u00e7\u00f5es de dados presentes no workflow ou nos arcos de entrada da tarefa a ser desencadeada. Esse mecanismo \n\ncaso \n\nA \n\nworkflow \n\ntarefa \n\nCondi\u00e7\u00e3o \nde \n\ngatilho \n\n\n\n4.2 Representa\u00e7\u00e3o dos padr\u00f5es de controle de dados  43 \n\n \n\nhabilita a transi\u00e7\u00e3o para o disparo, por\u00e9m, n\u00e3o o obriga. No exemplo da Figura 4.24, a tarefa \n\nreabastecePrateleira s\u00f3 \u00e9 habilitada para disparo quando o n\u00famero de itens em Prateleira (m) fica abaixo do \n\nvalor m\u00ednimo (m<MIN), mesmo com grande quantidade de produtos em Estoque (n = 100). \n\n \nFigura 4.24. Gatilho de tarefa baseado em evento \n\nAp\u00f3s reabastecimento da prateleira, a a\u00e7\u00e3o fica desabilitada at\u00e9 a quantidade de produtos na prateleira (m) \n\nrecuperar o valor m\u00ednimo, ap\u00f3s consumo de alguns itens (consomeProduto) (Figura 4.25). \n\n \nFigura 4.25. Ap\u00f3s reabastecimento \n\nA quantidade de produtos abaixo do m\u00ednimo habilita novamente a tarefa reabastecePrateleira (Figura 4.26). \n\n \nFigura 4.26. Quantidade de itens abaixo do valor m\u00ednimo \n\n\n\n44 CAP\u00cdTULO 4 \u2013 PADR\u00d5ES DE CONTROLE DE DADOS EM CPN TOOLS E KEPLER ? \n\n \n\n \n\nKEPLER: V\u00e1rios atores da ferramenta KEPLER possuem porta de entrada definida como trigger, que \n\ndependem apenas da exist\u00eancia de fichas de dados nesta porta para serem acionados, n\u00e3o do valor das fichas \n\nexistentes. Por\u00e9m, \u00e9 poss\u00edvel implementar esse padr\u00e3o com o aux\u00edlio de outros atores, representando a express\u00e3o \n\na ser avaliada como verdadeira ou falsa. \n\nNo exemplo da Figura 4.27 um ator Uniform Distribution Random Number Generator depende do \n\nacionamento de gatilho para gerar uma seq\u00fc\u00eancia aleat\u00f3ria de valores uniformemente distribu\u00eddos entre os \n\nlimites inferior e superior definidos. A cada itera\u00e7\u00e3o um novo n\u00famero aleat\u00f3rio \u00e9 gerado. A configura\u00e7\u00e3o desses \n\nlimites pode ser feita por meio de par\u00e2metros ou por fichas de dados com valores superior e inferior nas \n\nrespectivas portas de entrada. Neste exemplo, foram configurados os par\u00e2metros de limite inferior e superior \n\niguais a 0.0 e 5.0, respectivamente. \n\nO gatilho \u00e9 disparado a partir da sa\u00edda do ator Boolean Switch que copia a ficha de sua porta de entrada para \n\na sa\u00edda correspondente ao valor informado em sua porta de controle. Ou seja, se o valor na porta de controle for \n\nigual a verdadeiro, a sa\u00edda T possui c\u00f3pia da ficha da porta de entrada. Caso contr\u00e1rio, a sa\u00edda F apresenta o \n\nvalor copiado da entrada. \n\nPara gerarmos o valor verdadeiro ou falso na entrada de controle do Boolean Switch, usou-se um \n\ncomponente de compara\u00e7\u00e3o chamado Comparator que, neste exemplo, compara os valores gerados por Ramp \n\ncom o valor 5. Permanecendo os valores gerados menores ou iguais a 5, a sa\u00edda \u00e9 falso. Para valores maiores que \n\n5, a sa\u00edda \u00e9 verdadeiro, acionando o componente Boolean Switch que, por sua vez, aciona o gatilho de Uniform \n\nDistribution Random Number Generator, gerando os valores apresentados pelo DisplayOut da Figura 4.25. O \n\nexemplo apresenta dez itera\u00e7\u00f5es, e os respectivos valores gerados pelos componentes Ramp e Comparator s\u00e3o \n\nexibidos pelos componentes DisplayRamp e DisplayComparator. \n\nA partir desse exemplo pode-se afirmar que \u00e9 poss\u00edvel representar acionamento de gatilho baseado em \n\ndados, por\u00e9m, n\u00e3o de maneira direta, mas sempre com o auxilio de outros componentes da ferramenta. Alguns \n\ndesses componentes (atores) s\u00e3o: Comparator, usado no exemplo apresentado; Logic Function, que envolve \n\nopera\u00e7\u00f5es l\u00f3gicas (and, or, xor, etc.); Equals, para opera\u00e7\u00e3o de igualdade; e IsPresent, que verifica a presen\u00e7a de \n\nfichas em sua entrada, e devolve verdadeiro ou falso em sua sa\u00edda. \n\n \n\n\n\n4.2 Representa\u00e7\u00e3o dos padr\u00f5es de controle de dados  45 \n\n \n\n \n\nFigura 4.27. Gatilho de tarefa baseado em dados \n\n \n\nPadr\u00e3o 39: Roteamento baseado em dados (Figura 4.28) \n\nDefini\u00e7\u00e3o. Capacidade de altera\u00e7\u00e3o de controle de fluxo de tarefas em um caso de workflow como conseq\u00fc\u00eancia \n\nda avalia\u00e7\u00e3o de uma express\u00e3o baseada em dados. \n\nMotiva\u00e7\u00e3o. Sem o conceito de roteamento baseado em dados, n\u00e3o seria poss\u00edvel para um workflow alterar o seu \n\nfuncionamento, em resposta aos dados processados. Sua fun\u00e7\u00e3o seria rigidamente fixada em tempo de projeto. \n\nRoteamento baseado em dados fornece a capacidade para a conclus\u00e3o de uma inst\u00e2ncia de tarefa acionar \n\numa ou v\u00e1rias inst\u00e2ncias de tarefas subseq\u00fcentes, dependendo do resultado de uma express\u00e3o baseada nos v\u00e1rios \n\nvalores de dados do workflow. \n\n\n\n46 CAP\u00cdTULO 4 \u2013 PADR\u00d5ES DE CONTROLE DE DADOS EM CPN TOOLS E KEPLER ? \n\n \n\n \n\nFigura 4.28. Roteamento baseado em dados [1] \n\n \n\nImplementa\u00e7\u00e3o. Este padr\u00e3o serve como uma agrega\u00e7\u00e3o de dois grandes padr\u00f5es de controle de fluxo de tarefas \n\n[2] que dependem de dados do workflow:  \n\n1) Escolha exclusiva: o controle de fluxo de tarefas \u00e9 passado para uma das v\u00e1rias inst\u00e2ncias de tarefa \n\nposteriores, dependendo do resultado de uma decis\u00e3o ou o valor de uma express\u00e3o com base em dados do \n\nworkflow; \n\n2) Escolha m\u00faltipla: dependendo do resultado de uma decis\u00e3o ou do valor de uma express\u00e3o com base nos \n\ndados do workflow, o controle de fluxo de tarefas \u00e9 passado para uma ou mais inst\u00e2ncias de tarefas posteriores; \n\n \n\nCPN Tools: Ambos os padr\u00f5es s\u00e3o implementados por meio de express\u00f5es de arco, como mostra o exemplo da \n\nFigura 4.29: \n\ntarefa \n\ncaso \n\nC \n\n[N != AB01] \n\nB \n\nD \n\n[R > 10] \n\n[M > 3.0] \n\nworkflow \n\nA \nPar\u00e2metro \nde sa\u00edda R \n\nReposit\u00f3rio de dados de workflow \ndef var M 3.14159 \n\nReposit\u00f3rio de dados de caso \ndef var N AB01 \n\n\n\n4.2 Representa\u00e7\u00e3o dos padr\u00f5es de controle de dados  47 \n\n \n\n \nFigura 4.29. Roteamento baseado em dados - CPN Tools \n\nKEPLER: Semelhante ao Padr\u00e3o 38, o sistema KEPLER n\u00e3o permite implementar a altera\u00e7\u00e3o do controle de \n\nfluxo de tarefas de maneira direta, apenas por meio da combina\u00e7\u00e3o de componentes workflow control, conforme \n\nFigura 4.30. \n\nPara implementa\u00e7\u00e3o deste exemplo, usou-se um ator Discrete Random Number Generator para gerar \n\nn\u00fameros aleat\u00f3rios entre 0 e 18. Os valores gerados nesta simula\u00e7\u00e3o aparecem no DisplayRandom. O \n\ncomponente Boolean Switch1 s\u00f3 permite o envio da ficha fornecida pelo gerador para sua sa\u00edda T quando seu \n\nvalor \u00e9 maior que dez. Essa avalia\u00e7\u00e3o \u00e9 feita pelo Comparator e o resultado das v\u00e1rias itera\u00e7\u00f5es aparece no \n\nDisplayFluxo1. \n\nO componente Boolean Switch2 copia a ficha de sua entrada para a sa\u00edda T sempre que M \u00e9 maior que 3. O \n\nvalor de M \u00e9 fixo igual a 3.1415, gerando como sa\u00edda para esse fluxo os mesmos valores fornecidos pelo gerador \n\nde n\u00fameros aleat\u00f3rios. O resultado pode ser conferido no DisplayFluxo2.  \n\nJ\u00e1 o componente Boolean Switch3, s\u00f3 gera valor em sua sa\u00edda T quando N \u00e9 diferente de \u201cAB01\u201d. Como essa \n\nsitua\u00e7\u00e3o nunca ocorre, v\u00ea-se em DisplayFluxo3 que esse ator nunca dispara. \n\n \n\n\n\n48 CAP\u00cdTULO 4 \u2013 PADR\u00d5ES DE CONTROLE DE DADOS EM CPN TOOLS E KEPLER ? \n\n \n\n \nFigura 4.30. Roteamento baseado em dados - sistema KEPLER \n\n \n\n4.3. Conclus\u00e3o \n\nDadas as an\u00e1lises individuais dos padr\u00f5es de controle de dados, as tabelas desta se\u00e7\u00e3o resumem as \n\ncompara\u00e7\u00f5es apresentadas. A Tabela 4.1 refere-se aos padr\u00f5es do grupo II \u2013 padr\u00f5es de intera\u00e7\u00e3o de dados \n\ninternos do workflow, e a Tabela 4.2 refere-se aos padr\u00f5es do grupo IV \u2013 padr\u00f5es de roteamento baseado em \n\ndados. Nelas, a seguinte legenda ser\u00e1 usada: \n\n\u2022  \u201c+\u201d : ferramenta representa o padr\u00e3o em quest\u00e3o; \n\n\u2022 \u201c?\u201d : ferramenta n\u00e3o representa o padr\u00e3o em quest\u00e3o; \n\n\u2022 \u201c+ / - \u201d : ferramenta representa o padr\u00e3o em quest\u00e3o de forma indireta ou parcial. \n\nObservando a Tabela 4.1, nota-se que ambas as ferramentas mostram-se apropriadas para a representa\u00e7\u00e3o de \n\npadr\u00f5es que tratam a comunica\u00e7\u00e3o entre elementos ativos do workflow. Em redes de Petri coloridas, essa \n\nrepresenta\u00e7\u00e3o mostra-se f\u00e1cil de implementar devido \u00e0 exist\u00eancia de fichas de dados de diferentes tipos \n\n\n\n4.3 Conclus\u00e3o  49 \n\n \n\ndefinidos. Em grafos de workflow, a comunica\u00e7\u00e3o entre atores por meio de fichas de dados \u00e9 uma de suas \n\nprincipais caracter\u00edsticas, sendo f\u00e1cil representar os padr\u00f5es deste grupo. \n\nNo Padr\u00e3o Defini\u00e7\u00e3o CPN Tools KEPLER \n\n8 Tarefa a tarefa Capacidade de comunicar dados entre uma inst\u00e2ncia de \n\ntarefa e outra em um mesmo caso. \n\n \n\n+ \n\n \n\n+ \n\n9 Bloco de tarefas \n\npara subworkflow \n\nCapacidade de transmitir dados a partir de uma \n\ninst\u00e2ncia de bloco de tarefas (ator composto ou super \n\nnodo) ao subworkflow correspondente, que define sua \n\nimplementa\u00e7\u00e3o. \n\n \n\n+ \n\n \n\n+ \n\n10 Subworkflow para \n\nbloco de tarefas \n\nCapacidade de transmitir dados a partir de um \n\nsubworkflow de volta para seu bloco de tarefa \n\n(inst\u00e2ncia) correspondente. \n\n \n\n+ \n\n \n\n+ \n\nTabela 4.1. Padr\u00f5es de intera\u00e7\u00e3o de dados internos do workflow (grupo II) \n\nPor\u00e9m, observando a Tabela 4.2, \u00e9 poss\u00edvel perceber que a ferramenta CPN Tools mostra-se mais adequada \n\npara a representa\u00e7\u00e3o dos padr\u00f5es que caracterizam a maneira pela qual os dados podem influenciar o \n\nfuncionamento do fluxo de trabalho (controle de fluxo de tarefas). Da an\u00e1lise feita dos padr\u00f5es representados, \u00e9 \n\nposs\u00edvel apontar fatores que contribuem para essa desigualdade da capacidade representativa: \n\n\u2022 Implementa\u00e7\u00e3o complexa de express\u00f5es de controle de fluxo de tarefas no Sistema KEPLER:  \n\nA maneira como o KEPLER representa decis\u00f5es baseadas em dados n\u00e3o \u00e9 t\u00e3o simples como em CPN Tools. \n\nMuitas vezes, existe a necessidade de combinar diferentes atores de controle de fluxo para representar uma \n\nexpress\u00e3o baseada nos dados do modelo. \n\n\u2022 Componentes de controle de fluxo n\u00e3o utilizados com diretor SDF: \n\nO diretor SDF \u00e9 est\u00e1tico, ou seja, antes do workflow iniciar sua execu\u00e7\u00e3o, o diretor define a ordem da \n\nseq\u00fc\u00eancia de atividades a serem realizadas. Isso n\u00e3o permite o uso de estruturas de controle din\u00e2micas, que \n\ndecidem em tempo de execu\u00e7\u00e3o as tarefas que devem ser realizadas e a quantidade de fichas a serem \n\nconsumidas.  \n\nOs padr\u00f5es n\u00e3o representados por nenhuma das ferramentas comparadas justificam-se por dois motivos: \n\n\n\n50 CAP\u00cdTULO 4 \u2013 PADR\u00d5ES DE CONTROLE DE DADOS EM CPN TOOLS E KEPLER ? \n\n \n\n\u2022 N\u00e3o existe o conceito de uma atividade depender de uma p\u00f3s-condi\u00e7\u00e3o para ser realizada; \n\n\u2022 A aus\u00eancia de mecanismos para acionamento de tarefas a partir de eventos externos. \n\nDetalhes da implementa\u00e7\u00e3o dos padr\u00f5es apresentados neste cap\u00edtulo podem ser encontrados em: \n\nhttp://www.ime.usp.br/~grace/padroes. \n\nNo Padr\u00e3o Defini\u00e7\u00e3o CPN Tools KEPLER \n\n33 Pr\u00e9-condi\u00e7\u00e3o de \n\ntarefa \u2013 Exist\u00eancia \n\nde dados \n\npr\u00e9-condi\u00e7\u00f5es com base em dados podem ser \n\nespecificadas por tarefas baseadas na presen\u00e7a de \n\ndados no momento da execu\u00e7\u00e3o. \n\n \n\n+ \n\n \n\n+ \n\n34 Pr\u00e9-condi\u00e7\u00e3o de \n\ntarefa \u2013 Valor de \n\ndados \n\npr\u00e9-condi\u00e7\u00f5es com base em dados podem ser \n\nespecificadas por tarefas baseadas no valor de \n\npar\u00e2metros espec\u00edficos no momento da execu\u00e7\u00e3o. \n\n \n\n+ \n\n \n\n+ / - \n\n35 P\u00f3s-condi\u00e7\u00e3o de \n\ntarefa \u2013 Exist\u00eancia \n\nde dados \n\np\u00f3s-condi\u00e7\u00f5es com base em dados podem ser \n\nespecificadas por tarefas que se baseiam na exist\u00eancia \n\nde determinados par\u00e2metros no momento da execu\u00e7\u00e3o \n\n \n\n- \n\n \n\n- \n\n36 P\u00f3s-condi\u00e7\u00e3o de \n\ntarefa \u2013 Valor de \n\ndados \n\np\u00f3s-condi\u00e7\u00f5es com base em dados podem ser \n\nespecificadas por tarefas que se baseiam no valor dos \n\npar\u00e2metros espec\u00edficos no momento da execu\u00e7\u00e3o. \n\n \n\n- \n\n \n\n- \n\n37 Gatilho (trigger) \n\nde tarefa baseado \n\nem evento \n\ncapacidade de um evento externo desencadear (iniciar) \n\numa tarefa. \n\n- \n\n \n\n- \n\n38 Gatilho de tarefa \n\nbaseado em dados \n\ncapacidade de desencadear (iniciar) uma tarefa \n\nespec\u00edfica quando uma express\u00e3o baseada em dados do \n\nworkflow \u00e9 avaliada como verdadeira. \n\n \n\n+ / - \n\n \n\n+ / - \n\n \n\n39 Roteamento \n\nbaseado em dados \n\ncapacidade de alterar o controle de fluxo de tarefas em \n\num caso de workflow como conseq\u00fc\u00eancia da avalia\u00e7\u00e3o \n\nde uma express\u00e3o baseada em dados. \n\n \n\n+ \n\n \n\n+ / - \n\nTabela 4.2. Padr\u00f5es de roteamento baseado em dados (controle de fluxo de tarefas) (grupo IV) \n\n \n\n\n\n? \n\n51 \n\n \n \n \n \n \nCap\u00edtulo 5 \n\n \n \n \n\nConclus\u00e3o \n \n\n \n\n \n\nEste trabalho apresenta um estudo comparativo de controle e representa\u00e7\u00e3o de dados em processos de \n\nneg\u00f3cios e workflows cient\u00edficos tendo como base padr\u00f5es de controle de dados. Para sua realiza\u00e7\u00e3o, foram \n\ndetalhados dois formalismos: redes de Petri coloridas e grafos de workflow orientados a ator e suas respectivas \n\nimplementa\u00e7\u00f5es pr\u00e1ticas: CPN Tools e KEPLER. Essa compara\u00e7\u00e3o permitiu identificar a abrang\u00eancia e os \n\nlimites de cada abordagem quanto aos aspectos de representa\u00e7\u00e3o e controle de dados. \n\nAs tabelas 4.1 e 4.2 evidenciam algumas limita\u00e7\u00f5es de grafos de workflows quanto ao controle de fluxo de \n\ndados. J\u00e1 CPN Tools n\u00e3o apresenta dificuldades quanto \u00e0 representa\u00e7\u00e3o e controle de dados. \n\nA compreens\u00e3o dos limites de cada abordagem \u00e9 fundamental para o projeto e desenvolvimento de \n\nworkflows cient\u00edficos e processos de neg\u00f3cio. Muitas das ferramentas e iniciativas metodol\u00f3gicas dispon\u00edveis \n\nn\u00e3o valorizam a import\u00e2ncia da representa\u00e7\u00e3o dos padr\u00f5es de controle de dados, gerando projetos incompletos, \n\nconfusos e de dif\u00edcil manuten\u00e7\u00e3o. \n\n \n\n \n\n5.1. Principais contribui\u00e7\u00f5es \n\nComo principais contribui\u00e7\u00f5es deste trabalho, pode-se citar: \n\n\u2022 Caracteriza\u00e7\u00e3o de limites das redes de Petri colorida para representa\u00e7\u00e3o de padr\u00f5es de dados. Esses \n\nlimites s\u00e3o: a) aus\u00eancia de acionamento por evento externo ao modelo; b) n\u00e3o exist\u00eancia do conceito \n\nsuspens\u00e3o de tarefas tendo como base uma p\u00f3s-condi\u00e7\u00e3o. \n\n\n\n52  CAP\u00cdTULO 5 \u2013 CONCLUS\u00c3O ? \n\n \n\n\u2022 Caracteriza\u00e7\u00e3o de limites de grafos de workflow orientado a atores para representa\u00e7\u00e3o de padr\u00f5es de \n\ndados: al\u00e9m da aus\u00eancia de acionamento por evento externo, e da n\u00e3o exist\u00eancia de p\u00f3s-condi\u00e7\u00e3o que \n\nsuspenda a realiza\u00e7\u00e3o de uma tarefa, os grafos de workflow apresentam dificuldade de representa\u00e7\u00e3o de \n\nestruturas din\u00e2micas. Em geral, \u00e9 necess\u00e1ria a composi\u00e7\u00e3o de v\u00e1rios atores para representarmos decis\u00f5es \n\nbaseadas em dados. \n\n\u2022 Representa\u00e7\u00e3o dos padr\u00f5es de controle de dados de workflow em redes de Petri coloridas e grafos de \n\nworkflow: alguns dos principais padr\u00f5es de controle de dados apresentados por Russel e Aalst em [1] \n\nforam cobertos por implementa\u00e7\u00f5es em CPN Tools e comparadas com implementa\u00e7\u00f5es no sistema \n\nKEPLER. Detalhes dessas representa\u00e7\u00f5es podem ser vistos no Cap\u00edtulo 4. \n\n\u2022 Um texto que sintetiza os fundamentos e principais elementos de redes de Petri coloridas, grafos de \n\nworkflow e suas respectivas ferramentas: CPN Tools e KEPLER. \n\n \n\n5.2. Sugest\u00f5es para pesquisas futuras \n\nComo atividades sugeridas para pesquisas futuras, incluem-se: \n\n\u2022 Estudo, representa\u00e7\u00e3o e implementa\u00e7\u00e3o dos demais padr\u00f5es de controle de dados usando CPN Tools e \n\nKEPLER; \n\n\u2022 Estudo de formalismos alg\u00e9bricos, tais como LOTOS [35] e \u00b5CRL [36], para modelagem de processos \n\nde neg\u00f3cios que representam e controlam dados, comparando seu poder de representa\u00e7\u00e3o em rela\u00e7\u00e3o a \n\nredes de Petri coloridas, ratificando seus pontos positivos e identificando outras limita\u00e7\u00f5es; \n\n\u2022 Estudo de alternativas para implementa\u00e7\u00e3o de controle de dados usando a linguagem NPDL [37]. \n\n \n\n \n\n \n\n\n\n? \n\n53 \n\n \n \n \n \n \n\nRefer\u00eancias bibliogr\u00e1ficas \n \n\n \n\n \n\n[1] RUSSELL, N.; HOFSTEDE A.H.M. ter; EDMOND, D.; AALST, W.M.P. van der. Workflow Data Patterns. \n\nQUT Technical report, FIT-TR-2004-01, Queensland University of Technology, Brisbane, 2004. \n\n[2] AALST, W.M. P. van der; HOFSTEDE, A.H.M., KIEPUSZEWSKI, B.; BARROS, A.P. Workflow Patterns. \n\nDistributed and Parallel Databases, v.14(3), p. 5-51, Jul/2003. \n\n[3] AALST, W.M. P. van der. The Application of Petri Nets to Workflow Management. The Journal of Circuits, \n\nSystems and Computers, v. 8, n. 1, p. 1-53. 1998. \n\n[4] AALST, W.M. P. van der; HOFSTEDE, A.H.M. ter. Workflow Patterns: On the Expressive Power of (Petri-\n\nnet-based) Workflow Languages. In K. Jensen, editor, Proceedings of the Fourth Workshop on the Practical Use \n\nof Coloured Petri Nets and rdPc Tools (rdPc 2002), v. 560 of DAIMI, p. 1\u201320, Aarhus, Denmark, Ago/2002. \n\nUniversity of Aarhus. \n\n[5] AALST, W. M. P. van der; HEE, V. K. Workflow management: models, methods and systems. Cambridge: \n\nMIT Press, 2002. \n\n[6] S\u00edtio na Internet de padr\u00f5es de workflow: www.workflowpatterns.com (\u00faltimo acesso em 01/07/2008). \n\n[7] WFMC. Workflow Management Coalition Terminology and Glossary (WFMC-TC-1011 Issue 3.0). \n\nTechnical report. Workflow Management Coalition, 1999. \n\n[8] SALIMIFARD, K.; WRIGHT, M. Petri net-based modelling of workflow systems: An overview. European \n\nJournal of Operational Research, 134 (3), pp. 664-676, 2001. \n\n\n\n54  REFER\u00caNCIAS BIBLIOGR\u00c1FICAS ?? \n\n \n\n[9] MURATA, T. Petri Nets: Properties, Analysis and Applications. Proceedings of The IEEE, v. 77, n. 4, p. \n\n541-580, abr. 1989. \n\n[10] FOKKINK, W. Introduction to Process Algebra. Secaucus, NJ, EUA: Springer-Verlag New York, Inc., \n\n2000. (Texts in Theoretical Computer Science (An EATCS Series)). ISBN 3-540-66579-X. \n\n[11] MACIEL, P. R. M.; LINS, R. D.; CUNHA, P. R. F. Introdu\u00e7\u00e3o \u00e0s Redes de Petri e Aplica\u00e7\u00f5es. 10\u00aa \n\nESCOLA DE COMPUTA\u00c7\u00c3O, Campinas: Instituto de Computa\u00e7\u00e3o, UNICAMP, 1996. \n\n[12] P\u00c1DUA, S. I. D.; SILVA, A. R. Y.; PORTO, A. J. V.; INAMASU, R. Y. O potencial das redes de Petri em \n\nmodelagem e an\u00e1lise de processos de neg\u00f3cios. Gest\u00e3o &amp; Produ\u00e7\u00e3o, S\u00e3o Carlos, v. 11, n. 1, p. 109-119, 2004. \n\n[13] BRESSAN, G. Modelagem e Simula\u00e7\u00e3o de Sistemas Computacionais - m\u00f3dulo Redes de Petri; LARC-\n\nPCS/EPUSP, 2002. www.larc.usp.br/conteudo/universo/pcs012/modsim05.pdf (\u00faltimo acesso em 01/06/2007) \n\n[14] JENSEN, K. Coloured Petri Nets (2nd ed.): Basic concepts, Analysis Methods and Practical Use: volume \n\n1, Springer-Verlag, 1996. \n\n[15] JENSEN, K. An Introduction to the Practical Use of Coloured Petri Nets. Lecture Notes in Computer \n\nScience: Lectures on Petri Nets II: Applications, v.1492, 1998. \n\n[16] KRISTENSEN, L. M.; CHRISTENSEN, S.; JENSEN, K. The practitioner's guide to Coloured Petri nets. \n\nInternational Journal of Software Tools for Technology Transfer (STTT), v. 2, p. 98-132, 1998. \n\n[17] Committee Draft ISO/IEC 15909. High-level petri nets \u2013 concepts, definitions and graphical notation. Oct \n\n1997.Version 3.4. \n\n[18] S\u00edtio na Internet sobre ferramenta Design/CPN. http://www.daimi.au.dk/designCPN/ (\u00faltimo acesso em \n\n01/02/2008). \n\n[19] S\u00edtio na Internet sobre ferramenta CPN Tools. http://wiki.daimi.au.dk/cpntools/ (\u00faltimo acesso em \n\n01/02/2008). \n\n\n\nREFER\u00caNCIAS BIBLIOGR\u00c1FICAS ?  55 \n\n \n\n[20] S\u00edtio na Internet sobre Projeto CPN2000. http://www.daimi.au.dk/CPnets/CPN2000/ (\u00faltimo acesso em \n\n01/02/2008). \n\n[21] WESKE, M.; VOSSEN, G.; MEDEIROS, C. B. Scientific Workflow Management: WASA Architecture and \n\nApplications. Fachbericht Angewandte Mathematik und Informatik 03/96-I, Universitat Munster, 1996. \n\n[22] ALTINTAS, Ilkay; BERKLEY, Chad; JAEGER, Efrat; JONES, Matthew; LUDASCHER , Bertram; \n\nMOCK, Steve. KEPLER: An Extensible System for Design and Execution of Scientific Workflows. In \n\nProceedings of the 16th international Conference on Scientific and Statistical Database Management \n\n(SSDBM'04) - Volume 00, p.423, June 2004. \n\n[23] LUDASCHER, B.; ALTINTAS, I.; BERKLEY, C.; JAEGER, E.; JONES, M.; LEE, E.; TAO, J.; ZHAO, \n\nY. Scientific Workflow Management and the KEPLER System. Concurrency and Computation: Practice and \n\nExperience, Issue 10, Workflow in Grid Systems, v. 18, p. 1039-1065, 2006. \n\n[24] BOWERS, S.; LUDASCHER, B. Actor-Oriented Design of  Scientific Workflows. Lecture  Notes in \n\nComputer Science, v. 3716, p. 369-384, November 2005. \n\n[25] BOWERS, S.; LUDASCHER, B.; NGU, A. H. H.; CRITCHLOW, T. Enabling Scientific Workflow Reuse \n\nthrough Structured Composition of Dataflow and Control-Flow. Proceedings of the 22nd International \n\nConference on Data Engineering Workshops (ICDEW'06) \u2013 p.70, 2006. \n\n[26] OINN, T.; ADDIS, M.; FERRIS, J.; MARVIN, D.; SENGER, M.; GREENWOOD, M.; CARVER, T.; \n\nGLOVER, K.; POCOCK, M. R.; WIPAT, A.; LI, P. Taverna: a tool for the composition and enactment of \n\nbioinformatics workflows. Bioinformatics, v. 20, n.17, p. 3045-3054, 2004. \n\n[27] MAJITHIA, S.; SHIELDS, M.; TAYLOR, I.; WANG, I. Triana: A Graphical Web Service Composition \n\nand Execution Toolkit. In Proc. of the IEEE Intl. Conf. on Web. Services (ICWS).IEEE Computer Society, 2004. \n\n[28] Projeto e sistema PTOLEMY II. Department of EECS, UC Berkeley. \n\nhttp://PTOLEMY.eecs.berkeley.edu/PTOLEMYII/. \n\n[29] Projeto e sistema DiscoveryNet. http://www.discovery-on-the.net/ (\u00faltimo acesso em 01/06/2007). \n\n\n\n56  REFER\u00caNCIAS BIBLIOGR\u00c1FICAS ?? \n\n \n\n[30] Sistema Pipeline-Pilot da Scitegic. http://www.scitegic.com/ (\u00faltimo acesso em 01/06/2007). \n\n[31] S\u00edtio na Internet sobre sistema LabView da National Instruments. http://www.ni.com/labview/ (\u00faltimo \n\nacesso em 01/06/2007). \n\n[32] LEE, E.A.; PARKS, T.M. Dataflow process networks. Proceedings of the IEEE, v. 83, n. 5, p. 773-801, \n\n1995. \n\n[33] AGHA, G. A. Actors: A Model of Concurrent Computation in Distributed Systems. Doctoral thesis, \n\nMASSACHUSETTS INST OF TECH CAMBRIDGE ARTIFICIAL INTELLIGENCE LAB, 203 p., jun 1985. \n\n[34] AGHA, G.; THATI, P. An algebraic theory of actors and its application to a simple object-based language. \n\nIn Essays in Memory of Ole-Johan Dahl, v. 2635, pages 26-57, 2004. \n\n[35] BOLOGNESI, T.; BRINKSMA, E. Introduction to the ISO specification language LOTOS. Comput. Netw. \n\nISDN Syst., Elsevier Science Publishers B. V., Amsterdam, Holanda, v. 14, n. 1, p. 25\u201359, 1987. ISSN 0169-\n\n7552. \n\n[36] GROOTE, J.F.; PONSE, A. The syntax and semantics of \u00b5CRL. In A. Ponse, C. Verhoef, and S.F.M. van \n\nVlijmen (editors), Algebra of Communicating Processes, Utrecht 1994. Workshops in Computing, p. 26-62, \n\nSpringer-Verlag, 1995. \n\n[37] BRAGHETTO, K. R. Padr\u00f5es de Fluxos de Processos em Banco de Dados Relacionais. Disserta\u00e7\u00e3o \n\n(Mestrado) \u2013 Instituto de Matem\u00e1tica e Estat\u00edstica da Universidade de S\u00e3o Paulo, 2006."}]}}}