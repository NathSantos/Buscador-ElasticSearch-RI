{"add": {"doc": {"field": [{"@name": "docid", "#text": "BR-TU.09322"}, {"@name": "filename", "#text": "14293_307885.pdf"}, {"@name": "filetype", "#text": "PDF"}, {"@name": "text", "#text": "UNIVERSIDADE FEDERAL DE SANTA CATARINA DEPARTAMENTO DE ENGENHARIA MEC\u00c2NICA\nCarlos Rodrigues Rocha\nPLANEJAMENTO DE MOVIMENTO DE SISTEMAS ROB\u00d3TICOS DE INTERVEN\u00c7\u00c3O SUBAQU\u00c1TICA BASEADO NA TEORIA DOS HELICOIDES\nCarlos Rodrigues Rocha\nPLANEJAMENTO DE MOVIMENTO DE SISTEMAS ROB\u00d3TICOS DE INTERVEN\u00c7\u00c3O SUBAQU\u00c1TICA BASEADO NA TEORIA DOS HELICOIDES\nTese submetida ao Programa de P\u00f3s-Gradua\u00e7\u00e3o em Engenharia Mec\u00e2nica para a obten\u00e7\u00e3o do Grau de Doutor em Engenharia, Especialidade Engenharia Mec\u00e2nica.\nOrientador: Prof. D.Sc. Altamir Dias\nCataloga\u00e7\u00e3o na fonte pela Biblioteca Universit\u00e1ria da\nUniversidade Federal de Santa Catarina\nR672p Rocha, Carlos Rodrigues\nPlanejamento de movimento de sistemas rob\u00f3ticos de interven\u00e7\u00e3o subaqu\u00e1tica baseado na teoria dos helicoides [tese] / Carlos Rodrigues Rocha ; orientador, Altamir Dias. -Florian\u00f3polis, SC, 2012.\n279 p.: il., grafs., tabs.\nTese (doutorado) - Universidade Federal de Santa Catarina, Centro Tecnol\u00f3gico. Programa de P\u00f3s-Gradua\u00e7\u00e3o em Engenharia Mec\u00e2nica.\nInclui refer\u00eancias\n1. Engenharia mec\u00e2nica. 2. Rob\u00f3tica. 3. Cinem\u00e1tica. 4. Modelagem comput.acional. I. Dias, Altamir. II. Universidade Federal de Santa Catarina. Programa de P\u00f3s-Gradua\u00e7\u00e3o em Engenharia Mec\u00e2nica. III. T\u00edtulo.\nCDU 621\nCarlos Rodrigues Rocha\nPLANEJAMENTO DE MOVIMENTO DE SISTEMAS ROB\u00d3TICOS DE INTERVEN\u00c7\u00c3O SUBAQU\u00c1TICA BASEADO NA TEORIA DOS HELICOIDES\nEsta Tese foi julgada adequada para a obten\u00e7\u00e3o do T\u00edtulo de \u201cDoutor em Engenharia, Especialidade Engenharia Mec\u00e2nica\u201d, e aprovada em sua forma final pelo Programa de P\u00f3s-Gradua\u00e7\u00e3o em Engenharia Mec\u00e2nica.\nFlorian\u00f3polis, 16 de abril 2012.\nProf. Dr. J\u00falio C\u00e9sar Passos\nCoordenador do Curso\nBanca Examinadora:\nProf. D.Sc. Altamir Dias Presidente\nProf. Dr.Eng. Marcelo Becker\nRelator\nProf. Dr. Edson Roberto de Pieri\nProf. Dr.Eng. Daniel Martins\nProf. Dr.Eng. Henrique Simas\n\u00c0 Patr\u00edcia, Marina e J\u00falia, as mulheres da minha vida.\nAGRADECIMENTOS\nAo Prof. Altamir Dias, pela orienta\u00e7\u00e3o, dedica\u00e7\u00e3o e paci\u00eancia. Agrade\u00e7o tamb\u00e9m pela oportunidade de observar e aprender mais sobre as voca\u00e7\u00f5es de docente e pesquisador com algu\u00e9m que mostra tanto empenho e gosto pelo que faz. E, claro, agrade\u00e7o as boas conversas sobre diversos assuntos, tanto relativos a este trabalho quanto ao software livre, CAD e cotidiano.\n\u00c0 minha esposa Patr\u00edcia e minhas filhas Marina e J\u00falia pela compreens\u00e3o, suporte e apoio nesse longo per\u00edodo em que me afastei delas para realizar este trabalho. N\u00e3o h\u00e1 como exprimir em palavras o que sinto por elas e a gratid\u00e3o por todo o sacrif\u00edcio que fizeram por mim.\nAos Professores Daniel Martins e Henrique Simas, pelas contribui\u00e7\u00f5es e forma\u00e7\u00e3o que resultaram neste trabalho, al\u00e9m da amizade desenvolvida/retomada ao longo desses anos.\n\u00c0 Cristiane Tonetto, colega e amiga, pelas contribui\u00e7\u00f5es neste e em outros trabalhos; pela amizade e o conv\u00edvio que contribu\u00edram para tornar suport\u00e1vel a experi\u00eancia de morar longe da fam\u00edlia.\nAos demais colegas do LabCADCAM e do Laborat\u00f3rio de Rob\u00f3tica Prof. Raul Guenther pelo conv\u00edvio e a troca de experi\u00eancias.\nAos bolsistas do LabCADCAM e do Laborat\u00f3rio de Rob\u00f3tica que contribu\u00edram para o desenvolvimento deste trabalho.\nAos colegas da Universidade Federal do Rio Grande (FURG) e do Campus Rio Grande do Instituto Federal de Educa\u00e7\u00e3o, Ci\u00eancia e Tecnologia do Rio Grande do Sul (IFRS) que deram suporte ao meu afastamento para a realiza\u00e7\u00e3o deste curso e apoio para a sua conclus\u00e3o.\nAos demais colegas e amigos de Florian\u00f3polis e do Rio Grande pelo apoio, amizade e incentivo, de diversas formas, para minimizar as saudades de casa enquanto estive morando em Floripa.\nAos meus pais, J\u00falia e Luiz Carlos, que nunca pouparam esfor\u00e7os para possibilitar a minha busca por conhecimento e a minha forma\u00e7\u00e3o.\n\u00c0 Deus, que motiva a busca pelo aperfei\u00e7oamento, d\u00e1 a for\u00e7a necess\u00e1ria para atingirmos as nossas metas e ampara nos momentos dif\u00edceis.\nRESUMO\nOs ve\u00edculos subaqu\u00e1ticos n\u00e3o tripulados (ou UUV, do ingl\u00eas Unmanned Underwater Vehicles) s\u00e3o respons\u00e1veis pela execu\u00e7\u00e3o de grande parte das opera\u00e7\u00f5es em ambientes imersos. Os sistemas ve\u00edculo-manipulador subaqu\u00e1ticos (ou UVMS, do ingl\u00eas Underwater Vehicle-Manipulator Systems) s\u00e3o UUV voltados para a execu\u00e7\u00e3o de tarefas de interven\u00e7\u00e3o. Al\u00e9m de aplica\u00e7\u00f5es em miss\u00f5es cient\u00edficas e de resgate, os UVMS s\u00e3o muito usados em instala\u00e7\u00f5es offshore de extra\u00e7\u00e3o/distribui\u00e7\u00e3o de petr\u00f3leo e g\u00e1s em tarefas de constru\u00e7\u00e3o, manuten\u00e7\u00e3o, inspe\u00e7\u00e3o e opera\u00e7\u00e3o. A maioria dos sistemas de interven\u00e7\u00e3o subaqu\u00e1tica \u00e9 teleoperada devido \u00e0s dificuldades de opera\u00e7\u00e3o no ambiente imerso e \u00e0s caracter\u00edsticas cinem\u00e1ticas e din\u00e2micas dos UVMS. A evolu\u00e7\u00e3o desses sistemas de interven\u00e7\u00e3o subaqu\u00e1tica envolve o desenvolvimento de sua autonomia. Um requisito b\u00e1sico para isso \u00e9 a capacidade do sistema planejar as a\u00e7\u00f5es necess\u00e1rias para realizar as tarefas a ele especificadas. Esta tese estuda o planejamento de movimento dos UVMS durante a execu\u00e7\u00e3o de tarefas de interven\u00e7\u00e3o. Este problema consiste em definir os movimentos que o sistema (ve\u00edculo e manipuladores) deve realizar para executar as tarefas especificadas atendendo \u00e0s restri\u00e7\u00f5es impostas pelo espa\u00e7o de trabalho. O trabalho utiliza a an\u00e1lise cinem\u00e1tica baseada na teoria dos helicoides, teoria dos grafos e ferramentas derivadas para definir modelos cinem\u00e1ticos dos UVMS em diferentes cen\u00e1rios de execu\u00e7\u00e3o de tarefas de interven\u00e7\u00e3o. A coopera\u00e7\u00e3o entre manipuladores de um mesmo UVMS e entre dois ou mais UVMS \u00e9 estudada, assim como a variabilidade dos modelos cinem\u00e1ticos em fun\u00e7\u00e3o de mudan\u00e7as no contexto da opera\u00e7\u00e3o. A partir da an\u00e1lise realizada, define-se uma sistematiza\u00e7\u00e3o da modelagem cinem\u00e1tica dos sistemas de interven\u00e7\u00e3o por componentiza\u00e7\u00e3o, visando facilitar e automatizar esse processo. Um framework computacional \u00e9 projetado para facilitar a implementa\u00e7\u00e3o desses modelos. Com base nesses resultados, define-se uma estrutura geral para o desenvolvimento de estrat\u00e9gias de planejamento de movimento. Simula\u00e7\u00f5es de uso dessa estrutura em diferentes cen\u00e1rios de opera\u00e7\u00e3o s\u00e3o apresentadas. Assim, este trabalho contribui para a autonomia de UUV/UVMS, considerada o principal objeto de pesquisa da \u00e1rea e que no caso dos sistemas de interven\u00e7\u00e3o subaqu\u00e1tica reduzir\u00e1 custos de opera\u00e7\u00e3o, al\u00e9m de possibilitar o uso destes em novas miss\u00f5es. Palavras-chave: Sistemas subaqu\u00e1ticos de interven\u00e7\u00e3o. Teoria dos helicoides. Modelagem cinem\u00e1tica. Tarefas de interven\u00e7\u00e3o.\nABSTRACT\nUnmanned Underwater Vehicles (UUV, for short) are used in most immerse operations. Underwater Vehicle-Manipulator Systems (UVMS, for short) are a particular kind of UUV designed for intervention tasks. Besides their application in scientific and rescue missions, UVMS are much used in offshore oil and gas extraction/distribution facilities for construction, maintenance, inspection and operation tasks. Most underwater intervention systems are teleoperated due the operational difficulties in the immerse environment and the UVMS kinematic/dyna-mic features. The evolution of these underwater intervention systems involves the development of their autonomy. The system ability to plan the necessary actions to perform its assigned tasks is a basic requirement for that. This thesis studies the motion planning of UVMS while executing intervention tasks. The problem consists of defining the motion that the system (vehicle and manipulators) must do to execute the specified taks while complying with the workspace imposed restrictions. A computational framework is designed to aid the implementation of these models. A general structure to the developed of motion planning strategies based on these results is defined. Simulations using this strucute in different operation scenarios are presented. So, this work contributes to the autonomy of UUV/UVMS, which is considered a major research field and it will reduce operation costs of underwater intervention systems, besides allowing their use in new missions. Keywords: Underwater intervention systems. Screw theory. Kinematic modeling. Intervention tasks.\nLISTA DE FIGURAS\nFigura 1 ROV Oceaneering Millenium conectando um duto em um painel (Oceaneering, 2009).................................. 37\nFigura 2 O rob\u00f4 ENDURANCE (Stone Aerospace, 2012).............. 39\nFigura 3 AUV Remus 6000 da Hydroid (Kongsberg, 2011)........... 39\nFigura 4 Cybernetix ALIVE, UVMS com capacidade de opera\u00e7\u00e3o aut\u00f4noma ou teleoperada (Cybernetix, 2008)..................... 40\nFigura 5 UVMS em opera\u00e7\u00e3o: (a)s\u00edtio do vazamento de petr\u00f3leo no Golfo do M\u00e9xico(Leff; Plushnick-Masti, 2010); (b)Remora 6000 sendo lan\u00e7ado(Phoenix, 2011)................................... 41\nFigura 6 Proje\u00e7\u00f5es de expans\u00e3o do uso de UUV: (a)AUV; (b)ROV de classes de servi\u00e7o(Douglas-Westwood, 2011).................. 42\nFigura 7 Rela\u00e7\u00e3o entre UUV e opera\u00e7\u00f5es subaqu\u00e1ticas............ 47\nFigura 8 Vis\u00e3o atualizada da classifica\u00e7\u00e3o da rob\u00f3tica subaqu\u00e1tica 47\nFigura 9 Diagrama de blocos de atividades de um UVMS em fases que n\u00e3o envolvem interven\u00e7\u00e3o................................... 53\nFigura 10 Diagrama de blocos de atividades de um UVMS em fases que envolvem interven\u00e7\u00e3o....................................... 54\nFigura 11 Subsistemas de um UVMS............................... 56\nFigura 12\tSubsistemas\tde\tcomando de um UUV................... 57\nFigura 13\tSubsistemas\tde\texecu\u00e7\u00e3o de um UUV.................. 61\nFigura 14\tSubsistemas\tde\testrutura de um UUV................. 64\nFigura 15\tDefini\u00e7\u00e3o da\tpostura do ve\u00edculo..................... 72\nFigura 16 Representa\u00e7\u00e3o cinem\u00e1tica de um UVMS e seus sistemas de coordenadas................................................. 75\nFigura 17 Defini\u00e7\u00e3o do heligiro para o ve\u00edculo subaqu\u00e1tico..... 78\nFigura 18 Cadeia cinem\u00e1tica do sistema de interven\u00e7\u00e3o subaqu\u00e1tica 81\nFigura 19 Cadeia do UVMS fechada pela cadeia virtual de posi\u00e7\u00e3o 81\nFigura 20 D\u00edgrafo de movimento do UVMS......................... 82\nFigura 21 Grafo contra\u00eddo de movimento do sistema subaqu\u00e1tico de interven\u00e7\u00e3o formado por um ve\u00edculo e um manipulador......... 86\nFigura 22 Grafo contra\u00eddo de movimento do UVMS com dois manipuladores independentes...................................... 87\nFigura 23 Grafo contra\u00eddo de movimento do UVMS com dois manipuladores executando uma tarefa de forma cooperativa......... 88\nFigura 24 Grafo contra\u00eddo de movimento do sistema de interven\u00e7\u00e3o subaqu\u00e1tica cooperativo....................................... 90\nFigura 25 Grafo contra\u00eddo de movimento do sistema de interven\u00e7\u00e3o subaqu\u00e1tica cooperativo....................................... 91\nFigura 26 Grafo contra\u00eddo de movimento de um UVMS operando em presen\u00e7a de obst\u00e1culos..................................... 93\nFigura 27 Grafo contra\u00eddo de movimento de um UVMS fixo \u00e0 uma estrutura sobre a qual executar\u00e1 uma tarefa................... 95\nFigura 28 Diagrama de estados de opera\u00e7\u00e3o de um UVMS - re-particionamento...............................................101\nFigura 29 Diagrama de estados de opera\u00e7\u00e3o de um UVMS - reconfigura\u00e7\u00e3o.....................................................101\nFigura 30 Reconfigura\u00e7\u00e3o de cadeia cinem\u00e1tica pela adi\u00e7\u00e3o de um UVMS: (a)antes da adi\u00e7\u00e3o; (b)ap\u00f3s a adi\u00e7\u00e3o....................103\nFigura 31 Diagrama de classes do framework Kast...............111\nFigura 32 Representa\u00e7\u00e3o gr\u00e1fica de estruturas de dados usadas em\nKCComponent...................................................114\nFigura 33 Atividades de UVMS envolvidas nas estrat\u00e9gias de planejamento de movimento........................................123\nFigura 34 Diagrama de classes do framework de interven\u00e7\u00e3o.....128\nFigura 35 Diagrama de comunica\u00e7\u00e3o da resolu\u00e7\u00e3o cinem\u00e1tica pela classe Guidance...............................................133\nFigura 36 Fluxo de informa\u00e7\u00f5es no sistema de interven\u00e7\u00e3o planar 135\nFigura 37 Cen\u00e1rio de simula\u00e7\u00e3o de um UVMS com um manipulador142\nFigura 38 Movimento do efetuador final........................144\nFigura 39 Erro nas vari\u00e1veis do efetuador final...............144\nFigura 40 Movimento do UVMS durante a execu\u00e7\u00e3o da tarefa.... 145\nFigura 41 Vari\u00e1veis\tdo\tmanipulador..........................146\nFigura 42 Vari\u00e1veis\tdo\tmanipulador ........................ 147\nFigura 43 Vari\u00e1veis\tdo\tve\u00edculo ............................ 148\nFigura 44 Vari\u00e1veis\tdo\tmanipulador ........................ 150\nFigura 45 Vari\u00e1veis\tdo\tmanipulador ........................ 152\nFigura 46 Vari\u00e1veis\tdo\tve\u00edculo ............................ 153\nFigura 47 Vari\u00e1veis\tdo\tmanipulador ........................ 154\nFigura 48 Vari\u00e1veis\tdo\tveiculo ............................ 155\nFigura 49 Trajet\u00f3ria a ser percorrida na execu\u00e7\u00e3o da tarefa...156\nFigura 50 Vari\u00e1veis do manipulador...........................157\nFigura 51 Vari\u00e1veis do ve\u00edculo...............................158\nFigura 52 Cen\u00e1rio de simula\u00e7\u00e3o de um UVMS com dois manipuladores em coopera\u00e7\u00e3o..........................................159\nFigura 53 Movimento da pe\u00e7a e dos efetuadores finais.........161\nFigura 54 Movimento do UVMS durante\ta\texecu\u00e7\u00e3o\tda\ttarefa.... 161\nFigura 55 Postura dos efetuadores finais\tao longo\tdo\ttempo....162\nFigura 56 Vari\u00e1veis do manipulador 1 ....................... 163\nFigura 57 Vari\u00e1veis do manipulador 2.........................164\nFigura 58 Cen\u00e1rio de simula\u00e7\u00e3o de dois UVMS em coopera\u00e7\u00e3o . . . 165\nFigura 59 Movimento da pe\u00e7a e dos efetuadores finais.........167\nFigura 60 Movimento dos UVMS durante a execu\u00e7\u00e3o da tarefa... 167\nFigura 61 Postura dos efetuadores finais ao longo do tempo . 168\nFigura 62 Vari\u00e1veis do manipulador 1 ....................... 169\nFigura 63 Vari\u00e1veis do manipulador 2.........................170\nFigura 64 Movimento da pe\u00e7a e dos efetuadores finais.........171\nFigura 65 Transla\u00e7\u00e3o dos ve\u00edculos durante a execu\u00e7\u00e3o da tarefa .. 172\nFigura 66 Vari\u00e1veis\tdo\tmanipulador do UVMS\t1..............173\nFigura 67 Vari\u00e1veis\tdo\tve\u00edculo do UVMS 1...................174\nFigura 68 Vari\u00e1veis\tdo\tmanipulador do UVMS\t2..............175\nFigura 69 Vari\u00e1veis\tdo\tve\u00edculo do UVMS 2...................176\nFigura 70 Cen\u00e1rio de simula\u00e7\u00e3o de dois UVMS com dois manipuladores cada em coopera\u00e7\u00e3o...................................177\nFigura 71 Movimento da pe\u00e7a e dos efetuadores finais.........179\nFigura 72 Movimento dos UVMS durante a execu\u00e7\u00e3o da tarefa... 179\nFigura 73 Postura dos efetuadores finais 11 e 12 ao longo do tempo180\nFigura 74 Postura dos efetuadores finais 21 e 22 ao longo do tempo181\nFigura 75 Vari\u00e1veis\tdo\tmanipulador\t11 .................... 182\nFigura 76 Vari\u00e1veis\tdo\tmanipulador\t12......................183\nFigura 77 Vari\u00e1veis\tdo\tmanipulador\t21 .................... 184\nFigura 78 Vari\u00e1veis\tdo\tmanipulador\t22......................185\nFigura 79 Defini\u00e7\u00e3o geom\u00e9trica das coordenadas de Pl\u00fccker.....208\nFigura 80 Defini\u00e7\u00e3o geom\u00e9trica de um helicoide...............209\nFigura 81 Deslocamento helicoidal e par\u00e2metros de Rodrigues.... 210\nFigura 82 Heligiro em um corpo r\u00edgido........................211\nFigura 83\tTransforma\u00e7\u00e3o de helicoides.........................214\nFigura 84\tRepresenta\u00e7\u00e3o de um par cinem\u00e1tico por um grafo.....215\nFigura 85 Mecanismo de 4 barras: (a)representa\u00e7\u00e3o funcional; (b)grafo de movimento...................................................216\nFigura 86\tCadeias virtuais de Assur...........................220\nFigura 87 Manipulador planar PPR: (a)representa\u00e7\u00e3o funcional; (b)configura\u00e7\u00e3o de refer\u00eancia..................................250\nFigura 88 Manipulador planar RRR: (a)representa\u00e7\u00e3o funcional; (b)configura\u00e7\u00e3o de refer\u00eancia..................................253\nFigura 89 UVMS planar com 1 manipulador........................256\nFigura 90 UVMS planar com 2 manipuladores......................258\nFigura 91 Execu\u00e7\u00e3o de tarefas com um UVMS planar com um manipulador: (a)representa\u00e7\u00e3o funcional; (b)grafo de movimento .... 261\nFigura 92 UVMS planar com dois manipuladores trabalhando em coopera\u00e7\u00e3o: (a)representa\u00e7\u00e3o funcional; (b)grafo de movimento ... 263\nFigura 93 Execu\u00e7\u00e3o de tarefa cooperativa entre dois UVMS planares: (a)representa\u00e7\u00e3o funcional; (b)grafo de movimento.........266\nFigura 94 Representa\u00e7\u00e3o funcional do cen\u00e1rio de coopera\u00e7\u00e3o entre dois UVMS planares com dois manipuladores cada ............... 269\nFigura 95 Grafo de movimento do cen\u00e1rio de coopera\u00e7\u00e3o entre dois\nUVMS planares com dois manipuladores cada .................... 270\nLISTA DE TABELAS\nTabela 1\tClasses de ROV..................................... 42\nTabela 2\tUsos de ROV........................................ 42\nTabela 3\tClasses de AUV..................................... 43\nTabela 4\tUsos de AUV........................................ 43\nTabela 5 Atividades que empregam UUV.......................... 45\nTabela 6 Sensores empregados nos sistemas de navega\u00e7\u00e3o de UUV 60\nTabela 7 Nota\u00e7\u00e3o SNAME para o movimento de ve\u00edculos aqu\u00e1ticos .......................................................... 72\nTabela 8 Ambientes de computa\u00e7\u00e3o num\u00e9rica avaliados para a implementa\u00e7\u00e3o do framework Kast.................................229\nTabela 9 Plataformas de desenvolvimento de software avaliadas para a implementa\u00e7\u00e3o do framework Kast........................230\nTabela 10 Vari\u00e1veis e atributos da cadeia PPR.................249\nTabela 11 Par\u00e2metros de Rodrigues.............................250\nTabela 12 Par\u00e2metros dos helicoides normalizados..............251\nTabela 13 Vari\u00e1veis e atributos da cadeia RRR.................252\nTabela 14 Par\u00e2metros de Rodrigues.............................253\nTabela 15 Par\u00e2metros dos helicoides normalizados..............255\nTabela 16 Vari\u00e1veis e atributos do UVMS planar com um manipulador ........................................................256\nTabela 17 Vari\u00e1veis e atributos do UVMS planar com dois manipuladores ....................................................259\nUUV Unmanned Underwater Vehicle, ou Ve\u00edculo Subaqu\u00e1tico N\u00e3o Tripulado\nROV Remotely Operated Vehicle, ou Ve\u00edculo Remotamente Operado\nAUV Autonomous Underwater Vehicle, ou Ve\u00edculo Subaqu\u00e1tico Aut\u00f4nomo\nUVMS Underwater Vehicle-Manipulator System, ou Sistema Ve\u00edculo-Manipulador Subaqu\u00e1tico\nI-AUV Intervention AUV, ou AUV de interven\u00e7\u00e3o\nMOOS Motion-Oriented Operating System\nGPS Global Positioning System, ou Sistema de Posicionamento Global\nTCP/IP Transfer Control Protocol/Internet Protocol\nONR Office of Naval Research, ou Escrit\u00f3rio de Pesquisa Naval da Marinha americana\nUSV Unmanned Surface Vehicle, ou Ve\u00edculo de Superf\u00edcie N\u00e3o Tripulado\nSNAME Society of Naval Architects and Marine Engineers\nRPY\t\u00c2ngulos de Euler Roll-Pitch-Yaw\nSRC\tSistema Rob\u00f3tico Cooperativo\nCAS\tComputer Algebra System\nSGBD\tSistema Gerenciador de Bancos de Dados\nXML\tExtended Markup Language\nUML\tUnified Modeling Language\nKAST Kinematic Analysis by Screw Theory\nPPR Cadeia cinem\u00e1tica planar com juntas Prism\u00e1tica, Prism\u00e1tica, Rotativa\nRPR Cadeia cinem\u00e1tica planar com juntas Rotativa, Prism\u00e1tica, Rotativa\nPPPS Cadeia cinem\u00e1tica espacial com juntas Prism\u00e1tica, Prism\u00e1tica, Prism\u00e1tica, Esf\u00e9rica\nRPPS Cadeia cinem\u00e1tica espacial com juntas Rotativa, Prism\u00e1tica, Prism\u00e1tica, Esf\u00e9rica\nRRPS Cadeia cinem\u00e1tica espacial com juntas Rotativa, Rota-\ntiva, Prism\u00e1tica, Esf\u00e9rica\nMCR\tMatlab*\u00ae Compiler Runtime\nJRE\tJava Runtime Environment\nO-xyz Sistema de coordenadas inercial......................... 71\nOv -xv yv zv Sistema de coordenadas do ve\u00edculo................ 71\nni, n2, nv Posi\u00e7\u00e3o, orienta\u00e7\u00e3o e postura do ve\u00edculo segundo o refe-\nrencial inercial................................... 72\nxv ,yv, zv Componentes da posi\u00e7\u00e3o do ve\u00edculo.................. 72\n\u00e7v, 0v, ^v Orienta\u00e7\u00e3o do ve\u00edculo expressa em \u00e2ngulos RPY...... 72\nv\t1, v2, vv Velocidade linear, velocidade angular e velocidade total\ndo ve\u00edculo......................................... 72\nuv ,vv ,wv Componentes da velocidade linear do ve\u00edculo nas dire-\n\u00e7\u00f5es Xv, yv e Zv................................... 72\npv ,sv, rv Componentes da velocidade angular do ve\u00edculo em torno\ndas dire\u00e7\u00f5es xv, yv e zv........................... 72\nJ\tJacobiano........................................... 73\nx-\tDerivada temporal\tde x............................ 73\nX\tDerivada temporal\tsegunda\tde x.................... 73\nMatriz de rota\u00e7\u00e3o do sistema de coordenadas j para o sistema de coordenadas i........................... 73\nca, sa\tAbreviaturas das fun\u00e7\u00f5es trigonom\u00e9tricas cosseno e seno\nrespectivamente.................................... 73\nne1, ne2, ne Posi\u00e7\u00e3o, orienta\u00e7\u00e3o e postura do efetuador final segundo\no referencial inercial............................. 75\nOb-xbybzb Sistema de coordenadas da base do manipulador....... 75\nO e-xeyeze Sistema de coordenadas do efetuador final.......... 75\nK(-)\tFun\u00e7\u00e3o cinem\u00e1tica direta............................ 75\nq\tVetor de vari\u00e1veis das juntas do manipulador........ 75\nZ\tVetor de velocidades de um UVMS..................... 75\nve1, ve2, ve Velocidade linear, velocidade angular e velocidade total\ndo efetuador final do manipulador expressa segundo o referencial do efetuador final..................... 76\nWj\tVelocidade angular do elo i......................... 76\n\u00fai\tAcelera\u00e7\u00e3o angular do elo i......................... 76\nvi\tVelocidade linear de um ponto\ti.................... 76\nvi,c\tVelocidade linear do centro de\tmassa do elo i....... 76\nai\tAcelera\u00e7\u00e3o linear do elo i........................... 76\nr\u00bf j\tVetor entre as origens dos sistemas de coordenadas i e\nj................................................... 76\nri_iiijC\tVetor entre a origem do sistema de coordenadas i \u2014 1 e\no centro de massa do elo i.......................... 76\nzi\tVetor dire\u00e7\u00e3o do movimento\tda junta\ti............. 76\nqi\tPosi\u00e7\u00e3o da junta i................................... 76\nqi\tVelocidade da junta i................................ 76\nqi\tAcelera\u00e7\u00e3o da junta i................................ 76\n$\tHelicoide, heligiro.................................. 79\n$\tHelicoide normalizado................................ 79\ns\tDire\u00e7\u00e3o do eixo de um helicoide\t(vetor unit\u00e1rio)..... 79\ns0\tPosi\u00e7\u00e3o do eixo do helicoide......................... 79\nh\tPasso do helicoide................................... 79\niTj\tMatriz de transforma\u00e7\u00e3o de helicoides de um referencial\nj para um referencial i............................. 79\nS(x)\tOperador matriz antissim\u00e9trica do\tvetor x.......... 79\nIn\tMatriz identidade de dimens\u00e3o n...................... 80\nN\tMatriz de rede....................................... 82\nFb\tSomat\u00f3rio dos graus de liberdade das juntas de uma\ncadeia cinem\u00e1tica................................... 82\nA\tDimens\u00e3o do espa\u00e7o de helicoides..................... 82\nl\tN\u00famero de circuitos independentes de um grafo........ 82\n0[rxcj\tMatriz de dimens\u00e3o r x c cujos elementos s\u00e3o iguais a\nzero................................................ 82\nD\tMatriz de heligiros normalizados das juntas de uma ca-\ndeia cinem\u00e1tica..................................... 83\nB\tMatriz de circuitos de uma cadeia cinem\u00e1tica......... 83\n1[rxc]\tMatriz de dimens\u00e3o r x c cujos elementos s\u00e3o iguais a\num.................................................. 83\ndiag {r} Operador gerador de matriz diagonal do vetor linha r . 83 Np, Ns Parti\u00e7\u00f5es prim\u00e1ria e secund\u00e1ria da matriz de rede, res-\npectivamente ....................................... 83\nqp, qs\tParti\u00e7\u00f5es prim\u00e1ria e secund\u00e1ria das velocidades, respec-\ntivamente .......................................... 83\nA\tMatriz de transforma\u00e7\u00e3o homog\u00eanea.................... 97\nW\tMatriz de pesos do operador de pseudoinvers\u00e3o pode-\nrada..............................................134\nD\tFun\u00e7\u00e3o din\u00e2mica inversa...........................136\nt\tTorques e for\u00e7as do sistema.......................136\nKp\tMatriz de ganhos de realimenta\u00e7\u00e3o do erro de posi\u00e7\u00e3o. 143\ned\tVetor erro de posi\u00e7\u00e3o.............................143\nmagnitude do helicoide............................208\n0c\tVetor de 0\u2019s de dimens\u00e3o [1 x\tc]..................265\n1c\tVetor de 1\u2019s de dimens\u00e3o [1 x\tc]..................265\nLISTA DE ALGORITMOS\n1\tPseudoc\u00f3digo de KCComposable.update................117\n2\tPseudoc\u00f3digo de execu\u00e7\u00e3o das fases de interven\u00e7\u00e3o de\numa miss\u00e3o.........................................125\n3\tPseudoc\u00f3digo de execu\u00e7\u00e3o das fases de interven\u00e7\u00e3o de\numa miss\u00e3o - aspectos cinem\u00e1ticos..................126\n4\tA\u00e7\u00f5es gerais da interven\u00e7\u00e3o em uma miss\u00e3o..........129\n5\tPseudoc\u00f3digo de Intervention.execute...............129\nLISTA DE SCRIPTS\n1\tImplementa\u00e7\u00e3o de _update............................237\n2\tExemplo de uso de KCComposable......................239\n3\tExemplo de especifica\u00e7\u00e3o de trajet\u00f3ria\tno formato XML\t.\t241\n4\tExemplo de uso de geradores de trajet\u00f3ria...........242\n5\tExemplo de uso TrajFactory..........................243\n6\tExemplo de especifica\u00e7\u00e3o de trajet\u00f3ria\tno formato XML\t.\t244\n7\tImplementa\u00e7\u00e3o de _update............................244\n8\tExemplo de classe de interven\u00e7\u00e3o ...................... 245\nSUM\u00c1RIO\n1\tINTRODU\u00c7\u00c3O ................................. 35\n1.1\tO AMBIENTE SUBAQU\u00c1TICO ................... 35\n1.2\tVE\u00cdCULOS SUBAQU\u00c1TICOS N\u00c3O TRIPULADOS....... 36\n1.2.1\tClassifica\u00e7\u00e3o dos UUV................... 36\n1.2.2\tEmprego de ROV e AUV.................... 40\n1.2.3\tAutonomia dos UUV....................... 44\n1.2.4\tUma Nova Classifica\u00e7\u00e3o Para UUV ........ 46\n1.3\tOBJETIVO DA TESE ......................... 48\n1.4\tORGANIZA\u00c7\u00c3O DO TEXTO DA TESE.............. 49\n2\tSISTEMAS VE\u00cdCULO-MANIPULADOR SUBAQU\u00c1-\nTICOS ...................................... 51\n2.1\tMISS\u00d5ES DE INTERVEN\u00c7\u00c3O ................... 51\n2.2\tSISTEMAS DE UM UVMS ...................... 55\n2.2.1\tComando ................................ 55\n2.2.1.1\tArquitetura do Sistema Embarcado...... 57\n2.2.1.2\tAcompanhamento da Miss\u00e3o.............. 58\n2.2.1.3\tNavega\u00e7\u00e3o............................. 59\n2.2.1.4\tToler\u00e2ncia a Falhas .................. 60\n2.2.2\tExecu\u00e7\u00e3o................................ 61\n2.2.2.1\tAtua\u00e7\u00e3o .............................. 61\n2.2.2.2\tComunica\u00e7\u00e3o .......................... 62\n2.2.2.3\tManipula\u00e7\u00e3o .......................... 63\n2.2.3\tEstrutura ............................ 64\n2.2.3.1\tComponentes Estruturais .............. 64\n2.2.3.2\tEnergia............................... 65\n2.2.4\tAutonomia .............................. 66\n2.3\tTRABALHOS RELACIONADOS AOS UVMS .......... 67\n3\tCINEM\u00c1TICA DE UM UVMS ...................... 71\n3.1\tCINEM\u00c1TICA DO VE\u00cdCULO .................... 71\n3.2\tCINEM\u00c1TICA DO SISTEMA VE\u00cdCULO-MANIPULADOR 74\n3.3\tCINEM\u00c1TICA DE UVMS ATRAV\u00c9S DE HELICOIDES . . . 77\n4\tAN\u00c1LISE CINEM\u00c1TICA DE SISTEMAS DE INTER-\nVEN\u00c7\u00c3O SUBAQU\u00c1TICA ......................... 85\n4.1\tEXTENS\u00c3O DO MODELO CINEM\u00c1TICO BASEADO EM\nHELICOIDES ................................ 85\n4.1.1\tUVMS Com Manipuladores Operando de Forma\nIndependente Entre Si ................... 86\n4.1.2\tUVMS Com Manipuladores Operando em Coope-\nra\u00e7\u00e3o ...................................... 88\n4.1.3\tCoopera\u00e7\u00e3o Entre UVMS...................... 89\n4.1.4\tUVMS em Situa\u00e7\u00e3o de Evitamento de Colis\u00e3o . 92\n4.1.5\tObserva\u00e7\u00f5es Sobre Os Modelos Cinem\u00e1ticos .. 94\n4.2\tMODULARIZA\u00c7\u00c3O DA MODELAGEM CINEM\u00c1TICA ... 95\n4.3\tVARIABILIDADE DO MODELO CINEM\u00c1TICO DE SIS-\nTEMAS SUBAQU\u00c1TICOS DE INTERVEN\u00c7\u00c3O.......... 98\n5\tASPECTOS DE PROJETO DE UM FRAMEWORK\nPARA MODELAGEM CINEM\u00c1TICA................... 105\n5.1\tMOTIVA\u00c7\u00c3O....................................105\n5.2\tREQUISITOS DE PROJETO........................106\n5.3\tO ENFOQUE ORIENTADO A OBJETOS................108\n5.4\tMODELAGEM DO FRAMEWORK.......................109\n5.4.1\tVis\u00e3o Geral................................110\n5.4.2\tA Classe KCComponent.......................112\n5.4.3\tHelicoides e Juntas........................115\n5.4.4\tCadeias Cinem\u00e1ticas ...................... 116\n5.4.5\tGeradores de Trajet\u00f3ria....................118\n5.4.6\tExtens\u00e3o e Especializa\u00e7\u00e3o de Cadeias Cinem\u00e1ticas . 120\n6\tESTRAT\u00c9GIAS DE PLANEJAMENTO DE MOVI-\nMENTO PARA UVMS EM INTERVEN\u00c7\u00c3O ............... 123\n6.1\tVIS\u00c3O GERAL DO PLANEJAMENTO DE MOVIMENTO\nEM SISTEMAS DE INTERVEN\u00c7\u00c3O .................. 123\n6.2\tEXECU\u00c7\u00c3O DE TAREFAS DE INTERVEN\u00c7\u00c3O...........124\n6.3\tDEFINI\u00c7\u00c3O DE UM FRAMEWORK PARA TAREFAS\nDE INTERVEN\u00c7\u00c3O................................127\n6.3.1\tClasse Intervention........................128\n6.3.2\tClasse Mission.............................130\n6.3.3\tClasse Task................................131\n6.3.4\tClasse Guidance ...........................133\n6.3.5\tClasse Uvms .............................. 135\n6.4\tSISTEM\u00c1TICA DE DESENVOLVIMENTO DE ESTRA-\nT\u00c9GIAS DE PLANEJAMENTO DE MOVIMENTO........136\n7\tSIMULA\u00c7\u00d5ES E AN\u00c1LISE.......................... 141\n7.1\tUVMS COM UM MANIPULADOR......................141\n7.1.1\tExecu\u00e7\u00e3o de uma trajet\u00f3ria retil\u00ednea.......141\n7.1.2\tReorientando o ve\u00edculo durante a execu\u00e7\u00e3o da tarefa 148\n7.1.3\tExecu\u00e7\u00e3o da Tarefa na Presen\u00e7a de Falha.151\n7.1.4\tExecu\u00e7\u00e3o de uma trajet\u00f3ria fechada......155\n7.2\tUVMS COM DOIS MANIPULADORES EM COOPERA\u00c7\u00c3O159\n7.2.1\tPosicionamento e encaixe de uma pe\u00e7a........159\n7.3\tDOIS UVMS EM COOPERA\u00c7\u00c3O.......................165\n7.3.1\tPosicionamento de uma pe\u00e7a..................166\n7.3.2\tExecu\u00e7\u00e3o de tarefa que exige deslocamento dos UVMS 170\n7.4\tDOIS UVMS COM DOIS MANIPULADORES EM COO-\nPERA\u00c7\u00c3O ......................................174\n7.4.1\tPosicionamento de uma estrutura\tcil\u00edndrica..177\n8\tCONCLUS\u00c3O...................................... 187\n8.1\tCONTRIBUI\u00c7\u00d5ES DA TESE.......................187\n8.2\tPERSPECTIVAS E TRABALHOS FUTUROS ............ 189\n8.3\tCONSIDERA\u00c7\u00d5ES FINAIS ........................ 191\nRefer\u00eancias Bibliogr\u00e1ficas....................... 193\nAP\u00caNDICE A -- Fundamentos da An\u00e1lise Cinem\u00e1tica\nPor Helicoides ................................ 207\nAP\u00caNDICE B - Implementa\u00e7\u00e3o e Uso do Framework\nKAST .......................................... 227\nAP\u00caNDICE C\t-- Modelos Cinem\u00e1ticos Utilizados . 249\nAP\u00caNDICE D -- Mapa Conceitual da Rob\u00f3tica Subaqu\u00e1-\ntica .......................................... 277\n1 INTRODU\u00c7\u00c3O\nEsta tese estuda o problema do planejamento de movimento de sistemas ve\u00edculo-manipulador subaqu\u00e1ticos em tarefas de interven\u00e7\u00e3o. Este problema consiste na defini\u00e7\u00e3o dos movimentos que o sistema deve realizar para atender \u00e0s especifica\u00e7\u00f5es das tarefas. Os sistemas ve\u00edculo-manipulador subaqu\u00e1ticos s\u00e3o extensamente usados na explora\u00e7\u00e3o dos oceanos e outras massas d\u2019\u00e1gua, o que justifica o grande interesse no seu desenvolvimento. Um dos principais desafios de pesquisa \u00e9 a autonomia de opera\u00e7\u00e3o, para a qual o planejamento de movimento \u00e9 um requisito importante. Este cap\u00edtulo apresenta uma contextualiza\u00e7\u00e3o do problema de pesquisa atrav\u00e9s da descri\u00e7\u00e3o do meio subaqu\u00e1tico e dos ve\u00edculos n\u00e3o tripulados usados para a sua explora\u00e7\u00e3o. A seguir, o objetivo da tese \u00e9 descrito e a organiza\u00e7\u00e3o do restante deste texto \u00e9 apresentada.\n1.1\tO AMBIENTE SUBAQU\u00c1TICO\nO planeta Terra tem aproximadamente 71% de sua superf\u00edcie coberta por \u00e1gua, sendo 97,5% desta correspondente a oceanos e mares. Al\u00e9m de sua importancia inconteste para a manuten\u00e7\u00e3o da vida no planeta, a explora\u00e7\u00e3o de seus recursos naturais s\u00e3o de grande importancia econ\u00f4mica e social. Al\u00e9m dos oceanos, os cursos de \u00e1gua doce, como rios e lagos, s\u00e3o fundamentais para os ecossistemas, a navega\u00e7\u00e3o e a explora\u00e7\u00e3o humana. Grande parte das civiliza\u00e7\u00f5es se desenvolveram pr\u00f3ximas a algum corpo d\u2019\u00e1gua. Apesar disso, os oceanos e corpos de \u00e1gua doce s\u00e3o muito pouco conhecidos. Apenas a superf\u00edcie \u00e9 extensamente utilizada. As caracter\u00edsticas do meio subaqu\u00e1tico tornam-no in\u00f3spito aos humanos, dificultando a sua explora\u00e7\u00e3o (Schmiegelow, 2004; UNESCO, 2009).\nAtualmente, esses locais s\u00e3o considerados importantes fontes de alimentos e de recursos energ\u00e9ticos como petr\u00f3leo e g\u00e1s. Outras possibilidades de explora\u00e7\u00e3o, como a minera\u00e7\u00e3o do leito oce\u00e2nico, est\u00e3o sendo estudadas. O uso dos mares como meio de transporte \u00e9 de grande import\u00e2ncia para a economia global. Al\u00e9m disso, boa parte das comunica\u00e7\u00f5es intercontinentais se d\u00e1 atrav\u00e9s de cabos submarinos depositados no leito oce\u00e2nico (Schmiegelow, 2004; Antonelli; Fossen; Yoerger, 2008; Whitcomb, 2000).\nA matriz energ\u00e9tica global, baseada principalmente em combust\u00edveis f\u00f3sseis, demanda a pesquisa por fontes de obten\u00e7\u00e3o de petr\u00f3\nleo e g\u00e1s a profundidades cada vez maiores nos oceanos. Observa-se esse fato pelas sucessivas marcas em profundidades alcan\u00e7adas, como o atual recorde de perfura\u00e7\u00e3o de 3.107m na \u00cdndia (Offshore Engineering, 2011b, 2011a), de extra\u00e7\u00e3o (1.886m) e de produ\u00e7\u00e3o (1.413m). Estes dois \u00faltimos foram obtidos pela Petrobras, empregando boa parte de tecnologia nacional (Petrobras, 2011b, 2011c). As recentes descobertas de reservas no pr\u00e9-sal em l\u00e2minas d\u2019\u00e1gua variando entre 2.000m e 3.000m dever\u00e3o estabelecer novos recordes e trazem desafios tecnol\u00f3gicos a serem superados (Petrobras, 2011a).\nAl\u00e9m disso, o conhecimento dos oceanos \u00e9 essencial para diversas \u00e1reas do conhecimento como a climatologia, a biologia, a hist\u00f3ria, a geologia e at\u00e9 mesmo a exobiologia.\nOs riscos e custos envolvidos nas opera\u00e7\u00f5es submarinas incentivam a pesquisa e o desenvolvimento dos Ve\u00edculos Subaqu\u00e1ticos N\u00e3o Tripulados (em ingl\u00eas, Unmanned Underwater Vehicles, ou UUV) (Antonelli; Fossen; Yoerger, 2008; Marani; Choi; Yuh, 2009).\n1.2\tVE\u00cdCULOS SUBAQU\u00c1TICOS N\u00c3O TRIPULADOS\nOs ve\u00edculos subaqu\u00e1ticos n\u00e3o tripulados s\u00e3o instrumentais para a explora\u00e7\u00e3o submarina em diferentes tipos de aplica\u00e7\u00e3o, por apresentar vantagens em rela\u00e7\u00e3o a outros meios. Em rela\u00e7\u00e3o ao uso de mergulhadores, os UUV reduzem os riscos inerentes \u00e0 press\u00e3o, temperatura e falta de ar (Bennett et al., 1984; Tonjum; Peterson; Florio, 1984), al\u00e9m de alcan\u00e7arem profundidades muito maiores que as poss\u00edveis para humanos (Yuh, 1990). Os ve\u00edculos tripulados, por sua vez, t\u00eam restri\u00e7\u00f5es quanto ao espa\u00e7o que podem alcan\u00e7ar, al\u00e9m de serem muito onerosos (Antonelli, 2006). Uma estimativa de 2007 indica aproximadamente apenas 100 desses sistemas em uso para fins n\u00e3o militares (Kohnen, 2008). Assim, os UUV s\u00e3o respons\u00e1veis por grande parte das opera\u00e7\u00f5es nos ambientes imersos (Antonelli; Fossen; Yoerger, 2008).\nExistem diferentes tipos de ve\u00edculos n\u00e3o tripulados, projetados de acordo com o tipo de miss\u00e3o a ser realizada.\n1.2.1\tClassifica\u00e7\u00e3o dos UUV\nA classifica\u00e7\u00e3o comumente adotada pela literatura e pela ind\u00fastria para os ve\u00edculos subaqu\u00e1ticos n\u00e3o tripulados \u00e9 feita de acordo com a capacidade de opera\u00e7\u00e3o aut\u00f4noma. Tem-se, ent\u00e3o, as classes de Ve\u00ed-\nculos Remotamente Operados e de Ve\u00edculos Subaqu\u00e1ticos Aut\u00f4nomos.\nOs Ve\u00edculos Remotamente Operados, ou ROV (do ingl\u00eas Remotely Operated Vehicles), t\u00eam como caracter\u00edstica principal a sua conex\u00e3o f\u00edsica com uma base atrav\u00e9s de um cord\u00e3o umbilical (ou tether, em ingl\u00eas). Ele \u00e9 usado para transmitir energia ao ve\u00edculo e fazer sua comunica\u00e7\u00e3o de dados com a base. Muitos modelos de ROV apresentam manipuladores, atrav\u00e9s dos quais fazem contato f\u00edsico com o meio. Por isso, s\u00e3o usados tanto em opera\u00e7\u00f5es de inspe\u00e7\u00e3o quanto de interven\u00e7\u00e3o, em especial nas instala\u00e7\u00f5es de petr\u00f3leo e g\u00e1s offshore (Antonelli; Fos-sen; Yoerger, 2008), como \u00e9 ilustrado na Figura 1 (Oceaneering, 2009).\nApesar de sua extensa utiliza\u00e7\u00e3o, os ROV apresentam grandes limita\u00e7\u00f5es a serem superadas. O cord\u00e3o umbilical restringe os movimentos do ve\u00edculo, al\u00e9m de acrescentar efeitos din\u00e2micos indesejados. A opera\u00e7\u00e3o do ROV exige operadores qualificados e habilidosos, al\u00e9m da presen\u00e7a de uma base de opera\u00e7\u00f5es \u00e0 qual ele se conecta fisicamente (em geral, um navio). Por isso, as miss\u00f5es s\u00e3o bastante onerosas, e muitas vezes limitadas pelas condi\u00e7\u00f5es meteorol\u00f3gicas do s\u00edtio de opera\u00e7\u00e3o e pelo desgaste dos operadores. A dura\u00e7\u00e3o de uma miss\u00e3o \u00e9 fortemente influenciada por todos esses fatores (Yuh et al., 1998; Antonelli, 2006; Paschoa, 2010).\nFigura 1. ROV Oceaneering Millenium conectando um duto em um painel (Oceaneering, 2009)\nEmbora se afirme que a efetividade do uso de ROV diminui com a profundidade, devido aos custos e \u00e0 dificuldade de manipula\u00e7\u00e3o de cord\u00f5es umbilicais extensos (Antonelli; Fossen; Yoerger, 2008), eles s\u00e3o usados em profundidades de at\u00e9 3.000m na ind\u00fastria de petr\u00f3leo e g\u00e1s\noffshore (Petrobras, 2011a). O avan\u00e7o na tecnologia de materiais, energia e comunica\u00e7\u00f5es est\u00e1 gradualmente superando muitas limita\u00e7\u00f5es causadas pelos cord\u00f5es umbilicais, \u00e0 medida em que estes diminuem de espessura e peso. O recorde de 11.000m de profundidade alcan\u00e7ado pelo ROV Nereus resulta dessas inova\u00e7\u00f5es (Inova\u00e7\u00e3o Tecnol\u00f3gica, 2009).\nOs Ve\u00edculos Subaqu\u00e1ticos Aut\u00f4nomos, tamb\u00e9m conhecidos como AUV (de Autonomous Underwater Vehicles), s\u00e3o ve\u00edculos que prescindem do cord\u00e3o umbilical. Para tanto, eles possuem suprimento de energia pr\u00f3prio e se comunicam atrav\u00e9s de enlaces sem fio. Os AUV possuem maior liberdade de movimentos que os ROV, podendo alcan\u00e7ar dist\u00e2ncias maiores e operar por longos per\u00edodos. Isso os torna adequados para opera\u00e7\u00f5es de coleta de dados cient\u00edficos, mapeamento oceano-gr\u00e1fico, inspe\u00e7\u00e3o de s\u00edtios e miss\u00f5es militares de longa dura\u00e7\u00e3o.\nAs limita\u00e7\u00f5es da comunica\u00e7\u00e3o sem fio no meio subaqu\u00e1tico restringem a comunica\u00e7\u00e3o com uma base, fazendo com que esses ve\u00edculos tenham de executar as tarefas atribu\u00eddas sem intera\u00e7\u00e3o cont\u00ednua com operadores. Essa caracter\u00edstica \u00e9 definida como a autonomia do ve\u00edculo (Button et al., 2009). Tal autonomia implica na habilidade de planejamento de execu\u00e7\u00e3o das tarefas e na elabora\u00e7\u00e3o de solu\u00e7\u00f5es para eventos n\u00e3o previstos pelo pr\u00f3prio ve\u00edculo. Para tanto, os AUV s\u00e3o equipados com v\u00e1rios tipos de sensores para localiza\u00e7\u00e3o e mapeamento. Al\u00e9m disso, demanda grande capacidade de processamento de informa\u00e7\u00f5es.\nO avan\u00e7o dos sensores e dos meios de comunica\u00e7\u00e3o permitem o uso de AUV em meios cada vez mais in\u00f3spitos. Um exemplo \u00e9 o do rob\u00f4 ENDURANCE, originalmente projetado para a explora\u00e7\u00e3o dos oceanos da lua Europa, de J\u00fapiter. Depois de constru\u00eddo, esse rob\u00f4 foi utilizado para a explora\u00e7\u00e3o de lagos e mares abaixo das calotas polares terrestres, um ambiente at\u00e9 ent\u00e3o desconhecido. Al\u00e9m de avaliar o desempenho e funcionalidade do rob\u00f4, o sucesso da miss\u00e3o teve grande relev\u00e2ncia cient\u00edfica. Na Figura 2 \u00e9 mostrado um teste de campo desse AUV (Stone Aerospace, 2012).\nApesar do grande avan\u00e7o tecnol\u00f3gico, a maioria dos AUV s\u00e3o projetados para opera\u00e7\u00f5es do tipo fly-by, onde n\u00e3o existe contato f\u00edsico com o meio. Isso se deve a diversos fatores, como a baixa largura de banda e atrasos da comunica\u00e7\u00e3o ac\u00fastica (a comunica\u00e7\u00e3o eletromagn\u00e9tica \u00e9 praticamente imposs\u00edvel no meio subaqu\u00e1tico), o limitado suprimento de energia e a inerente complexidade envolvida em tarefas de interven\u00e7\u00e3o (Whitcomb, 2000; Antonelli; Fossen; Yoerger, 2008; Ma-rani; Choi; Yuh, 2009). Na Figura 3 apresenta-se o Remus 6000, que foi utilizado na localiza\u00e7\u00e3o das caixas pretas do voo AF447 no Oceano Atl\u00e2ntico (Terra, 2011).\nFigura 2. O rob\u00f4 ENDURANCE (Stone Aerospace, 2012)\nFigura 3. AUV Remus 6000 da Hydroid (Kongsberg, 2011)\nOs Sistemas Ve\u00edculo-Manipulador Subaqu\u00e1ticos, ou UVMS (do ingl\u00eas Underwater Vehicle-Manipulator Systems) s\u00e3o ve\u00edculos subaqu\u00e1ticos n\u00e3o tripulados aos quais um ou mais manipuladores s\u00e3o acoplados com a finalidade de realizar opera\u00e7\u00f5es de intera\u00e7\u00e3o com o meio. O acr\u00e9scimo de manipuladores aumenta a complexidade do sistema devido \u00e0 redund\u00e2ncia cinem\u00e1tica intr\u00ednseca e \u00e0 intera\u00e7\u00e3o din\u00e2mica ve\u00edculo-manipulador-meio. Os UVMS costumam ser completamente atuados de forma a compensar as for\u00e7as e momentos gerados pela opera\u00e7\u00e3o de manipula\u00e7\u00e3o. Isso faz com que esses sistemas sejam usualmente teleoperados, por causa das dificuldades de implementar recursos de opera\u00e7\u00e3o aut\u00f4noma (Antonelli; Fossen; Yoerger, 2008). A Figura 4 apresenta o ALIVE, da empresa Cybernetix, projetado para uso em instala\u00e7\u00f5es de petr\u00f3leo e g\u00e1s.\nFigura 4. Cybernetix ALIVE, UVMS com capacidade de opera\u00e7\u00e3o aut\u00f4noma ou teleoperada (Cybernetix, 2008)\nOs UVMS s\u00e3o tamb\u00e9m fundamentais em miss\u00f5es de atendimento a desastres, como no caso da plataforma Deepwater Horizon da British Petroleum (v. Figura 5a) (British Petroleum, 2010). Investiga\u00e7\u00e3o, resgates e recupera\u00e7\u00e3o de destro\u00e7os como no acidente do voo AF447 tamb\u00e9m utilizam esses sistemas (v. Figura 5b) (Terra, 2011; Phoenix, 2011).\n1.2.2\tEmprego de ROV e AUV\nSegundo um relat\u00f3rio de tend\u00eancias da ind\u00fastria offshore, em 2009 existiam 629 AUV em opera\u00e7\u00e3o, com uma proje\u00e7\u00e3o de demanda de aproximadamente 1.150 ve\u00edculos em um per\u00edodo de 10 anos. Outro levantamento da mesma consultoria prev\u00ea a expans\u00e3o de 420 para 570 ROV das classes de trabalho geral e pesado para atender \u00e0s demandas da ind\u00fastria de petr\u00f3leo e g\u00e1s em 5 anos1 (Douglas-Westwood, 2011). Os gr\u00e1ficos da Figura 6 sintetizam esses dados. De acordo com outro relat\u00f3rio, haviam mais de 1.000 ROV de pequeno porte em opera\u00e7\u00e3o em 2009, considerando apenas os modelos comerciais e de institui\u00e7\u00f5es de pesquisa (Button et al., 2009). Esses n\u00fameros ilustram a import\u00e2ncia que os UUV t\u00eam para as atividades subaqu\u00e1ticas em diferentes \u00e1reas.\nEmbora n\u00e3o exista uma classifica\u00e7\u00e3o formal dos UUV quanto ao porte e a capacidade, existem designa\u00e7\u00f5es aceitas nos meios em que estes s\u00e3o empregados (MTS, 2006; Button et al., 2009). As Tabelas 1 e 3 relacionam essas classes de ROV e AUV, respectivamente, des\n1 em 2006, a Marine Technology Society estimava a exist\u00eancia de 435 ROV desse tipo em opera\u00e7\u00e3o (MTS, 2006).\ncrevendo as caracter\u00edsticas desses sistemas. As Tabelas 2 e 4, por sua vez, ilustram usos de acordo com as classes. Os nomes das classes s\u00e3o adapta\u00e7\u00f5es dos termos comumente usados em ingl\u00eas.\nExistem alguns sistemas subaqu\u00e1ticos que n\u00e3o se enquadram bem nas classifica\u00e7\u00f5es de UUV apresentadas. \u00c9 o caso dos ve\u00edculos h\u00edbridos, que podem operar como ROV ou AUV de acordo com a natureza da tarefa. Estes podem utilizar o cord\u00e3o umbilical para fornecimento de energia/comunica\u00e7\u00e3o ou operar por baterias utilizando a\n(a)\n(b)\nFigura 5. UVMS em opera\u00e7\u00e3o: (a)s\u00edtio do vazamento de petr\u00f3leo no Golfo do M\u00e9xico(Leff; Plushnick-Masti, 2010); (b)Remora 6000 sendo lan\u00e7ado(Phoenix, 2011)\nFigura 6. Proje\u00e7\u00f5es de expans\u00e3o do uso de UUV: (a)AUV; (b)ROV de classes de servi\u00e7o(Douglas-Westwood, 2011)\nTabela 1. Classes de ROV\nClasse\tAcionamento\tProfundidade\tCarga\nPequenos\tel\u00e9trico\tat\u00e9 300m\tc\u00e2mera/sensores\nEl\u00e9tricos de alta capacidade\tel\u00e9trico\tat\u00e9 6.000m\talguns kg\nTrabalho geral\tel\u00e9trico hidr\u00e1ulico\tat\u00e9 1.000m\tat\u00e9 450kg\nTrabalho pesado\thidr\u00e1ulico\tat\u00e9 3.000m\tat\u00e9 750kg\nTabela 2. Usos de ROV\nClasse\tUsos\nPequenos\tInspe\u00e7\u00e3o; supervis\u00e3o de mergulhadores\nEl\u00e9tricos de alta capacidade\tPesquisas cient\u00edficas; usos militares; opera\u00e7\u00e3o de pain\u00e9is e v\u00e1lvulas\nTrabalho geral\tConstru\u00e7\u00e3o, manuten\u00e7\u00e3o e inspe\u00e7\u00e3o de instala\u00e7\u00f5es de petr\u00f3leo e g\u00e1s\nTrabalho pesado\tOpera\u00e7\u00f5es especiais de constru\u00e7\u00e3o / manuten\u00e7\u00e3o de instala\u00e7\u00f5es de petr\u00f3leo e g\u00e1s\nconex\u00e3o apenas para comunica\u00e7\u00e3o. No modo aut\u00f4nomo, o cord\u00e3o n\u00e3o \u00e9 utilizado, e assim n\u00e3o h\u00e1 comunica\u00e7\u00e3o constante com a base.\nAlguns projetos de AUV tamb\u00e9m n\u00e3o se enquadram na classifica\u00e7\u00e3o. Esse \u00e9 o caso dos sistemas biomim\u00e9ticos (que emulam o compor-\nTabela 3. Classes de AUV\nClasse\tAutonomia\tCarga\tLan\u00e7amento\nPort\u00e1teis\tat\u00e9 20h\tat\u00e9 45kg\tmanual\nLeves\tat\u00e9 40h\tat\u00e9 220kg\tpor lan\u00e7adores\nPesados\tat\u00e9 80h\tat\u00e9 1.350kg\tcompat\u00edveis com submarinos\nGrandes\tat\u00e9 400h\tat\u00e9 10.000kg\tcompat\u00edveis com submarinos e navios\nTabela 4. Usos de AUV\nClasse\tUsos\nPort\u00e1teis\tOpera\u00e7\u00f5es de inspe\u00e7\u00e3o e coleta de dados\nLeves\tColeta de dados, mapeamento, inspe\u00e7\u00e3o\nPesados\tAplica\u00e7\u00f5es militares\nGrandes\tAplica\u00e7\u00f5es militares\ntamento de seres vivos) e dos gliders (que utilizam a energia potencial para seu deslocamento por grandes dist\u00e2ncias).\nAs opera\u00e7\u00f5es executadas por UUV podem ser classificadas como sendo de cruzeiro ou de interven\u00e7\u00e3o em fun\u00e7\u00e3o de seu movimento durante a execu\u00e7\u00e3o e de sua intera\u00e7\u00e3o com o ambiente aqu\u00e1tico. Na literatura s\u00e3o encontradas varia\u00e7\u00f5es desses termos, por\u00e9m conservando as caracter\u00edsticas que definem cada classe, de forma que a distin\u00e7\u00e3o se mant\u00e9m v\u00e1lida (Antonelli; Fossen; Yoerger, 2008; Yuh, 2000; Marani; Choi; Yuh, 2009).\nNas opera\u00e7\u00f5es de cruzeiro, o UUV n\u00e3o interage fisicamente com o meio aqu\u00e1tico. O nome se deve ao fato do ve\u00edculo estar em movimento durante a execu\u00e7\u00e3o de tarefas, se deslocando segundo uma trajet\u00f3ria predeterminada. O ve\u00edculo carrega um conjunto de sensores usados para coleta de dados do ambiente, mapeamento do leito marinho, supervis\u00e3o ou vigil\u00e2ncia. Por esse motivo, \u00e9 comum essas opera\u00e7\u00f5es serem chamadas de pesquisa ou inspe\u00e7\u00e3o (do ingl\u00eas survey) (Antonelli; Fos-sen; Yoerger, 2008; Yuh, 2000).\nAs opera\u00e7\u00f5es de interven\u00e7\u00e3o s\u00e3o aquelas onde h\u00e1 intera\u00e7\u00e3o com o meio. Em muitas situa\u00e7\u00f5es, essas opera\u00e7\u00f5es exigem que o ve\u00edculo permane\u00e7a parado em determinada posi\u00e7\u00e3o/orienta\u00e7\u00e3o, a despeito das perturba\u00e7\u00f5es do ambiente como as causadas por correntes, mar\u00e9s e ondas. Por isso, tamb\u00e9m s\u00e3o chamadas de opera\u00e7\u00f5es estacion\u00e1rias\n(do ingl\u00eas hovering)(Antonelli, 2004; Marani; Choi; Yuh, 2009; Soylu; Buckham; Podhorodeski, 2010).\nOs AUV est\u00e3o gradativamente substituindo os ROV nas opera\u00e7\u00f5es de cruzeiro, por causa das caracter\u00edsticas aut\u00f4nomas que permitem maior liberdade de movimentos, alcance e dura\u00e7\u00e3o de miss\u00f5es (Tavares, 2003). O cord\u00e3o umbilical, principalmente, traz limita\u00e7\u00f5es quanto \u00e0s dist\u00e2ncias que podem ser percorridas pelo ve\u00edculo (aproximadamente 1km de raio, no caso de cord\u00f5es que fornecem energia ao ve\u00edculo) (Button et al., 2009). Al\u00e9m disso, acrescenta-se o problema do manejo do cord\u00e3o umbilical (El-Hawary, 2001).\nNas opera\u00e7\u00f5es de interven\u00e7\u00e3o, por\u00e9m, os ROV ainda prevalecem devido \u00e0 complexidade da intera\u00e7\u00e3o f\u00edsica com o meio, que exige atua\u00e7\u00e3o constante dos operadores. Al\u00e9m disso, para permanecer estacion\u00e1rio, o ve\u00edculo deve ser capaz de se movimentar de forma independente em qualquer dire\u00e7\u00e3o no espa\u00e7o, o que n\u00e3o \u00e9 poss\u00edvel para a maioria dos AUV, devido ao seu projeto ser voltado para maior efici\u00eancia em opera\u00e7\u00f5es de cruzeiro. A Tabela 5 apresenta uma rela\u00e7\u00e3o de tarefas em que os UUV s\u00e3o utilizados ou cujo potencial de uso est\u00e1 sendo pesquisado.\n1.2.3\tAutonomia dos UUV\nA autonomia \u00e9 considerada o maior desafio de longo prazo no desenvolvimento dos AUV (Button et al., 2009). Mesmo existindo resultados significativos na \u00e1rea de navega\u00e7\u00e3o, o que viabilizou o uso dos AUV em opera\u00e7\u00f5es de cruzeiro (como as listadas na Tabela 4), h\u00e1 a necessidade de aperfei\u00e7oamentos nos sistemas de localiza\u00e7\u00e3o espacial, identifica\u00e7\u00e3o de obst\u00e1culos e alvos. Atualmente, v\u00e1rias pesquisas est\u00e3o em curso na \u00e1rea de sensores e atuadores, assim como em sistemas de mapeamento, localiza\u00e7\u00e3o, estrat\u00e9gias de aproxima\u00e7\u00e3o de alvos e de evitamento de obst\u00e1culos.\nO problema da autonomia pode ser dividido em dois enfoques distintos. A autonomia f\u00edsica consiste em possibilitar o funcionamento do UUV livre de conex\u00f5es f\u00edsicas com uma base ou outros ve\u00edculos. J\u00e1 a autonomia operacional pode ser definida como a capacidade do UUV analisar a miss\u00e3o a ele designada, planejar o seu movimento e adaptar sua opera\u00e7\u00e3o de acordo com mudan\u00e7as ocorridas no espa\u00e7o de trabalho durante a sua execu\u00e7\u00e3o (Rocha; Dias, 2010b).\nNeste texto, considera-se que as quest\u00f5es relacionadas \u00e0 autonomia operacional s\u00e3o mais cr\u00edticas para o desenvolvimento da autonomia dos UUV, pois mesmo sistemas conectados por cord\u00f5es umbilicais po-\nTabela 5. Atividades que empregam UUV\nTipo\tAtividade\nCient\u00edfica\tColeta de amostras f\u00edsicas, qu\u00edmicas e biol\u00f3gicas Mapeamento do leito oce\u00e2nico e das calotas polares Caracteriza\u00e7\u00e3o do perfil da coluna d\u2019\u00e1gua Explora\u00e7\u00e3o de s\u00edtios de grande profundidade Transporte e opera\u00e7\u00e3o de equipamentos de pesquisa Arqueologia subaqu\u00e1tica Ensaios n\u00e3o destrutivos Investiga\u00e7\u00e3o de s\u00edtios de desastres\nAmbiental\tMonitoramento de propriedades da \u00e1gua Monitoramento de esp\u00e9cimes biol\u00f3gicos Remo\u00e7\u00e3o de destro\u00e7os e detritos\nMilitar\tInvestiga\u00e7\u00e3o de locais de atraca\u00e7\u00e3o Contramedidas contra minas aqu\u00e1ticas Busca e resgate de submarinos e armamentos Vigil\u00e2ncia de portos e costa\nIndustrial e Comercial\tLan\u00e7amento e manuten\u00e7\u00e3o de cabos Inspe\u00e7\u00e3o de cabos e tubula\u00e7\u00f5es Manuten\u00e7\u00e3o de tubula\u00e7\u00f5es Constru\u00e7\u00e3o e manuten\u00e7\u00e3o de estruturas offshore Opera\u00e7\u00e3o de pain\u00e9is e v\u00e1lvulas Inspe\u00e7\u00e3o de cascos e tanques de navios Inspe\u00e7\u00e3o de usinas nucleares Salvatagem\ndem se beneficiar da implementa\u00e7\u00e3o de algum grau de independ\u00eancia de intera\u00e7\u00e3o com operadores humanos, que assumem ent\u00e3o o papel de supervisores da execu\u00e7\u00e3o de tarefas que foram especificadas em alto n\u00edvel para os UUV. Por\u00e9m, isso n\u00e3o diminui a import\u00e2ncia das pesquisas para resolver os problemas da autonomia f\u00edsica, como o fornecimento/-suprimento de energia, troca de informa\u00e7\u00f5es e efici\u00eancia de atuadores.\nN\u00e3o existe uma defini\u00e7\u00e3o precisa para o grau de autonomia de um UUV, embora algumas defini\u00e7\u00f5es tenham sido propostas pela Marinha americana (Button et al., 2009). Alguns autores usam o termo semi-autonomia para se referirem a esse tipo de intera\u00e7\u00e3o operador-ve\u00edculo, com o objetivo de evoluir gradativamente os sistemas de miss\u00e3o de forma que as tarefas do operador sejam de n\u00edvel cada vez mais alto, \u00e0 medida que os sistemas do UUV tornam-se mais capazes de geren-\nciar os aspectos de opera\u00e7\u00e3o anteriormente de responsabilidade humana (Marani; Choi; Yuh, 2009; Yuh et al., 1998). Este enfoque refor\u00e7a a ideia de que a autonomia operacional e a capacidade de planejamento de movimento para resolu\u00e7\u00e3o das tarefas s\u00e3o problemas de grande import\u00e2ncia para a evolu\u00e7\u00e3o dos UUV de totalmente teleoperados (ROV) para totalmente aut\u00f4nomos (AUV).\nNo caso das opera\u00e7\u00f5es de interven\u00e7\u00e3o, executadas por UVMS, a atua\u00e7\u00e3o aut\u00f4noma tamb\u00e9m deve compreender a utiliza\u00e7\u00e3o dos manipuladores. O seu movimento causa efeitos din\u00e2micos significativos sobre o sistema ve\u00edculo-manipulador que s\u00e3o de dif\u00edcil identifica\u00e7\u00e3o e modelagem. A aplica\u00e7\u00e3o de esfor\u00e7os sobre o ambiente gera desafios que s\u00e3o objeto de estudo at\u00e9 para o caso de manipuladores no ambiente industrial. Por esse motivo, a autonomia dos UVMS ainda \u00e9 considerado um problema em aberto (Antonelli, 2004).\nO desenvolvimento dos chamados I-AUV (do ingl\u00eas Intervention-AUV, ou AUV de interven\u00e7\u00e3o) \u00e9 um dos grandes desafios de pesquisa na rob\u00f3tica subaqu\u00e1tica. Este tipo de sistema deve ser capaz de se deslocar at\u00e9 o s\u00edtio de interven\u00e7\u00e3o, reconhecer a tarefa a ser executada e agir sem a necessidade de supervis\u00e3o e atua\u00e7\u00e3o humana cont\u00ednua. Apesar de v\u00e1rios estudos terem sido publicados, existem poucos I-AUV constru\u00eddos. Estes operam principalmente em ambientes conhecidos e controlados (Antonelli; Fossen; Yoerger, 2008; Yuh et al., 1998; De Novi et al., 2010). Os primeiros experimentos em mar aberto foram reportados apenas recentemente (Marani; Choi; Yuh, 2009). A execu\u00e7\u00e3o de tarefas de interven\u00e7\u00e3o de precis\u00e3o ainda exige avan\u00e7os em armazenamento de energia, sistemas computacionais, navega\u00e7\u00e3o subaqu\u00e1tica e sensores (Paschoa, 2010).\n1.2.4\tUma Nova Classifica\u00e7\u00e3o Para UUV\nAl\u00e9m de descrever a capacidade de autonomia de um UUV, a distin\u00e7\u00e3o entre ROV e AUV tamb\u00e9m tem sido associada ao tipo de tarefa usualmente empregado. Como ilustra uma vis\u00e3o de mapa conceitual apresentada na Figura 7, os AUV s\u00e3o costumeiramente associados \u00e0s tarefas de cruzeiro, enquanto os ROV s\u00e3o associados \u00e0s tarefas de interven\u00e7\u00e3o. Isso se deve ao fato dos AUV serem usualmente projetados para opera\u00e7\u00e3o em movimento cont\u00ednuo, enquanto os UVMS s\u00e3o em sua maioria teleoperados e por isso comumente chamados de ROV. Al\u00e9m disso, a necessidade do cord\u00e3o umbilical \u00e9 decisiva na denomina\u00e7\u00e3o do ve\u00edculo subaqu\u00e1tico.\nFigura 7. Rela\u00e7ao entre UUV e opera\u00e7\u00f5es subaqu\u00e1ticas\n\u00c0 medida que os sistemas de interven\u00e7\u00e3o subaqu\u00e1tica come\u00e7am a ter caracter\u00edsticas de opera\u00e7\u00e3o aut\u00f4noma, por\u00e9m, a classifica\u00e7\u00e3o comu-mente usada perde a sua validade. A autonomia de opera\u00e7\u00e3o pode ser implementada mesmo em ve\u00edculos com cord\u00e3o umbilical, o que invalida o uso do termo ROV.\nUma vez que este texto concerne o planejamento de movimento para implementa\u00e7\u00e3o de autonomia, ser\u00e1 adotada uma classifica\u00e7\u00e3o em fun\u00e7\u00e3o do tipo de tarefa para a qual o sistema subaqu\u00e1tico \u00e9 projetado. Assim, tem-se os sistemas de cruzeiro e os sistemas de interven\u00e7\u00e3o subaqu\u00e1tica (Rocha; Dias, 2010b). Uma vis\u00e3o de mapa conceitual refletindo essa nova classifica\u00e7\u00e3o \u00e9 apresentada na Figura 8. Esta \u00e9 derivada do mapa conceitual apresentado no Ap\u00eandice D.\nFigura 8. Vis\u00e3o atualizada da classifica\u00e7\u00e3o da rob\u00f3tica subaqu\u00e1tica\nAlguns sistemas combinam caracter\u00edsticas para satisfazer os dois tipos de tarefa (Marani; Choi; Yuh, 2009; De Novi et al., 2010). Estes\npodem ser denominados sistemas h\u00edbridos de cruzeiro/interven\u00e7\u00e3o.\n1.3\tOBJETIVO DA TESE\nCom base na contextualiza\u00e7\u00e3o, observa-se que o desenvolvimento de I-AUV \u00e9 um problema de pesquisa atual. Para a implementa\u00e7\u00e3o de autonomia operacional nesses sistemas, \u00e9 necess\u00e1rio desenvolver nos UVMS a capacidade de planejar o seu movimento em fun\u00e7\u00e3o das tarefas especificadas em alto n\u00edvel por um operador e do meio em que estas dever\u00e3o ser executadas.\nEste trabalho tem por objetivo geral analisar cinematicamente os sistemas de interven\u00e7\u00e3o subaqu\u00e1tica a fim de desenvolver estrat\u00e9gias de planejamento de movimento para esses sistemas rob\u00f3ticos que satisfa\u00e7am as especifica\u00e7\u00f5es de tarefas de interven\u00e7\u00e3o no ambiente da tarefa.\nS\u00e3o consideradas tarefas de interven\u00e7\u00e3o aquelas em que um ou mais UVMS, j\u00e1 localizados no s\u00edtio de interven\u00e7\u00e3o, realizam atividades de movimento dos efetuadores finais dos seus manipuladores, utilizando tanto os movimentos dos pr\u00f3prios manipuladores quanto dos ve\u00edculos.\nPara o desenvolvimento das estrat\u00e9gias de planejamento de movimento, as seguintes atividades necess\u00e1rias \u00e0 elabora\u00e7\u00e3o da tese s\u00e3o tratadas:\n1.\tAn\u00e1lise cinem\u00e1tica de sistemas de interven\u00e7\u00e3o subaqu\u00e1tica em diferentes situa\u00e7\u00f5es de opera\u00e7\u00e3o, considerando um ou mais manipuladores no mesmo UVMS;\n2.\tCoopera\u00e7\u00e3o entre manipuladores e entre UVMS para a execu\u00e7\u00e3o de tarefas;\n3.\tModulariza\u00e7\u00e3o e configurabilidade das cadeias cinem\u00e1ticas dos sistemas de interven\u00e7\u00e3o;\n4.\tProjeto e implementa\u00e7\u00e3o de um framework computacional para modelagem cinem\u00e1tica baseada em helicoides;\n5.\tDesenvolvimento de estrat\u00e9gias para a resolu\u00e7\u00e3o de tarefas para os sistemas de interven\u00e7\u00e3o considerando as tarefas especificadas e a possibilidade de ocorr\u00eancia de eventos n\u00e3o planejados que modificam a rela\u00e7\u00e3o entre o UVMS e o seu espa\u00e7o de trabalho.\nA cinem\u00e1tica por helicoides permite analisar de maneira uniforme e sistem\u00e1tica diferentes tipos de cadeias cinem\u00e1ticas. Com isso,\ndistintos contextos de execu\u00e7\u00e3o de tarefas podem ser representados por modelos baseados em helicoides. A defini\u00e7\u00e3o desses modelos pode ser feita por modulariza\u00e7\u00e3o, onde cadeias mais simples cujos modelos j\u00e1 s\u00e3o conhecidos s\u00e3o vinculadas entre si para compor cadeias mais complexas. Assim, aplica\u00e7\u00f5es pouco tratadas na literatura como a coopera\u00e7\u00e3o entre UVMS s\u00e3o abordadas de maneira sistem\u00e1tica e extens\u00edvel. Al\u00e9m disso, o modelo por helicoides e a resolu\u00e7\u00e3o cinem\u00e1tica de cadeias cinem\u00e1ticas \u00e9 reconfigur\u00e1vel, o que permite definir uma sistematiza\u00e7\u00e3o para o planejamento de movimento dos UVMS quando o contexto da execu\u00e7\u00e3o de tarefas varia ao longo do tempo.\nEssas caracter\u00edsticas s\u00e3o utilizadas na constru\u00e7\u00e3o de frameworks para simplificar a implementa\u00e7\u00e3o de estrat\u00e9gias de planejamento de movimento. Esses frameworks s\u00e3o usados para a modelagem cinem\u00e1tica dos sistemas de interven\u00e7\u00e3o de forma modular e para a defini\u00e7\u00e3o de tarefas a serem executadas por esses sistemas. A defini\u00e7\u00e3o de uma estrat\u00e9gia de planejamento de movimento pode utilizar as caracter\u00edsticas de reconfigurabilidade da resolu\u00e7\u00e3o cinem\u00e1tica do modelo que foram implementadas nos frameworks. Assim, pode-se representar as varia\u00e7\u00f5es no contexto de execu\u00e7\u00e3o da tarefa de forma que ainda possam ser geradas refer\u00eancias de movimentos dos UVMS que permitam realizar a tarefa proposta. Como caracter\u00edstica adicional do framework de modelagem, pode-se armazenar as defini\u00e7\u00f5es de cadeias cinem\u00e1ticas dos sistemas de interven\u00e7\u00e3o de forma a criar um banco de dados de modelos de sistemas de interven\u00e7\u00e3o e tarefas. Com isso, atende-se a uma das demandas para a obten\u00e7\u00e3o da autonomia operacional plena dos sistemas de interven\u00e7\u00e3o subaqu\u00e1tica rob\u00f3tica.\n1.4\tORGANIZA\u00c7\u00c3O DO TEXTO DA TESE\nEste texto \u00e9 organizado em mais seis cap\u00edtulos al\u00e9m da Introdu\u00e7\u00e3o. O Cap\u00edtulo 2 faz uma revis\u00e3o bibliogr\u00e1fica sobre os UVMS, listando pesquisas relacionadas com o presente trabalho e descrevendo os subsistemas que comp\u00f5em um sistema de interven\u00e7\u00e3o subaqu\u00e1tica. Tamb\u00e9m como uma revis\u00e3o bibliogr\u00e1fica, o Cap\u00edtulo 3 trata da cinem\u00e1tica de UVMS apresentada na literatura.\nNo Cap\u00edtulo 4 estende-se a an\u00e1lise cinem\u00e1tica dos UVMS baseada na teoria dos helicoides. S\u00e3o identificadas caracter\u00edsticas dos sistemas subaqu\u00e1ticos existentes e demandas de novos tipos de miss\u00f5es. Observa-se a ocorr\u00eancia de modelos cinem\u00e1ticos mais complexos e at\u00e9 reconfigur\u00e1veis de acordo com as tarefas que comp\u00f5em uma miss\u00e3o e\nmudan\u00e7as no meio em que esta \u00e9 executada.\nOs aspectos do projeto de um framework computacional para a modelagem das cadeias cinem\u00e1ticas com base na an\u00e1lise do Cap\u00edtulo 4 s\u00e3o tratados no Cap\u00edtulo 5. Nele faz-se a justificativa pela abordagem orientada a objetos do framework, identificam-se os requisitos para os componentes de software e apresenta-se a solu\u00e7\u00e3o adotada para essa modelagem.\nNo Cap\u00edtulo 6 desenvolve-se uma metodologia para estrat\u00e9gias de planejamento de movimento de UVMS, elaborado a partir dos resultados da an\u00e1lise cinem\u00e1tica do Cap\u00edtulo 4 e empregando o framework projetado no Cap\u00edtulo 5. S\u00e3o abordados conceitos sobre a especifica\u00e7\u00e3o de tarefas e a resolu\u00e7\u00e3o destas de acordo com o contexto do espa\u00e7o de trabalho em que ela se desenvolve e suas mudan\u00e7as ao longo do tempo.\nSimula\u00e7\u00f5es de cen\u00e1rios de execu\u00e7\u00e3o de diferentes tarefas s\u00e3o descritas no Cap\u00edtulo 7, bem como a an\u00e1lise dos resultados dessas simula\u00e7\u00f5es.\nEncerra o texto o Cap\u00edtulo 8, que trata das conclus\u00f5es deste trabalho e de perspectivas de trabalhos futuros.\nQuatro ap\u00eandices complementam o texto da Tese. O Ap\u00eandice A sintetiza os fundamentos e ferramentas cinem\u00e1ticas com base em he-licoides. O Ap\u00eandice B trata do framework desenvolvido para auxiliar a an\u00e1lise cinem\u00e1tica e a implementa\u00e7\u00e3o de simula\u00e7\u00f5es. A descri\u00e7\u00e3o dos modelos cinem\u00e1ticos e cen\u00e1rios das simula\u00e7\u00f5es \u00e9 feita no Ap\u00eandice C. Por fim, apresenta-se no Ap\u00eandice D um mapa conceitual da rob\u00f3tica subaqu\u00e1tica, onde os t\u00f3picos tratados neste texto s\u00e3o destacados.\n2\tSISTEMAS VE\u00cdCULO-MANIPULADOR SUBAQU\u00c1TICOS\nNeste cap\u00edtulo \u00e9 apresentada uma vis\u00e3o geral dos sistemas ve\u00edculo-manipulador subaqu\u00e1ticos. Inicia-se por uma caracteriza\u00e7\u00e3o de miss\u00f5es executadas por um UVMS e suas fases. Ap\u00f3s, aspectos do projeto de UVMS e seus subsistemas s\u00e3o abordados. Esses aspectos s\u00e3o explorados atrav\u00e9s de vis\u00f5es de um mapa conceitual que faz uma releitura do panorama da rob\u00f3tica subaqu\u00e1tica e das miss\u00f5es de interven\u00e7\u00e3o. Trabalhos relevantes \u00e0 pesquisa e desenvolvimento de sistemas subaqu\u00e1ticos de interven\u00e7\u00e3o tamb\u00e9m s\u00e3o aqui relacionados. O mapa conceitual completo \u00e9 apresentado no Ap\u00eandice D.\n2.1\tMISS\u00d5ES DE INTERVEN\u00c7\u00c3O\nExistem diferentes fases em miss\u00f5es de interven\u00e7\u00e3o. Neste texto, essas miss\u00f5es s\u00e3o caracterizadas pela execu\u00e7\u00e3o de alguma tarefa pelos manipuladores dos UVMS. De uma forma geral, uma miss\u00e3o inicia pelo lan\u00e7amento do sistema ve\u00edculo-manipulador. A seguir, ele se desloca at\u00e9 o s\u00edtio de interven\u00e7\u00e3o. Ao chegar, os manipuladores devem ser ativados para em seguida realizarem a opera\u00e7\u00e3o de manipula\u00e7\u00e3o. Ao se completar esta opera\u00e7\u00e3o, os manipuladores s\u00e3o desativados para que o ve\u00edculo se desloque at\u00e9 a base, onde por fim ser\u00e1 recuperado, desligado e guardado.\nExistem algumas varia\u00e7\u00f5es nessas fases. Um exemplo \u00e9 o uso de gaiolas, que n\u00e3o apenas servem para posicionar o ve\u00edculo embaixo d\u2019\u00e1gua, mas tamb\u00e9m s\u00e3o usadas como referencial para os ve\u00edculos, re-transmissor de comunica\u00e7\u00e3o e fornecedor de energia. Outros casos particulares s\u00e3o o lan\u00e7amento por submarinos (em aplica\u00e7\u00f5es militares) e os sistemas h\u00edbridos, que partem como ve\u00edculos de cruzeiro fisicamente aut\u00f4nomos e se conectam a um cord\u00e3o umbilical apenas no s\u00edtio de interven\u00e7\u00e3o. Alguns ve\u00edculos ainda contam com recursos de auto estacionamento na gaiola ou na base.\nA caracteriza\u00e7\u00e3o de miss\u00f5es de interven\u00e7\u00e3o feita neste trabalho resultou na classifica\u00e7\u00e3o e descri\u00e7\u00e3o das suas fases, que s\u00e3o descritas a seguir:\nLan\u00e7amento Muitos UVMS s\u00e3o grandes demais para lan\u00e7amento manual (v. Tabelas 1 e 2). Assim, eles s\u00e3o normalmente i\u00e7ados at\u00e9 a \u00e1gua e abaixados a uma profundidade onde os efeitos hidrodi-\nn\u00e2micos presentes na superf\u00edcie s\u00e3o minimizados. Ao chegar na profundidade desejada, o ve\u00edculo \u00e9 acionado e come\u00e7a a usar seus sensores e atuadores. Em alguns casos, o lan\u00e7amento consiste em duas fases, onde uma gaiola \u00e9 levada \u00e0 \u00e1gua e, ap\u00f3s chegar em determinada profundidade, ocorre a libera\u00e7\u00e3o do ve\u00edculo;\nDeslocamento ao s\u00edtio de interven\u00e7\u00e3o Ap\u00f3s o lan\u00e7amento, o caminho que o ve\u00edculo deve percorrer para chegar ao local da interven\u00e7\u00e3o \u00e9 definido. Com isso, os propulsores s\u00e3o acionados para que ele siga esse caminho. Essas a\u00e7\u00f5es podem ser executadas por um operador de forma teleoperada ou pelos sistemas de processamento de informa\u00e7\u00f5es do pr\u00f3prio ve\u00edculo. Durante o deslocamento, os manipuladores ficam armazenados dentro do casco, para minimizar os efeitos hidrodin\u00e2micos de intera\u00e7\u00e3o dos manipuladores com a \u00e1gua e para prote\u00e7\u00e3o;\nAtiva\u00e7\u00e3o dos manipuladores Ao chegar no local de interven\u00e7\u00e3o, os manipuladores devem ser liberados e seus sistemas iniciados, assumindo uma postura inicial. Alguns sistemas podem ainda compreender uma fase de calibra\u00e7\u00e3o dos sensores do manipulador, ou a montagem de ferramentas;\nExecu\u00e7\u00e3o da interven\u00e7\u00e3o Em geral, a opera\u00e7\u00e3o principal da miss\u00e3o do UVMS ocorre com o ve\u00edculo estacion\u00e1rio. Para tanto, este deve compensar a influ\u00eancia do meio, como correntes e amortecimentos, bem como os efeitos que os manipuladores causam durante a execu\u00e7\u00e3o das tarefas. Al\u00e9m disso, o movimento de cada manipulador e do ve\u00edculo deve ser planejado de forma a minimizar o consumo de energia, que pode ser cr\u00edtico no caso de sistemas fisicamente aut\u00f4nomos. Deve-se tamb\u00e9m considerar a possibilidade de ocorr\u00eancia de situa\u00e7\u00f5es n\u00e3o previstas na especifica\u00e7\u00e3o da tarefa e consequentes mudan\u00e7as nesta para compensar as mudan\u00e7as de contexto. O evitamento de colis\u00e3o com obst\u00e1culos m\u00f3veis e a compensa\u00e7\u00e3o do movimento dos objetos a serem manipulados s\u00e3o exemplos desse tipo de problema;\nDesativa\u00e7\u00e3o dos manipuladores Ap\u00f3s o t\u00e9rmino da opera\u00e7\u00e3o de interven\u00e7\u00e3o, os manipuladores devem ser recolhidos e desativados para que o ve\u00edculo possa retornar \u00e0 sua base. Define-se ent\u00e3o o movimento de recolhimento dos manipuladores para que fiquem protegidos na estrutura do ve\u00edculo. Ap\u00f3s o armazenamento, os manipuladores podem ser desativados para economizar energia;\nDeslocamento \u00e0 base Esta fase \u00e9 essencialmente inversa \u00e0 do deslocamento ao s\u00edtio de interven\u00e7\u00e3o. Uma diferen\u00e7a \u00e9 a localiza\u00e7\u00e3o da base por sistemas aut\u00f4nomos, que podem ser m\u00f3veis no caso de navios ou submarinos. Para tanto, podem ser usados far\u00f3is ac\u00fasticos para que o UVMS possa localizar a base ou definir um local de encontro, que ser\u00e1 o ponto onde o UUV vir\u00e1 \u00e0 tona, para que o pessoal de apoio da base o encontre e o recupere;\nRecupera\u00e7\u00e3o Ao retornar, o UVMS deve ser trazido de volta ao seu local de armazenamento da base. Para tanto, ele \u00e9 i\u00e7ado de volta. Em sistemas que usam o lan\u00e7amento por gaiola, o que ocorre \u00e9 o retorno e o estacionamento do ve\u00edculo nesta, que ap\u00f3s \u00e9 i\u00e7ada.\nA realiza\u00e7\u00e3o dessas fases envolve diferentes atividades que s\u00e3o executadas pelos operadores e pelos subsistemas do UVMS. A participa\u00e7\u00e3o de cada ator (operadores ou subsistemas) varia de acordo com o grau de autonomia do sistema de interven\u00e7\u00e3o e da natureza da miss\u00e3o.\nPara as fases que n\u00e3o envolvem o uso dos manipuladores, o objetivo \u00e9 o deslocamento do ve\u00edculo de forma a atender aos caminhos e posturas definidas para o sistema. As atividades relevantes est\u00e3o interrelacionadas de acordo com o diagrama da Figura 9. Nesse diagrama, as setas indicam o sentido do fluxo de informa\u00e7\u00f5es entre as atividades e os c\u00edrculos s\u00e3o conectores de informa\u00e7\u00f5es.\nAmbiente\nFigura 9. Diagrama de blocos de atividades de um UVMS em fases que n\u00e3o envolvem interven\u00e7\u00e3o\nA atividade Miss\u00e3o compreende a intera\u00e7\u00e3o do UVMS com o usu\u00e1rio, fornecendo uma interface homem-m\u00e1quina para isso. Al\u00e9m de apresentar diferentes informa\u00e7\u00f5es de sensores relativas ao estado do UVMS, a interface pode apresentar informa\u00e7\u00f5es dos sensores relativas \u00e0 miss\u00e3o. \u00c9 poss\u00edvel tamb\u00e9m armazenar os dados de sensores para an\u00e1lise posterior. Diferentes dispositivos para o acionamento do sistema s\u00e3o disponibilizados ao usu\u00e1rio de acordo com a necessidade de opera\u00e7\u00e3o remota. Quanto maior o grau de autonomia, menor a intera\u00e7\u00e3o do operador com o sistema, o que implica em um car\u00e1ter mais supervis\u00f3rio do que interventivo para esta atividade. Em um UVMS totalmente\naut\u00f4nomo, o operador usaria a interface para especificar a miss\u00e3o em alto n\u00edvel e a partir desta a atividade geraria defini\u00e7\u00f5es de baixo n\u00edvel para as demais atividades do sistema, tais como o seguimento de um caminho pelo ve\u00edculo.\nA Guiagem recebe as descri\u00e7\u00f5es das tarefas como caminhos para o UVMS, gerando as refer\u00eancias de movimento dos atuadores necess\u00e1rias para que esses caminhos sejam seguidos (Fossen, 1994). O planejamento de movimento emprega a resolu\u00e7\u00e3o da cinem\u00e1tica inversa para a gera\u00e7\u00e3o das refer\u00eancias. Para lidar com a possibilidade de mudan\u00e7as de contexto de execu\u00e7\u00e3o (devido a eventos n\u00e3o previstos ou a requisitos de diferentes subtarefas) a guiagem pode utilizar diferentes modelos cinem\u00e1ticos do sistema UVMS-meio, escolhendo o mais adequado para a realiza\u00e7\u00e3o da tarefa a cada instante de acordo com a mudan\u00e7a de estado da miss\u00e3o.\nA atividade de Pilotagem \u00e9 respons\u00e1vel por determinar as refer\u00eancias de esfor\u00e7os para os atuadores atrav\u00e9s da din\u00e2mica inversa. Ela usualmente est\u00e1 integrada \u00e0 atividade de Controle, que \u00e9 respons\u00e1vel por acionar os atuadores do UVMS de forma que estes sigam as refer\u00eancias de esfor\u00e7os.\nPor fim, a atividade de Navega\u00e7\u00e3o processa informa\u00e7\u00f5es de sensores e dados pr\u00e9-armazenados do ambiente de opera\u00e7\u00e3o (como mapas parciais e localiza\u00e7\u00e3o de balizadores) para determinar a posi\u00e7\u00e3o e orienta\u00e7\u00e3o do sistema, alimentando a miss\u00e3o e a pilotagem.\nNas fases da miss\u00e3o relacionadas com a interven\u00e7\u00e3o, outras atividades s\u00e3o relacionadas ao uso dos manipuladores. Nessas fases, o objetivo das tarefas usualmente est\u00e1 relacionado ao movimento dos efetuadores finais, enquanto o ve\u00edculo assume uma postura estacion\u00e1ria ou colabora com o movimento. O diagrama da Figura 10 descreve como as atividades do sistema se interrelacionam nessas fases.\nFigura 10. Diagrama de blocos de atividades de um UVMS em fases que envolvem interven\u00e7\u00e3o\nAs atividades de miss\u00e3o e guiagem passam a considerar os ma\nnipuladores para a especifica\u00e7\u00e3o das tarefas e gera\u00e7\u00e3o de refer\u00eancias de movimento. As refer\u00eancias relativas ao ve\u00edculo continuam sendo enviadas para a pilotagem, enquanto as dos manipuladores s\u00e3o enviadas para uma atividade equivalente que utiliza a din\u00e2mica inversa dos manipuladores para determinar os esfor\u00e7os nas suas juntas. A atividade de controle recebe ambas as refer\u00eancias para acionar os atuadores do sistema. A atividade de navega\u00e7\u00e3o nessas fases tamb\u00e9m recebe os dados de sensores dos manipuladores para determinar as posturas dos efetuadores finais.\n2.2\tSISTEMAS DE UM UVMS\nO projeto de um sistema subaqu\u00e1tico de interven\u00e7\u00e3o \u00e9 de natureza multidisciplinar, uma vez que os seus requisitos envolvem diferentes \u00e1reas de conhecimento, como a mec\u00e2nica, a eletr\u00f4nica, a automa\u00e7\u00e3o e a inform\u00e1tica, entre outras. Diversos autores apresentam vis\u00f5es gerais sobre o projeto e os subsistemas de UUV e UVMS (Yuh, 2000; Antonelli, 2004; Antonelli; Fossen; Yoerger, 2008; Kinsey; Eustice; Whitcomb, 2006). Uma rela\u00e7\u00e3o dos diferentes subsistemas e tecnologias atualmente empregadas, bem como uma an\u00e1lise dos requisitos desses ve\u00edculos para diferentes finalidades, sobretudo a militar, \u00e9 apresentada em (Button et al., 2009).\nCom base na literatura, \u00e9 poss\u00edvel relacionar os subsistemas de um UVMS. Observa-se que estes podem ser agrupados em tr\u00eas classes, independentemente de seus interrelacionamentos. A classe de Comando \u00e9 formada por subsistemas de obten\u00e7\u00e3o e processamento de informa\u00e7\u00f5es, bem como a comunica\u00e7\u00e3o entre subsistemas. A classe de Execu\u00e7\u00e3o, por sua vez, compreende os subsistemas que realizam as a\u00e7\u00f5es. A classe de subsistemas de Estrutura suporta os demais subsistemas do ve\u00edculo. O diagrama da Figura 11 apresenta os subsistemas e seus elementos b\u00e1sicos, agrupando-os nas classes identificadas.\n2.2.1\tComando\nOs subsistemas classificados como de comando podem ser definidos como aqueles que gerenciam informa\u00e7\u00f5es. Estas est\u00e3o pr\u00e9-armazenadas no sistema, como mapas e especifica\u00e7\u00f5es da miss\u00e3o, ou s\u00e3o obtidas por sensores. Os subsistemas de comando devem ter capacidade de processamento suficiente para tratar um grande conjunto\nFigura 11. Subsistemas de um UVMS\nde dados utilizando algoritmos muitas vezes complexos, com demandas de baixo tempo de resposta. Os resultados do processamento alimentam outros subsistemas de comando ou geram especifica\u00e7\u00f5es de a\u00e7\u00f5es a serem realizadas pelos subsistemas de execu\u00e7\u00e3o.\n\u00c9 comum existirem v\u00e1rias unidades de processamento de dados, cada qual com um conjunto espec\u00edfico de dados a tratar. A troca de informa\u00e7\u00f5es entre as unidades \u00e9 essencial para a execu\u00e7\u00e3o da miss\u00e3o. Essa comunica\u00e7\u00e3o, bem como a defini\u00e7\u00e3o de fun\u00e7\u00f5es e relacionamentos entre subsistemas, tamb\u00e9m compreende um subsistema de comando.\nEm rela\u00e7\u00e3o aos sensores, existem normalmente dois conjuntos1: os de navega\u00e7\u00e3o e os de monitoramento. Os sensores de navega\u00e7\u00e3o s\u00e3o usados para determinar a posi\u00e7\u00e3o e orienta\u00e7\u00e3o do UVMS no espa\u00e7o. Os sensores de monitoramento, por sua vez, fornecem dados sobre as condi\u00e7\u00f5es de opera\u00e7\u00e3o do pr\u00f3prio sistema, para procurar manter o sistema dentro de condi\u00e7\u00f5es de opera\u00e7\u00e3o aceit\u00e1veis ou, em caso de problemas, acionar estrat\u00e9gias de toler\u00e2ncia a falhas.\nO acompanhamento da miss\u00e3o tamb\u00e9m \u00e9 parte do comando. Ele pode ser feita exclusivamente por operadores humanos ou assistido por sistemas de processamento de informa\u00e7\u00e3o. A intera\u00e7\u00e3o com o operador varia de acordo com o grau de autonomia de opera\u00e7\u00e3o do sistema, variando entre a teleopera\u00e7\u00e3o completa at\u00e9 apenas supervis\u00e3o.\n1N\u00e3o s\u00e3o considerados aqui os sensores espec\u00edficos para a execu\u00e7\u00e3o de uma determinada miss\u00e3o.\nA Figura 12 relaciona esses subsistemas, que s\u00e3o descritos a seguir.\nFun\u00e7\u00f5es e interrel a\u00e7\u00f5es Comunica\u00e7\u00e3o Hardware\nPlanejamento\nSuperus\u00e3o\nGuiagem\nPilotagem\nControle\nSensores\nMapeamento Navega\u00e7\u00e3o estimada\nAuto-d \u00a1agn\u00f3stico\nDetec\u00e7\u00e3o de falhas Redund\u00e2ncia\nEmerg\u00eancias\nFigura 12. Subsistemas de comando de um UUV\n2.2.1.1\tArquitetura do Sistema Embarcado\nA maneira como os diversos subsistemas trocam informa\u00e7\u00f5es com o acompanhamento da miss\u00e3o e entre si varia bastante. Existem diferentes formas de tratar essa comunica\u00e7\u00e3o, bem como de separar os subsistemas em n\u00edveis. Uma vis\u00e3o de algumas arquiteturas de sistemas \u00e9 apresentada em (Valavanis et al., 1997). Abordagens mais recentes s\u00e3o analisadas em (Benjamin, 2007; Marani; Choi; Yuh, 2009; Antonelli; Fossen; Yoerger, 2008). Um exemplo de software livre desenvolvido para a coordena\u00e7\u00e3o e comunica\u00e7\u00e3o de diversos subsistemas, com enfoque distribu\u00eddo em comunica\u00e7\u00e3o \u00e9 o Motion-Oriented Operating System (MOOS) (Newman, 2009).\nEm termos do hardware de processamento de informa\u00e7\u00f5es, as op\u00e7\u00f5es tamb\u00e9m s\u00e3o muito variadas. Os sistemas atuais empregam tecnologias embarcadas baseadas em equivalentes do mercado de inform\u00e1tica (arquitetura PC, principalmente), com sistemas operacionais de tempo real (Marani; Choi; Yuh, 2009; Yuh, 2000).\nEmbora se considere o sistema como embarcado, observa-se que em algumas arquiteturas, os subsistemas e seus componentes s\u00e3o t\u00e3o\nmodularizados que podem ser f\u00edsicos ou simulados por software, e podem estar embutidos de fato no UUV ou serem externos a ele (Marani; Choi; Yuh, 2009).\n2.2.1.2\tAcompanhamento da Miss\u00e3o\nExistem diversos elementos inerentes \u00e0 execu\u00e7\u00e3o de miss\u00f5es, que muitas vezes s\u00e3o separados em n\u00edveis hier\u00e1rquicos. Fossen (1994) define dois elementos b\u00e1sicos \u00e0 qualquer miss\u00e3o: guiagem e controle.\nA guiagem \u00e9 a a\u00e7\u00e3o de determinar o curso e a velocidade a serem seguidos pelo ve\u00edculo em rela\u00e7\u00e3o a um referencial. Ela envolve planejamento e gera\u00e7\u00e3o de caminhos e trajet\u00f3rias para executar a tarefa especificada por um operador. Para tanto, ela depende de informa\u00e7\u00f5es de localiza\u00e7\u00e3o e orienta\u00e7\u00e3o do sistema, bem como velocidades, determinadas pelo subsistema de navega\u00e7\u00e3o. Al\u00e9m disso, objetivos secund\u00e1rios devem ser considerados, como o evitamento de obst\u00e1culos. No caso dos ROV, essa fun\u00e7\u00e3o \u00e9 responsabilidade do operador que controla o ve\u00edculo. \u00c0 medida que o sistema passa a ter maior autonomia, a gui-agem passa a ser responsabilidade dos sistemas do ve\u00edculo. Nos AUV, o planejamento da tarefa e a gera\u00e7\u00e3o global/local de refer\u00eancias deve ser feito totalmente pelo sistema, a partir das informa\u00e7\u00f5es dispon\u00edveis e da especifica\u00e7\u00e3o dos pontos a serem alcan\u00e7ados (Antonelli; Fossen; Yoerger, 2008).\nO controle \u00e9 a a\u00e7\u00e3o de definir e aplicar as for\u00e7as e momentos necess\u00e1rios para que o ve\u00edculo execute as trajet\u00f3rias designadas enquanto procura manter o sistema est\u00e1vel. Diferentes a\u00e7\u00f5es de controle podem ocorrer, de acordo com o tipo de UUV e a natureza da tarefa a ser realizada (Antonelli; Fossen; Yoerger, 2008). A cinem\u00e1tica e din\u00e2mica de UUV, bem como a intera\u00e7\u00e3o com o ambiente, tornam o controle um desafio para pesquisadores, com vasta literatura sobre diferentes abordagens para a sua solu\u00e7\u00e3o. S\u00e3o citadas como caracter\u00edsticas do problema de controle (Yuh, 1990; Fossen, 1994; Yuh, 2000; Antonelli, 2004):\n\u2022\tModelo din\u00e2mico n\u00e3o-linear e fortemente acoplado, muitas vezes com par\u00e2metros variantes no tempo;\n\u2022\tDin\u00e2mica n\u00e3o-linear e de dif\u00edcil modelagem dos propulsores;\n\u2022\tModelo din\u00e2mico das superf\u00edcies de controle (lemes, barbatanas);\n\u2022\tRedund\u00e2ncia em UVMS;\n\u2022\tDificuldade de identifica\u00e7\u00e3o dos coeficientes hidrodin\u00e2micos;\n\u2022\tPerturba\u00e7\u00f5es do ambiente, como correntes marinhas.\nVe\u00edculos totalmente atuados nos seis graus de liberdade atrav\u00e9s de propulsores \u00e9 o arranjo mais comum em ROV. Nos UVMS, a intera\u00e7\u00e3o do manipulador com o ve\u00edculo exige compensa\u00e7\u00e3o dos esfor\u00e7os gerados pelo primeiro de forma a manter o ve\u00edculo na postura desejada, o que justifica a ado\u00e7\u00e3o desse tipo de arranjo. Em rela\u00e7\u00e3o a esses tipos de ve\u00edculos, uma discuss\u00e3o sobre diferentes t\u00e9cnicas de controle \u00e9 feita em (Antonelli, 2006), sem, no entanto, procurar esgotar o assunto, que apresenta vasta quantidade de trabalhos.\nA supervis\u00e3o da miss\u00e3o \u00e9 feita atrav\u00e9s de interfaces gr\u00e1ficas em computadores situados na base, que podem apresentar informa\u00e7\u00f5es de localiza\u00e7\u00e3o do ve\u00edculo, dados de sensores e imagens de c\u00e2meras e sonares. No caso de ve\u00edculos totalmente teleoperados, a interface bidirecional de comunica\u00e7\u00e3o \u00e9 feita com telas e instrumentos para entrada de dados, como manches e teclados, sendo por vezes feito o controle por mais de um operador (por exemplo, no caso de manipula\u00e7\u00e3o). Na medida em que os UUV passam a ter maior autonomia, a interface com o operador passa a ter car\u00e1ter mais supervis\u00f3rio e menos interativo, apresentando informa\u00e7\u00f5es em n\u00edvel mais alto sobre a situa\u00e7\u00e3o da execu\u00e7\u00e3o da tarefa. A autonomia tamb\u00e9m possibilita utilizar comandos de mais alto n\u00edvel com o ve\u00edculo, com a especifica\u00e7\u00e3o de tarefas usando linguagens de programa\u00e7\u00e3o ou intera\u00e7\u00e3o gr\u00e1fica (Benjamin, 2007; Antonelli; Fossen; Yoerger, 2008; Marani; Choi; Yuh, 2009).\n2.2.1.3\tNavega\u00e7\u00e3o\nO subsistema de navega\u00e7\u00e3o tem como finalidade b\u00e1sica determinar a posi\u00e7\u00e3o e orienta\u00e7\u00e3o do sistema subaqu\u00e1tico a cada instante da miss\u00e3o. Nos UVMS, inclui-se a determina\u00e7\u00e3o da postura dos efetua-dores finais dos manipuladores. Essas informa\u00e7\u00f5es s\u00e3o imprescind\u00edveis para que os demais subsistemas de comando possam definir e aplicar os movimentos no sistema de forma a executar as tarefas especificadas. O uso de GPS (Global Positioning System) \u00e9 vi\u00e1vel em ve\u00edculos aqu\u00e1ticos de superf\u00edcie, mas n\u00e3o para o caso de ve\u00edculos subaqu\u00e1ticos, devido \u00e0 atenua\u00e7\u00e3o dos sinais eletromagn\u00e9ticos na \u00e1gua.\nPara estimar a postura do ve\u00edculo, s\u00e3o utilizadas diferentes t\u00e9cnicas que fazem uso de conjuntos redundantes de sensores, conhecidas genericamente como fus\u00e3o sensorial (Antonelli, 2004). Na Tabela 6 es\nt\u00e3o relacionados alguns dos sensores empregados e quais as grandezas medidas por cada tipo de sensor.\nTabela 6. Sensores empregados nos sistemas de navega\u00e7\u00e3o de UUV\nSensor\tVari\u00e1vel medida\nB\u00fassola Girosc\u00f3pio Press\u00e3o Corrente Sonar frontal e lateral Sonar vertical Doppler velocity log Unidade de medi\u00e7\u00e3o inercial Sistemas de vis\u00e3o Referenciais ac\u00fasticos GPS2\tOrienta\u00e7\u00e3o absoluta Velocidade angular Profundidade Velocidade relativa entre corrente e ve\u00edculo Dist\u00e2ncia de obst\u00e1culos Dist\u00e2ncia do fundo Velocidade relativa entre ve\u00edculo e fundo Acelera\u00e7\u00e3o linear e angular; velocidade angular Posi\u00e7\u00e3o e velocidade relativas ao ambiente Posi\u00e7\u00e3o relativa a farois ac\u00fasticos fixos Posi\u00e7\u00e3o absoluta\nA estima\u00e7\u00e3o de posi\u00e7\u00e3o e orienta\u00e7\u00e3o \u00e9 um tema bastante ativo de pesquisas, que compreendem tanto o desenvolvimento de sensores quanto t\u00e9cnicas de an\u00e1lise dos dados por eles fornecidos e sua fus\u00e3o. Uma vis\u00e3o geral dessa linha de pesquisa \u00e9 apresentado em (Kinsey; Eustice; Whitcomb, 2006). As t\u00e9cnicas de fus\u00e3o sensorial, como por exemplo a SLAM (Simultaneous Location And Mapping) s\u00e3o comuns tamb\u00e9m para a rob\u00f3tica m\u00f3vel terrestre e a\u00e9rea, sendo abordadas sucintamente em (Siciliano; Khatib, 2008).\n2.2.1.4\tToler\u00e2ncia a Falhas\nUUV s\u00e3o equipamentos caros operando em ambientes insalubres e perigosos. A detec\u00e7\u00e3o de falhas \u00e9 um requisito importante desse tipo de equipamento para dar subs\u00eddios \u00e0 tomada de decis\u00e3o ao operador, no caso de ROV, ou \u00e0 alguma rotina de um sistema aut\u00f4nomo (nos AUV), avaliando se a opera\u00e7\u00e3o pode continuar, contornando a falha, ou se esta pode comprometer a miss\u00e3o e deve ser interrompida. No caso dos ve\u00edculos subaqu\u00e1ticos, uma decis\u00e3o errada pode levar \u00e0 perda do ve\u00edculo, com casos relatados na literatura.\nAs estrat\u00e9gias mais comuns de toler\u00e2ncia a falhas compreendem algum tipo de redund\u00e2ncia. Os componentes redundantes podem operar em paralelo com os principais ou ficar em situa\u00e7\u00e3o de sobreaviso,\n2Embora n\u00e3o possa ser considerado como um sensor de uso constante, o GPS pode ser usado para definir uma posi\u00e7\u00e3o inicial de refer\u00eancia, na superf\u00edcie, para a partir desta se estimar as posi\u00e7\u00f5es no tempo.\nsendo acionados em caso de detec\u00e7\u00e3o da falha do componente ativo. Para tanto, deve-se ter a capacidade de monitorar constantemente o sistema. Esse monitoramento \u00e9 baseado em modelos do ve\u00edculo, onde s\u00e3o avaliadas varia\u00e7\u00f5es de par\u00e2metros de opera\u00e7\u00e3o. Deve-se ent\u00e3o decidir quando uma varia\u00e7\u00e3o corresponde a uma falha.\nNo caso de falha irrecuper\u00e1vel, devem-se acionar procedimentos de recupera\u00e7\u00e3o do sistema, seja ativando algum programa de retorno \u00e0 base ou \u00e0 superf\u00edcie, seja ativando localizadores para possibilitar a posterior recupera\u00e7\u00e3o do ve\u00edculo.\nNo caso de sistemas aut\u00f4nomos, tais decis\u00f5es devem ser tomadas por softwares dedicados \u00e0 detec\u00e7\u00e3o, recupera\u00e7\u00e3o e toler\u00e2ncia a falhas, o que \u00e9 um campo de pesquisa que n\u00e3o se restringe \u00e0 ve\u00edculos subaqu\u00e1ticos. Uma vis\u00e3o geral \u00e9 apresentada em (Antonelli, 2006).\n2.2.2\tExecu\u00e7\u00e3o\nA classe de execu\u00e7\u00e3o \u00e9 formada pelos subsistemas que realizam os movimentos no UVMS, como a propuls\u00e3o do ve\u00edculo e o acionamento dos manipuladores. O subsistema de comunica\u00e7\u00e3o tamb\u00e9m \u00e9 enquadrado dentro dessa classe. As caracter\u00edsticas desses sistemas, listados na Figura 13, s\u00e3o apresentadas resumidamente a seguir.\nPropulsores\nSuperf\u00edcies de controle\nLastro/Flutua\u00e7\u00e3o ativa\nAcionamentos\nEnlaces\nGord\u00e3o umbilical\nProtocolos\nManipulador\nFerramentas\nIntera\u00e7\u00e3o manipulador/^\u00edculo\nFigura 13. Subsistemas de execu\u00e7\u00e3o de um UUV\n2.2.2.1\tAtua\u00e7\u00e3o\nO movimento pr\u00f3prio de um UUV depende de propulsores. Em ve\u00edculos de cruzeiro, os propulsores s\u00e3o instalados de forma a garantir\ntransla\u00e7\u00e3o na dire\u00e7\u00e3o longitudinal do ve\u00edculo, enquanto o movimento em outras dire\u00e7\u00f5es \u00e9 feito por superf\u00edcies de controle como barbatanas e lemes, aproveitando os efeitos de arrasto e sustenta\u00e7\u00e3o causados pelo movimento relativo entre o fluido e o corpo. No lugar de propulsores a h\u00e9lice, alguns ve\u00edculos usam propulsores vetoriais (hidrojatos), enquanto alguns ve\u00edculos de cruzeiro para miss\u00f5es de longa dura\u00e7\u00e3o (gliders) usam grandes superf\u00edcies de controle e controle de flutuabili-dade para aproveitar a energia potencial para se deslocarem e pouparem energia de baterias (Button et al., 2009). Tamb\u00e9m s\u00e3o citados sistemas de controle de flutua\u00e7\u00e3o para o movimento vertical de ve\u00edculos de explora\u00e7\u00e3o (Stone Aerospace, 2012).\nPara sistemas de interven\u00e7\u00e3o, por\u00e9m, n\u00e3o se considera atua\u00e7\u00e3o atrav\u00e9s de superf\u00edcies de controle, pois estas n\u00e3o s\u00e3o efetivas em velocidades baixas/nulas. Para realizar a atua\u00e7\u00e3o completa, esses sistemas usam um conjunto de propulsores de forma a garantir controle sobre movimentos translacionais e rotacionais em todas as dire\u00e7\u00f5es. O controle preciso do movimento do ve\u00edculo depende da posi\u00e7\u00e3o dos propulsores no seu corpo e das suas influ\u00eancias em cada grau de liberdade. Al\u00e9m disso, a modelagem dos propulsores \u00e9 fun\u00e7\u00e3o de diversas vari\u00e1veis de projeto e do ambiente, apresentando uma rela\u00e7\u00e3o n\u00e3o-linear entre torque aplicado e velocidade de sa\u00edda. Esta \u00e9 apontada como causa de ciclos limite no posicionamento estacion\u00e1rio (Antonelli, 2004).\nAl\u00e9m da movimenta\u00e7\u00e3o do ve\u00edculo, a atua\u00e7\u00e3o compreende tamb\u00e9m o acionamento de outros subsistemas, como o de manipuladores (tratado em subse\u00e7\u00e3o pr\u00f3pria), lan\u00e7amento de b\u00f3ias/marcadores, libera\u00e7\u00e3o de cargas e outras a\u00e7\u00f5es f\u00edsicas que porventura sejam necess\u00e1rias para a execu\u00e7\u00e3o de uma opera\u00e7\u00e3o ou recupera\u00e7\u00e3o do ve\u00edculo.\n2.2.2.2\tComunica\u00e7\u00e3o\nA comunica\u00e7\u00e3o do UUV com operadores depende muito do tipo de miss\u00e3o e do grau de autonomia. Em ROV, \u00e9 poss\u00edvel ter comunica\u00e7\u00e3o bidirecional de alta velocidade, com enlaces f\u00edsicos usando cabos coaxiais ou fibra \u00f3tica (Yuh, 2000). J\u00e1 com os AUV a comunica\u00e7\u00e3o \u00e9 feita por enlace ac\u00fastico, atrav\u00e9s de modems com baixa largura de banda, o que limita sobremaneira a taxa de comunica\u00e7\u00e3o e a quantidade de dados transmitidos. Algumas alternativas consideram o uso de b\u00f3ias de comunica\u00e7\u00e3o intermedi\u00e1rias entre ve\u00edculo e mundo, ou mesmo comunica\u00e7\u00e3o por laser e redes de sat\u00e9lites (Button et al., 2009).\nAcima da camada de enlace, os protocolos de comunica\u00e7\u00e3o en-\ntre o ve\u00edculo e o controle da miss\u00e3o variam entre os propriet\u00e1rios e o TCP/IP (Marani; Choi; Yuh, 2009). As limita\u00e7\u00f5es de velocidade, por\u00e9m, limitam os tipos de informa\u00e7\u00f5es trafegados. Enquanto a comunica\u00e7\u00e3o por cabo possibilita a transmiss\u00e3o de v\u00eddeo em tempo real, a comunica\u00e7\u00e3o ac\u00fastica restringe o tr\u00e1fego de dados a informa\u00e7\u00f5es de telemetria, reprograma\u00e7\u00f5es e, \u00e0 curta dist\u00e2ncia, transmiss\u00e3o de v\u00eddeo de baixa qualidade (Yuh, 2000).\n2.2.2.3\tManipula\u00e7\u00e3o\nPara executar opera\u00e7\u00f5es de interven\u00e7\u00e3o, \u00e9 necess\u00e1rio que o ve\u00edculo tenha alguma forma de interagir com o meio, o que \u00e9 usualmente realizado atrav\u00e9s de manipuladores. Estes s\u00e3o respons\u00e1veis por opera\u00e7\u00f5es de segurar objetos e posicionamento de ferramentas, exatamente como no caso de manipuladores utilizados no meio industrial. Embora nos ROV seja comum haver manipuladores, estes ainda s\u00e3o objeto de pesquisa nos AUV. No primeiro caso, os manipuladores s\u00e3o teleoperados, enquanto no segundo, eles devem operar de forma aut\u00f4noma, como o ve\u00edculo.\nOs manipuladores podem ser movimentados por atuadores el\u00e9tricos ou hidr\u00e1ulicos, dependendo do seu porte e da carga a ser manipulada. Al\u00e9m de sensores para observar o movimento (posi\u00e7\u00e3o, velocidade, acelera\u00e7\u00e3o) das juntas e, atrav\u00e9s da cinem\u00e1tica direta, do efetuador final, sensores de for\u00e7a/torque s\u00e3o importantes para o controle da for\u00e7a de intera\u00e7\u00e3o deste com o meio. Al\u00e9m disso, sensores de proximidade podem ser necess\u00e1rios para o evitamento de obst\u00e1culos.\nA complexidade dos modelos cinem\u00e1tico e din\u00e2mico dos sistemas ve\u00edculo-manipulador fazem com que esses sistemas ainda sejam teleoperados. Embora v\u00e1rios modelos de ve\u00edculos subaqu\u00e1ticos sejam apresentados na literatura, existem poucos trabalhos analisando modelos de sistemas de interven\u00e7\u00e3o. Existe uma refer\u00eancia principal nessa linha de pesquisa, que trata da modelagem cinem\u00e1tica e din\u00e2mica de UVMS, sua intera\u00e7\u00e3o com o meio, e an\u00e1lise de estrat\u00e9gias de controle (Antonelli, 2006). Os UVMS aut\u00f4nomos ainda est\u00e3o no est\u00e1gio de pesquisa e desenvolvimento, com os primeiros resultados de campo e aplica\u00e7\u00f5es comerciais surgindo recentemente (Marani; Choi; Yuh, 2009).\n2.2.3\tEstrutura\nOs subsistemas da classe estrutura s\u00e3o os que suportam os demais subsistemas. Como ilustra a Figura 14, um desses subsistemas \u00e9 o dos componentes estruturais, que compreendem o casco, os vasos de press\u00e3o e a estrutura de sustenta\u00e7\u00e3o do UUV. O outro subsistema \u00e9 o de gera\u00e7\u00e3o/fornecimento de energia.\nFrame\nVasos de press\u00e3o\nCasco\nFonte\nDistribui\u00e7\u00e3o\nCord\u00e3o umbilical\nFigura 14. Subsistemas de estrutura de um UUV\n2.2.3.1\tComponentes Estruturais\nOs elementos estruturais de um UUV devem levar em considera\u00e7\u00e3o os efeitos do meio, bem como o tipo de opera\u00e7\u00e3o \u00e0 que se destinam. Na \u00e1gua, a press\u00e3o sobre o ve\u00edculo aumenta linearmente com a profundidade, em uma raz\u00e3o aproximada de 1 atm (\u00ab 100 kPa) para cada 10m de coluna d\u2019\u00e1gua (Button et al., 2009). Al\u00e9m disso, o ambiente marinho \u00e9 altamente corrosivo. No caso de ve\u00edculos de cruzeiro, particularmente, o efeito hidrodin\u00e2mico \u00e9 um elemento de projeto importante, influenciando a forma do casco.\nO frame de um UUV caracteriza a sua rigidez, sendo a estrutura onde os m\u00f3dulos do ve\u00edculo s\u00e3o fixados (atuadores, sensores, eletr\u00f4nica embarcada, manipulador). No seu projeto deve-se considerar tamb\u00e9m as for\u00e7as sobre ele exercidas pelos atuadores e pelo manipulador, al\u00e9m da reconfigurabilidade do UUV de acordo com a miss\u00e3o a ser executada.\nOs vasos de press\u00e3o cont\u00e9m os elementos sens\u00edveis \u00e0 \u00e1gua e \u00e0 press\u00e3o como os eletro/eletr\u00f4nicos. Os vasos podem ser parte do casco ou m\u00f3dulos separados. Neste \u00faltimo caso, eles s\u00e3o montados na estrutura de sustenta\u00e7\u00e3o do ve\u00edculo de acordo com as demandas da miss\u00e3o. Alguns mecanismos de fixa\u00e7\u00e3o permitem a r\u00e1pida desmontagem dos m\u00f3dulos, o que \u00e9 \u00fatil no caso de manuten\u00e7\u00e3o, ou para liberar pesos para melhorar a flutuabilidade em caso de emerg\u00eancia.\nEm rela\u00e7\u00e3o \u00e0s caracter\u00edsticas estruturais, h\u00e1 v\u00e1rios materiais que suportam grandes press\u00f5es, resistem \u00e0 corros\u00e3o e apresentam baixo peso, sendo destacados os materiais compostos, ligas de alum\u00ednio e ligas de tit\u00e2nio.\nPor fim, o projeto do casco deve minimizar o arraste hidrodin\u00e2mico, que pode influenciar mesmo ve\u00edculos em baixa velocidade. Atualmente, v\u00e1rias t\u00e9cnicas de avalia\u00e7\u00e3o por simula\u00e7\u00e3o e experimental s\u00e3o utilizadas para isso (Fossen, 1994; Yuh, 2000; Button et al., 2009).\n2.2.3.2\tEnergia\nEste \u00e9 um subsistema que se diferencia claramente nos ROV e AUV. Enquanto nos primeiros pode-se considerar que o suprimento de energia \u00e9 ilimitado, uma vez que esta \u00e9 fornecida pelo cord\u00e3o umbilical, nos AUV a autonomia de opera\u00e7\u00e3o \u00e9 fun\u00e7\u00e3o da energia armazenada em baterias.\nO fornecimento de energia deve considerar a alimenta\u00e7\u00e3o de todos os subsistemas do ve\u00edculo, da eletr\u00f4nica embarcada aos sistemas de atua\u00e7\u00e3o e interven\u00e7\u00e3o, com controle de consumo uniforme e tolerante a problemas el\u00e9tricos. Por isso, o desenvolvimento de tecnologias que consumam menos energia bem como de fontes mais eficientes \u00e9 essencial para aumentar o tempo de opera\u00e7\u00e3o cont\u00ednua dos ve\u00edculos (Whitcomb, 2000).\nIsso tamb\u00e9m se aplica aos ROV, pois o consumo de energia est\u00e1 diretamente relacionado \u00e0 espessura de cabo necess\u00e1ria para o seu fornecimento, o que afeta a din\u00e2mica do ve\u00edculo pelos esfor\u00e7os devidos \u00e0 intera\u00e7\u00e3o entre o cabo e a \u00e1gua. Por esse motivo, alguns projetos utilizam o fornecimento h\u00edbrido de energia, tanto pelo cord\u00e3o umbilical quanto por baterias no pr\u00f3prio ve\u00edculo. Alguns ROV de pesquisa empregam apenas baterias, usando o cord\u00e3o umbilical apenas para comunica\u00e7\u00e3o, que assim tem a sua espessura bastante reduzida (Yuh et al., 1998; Inova\u00e7\u00e3o Tecnol\u00f3gica, 2009).\nAl\u00e9m das baterias de diferentes tecnologias, est\u00e3o sendo desenvolvidos trabalhos com c\u00e9lulas a combust\u00edvel e mesmo com geradores usando diesel como combust\u00edvel ou p\u00f3 de alum\u00ednio. Essa linha de pesquisa tem se beneficiado diretamente dos estudos para o desenvolvimento de tecnologias eficientes para armazenamento e gera\u00e7\u00e3o de energia para ve\u00edculos automotivos el\u00e9tricos (Whitcomb, 2000; Button et al., 2009).\n2.2.4\tAutonomia\nEmbora n\u00e3o seja um subsistema, a autonomia \u00e9 uma caracter\u00edstica que influencia diretamente as decis\u00f5es de projeto de UUV. N\u00e3o existe uma defini\u00e7\u00e3o rigorosa, por\u00e9m, para o grau de autonomia de um UUV. Alguns ve\u00edculos, por exemplo, apesar de vinculados por um cord\u00e3o umbilical, tem certa autonomia para executar algumas opera\u00e7\u00f5es a partir de defini\u00e7\u00f5es de alto n\u00edvel de um operador. Alguns autores cunharam o termo semiautonomia para se referirem a este tipo de intera\u00e7\u00e3o operador-ve\u00edculo, com o objetivo de evoluir gradativamente os sistemas de miss\u00e3o de forma que as tarefas do operador sejam de n\u00edvel cada vez mais alto, \u00e0 medida que os sistemas do UUV tornam-se mais capazes de gerenciar os aspectos de opera\u00e7\u00e3o anteriormente de responsabilidade humana (Marani; Choi; Yuh, 2009; Yuh et al., 1998).\nO Escrit\u00f3rio de Pesquisa Naval americano (Office of Naval Research, ou ONR) define seis n\u00edveis de autonomia (Button et al., 2009):\nOperado por humano Ve\u00edculo totalmente teleoperado, em baixo n\u00edvel, onde a \u00fanica comunica\u00e7\u00e3o do sistema com o operador \u00e9 para retornar dados de sensores;\nAssistido por humano O sistema tem alguma capacidade de realizar tarefas em paralelo com a opera\u00e7\u00e3o humana, embora nada que n\u00e3o envolva a opera\u00e7\u00e3o remota;\nDelegado por humano O sistema pode executar algumas tarefas a partir de sua delega\u00e7\u00e3o pelo operador, como controle dos atuado-res, pilotagem e outras opera\u00e7\u00f5es de baixo n\u00edvel, que podem ser assumidas imediatamente pelo operador, caso desejado;\nSupervisionado por humano O sistema pode realizar grande variedade de atividades a partir de decis\u00f5es de alto n\u00edvel do operador. Pode receber especifica\u00e7\u00f5es de movimentos a executar, e a partir destes, assumir guiagem e pilotagem, por exemplo;\nIniciativa mista As decis\u00f5es de alto n\u00edvel podem ser tomadas tanto pelo operador quanto pelos sistemas. Por exemplo, pode-se definir uma localiza\u00e7\u00e3o a alcan\u00e7ar, e tanto o operador quanto o sistema podem definir a trajet\u00f3ria a ser executada;\nAutonomia plena O sistema n\u00e3o requer interven\u00e7\u00e3o de um operador, ap\u00f3s recebida a tarefa a ser executada, tendo de tomar todas as\ndecis\u00f5es e mesmo sem haver comunica\u00e7\u00e3o com operador ou base at\u00e9 o fim da execu\u00e7\u00e3o da tarefa.\nEsta classifica\u00e7\u00e3o, embora n\u00e3o seja um padr\u00e3o, pode ilustrar a dire\u00e7\u00e3o da evolu\u00e7\u00e3o dos sistemas aut\u00f4nomos.\nA autonomia de sistemas de interven\u00e7\u00e3o subaqu\u00e1tica \u00e9 uma linha de pesquisa que ainda tem relativamente poucos trabalhos na literatura, ao menos se comparada com as pesquisas com ve\u00edculos aut\u00f4nomos subaqu\u00e1ticos de cruzeiro. A tecnologia desses ve\u00edculos \u00e9 considerada est\u00e1vel o suficiente para serem usados em miss\u00f5es de explora\u00e7\u00e3o (Button et al., 2009). V\u00e1rios resultados de pesquisas sobre AUV de cruzeiro s\u00e3o aproveitados para o estudo dos sistemas ve\u00edculo-manipulador, em linhas como autonomia de opera\u00e7\u00e3o, navega\u00e7\u00e3o, guiagem e intera\u00e7\u00e3o do ve\u00edculo com o meio aqu\u00e1tico.\n2.3\tTRABALHOS RELACIONADOS AOS UVMS\nAlguns temas de pesquisa diretamente relacionados aos UVMS s\u00e3o descritos a seguir. Junto \u00e0 descri\u00e7\u00e3o, s\u00e3o citados alguns trabalhos relevantes que foram consultados no desenvolvimento desta tese.\nVis\u00f5es Gerais e Tend\u00eancias An\u00e1lises do panorama da rob\u00f3tica subaqu\u00e1tica, identificando tecnologias, aplica\u00e7\u00f5es e tend\u00eancias s\u00e3o periodicamente publicadas, servindo como guia para o desenvolvimento de novas pesquisas. Entre esses trabalhos, s\u00e3o citados (Yuh, 2000; Whitcomb, 2000; Antonelli; Fossen; Yoerger, 2008). Uma revis\u00e3o sobre a tecnologia de sensores \u00e9 feita em (Kinsey; Eustice; Whitcomb, 2006). Uma an\u00e1lise do mercado, de tecnologias maduras e em desenvolvimento \u00e9 apresentada em (Button et al., 2009).\nManipuladores no meio aqu\u00e1tico A intera\u00e7\u00e3o com o meio l\u00edquido \u00e9 um fator relevante no uso dos manipuladores subaqu\u00e1ticos. Alguns resultados sobre os esfor\u00e7os resultantes s\u00e3o extra\u00eddos diretamente da modelagem de um corpo r\u00edgido movimentando-se em um fluido, que \u00e9 bastante explorado na literatura sobre din\u00e2mica de ve\u00edculos subaqu\u00e1ticos. Pesquisas sobre modelagem, desenvolvimento e experimenta\u00e7\u00e3o de manipuladores operando imersos s\u00e3o reportadas em (McLain; Rock; Lee, 1995; Tarn; Yang, 1997; Lane et al., 1999; Sagara et al., 2001).\nModelagem cinem\u00e1tica e din\u00e2mica Em grande parte da literatura, a modelagem cinem\u00e1tica dos UVMS considera modelos separados\npara o ve\u00edculo e para o manipulador. No primeiro, faz-se a an\u00e1lise de um corpo r\u00edgido livre no espa\u00e7o, enquanto no segundo utiliza-se a nota\u00e7\u00e3o de Denavit-Hartenberg para a obten\u00e7\u00e3o da cinem\u00e1tica e da din\u00e2mica. Os modelos s\u00e3o posteriormente combinados para a obten\u00e7\u00e3o do movimento do efetuador final do manipulador em rela\u00e7\u00e3o a um referencial inercial.\nEm rela\u00e7\u00e3o ao ve\u00edculo, desenvolve-se a cinem\u00e1tica e a din\u00e2mica detalhadamente em (Fossen, 1994). Uma revis\u00e3o da din\u00e2mica de UUV pequenos e m\u00e9dios \u00e9 apresentada em (Ananthakrishnan; Decron, 2000). An\u00e1lises de modelos de UVMS considerando ve\u00edculo e manipulador s\u00e3o feitas em (Schjolberg; Fossen, 1994; Hsu et al., 2000).\nUma abordagem alternativa empregando a teoria dos helicoides para a an\u00e1lise cinem\u00e1tica de UVMS integrando ve\u00edculo e manipulador foi proposta por Santos (Santos, 2006; Santos et al., 2006). Nela, tratou-se do caso de um ve\u00edculo subaqu\u00e1tico com um manipulador acoplado. Uma abordagem de an\u00e1lise cinem\u00e1tica por quaternions duais \u00e9 apresentada em (Oliveira, 2011).\nControle de posi\u00e7\u00e3o e for\u00e7a O controle de UVMS tem sido pesquisado por muitos autores. A dificuldade da obten\u00e7\u00e3o de um modelo din\u00e2mico preciso para estes sistemas, bem como da intera\u00e7\u00e3o deste com o ambiente leva a diferentes abordagens para a solu\u00e7\u00e3o deste problema. Antonelli avaliou o uso de diversas estrat\u00e9gias de controle em diferentes sistemas ve\u00edculo-manipulador. Al\u00e9m de v\u00e1rios artigos, os resultados foram reunidos em um livro que pode ser considerado como uma refer\u00eancia para UVMS (Antonelli, 2006). Entre outros trabalhos sobre estrat\u00e9gias de controle cinem\u00e1tico e din\u00e2mico, citam-se (Cui; Podder; Sarkar, 1999; Fraisse et al., 2000; de Wit; Diaz; Perrier, 2000; Sarkar; Podder, 2001; Xu et al., 2007; Soylu; Buckham; Podhorodeski, 2010).\nProjeto, constru\u00e7\u00e3o e experimenta\u00e7\u00e3o Embora UVMS teleoperados sejam uma tecnologia em uso, as pesquisas sobre autonomia ainda empregam simula\u00e7\u00f5es. Alguns projetos de desenvolvimento de ve\u00edculos para experimenta\u00e7\u00e3o e uso em produ\u00e7\u00e3o s\u00e3o o SAU-VIM (Yuh et al., 1998; Marani; Choi; Yuh, 2009), o ALIVE (Antonelli; Fossen; Yoerger, 2008), o ROBHAZ (Richardson; Woodward; Billingham, 2002) e o RAUVI (De Novi et al., 2010; Ridao, P. and Sanz, P. J. and Oliver, J., 2011). Al\u00e9m desses, pode-se ainda citar o desenvolvimento de um ve\u00edculo para explora\u00e7\u00e3o espacial (Stone Aerospace, 2012).\nCoopera\u00e7\u00e3o A coopera\u00e7\u00e3o de UVMS ainda \u00e9 um tema recente, com uma vis\u00e3o geral dispon\u00edvel em (Padir; Koivo, 2003; Padir, 2005). Para ve\u00edculos de cruzeiro, a coopera\u00e7\u00e3o tamb\u00e9m \u00e9 tratada (Bishop; Stilwell, 2001; Bishop, 2003, 2008). Uma arquitetura de coopera\u00e7\u00e3o entre UUV e Ve\u00edculos n\u00e3o tripulados de superf\u00edcie, ou USV (do ingl\u00eas Unmanned Surface Vehicles) \u00e9 abordada em (Benjamin, 2007).\nA rob\u00f3tica subaqu\u00e1tica \u00e9 um campo de pesquisa que tem crescido no Brasil, em parte motivado pelo interesse na explora\u00e7\u00e3o de petr\u00f3leo e g\u00e1s offshore. Outra motiva\u00e7\u00e3o importante \u00e9 a grande extens\u00e3o do mar territorial brasileiro, que ainda \u00e9 pouco conhecido. Os primeiros estudos sobre modelagem, simula\u00e7\u00e3o e controle datam da d\u00e9cada de 80 (Dominguez, 1989). No controle de UUV s\u00e3o citados diversos trabalhos, como (Hsu et al., 2000; Cunha, 1992; De Souza; Maruyama, 2007; Kuhn, 2011), por exemplo. Aspectos de projeto e constru\u00e7\u00e3o de UUV s\u00e3o objeto de estudo de diferentes trabalhos (Tavares, 2003; Barros; Soares, 2002; Botelho et al., 2003; Moraes, 2005; Centeno, 2007; Floriani; Dias; Rocha, 2011). A cinem\u00e1tica de UUV tem sido abordada em pesquisas como (Santos et al., 2006; Oliveira, 2011; Rocha; Dias, 2010a).\nApresentou-se neste cap\u00edtulo os cen\u00e1rios e desafios dos sistemas subsaqu\u00e1ticos de interven\u00e7\u00e3o. A partir dessa compila\u00e7\u00e3o de materiais da literatura, observa-se que a autonomia desses sistemas \u00e9 o objetivo da maioria das pesquisas, bem como uma demanda de mercado.\nEste trabalho enquadra-se no desenvolvimento da autonomia dos UVMS. Para tanto, concentra-se na fase de interven\u00e7\u00e3o das miss\u00f5es, tratando do planejamento de movimento do sistema de interven\u00e7\u00e3o, uma das atribui\u00e7\u00f5es da atividade de guiagem. A partir de uma descri\u00e7\u00e3o do movimento desejado para o efetuador final e do ve\u00edculo (se necess\u00e1rio), o planejamento de movimento deve gerar as refer\u00eancias para os atuadores do sistema de forma que a tarefa especificada seja realizada. Para tanto, a an\u00e1lise cinem\u00e1tica desses sistemas \u00e9 necess\u00e1ria. A partir desta, devem ser definidas estrat\u00e9gias de resolu\u00e7\u00e3o de tarefas que contemplem o UVMS, os objetos a sofrerem interven\u00e7\u00e3o e o meio. Estes s\u00e3o os temas dos cap\u00edtulos seguintes.\n70\n3\tCINEM\u00c1TICA DE UM UVMS\nEste cap\u00edtulo apresenta uma s\u00edntese da modelagem cinem\u00e1tica de sistemas ve\u00edculo-manipulador subaqu\u00e1ticos apresentada na literatura. A cinem\u00e1tica de um UVMS deve considerar o movimento do ve\u00edculo e dos manipuladores a ele vinculados. A abordagem mais frequente na literatura utiliza uma modelagem composta pelo ve\u00edculo como um corpo r\u00edgido livre no espa\u00e7o e do manipulador atrav\u00e9s da nota\u00e7\u00e3o Denavit-Hartenberg. A combina\u00e7\u00e3o dos modelos do ve\u00edculo e do manipulador pode ser vista como se este tivesse uma base m\u00f3vel.\nAl\u00e9m dessa modelagem, descreve-se tamb\u00e9m neste cap\u00edtulo a cinem\u00e1tica de UVMS atrav\u00e9s da teoria dos helicoides. Esta prov\u00ea um tratamento unificado \u00e0 cinem\u00e1tica de UVMS considerando-o uma cadeia cinem\u00e1tica.\n3.1\tCINEM\u00c1TICA DO VE\u00cdCULO\nNa an\u00e1lise cinem\u00e1tica, um ve\u00edculo aqu\u00e1tico \u00e9 tratado como um corpo r\u00edgido cujo movimento se d\u00e1 em seis graus de liberdade (tr\u00eas translacionais e tr\u00eas rotacionais). Sua postura \u00e9 definida em rela\u00e7\u00e3o a um sistema de coordenadas inercial costumeiramente associado \u00e0 Terra, aqui denominado O-xyz.\nA postura do ve\u00edculo \u00e9 determinada pela posi\u00e7\u00e3o e orienta\u00e7\u00e3o do sistema de coordenadas do ve\u00edculo Ov-xvyv zv em rela\u00e7\u00e3o ao referencial inercial e fixado a um ponto qualquer do corpo r\u00edgido do ve\u00edculo1. Os eixos do sistema s\u00e3o convencionalmente alinhados com as dire\u00e7\u00f5es longitudinal (xv), transversal (yv) e normal (zv) do ve\u00edculo, coincidindo com os eixos principais de in\u00e9rcia da maioria das geometrias usadas em ve\u00edculos aqu\u00e1ticos (Fossen, 1994).\nNa \u00e1rea naval, \u00e9 usual adotar a nota\u00e7\u00e3o definida pela Society of Naval Architects and Marine Engineers (SNAME) para postura e movimento. Ela \u00e9 apresentada na Tabela 7. Segundo essa nota\u00e7\u00e3o2, o movimento linear se d\u00e1 segundo as dire\u00e7\u00f5es de avan\u00e7o(surge), balan\u00e7o(sway) e afundamento(heave), enquanto o movimento angular ocorre segundo\n1\tMuitas vezes, escolhe-se o centro de massa do ve\u00edculo ou outro ponto que simplifique as suas equa\u00e7\u00f5es de movimento.\n2\tOs s\u00edmbolos foram levemente modificados neste texto para identificar as vari\u00e1veis do ve\u00edculo no contexto dos UVMS. Al\u00e9m disso, o s\u00edmbolo para velocidade angular em torno do eixo y do ve\u00edculo foi trocado de qv para sv a fim de evitar conflito com a nota\u00e7\u00e3o usada em cadeias cinem\u00e1ticas.\nos eixos de rolagem (roll), arfagem (pitch) e guinada (yaw) (SNAME, 1950; Tavares, 2003).\nTabela 7. Nota\u00e7\u00e3o SNAME para o movimento de ve\u00edculos aqu\u00e1ticos\nPostura\t\t\tEixo\tVelocidade\t\t\nPosi\u00e7\u00e3o\tni\tXv\tavan\u00e7o ( surge)\tuv\tV1\tLinear\n\t\tyv\tbalan\u00e7o(sway)\tVv\t\t\n\t\tZv\tafundamento ( heave)\twv\t\t\nO C O\tn2\t\trolagem ( roll)\tpv\tV 2\tAngular\n\t\tdv\tarfagem (pitch)\tsv\t\t\n\t\tfv\tguinada (yaw)\trv\t\t\nA defini\u00e7\u00e3o da postura do ve\u00edculo com base nos dois sistemas de coordenadas \u00e9 mostrada na Figura 15. Nela, o ve\u00edculo \u00e9 representado por um elipsoide.\nFigura 15. Defini\u00e7\u00e3o da postura do ve\u00edculo\nA posi\u00e7\u00e3o do ve\u00edculo \u00e9 definida pelo vetor n1 da posi\u00e7\u00e3o da origem do referencial a ele vinculado (denominado referencial do ve\u00edculo) em rela\u00e7\u00e3o ao referencial inercial, como expresso na Equa\u00e7\u00e3o 3.1. A orienta\u00e7\u00e3o \u00e9 convencionalmente descrita por \u00e2ngulos de Euler RPY (do ingl\u00eas Roll-Pitch-Yaw) segundo o referencial inercial como na Equa\u00e7\u00e3o 3.2 (Fossen, 1994; Antonelli, 2006). Esses \u00e2ngulos descrevem a sequ\u00eancia de deslocamentos angulares necess\u00e1ria para que um sistema de coordenadas m\u00f3vel inicialmente alinhado com o referencial inercial se alinhe com o referencial do ve\u00edculo.\nV1[3x1] = [ Xv yv n2[3X1] = [ \"\" Sv\nZv ]T\n^v ]T\n(3.1)\n(3.2)\nAssim, a postura do ve\u00edculo \u00e9 descrita pelo vetor rp. definido na Equa\u00e7\u00e3o 3.3.\n\u00edv[6xi\nV1\n\u00cd2\n(3.3)\nSegundo a nota\u00e7\u00e3o SNAME, a velocidade do ve\u00edculo \u00e9 definida como mostrado na Equa\u00e7\u00e3o 3.4, sendo expressa segundo o referencial do ve\u00edculo. vi \u00e9 a velocidade linear da origem do referencial do ve\u00edculo em rela\u00e7\u00e3o \u00e0 origem do referencial inercial. v2 \u00e9 a velocidade angular do ve\u00edculo em rela\u00e7\u00e3o ao referencial inercial, expresso no referencial do ve\u00edculo.\nV1\nV2\nVv[6xi\n= [ uv vv wv pv sv rv ]T (3.4)\nA rela\u00e7\u00e3o entre a velocidade da Eq. 3.4 e a derivada temporal da postura do ve\u00edculo \u00e9 estabelecida pela matriz Jacobiana Jv definida na Equa\u00e7\u00e3o 3.5, que depende da orienta\u00e7\u00e3o do referencial do ve\u00edculo,\nV v\nV1\nV2\nJv[6x6] 77v[6x1\nvRi (\u00ed2)\t0\n0\tJo (\u00cd2)\nn 1\nl\u00ed 2\n(3.5)\nonde v R/ \u00e9 a matriz de rota\u00e7\u00e3o que expressa a transforma\u00e7\u00e3o de orienta\u00e7\u00e3o do referencial inercial para o referencial do ve\u00edculo e Jo \u00e9 a matriz Jacobiana que relaciona a velocidade angular com a derivada temporal de orienta\u00e7\u00e3o. Essas matrizes s\u00e3o definidas nas Equa\u00e7\u00f5es 3.6 e 3.7, onde c. e s. correspondem \u00e0s fun\u00e7\u00f5es trigonom\u00e9tricas cosseno e seno, respectivamente (Antonelli, 2006).\ncv ce\tsv ce\t-se\nsv c0 1 cv se s0\tcv c0 1 s^ se s0\ts^ce\ns^ s0 1 cv se c0\tcv s0 1 s^ se c0\tc0ce\n(3.6)\nvRI (V2)[3x3]\n\t' 1\t0\t-se\nJo (n2)[3x3] =\t0\tC0\ts 0ce\n\t0\t\u2014 s^\tc0ce\n(3.7)\nA determina\u00e7\u00e3o da postura do ve\u00edculo em um dado instante a\npartir de uma postura inicialmente conhecida e da integra\u00e7\u00e3o temporal da velocidade \u00e9 bastante utilizada em navega\u00e7\u00e3o, particularmente em ve\u00edculos subaqu\u00e1ticos, onde n\u00e3o \u00e9 poss\u00edvel obter dados de sistemas GPS, sendo conhecido como navega\u00e7\u00e3o estimada (em ingl\u00eas, dead reckoning).\nA integra\u00e7\u00e3o da velocidade angular expressa segundo o referencial do ve\u00edculo n\u00e3o tem significado f\u00edsico (Fossen, 1994). Assim, integrase a derivada temporal de orienta\u00e7\u00e3o, obtida pela rela\u00e7\u00e3o inversa \u00e0 da Eq. 3.5 (Antonelli, 2006). A derivada temporal de postura do ve\u00edculo r\u00a1v \u00e9 ent\u00e3o definida como na Equa\u00e7\u00e3o 3.8,\nn v[6xi\nV R (V2)\n0\nJ-1 (V2)\n\tV1\n\tV2\n(3.8)\nn 1\nn 2\n= Jv\tV v\n0\nonde a forma assumida pela inversa da matriz Jv \u00e9 devido a sua forma bloco diagonal. Por ser ortogonal, a matriz de rota\u00e7\u00e3o tem sua inversa igual a sua transposta (Siciliano et al., 2009). A inversa da matriz Jacobiana de orienta\u00e7\u00e3o \u00e9 descrita na Equa\u00e7\u00e3o 3.9, de onde se observa que para d = {(2i + 1)n/2 | i G N} a matriz \u00e9 singular.\n1\n0\n0\nV (%) = -\nce\ns0se\nc0ce\nc0 se\ns0ce\nC0\n(3.9)\nOutra representa\u00e7\u00e3o de orienta\u00e7\u00e3o utilizada, principalmente em estrat\u00e9gias de controle, \u00e9 a baseada em quaternions, cuja caracter\u00edstica principal \u00e9 a n\u00e3o exist\u00eancia de singularidade em sua representa\u00e7\u00e3o. O uso de quaternions para representar orienta\u00e7\u00e3o \u00e9 detalhado em (Tavares, 2003; Antonelli, 2006; Oliveira, 2011). Neste texto, ser\u00e1 utilizada apenas a representa\u00e7\u00e3o por \u00e2ngulos RPY, por ainda ser a mais empregada na \u00e1rea naval.\n3.2\tCINEM\u00c1TICA DO SISTEMA VE\u00cdCULO-MANIPULADOR\nNos sistemas ve\u00edculo-manipulador, as tarefas de interven\u00e7\u00e3o s\u00e3o especificadas em fun\u00e7\u00e3o do movimento do efetuador final do manipulador, que far\u00e1 contato com o meio, movimentar\u00e1 objetos e utilizar\u00e1 ferramentas. O modelo cinem\u00e1tico de manipuladores empregados em UVMS \u00e9 similar aos rob\u00f4s manipuladores utilizados na ind\u00fastria.\nNa literatura, a cinem\u00e1tica de manipuladores emprega principalmente a nota\u00e7\u00e3o de Denavit-Hartenberg como, por exemplo, em (Siciliano et al., 2009). Nela, o modelo \u00e9 fun\u00e7\u00e3o das vari\u00e1veis das juntas e\nsuas derivadas expressas em rela\u00e7\u00e3o \u00e0 sua base. Por isso, a cinem\u00e1tica de UVMS tamb\u00e9m costuma empregar essa nota\u00e7\u00e3o, como \u00e9 descrito nesta se\u00e7\u00e3o.\nNos UVMS, a base do manipulador \u00e9 o ve\u00edculo. Assim, o manipulador sofre os efeitos de estar sobre uma base m\u00f3vel, onde a velocidade da base varia ao longo do tempo. As velocidades e acelera\u00e7\u00f5es da base s\u00e3o propagadas atrav\u00e9s dos elos, como \u00e9 mostrado na modelagem desenvolvida em (Antonelli, 2006), e tratado em outros trabalhos sobre o uso de manipuladores subaqu\u00e1ticos, como por exemplo, em (Soylu; Buckham; Podhorodeski, 2010).\nDado que um UVMS \u00e9 formado por um ve\u00edculo e um manipulador serial, como o mostrado na Figura 16, a postura do efetuador final em rela\u00e7\u00e3o ao referencial inercial ne \u00e9 fun\u00e7\u00e3o da postura do ve\u00edculo nv e das vari\u00e1veis de junta q da cadeia cinem\u00e1tica do manipulador como \u00e9 definido na Equa\u00e7\u00e3o 3.10,\nxe\nFigura 16. Representa\u00e7\u00e3o cinem\u00e1tica de um UVMS e seus sistemas de coordenadas\nne[6x1\n2e1\t= K (nv, q)\n(3.10)\nonde K representa a fun\u00e7\u00e3o cinem\u00e1tica direta do sistema, nei \u00e9 a posi\u00e7\u00e3o do efetuador final e ne2 \u00e9 sua a orienta\u00e7\u00e3o, sendo usados os \u00e2ngulos RPY neste texto para manter uma representa\u00e7\u00e3o an\u00e1loga \u00e0 da nota\u00e7\u00e3o SNAME para ve\u00edculos aqu\u00e1ticos.\nSegundo o referencial inercial, a derivada temporal da postura do efetuador final ne \u00e9 definida pela Equa\u00e7\u00e3o 3.11 (Santos, 2006; Antonelli, 2006),\n\u00ed\u00cde[6xi] = Je,v\t, q) [6x6+\u201e] Z [6+nx1]\t(3.llj\nonde Je,v \u00e9 o Jacobiano que relaciona o vetor de velocidades Z e a derivada temporal f}e. Z \u00e9 o vetor de velocidades do sistema formado pelas velocidades do ve\u00edculo e das juntas do efetuador final como \u00e9 definido na Equa\u00e7\u00e3o 3.12.\nZ [6+nxi] \u2014\nV1\nV 2\nq\n(3.12)\nA velocidade do efetuador final expressa no referencial do pr\u00f3prio efetuador \u00e9 definida na Equa\u00e7\u00e3o 3.13, onde o Jacobiano Je \u00e9 definido de forma an\u00e1loga ao Jacobiano da Eq. 3.7 (Antonelli, 2006).\nV e[6x1\nV\tel\nV\te2\n\u2014 Je\u00da e\n(3.13)\nAs velocidades e acelera\u00e7\u00f5es dos elos do manipulador s\u00e3o determinadas a partir de Z e Z. Assumindo que as grandezas est\u00e3o expressas no referencial do elo, estas s\u00e3o definidas como\nWi \u2014\tWj-i + cu Zi-i\t(3.14)\nWi \u2014\tWi-i + Wi-i x CiZi-i +\tqiZi-i\t(3.15)\nVi \u2014\tVi-i + Wi x ri-i,i\t(3.16)\nVi,c \u2014\tVi-i + Wi x ri-i,i,c\t(3.17)\nai \u2014\tai-i + Wi x ri-i,i + Wi\tx\t(w\u00ed x\tri-i,i)\t(3.18)\nonde, em rela\u00e7\u00e3o a origem do referencial do elo i, wi \u00e9 a velocidade angular, Wi \u00e9 a acelera\u00e7\u00e3o angular, vi \u00e9 a velocidade linear e ai \u00e9 a acelera\u00e7\u00e3o linear. vijC \u00e9 a velocidade do centro de massa do elo, e zi-i \u00e9 o vetor de dire\u00e7\u00e3o de q (Siciliano et al., 2009; Antonelli, 2006).\nEm rela\u00e7\u00e3o ao efetuador final, um UVMS pode ser considerado cinematicamente redundante, uma vez que o ve\u00edculo completamente atuado possui seis graus de liberdade, al\u00e9m dos graus de liberdade do manipulador. A resolu\u00e7\u00e3o da cinem\u00e1tica inversa, necess\u00e1ria para a determina\u00e7\u00e3o dos movimentos do ve\u00edculo e das juntas necess\u00e1rios para se obter a postura desejada para o efetuador final, apresenta os mesmos problemas de manipuladores cinematicamente redundantes, al\u00e9m de algumas caracter\u00edsticas pr\u00f3prias de sistemas ve\u00edculo-manipulador.\nEm comum com manipuladores redundantes de base fixa, h\u00e1 a exist\u00eancia de infinitas solu\u00e7\u00f5es para a cinem\u00e1tica inversa, bem como\na necessidade de evitamento de singularidades e limites de juntas. A resolu\u00e7\u00e3o de redund\u00e2ncia \u00e9 extensamente discutida na literatura, e uma revis\u00e3o \u00e9 feita em (Chiaverini; Oriolo; Walker, 2008).\nA resolu\u00e7\u00e3o da cinem\u00e1tica inversa em UVMS tem de considerar o fato de que alguns graus de liberdade do sistema correspondem ao movimento do ve\u00edculo, que tem controle mais complexo e cujo movimento requer mais energia do que o movimento das juntas. Aplicados sem a considera\u00e7\u00e3o anterior, os m\u00e9todos de resolu\u00e7\u00e3o acabam por causar movimentos desnecess\u00e1rios no ve\u00edculo.\nHaver\u00e3o muitas situa\u00e7\u00f5es, por\u00e9m, em que o movimento coordenado do ve\u00edculo com o manipulador ser\u00e1 desej\u00e1vel, como no evita-mento de limites de junta do manipulador ou de singularidades, por exemplo. Em outras, este movimento ser\u00e1 necess\u00e1rio, como em tarefas onde apenas o movimento do manipulador n\u00e3o permite ao efetuador final alcan\u00e7ar as posi\u00e7\u00f5es especificadas (na limpeza de cascos de navios, por exemplo). O evitamento de obst\u00e1culos \u00e9 outra situa\u00e7\u00e3o em que a coordena\u00e7\u00e3o dos movimentos entre ve\u00edculo e manipulador \u00e9 necess\u00e1ria.\nO estudo da cinem\u00e1tica inversa de UVMS considerando os fatores supracitados \u00e9 um tema de pesquisa com poucos trabalhos ainda realizados. Antonelli (2006) analisa algumas das t\u00e9cnicas baseadas em pseudoinversa do Jacobiano adaptadas para considerar esses fatores. Resultados experimentais de implementa\u00e7\u00e3o de uma t\u00e9cnica de resolu\u00e7\u00e3o de cinem\u00e1tica inversa s\u00e3o analisados em (Soylu; Buckham; Podho-rodeski, 2010).\n3.3\tCINEM\u00c1TICA DE UVMS ATRAV\u00c9S DE HELICOIDES\nA aplica\u00e7\u00e3o da teoria dos helicoides e de ferramentas nela baseadas para a an\u00e1lise de sistemas ve\u00edculo-manipulador foi originalmente tratada em (Santos, 2006; Santos et al., 2006). A partir dessa an\u00e1lise foi obtido um modelo integrado entre ve\u00edculo, manipulador e meio. As t\u00e9cnicas para resolu\u00e7\u00e3o de tarefas deste m\u00e9todo permitem resolver problemas inerentes a sistemas cinematicamente redundantes como os UVMS com vantagens em rela\u00e7\u00e3o aos m\u00e9todos usualmente encontrados na literatura.\nA teoria dos helicoides \u00e9 uma ferramenta para o estudo da cinem\u00e1tica e da est\u00e1tica de corpos r\u00edgidos livres no espa\u00e7o ou vinculados em cadeias cinem\u00e1ticas. O helicoide \u00e9 um ente geom\u00e9trico que representa simultaneamente grandezas translacionais e rotacionais segundo um eixo de refer\u00eancia, e que est\u00e3o relacionadas por um passo. O heli-\ncoide de movimento, ou heligiro, representa velocidade linear e angular em uma \u00fanica entidade. Um helicoide de a\u00e7\u00e3o, ou helifor\u00e7a, representa for\u00e7a e momento (Hunt, 2000; Campos, 2004; Dai, 2006).\nO conhecimento de fundamentos da teoria dos helicoides e das ferramentas nela baseadas \u00e9 necess\u00e1rio para o desenvolvimento dos modelos cinem\u00e1ticos desse texto. Vis\u00f5es gerais da cinem\u00e1tica por helicoides est\u00e3o dispon\u00edveis na literatura (Tsai, 1999; Davison; Hunt, 2004). Apesar de n\u00e3o ser o objeto deste texto, o Ap\u00eandice A introduz resumidamente o assunto para facilitar a an\u00e1lise dos modelos baseados em helicoides da tese.\nAs cadeias cinem\u00e1ticas de manipuladores podem ser modeladas atrav\u00e9s da teoria dos helicoides. V\u00e1rios trabalhos na literatura discutem as caracter\u00edsticas e usos de tal modelagem para tratamento de redund\u00e2ncia, evitamento de obst\u00e1culos e an\u00e1lise cinem\u00e1tica de rob\u00f4s paralelos e cooperativos, como por exemplo (Campos; Guenther; Martins, 2005; Fontan, 2007; Guenther et al., 2008; Simas et al., 2009; Rocha et al., 2009; Tonetto; Rocha; Dias, 2010).\nComo j\u00e1 foi visto, ve\u00edculos subaqu\u00e1ticos s\u00e3o tratados como corpos r\u00edgidos livres no espa\u00e7o pela literatura, e seu movimento \u00e9 composto por grandezas vetoriais lineares e angulares. Assim, este movimento pode ser representado por heligiros. Um UVMS, por sua vez, combina os movimentos do ve\u00edculo e do manipulador, que podem ser, ent\u00e3o, modelados por m\u00e9todos baseados em helicoides (Santos, 2006).\nAssim, o estado de velocidades de um corpo r\u00edgido pode ser descrito por um heligiro, definido para um ponto instantaneamente coincidente com a origem do referencial escolhido e que se move junto com o corpo. Uma representa\u00e7\u00e3o do heligiro de um ve\u00edculo subaqu\u00e1tico e seus componentes \u00e9 mostrada na Figura 17.\nFigura 17. Defini\u00e7\u00e3o do heligiro para o ve\u00edculo subaqu\u00e1tico\nA velocidade do ve\u00edculo \u00e9 descrita pelo heligiro $v = $vqv, onde $v \u00e9 o helicoide normalizado que descreve o movimento instant\u00e2neo infinitesimal e qv \u00e9 a magnitude do movimento3, que pode ser igual \u00e0 velocidade angular ||wv || no caso geral, ou \u00e0 velocidade linear ||vVjO|| se o movimento for puramente translacional. Utilizando a defini\u00e7\u00e3o do helicoide normalizado, o heligiro $v \u00e9 descrito em coordenadas de Pl\u00fccker como\n$v\n[6X1\nVv,o\ns\ns0 x s + hs\n<\u00edv\n(3.19)\nonde s \u00e9 um vetor unit\u00e1rio que representa a dire\u00e7\u00e3o do heligiro, s0 \u00e9 o vetor posi\u00e7\u00e3o do eixo do helicoide e h \u00e9 o seu passo.\nA defini\u00e7\u00e3o de um heligiro depende do referencial sobre o qual os seus componentes s\u00e3o definidos. Caso seja necess\u00e1rio express\u00e1-lo segundo um referencial diferente do usado para a sua defini\u00e7\u00e3o, pode-se aplicar uma transforma\u00e7\u00e3o de helicoides (Tsai, 1999) definida como\n1T\nTv[6X6]\n1 Rv\t0\nS (Irv)1 Rv 1 Rv\n(3.20)\nonde I e v s\u00e3o os referenciais inercial e do corpo do ve\u00edculo, respectivamente, adotados como exemplo. 1 Rv \u00e9 a matriz de rota\u00e7\u00e3o entre os dois sistemas de coordenadas e S (Irv) \u00e9 a matriz antissim\u00e9trica gerada pelo operador S(\u2022) a partir do vetor posi\u00e7\u00e3o do referencial do ve\u00edculo segundo o referencial inercial.\nO movimento do ve\u00edculo no espa\u00e7o em rela\u00e7\u00e3o a um referencial pode ser considerado como imposto por uma junta de seis graus de liberdade, que pode ser expandida em seis juntas de um grau de liberdade (Santos, 2006; Featherstone, 2008; Waldron; Schmiedeler, 2008). Sua velocidade, ent\u00e3o, \u00e9 composta pela soma das velocidades de cada junta, representadas por heligiros segundo um mesmo referencial, ou\n6\t6\n$v[6xi]\t' $v,i\t' Sv,\u00ed<?\u00ed = J[6xn]q[nxl]\t(3.21)\ni=1\ti=1\nonde a matriz Jacobiana J \u00e9 formada pelos helicoides normalizados das juntas e q \u00e9 um vetor coluna contendo as magnitudes dos heligiros.\n3 O s\u00edmbolo q para magnitude de velocidade \u00e9 adotado para manter compatibi-\nlidade com a nota\u00e7\u00e3o usada para vari\u00e1veis de juntas de uma cadeia cinem\u00e1tica na\nrob\u00f3tica.\n\u00c9 poss\u00edvel definir o Jacobiano como J = I6 atrav\u00e9s da escolha de um referencial no corpo do ve\u00edculo paralelo ao referencial inercial. Para expressar J no referencial do ve\u00edculo (orientado de acordo com os eixos do seu corpo), \u00e9 necess\u00e1ria uma transforma\u00e7\u00e3o de helicoides. Esta \u00e9 simplificada pelo fato das origens dos sistemas de coordenadas dos dois referenciais serem coincidentes. Assim, o estado de movimento do ve\u00edculo segundo o seu referencial \u00e9 expresso como\nv d\u00bb\n$v\nv Rv,c\t0\n0\tv Rv,c\nv\u2019cJq\n(3.22)\nv\nonde os referenciais v e v,c s\u00e3o relativos ao ve\u00edculo e ao referencial segundo o qual os helicoides normalizados foram definidos, respectivamente. A matriz de rota\u00e7\u00e3o vRv,c, utilizando \u00e2ngulos de Euler, \u00e9 a mesma definida na Equa\u00e7\u00e3o 3.6.\nO modelo cinem\u00e1tico de um manipulador pode ser obtido da mesma forma acima exposta para o movimento do ve\u00edculo. Para tanto, utiliza-se o m\u00e9todo dos helicoides sucessivos, descrito sucintamente no Ap\u00eandice A e detalhado em (Tsai, 1999). A velocidade do efetuador final em rela\u00e7\u00e3o \u00e0 base do manipulador pode ser descrita como\nm\nm d\u00bb\nJq m\n(3.23)\nonde o \u00edndice m indica que a grandeza \u00e9 expressa segundo o referencial da base do manipulador. A matriz coluna qm \u00e9 formada pelas magnitudes das velocidades das juntas do manipulador.\nNo sistema ve\u00edculo-manipulador, o movimento do efetuador final \u00e9 fun\u00e7\u00e3o do movimento do ve\u00edculo e do movimento dos elos do manipulador, sendo expresso no referencial do ve\u00edculo como\nv $\t_ v $ i v m m d\u00bb\t/QO/lA\n$e \u2014\t$v I Tm $e\t(3.24)\nv\nTm,b \u2014\nI3\t0\nS (vrv,m) I3\n(3.25)\nconsiderando o arranjo mostrado na Figura 18. Nele, o sistema de coordenadas da base do manipulador \u00e9 paralelo ao sistema de coordenadas do ve\u00edculo e sua posi\u00e7\u00e3o \u00e9 definida pelo vetor v rv,m.\nO movimento do efetuador final do UVMS pode ser descrito por uma cadeia cinem\u00e1tica virtual (Campos; Guenther; Martins, 2005). Esta faz o fechamento da cadeia cinem\u00e1tica do UVMS, como mostra a Figura 19, permitindo o uso do m\u00e9todo de Davies para o estudo das\ncinem\u00e1ticas direta e inversa (Davies, 1981).\nFigura 18. Cadeia cinem\u00e1tica do sistema de interven\u00e7\u00e3o subaqu\u00e1tica\nFigura 19. Cadeia do UVMS fechada pela cadeia virtual de posi\u00e7\u00e3o\nPara facilitar a an\u00e1lise de cadeias cinem\u00e1ticas utiliza-se a teoria dos grafos (Diestel, 2005; Bang-Jensen; Gutin, 2007). Ela \u00e9 usada tanto para sistematizar e simplificar a representa\u00e7\u00e3o das cadeias quanto para analisar as suas caracter\u00edsticas atrav\u00e9s das ferramentas existentes para o estudo das propriedades de grafos. Os fundamentos da aplica\u00e7\u00e3o de grafos na an\u00e1lise cinem\u00e1tica tamb\u00e9m s\u00e3o sucintamente apresentados no Ap\u00eandice A.\nO d\u00edgrafo de movimento \u00e9 uma representa\u00e7\u00e3o por grafos de cadeias cinem\u00e1ticas. Nele, cada v\u00e9rtice corresponde a um elo e cada aresta corresponde a uma junta de um grau de liberdade4 da cadeia. O termo d\u00edgrafo deve-se ao fato das arestas serem direcionadas. Al\u00e9m dos sentidos das arestas, cada circuito independente do grafo tem um\n4Uma junta com n graus de liberdade \u00e9 expandida em subcadeia com n juntas de um grau de liberdade.\nsentido atribu\u00eddo. Um exemplo de d\u00edgrafo de movimento \u00e9 apresentado na Figura 20, que corresponde \u00e0 cadeia fechada da Figura 19.\nFigura 20. D\u00edgrafo de movimento do UVMS\nDe acordo com o m\u00e9todo de Davies, a soma das velocidades relativas entre os elos de uma cadeia cinem\u00e1tica fechada \u00e9 igual a zero (Davies, 1981). Em uma cadeia cinem\u00e1tica com l circuitos independentes, Fb graus de liberdade brutos (somat\u00f3rio dos graus de liberdade de todas as juntas da cadeia cinem\u00e1tica) e um sistema de helicoides de dimens\u00e3o A, a equa\u00e7\u00e3o de restri\u00e7\u00e3o que descreve essa rela\u00e7\u00e3o assume a forma da Equa\u00e7\u00e3o 3.26,\nN[AlxFt]q [F(,x\u00ed] = \u00b0[Alx\u00ed]\t(3.26)\nonde N \u00e9 a matriz de rede, que representa o movimento das juntas em cada circuito independente, atrav\u00e9s dos seus heligiros normalizados e q \u00e9 o vetor de velocidades das juntas da cadeia cinem\u00e1tica. A matriz de rede \u00e9 calculada a partir da matriz dos heligiros normalizados D e da matriz de circuitos B, obtida a partir da an\u00e1lise do d\u00edgrafo de movimento da cadeia.\nPara o grafo da Figura 20, a cadeia \u00e9 formada por apenas um circuito (l = 1), opera no espa\u00e7o A = 6 e Fb = 6 + 6 + n, onde n \u00e9 o n\u00famero de juntas do manipulador serial. Ambas as cadeias virtuais do circuito possuem 6 graus de liberdade (postura do efetuador final e do ve\u00edculo). Isso resulta na matriz de rede da Equa\u00e7\u00e3o 3.27,\nN[6xFt] = [\t- $t ]\t(3.27)\nobtida atrav\u00e9s de\nD[6xFt] = [ S, Sm $t ]\t(3.28)\nB[1xFfc] = [ l[1x6] l[lxn]\t-l[lx6]]\t(3.29)\nN[6xFt] = D[6xFt]d\u00cdag {Bi[ixFt]}\t(3.30)\nonde o operador diag {Bi} gera uma matriz diagonal com os elementos da linha 1 de B.\nO vetor de vari\u00e1veis de juntas q\u00e9 igual a\nq v q m q t\nq [Ftxl] =\n(3.31)\nonde os subscritos v, m e t indicam grandezas relativas ao ve\u00edculo, ao manipulador e \u00e0 cadeia virtual de postura do efetuador final (tarefa), respectivamente.\nA an\u00e1lise do movimento da cadeia cinem\u00e1tica \u00e9 feita atrav\u00e9s do particionamento da Equa\u00e7\u00e3o 3.27 entre movimentos cuja magnitude \u00e9 conhecida (denominados prim\u00e1rios) e movimentos cuja magnitude se deseja determinar (denominados secund\u00e1rios), como na Equa\u00e7\u00e3o 3.32,\nNq= [ Np Ns ][ qj qj ]T = 0\t(3.32)\nonde os subscritos p e s denotam vari\u00e1veis das parti\u00e7\u00f5es prim\u00e1ria e secund\u00e1ria, respectivamente. As magnitudes secund\u00e1rias s\u00e3o obtidas ao se isolar qs como na Equa\u00e7\u00e3o 3.33, que ter\u00e1 solu\u00e7\u00e3o se a matriz Ns for invers\u00edvel.\nqs = \u2014N-1Np<ip\t(3.33)\nPara a cinem\u00e1tica direta, definem-se como prim\u00e1rias as vari\u00e1veis da cadeia real do UVMS e como secund\u00e1rias as vari\u00e1veis da cadeia virtual de posi\u00e7\u00e3o do efetuador final, ou seja, Np [ $,. $m ], qp = [qT qm ]T, Ns = [ \u2014 &amp; ]e qs = [ qt ].\nPara a cinem\u00e1tica inversa s\u00e3o definidas como prim\u00e1rias as vari\u00e1veis da cadeia virtual de posi\u00e7\u00e3o do efetuador final, e como secund\u00e1rias as vari\u00e1veis da cadeia real do UVMS. Observa-se, por\u00e9m, que a matriz Ns n\u00e3o \u00e9 quadrada, n\u00e3o podendo ser invertida, como \u00e9 caracter\u00edstico de sistemas redundantes. Nesse caso, pode-se empregar uma solu\u00e7\u00e3o na\nforma da Equa\u00e7\u00e3o 3.34, onde se utiliza o operador de pseudoinvers\u00e3o de Moore-Penrose,\nqs = -NjNpqp\t(3.34)\nonde N\u00bf =\t^NsN^ \u00e9 a pseudoinversa de Ns, que minimiza a\nfun\u00e7\u00e3o custo 2qTq energia do sistema (Siciliano et al., 2009).\nO m\u00e9todo das restri\u00e7\u00f5es cinem\u00e1ticas (Santos et al., 2006), por\u00e9m, estabelece que deve-se procurar deixar a matriz Ns quadrada, atrav\u00e9s de redistribui\u00e7\u00e3o das vari\u00e1veis entre as parti\u00e7\u00f5es prim\u00e1rias e secund\u00e1rias. Assim, vari\u00e1veis consideradas secund\u00e1rias passam a ser prim\u00e1rias, implicando que ter\u00e3o seu movimento completamente definido. Al\u00e9m de possibilitar a invers\u00e3o de Ns, o efeito corresponde a impor restri\u00e7\u00f5es \u00e0 cadeia cinem\u00e1tica. Com isso, pode-se aproveitar a redund\u00e2ncia do sistema para resolver objetivos complementares para a tarefa, como por exemplo a minimiza\u00e7\u00e3o do movimento do ve\u00edculo ou definir uma orienta\u00e7\u00e3o que minimize o consumo de energia (Santos, 2006).\nUma abordagem mais branda do m\u00e9todo das restri\u00e7\u00f5es cinem\u00e1ticas, especialmente para sistemas com elevada redund\u00e2ncia, \u00e9 a de usar a mobilidade adicional para atender aos requisitos adicionais do sistema sem que Ns seja quadrada. Assim, utiliza-se a inversa se for poss\u00edvel ter Ns quadrada ou a pseudoinversa caso contr\u00e1rio.\nA cinem\u00e1tica inversa de posi\u00e7\u00e3o \u00e9 obtida pela integra\u00e7\u00e3o de qs no tempo. Uma t\u00e9cnica para minimiza\u00e7\u00e3o do erro que aparece ao se empregar m\u00e9todos num\u00e9ricos \u00e9 apresentada em (Simas et al., 2009), a qual tamb\u00e9m \u00e9 resumidamente descrita no Ap\u00eandice A.\nNeste cap\u00edtulo fez-se uma revis\u00e3o bibliogr\u00e1fica da cinem\u00e1tica de sistemas ve\u00edculo-manipulador subaqu\u00e1ticos. Apresentou-se tanto a modelagem comumente encontrada na literatura quanto a abordagem baseada na teoria dos helicoides. A modelagem por helicoides parte de uma analogia com manipuladores industriais para representar o conjunto ve\u00edculo-manipulador de modo uniforme, al\u00e9m de definir um m\u00e9todo de resolu\u00e7\u00e3o da cinem\u00e1tica inversa da cadeia cinem\u00e1tica normalmente redundante que apresenta vantagens em rela\u00e7\u00e3o a outros m\u00e9todos tradicionalmente usados na literatura. Al\u00e9m disso, esta abordagem tem extensibilidade sistem\u00e1tica e uniforme para diferentes configura\u00e7\u00f5es cinem\u00e1ticas. Essas caracter\u00edsticas justificam a ado\u00e7\u00e3o da abordagem por helicoides neste trabalho, como ser\u00e1 visto nos pr\u00f3ximos cap\u00edtulos.\n4\tAN\u00c1LISE CINEM\u00c1TICA DE SISTEMAS DE INTERVEN\u00c7\u00c3O SUBAQU\u00c1TICA\nEste cap\u00edtulo trata da an\u00e1lise da cinem\u00e1tica de sistemas subaqu\u00e1ticos de interven\u00e7\u00e3o por helicoides. Considerando os UVMS das classes de trabalho em opera\u00e7\u00e3o e as demandas de novos tipos de miss\u00f5es, busca-se estender o modelo cinem\u00e1tico descrito no cap\u00edtulo anterior. A an\u00e1lise de alguns casos leva ao desenvolvimento de um m\u00e9todo para generalizar o modelamento cinem\u00e1tico do sistema ve\u00edculo-manipulador subaqu\u00e1tico. Faz-se uma proposta de componentiza\u00e7\u00e3o de cadeias cinem\u00e1ticas complexas, a fim de agilizar o seu modelamento a partir de subcadeias cuja cinem\u00e1tica \u00e9 predeterminada. Por fim, discute-se a necessidade de reconfigurabilidade dos modelos cinem\u00e1ticos dos UVMS ao longo da tarefa e como esta pode ser implementada.\n4.1\tEXTENS\u00c3O DO MODELO CINEM\u00c1TICO BASEADO EM HELICOIDES\nO modelo cinem\u00e1tico por helicoides proposto por Santos (2006) foi desenvolvido para um UVMS composto por um ve\u00edculo com um manipulador acoplado. A mesma considera\u00e7\u00e3o \u00e9 feita por outros autores em trabalhos relativos ao modelo cinem\u00e1tico, como em (Antonelli, 2006; Marani; Choi; Yuh, 2009; Soylu; Buckham; Podhorodeski, 2010), por exemplo. Apesar de gerar resultados efetivos e inclusive levar ao projeto e constru\u00e7\u00e3o de sistemas aut\u00f4nomos, esse modelo n\u00e3o contempla diretamente a estrutura cinem\u00e1tica de muitos UVMS das classes de trabalho usados para interven\u00e7\u00e3o industrial, que costumam ter pelo menos dois manipuladores acoplados ao ve\u00edculo.\nO modelamento cinem\u00e1tico dessas classes de UVMS seria de interesse para aproveitar as estruturas cinem\u00e1ticas de ROV atualmente em opera\u00e7\u00e3o no desenvolvimento de sistemas aut\u00f4nomos. Apesar de ser poss\u00edvel obter o modelo cinem\u00e1tico para esses sistemas simplesmente duplicando os resultados para o sistema 1 ve\u00edculo - 1 manipulador, o seu uso em tarefas onde os dois manipuladores atuam em coopera\u00e7\u00e3o requer desenvolvimentos adicionais para o planejamento de movimento.\nAl\u00e9m disso, verifica-se que novos tipos de miss\u00f5es necessitam a coopera\u00e7\u00e3o entre dois ou mais UVMS para movimenta\u00e7\u00e3o de pe\u00e7as de grande volume e dif\u00edcil movimenta\u00e7\u00e3o1. Nesse caso, o modelo cine-\n1Um exemplo deste tipo de miss\u00e3o \u00e9 o do posicionamento do sistema de conten\u00e7\u00e3o\nm\u00e1tico deve ser estendido n\u00e3o apenas para considerar v\u00e1rios sistemas ve\u00edculo-manipulador, mas tamb\u00e9m a rela\u00e7\u00e3o entre estes e os objetos sendo manipulados. Este tema apresenta alguns resultados na literatura (Padir; Koivo, 2003; Padir, 2005).\nCom base nas estrat\u00e9gias para a an\u00e1lise de sistemas rob\u00f3ticos cooperativos industriais (SRC) baseadas em helicoides (Dourado, 2005; Ribeiro; Guenther; Martins, 2008; Ribeiro; Martins, 2010; Tonetto, 2011), \u00e9 poss\u00edvel estender o modelo do UVMS previamente desenvolvido de forma a considerar v\u00e1rios manipuladores, a coopera\u00e7\u00e3o entre estes e a coopera\u00e7\u00e3o entre UVMS. Os estudos sobre o uso de helicoides para evitamento de colis\u00e3o de manipuladores (Fontan, 2007; Simas, 2008; Rocha et al., 2009) tamb\u00e9m podem ser empregados para ampliar a an\u00e1lise cinem\u00e1tica de UVMS de forma a considerar esse problema.\nPara as situa\u00e7\u00f5es acima relacionadas, s\u00e3o identificadas algumas configura\u00e7\u00f5es b\u00e1sicas de extens\u00e3o do modelo cinem\u00e1tico proposto por Santos (2006). Para auxiliar no desenvolvimento das novas configura\u00e7\u00f5es, o grafo de movimento do caso original \u00e9 novamente apresentado na Figura 21, desta vez em forma contra\u00edda, onde cada aresta corresponde \u00e0 uma subcadeia cinem\u00e1tica (Tonetto, 2011). Os \u00edndices v, m e t correspondem ao ve\u00edculo, ao manipulador e \u00e0 tarefa, respectivamente.\nFigura 21. Grafo contra\u00eddo de movimento do sistema subaqu\u00e1tico de interven\u00e7\u00e3o formado por um ve\u00edculo e um manipulador\n4.1.1\tUVMS Com Manipuladores Operando de Forma Independente Entre Si\nEssa \u00e9 uma situa\u00e7\u00e3o comum em miss\u00f5es de opera\u00e7\u00e3o de paineis de plataformas de petr\u00f3leo, em que um dos manipuladores \u00e9 utilizado para fixar o UVMS em uma estrutura enquanto o outro realiza a opera\u00e7\u00e3o de manipula\u00e7\u00e3o. Outro caso que caracterizaria esse tipo de modelo seria a\ndo vazamento da plataforma Deepwater Horizon (Leff; Plushnick-Masti, 2010).\nexecu\u00e7\u00e3o simult\u00e2nea de duas ou mais subtarefas, como posicionar um objeto com um manipulador enquanto outro utiliza uma ferramenta nesse objeto ou em outro do espa\u00e7o da tarefa.\nO grafo de movimento apresentado na Figura 22 ilustra a cadeia cinem\u00e1tica de um sistema de interven\u00e7\u00e3o com dois manipuladores. As cadeias virtuais \u00ed1 e t2 s\u00e3o usadas para impor o movimento aos efetua-dores finais dos manipuladores. O UVMS \u00e9 representado pelas cadeias reais v (do ve\u00edculo), m1 e m2 (dos manipuladores).\nFigura 22. Grafo contra\u00eddo de movimento do UVMS com dois manipuladores independentes\nExistem dois circuitos independentes no grafo de movimento. Adotando a conven\u00e7\u00e3o de sentidos mostrada na Figura 22, a matriz de rede \u00e9 definida como mostrado na Equa\u00e7\u00e3o 4.1.\nN =\n$mi\t-$tx\t0\t0\n\u2022v 0\t0\t$m2\t-$t2\n(4.1)\nO grafo de movimento pode representar sistemas com um n\u00famero qualquer de manipuladores. Para isso, cada manipulador tem uma cadeia representando a sua estrutura cinem\u00e1tica e uma cadeia virtual de imposi\u00e7\u00e3o de movimento do respectivo efetuador final no grafo de movimento. Assim, para cada manipulador h\u00e1 um circuito independente correspondente. Na matriz de rede, isso implica em uma linha para cada manipulador onde, para um manipulador i, os heligiros normalizados das cadeias v e m\u00bf se mant\u00e9m com o sinal original, os da cadeia trocam de sinal e os demais heligiros s\u00e3o iguais a 0.\nA especifica\u00e7\u00e3o da tarefa \u00e9 feita pelas vari\u00e1veis das cadeias t\u00bf. Durante a interven\u00e7\u00e3o, o ve\u00edculo usualmente permanece estacion\u00e1rio ou tem algum movimento que minimiza o consumo de energia (Antonelli, 2006), o que inclui as vari\u00e1veis da cadeia v na tarefa. O particionamento da matriz de rede \u00e9 mostrado nas Equa\u00e7\u00f5es 4.2 e 4.3.\n\nNp =\n$v\n$v\n0\n\u2014 $t2\n$m1\n0\n$m2\n(4.2)\n(4.3)\nN\ns\n0\n0\n4.1.2\tUVMS Com Manipuladores Operando em Coopera\u00e7\u00e3o\nOs manipuladores de um UVMS podem trabalhar de forma cooperativa na execu\u00e7\u00e3o de uma tarefa, da mesma forma que seus equivalentes no ambiente industrial. A principal diferen\u00e7a entre um tipo de sistema e outro \u00e9 o fato da base dos manipuladores do primeiro caso ser m\u00f3vel (o ve\u00edculo). A Figura 23 corresponde ao grafo de movimento de uma configura\u00e7\u00e3o de tarefa cooperativa usando dois manipuladores de um mesmo sistema de interven\u00e7\u00e3o.\nFigura 23. Grafo contra\u00eddo de movimento do UVMS com dois manipuladores executando uma tarefa de forma cooperativa\nA tarefa consiste na manipula\u00e7\u00e3o de uma pe\u00e7a cujo movimento \u00e9 representado pela cadeia virtual t. Como no caso anterior, o UVMS \u00e9 representado pelas cadeias v, mi e m2. As cadeias virtuais Ti e r2 representam o movimento relativo entre os efetuadores finais dos manipuladores e o ponto de refer\u00eancia da pe\u00e7a.\nO grafo de movimento cont\u00e9m dois circuitos independentes. De acordo com a conven\u00e7\u00e3o de sentidos definida na Figura 23, a matriz de rede \u00e9 definida pela Equa\u00e7\u00e3o 4.4.\nN _\t\u2014\t\u2014\t0\t0\t(4 4)\n=\t$v\t0\t0\t\u2014$m2 \u2014 $r2\t( . )\nA extens\u00e3o do grafo para um n\u00famero maior de manipuladores consiste no acr\u00e9scimo de um arco para cada manipulador adicional, formado pelas cadeias do manipulador m e do movimento relativo entre este e a pe\u00e7a r\u00bf. A matriz de rede ter\u00e1 ent\u00e3o uma linha adicional para cada novo circuito. Para a linha correspondente ao manipulador i, os heligiros normalizados das cadeias v e m se mant\u00e9m com o sinal original, t e r\u00bf invertem seu sinal e os demais heligiros s\u00e3o iguais a 0.\nA tarefa \u00e9 especificada pela imposi\u00e7\u00e3o de movimento da cadeia t. Para um ve\u00edculo estacion\u00e1rio, a cadeia v tem uma restri\u00e7\u00e3o de movimento. O movimento relativo entre os efetuadores e a pe\u00e7a \u00e9 tamb\u00e9m especific\u00e1vel (por exemplo, os efetuadores mant\u00e9m a mesma posi\u00e7\u00e3o relativa ao ponto de refer\u00eancia da pe\u00e7a). Restam ent\u00e3o as vari\u00e1veis das cadeias dos manipuladores a serem determinadas, o que leva ao particionamento da matriz de rede descrito nas Equa\u00e7\u00f5es 4.5 e 4.6.\nNp =\t\t\u2014 $r1 0\t\u2014\u00eat \u2014St\t0 \u2014 Sr2\nNs =\t0\t0 Sm2\t\t\n(4.5)\n(4.6)\n4.1.3\tCoopera\u00e7\u00e3o Entre UVMS\nA coopera\u00e7\u00e3o entre UVMS pode ser considerada em situa\u00e7\u00f5es em que a opera\u00e7\u00e3o com um \u00fanico sistema de interven\u00e7\u00e3o \u00e9 mais complexa ou mesmo imposs\u00edvel de ser realizada, como no compartilhamento de cargas, posicionamento de grandes estruturas e em montagem/manu-ten\u00e7\u00e3o subaqu\u00e1tica. Uma configura\u00e7\u00e3o que representa a coopera\u00e7\u00e3o de dois UVMS com um manipulador cada sobre uma pe\u00e7a \u00e9 descrita pelo grafo de movimento mostrado na Figura 24.\nEsse modelo cinem\u00e1tico foi obtido ao se estender a sistematiza\u00e7\u00e3o feita por Tonetto (2011) para SRC industriais. Nele, cada arco do grafo de movimento corresponde \u00e0s cadeias do ve\u00edculo Vj, do manipulador m e do movimento relativo entre efetuador final e pe\u00e7a r de um UVMS i. Um arco corresponde \u00e0 cadeia virtual t que define o movimento a ser imposto para a pe\u00e7a. A matriz de rede para esse grafo assume a forma da Equa\u00e7\u00e3o 4.7.\nPe\u00e7a\nFigura 24. Grafo contra\u00eddo de movimento do sistema de interven\u00e7\u00e3o subaqu\u00e1tica cooperativo\nN =\tSv1\tSm1\t\u2014 $r1\t\u2014\u00eat\t0\t0\t0\n\t0\t0\t0\t\u2014St\tS\u00ab2\tSm2\t\u2014 Sr2\n(4.7)\nO sistema cooperativo pode ser formado por um n\u00famero qualquer de UVMS, com um circuito independente correspondente para cada um no grafo de movimento. Para um UVMS i, haver\u00e1 um arco composto pelas cadeias do ve\u00edculo v\u00bf, do manipulador m e da posi\u00e7\u00e3o relativa entre efetuador final e pe\u00e7a r\u00bf. Cada linha da matriz de rede corresponder\u00e1 a um UVMS, onde os heligiros normalizados da tarefa t e da posi\u00e7\u00e3o relativa do efetuador do manipulador i \u00e0 pe\u00e7a invertem seu sinal, enquanto os do ve\u00edculo v e do manipulador m mant\u00e9m seu sinal e os demais heligiros assumem valor igual a 0.\nA tarefa \u00e9 especificada pela imposi\u00e7\u00e3o de movimento da cadeia t. Se os ve\u00edculos permanecem estacion\u00e1rios, as cadeias v tem seu movimento restrito. As cadeias r\u00bf tamb\u00e9m podem ter seu movimento imposto de forma a especificar o movimento relativo desejado entre os efetuadores e a pe\u00e7a. Assim, o particionamento da matriz de rede \u00e9 feito de forma que as vari\u00e1veis das cadeias dos manipuladores sejam determinadas, como \u00e9 mostrado nas Equa\u00e7\u00f5es 4.8 e 4.9.\nNp =\tSv1\t\u2014Sn\t\u2014 St\t0\t0\n\t0\t0\t\u2014 St\tSv2\t\u2014 Sr2\nNs =\tSmi\t0\t\t\t\n\t0\tSm2\t\t\t\n(4.8)\n(4.9)\nA sistematiza\u00e7\u00e3o proposta tamb\u00e9m permite trabalhar com diferentes arranjos de UVMS atuando de forma cooperativa em uma interven\u00e7\u00e3o. Tome-se como exemplo um cen\u00e1rio onde dois UVMS com dois manipuladores que atuam em coopera\u00e7\u00e3o, como o representado na Figura 23, atuam de forma cooperativa entre si. O grafo de movimento da Figura 24 tem acrescidos dois arcos representando os manipuladores adicionais, resultando no grafo da Figura 25.\nFigura 25. Grafo contra\u00eddo de movimento do sistema de interven\u00e7\u00e3o subaqu\u00e1tica cooperativo\nA matriz de rede para esse grafo assume a forma da Equa\u00e7\u00e3o 4.10. Nela, os helicoides dos manipuladores s\u00e3o identificados pelo subscrito ij, onde i identifica o UVMS do qual o manipulador faz parte e j identifica o manipulador no UVMS. O mesmo subscrito \u00e9 aplicado para as cadeias virtuais do movimento relativo entre efetuador e pe\u00e7a.\n\t$v1\t$mii\t\t$rii\t\t\t0\t0\t- $t\t\u2022\u2022\u2022\t\t\nN =\t$v1\t\t0\t\t0\t$\tmi2\t-\t-$r12\t- $\tt \u2022 \u2022\t\n\t0\t\t0\t\t0\t\t0\t0 - $\tt \u2022 \u2022\t\n\t0\t\t0\t\t0\t\t0\t0 - $\tt \u2022 \u2022\t\n\t\t0\t\t0\t\t0\t0\t0 \u2022\t\t\n\t\t0\t\t0\t\t0\t0\t0\t\t\n\t\t$\t$\t\t\t$\t0\t0\t\t(4.10)\n\t\t$V2\t\tm-21\t\t$ r21\t\t\t\t\n\t\t$V2\t\t0\t\t0\t$m22\t\u2014 $r22 -\t\t\nUm poss\u00edvel particionamento para calcular o movimento dos manipuladores na execu\u00e7\u00e3o de uma tarefa teria as vari\u00e1veis das cadeias mij como secund\u00e1rias enquanto as demais seriam prim\u00e1rias. As parti\u00e7\u00f5es da matriz de rede assumiriam a forma das Equa\u00e7\u00f5es 4.11 e 4.12.\n\tSvi\t$rii\t0\nNp =\tSvi\t0\t\u2014 Sri2\n\t0\t0\t0\n\t0\t0\t0\n\tSmii\t0\t0\nNs =\t0\t$mi2\t0\n\t0\t0\t$m2i\n\t0\t0\t0\n0\n0\n0\n$m22\n\u2014St\t0\t0\t0\n\u2014St\t0\t0\t0\n\u2014St\tSV2\t\u2014 Sr2i\t0\n\u2014 St\tSV2\t0\t\u2014 Sr22\n(4.11)\n(4.12)\nEsse exemplo, cuja configura\u00e7\u00e3o n\u00e3o era tratada na literatura, mostra como a an\u00e1lise por helicoides pode ser sistematicamente estendida para representar e resolver a cinem\u00e1tica de diferentes cen\u00e1rios de sistemas de interven\u00e7\u00e3o subaqu\u00e1tica.\n4.1.4\tUVMS em Situa\u00e7\u00e3o de Evitamento de Colis\u00e3o\nOutro contexto de opera\u00e7\u00e3o que pode ocorrer frequentemente em miss\u00f5es de interven\u00e7\u00e3o subaqu\u00e1tica \u00e9 a necessidade de evitamento de colis\u00e3o com objetos presentes no espa\u00e7o de trabalho. Esse \u00e9 o caso de miss\u00f5es em ambientes restritos como plataformas subaqu\u00e1ticas ou dentro de destro\u00e7os de acidentes e em naufr\u00e1gios, por exemplo.\nA modelagem por helicoides pode ser usada para definir estrat\u00e9gias de evitamento de colis\u00e3o do UVMS enquanto este procura executar a tarefa designada. O procedimento \u00e9 an\u00e1logo ao empregado na literatura para o evitamento de colis\u00e3o de manipuladores em ambientes restritos ou incertos(Fontan, 2007; Simas, 2008; Guenther et al., 2008; Rocha; Dias, 2010a). Para tanto, acrescenta-se uma cadeia virtual que representa a posi\u00e7\u00e3o relativa entre o obst\u00e1culo a ser evitado e o componente do UVMS que pode colidir com ele (o ve\u00edculo ou algum elo do manipulador).\nUm exemplo de cadeia cinem\u00e1tica para essa situa\u00e7\u00e3o \u00e9 apresentado na Figura 26. O grafo de movimento representa um sistema de um ve\u00edculo com um manipulador onde um elo est\u00e1 em situa\u00e7\u00e3o de\nposs\u00edvel colis\u00e3o com um obst\u00e1culo. Acrescenta-se uma cadeia virtual o para representar a posi\u00e7\u00e3o relativa entre este elo e o obst\u00e1culo. Esta \u00e9 utilizada para impor uma restri\u00e7\u00e3o de movimento de forma a evitar a colis\u00e3o. Dependendo da configura\u00e7\u00e3o da cadeia virtual o, nem todas as vari\u00e1veis s\u00e3o utilizadas para impor a restri\u00e7\u00e3o, ficando as demais a serem determinadas.\nFigura 26. Grafo contra\u00eddo de movimento de um UVMS operando em presen\u00e7a de obst\u00e1culos\nNa situa\u00e7\u00e3o da Figura 26, a matriz de rede \u00e9 definida como na Equa\u00e7\u00e3o 4.13. A cadeia do manipulador \u00e9 aqui particionada em duas, uma do ve\u00edculo at\u00e9 o elo que pode colidir (m0ji) e uma deste at\u00e9 o efetuador final\tA do ve\u00edculo (v) e a da tarefa (t) se mant\u00e9m\ncomo no caso do sistema formado por um ve\u00edculo e um manipulador.\nN =\n\t\t\u2014\t0\n\t$mo,i\t0\t0\t\u2014 $O\n(4.13)\nA tarefa \u00e9 especificada pelas vari\u00e1veis da cadeia t. A restri\u00e7\u00e3o de movimento \u00e9 dada pelas vari\u00e1veis da cadeia o necess\u00e1rias (identificadas como op), enquanto as demais est\u00e3o livres para terem seus valores calculados. Se o ve\u00edculo permanece estacion\u00e1rio, a cadeia v tem seu movimento restrito. Assim, resta determinar os valores das vari\u00e1veis da cadeia m e das juntas da cadeia o que n\u00e3o tem seu movimento restrito (denominadas os). Assim, o particionamento da matriz de rede assume a forma descrita nas Equa\u00e7\u00f5es 4.14 e 4.15.\nNp =\n0 \u2014 $o.\n$m0ji\n$m0ji\n(4.14)\n(4.15)\nOs\nN\n0\ns\n0\n\u2014 $\n4.1.5\tObserva\u00e7\u00f5es Sobre Os Modelos Cinem\u00e1ticos\nOs casos apresentados nesta se\u00e7\u00e3o ilustram como \u00e9 poss\u00edvel estender o modelo original de um UVMS com um \u00fanico manipulador para cen\u00e1rios mais complexos de execu\u00e7\u00e3o de tarefas. As estruturas cinem\u00e1ticas divisadas nos casos anteriores podem ser usadas como base para a composi\u00e7\u00e3o de cen\u00e1rios ainda mais complexos. A coopera\u00e7\u00e3o entre UVMS com mais de um manipulador, onde um deles deve evitar colis\u00e3o com o meio, \u00e9 um exemplo dessa composi\u00e7\u00e3o.\nEm rela\u00e7\u00e3o \u00e0s cadeias cinem\u00e1ticas dos sistemas de interven\u00e7\u00e3o, nota-se que os manipuladores n\u00e3o t\u00eam necessariamente o mesmo arranjo cinem\u00e1tico. Da mesma forma, as cadeias virtuais usadas para impor movimentos e restri\u00e7\u00f5es podem ser diferentes no ve\u00edculo e na tarefa, sendo escolhidas aquela que, respeitando as regras b\u00e1sicas das cadeias virtuais de Assur, sejam mais adequadas para a descri\u00e7\u00e3o de determinado tipo de tarefa. Reitera-se tamb\u00e9m a necessidade dos he-ligiros das juntas da cadeia cinem\u00e1tica serem expressos segundo um mesmo referencial.\nOs particionamentos das equa\u00e7\u00f5es de restri\u00e7\u00e3o foram feitos a fim de ilustrar o processo de obten\u00e7\u00e3o de uma solu\u00e7\u00e3o para a resolu\u00e7\u00e3o de tarefas. Dependendo do contexto de execu\u00e7\u00e3o destas, diferentes par-ticionamentos podem ser definidos. Por exemplo, o ve\u00edculo pode n\u00e3o permanecer estacion\u00e1rio quando o manipulador encontra-se em configura\u00e7\u00f5es que o aproximam de alguma singularidade ou limite de junta. Nesse caso, algumas vari\u00e1veis da cadeia do ve\u00edculo podem compor a parti\u00e7\u00e3o secund\u00e1ria da cadeia a fim de serem determinadas. \u00c9 necess\u00e1rio que o sistema tenha a mobilidade necess\u00e1ria para executar a tarefa especificada, o que implica no n\u00famero de vari\u00e1veis secund\u00e1rias ser igual ou maior que a dimens\u00e3o do espa\u00e7o da tarefa.\nO caso da execu\u00e7\u00e3o de tarefas por manipuladores independentes foi aqui desenvolvido para demonstrar as possibilidades de extens\u00e3o da abordagem cinem\u00e1tica por helicoides. Neste trabalho, por\u00e9m, ser\u00e1 dado maior enfoque na intera\u00e7\u00e3o entre manipuladores e entre UVMS na execu\u00e7\u00e3o cooperativa de tarefas. Assim, o caso de manipuladores independentes n\u00e3o ser\u00e1 posteriormente tratado neste texto. Observase, por\u00e9m, que \u00e9 uma situa\u00e7\u00e3o que \u00e9 usada em diversos casos onde o UVMS deve se fixar a uma estrutura subaqu\u00e1tica que sofrer\u00e1 a interven\u00e7\u00e3o. Nesse caso, pode-se considerar o UVMS como um manipulador \u00fanico. O efetuador final que se prende a estrutura equivaleria \u00e0 uma base fixa, enquanto o outro efetuador final seria o respons\u00e1vel pela manipula\u00e7\u00e3o. O ve\u00edculo, nesse caso, seria apenas um elo intermedi\u00e1-\nrio de um manipulador serial. O grafo de movimento correspondente \u00e9 mostrado na Figura 27. A solu\u00e7\u00e3o para esse tipo de configura\u00e7\u00e3o est\u00e1 dispon\u00edvel na literatura, considerando o sistema um manipulador redundante (Simas et al., 2009; Simas; Fontan; Martins, 2011).\nVe\u00edculo\nEfetuador 1 fixo na estrutura\nt\nEfetuador 2\nExecuta a\nmanipula\u00e7\u00e3o\nFigura 27. Grafo contra\u00eddo de movimento de um UVMS fixo \u00e0 uma estrutura sobre a qual executar\u00e1 uma tarefa\nNos modelos cinem\u00e1ticos, a pe\u00e7a pode representar n\u00e3o apenas um simples objeto, mas sim o meio com o qual o UVMS ir\u00e1 interagir. A tarefa pode ser definida a partir de um ponto de refer\u00eancia que represente o movimento/restri\u00e7\u00e3o do meio como um todo e do movimento relativo entre este ponto e os efetuadores finais do sistema de interven\u00e7\u00e3o.\n4.2 MODULARIZA\u00c7AO DA MODELAGEM CINEM\u00c1TICA\nComo pode-se observar nos casos discutidos na se\u00e7\u00e3o anterior, as cadeias cinem\u00e1ticas dos sistemas de interven\u00e7\u00e3o subaqu\u00e1ticas podem ser complexas de acordo com os arranjos cinem\u00e1ticos dos UVMS e da natureza das tarefas a serem executadas. A abordagem por helicoides prov\u00ea um m\u00e9todo sistem\u00e1tico e uniforme de modelamento cinem\u00e1tico desses sistemas. Mesmo assim, a defini\u00e7\u00e3o da equa\u00e7\u00e3o de restri\u00e7\u00e3o continua sendo um processo demorado e de certa dificuldade.\nNa an\u00e1lise dos grafos de movimento previamente definidos, pode-se ver a cadeia cinem\u00e1tica do sistema de interven\u00e7\u00e3o como sendo composta por subcadeias cujas estruturas cinem\u00e1ticas podem se repetir em um mesmo sistema ou aparecer em outras situa\u00e7\u00f5es. O que se diferencia entre duas subcadeias com a mesma estrutura \u00e9 o conjunto das vari\u00e1veis de juntas e par\u00e2metros que as definem e a sua posi\u00e7\u00e3o relativa na cadeia composta por elas. Isso implica diferen\u00e7as nas defini\u00e7\u00f5es dos heligiros que as comp\u00f5em devido \u00e0s vari\u00e1veis e par\u00e2metros usados e \u00e0\nnecessidade de expressar eles segundo um mesmo referencial.\nMesmo assim, \u00e9 poss\u00edvel definir uma abordagem de composi\u00e7\u00e3o de cadeias cinem\u00e1ticas por subcadeias cuja cinem\u00e1tica \u00e9 previamente conhecida e parametriz\u00e1vel. As cadeias compostas teriam seus elos conectados por componentes cinem\u00e1ticos, que seriam juntas simples2 ou subcadeias. Uma cadeia simples seria formada apenas por juntas.\nCada cadeia deve ter seus heligiros expressos segundo um referencial comum a todos eles e ter um conjunto pr\u00f3prio de vari\u00e1veis de juntas e par\u00e2metros (como comprimentos de elos, por exemplo). Logo, se uma cadeia for usada para criar uma cadeia composta, uma transforma\u00e7\u00e3o de helicoides deve ser associada a ela para que seus heligiros sejam expressos segundo o referencial da cadeia composta. Al\u00e9m disso, os nomes de vari\u00e1veis e par\u00e2metros devem ser modificados para evitar conflitos e confus\u00f5es no modelo cinem\u00e1tico.\nPara simplificar o desenvolvimento da modulariza\u00e7\u00e3o, assume-se que toda cadeia cinem\u00e1tica tem uma base e um efetuador final e que ela pode se conectar a outras cadeias apenas por esses dois elos. O efetuador final tamb\u00e9m pode ser o efetuador da cadeia composta. Outra conven\u00e7\u00e3o adotada neste texto \u00e9 que os heligiros de uma subcadeia s\u00e3o definidos segundo um referencial coincidente com a sua base. As subcadeias simples s\u00e3o seriais. Cada subcadeia \u00e9 definida segundo as suas pr\u00f3prias vari\u00e1veis (q\u00bf, com i = 1 \u2022 \u2022 \u2022 n a partir da junta conectada \u00e0 base) e par\u00e2metros.\nCom base nessas conven\u00e7\u00f5es, obt\u00e9m-se a cinem\u00e1tica de posi\u00e7\u00e3o da cadeia representada pela matriz de transforma\u00e7\u00e3o homog\u00eanea bAe. A cinem\u00e1tica diferencial tamb\u00e9m \u00e9 obtida, com a matriz de helicoides normalizados D = [$1 \u2022 \u2022 \u2022 $\u201e] e o vetor de vari\u00e1veis q, que permitem descrever o estado de velocidades do efetuador final3.\nPara definir uma cadeia composta, pode-se partir da an\u00e1lise do grafo contra\u00eddo de movimento. No caso de uma aresta representar uma subcadeia, associa-se a esta subcadeia a sua matriz de helicoides normalizados Dc. correspondente e uma transforma\u00e7\u00e3o de helicoides que fa\u00e7a com que os heligiros de Dci sejam expressos segundo o referencial adotado para a cadeia composta. A matriz de helicoides normalizados da cadeia composta \u00e9 ent\u00e3o definida como na Equa\u00e7\u00e3o 4.16,\nD = [ r$C1 \u2022\u2022\u2022 ]\n(4.16)\n2Neste texto, juntas de um grau de liberdade apenas.\n3 O processo de modelagem \u00e9 brevemente descrito no Ap\u00eandice A.\nonde r$Ci = rTciCiDCi \u00e9 formado pelos helicoides normalizados da sub-cadeia c expressos no referencial da cadeia composta ap\u00f3s sofrer a transforma\u00e7\u00e3o de helicoides rTCi.\nEm uma cadeia composta, a transforma\u00e7\u00e3o rTCi pode ser definida a partir das pr\u00f3prias subcadeias. A transforma\u00e7\u00e3o entre a refer\u00eancia de uma subcadeia c e a refer\u00eancia da subcadeia \u00e0 qual ela se conecta (q_i) \u00e9 definida a partir da cinem\u00e1tica de posi\u00e7\u00e3o desta (matriz Ci-1 Aei-1, de transforma\u00e7\u00e3o entre o referencial do efetuador da subcadeia para a sua base).\nPara uma sequ\u00eancia de subcadeias, a matriz de transforma\u00e7\u00e3o resultante \u00e9 obtida por premultiplica\u00e7\u00e3o das matrizes entre uma sub-cadeia e sua antecessora. Assim, para uma subcadeia c pode-se definir a transforma\u00e7\u00e3o de helicoides como na Equa\u00e7\u00e3o 4.17,\nrTci = rTciC1 Tc2 \u2022\u2022\u2022Ci-1 Tci\t(4.17)\nonde r TC1 \u00e9 a transforma\u00e7\u00e3o de helicoides entre a base da cadeia composta e o referencial adotado para ela e Ci-1 TCi \u00e9 a transforma\u00e7\u00e3o de helicoides entre os referenciais i e i \u2014 1. Se o referencial de i coincide com o do efetuador final de i \u2014 1,Ci-1 TCi \u00e9 determinada a partir da cinem\u00e1tica direta de cj_1. Do contr\u00e1rio, acrescenta-se uma transforma\u00e7\u00e3o entre esses dois referenciais, sendo a transforma\u00e7\u00e3o definida como\nci-1 rp ___ ci-1 rp\tei-1 t\nTc\u00bf\tXe\u00bf-1 Tc\u00bf\n(4.18)\nonde e\u00bf-1 Tc. \u00e9 a transforma\u00e7\u00e3o entre os referenciais do efetuador da cadeia i \u2014 1 e da base da cadeia i (usualmente constante) e CiTe\u00bf \u00e9 a transforma\u00e7\u00e3o entre os sistemas do referenciais da base da cadeia i e de seu efetuador final.\nPor fim, \u00e9 necess\u00e1rio renomear as vari\u00e1veis de juntas e par\u00e2metros das subcadeias de forma a evitar conflitos nas express\u00f5es. Em implementa\u00e7\u00f5es computacionais, as vari\u00e1veis e par\u00e2metros podem ser armazenadas em objetos que s\u00e3o referenciados com nomes diferentes em dicion\u00e1rios espec\u00edficos para cada cadeia.\nEsse m\u00e9todo de defini\u00e7\u00e3o de cadeias pode ser sintetizado nos seguintes passos:\n1.\tDesenhar o grafo de movimento do sistema rob\u00f3tico;\n2.\tIdentificar as poss\u00edveis subcadeias do sistema e suas rela\u00e7\u00f5es;\n3.\tLocalizar as defini\u00e7\u00f5es pr\u00e9vias dos tipos de subcadeias identificadas. Se necess\u00e1rio, criar os modelos para as subcadeias ainda n\u00e3o definidas obedecendo \u00e0s conven\u00e7\u00f5es estabelecidas;\n4.\tRenomear as vari\u00e1veis de juntas e par\u00e2metros das subcadeias de forma a evitar identificadores duplicados;\n5.\tDefinir as transforma\u00e7\u00f5es de helicoides para cada subcadeia;\n6.\tResolver a cinem\u00e1tica da cadeia composta.\nO m\u00e9todo visa simplificar o processo de modelagem de cadeias complexas, n\u00e3o apenas no caso de sistemas subaqu\u00e1ticos. Ele se aplica a qualquer situa\u00e7\u00e3o onde possam se divisar subcadeias dentro de uma cadeia complexa, como por exemplo em sistemas rob\u00f3ticos industriais cooperativos. Al\u00e9m disso, \u00e9 poss\u00edvel modificar com poucos passos uma cadeia j\u00e1 modelada pela adi\u00e7\u00e3o, remo\u00e7\u00e3o e substitui\u00e7\u00e3o de subcadeias. Isso \u00e9 poss\u00edvel fisicamente em alguns modelos de UVMS que podem ser reconfigurados antes de serem lan\u00e7ados para miss\u00f5es de acordo com o tipo de tarefas a serem executadas.\nO m\u00e9todo de composi\u00e7\u00e3o pode ser usado para definir o modelo cinem\u00e1tico de toda a cadeia cinem\u00e1tica do sistema de interven\u00e7\u00e3o de forma anal\u00edtica. Com o uso de software CAS (Computer Algebra System) \u00e9 poss\u00edvel obter de forma sistem\u00e1tica os heligiros de toda a cadeia atrav\u00e9s da composi\u00e7\u00e3o dos modelos previamente definidos e das matrizes de transforma\u00e7\u00e3o de helicoides.\nPor outro lado, \u00e9 poss\u00edvel pensar em uma automa\u00e7\u00e3o da montagem de cadeias atrav\u00e9s do conceito de composi\u00e7\u00e3o que aparece na literatura de padr\u00f5es de projeto (Metsker, 2004) e da cria\u00e7\u00e3o de um banco de cadeias contendo modelos predeterminados de cadeias comu-mente usadas. Esses conceitos s\u00e3o empregados na concep\u00e7\u00e3o de um framework computacional para implementa\u00e7\u00e3o de modelos cinem\u00e1ticos (Rocha; Tonetto; Dias, 2011a) que \u00e9 discutido no Cap\u00edtulo 5 e no Ap\u00eandice B.\nAs cadeias cinem\u00e1ticas simples usadas nos modelos deste trabalho s\u00e3o descritas no Ap\u00eandice C, bem como as cadeias compostas relativas aos sistemas de interven\u00e7\u00e3o analisados e simulados.\n4.3 VARIABILIDADE DO MODELO CINEM\u00c1TICO DE SISTEMAS SUBAQU\u00c1TICOS DE INTERVEN\u00c7\u00c3O\nAo longo da fase de interven\u00e7\u00e3o de uma miss\u00e3o, o contexto de execu\u00e7\u00e3o de tarefas pode variar. Os motivos para isso compreendem os diferentes objetivos principais/complementares de cada tarefa de interven\u00e7\u00e3o a ser executada e as incertezas do ambiente. Neste \u00faltimo caso, podem ser citados como exemplos a movimenta\u00e7\u00e3o independente\ndo objeto a sofrer a interven\u00e7\u00e3o e a possibilidade de colis\u00e3o com obst\u00e1culos que se desloquem dentro do espa\u00e7o de trabalho (ou que n\u00e3o foram detectados anteriormente devido \u00e0s dificuldades de modelagem do ambiente).\nEmbora o objetivo principal deva se manter (execu\u00e7\u00e3o da interven\u00e7\u00e3o pelos efetuadores finais), observa-se que os objetivos complementares podem mudar em fun\u00e7\u00e3o das varia\u00e7\u00f5es de contexto. Isso implica em modifica\u00e7\u00f5es no modelo cinem\u00e1tico do sistema e consequente resolu\u00e7\u00e3o de sua cinem\u00e1tica inversa para o planejamento de movimento.\nNo caso do objeto se mover durante a execu\u00e7\u00e3o da tarefa pode ser necess\u00e1rio que o ve\u00edculo passe da condi\u00e7\u00e3o de estacion\u00e1rio para m\u00f3vel, de forma a evitar singularidades ou limites de juntas de um manipulador. Assim, o seu movimento deve ser determinado juntamente com os das juntas do manipulador.\nEm outros casos, restri\u00e7\u00f5es ao movimento de ve\u00edculos e juntas devem ser impostos de forma a evitar uma colis\u00e3o do UVMS com um obst\u00e1culo ou para representar o travamento de alguma junta do manipulador. Em sistemas com UVMS em coopera\u00e7\u00e3o, o movimento de um ou mais ve\u00edculos pode ser necess\u00e1rio para evitar limites de juntas de um ou mais manipuladores do sistema.\nA literatura apresenta diferentes abordagens para aproveitar a mobilidade adicional de um sistema ve\u00edculo-manipulador subaqu\u00e1tico de forma a satisfazer diferentes objetivos complementares enquanto realiza uma tarefa. Notadamente, boa parte utiliza o conceito de proje\u00e7\u00e3o no espa\u00e7o nulo para atender a um ou mais objetivos complementares (Antonelli, 2006). Uma abordagem em particular que considera a varia\u00e7\u00e3o de objetivos complementares ao longo do tempo faz uso de um operador pseudoinverso ponderado, onde os pesos da matriz de pondera\u00e7\u00e3o s\u00e3o determinados por uma fun\u00e7\u00e3o objetivo das vari\u00e1veis de juntas do manipulador (ou da proximidade destas de seus limites), de forma que a cinem\u00e1tica inversa resulte em movimentos para o ve\u00edculo quando alguma junta se aproxima de seus limites (Sarkar; Podder, 2001).\nSantos (2006), por sua vez, prop\u00f4s um modelo h\u00edbrido baseado em estados. Nele, diferentes particionamentos da equa\u00e7\u00e3o de restri\u00e7\u00e3o eram utilizados para resolver a cinem\u00e1tica diferencial do sistema para cada estado de opera\u00e7\u00e3o. T\u00e9cnicas de intelig\u00eancia artificial eram usadas para identificar o estado do sistema e promover o chaveamento entre estados.\nA ideia de modelo h\u00edbrido de estados agrupa em uma estrat\u00e9gia de planejamento de movimento diferentes solu\u00e7\u00f5es para a cinem\u00e1tica inversa do sistema relativas aos diferentes contextos de execu\u00e7\u00e3o de\ntarefas. Apesar de poder apresentar descontinuidades no movimento causadas pelas mudan\u00e7as de estado (Guenther et al., 2008; Simas et al., 2009; Fontan, 2007), esse modelo reflete o requisito de variabilidade que o sistema de interven\u00e7\u00e3o subaqu\u00e1tica deve ter para atuar em diferentes contextos que surgem durante a execu\u00e7\u00e3o das tarefas. Ao mesmo tempo, \u00e9 poss\u00edvel sistematizar a defini\u00e7\u00e3o das diferentes solu\u00e7\u00f5es de cinem\u00e1tica inversa e como elas podem mudar de um estado para outro.\nA variabilidade da solu\u00e7\u00e3o da cinem\u00e1tica inversa pode ser implementada de duas formas, de acordo com o tipo de mudan\u00e7a de contexto de execu\u00e7\u00e3o da tarefa: atrav\u00e9s de reparticionamento da equa\u00e7\u00e3o de restri\u00e7\u00e3o existente ou de reconfigura\u00e7\u00e3o da cadeia cinem\u00e1tica que representa o sistema de interven\u00e7\u00e3o executando tarefas.\nO reparticionamento consiste na redefini\u00e7\u00e3o das parti\u00e7\u00f5es prim\u00e1ria e secund\u00e1ria da cadeia cinem\u00e1tica do sistema, de forma que novos movimentos/restri\u00e7\u00f5es sejam impostos enquanto outros passam a ser calculados pelo m\u00e9todo de Davies. Assim, alguns heligiros trocam de parti\u00e7\u00e3o, enquanto outros permanecem na parti\u00e7\u00e3o originalmente designada. A cadeia cinem\u00e1tica n\u00e3o sofre mudan\u00e7as estruturais, e portanto a sua equa\u00e7\u00e3o de restri\u00e7\u00e3o permanece a mesma.\nUm caso de emprego de reparticionamento ocorre quando o ve\u00edculo passa de estacion\u00e1rio a m\u00f3vel para possibilitar que o efetuador final alcance posturas que seriam imposs\u00edveis com o ve\u00edculo mantendo posi\u00e7\u00e3o e atitude fixas. O movimento do ve\u00edculo precisa ser obtido pela solu\u00e7\u00e3o da cinem\u00e1tica inversa junto com as refer\u00eancias das juntas.\nPara um sistema como o da Figura 19, a matriz de rede descrita na Equa\u00e7\u00e3o 3.27 \u00e9 particionada como na Equa\u00e7\u00e3o 4.19 quando o ve\u00edculo deve se manter estacion\u00e1rio, sendo este o seu estado inicial. Ao ser gerado um evento que exige o movimento do ve\u00edculo, o seu estado muda para m\u00f3vel e o particionamento da matriz de rede passa a ser o da Equa\u00e7\u00e3o 4.20, de forma que o movimento do ve\u00edculo tamb\u00e9m possa ser determinado. O sistema volta ao estado inicial quando o manipulador puder operar em condi\u00e7\u00f5es normais (afastado de singularidades e limites de juntas). Nas Equa\u00e7\u00f5es 4.19 e 4.20, as vari\u00e1veis prim\u00e1rias s\u00e3o escritas em vermelho, enquanto as secund\u00e1rias s\u00e3o escritas em azul4.\nN =\tJ\t(4.19)\nN = $v\tJ\t(4.20)\n4 Essa conven\u00e7\u00e3o de cores ser\u00e1 adotada deste ponto do texto em diante.\nA Figura 28 ilustra essa situa\u00e7\u00e3o em um diagrama de estados.\nOutra situa\u00e7\u00e3o de reparticionamento \u00e9 causada pelo travamento de uma junta do manipulador, o que implicaria na vari\u00e1vel a ela correspondente passar a ser prim\u00e1ria (imposi\u00e7\u00e3o de restri\u00e7\u00e3o) e que eventualmente as vari\u00e1veis do ve\u00edculo passem a ser secund\u00e1rias se o manipulador n\u00e3o for redundante.\nsingularidades limites de juntas\nopera\u00e7ao segura do manipulador\nFigura 28. Diagrama de estados de opera\u00e7\u00e3o de um UVMS - reparti-cionamento\nA reconfigura\u00e7\u00e3o da cadeia cinem\u00e1tica \u00e9 usada quando h\u00e1 necessidade de representar novas rela\u00e7\u00f5es de movimentos/restri\u00e7\u00f5es do sistema ou modifica\u00e7\u00f5es das rela\u00e7\u00f5es atualmente existentes. Um exemplo \u00e9 o evitamento de colis\u00e3o. Inicialmente, se o sistema opera livre de obst\u00e1culos, pode-se assumir uma representa\u00e7\u00e3o de cadeia cinem\u00e1tica que considere o UVMS e sua rela\u00e7\u00e3o com o objeto a ser manipulado. Quando um obst\u00e1culo \u00e9 detectado, deve-se impor uma restri\u00e7\u00e3o ao movimento do UVMS de forma que este n\u00e3o colida. Essa restri\u00e7\u00e3o implica na adi\u00e7\u00e3o de uma cadeia cinem\u00e1tica virtual entre o elo que pode colidir e o obst\u00e1culo. A cadeia cinem\u00e1tica modificada resulta em uma nova equa\u00e7\u00e3o de restri\u00e7\u00e3o, a qual deve ser particionada de acordo com os movimentos/restri\u00e7\u00f5es impostos tanto para execu\u00e7\u00e3o da tarefa quando para evitar a colis\u00e3o. Um diagrama de estados correspondente \u00e9 apresentado na Figura 29.\ndetec\u00e7ao de obst\u00e1culo\nFigura 29. Diagrama de estados de opera\u00e7\u00e3o de um UVMS - reconfigura\u00e7\u00e3o\nConsidere-se, ent\u00e3o, o mesmo sistema de interven\u00e7\u00e3o da Figura 19. Em um estado inicial livre de obst\u00e1culos e seguro para o manipulador, a matriz de rede correspondente ao d\u00edgrafo de movimento da\nFigura 20 \u00e9 descrita na Equa\u00e7\u00e3o 3.27.\nAo ser detectado um obst\u00e1culo, o sistema deve passar ao estado de evitamento de colis\u00e3o, onde o movimento relativo entre o obst\u00e1culo e o elo do sistema que tem possibilidade de colidir \u00e9 representado por uma cadeia virtual resultando no d\u00edgrafo de movimento da Figura 26 e na matriz de rede da Equa\u00e7\u00e3o 4.13. O evitamento de colis\u00e3o imp\u00f5e uma restri\u00e7\u00e3o de movimento do elo que se aproxima mais do obst\u00e1culo, de forma que se acrescentem as vari\u00e1veis da cadeia virtual de evitamento de obst\u00e1culo na parti\u00e7\u00e3o prim\u00e1ria, como \u00e9 mostrado nas Equa\u00e7\u00f5es 4.14 e 4.15. Uma vez que o sistema esteja em uma situa\u00e7\u00e3o que possa ser considerada livre do obst\u00e1culo, retorna-se ao estado prim\u00e1rio e a cadeia cinem\u00e1tica que representa o sistema volta a ser a da Figura 20.\nNo estado de evitamento de colis\u00e3o, o movimento do ve\u00edculo passa a ser necess\u00e1rio se ele for colidir ou se apenas o movimento do manipulador n\u00e3o for capaz de evitar a colis\u00e3o com um de seus elos. O particionamento da matriz de rede desse estado ent\u00e3o assume a forma da Equa\u00e7\u00e3o 4.21. Novamente, os subscritos p e s das vari\u00e1veis da cadeia de obst\u00e1culos o correspondem respectivamente \u00e0s vari\u00e1veis que imp\u00f5em a restri\u00e7\u00e3o e \u00e0s que n\u00e3o imp\u00f5em a restri\u00e7\u00e3o e podem ter seu movimento calculado pelo m\u00e9todo de Davies.\nN =\n\t\tSmijn\t-St\t0\t0\n\t\t0\t0\t- so op\t\u2014 So.\n(4.21)\nNa execu\u00e7\u00e3o de tarefas em coopera\u00e7\u00e3o tamb\u00e9m \u00e9 poss\u00edvel haver reconfigura\u00e7\u00e3o da cadeia cinem\u00e1tica do sistema. Se durante a execu\u00e7\u00e3o de uma tarefa um UVMS se junta aos j\u00e1 atuantes, um novo arco \u00e9 acrescido ao grafo de movimento para representar o movimento do UVMS, como foi discutido anteriormente. A equa\u00e7\u00e3o de restri\u00e7\u00e3o ent\u00e3o \u00e9 modificada e reparticionada de forma a refletir a nova situa\u00e7\u00e3o e calcular o movimento de todos os componentes do sistema.\nA Figura 30 serve para ilustrar esse caso. Em sistema com dois UVMS executando uma tarefa (Fig. 30a) adiciona-se um terceiro UVMS (Fig. 30b). \u00c0 matriz de rede do sistema cooperativo inicial (Eq. 4.22) \u00e9 acrescida uma linha correspondente ao circuito independente do UVMS adicional, resultando na forma da Equa\u00e7\u00e3o 4.23.\nN =\nvi\nmi\n\u2014 Sr1\n0\n-$t\t0\t0\t0\n\u2014 St\tSv2\tSm2\t\u2014 Sr2\n(4.22)\n0\n0\n(b)\nFigura 30. Reconfigura\u00e7\u00e3o de cadeia cinem\u00e1tica pela adi\u00e7\u00e3o de um UVMS: (a)antes da adi\u00e7\u00e3o; (b)ap\u00f3s a adi\u00e7\u00e3o\nN =\n0 0\n0 0\nSri\t\u2014\t0\t0\t0\t0\t0\n\t\t\t\t\t\t\n0\t\u2014 $t\t$V2\tSm2\t\u2014 $T2\t0\t0\n0\t\u2014\t0\t0\t0\t$V3\tSm3\n0\n0\n\u2014 $r3\n(4.23)\nDeve-se observar que sempre que houver um reparticionamento h\u00e1 a necessidade de determinar refer\u00eancias a serem adotadas como valores das vari\u00e1veis prim\u00e1rias do sistema, mesmo que seja para restringir totalmente o movimento (q = 0).\nEmbora seja importante para o processo de resolu\u00e7\u00e3o de tarefas, n\u00e3o ser\u00e3o tratados neste trabalho aspectos da tomada de decis\u00e3o para a identifica\u00e7\u00e3o de estados e chaveamento do modelo cinem\u00e1tico, uma vez que o objetivo da tese \u00e9 a an\u00e1lise cinem\u00e1tica dos diferentes cen\u00e1rios de execu\u00e7\u00e3o de tarefas. Esse assunto \u00e9 analisado para o tipo de problema dos UVMS em (Santos, 2006; Santos et al., 2006; Simas et al., 2009; Simas; Fontan; Martins, 2011).\nA extens\u00e3o do modelo cinem\u00e1tico por helicoides considerando diferentes tipos de atividades e contextos de execu\u00e7\u00e3o de tarefas por UVMS foi o principal assunto deste cap\u00edtulo. Um novo modelo cinem\u00e1tico, derivado do estudo de sistemas rob\u00f3ticos cooperativos, foi desenvolvido para representar a coopera\u00e7\u00e3o entre UVMS e entre manipuladores de um mesmo sistema de interven\u00e7\u00e3o. Ao serem analisados diferentes arranjos cinem\u00e1ticos, observou-se a possibilidade de componentiza\u00e7\u00e3o dessas cadeias complexas ao consider\u00e1-las formadas por subcadeias mais simples. Dessa forma, pode-se agilizar o processo de modelagem cinem\u00e1tica e inclusive automatiz\u00e1-lo. Uma sistemati-\nza\u00e7\u00e3o desse processo de modelagem por componentiza\u00e7\u00e3o foi descrita. Verificou-se tamb\u00e9m que o sistema de interven\u00e7\u00e3o precisa ter caracter\u00edsticas de variabilidade para poder executar as tarefas definidas em contextos que variam por diferentes motivos. A componentiza\u00e7\u00e3o pode auxiliar na r\u00e1pida reconfigura\u00e7\u00e3o do sistema, nos casos em que apenas o reparticionamento n\u00e3o resolva.\nOs resultados desse cap\u00edtulo, para serem implementados de forma sistematizada, por\u00e9m flex\u00edvel e reutiliz\u00e1vel, demandaram um processo de an\u00e1lise e modelagem para a constru\u00e7\u00e3o de um conjunto de ferramentas computacionais que facilitassem o desenvolvimento de estrat\u00e9gias de planejamento de movimento e simula\u00e7\u00f5es. O projeto de um framework computacional resultou dessa an\u00e1lise, sendo este apresentado no pr\u00f3ximo cap\u00edtulo.\n5\tASPECTOS DE PROJETO DE UM FRAMEWORK PARA MODELAGEM CINEM\u00c1TICA\nNeste cap\u00edtulo \u00e9 discutido o projeto de um framework computacional elaborado a partir dos resultados da modelagem cinem\u00e1tica baseada em helicoides para sistemas de interven\u00e7\u00e3o subaqu\u00e1tica tratados nos cap\u00edtulos anteriores. A motiva\u00e7\u00e3o para o desenvolvimento desse framework e os requisitos de projeto identificados s\u00e3o relacionados. Destaca-se a escolha de uma abordagem orientada a objetos para o projeto, de forma a facilitar a extens\u00e3o e o reuso. A modelagem computacional do framework \u00e9 ent\u00e3o apresentada, com uma vis\u00e3o geral e aspectos dos seus componentes. Maneiras de estender e especializar componentes e o pr\u00f3prio framework s\u00e3o ent\u00e3o avaliadas.\n5.1\tMOTIVA\u00c7\u00c3O\nA proposta de desenvolvimento de um framework para modelagem cinem\u00e1tica por helicoides surgiu da necessidade de sistematizar e facilitar a implementa\u00e7\u00e3o de simula\u00e7\u00f5es dos sistemas de interven\u00e7\u00e3o subaqu\u00e1tica estudados. Observou-se que as ferramentas usualmente empregadas para esse fim n\u00e3o cont\u00e9m componentes de software que representem as entidades inerentes \u00e0 modelagem por helicoides e \u00e0s opera\u00e7\u00f5es necess\u00e1rias para seu uso. Al\u00e9m disso, os conceitos de modularidade de cadeias e seu reparticionamento, tal qual expostos no cap\u00edtulo anterior, deveriam ser implementados como extens\u00f5es de uma eventual biblioteca de helicoides j\u00e1 existente.\nOutra motiva\u00e7\u00e3o para a cria\u00e7\u00e3o do framework foi a possibilidade de se organizar um banco de dados de descri\u00e7\u00f5es de cadeias cinem\u00e1ticas que poderiam ser reutilizadas em v\u00e1rias simula\u00e7\u00f5es. Isso se daria atrav\u00e9s da leitura e processamento de um arquivo (ou um registro de um SGBD1) de descri\u00e7\u00e3o por parte de um componente de software que gerasse um modelo funcional da cadeia para uso em uma simula\u00e7\u00e3o ou mesmo em uma implementa\u00e7\u00e3o real. Outros usos desse banco de descri\u00e7\u00f5es envolveriam a composi\u00e7\u00e3o de cadeias mais complexas, sistematizando e estendendo o desenvolvimento de novos cen\u00e1rios de simula\u00e7\u00e3o.\nPor fim, uma vez que se desejava tamb\u00e9m explorar a possibilidade de automatizar a variabilidade do modelo cinem\u00e1tico ao longo da\n1 Sistema Gerenciador de Banco de Dados.\nexecu\u00e7\u00e3o de tarefas, concluiu-se que o uso de um framework que sistematizasse esse modelamento e atendesse \u00e0s demandas para reconfigura\u00e7\u00e3o e particionamento de cadeias atrav\u00e9s de reuso seria mais vantajoso do que implementar cada modelo cinem\u00e1tico como um novo caso.\n5.2\tREQUISITOS DE PROJETO\nA an\u00e1lise inicial do processo de modelagem cinem\u00e1tica por heli-coides, sua componentiza\u00e7\u00e3o e sua variabilidade, bem como o modo de aplica\u00e7\u00e3o dos modelos para a resolu\u00e7\u00e3o cinem\u00e1tica de tarefas em simula\u00e7\u00f5es, resultou na identifica\u00e7\u00e3o de requisitos que deveriam ser considerados no projeto de um framework para esse fim (Rocha; Tonetto; Dias, 2011a). A capacidade de representar helicoides, seus comportamentos e opera\u00e7\u00f5es realizadas sobre eles (como transforma\u00e7\u00f5es de referenciais) \u00e9 um requisito prim\u00e1rio, pois estes s\u00e3o elementos b\u00e1sicos da modelagem cinem\u00e1tica.\nA capacidade de representar cadeias cinem\u00e1ticas de forma sistem\u00e1tica e estruturada \u00e9 outro requisito prim\u00e1rio. Uma entidade do framework capaz de representar toda uma cadeia cinem\u00e1tica deve ser capaz de fornecer as informa\u00e7\u00f5es usualmente utilizadas na an\u00e1lise cinem\u00e1tica por helicoides. Isso implica na obten\u00e7\u00e3o de grafos de movimento que definam a rela\u00e7\u00e3o entre os elos da cadeia (ou mesmo em utiliz\u00e1-los nas estruturas de dados de representa\u00e7\u00e3o). No caso de cadeias fechadas, ter a possibilidade de se obter um conjunto de circuitos independentes, de forma que seja poss\u00edvel definir a equa\u00e7\u00e3o de restri\u00e7\u00e3o da cadeia. A automa\u00e7\u00e3o da resolu\u00e7\u00e3o cinem\u00e1tica atrav\u00e9s do m\u00e9todo de Davies \u00e9 uma a\u00e7\u00e3o desej\u00e1vel, desde que para isso seja poss\u00edvel definir o partici-onamento da equa\u00e7\u00e3o de restri\u00e7\u00e3o na estrutura de dados da cadeia.\nVisando a componentiza\u00e7\u00e3o de cadeias, essa entidade deve ser capaz de representar tanto cadeias simples (formadas por elos e juntas) quanto cadeias compostas (formadas por elos, juntas e subcadeias). Uma adapta\u00e7\u00e3o do conceito de joint in the bag (Phillips, 2007) \u00e9 uma forma de tratar juntas simples e subcadeias em uma mesma modelagem, como elementos que vinculam dois elos impondo uma restri\u00e7\u00e3o de movimento relativo entre eles. Para facilitar a reconfigura\u00e7\u00e3o de cadeias, devem existir m\u00e9todos que permitam adicionar e remover elos e conex\u00f5es entre eles (sejam juntas ou subcadeias). Da mesma forma, o reparticionamento deve ser de f\u00e1cil execu\u00e7\u00e3o. As modifica\u00e7\u00f5es nessa entidade devem ent\u00e3o ser refletidas na obten\u00e7\u00e3o de informa\u00e7\u00f5es do modelo, tais como a matriz de circuitos, a equa\u00e7\u00e3o de restri\u00e7\u00e3o e mesmo\na sua resolu\u00e7\u00e3o pelo m\u00e9todo de Davies.\nUm requisito desej\u00e1vel para o framework \u00e9 a capacidade de descrever as cadeias cinem\u00e1ticas em forma de texto estruturado. Al\u00e9m de simplificar a defini\u00e7\u00e3o destas, tal recurso facilita a implementa\u00e7\u00e3o de um banco de dados de cadeias, bem como seu reuso. Para tanto, o framework deve prover um analisador de descri\u00e7\u00f5es e gerador de entidades que representem as cadeias. O uso de alguma linguagem estruturada de descri\u00e7\u00e3o de dados como a XML (eXtended Markup Language)(D\u00e9cio, 2000; W3C, 2011) favorece o uso de ferramentas computacionais prontas para tratamento desse formato de dados.\nA modularidade \u00e9 um requisito importante para a ado\u00e7\u00e3o do framework em diferentes casos, tanto em simula\u00e7\u00f5es quanto em casos reais. Um conjunto de componentes de software modulares, com comportamentos bem definidos e conhecidos, d\u00e1 ao usu\u00e1rio a possibilidade de fazer diferentes combina\u00e7\u00f5es desses componentes para adequ\u00e1-los \u00e0s suas necessidades. Al\u00e9m disso, a substitui\u00e7\u00e3o de componentes com comportamentos iguais (ou de vers\u00f5es aprimoradas) \u00e9 feita sem um impacto grande sobre o c\u00f3digo implementado. Com isso, pode-se trabalhar com componentes que fa\u00e7am a interface com um sistema f\u00edsico (um manipulador, por exemplo) ou com um modelo matem\u00e1tico que o simule. Isso \u00e9 \u00fatil quando da transposi\u00e7\u00e3o de um c\u00f3digo desenvolvido e testado em um ambiente simulado para um ambiente real.\nA extensibilidade \u00e9 outro requisito identificado como importante para o framework. A capacidade de estender e criar novas representa\u00e7\u00f5es para as cadeias cinem\u00e1ticas e seus componentes \u00e9 importante para viabilizar otimiza\u00e7\u00f5es de desempenho, corre\u00e7\u00f5es de erros ou implementa\u00e7\u00f5es de situa\u00e7\u00f5es n\u00e3o previstas na an\u00e1lise inicial do sistema. A extensibilidade \u00e9 muitas vezes associada \u00e0 modularidade, pelo fato de que pode-se criar novos m\u00f3dulos para um determinado fim que mantenham o comportamento b\u00e1sico de m\u00f3dulos j\u00e1 existentes, facilitando a sua adapta\u00e7\u00e3o em software j\u00e1 desenvolvido e o seu uso por parte dos usu\u00e1rios do framework. A extensibilidade tamb\u00e9m permite considerar a especializa\u00e7\u00e3o de entidades, pela cria\u00e7\u00e3o de novos componentes que mantenham os comportamentos definidos, mas realizando as opera\u00e7\u00f5es de formas diferentes. Isso muitas vezes \u00e9 feito para otimizar desempenho de execu\u00e7\u00e3o dos c\u00f3digos, \u00e0s custas de perda de generalidade.\nUma vez que o framework deve lidar com diferentes tipos de cadeias cinem\u00e1ticas, e que a resolu\u00e7\u00e3o de sua cinem\u00e1tica \u00e9 feita em fun\u00e7\u00e3o de especifica\u00e7\u00f5es de movimentos e restri\u00e7\u00f5es para as suas vari\u00e1veis prim\u00e1rias, observou-se que um requisito desej\u00e1vel \u00e9 o de se ter um conjunto de interpoladores de trajet\u00f3ria que forne\u00e7a esses valores em fun\u00e7\u00e3o dos\ncaminhos especificados nas tarefas. Assim, ser\u00e3o geradas as estruturas de dados compat\u00edveis com as que devem ser utilizadas para especificar posi\u00e7\u00f5es e velocidades das juntas. \u00c9 importante definir o comportamento b\u00e1sico desses interpoladores, com algumas implementa\u00e7\u00f5es que viabilizem testes de funcionamento e que, atrav\u00e9s das caracter\u00edsticas de modularidade e extensibilidade do framework, permitam aos usu\u00e1rios implementarem de forma sistem\u00e1tica os geradores de trajet\u00f3ria que precisem.\nPor fim, uma vez que se deseja utilizar o framework tanto em implementa\u00e7\u00f5es reais (que executam em um programa embarcado no sistema dos UVMS) quanto em simula\u00e7\u00f5es, bem como para an\u00e1lise, verificou-se que \u00e9 importante que esses componentes funcionem tanto em ambientes interativos (caracter\u00edsticos de ambientes de computa\u00e7\u00e3o num\u00e9rica/simb\u00f3lica) quanto em software completo (que roda autonomamente, sem interven\u00e7\u00e3o direta de usu\u00e1rios no seu fluxo de execu\u00e7\u00e3o). Esse requisito influencia o modo como os comportamentos devem ser invocados para execu\u00e7\u00e3o, bem como na defini\u00e7\u00e3o de estruturas de dados que usu\u00e1rios possam manipular diretamente. Al\u00e9m disso, esse requisito tem influ\u00eancia direta na escolha de uma plataforma computacional de desenvolvimento. A escolha da plataforma computacional e aspectos de implementa\u00e7\u00e3o do framework s\u00e3o o tema do Ap\u00eandice B.\n5.3\tO ENFOQUE ORIENTADO A OBJETOS\nA ado\u00e7\u00e3o do paradigma da orienta\u00e7\u00e3o a objetos para o desenvolvimento do framework baseou-se na sua adequa\u00e7\u00e3o para o atendimento de v\u00e1rios requisitos do projeto, na grande base de conhecimento existente sobre a an\u00e1lise e o desenvolvimento de sistemas e na experi\u00eancia pr\u00e9via com esta abordagem. Os quatro princ\u00edpios fundamentais de constru\u00e7\u00e3o de sistemas orientados a objetos - abstra\u00e7\u00e3o, encapsulamento, heran\u00e7a e polimorfismo - garantem os requisitos de modula-riza\u00e7\u00e3o/componentiza\u00e7\u00e3o, extensibilidade e especializa\u00e7\u00e3o (Pressman, 1995; Fowler, 2004).\nO encapsulamento e a abstra\u00e7\u00e3o permitem descrever comportamentos aos objetos de forma que os usu\u00e1rios destes n\u00e3o se preocupem com sua real implementa\u00e7\u00e3o, facilitando a utiliza\u00e7\u00e3o destes componentes e tamb\u00e9m o seu desenvolvimento por diferentes programadores.\nA heran\u00e7a e o polimorfismo permitem definir hierarquias de classes de objetos que tem comportamentos similares executando a\u00e7\u00f5es distintas de acordo com as especificidades de cada classe. Com isso\ndefine-se um comportamento padr\u00e3o para geradores de trajet\u00f3ria que permite empreg\u00e1-los da mesma maneira independentemente dos algoritmos neles implementados, por exemplo. Assim, sabendo como utilizar uma das classes de uma hierarquia, \u00e9 poss\u00edvel utilizar ou substituir uma inst\u00e2ncia de outra classe da mesma hierarquia.\nAl\u00e9m disso, foi poss\u00edvel relacionar as entidades utilizadas na an\u00e1lise cinem\u00e1tica dos cap\u00edtulos anteriores com classes de objetos. Esse relacionamento foi poss\u00edvel n\u00e3o apenas na defini\u00e7\u00e3o de estruturas de dados, mas tamb\u00e9m na defini\u00e7\u00e3o de comportamentos/a\u00e7\u00f5es que as entidades normalmente realizam e nos interrelacionamentos entre elas.\nApesar dos ambientes de computa\u00e7\u00e3o num\u00e9rica usualmente empregados em simula\u00e7\u00f5es n\u00e3o se basearem na orienta\u00e7\u00e3o a objetos, \u00e9 poss\u00edvel adaptar implementa\u00e7\u00f5es para programa\u00e7\u00e3o estruturada, com alguma perda de caracter\u00edsticas que tornam a orienta\u00e7\u00e3o a objetos vantajosa. Por outro lado, v\u00e1rias plataformas de desenvolvimento de software j\u00e1 se baseiam no paradigma de orienta\u00e7\u00e3o a objetos, o que torna a implementa\u00e7\u00e3o direta. Java, Python e C++ s\u00e3o t\u00edpicos exemplos de linguagens de programa\u00e7\u00e3o orientadas a objetos que s\u00e3o utilizadas em engenharia (Deitel; Deitel, 2004; Python.org, 2011; Ziviani, 2006).\nA Unified Modeling Language, ou UML, foi usada para descrever o projeto e facilitar sua an\u00e1lise e implementa\u00e7\u00e3o, em particular o diagrama de classes. Al\u00e9m de ser um padr\u00e3o de facto da \u00e1rea de desenvolvimento de software, a UML tem aplica\u00e7\u00f5es em diferentes campos do conhecimento, e \u00e9 mantida e padronizada por um \u00f3rg\u00e3o gestor(Fowler, 2004; Booch; Rumbaugh; Jacobson, 1999). Assim, pretende-se que a documenta\u00e7\u00e3o do framework seja facilmente compreendida por desenvolvedores que queiram colaborar com o seu desenvolvimento futuro.\nUma das caracter\u00edsticas particulares de ter-se adotado o paradigma da orienta\u00e7\u00e3o a objetos para o projeto do framework foi observar que algumas classes, atributos e m\u00e9todos enquadravam-se em casos bastante estudados na literatura conhecidos como padr\u00f5es de projeto (Metsker, 2004). Assim, foi poss\u00edvel adotar solu\u00e7\u00f5es j\u00e1 definidas e consagradas pelos desenvolvedores de sistemas, com ganhos de tempo de projeto e de implementa\u00e7\u00e3o.\n5.4\tMODELAGEM DO FRAMEWORK\nO framework foi denominado Kast, acr\u00f4nimo de Kinematic Analysis by Screw Theory, ou An\u00e1lise Cinem\u00e1tica por Teoria dos Helicoides, em portugu\u00eas. A ideia era ter um nome curto, por\u00e9m significativo da\nfinalidade do framework2.\n5.4.1\tVis\u00e3o Geral\nO diagrama de classes da Figura 31 apresenta uma vis\u00e3o geral dos componentes do framework Kast. S\u00e3o apresentadas as principais classes, al\u00e9m de algumas que s\u00e3o usadas na composi\u00e7\u00e3o ou transforma\u00e7\u00e3o das primeiras.\nO framework se concentra na hierarquia de classes que parte de KCComponent. Tanto helicoides quanto cadeias cinem\u00e1ticas s\u00e3o implementados como classes derivadas dessa classe base. Em KCComponent define-se um conjunto de atributos e m\u00e9todos comuns a helicoides e cadeias cinem\u00e1ticas. O comportamento diferenciado dos m\u00e9todos \u00e9 descrito na implementa\u00e7\u00e3o das classes espec\u00edficas. Al\u00e9m disso, nestas s\u00e3o definidos novos m\u00e9todos a atributos inerentes \u00e0s particularidades das entidades que representam. Por\u00e9m, a assinatura b\u00e1sica definida em KCComponent facilita o aprendizado de uso de todas as classes dessa hierarquia.\nNas cadeias cinem\u00e1ticas, destaca-se a classe KCComposable, que as representa de modo totalmente configur\u00e1vel. Inst\u00e2ncias dessa classe permitem definir a estrutura da cadeia cinem\u00e1tica atrav\u00e9s da adi\u00e7\u00e3o e remo\u00e7\u00e3o de elos e juntas em um grafo de movimento. Os v\u00e9rtices s\u00e3o inst\u00e2ncias da classe Link e as arestas s\u00e3o inst\u00e2ncias da classe Joint, que representam elos e juntas, respectivamente.\nTamb\u00e9m s\u00e3o relacionadas classes de suporte a opera\u00e7\u00f5es com helicoides, como a ScrewTransformation. Esta representa uma transforma\u00e7\u00e3o de helicoides, cuja matriz \u00e9 calculada em fun\u00e7\u00e3o de informa\u00e7\u00f5es de posi\u00e7\u00e3o e orienta\u00e7\u00e3o de um referencial em rela\u00e7\u00e3o ao outro. Estas s\u00e3o supridas por uma interface padronizada definida na classe Posture e implementada por suas classes derivadas. As principais classes de objetos que representam atributos de KCComponent e associados s\u00e3o a Attribute, AttributeList e State. Uma classe auxiliar \u00e0 manipula\u00e7\u00e3o de descri\u00e7\u00f5es textuais \u00e9 a KCFactory, que utiliza inst\u00e2ncias de KCParser para analisar o c\u00f3digo dessas descri\u00e7\u00f5es.\nNa an\u00e1lise do diagrama de classes, s\u00e3o identificadas situa\u00e7\u00f5es onde as t\u00e9cnicas de padr\u00f5es de projeto podem ser aplicadas. Tais t\u00e9cnicas s\u00e3o solu\u00e7\u00f5es generalizadas para problemas de modelagem estrutural em software orientado a objetos. Esses padr\u00f5es definidos, testados e do-\n2Ao longo do texto, esse nome poder\u00e1 aparecer em letras mai\u00fasculas ou min\u00fasculas, ou seja, KAST, Kast ou kast t\u00eam o mesmo significado.\ncumentados na literatura definem rela\u00e7\u00f5es entre classes de um sistema. Os padr\u00f5es podem ser reutilizados em casos onde se perceba a ocorr\u00eancia de situa\u00e7\u00f5es similares, mesmo que entre dom\u00ednios de problemas totalmente diferentes entre si.\nFigura 31. Diagrama de classes do framework Kast\nO padr\u00e3o composite descreve rela\u00e7\u00f5es entre pe\u00e7as que por sua vez podem ser compostas por pe\u00e7as menores de mesma natureza. Ele est\u00e1 presente na representa\u00e7\u00e3o de cadeias cinem\u00e1ticas, onde uma conex\u00e3o entre dois elos pode ser tanto uma junta quanto uma subcadeia.\nO padr\u00e3o observer, apesar de n\u00e3o aparente, torna-se necess\u00e1rio para que as modifica\u00e7\u00f5es em componentes dos helicoides e cadeias cinem\u00e1ticas sejam percebidas pelos objetos que os cont\u00e9m e o acesso a suas informa\u00e7\u00f5es reflitam essas modifica\u00e7\u00f5es. Para tanto, as classes apresentadas no diagrama herdam caracter\u00edsticas de classes que implementam uma adapta\u00e7\u00e3o de observer denominadas Listener e Subject.\nO padr\u00e3o fa\u00e7ade aparece na defini\u00e7\u00e3o de uma interface comum para acesso a tipos de dados diferentes por parte de um mesmo objeto. Esse \u00e9 o caso da classe Posture, cujas classes dela derivadas fornecem um mesmo m\u00e9todo para fornecer dados para inst\u00e2ncias de ScrewTransformation calcularem sua matriz de transforma\u00e7\u00e3o.\nAl\u00e9m desses, cita-se ainda o caso do padr\u00e3o factory method implementado pela classe KCFactory, que instancia objetos da hierarquia de KCComponent a partir de descri\u00e7\u00f5es textuais armazenadas em arquivos ou em vari\u00e1veis.\nEmbora n\u00e3o fosse o objetivo inicial do framework, uma hierarquia de classes geradoras de trajet\u00f3rias tamb\u00e9m foi definida. Tal desenvolvimento se justifica pelo uso destes na obten\u00e7\u00e3o de refer\u00eancias de movimento pela interpola\u00e7\u00e3o de pontos de caminhos especificados nas tarefas. Assim, decidiu-se por definir uma assinatura de classe composta por estruturas de dados e a\u00e7\u00f5es que facilitassem a comunica\u00e7\u00e3o de dados entre a tarefa e as inst\u00e2ncias de cadeias cinem\u00e1ticas, que por sua vez resolver\u00e3o a cinem\u00e1tica a partir desses dados. Estes, por sua vez, s\u00e3o representados pelas classes State e StateList. Junto com essa hierarquia, tamb\u00e9m foi definida uma implementa\u00e7\u00e3o de factory method embutida na classe TrajFactory para an\u00e1lise e cria\u00e7\u00e3o de geradores de trajet\u00f3ria a partir de descri\u00e7\u00f5es textuais de tarefas.\nAs defini\u00e7\u00f5es das classes mais importantes para uso do framework s\u00e3o discutidas a seguir, de modo a facilitar seu entendimento para o usu\u00e1rio do Kast em suas implementa\u00e7\u00f5es ou mesmo para estender o framework.\n5.4.2 A Classe KCComponent\nA classe KCComponent \u00e9 a funda\u00e7\u00e3o de classes que representam tanto helicoides quanto cadeias cinem\u00e1ticas. A ado\u00e7\u00e3o de uma raiz\ncomum a essas entidades foi a percep\u00e7\u00e3o de que havia similaridades em boa parte das estruturas de dados bem como em certos comportamentos. Assim, KCComponent define uma assinatura b\u00e1sica para uso dessas entidades e um conjunto de dados comuns a elas.\nEm rela\u00e7\u00e3o \u00e0s estruturas de dados, s\u00e3o cinco as fundamentais, que s\u00e3o definidas na instancia\u00e7\u00e3o de objetos de uma classe e podem ser manipuladas atrav\u00e9s de propriedades3 da classe:\nidentity \u00c9 um identificador de uma entidade. Identidades s\u00e3o inst\u00e2ncias da classe Identity, que cont\u00e9m propriedades que define um identificador num\u00e9rico \u00fanico (id), um nome textual (name) e um texto descritivo (description). identity \u00e9 implementado como um dicion\u00e1rio, ou seja, como se fosse organizado em pares chave-valor. Al\u00e9m disso, \u00e9 poss\u00edvel definir atributos adicionais, o que torna-se importante para definir a ordem de processamento de he-licoides no processamento da matriz de rede da classe KCCompo-sable, por exemplo. Outra finalidade dessa informa\u00e7\u00e3o \u00e9 descrever entidades em uma interface gr\u00e1fica com o usu\u00e1rio.\nsystem Defini\u00e7\u00e3o do sistema de helicoides da entidade. Ele \u00e9 definido por um vetor de seis elementos com valores 1 e 0, descrevendo quais componentes de um helicoide s\u00e3o utilizados nos c\u00e1lculos (1\u2019s). Para isso, assume-se que um helicoide expresso em coordenadas de Pl\u00fccker tem a forma [wx\tvx vy vz]T. Os sistemas\nmais comuns de helicoides s\u00e3o definidos e nomeados na classe Defs para facilitar o uso.\nattributes S\u00e3o dados que n\u00e3o costumam variar ao longo do tempo, mas que s\u00e3o par\u00e2metros de defini\u00e7\u00e3o de um helicoide ou uma cadeia cinem\u00e1tica. \u00c9 uma inst\u00e2ncia da classe AttributeList, que \u00e9 uma implementa\u00e7\u00e3o de dicion\u00e1rio que notifica a outros objetos que monitoram mudan\u00e7as nos valores de cada chave. Dimens\u00f5es de elos, por exemplo, s\u00e3o armazenadas nesse dicion\u00e1rio.\nstate S\u00e3o dados que variam ao longo do tempo, e que normalmente est\u00e3o envolvidos no movimento de cadeias, como as vari\u00e1veis de juntas. Para isso, foi criada uma classe denominada State, que essencialmente \u00e9 uma matriz indexada por uma chave textual (o nome de uma vari\u00e1vel) e um indicador do tipo de dado solicitado (posi\u00e7\u00e3o, velocidade ou acelera\u00e7\u00e3o).\n3 M\u00e9todos getters e setters, que retornam uma informa\u00e7\u00e3o ou definem uma informa\u00e7\u00e3o, respectivamente.\nnumeric \u00c9 uma matriz que armazena valores num\u00e9ricos de um helicoide (ou de uma matriz de helicoides de uma cadeia). Os valores s\u00e3o calculados por m\u00e9todos das inst\u00e2ncias de classes derivadas de KCComponent, a partir de dados de attributes e state.\nTodos esses dados, com exce\u00e7\u00e3o de identity, podem ser compartilhados entre diferentes inst\u00e2ncias de classes derivadas de KCComponent. Isso garante economia de defini\u00e7\u00e3o de dados para v\u00e1rias entidades usadas em um c\u00f3digo. No caso de uma cadeia cinem\u00e1tica, os seus dados s\u00e3o compartilhados para os helicoides que fazem parte dela a fim de que sejam calculados os seus componentes. Para isso, pode-se criar as inst\u00e2ncias dessas estruturas de dados antes de instanciar os objetos da hierarquia de KCComponent e utilizar essas estruturas na instancia\u00e7\u00e3o dos helicoides e cadeias. Uma representa\u00e7\u00e3o gr\u00e1fica de attributes e state \u00e9 apresentada na Figura 32.\nClasse Attribute\nChave\tValor\n\u201911\u2019\t1\n\u2019\u00bf2\u2019\t0,5\n\u201913\u2019\t1\nX \u2019\t0,8\n\u2019V3y1 \u2019\t0,5\nXs\u2019\t-0,5\n(a) attributes\nClasse State\nAcelera\u00e7\u00e3o\nFigura 32. Representa\u00e7\u00e3o gr\u00e1fica de estruturas de dados usadas em KCComponent\nAl\u00e9m de acesso \u00e0s informa\u00e7\u00f5es, s\u00e3o definidos alguns comportamentos b\u00e1sicos, como magnitude, que deve retornar o valor da magnitude dos helicoides, de forma complementar a numeric, que deve retornar os helicoides propriamente ditos (na maioria dos casos, helicoides normalizados). update seria o m\u00e9todo que faz o c\u00e1lculo dos valores dos helicoides e eventualmente da magnitude, dependendo da classe que o implementa.\nKCComponent \u00e9 uma classe abstrata, ou seja, n\u00e3o \u00e9 poss\u00edvel instanciar objetos a partir dela. Parte dos m\u00e9todos definidos s\u00e3o apenas\nassinaturas, que devem ser implementadas em cada especializa\u00e7\u00e3o nas classes derivadas. \u00c9 o caso de update, que executa a\u00e7\u00f5es diferentes de acordo com o tipo de objeto. Al\u00e9m disso, esse m\u00e9todo \u00e9 concebido privado, ou seja, n\u00e3o deveria ser invocado externamente a um objeto. M\u00e9todos com essa visibilidade s\u00e3o executados apenas por outros m\u00e9todos da classe. No caso de update, ele \u00e9 invocado cada vez que alguma informa\u00e7\u00e3o sobre os helicoides fosse acessada atrav\u00e9s de uma propriedade.\n5.4.3\tHelicoides e Juntas\nNo Kast, helicoides s\u00e3o representados por inst\u00e2ncias de Screw, NormalizedScrew ou Joint. As tr\u00eas classes s\u00e3o derivadas de ScrewImpl, que por sua vez descende da classe BaseScrew. Estas duas \u00faltimas classes especializam a defini\u00e7\u00e3o inicial da classe raiz KCComponent.\nA classe BaseScrew acrescenta algumas propriedades e m\u00e9todos. O passo do helicoide \u00e9 definido pelo atributo type, que \u00e9 um escalar. O nome do atributo se deve aos atalhos para juntas rotacionais (passo 0) e translacionais (passo to) definidos na classe de apoio Defs. O outro atributo \u00e9 components, cuja finalidade \u00e9 descrever como os componentes do helicoide s\u00e3o definidos. Al\u00e9m disso, deve-se incluir dois atributos na defini\u00e7\u00e3o da identidade de um descendente de BaseScrew: var e order. O primeiro \u00e9 o nome da chave do atributo state correspondente \u00e0 magnitude do helicoide (e no caso de uma junta, que tamb\u00e9m armazena sua posi\u00e7\u00e3o e acelera\u00e7\u00e3o). O segundo indica a ordem de processamento desse helicoide durante a atualiza\u00e7\u00e3o de uma cadeia, al\u00e9m de definir sua posi\u00e7\u00e3o na matriz de rede e no vetor de magnitudes correspondente.\nA implementa\u00e7\u00e3o dessa assinatura come\u00e7a a ser feita na classe ScrewImpl. Nela, components pode tanto ser uma fun\u00e7\u00e3o que calcula todos os componentes de helicoide (preenchendo a matriz numeric) quanto um vetor de seis elementos, um para cada componente do helicoide, que podem ser um escalar ou uma fun\u00e7\u00e3o que define somente aquele componente. A implementa\u00e7\u00e3o do m\u00e9todo update utiliza components para executar o c\u00e1lculo do helicoide.\nA classe Screw \u00e9 uma implementa\u00e7\u00e3o que segue a express\u00e3o de um helicoide t\u00edpico em coordenadas de Pl\u00fccker, sendo mais usado para estudo dos helicoides propriamente ditos do que em cadeias cinem\u00e1ticas. A implementa\u00e7\u00e3o do m\u00e9todo decompose, definido em BaseScrew, retorna uma tupla formada pela magnitude do helicoide e por seu he-licoide normalizado.\nNormalizedScrew \u00e9 uma implementa\u00e7\u00e3o ligeiramente diferente de Screw onde o helicoide \u00e9 sempre normalizado. Assim, o m\u00e9todo update sempre normaliza os componentes calculados e a magnitude retornada \u00e9 sempre igual a 1 .\nVisando o uso em cadeias cinem\u00e1ticas, implementou-se a classe Joint. Esta decomp\u00f5e o helicoide em seu helicoide normalizado e sua magnitude. Em Joint, a magnitude pode ser definida por sua propriedade, e o helicoide \u00e9 sempre normalizado ap\u00f3s ser calculado. A magnitude \u00e9 vinculada ao campo velocidade da vari\u00e1vel correspondente do dicion\u00e1rio state.\n5.4.4\tCadeias Cinem\u00e1ticas\nCadeias cinem\u00e1ticas s\u00e3o representadas por classes derivadas de BaseKinematicChain e KinematicChain. A primeira classe define a assinatura b\u00e1sica de objetos que representam cadeias cinem\u00e1ticas. Embora a princ\u00edpio n\u00e3o apresente diferen\u00e7as conceituais em rela\u00e7\u00e3o \u00e0 KCCom-ponent, a sua exist\u00eancia se justifica pela defini\u00e7\u00e3o de uma interface que pode ser modificada em evolu\u00e7\u00f5es do framework, sem que com isso as classes de helicoides acabem sofrendo a modifica\u00e7\u00e3o. KinematicChain \u00e9 derivada de BaseKinematicChain, acrescentando m\u00e9todos e atributos nessa especializa\u00e7\u00e3o. A especializa\u00e7\u00e3o de cadeias pode se dar por qualquer das duas classes, embora observe-se que KinematicChain tem m\u00e9todos e atributos mais voltados para cadeias fechadas.\nO atributo partitioning \u00e9 um acr\u00e9scimo em rela\u00e7\u00e3o \u00e0 KCCom-ponent, e serve para definir quais vari\u00e1veis de juntas de uma cadeia fechada s\u00e3o prim\u00e1rias e secund\u00e1rias, de forma que o m\u00e9todo solveDa-vies possa ser executado. Como o nome diz, o m\u00e9todo determina as magnitudes das velocidades de juntas definidas como secund\u00e1rias em fun\u00e7\u00e3o das juntas prim\u00e1rias. Para definir esse particionamento, partitioning consiste em um vetor de tamanho igual ao n\u00famero de helicoides da cadeia cinem\u00e1tica onde cada c\u00e9lula indica se um helicoide est\u00e1 na parti\u00e7\u00e3o prim\u00e1ria (com valor 1) ou secund\u00e1ria (com valor 0).\nPara a execu\u00e7\u00e3o do m\u00e9todo solveDavies, que \u00e9 implementado na pr\u00f3pria classe KinematicChain, \u00e9 necess\u00e1rio que o m\u00e9todo update seja especializado, de forma a calcular todos os helicoides normalizados da cadeia, organiz\u00e1-los na matriz de helicoides (armazenada no atributo numeric), e montar a matriz de rede (armazenada no atributo netMa-trix). update n\u00e3o \u00e9 implementada nessa classe, devendo s\u00ea-lo nas classes derivadas.\nUma implementa\u00e7\u00e3o concreta e funcional de cadeia cinem\u00e1tica \u00e9 a classe KCComposable. Ela \u00e9 voltada para a modelagem din\u00e2mica da cadeia atrav\u00e9s da defini\u00e7\u00e3o de sua estrutura usando um grafo de movimento ao qual s\u00e3o vinculados elos (inst\u00e2ncias da classe Link) e juntas (defini\u00e7\u00f5es de heligiros instanciadas da classe Joint). Essa implementa\u00e7\u00e3o \u00e9 interessante em trabalhos interativos de defini\u00e7\u00e3o de cadeias cinem\u00e1ticas, para seu projeto e an\u00e1lise. Outra utilidade \u00e9 a automa\u00e7\u00e3o do trabalho de modelagem por software com interfaces gr\u00e1ficas com o usu\u00e1rio.\nA flexibilidade de defini\u00e7\u00e3o de elos e juntas se d\u00e1 atrav\u00e9s de m\u00e9todos para manipular essas entidades (addLink, delLink, addJoint, del-Joint, entre outros). As inst\u00e2ncias de Link compartilham as defini\u00e7\u00f5es de estruturas de dados identity e attributes.\nO m\u00e9todo update de KCComposable \u00e9 definido de forma a otimizar o c\u00e1lculo da matriz de rede, mesmo com tantos dados. Para tanto, assume-se que, uma vez definida a estrutura do grafo de movimento e determinados sua matriz de circuitos e a matriz de helicoides, novas atualiza\u00e7\u00f5es das vari\u00e1veis de juntas apenas necessitar\u00e3o de atualiza\u00e7\u00f5es da matriz de helicoides e preenchimento da matriz de rede. O pseudoc\u00f3digo do Algoritmo 1 resume esses passos.\nAlgoritmo 1. Pseudoc\u00f3digo de KCComposable.update se atualizacao = total ent\u00e3o calcularMatrizDeCircuitosO; redimensionarMatrizDeRedeO;\natualizacao normal;\nfim se\npara cada junta j de grafoDeMovimento fa\u00e7a\n| j.atualizar();\nfim para cada preencheMatrizDeRede();\nUm m\u00e9todo adicional para auxiliar o acesso aos dados da cadeia por parte dos helicoides \u00e9 o pack. Ele tem a finalidade de unificar os conjuntos de atributos attributes, state e numeric reunindo os dados de outras inst\u00e2ncias desses atributos que eventualmente algum elo ou junta utilizem. Novos conjuntos de atributos criados pelo m\u00e9todo, que re\u00fane todas essas defini\u00e7\u00f5es, substituem os conjuntos individuais em todos os elos e juntas da cadeia. Assim, todas as entidades compartilham o mesmo conjunto de dados.\nUm formato de descri\u00e7\u00e3o textual de cadeias utilizando KCComposable, baseado em XML, foi definido para facilitar tanto a cria\u00e7\u00e3o dessas cadeias quanto o seu reuso. Arquivos contendo essas descri\u00e7\u00f5es podem ser utilizados para criar inst\u00e2ncias de KCComposable atrav\u00e9s de objetos da classe KCFactory. Esta funciona como um padr\u00e3o de projeto factory method, cuja finalidade \u00e9 a de criar objetos de uma fam\u00edlia de classes em fun\u00e7\u00e3o de defini\u00e7\u00f5es externas. Classes de analisadores s\u00e3o necess\u00e1rias para isso, implementando a interface definida pela classe base KCParser. Para descri\u00e7\u00f5es de KCComposable, existe uma classe derivada chamada KCComposableParser que faz a an\u00e1lise de elementos espec\u00edficos da descri\u00e7\u00e3o para esse tipo de objetos.\n5.4.5\tGeradores de Trajet\u00f3ria\nA hierarquia de geradores de trajet\u00f3ria foi inclu\u00edda em Kast para complementar o uso das classes de helicoides e cadeias cinem\u00e1ticas na implementa\u00e7\u00e3o de simula\u00e7\u00f5es.\nA fim de compatibilizar as trajet\u00f3rias resultantes dos geradores com as vari\u00e1veis das cadeias cinem\u00e1ticas, ambas utilizam a mesma estrutura de dados baseada na classe State. Isso vale tamb\u00e9m para a especifica\u00e7\u00e3o dos pontos do caminho por onde uma trajet\u00f3ria deve passar (que seria a entrada de dados de um gerador). Para trabalhar com m\u00faltiplos pontos, foi criada uma classe agregadora denominada StateList. Ela funciona como uma lista de inst\u00e2ncias de State, com facilidades de acesso e modifica\u00e7\u00e3o dos valores de um ponto particular, redimensionamento e pesquisa em fun\u00e7\u00e3o de tempo ou de n\u00famero de intera\u00e7\u00f5es.\nA classe raiz dos geradores \u00e9 a Trajectory. Nela \u00e9 definida uma assinatura que deve ser seguida e implementada pelas demais classes geradoras de trajet\u00f3ria. As principais estruturas de dados necess\u00e1rias para um gerador s\u00e3o:\ninterval Identifica o intervalo de tempo em que ocorrer\u00e1 a gera\u00e7\u00e3o de trajet\u00f3ria. \u00c9 composto por tr\u00eas escalares, que definem o instante inicial, o instante final e o passo de itera\u00e7\u00e3o (Os geradores inci-almente implementados s\u00e3o de passo fixo). Esses valores est\u00e3o relacionados de forma que a divis\u00e3o do intervalo pelo passo sempre resulte em um n\u00famero inteiro de itera\u00e7\u00f5es. Para isso, a classe deve prover ajustes nos valores do intervalo para garantir essa condi\u00e7\u00e3o e que o instante inicial e o instante final correspondam \u00e0 primeira e \u00e0 \u00faltima itera\u00e7\u00e3o, respectivamente.\nattributes S\u00e3o dados que servem de par\u00e2metros para o gerador de trajet\u00f3ria. Dependem de implementa\u00e7\u00e3o espec\u00edfica de cada tipo de gerador. \u00c9 uma inst\u00e2ncia da classe AttributeList.\nvars Vetor contendo os nomes das vari\u00e1veis cujas trajet\u00f3rias ser\u00e3o calculadas. \u00c9 utilizado na defini\u00e7\u00e3o da StateList do gerador.\nidentity Inst\u00e2ncia da classe Identity, usada para descrever textualmente o gerador e identific\u00e1-lo unicamente no c\u00f3digo. De interesse para criar interfaces com o usu\u00e1rio.\nPara o caso de geradores baseados em informa\u00e7\u00f5es de caminhos que devem ser seguidos, foi definida a classe derivada TrajectoryFrom-Path, que acrescenta \u00e0s estruturas de dados anteriormente descritas a estrutura path, que \u00e9 uma inst\u00e2ncia de StateList onde cada elemento representa uma refer\u00eancia, com tempo ou intera\u00e7\u00e3o desejada. Cada refer\u00eancia \u00e9 uma inst\u00e2ncia de State, onde cada vari\u00e1vel cont\u00e9m dados de posi\u00e7\u00e3o, velocidade e acelera\u00e7\u00e3o que podem ser especificadas.\nForam definidos quatro geradores de trajet\u00f3ria concretos, para uso imediato do framework e demonstra\u00e7\u00e3o de implementa\u00e7\u00f5es. A classe TrajLinearPoly define trajet\u00f3rias lineares entre cada dois pontos do caminho, utilizando um polin\u00f3mio de 5a ordem para suavizar o movimento. A classe TrajSpline utiliza B-splines c\u00fabicas para gerar uma trajet\u00f3ria que passa por todos os pontos do caminho. Para uniformizar o tratamento de valores constantes, criou-se a classe TrajConst, que retorna um valor constante entre dois pontos de um intervalo do caminho. Para cada uma dessas classes, os m\u00e9todos update e calcPoint s\u00e3o os que implementam o algoritmo de gera\u00e7\u00e3o de trajet\u00f3rias particular.\nSe for necess\u00e1rio que uma trajet\u00f3ria tenha trechos onde diferentes geradores devem ser empregados, pode-se utilizar a classe TrajSe-quence. Ela implementa suporte para definir um conjunto de geradores e respectivos trechos da trajet\u00f3ria em que eles ser\u00e3o empregados.\nO comportamento de todos os geradores, independente de seu algoritmo de gera\u00e7\u00e3o de trajet\u00f3ria ou da defini\u00e7\u00e3o dos dados necess\u00e1rios para seu funcionamento segue uma mesma interface, definida na classe Trajectory. \u00c9 implementado um m\u00e9todo next, que a cada chamada retorna o resultado do c\u00e1lculo de uma itera\u00e7\u00e3o do gerador, avan\u00e7ando o instante de tempo a seguir em um passo de simula\u00e7\u00e3o. Se necess\u00e1rio, pode-se avan\u00e7ar ou retroceder dentro do intervalo de tempo da gera\u00e7\u00e3o utilizando o m\u00e9todo mark. Outra varia\u00e7\u00e3o \u00e9 o m\u00e9todo at, que retorna uma inst\u00e2ncia de State para um instante requerido. O m\u00e9todo generate, por sua vez, gera um StateList com toda a trajet\u00f3ria de uma s\u00f3 vez.\nAssim como no caso das cadeias cinem\u00e1ticas, foi definida uma descri\u00e7\u00e3o textual baseada em XML para caminhos e trajet\u00f3rias. Ela \u00e9 espec\u00edfica para o caso de geradores derivados de TrajectoryFromPath, e por isso consiste na especifica\u00e7\u00e3o de pontos que devem ser percorridos na trajet\u00f3ria com o instante de tempo desejado. Junto com isso, tamb\u00e9m se especificam os geradores de trajet\u00f3ria desejados para as vari\u00e1veis. A classe TrajFactory cria os objetos geradores de trajet\u00f3ria de acordo com as classes especificadas nas descri\u00e7\u00f5es. Para tanto, os dados s\u00e3o analisados por um objeto da classe TrajParser, que cria as estruturas de dados necess\u00e1rias para a instancia\u00e7\u00e3o do gerador de trajet\u00f3ria e descreve para TrajFactory qual dever\u00e1 ser criado. Com isso, \u00e9 poss\u00edvel pensar em definir tarefas diretamente atrav\u00e9s dessas descri\u00e7\u00f5es textuais.\n5.4.6\tExtens\u00e3o e Especializa\u00e7\u00e3o de Cadeias Cinem\u00e1ticas\nO framework foi definido com um conjunto m\u00ednimo de funcionalidades implementadas, por\u00e9m completamente funcional. \u00c9 poss\u00edvel trabalhar exclusivamente com a classe KCComposable para tratar da an\u00e1lise cinem\u00e1tica de cadeias, bem como definir estrat\u00e9gias de planejamento de movimento. Cadeias definidas em objetos KCComposable podem ser definidas pelo usu\u00e1rio em um ambiente interativo, ser dinamicamente modificadas ao longo da execu\u00e7\u00e3o de uma tarefa, al\u00e9m de poderem ser definidas textualmente em um arquivo.\nEssa flexibilidade, apesar de atender \u00e0s necessidades de modelagem cinem\u00e1tica, tem um custo associado relativo ao desempenho dos c\u00e1lculos computacionais. Uma vez que cada helicoide \u00e9 calculado separadamente, as equa\u00e7\u00f5es que os definem s\u00e3o inteiramente calculadas, sendo que alguns trechos s\u00e3o repetidos v\u00e1rias vezes. Al\u00e9m disso, o preenchimento da matriz de rede exige v\u00e1rias c\u00f3pias dos helicoides.\nPor esse motivo, pode ser interessante trabalhar com especializa\u00e7\u00f5es das cadeias cinem\u00e1ticas. Isso \u00e9 feito atrav\u00e9s da cria\u00e7\u00e3o de classes derivadas de KinematicChain, onde o m\u00e9todo update deve ser implementado para realizar o c\u00e1lculo dos helicoides. A\u00ed pode-se definir otimiza\u00e7\u00f5es como o pr\u00e9-calculo de termos que aparecem em v\u00e1rias equa\u00e7\u00f5es, aproveitar resultados de algumas equa\u00e7\u00f5es em outras, evitar c\u00e1lculos de express\u00f5es com resultados constantes e outras que se fizerem necess\u00e1rias. Para tanto, o modelo cinem\u00e1tico deve estar previamente obtido e analisado quanto a otimiza\u00e7\u00f5es de c\u00e1lculos poss\u00edveis.\nA especializa\u00e7\u00e3o de uma determinada cadeia cinem\u00e1tica em uma\nclasse n\u00e3o a torna espec\u00edfica para uma \u00fanica situa\u00e7\u00e3o de an\u00e1lise cinem\u00e1tica. Observa-se que ainda deve-se utilizar as estruturas de dados definidas nas classes base para poder parametrizar essa cadeia quando poss\u00edvel. Assim, apesar de se ter um \u00fanico cen\u00e1rio descrito, pode-se trabalhar com diferentes configura\u00e7\u00f5es dimensionais e especifica\u00e7\u00f5es de tarefas. Um exemplo disso \u00e9 a possibilidade de reparticionar a equa\u00e7\u00e3o de restri\u00e7\u00e3o pela simples modifica\u00e7\u00e3o do atributo partitioning.\nA principal desvantagem de se trabalhar com classes especializadas para uma dada configura\u00e7\u00e3o de cadeia cinem\u00e1tica \u00e9 a perda da reconfigurabilidade, que pode ser necess\u00e1ria em casos como o evita-mento de obst\u00e1culos n\u00e3o previstos. Outra poss\u00edvel desvantagem \u00e9 a perda de clareza da defini\u00e7\u00e3o da cadeia cinem\u00e1tica na implementa\u00e7\u00e3o, que pode tornar dif\u00edcil a manuten\u00e7\u00e3o do c\u00f3digo.\nObserva-se que a ideia de se desenvolver um framework foi definir um conjunto de interfaces que modelassem computacionalmente o problema da an\u00e1lise cinem\u00e1tica por helicoides. Al\u00e9m de ter implementa\u00e7\u00f5es utiliz\u00e1veis dessas interfaces, o objetivo de um framework \u00e9 fornecer uma base para implementa\u00e7\u00f5es, extens\u00e3o e evolu\u00e7\u00e3o de c\u00f3digos, o que n\u00e3o seria o caso de uma biblioteca fechada ou de uma aplica\u00e7\u00e3o espec\u00edfica. Assim, existe um potencial para cria\u00e7\u00e3o e aplica\u00e7\u00e3o do Kast em um grande conjunto de aplica\u00e7\u00f5es que necessitem de an\u00e1lise cinem\u00e1tica por helicoides.\nO projeto do framework Kast foi tratado nesse cap\u00edtulo. A sua estrutura geral e componentes foram descritos, bem como as possibilidades de uso e extens\u00e3o. Al\u00e9m da representa\u00e7\u00e3o de cadeias cinem\u00e1ticas, verificou-se a import\u00e2ncia de se ter componentes para gerar trajet\u00f3rias, que foram acrescidos ao projeto do framework. O Ap\u00eandice B discute aspectos de implementa\u00e7\u00e3o do Kast, com apresenta\u00e7\u00e3o de um exemplo. O Kast auxiliar\u00e1 o uso dos conceitos de componentiza\u00e7\u00e3o e variabilidade de cadeias cinem\u00e1tica para o desenvolvimento de estrat\u00e9gias de planejamento de movimento, que ser\u00e1 abordado no pr\u00f3ximo cap\u00edtulo.\n122\n6\tESTRAT\u00c9GIAS DE PLANEJAMENTO DE MOVIMENTO PARA UVMS EM INTERVEN\u00c7\u00c3O\nNeste cap\u00edtulo discute-se as estrat\u00e9gias para o planejamento de movimento dos sistemas ve\u00edculo-manipulador subaqu\u00e1ticos executando atividades de interven\u00e7\u00e3o. Uma vis\u00e3o geral \u00e9 apresentada, onde os blocos de atividades de UVMS envolvidos no planejamento de movimento s\u00e3o identificados e suas atribui\u00e7\u00f5es definidas. A seguir, uma descri\u00e7\u00e3o algor\u00edtmica da execu\u00e7\u00e3o de uma interven\u00e7\u00e3o \u00e9 analisada, a fim de se poder modelar essa fase de miss\u00e3o. Com base no framework para an\u00e1lise cinem\u00e1tica apresentado no cap\u00edtulo anterior, elabora-se um modelo orientado a objetos de componentes que representam os blocos de atividades do sistema de interven\u00e7\u00e3o subaqu\u00e1tica relevantes para o planejamento de movimento. A partir desse modelo, prop\u00f5e-se ent\u00e3o uma sistematiza\u00e7\u00e3o de implementa\u00e7\u00e3o de estrat\u00e9gias de planejamento de movimento.\n6.1\tVIS\u00c3O GERAL DO PLANEJAMENTO DE MOVIMENTO EM SISTEMAS DE INTERVEN\u00c7\u00c3O\nPara iniciar a an\u00e1lise do problema de planejamento de movimento dos UVMS, procurou-se identificar quais os blocos de atividades de um sistema rob\u00f3tico subaqu\u00e1tico estariam envolvidos na sua resolu\u00e7\u00e3o. Foi considerado o aspecto local da execu\u00e7\u00e3o da interven\u00e7\u00e3o (compreendida como as fases de ativa\u00e7\u00e3o dos manipuladores, execu\u00e7\u00e3o da interven\u00e7\u00e3o e desativa\u00e7\u00e3o dos manipuladores) e a organiza\u00e7\u00e3o de atividades de um UVMS para essas fases estabelecida no Cap\u00edtulo 2. Assim, com base no diagrama da Figura 10 fez-se essa identifica\u00e7\u00e3o, que \u00e9 ressaltada na reapresenta\u00e7\u00e3o do diagrama feita na Figura 33.\nFigura 33. Atividades de UVMS envolvidas nas estrat\u00e9gias de planejamento de movimento\nEm se tratando do planejamento de movimento, as atividades Miss\u00e3o e Guiagem s\u00e3o as diretamente envolvidas. As demais atividades se relacionam com as primeiras fornecendo dados para elas, como \u00e9 o caso da navega\u00e7\u00e3o, ou consumindo as refer\u00eancias de movimento geradas para poder executar as a\u00e7\u00f5es do sistema rob\u00f3tico, como \u00e9 o caso da pilotagem e do acionamento.\nA atividade miss\u00e3o tem como atribui\u00e7\u00f5es avaliar continuamente o estado de opera\u00e7\u00e3o do sistema, definir o modelo cinem\u00e1tico do sistema de interven\u00e7\u00e3o compat\u00edvel com o estado de opera\u00e7\u00e3o e com a tarefa, fornecer refer\u00eancias relacionadas \u00e0 tarefa e determinar o erro de postura do sistema.\nA guiagem, por sua vez, utiliza o modelo cinem\u00e1tico definido por miss\u00e3o para determinar o movimento do sistema necess\u00e1rio para atender \u00e0s especifica\u00e7\u00f5es da tarefa e minimiza\u00e7\u00e3o do erro. Considerando a abordagem por helicoides para a resolu\u00e7\u00e3o cinem\u00e1tica, isso envolve determinar as velocidades dos elementos atuados a partir das refer\u00eancias de velocidade da tarefa e subsequente integra\u00e7\u00e3o para se definirem as posi\u00e7\u00f5es desses elementos.\nPor tarefa, entende-se o conjunto de posi\u00e7\u00f5es e velocidades que o operador do sistema define para os elementos que devem executar a interven\u00e7\u00e3o (efetuadores finais dos manipuladores), o movimento/restri-\u00e7\u00e3o dos ve\u00edculos envolvidos e as restri\u00e7\u00f5es impostas pelo espa\u00e7o de trabalho ou condi\u00e7\u00f5es do sistema. Em rela\u00e7\u00e3o aos ve\u00edculos, eventualmente seu movimento faz parte do conjunto da solu\u00e7\u00e3o cinem\u00e1tica. Da mesma forma, as restri\u00e7\u00f5es podem n\u00e3o ser relevantes \u00e0 execu\u00e7\u00e3o da tarefa ou podem aparecer ao longo do tempo em que esta \u00e9 efetuada.\n6.2\tEXECU\u00c7\u00c3O DE TAREFAS DE INTERVEN\u00c7\u00c3O\nA partir da vis\u00e3o geral do planejamento de movimento para as fases envolvidas na interven\u00e7\u00e3o, foi elaborado um pseudoc\u00f3digo que descreve a execu\u00e7\u00e3o dessas fases. O Algoritmo 2 corresponde a esse pseudoc\u00f3digo, que foi elaborado com enfoque orientado a objetos.\nConsiderando apenas a cinem\u00e1tica para a estrat\u00e9gia de planejamento de movimento, esse pseudoc\u00f3digo pode ser reduzido ao apresentado no Algoritmo 3. Nele, os componentes que n\u00e3o s\u00e3o diretamente relacionados ao planejamento de movimento s\u00e3o agrupados em um objeto denominado sistema, que retorna apenas informa\u00e7\u00f5es relativas \u00e0 cinem\u00e1tica do sistema rob\u00f3tico. Esses blocos est\u00e3o delimitados por uma fronteira na Figura 33. Assim, as linhas sombreadas do Algo-\nconfigurarInicioO; para cada instante t de miss\u00e3o fa\u00e7a miss\u00e3o.verificarEstadoDeOpera\u00e7\u00e3o(); qd\tmiss\u00e3o.tarefa.obter(t);\nqa miss\u00e3o.obterAtual();\nqr\tguiagem.executar(t, qd, qa);\nfr\tpilotagem.executar(qr);\nfa navega\u00e7\u00e3o.obterAmbiente();\nf\tcontrole.executar(t,fr,fa);\nqa\tuvms.executar(f);\nnavega\u00e7\u00e3o.atualizar(t,qa); a navega\u00e7\u00e3o.obterAtual(); miss\u00e3o.atualizar(qr, a);\nfim para cada\nfinalizar();\nritmo 2 s\u00e3o substitu\u00eddas pela linha sombreada do Algoritmo 3. Essa simplifica\u00e7\u00e3o \u00e9 utilizada para ressaltar a an\u00e1lise cinem\u00e1tica e facilitar o desenvolvimento de uma estrat\u00e9gia de planejamento de movimento focando apenas nos componentes relevantes \u00e0 essa finalidade.\nA defini\u00e7\u00e3o da configura\u00e7\u00e3o inicial do sistema \u00e9 atribu\u00edda ao m\u00e9todo configurarInicio. No caso de uma simula\u00e7\u00e3o, ele deve instanciar os diversos objetos do processamento de informa\u00e7\u00f5es do sistema rob\u00f3tico e executar as a\u00e7\u00f5es necess\u00e1rias para que a miss\u00e3o comece a execu\u00e7\u00e3o com as condi\u00e7\u00f5es iniciais definidas. No caso de implementa\u00e7\u00e3o em um sistema real, esse m\u00e9todo marca o in\u00edcio das fases relacionadas \u00e0 interven\u00e7\u00e3o, com ativa\u00e7\u00e3o dos manipuladores e posicionamento destes na configura\u00e7\u00e3o inicial de execu\u00e7\u00e3o da tarefa.\nO elemento central do pseudoc\u00f3digo \u00e9 um la\u00e7o que repete um bloco de c\u00f3digo a cada instante da tarefa a ser executada. A cada itera\u00e7\u00e3o do la\u00e7o, objetos que representam as atividades do sistema de interven\u00e7\u00e3o s\u00e3o acionados pela invoca\u00e7\u00e3o de a\u00e7\u00f5es inerentes a eles.\nO objeto miss\u00e3o tem por atribui\u00e7\u00f5es verificar o estado de opera\u00e7\u00e3o do sistema (m\u00e9todo verificarEstadoDeOpera\u00e7\u00e3o(), refletindo mudan\u00e7as de estado na estrutura da cadeia cinem\u00e1tica do sistema rob\u00f3tico e na gera\u00e7\u00e3o de refer\u00eancias da tarefa. Al\u00e9m disso, gerencia o fornecimento de refer\u00eancias da tarefa (atrav\u00e9s do seu atributo tarefa). Por fim,\nconfigurarInicioO;\npara cada instante t de miss\u00e3o fa\u00e7a\nmiss\u00e3o.verificarEstadoDeOpera\u00e7\u00e3oO;\nqd\tmiss\u00e3o.tarefa.obter(t);\nqa miss\u00e3o.obterAtual();\nqr\tguiagem.executar(t, qd, qa);\na\tsistema.executar(t, qr);\nmiss\u00e3o.atualizar(qr, a);\nfim para cada\nfinalizar();\nagrega os dados de movimento do sistema, tanto as refer\u00eancias quanto os atuais (m\u00e9todo atualizar) para o seu pr\u00f3prio processamento (verifica\u00e7\u00e3o do estado do sistema) e para o registro/disponibiliza\u00e7\u00e3o dos dados ao usu\u00e1rio do sistema.\nA tarefa a ser executada pelo sistema \u00e9 representada pelo objeto tarefa, que \u00e9 um atributo de miss\u00e3o. Ele tem por finalidade fornecer as refer\u00eancias de posi\u00e7\u00e3o e movimento dos elementos prim\u00e1rios da cadeia cinem\u00e1tica, usualmente envolvendo as posi\u00e7\u00f5es e velocidades dos efetuadores finais dos manipuladores. Dependendo do contexto de execu\u00e7\u00e3o, o movimento dos ve\u00edculos tamb\u00e9m pode ser imposto, bem como restri\u00e7\u00f5es adicionais \u00e0 cadeia. Assim, esse objeto deve ser capaz de acompanhar as mudan\u00e7as da cadeia cinem\u00e1tica para produzir as refer\u00eancias de acordo com o contexto de execu\u00e7\u00e3o da miss\u00e3o.\nO objeto guiagem resolve a cinem\u00e1tica do sistema, calculando as refer\u00eancias de movimento dos elementos atuados para que os UVMS realizem a tarefa especificada. Para isso, al\u00e9m de utilizar o modelo de cadeia cinem\u00e1tica para calcular as velocidades das vari\u00e1veis secund\u00e1rias, ele ainda deve poder integrar essas velocidades para gerar as posi\u00e7\u00f5es dessas vari\u00e1veis.\nNo pseudoc\u00f3digo do Algoritmo 3, sistema \u00e9 um objeto que representa todos os componentes que s\u00e3o externos ao planejamento de movimento. No caso de simula\u00e7\u00f5es, ele pode ser implementado dessa forma para fazer testes das estrat\u00e9gias de plajenamento. Por\u00e9m, ele deve ser considerado apenas como um artif\u00edcio para isolar a fronteira do problema de planejamento de movimento, n\u00e3o substituindo as demais atividades em implementa\u00e7\u00f5es reais ou em simula\u00e7\u00f5es que con-\nsiderem os efeitos din\u00e2micos na execu\u00e7\u00e3o da miss\u00e3o. Pode-se, por\u00e9m, pensar em sistema como um objeto container dos demais objetos, se se desejar manter essa abstra\u00e7\u00e3o do restante do sistema em rela\u00e7\u00e3o ao planejamento de movimento.\nAp\u00f3s a execu\u00e7\u00e3o das tarefas, algumas a\u00e7\u00f5es devem ser executadas para a finaliza\u00e7\u00e3o da interven\u00e7\u00e3o. O m\u00e9todo finalizar representa essas a\u00e7\u00f5es no pseudoc\u00f3digo. No caso de simula\u00e7\u00f5es, ele consiste em executar c\u00f3digos de encerramento dos objetos, limpeza da mem\u00f3ria, p\u00f3s-processamento, an\u00e1lise e apresenta\u00e7\u00e3o dos dados. Em uma implementa\u00e7\u00e3o em um sistema real, compreende a fase de desativa\u00e7\u00e3o dos manipuladores e seu recolhimento.\n6.3\tDEFINI\u00c7\u00c3O DE UM FRAMEWORK PARA TAREFAS DE INTERVEN\u00c7\u00c3O\nOs objetos e m\u00e9todos utilizados nos pseudoc\u00f3digos levaram \u00e0 identifica\u00e7\u00e3o de um conjunto de classes que poderia ser projetado para estruturar a implementa\u00e7\u00e3o de uma estrat\u00e9gia de planejamento de movimento dentro do contexto de execu\u00e7\u00e3o. Este framework seria complementar ao framework Kast, fazendo uso deste e utilizando inst\u00e2ncias de suas classes para diferentes elementos da interven\u00e7\u00e3o. O diagrama de classes da Figura 34 \u00e9 uma descri\u00e7\u00e3o da estrutura do framework e suas associa\u00e7\u00f5es com o Kast.\nAl\u00e9m das classes dos objetos do pseudoc\u00f3digo do Algoritmo 3, como Mission, Task, Guidance e Uvms, foi definida uma classe que gerencia a execu\u00e7\u00e3o da interven\u00e7\u00e3o chamada Intervention. Pode-se tamb\u00e9m associar essa classe \u00e0 fase de interven\u00e7\u00e3o de uma miss\u00e3o. Observe-se no diagrama as associa\u00e7\u00f5es com as classes do framework Kast.\nAs informa\u00e7\u00f5es que fluem de uma atividade para a outra no diagrama da Figura 33 s\u00e3o posi\u00e7\u00f5es e velocidades relativas \u00e0s vari\u00e1veis de juntas da cadeia cinem\u00e1tica do sistema de interven\u00e7\u00e3o. De acordo com o pseudoc\u00f3digo do Algoritmo 3 tem-se valores desejados fornecidos pela tarefa (qd), valores atuais do sistema rob\u00f3tico (qa) e valores de refer\u00eancia obtidos pela resolu\u00e7\u00e3o cinem\u00e1tica da guiagem (qr). No projeto do framework de interven\u00e7\u00e3o, essas informa\u00e7\u00f5es s\u00e3o representadas por inst\u00e2ncias da classe State. Al\u00e9m de serem da mesma classe, esses objetos t\u00eam a mesma lista de vari\u00e1veis, que representam todas as juntas da cadeia cinem\u00e1tica. Isso facilita o interc\u00e2mbio entre objetos e permite que cada atividade tenha acesso a toda configura\u00e7\u00e3o da cadeia se assim necessitar.\nFigura 34. Diagrama de classes do framework de interven\u00e7\u00e3o\nOs modelos das cadeias cinem\u00e1ticas s\u00e3o representados por inst\u00e2ncias de classes derivadas de KinematicChain. Por esse motivo, ela \u00e9 inclu\u00edda no diagrama de classes, para representar toda a hierarquia de classes que podem representar cadeias cinem\u00e1ticas. Isso tamb\u00e9m aproveita a caracter\u00edstica de encapsulamento da orienta\u00e7\u00e3o a objetos, pois implica que todas as classes de cadeias cinem\u00e1ticas devem implementar a mesma assinatura e assim serem utiliz\u00e1veis da mesma forma, independentemente do arranjo cinem\u00e1tico do sistema representado.\nInterpoladores de trajet\u00f3rias s\u00e3o relevantes para a gera\u00e7\u00e3o de refer\u00eancias da tarefa. Por isso, Trajectory representa toda a hierarquia de geradores que podem ser empregados em uma inst\u00e2ncia de Task, e que devem implementar a mesma assinatura de uso.\n6.3.1\tClasse Intervention\nA fase de execu\u00e7\u00e3o da interven\u00e7\u00e3o da miss\u00e3o \u00e9 descrita pela classe Intervention. Al\u00e9m de delimitar as fases, ela define as atribui\u00e7\u00f5es para a interven\u00e7\u00e3o. Como \u00e9 descrito no Algoritmo 4, a fase de interven\u00e7\u00e3o inicia logo ap\u00f3s a fase de ativa\u00e7\u00e3o dos manipuladores (identificada pelo\nm\u00e9todo ativarManipuladores e encerra imediatamente antes da fase de desativa\u00e7\u00e3o destes (identificada pelo m\u00e9todo desativarManipuladores). \u00c0 instancia\u00e7\u00e3o de um objeto gerenciador da interven\u00e7\u00e3o segue-se a opera\u00e7\u00e3o de instancia\u00e7\u00e3o dos seus objetos componentes e defini\u00e7\u00e3o das condi\u00e7\u00f5es iniciais da fase (m\u00e9todo init). O m\u00e9todo execute consiste no la\u00e7o de execu\u00e7\u00e3o da interven\u00e7\u00e3o. Ap\u00f3s encerrada a interven\u00e7\u00e3o, o m\u00e9todo end deve proceder com as a\u00e7\u00f5es de t\u00e9rmino da interven\u00e7\u00e3o.\nAlgoritmo 4. A\u00e7\u00f5es gerais da interven\u00e7\u00e3o em uma miss\u00e3o ativarManipuladoresO;\ninterven\u00e7\u00e3o Intervention();\ninterven\u00e7\u00e3o.init();\ninterven\u00e7\u00e3o.execute();\ninterven\u00e7\u00e3o.end();\ndesativarManipuladores();\nO m\u00e9todo execute \u00e9, ent\u00e3o, o que representa toda a execu\u00e7\u00e3o da miss\u00e3o. Observe-se que \u00e9 essencialmente um la\u00e7o que repete um trecho de c\u00f3digo para cada instante da interven\u00e7\u00e3o. Esse bloco de itera\u00e7\u00e3o consiste em verificar se houve mudan\u00e7as de estado de execu\u00e7\u00e3o da tarefa, atualizar o modelo cinem\u00e1tico se houve mudan\u00e7a de estado, gerar refer\u00eancias da tarefa a serem atingidas, determinar refer\u00eancias de movimento para o sistema rob\u00f3tico, aplic\u00e1-las e obter as vari\u00e1veis de juntas do sistema e demais informa\u00e7\u00f5es do ambiente para manter a miss\u00e3o atualizada. O Algoritmo 5 descreve o pseudoc\u00f3digo desse m\u00e9todo.\nAlgoritmo 5. Pseudoc\u00f3digo de Intervention.execute para cada instante t\tmiss\u00e3o.t fa\u00e7a\nmiss\u00e3o.verifyState();\nqd miss\u00e3o.task.q;\nqa miss\u00e3o.actualState;\nqr\tguiagem.execute(t, qd, qa);\na\tuvms.execute(t, qr);\nmiss\u00e3o.update(qr, a);\nfim para cada\nDeve-se observar que os objetos utilizados em execute s\u00e3o instanciados no m\u00e9todo init.\n6.3.2 Classe Mission\nAs atribui\u00e7\u00f5es da atividade miss\u00e3o relativas ao planejamento de movimento definem a classe Mission. Os elementos relevantes de sua assinatura s\u00e3o identificados ao se observar a inst\u00e2ncia dessa classe no Algoritmo 5 (objeto miss\u00e3o). S\u00e3o algumas propriedades (t, task, actualState) e m\u00e9todos (verifyState, update).\nAs propriedades fornecem acesso aos atributos da classe. O instante de tempo da itera\u00e7\u00e3o em execu\u00e7\u00e3o \u00e9 dado por t, que \u00e9 atualizado sequencialmente a cada vez que \u00e9 acessado. O gerador de refer\u00eancias da tarefa \u00e9 acessado pela propriedade task. As vari\u00e1veis de juntas do sistema s\u00e3o fornecidos por actualState.\nO m\u00e9todo verifyState tem duas finalidades, que s\u00e3o avaliar se houve mudan\u00e7as no contexto de execu\u00e7\u00e3o da tarefa e atualizar os componentes necess\u00e1rios para que a estrat\u00e9gia de planejamento de movimento consiga atender \u00e0 essas mudan\u00e7as. Esses componentes s\u00e3o o modelo da cadeia cinem\u00e1tica e o gerador de refer\u00eancias da tarefa.\nPara a primeira finalidade, o m\u00e9todo deve utilizar as informa\u00e7\u00f5es das vari\u00e1veis das juntas do sistema rob\u00f3tico e do ambiente (obtidas atrav\u00e9s do m\u00e9todo update). Essas informa\u00e7\u00f5es podem provir de modelos conhecidos do meio ou de sensores do sistema rob\u00f3tico e do ambiente (Rocha et al., 2009). A identifica\u00e7\u00e3o de mudan\u00e7a de contexto de execu\u00e7\u00e3o utiliza algum m\u00e9todo de tomada de decis\u00e3o baseada nas informa\u00e7\u00f5es dispon\u00edveis como, por exemplo, intelig\u00eancia artificial com l\u00f3gica difusa (Santos, 2006; Santos et al., 2006). Eventualmente, \u00e9 poss\u00edvel que as informa\u00e7\u00f5es coletadas indiquem a necessidade de mais de uma modifica\u00e7\u00e3o de estado (por exemplo, uma junta de um manipulador travada e necessidade de evitamento de colis\u00e3o). A tomada de decis\u00f5es deve ser capaz de aplicar as mudan\u00e7as correspondentes a essas modifica\u00e7\u00f5es de estado. Considera-se que o sistema \u00e9 capaz de aplicar sucessivas modifica\u00e7\u00f5es sem que uma anule a outra, atendendo \u00e0s restri\u00e7\u00f5es de opera\u00e7\u00e3o.\nEm rela\u00e7\u00e3o \u00e0 atualiza\u00e7\u00e3o do modelo da cadeia cinem\u00e1tica, \u00e9 poss\u00edvel se dar tanto por reparticionamento como por reconfigura\u00e7\u00e3o, como foi discutido no Cap\u00edtulo 4. Utilizando as defini\u00e7\u00f5es de Kast, o reparti-cionamento consiste em se redefinir a propriedade partitioning de uma inst\u00e2ncia de KinematicChain. A reconfigura\u00e7\u00e3o depende de como o modelo da cadeia cinem\u00e1tica \u00e9 implementado. Em inst\u00e2ncias da classe KCComposable, isso consiste em modificar o grafo de movimento da cadeia por adi\u00e7\u00e3o e remo\u00e7\u00e3o de elos, juntas e subcadeias. Em classes especializadas para um determinado cen\u00e1rio de interven\u00e7\u00e3o, o desen-\nvolvedor dever\u00e1 criar m\u00e9todos que viabilizem as mudan\u00e7as poss\u00edveis no arranjo cinem\u00e1tico da cadeia. De todo modo, as modifica\u00e7\u00f5es na cadeia devem ser definidas de acordo com os contextos detect\u00e1veis pelo sistema de tomada de decis\u00e3o e verifica\u00e7\u00e3o do contexto de execu\u00e7\u00e3o.\nUma alternativa para reconfigura\u00e7\u00e3o seria manter mais de um objeto para a cadeia cinem\u00e1tica de um sistema de interven\u00e7\u00e3o, cada qual descrevendo um arranjo cinem\u00e1tico correspondente a um contexto de execu\u00e7\u00e3o da miss\u00e3o. A cada instante, um dos objetos assumiria a condi\u00e7\u00e3o de ativo, de acordo com o contexto identificado. Essa possibilidade pode ser vi\u00e1vel no caso das poss\u00edveis mudan\u00e7as de contexto durante a execu\u00e7\u00e3o de tarefas serem conhecidas de antem\u00e3o.\n6.3.3\tClasse Task\nA gera\u00e7\u00e3o de dados da tarefa \u00e9 gerenciada pela classe Task. Ela deve processar as especifica\u00e7\u00f5es da tarefa, utilizar os geradores de trajet\u00f3ria necess\u00e1rios para calcular posi\u00e7\u00f5es e velocidades e se modificar de acordo com as demandas de dados da cadeia cinem\u00e1tica.\nPara o framework de interven\u00e7\u00e3o, uma tarefa consiste nas defini\u00e7\u00f5es de movimento desejados para a execu\u00e7\u00e3o da interven\u00e7\u00e3o (mo-vimentos/restri\u00e7\u00f5es de efetuadores finais, pe\u00e7as e ve\u00edculos), objetivos complementares e restri\u00e7\u00f5es impostas pelo cen\u00e1rio de execu\u00e7\u00e3o. Isso se traduz em informa\u00e7\u00f5es de velocidades e posi\u00e7\u00f5es das vari\u00e1veis das juntas prim\u00e1rias da cadeia cinem\u00e1tica que modela o sistema de interven\u00e7\u00e3o, que por sua vez s\u00e3o representadas por inst\u00e2ncias da classe State.\nUsualmente, essas defini\u00e7\u00f5es consistem em caminhos ou especifica\u00e7\u00f5es de curvas. Elas s\u00e3o tratadas pelos geradores da hierarquia de classes Trajectory do framework Kast. Isso \u00e9 mostrado no diagrama de classes da Figura 34 pela agrega\u00e7\u00e3o de Trajectory na classe Task. Isso tamb\u00e9m implica em que v\u00e1rios geradores de trajet\u00f3ria podem ser utilizados para determinar as refer\u00eancias da tarefa, de acordo com o tipo de movimento/restri\u00e7\u00e3o desejado e o n\u00famero de vari\u00e1veis envolvidos.\nA cada acesso da propriedade q, deve ser gerado um conjunto de dados das vari\u00e1veis das juntas de toda a cadeia cinem\u00e1tica, sendo calculadas apenas as que correspondem \u00e0 parti\u00e7\u00e3o prim\u00e1ria do modelo. As demais mant\u00e9m os valores determinados em outras atividades do sistema, como a guiagem.\nMudan\u00e7as efetuadas no modelo da cadeia cinem\u00e1tica devem ser refletidas na tarefa. A cada instante, uma inst\u00e2ncia de Task deve for-\nnecer refer\u00eancias de posi\u00e7\u00e3o e movimento para todas as vari\u00e1veis da parti\u00e7\u00e3o prim\u00e1ria do modelo. Assim, modifica\u00e7\u00f5es nesta demandam a adi\u00e7\u00e3o e remo\u00e7\u00e3o de geradores de trajet\u00f3rias associados \u00e0s vari\u00e1veis de juntas alteradas, enquanto os demais devem se manter para as vari\u00e1veis que n\u00e3o foram modificadas. Isso pode ser verificado pelo acesso aos dicion\u00e1rios de vari\u00e1veis das inst\u00e2ncias de State e pelo vetor de particio-namento de da cadeia (inst\u00e2ncia de KinematicChain). O tipo de gerador de trajet\u00f3ria, por sua vez, depende dos requisitos de movimento/res-tri\u00e7\u00e3o da vari\u00e1vel que ele dever\u00e1 atender. No caso de imobiliza\u00e7\u00e3o, ele dever\u00e1 gerar um valor de posi\u00e7\u00e3o constante, com velocidade igual a zero. Em situa\u00e7\u00f5es onde exista movimento, o gerador utilizado deve ser capaz de lidar com os dados de especifica\u00e7\u00e3o de tarefas dispon\u00edveis para ele. Este caso pode assumir certa complexidade em fun\u00e7\u00e3o de se determinar condi\u00e7\u00f5es iniciais compat\u00edveis com o seu estado anterior \u00e0 modifica\u00e7\u00e3o da estrutura cinem\u00e1tica do sistema e do perfil de suaviza\u00e7\u00e3o desejado.\nA descontinuidade de movimento ocasionada pela mudan\u00e7a da cadeia cinem\u00e1tica \u00e9 um problema que se deve muitas vezes ao fato de uma determinada vari\u00e1vel ter imposta uma restri\u00e7\u00e3o de forma imediata, quando na realidade a junta \u00e0 qual ela se refere j\u00e1 teria um movimento determinado antes da mudan\u00e7a da cadeia. Isso causa efeitos de elevadas acelera\u00e7\u00f5es nas juntas, com eventual satura\u00e7\u00e3o dos atuadores e esfor\u00e7os elevados que causam desgastes excessivos nos componentes f\u00edsicos do sistema. Por esse motivo, deve-se ponderar o uso de alguma t\u00e9cnica de suaviza\u00e7\u00e3o das refer\u00eancias na transi\u00e7\u00e3o entre estados de opera\u00e7\u00e3o. Ela pode se dar pela determina\u00e7\u00e3o dos valores de posi\u00e7\u00e3o e velocidade da junta em um momento imediatamente anterior \u00e0 transi\u00e7\u00e3o de estados com posterior aplica\u00e7\u00e3o de um interpolador entre este valor e o novo a ser adotado. No caso de planejamento off-line em ambientes completamente modelados, foi proposto um m\u00e9todo em duas fases, onde na primeira a tarefa \u00e9 executada e gerando as descontinuidades de movimento para com base nos dados obtidos a segunda fase defina as transi\u00e7\u00f5es necess\u00e1rias em cada mudan\u00e7a de estado (Simas; Fontan; Martins, 2011).\nA especifica\u00e7\u00e3o de tarefas pode fazer uso da descri\u00e7\u00e3o XML definida em Kast e as classes que a processam.\n6.3.4 Classe Guidance\nA resolu\u00e7\u00e3o da cinem\u00e1tica do sistema de interven\u00e7\u00e3o \u00e9 feita por inst\u00e2ncias de Guidance. Esta se d\u00e1 em duas etapas, a de determina\u00e7\u00e3o das velocidades das vari\u00e1veis da parti\u00e7\u00e3o secund\u00e1ria da equa\u00e7\u00e3o de restri\u00e7\u00e3o do sistema e a integra\u00e7\u00e3o dessas velocidades para obten\u00e7\u00e3o das posi\u00e7\u00f5es dessas vari\u00e1veis. A primeira etapa \u00e9 realizada pela inst\u00e2ncia de KinematicChain que modela a cadeia cinem\u00e1tica do sistema e calcula a sua equa\u00e7\u00e3o de restri\u00e7\u00e3o, enquanto a segunda \u00e9 feita por algum algoritmo de integra\u00e7\u00e3o. Esse processo \u00e9 graficamente descrito pelo diagrama de comunica\u00e7\u00e3o da Figura 35.\n2.q()\nFigura 35. Diagrama de comunica\u00e7\u00e3o da resolu\u00e7\u00e3o cinem\u00e1tica pela classe Guidance\nA resolu\u00e7\u00e3o da equa\u00e7\u00e3o de restri\u00e7\u00e3o para as vari\u00e1veis secund\u00e1rias da cadeia \u00e9 obtida pela execu\u00e7\u00e3o do m\u00e9todo solveDavies que \u00e9 implementado em todas as classes derivadas de KinematicChain. Para tanto, \u00e9 necess\u00e1rio que os dados de posi\u00e7\u00e3o e velocidade de todas as juntas estejam atualizados para o c\u00e1lculo dos helicoides normalizados e defini\u00e7\u00e3o das velocidades das vari\u00e1veis prim\u00e1rias. Isso \u00e9 dado pelas informa\u00e7\u00f5es das vari\u00e1veis da cadeia passadas na invoca\u00e7\u00e3o do m\u00e9todo execute de Guidance.\nAl\u00e9m disso, a solu\u00e7\u00e3o da Equa\u00e7\u00e3o 3.33 requer a invers\u00e3o da parti\u00e7\u00e3o secund\u00e1ria da matriz de rede (Ns). Quando quadrada, ela \u00e9 invers\u00edvel (salvo estar em alguma condi\u00e7\u00e3o singular). Em sistemas redundantes, por\u00e9m, \u00e9 poss\u00edvel que ela assuma uma forma retangular, denotando que existem mais vari\u00e1veis a serem resolvidas que o espa\u00e7o de helicoides do sistema. Nesse caso, uma poss\u00edvel solu\u00e7\u00e3o \u00e9 a aplica\u00e7\u00e3o de uma opera\u00e7\u00e3o de pseudoinvers\u00e3o, como j\u00e1 foi discutido em cap\u00edtulos anteriores.\nO uso da pseudoinvers\u00e3o definida para a Equa\u00e7\u00e3o 3.34 minimiza uma fun\u00e7\u00e3o custo de energia do sistema (Siciliano et al., 2009). Esse\noperador, por\u00e9m, gera solu\u00e7\u00f5es que distribuem o movimento igualmente entre as vari\u00e1veis. Uma vez que o UVMS tem dois subsistemas de din\u00e2micas diferentes (ve\u00edculo mais lento e manipulador mais r\u00e1pido) essa solu\u00e7\u00e3o n\u00e3o \u00e9 necessariamente a mais indicada quando os movimentos de ve\u00edculos e manipuladores devem ser obtidos. O uso de um operador de pseudoinvers\u00e3o como o da Equa\u00e7\u00e3o 6.1 utiliza uma matriz de valores que possibilita maior controle sobre a distribui\u00e7\u00e3o do movimento (Antonelli, 2006),\nN = W-1NT (NsW-1nT) 1\t(6.1)\nonde W \u00e9 a matriz de pondera\u00e7\u00e3o, que deve ser definida positiva. Os pesos da matriz de pondera\u00e7\u00e3o podem ser definidos por uma fun\u00e7\u00e3o objetivo que fa\u00e7a com que eles variem de acordo com algum crit\u00e9rio que mude a distribui\u00e7\u00e3o do movimento de acordo ao longo do tempo. O uso dessa solu\u00e7\u00e3o para a invers\u00e3o pode minimizar efeitos de descontinuidade de movimento, sendo combinado com mudan\u00e7as de estado.\nOperadores de pseudoinvers\u00e3o s\u00e3o pass\u00edveis de implementa\u00e7\u00e3o atrav\u00e9s da especializa\u00e7\u00e3o da classe WPInv do framework Kast, cujas inst\u00e2ncias podem ser vinculadas \u00e0 objetos KinematicChain para serem utilizados na execu\u00e7\u00e3o do m\u00e9todo solveDavies. Observe-se que a redefini\u00e7\u00e3o desse operador \u00e9 mais uma varia\u00e7\u00e3o de mudan\u00e7as no modelo cinem\u00e1tico do sistema de interven\u00e7\u00e3o que pode ser executada pelas inst\u00e2ncias de Mission.\nA integra\u00e7\u00e3o pode tanto ser implementada internamente \u00e0 Guidance quanto empregar classes espec\u00edficas para esse fim. Como o uso de m\u00e9todos num\u00e9ricos ocasiona o efeito de deriva, erros s\u00e3o acumulados ao longo do tempo, o que pode acarretar a abertura de cadeias fechadas como as que s\u00e3o aqui tratadas. A compensa\u00e7\u00e3o desses erros pode ser feita de diferentes maneiras. O m\u00e9todo mais conhecido \u00e9 o de cinem\u00e1tica inversa de malha fechada (Siciliano et al., 2009; Antonelli, 2006), onde uma malha de realimenta\u00e7\u00e3o do erro \u00e9 usada junto com as refer\u00eancias da tarefa na defini\u00e7\u00e3o dos valores das vari\u00e1veis prim\u00e1rias. A outra possibilidade proposta na literatura utiliza cadeias virtuais de erro (Simas, 2008) para representar a abertura da cadeia cinem\u00e1tica. O uso dessas cadeias \u00e9 feito por adi\u00e7\u00e3o destas como subcadeias na cadeia cinem\u00e1tica do sistema. Al\u00e9m disso, para as novas vari\u00e1veis da cadeia de erro devem ser geradas refer\u00eancias conforme descrito em (Simas et al., 2009).\n6.3.5\tClasse Uvms\nNo framework de interven\u00e7\u00e3o, Uvms \u00e9 a classe que encapsula as atividades que n\u00e3o est\u00e3o diretamente relacionadas com o planejamento de movimento, mas interagem com ele. Esta \u00e9 uma defini\u00e7\u00e3o de classe do objeto sistema do pseudoc\u00f3digo do Algoritmo 3.\nA defini\u00e7\u00e3o dessa classe d\u00e1 certa liberdade de implementa\u00e7\u00e3o do sistema, uma vez que o \u00fanico m\u00e9todo requerido para intera\u00e7\u00e3o com os demais componentes do framework \u00e9 o execute, que consome as refer\u00eancias de movimento calculadas por inst\u00e2ncias de Guiagem e produzem em retorno um conjunto de atributos (inst\u00e2ncia de AttributeList), que no Algoritmo 5 \u00e9 armazenado na vari\u00e1vel a. Al\u00e9m dos valores atuais das vari\u00e1veis das juntas do sistema (qa), esse conjunto de atributos deve conter informa\u00e7\u00f5es relevantes para a verifica\u00e7\u00e3o do contexto de opera\u00e7\u00e3o por miss\u00e3o.\nDe acordo com o diagrama de blocos da Figura 33, essas informa\u00e7\u00f5es prov\u00e9m da atividade navega\u00e7\u00e3o. As refer\u00eancias resultantes da guiagem, por sua vez, s\u00e3o usadas para definir refer\u00eancia de atua\u00e7\u00e3o para os controladores pelas atividades pilotagem e acionamento, que gerar\u00e3o o acionamento dos atuadores e propulsores do sistema de interven\u00e7\u00e3o.\nA Figura 36 ilustra o relacionamento dos componentes do framework de interven\u00e7\u00e3o para o caso do UVMS planar analisado na Se\u00e7\u00e3o 3.3. Nessa representa\u00e7\u00e3o do fluxo de informa\u00e7\u00f5es, as vari\u00e1veis q s\u00e3o inst\u00e2ncias de State, enquanto a \u00e9 uma inst\u00e2ncia de AttributeList.\nEmbora n\u00e3o tenham sido discutidas neste trabalho, as acelera\u00e7\u00f5es s\u00e3o fundamentais para aplica\u00e7\u00e3o na din\u00e2mica e no controle. Por esse motivo, os objetos State armazenam dados de acelera\u00e7\u00e3o nas vari\u00e1veis das juntas. No caso das vari\u00e1veis prim\u00e1rias, as acelera\u00e7\u00f5es devem ser fornecidas por tarefa. Isso pode ser definido na implementa\u00e7\u00e3o dos interpoladores de trajet\u00f3ria que geram as refer\u00eancias da tarefa a partir das especifica\u00e7\u00f5es do operador. J\u00e1 para as vari\u00e1veis secund\u00e1rias, Santos (2006) prop\u00f5e utilizar a derivada da Equa\u00e7\u00e3o 3.33 para calcular as\nacelera\u00e7\u00f5es. Outro modo de faz\u00ea-lo seria por deriva\u00e7\u00e3o num\u00e9rica.\nNa implementa\u00e7\u00e3o de classes derivadas de Uvms, pode-se modelar tanto a cinem\u00e1tica quanto a din\u00e2mica do sistema de interven\u00e7\u00e3o. Para a pilotagem, por exemplo, a din\u00e2mica inversa \u00e9 de grande import\u00e2ncia. Ela \u00e9 fun\u00e7\u00e3o das vari\u00e1veis de posi\u00e7\u00e3o, velocidade e acelera\u00e7\u00e3o, como descrito na Equa\u00e7\u00e3o 6.2, em que D \u00e9 o s\u00edmbolo que a representa (Featherstone, 2008).\nT = D (q, q, q)\t(6.2)\nA modelagem din\u00e2mica \u00e9 usualmente definida atrav\u00e9s dos formalismos de Newton-Euler ou Euler-Lagrange a partir da cinem\u00e1tica descrita pela nota\u00e7\u00e3o de Denavit-Hartenberg (Fossen, 1994; Antonelli, 2006). Isso, por\u00e9m, n\u00e3o deve gerar problemas de utiliza\u00e7\u00e3o das vari\u00e1veis cinem\u00e1ticas determinadas atrav\u00e9s da abordagem por helicoides, desde que sejam considerados os mesmos referenciais para ambos os modelos. Assim, uma vez definidas as posi\u00e7\u00f5es, velocidades e acelera\u00e7\u00f5es do sistema, \u00e9 poss\u00edvel aplicar estas na din\u00e2mica e no controle. Embora n\u00e3o seja objeto de estudos desta tese, observa-se que uma modelagem din\u00e2mica atrav\u00e9s da teoria dos helicoides seria de utilidade para uniformizar os modelos. Por\u00e9m, este ainda \u00e9 um problema em discuss\u00e3o na literatura, seja atrav\u00e9s dos formalismos de Newton-Euler, Euler-Lagrange ou do princ\u00edpio de D\u2019Alembert. A an\u00e1lise da din\u00e2mica por helicoides em manipuladores seriais tem apresentado alguns resultados, que podem ser futuramente estendidos para o cen\u00e1rio da interven\u00e7\u00e3o subaqu\u00e1tica (Laus; Simoni; Martins, 2009, 2010).\n6.4 SISTEM\u00c1TICA DE DESENVOLVIMENTO DE ESTRAT\u00c9GIAS DE PLANEJAMENTO DE MOVIMENTO\nCom base nos frameworks projetados, \u00e9 poss\u00edvel sistematizar o desenvolvimento de estrat\u00e9gias de planejamento de movimento. Essa sistematiza\u00e7\u00e3o consiste em definir classes derivadas do framework de interven\u00e7\u00e3o, cujos m\u00e9todos implementar\u00e3o as caracter\u00edsticas necess\u00e1rias para que os pseudoc\u00f3digos dos Algoritmos 4 e 5 sejam execut\u00e1veis. Al\u00e9m disso, podem ser usadas inst\u00e2ncias de classes do framework Kast ou mesmo especializa\u00e7\u00f5es dessas classes.\nAssim, as etapas de sistematiza\u00e7\u00e3o s\u00e3o definidas e descritas como segue. Algumas dessas etapas podem ainda ser divididas em atividades menores para melhor descrever as a\u00e7\u00f5es a serem executadas.\nDefinir o modelo cinem\u00e1tico Assumindo um contexto inicial de execu\u00e7\u00e3o da tarefa, deve-se definir um arranjo de cadeia cinem\u00e1tica fechada que represente o sistema de interven\u00e7\u00e3o subaqu\u00e1tica (ve\u00edculos, manipuladores) e o espa\u00e7o de trabalho em que vai atuar (objetos a manipular, movimentos/restri\u00e7\u00f5es desejados). A com-ponentiza\u00e7\u00e3o \u00e9 uma ferramenta que pode agilizar esse processo, bem como a exist\u00eancia de um banco de cadeias previamente modeladas. As atividades dessa etapa seriam:\n\u2022\tdefinir o grafo de movimento da cadeia cinem\u00e1tica;\n\u2022\tidentificar vari\u00e1veis prim\u00e1rias e secund\u00e1rias;\n\u2022\tdefinir as express\u00f5es para os heligiros;\n\u2022\timplementar o modelo cinem\u00e1tico.\nA implementa\u00e7\u00e3o do modelo cinem\u00e1tico pode ser feita atrav\u00e9s da classe KCComposable utilizando uma descri\u00e7\u00e3o textual para definir sua inst\u00e2ncia. Outra possibilidade \u00e9 especializar uma classe derivada de KinematicChain. Pontos a se considerar para a escolha do modo de implementar s\u00e3o a flexibilidade da solu\u00e7\u00e3o adotada e seu desempenho.\nDefinir a tarefa A identifica\u00e7\u00e3o das parti\u00e7\u00f5es da equa\u00e7\u00e3o de restri\u00e7\u00e3o da etapa anterior \u00e9 utilizada na defini\u00e7\u00e3o da tarefa. Os movimentos definidos pelo usu\u00e1rio e restri\u00e7\u00f5es do espa\u00e7o de trabalho devem ter correspond\u00eancia nas vari\u00e1veis prim\u00e1rias da cadeia cinem\u00e1tica. Al\u00e9m disso, devem ser identificados quais seriam os geradores de trajet\u00f3ria adequados aos movimentos/restri\u00e7\u00f5es. Assim, tem-se como atividades desta etapa:\n\u2022\tassociar as vari\u00e1veis prim\u00e1rias \u00e0 defini\u00e7\u00e3o da tarefa;\n\u2022\tdefinir os geradores de trajet\u00f3rias para as vari\u00e1veis;\n\u2022\timplementar o classe derivada de Task.\nA classe derivada de Task deve conter geradores de trajet\u00f3ria e mape\u00e1-los para cada vari\u00e1vel prim\u00e1rias do objeto State vinculado \u00e0 cadeia cinem\u00e1tica. A cada itera\u00e7\u00e3o da execu\u00e7\u00e3o da interven\u00e7\u00e3o, as referidas vari\u00e1veis s\u00e3o preenchidas com os valores produzidos por esses geradores.\nDefinir o UVMS Essa etapa consiste na implementa\u00e7\u00e3o do modelo do sistema de interven\u00e7\u00e3o (em simula\u00e7\u00f5es) ou de se definir interfaces de acesso com os sistemas (em implementa\u00e7\u00f5es reais). O\nmodelo pode incluir aspectos cinem\u00e1ticos, din\u00e2micos e de controle, que foram os considerados externos aos problema de planejamento de movimento neste trabalho. Na implementa\u00e7\u00e3o do m\u00e9todo execute, deve-se mapear as vari\u00e1veis da refer\u00eancia gerada pela guiagem (qr) para as respectivas entradas nas atividades de pilotagem, acionamento e controle. Al\u00e9m disso, ap\u00f3s processar essas refer\u00eancias deve preencher a lista de atributos que ser\u00e1 retornada com os valores atuais das vari\u00e1veis de juntas do sistema (qa) e demais dados obtidos de sensores, o que \u00e9 feito pela atividade de navega\u00e7\u00e3o.\nDefinir a miss\u00e3o A implementa\u00e7\u00e3o de uma classe para gerenciar a miss\u00e3o envolve diferentes demandas. Al\u00e9m de ter a tarefa e a cadeia cinem\u00e1tica como seus componentes, uma classe de miss\u00e3o deve ter a\u00e7\u00f5es para a identifica\u00e7\u00e3o do estado de execu\u00e7\u00e3o da tarefa e modifica\u00e7\u00e3o da cadeia e da tarefa para atender \u00e0 mudan\u00e7as desse estado. Assim, s\u00e3o relacionadas as atividades:\n\u2022\tDefinir uma estrat\u00e9gia de identifica\u00e7\u00e3o de contexto/estado de execu\u00e7\u00e3o;\n\u2022\tDefinir a execu\u00e7\u00e3o de modifica\u00e7\u00f5es no modelo cinem\u00e1tico de acordo com o estado;\n\u2022\tDefinir a execu\u00e7\u00e3o de modifica\u00e7\u00f5es na tarefa de acordo com o estado;\nEssas a\u00e7\u00f5es crescem em complexidade \u00e0 medida em que aumenta a quantidade de dados a serem avaliados e as diferentes possibilidades de contexto de execu\u00e7\u00e3o. Al\u00e9m disso, certas condi\u00e7\u00f5es podem ser cumulativas, exigindo mudan\u00e7as mais complexas do cen\u00e1rio.\nDefinir a interven\u00e7\u00e3o Esta classe \u00e9 de relativa simplicidade na implementa\u00e7\u00e3o, uma vez que o m\u00e9todo execute, que controla a execu\u00e7\u00e3o da tarefa, usualmente \u00e9 uma implementa\u00e7\u00e3o do Algoritmo 5, variando pouco de acordo com as especificades do contexto de execu\u00e7\u00e3o. Os demais m\u00e9todos relevantes s\u00e3o init e end. O primeiro deve instanciar os objetos utilizados por execute, sendo que s\u00e3o necess\u00e1rios ainda instanciar anteriormente a cadeia cinem\u00e1tica e a tarefa para associ\u00e1-los \u00e0 miss\u00e3o e \u00e0 guiagem, bem como os objetos State que s\u00e3o utilizados no fluxo de dados entre os diferentes objetos. A implementa\u00e7\u00e3o de end, se necess\u00e1ria, deve apenas encerrar o ciclo de vida dos objetos e se for o caso passar a execu\u00e7\u00e3o da miss\u00e3o para outros componentes do sistema.\nAo final desse processo, deve-se obter uma implementa\u00e7\u00e3o compat\u00edvel com a descri\u00e7\u00e3o da execu\u00e7\u00e3o de tarefas de interven\u00e7\u00e3o apresentada nos Algoritmos 2 e 3. Apesar de parecer complexo, observa-se que v\u00e1rias simplifica\u00e7\u00f5es podem ser feitas atrav\u00e9s de reuso de resultados de sistematiza\u00e7\u00f5es pr\u00e9vias, como na obten\u00e7\u00e3o dos modelos cinem\u00e1ticos. Al\u00e9m disso, implementa\u00e7\u00f5es existentes de classes dos frameworks, como os geradores de trajet\u00f3ria e a KCComposable facilitam o processo. Outro recurso a ser explorado \u00e9 o uso de descri\u00e7\u00f5es textuais.\nA implementa\u00e7\u00e3o de estrat\u00e9gias de planejamento de movimento de sistemas de interven\u00e7\u00e3o subaqu\u00e1tica a partir dos resultados da an\u00e1lise cinem\u00e1tica anteriormente realizada foi o objetivo deste cap\u00edtulo. A sistematiza\u00e7\u00e3o proposta foi estruturada a partir de um conjunto de classes de objetos que representam os blocos de atividades identificadas como relevantes para o planejamento de movimento. Esse conjunto faz uso do framework Kast para modelar cinematicamente o sistema rob\u00f3tico e as tarefas a ele especificadas. Essa sistem\u00e1tica \u00e9 usada em simula\u00e7\u00f5es de diferentes cen\u00e1rios de interven\u00e7\u00e3o subaqu\u00e1tica no pr\u00f3ximo cap\u00edtulo, a fim de ilustrar o seu uso.\n140\n7\tSIMULA\u00c7\u00d5ES E AN\u00c1LISE\nEste cap\u00edtulo trata da implementa\u00e7\u00e3o de estrat\u00e9gias de planejamento de movimento em simula\u00e7\u00f5es. S\u00e3o apresentados diferentes cen\u00e1rios de interven\u00e7\u00e3o. Para cada sistema, s\u00e3o propostas tarefas que demandar\u00e3o diferentes solu\u00e7\u00f5es da equa\u00e7\u00e3o de restri\u00e7\u00e3o. Certos casos exigir\u00e3o a mudan\u00e7a de estado de execu\u00e7\u00e3o durante a miss\u00e3o, fazendo com que o sistema assuma diferentes configura\u00e7\u00f5es e solu\u00e7\u00f5es para a cinem\u00e1tica do sistema. Com isso, espera-se ilustrar os conceitos discutidos nos cap\u00edtulos anteriores e a proposta de uma sistematiza\u00e7\u00e3o para a defini\u00e7\u00e3o de planejamento de movimento.\nOs modelos cinem\u00e1ticos dos cen\u00e1rios s\u00e3o detalhados no Ap\u00eandice C. As simula\u00e7\u00f5es foram implementadas em Python (Python.org, 2011), com uso da implementa\u00e7\u00e3o do framework Kast apresentada no Ap\u00eandice B. A visualiza\u00e7\u00e3o utilizou gr\u00e1ficos gerados pelo m\u00f3dulo matplotlib do Python (Hunter; Dale; Droettboom, 2011) e cen\u00e1rios virtuais gerados pelo software OpenRAVE (Diankov, 2010).\n7.1\tUVMS COM UM MANIPULADOR\nO primeiro cen\u00e1rio de interven\u00e7\u00e3o consiste em um UVMS composto por um ve\u00edculo com um manipulador operando no plano horizontal, ou seja, mantendo uma profundidade constante. O manipulador \u00e9 planar, com tr\u00eas graus de liberdade definidos por juntas rotativas. Este cen\u00e1rio \u00e9 baseado em exemplos descritos em (Antonelli, 2006; Santos, 2006) e seu modelo \u00e9 descrito na Se\u00e7\u00e3o C.3.1. Uma representa\u00e7\u00e3o desse cen\u00e1rio \u00e9 apresentada na Figura 37.\nA cadeia cinem\u00e1tica desse modelo e a defini\u00e7\u00e3o dos heligiros das suas juntas \u00e9 descrita em um arquivo XML que possibilitar\u00e1 a um componente KCFactory instanciar um objeto KCComposable que o represente nas simula\u00e7\u00f5es.\n7.1.1\tExecu\u00e7\u00e3o de uma trajet\u00f3ria retil\u00ednea\nEsta simula\u00e7\u00e3o consiste na execu\u00e7\u00e3o de uma trajet\u00f3ria retil\u00ednea repetitiva pelo efetuador final do UVMS, como se fosse o caminho percorrido por uma ferramenta durante uma opera\u00e7\u00e3o de limpeza de casco de uma embarca\u00e7\u00e3o, por exemplo. O efetuador final se desloca de um\nFigura 37. Cen\u00e1rio de simula\u00e7\u00e3o de um UVMS com um manipulador\nponto ne,i a um ponto ne,2 seguindo uma trajet\u00f3ria retil\u00ednea paralela ao eixo x do referencial inercial no tempo de 8s, retornando ap\u00f3s ao ponto ne>1 no mesmo per\u00edodo de tempo. Esse movimento \u00e9 executado duas vezes, o que faz com que a tarefa leve um tempo de 32s para ser completada. Durante toda a opera\u00e7\u00e3o, o efetuador final mant\u00e9m a orienta\u00e7\u00e3o constante. As posturas do efetuador no plano ne = [ xe ye ^e s\u00e3o iguais a\n\t\u25a0 3,935 \"\t\t6, 135\nn e,1 =\t3, 682\tn e,2 =\t3, 682\n\t1, 571\t\t1, 571\n(7.1)\nonde as unidades de comprimento xe e ye est\u00e3o em metros (m) e a unidade de \u00e2ngulo ^e est\u00e1 em radianos1.\nDurante a execu\u00e7\u00e3o da tarefa pelo efetuador final, o ve\u00edculo permanece estacion\u00e1rio, alinhado com o referencial inercial e com a posi\u00e7\u00e3o do referencial c do UVMS mostrado na Figura 89 coincidente com a origem do referencial inercial, ou seja, nv,i = nv,2 = [ 0\t0\t0 ] .\nAs refer\u00eancias para as vari\u00e1veis de junta da cadeia cinem\u00e1tica do sistema de interven\u00e7\u00e3o qt1, qt2 e qt3 associadas respectivamente \u00e0s componentes da postura do efetuador final xe, ye e ^e s\u00e3o geradas por interpola\u00e7\u00e3o polinomial de 5a ordem (uma inst\u00e2ncia de TrajLinearPoly) de forma que pare ao final de cada trecho percorrido entre os dois pontos extremos da reta. As refer\u00eancias para as vari\u00e1veis de juntas qV1, qv2 e\n1 Estas unidades ser\u00e3o as utilizadas em todas as simula\u00e7\u00f5es, salvo outra unidade ser explicitamente descrita.\nqv3 associadas \u00e0 postuda do ve\u00edculo (xv, yv e , respectivamente) s\u00e3o valores constantes, com velocidade nula (geradas por uma inst\u00e2ncia de TrajConst). Essas vari\u00e1veis s\u00e3o definidas como prim\u00e1rias.\nA implementa\u00e7\u00e3o da simula\u00e7\u00e3o \u00e9 descrita na Listagem 8 do Ap\u00eandice B. As vari\u00e1veis a serem determinadas s\u00e3o as associadas com as juntas do manipulador qmi, qm2 e qm3. Isso define uma matriz Ns quadrada. O passo da simula\u00e7\u00e3o \u00e9 0,01s. As velocidades s\u00e3o integradas pelo m\u00e9todo de Euler (usado como padr\u00e3o pela classe Guidance ap\u00f3s obter as velocidades pela solu\u00e7\u00e3o da equa\u00e7\u00e3o de restri\u00e7\u00e3o). Para minimizar os erros relativos \u00e0 integra\u00e7\u00e3o num\u00e9rica e precis\u00e3o computacional, utilizou-se uma adapta\u00e7\u00e3o da t\u00e9cnica de cinem\u00e1tica inversa em malha fechada (CLIK, ou Closed-Loop Inverse Kinematics) para as vari\u00e1veis da tarefa, que \u00e9 implementada na classe Guidance. Segundo ela, as velocidades das vari\u00e1veis prim\u00e1rias s\u00e3o definidas como\nqp = q d + KPed\t(7.2)\nonde qd \u00e9 o valor das velocidades desejadas para as vari\u00e1veis prim\u00e1rias e ed \u00e9 o erro de postura, definido como a diferen\u00e7a entre a postura desejada para o efetuador final e a postura definida pela cinem\u00e1tica direta do sistema em fun\u00e7\u00e3o das posi\u00e7\u00f5es das juntas do manipulador e da postura do ve\u00edculo (definida em uma classe derivada de Uvms criada para representar o sistema de interven\u00e7\u00e3o), ou\ned = qd - qo\t(7.3)\nA matriz de ganhos Kp foi determinada por tentativa e erro, tendo como ponto de partida os valores utilizados em (Antonelli, 2006). Chegou-se aos valores iguais a Kp = diag {100,100,10}. Embora aqui apenas tenha sido utilizada a realimenta\u00e7\u00e3o do erro de posi\u00e7\u00e3o para o CLIK, pode-se estender a t\u00e9cnica para incluir a realimenta\u00e7\u00e3o do erro de velocidade e a integra\u00e7\u00e3o do erro. Essas extens\u00f5es no framework ser\u00e3o implementadas em futuras vers\u00f5es de Kast.\nA trajet\u00f3ria percorrida pelo efetuador final \u00e9 apresentada na Figura 38a. A varia\u00e7\u00e3o do componente xe ao longo do tempo \u00e9 tra\u00e7ada na Figura 38b. As componentes ye e ^e, por sua vez, n\u00e3o variaram seus valores. Os erros nas vari\u00e1veis do efetuador devido ao uso de m\u00e9todos num\u00e9ricos e precis\u00e3o computacional s\u00e3o tra\u00e7ados na Figura 39.\nUma composi\u00e7\u00e3o das posturas do sistema de interven\u00e7\u00e3o em diferentes instantes da execu\u00e7\u00e3o da tarefa \u00e9 mostrada na Figura 40. As posi\u00e7\u00f5es das juntas e suas velocidades s\u00e3o apresentadas na Figura 41.\n(b) Componente xe do efetuador final\n(a) Trajet\u00f3ria do efetuador final do UVMS\nFigura 38. Movimento do efetuador final\n(a)\n0.00015\n0.00010\n0.00005\n0.00000\n0.00005\n0.00010\n0.00015\nErro em ye\n10\t15\t20\t25\t30\nt(s)\n(b)\n(c)\n\u00a3\nFigura 39. Erro nas vari\u00e1veis do efetuador final\nFigura 40. Movimento do UVMS durante a execu\u00e7\u00e3o da tarefa\nEsse primeiro caso de simula\u00e7\u00e3o foi utilizado para validar a implementa\u00e7\u00e3o dos frameworks Kast e de interven\u00e7\u00e3o. Al\u00e9m disso, por ser um caso simples permite demonstrar como utilizar os frameworks.\nCom o mesmo objetivo de valida\u00e7\u00e3o, uma segunda simula\u00e7\u00e3o da mesma tarefa foi executada. Nela, foi considerado que o ve\u00edculo tamb\u00e9m pode se mover, o que acarreta um particionamento diferente do original. Nesse caso, o sistema torna-se redundante, com seis vari\u00e1veis a serem determinadas para um movimento planar. O m\u00e9todo SolveDavies de KinematicChain passa a utilizar o operador de pseudoinvers\u00e3o para essas situa\u00e7\u00f5es. O reparticionamento foi definido pela atribui\u00e7\u00e3o da nova rela\u00e7\u00e3o de vari\u00e1veis prim\u00e1rias e secund\u00e1rias no atributo partitioning da cadeia cinem\u00e1tica.\nA solu\u00e7\u00e3o da equa\u00e7\u00e3o de restri\u00e7\u00e3o com o uso da pseudoinversa distribui o movimento da mesma forma para todas as vari\u00e1veis secund\u00e1rias. Isso resulta em movimenta\u00e7\u00e3o do ve\u00edculo em todos os momentos da execu\u00e7\u00e3o da tarefa, o que \u00e9 indesej\u00e1vel devido \u00e0 din\u00e2mica do ve\u00edculo ser bastante diferente da do manipulador. Nesse caso, a pseudoinvers\u00e3o ponderada pode minimizar o movimento do ve\u00edculo, pela distribui\u00e7\u00e3o de pesos para cada vari\u00e1vel a ser calculada. Essa opera\u00e7\u00e3o \u00e9 definida na Equa\u00e7\u00e3o 6.1.\nA classe KinematicChain tem um atributo denominado pInv que pode ser utilizado para definir um objeto que execute a opera\u00e7\u00e3o de pseudoinvers\u00e3o em matrizes. Uma classe de pseudoinvers\u00e3o ponderada denominada WPInv est\u00e1 dispon\u00edvel em Kast. Nela, pesos grandes implicam em menores valores para as vari\u00e1veis associadas. Uma terceira simula\u00e7\u00e3o utilizou essa classe, com pesos unit\u00e1rios para as vari\u00e1veis das juntas do manipulador e pesos de grande magnitude para as vari\u00e1veis do ve\u00edculo. Essa distribui\u00e7\u00e3o produziu resultados pr\u00f3ximos aos da primeira simula\u00e7\u00e3o.\nFigura 41. Vari\u00e1veis do manipulador\nNas simula\u00e7\u00f5es em que as vari\u00e1veis do ve\u00edculo s\u00e3o consideradas secund\u00e1rias, o movimento do efetuador final \u00e9 o mesmo apresentado na Figura 38. O comportamento das juntas do manipulador \u00e9 mostrado na Figura 42. O movimento do ve\u00edculo \u00e9 apresentado na Figura 43.\nFigura 42. Vari\u00e1veis do manipulador\nEssas duas simula\u00e7\u00f5es ilustram a reusabilidade dos componentes dos frameworks, pois novos arranjos foram produzidos com poucas modifica\u00e7\u00f5es de atributos.\n(a)\n(b)\n(c)\n(d)\n(e)\n(f)\n'Mrad>\t\u00ab.(\u201d\u00bb)\nFigura 43. Vari\u00e1veis do ve\u00edculo\n7.1.2\tReorientando o ve\u00edculo durante a execu\u00e7\u00e3o da tarefa\nO caso aqui simulado consiste na reorienta\u00e7\u00e3o do ve\u00edculo enquanto o UVMS executa a mesma tarefa do primeiro caso. Esse tipo\nde movimento do ve\u00edculo pode ser interessante para alinh\u00e1-lo com a correnteza e assim diminuir o arrasto por ela provocado (Antonelli, 2006).\nInicialmente assume-se que o ve\u00edculo deve girar 30o em um intervalo de 10s enquanto se mant\u00e9m na posi\u00e7\u00e3o inicial. O particionamento \u00e9 o mesmo do primeiro caso simulado, uma vez que o movimento/res-tri\u00e7\u00e3o do ve\u00edculo \u00e9 imposto. Assim, apenas as vari\u00e1veis do manipulador comp\u00f5em a parti\u00e7\u00e3o secund\u00e1ria da equa\u00e7\u00e3o de restri\u00e7\u00e3o. O movimento resultante nas juntas do manipulador \u00e9 apresentado na Figura 44.\nQuando a reorienta\u00e7\u00e3o \u00e9 feita com \u00e2ngulos maiores para um mesmo intervalo de tempo, o manipulador passa por uma configura\u00e7\u00e3o singular (qm2 = 0). Uma solu\u00e7\u00e3o para esse problema \u00e9 a ado\u00e7\u00e3o de um particionamento onde o ve\u00edculo tamb\u00e9m fa\u00e7a parte da parti\u00e7\u00e3o secund\u00e1ria e tenha seu movimento calculado, utilizando pseudoinver-s\u00e3o ponderada na solu\u00e7\u00e3o da equa\u00e7\u00e3o de restri\u00e7\u00e3o para minimizar o movimento do ve\u00edculo.\nOutra possibilidade para a solu\u00e7\u00e3o desse problema \u00e9 o uso de uma abordagem por estados de opera\u00e7\u00e3o (Santos, 2006). Nesse caso, pode-se estabelecer dois estados, um onde o ve\u00edculo fica estacion\u00e1rio e outro onde ele pode se movimentar. No primeiro, o particionamento \u00e9 o adotado na primeira simula\u00e7\u00e3o deste cen\u00e1rio. No segundo, as vari\u00e1veis do ve\u00edculo fazem parte da parti\u00e7\u00e3o secund\u00e1ria. O evento que leva do estado estacion\u00e1rio para o m\u00f3vel \u00e9 a proximidade de uma singularidade (para o manipulador planar, qm2 pr\u00f3ximo de 0). No estado m\u00f3vel, o evento que o leva ao estado estacion\u00e1rio \u00e9 a vari\u00e1vel qm2 ter um valor que afaste o manipulador da singularidade.\nAs duas solu\u00e7\u00f5es acima listadas foram simuladas. O ve\u00edculo sofre uma reorienta\u00e7\u00e3o de 0, 78rad no per\u00edodo de 10s enquanto deve executar a tarefa. Na primeira simula\u00e7\u00e3o, usando apenas pseudoinvers\u00e3o ponderada, as vari\u00e1veis qvi e qv2 juntamente com as vari\u00e1veis do manipulador formam a parti\u00e7\u00e3o secund\u00e1ria. Os pesos foram definidos como iguais a 100 para as vari\u00e1veis do ve\u00edculo e 1 para as do manipulador.\nA segunda simula\u00e7\u00e3o utiliza um modelo h\u00edbrido de estados. Uma nova classe derivada de Mission foi criada para definir o m\u00e9todo verifyS-tate, respons\u00e1vel por verificar o estado de opera\u00e7\u00e3o e, se necess\u00e1rio, modificar a cadeia cinem\u00e1tica e seu particionamento. Dois estados foram definidos, um estacion\u00e1rio e um m\u00f3vel. A simula\u00e7\u00e3o inicia no estado estacion\u00e1rio, para o qual apenas as vari\u00e1veis do manipulador devem ser determinadas. Quando o manipulador se aproxima de uma singularidade (qm2 menor que um limite m\u00ednimo), verifyState modifica o estado para m\u00f3vel. Nesse caso, \u00e9 feito um reparticionamento da equa-\n(a)\n(b)\n(c)\n(d)\n(f)\nFigura 44. Vari\u00e1veis do manipulador\n\u00e7\u00e3o de restri\u00e7\u00e3o, onde as vari\u00e1veis qvi, qv2, qmi e qm3 s\u00e3o consideradas secund\u00e1rias. qm2 passa a ser prim\u00e1ria, e um gerador de trajet\u00f3ria polinomial \u00e9 atribuido a ela para que seu valor passe do atual para um\nvalor maior que um limite m\u00e1ximo de seguran\u00e7a em um per\u00edodo de 1s. O sistema retorna ao estado m\u00f3vel quando verifyState verifica que qm2 tem um valor que o afaste da singularidade. Ao retornar ao estado estacion\u00e1rio, volta-se ao particionamento original e o gerador de trajet\u00f3ria associado \u00e0s vari\u00e1veis do manipulador s\u00e3o novamente utilizados, agora com as componentes de posi\u00e7\u00e3o atualizadas. Ocorre uma transi\u00e7\u00e3o de estacion\u00e1rio para m\u00f3vel aos 7s da simula\u00e7\u00e3o, com o sistema retornando ao estado estacion\u00e1rio aos 7,75s.\nNas Figuras 45 e 46 s\u00e3o mostradas as vari\u00e1veis do manipulador e do ve\u00edculo, respectivamente. As duas simula\u00e7\u00f5es s\u00e3o apresentadas juntas para compara\u00e7\u00e3o de resultados. Observa-se que os valores de guinada s\u00e3o impostos, e por isso s\u00e3o iguais nos dois casos.\nNelas, pode-se observar que ao se usar apenas a pseudoinversa, a junta qm2 do manipulador chega a atravessar a singularidade, como \u00e9 destacado na Figura 45c, devido \u00e0 problemas de precis\u00e3o num\u00e9rica. Por\u00e9m, o ve\u00edculo movimenta-se constantemente. O resultado produzido pelo modelo h\u00edbrido de estados restringiu o movimento do ve\u00edculo a um curto per\u00edodo de tempo, apesar de ter algumas descontinuidades nas transi\u00e7\u00f5es de estados. Esta \u00faltima solu\u00e7\u00e3o \u00e9 mais interessante, por\u00e9m, sob a \u00f3tica de minimizar o movimento do ve\u00edculo.\nVerifica-se nas duas simula\u00e7\u00f5es a flexibilidade, extensibilidade e reusabilidade dos frameworks. O simula\u00e7\u00e3o com modelo h\u00edbrido, em especial, foi facilmente implementada por reparticionamento da cadeia cinem\u00e1tica e vincula\u00e7\u00e3o de geradores de trajet\u00f3ria \u00e0 tarefa.\n7.1.3\tExecu\u00e7\u00e3o da Tarefa na Presen\u00e7a de Falha\nUma outra varia\u00e7\u00e3o da primeira simula\u00e7\u00e3o que pode ser tratada por um modelo h\u00edbrido de estados \u00e9 a ocorr\u00eancia de uma falha que limite a atua\u00e7\u00e3o do sistema. No caso, tem-se um travamento de uma junta do manipulador do UVMS durante a execu\u00e7\u00e3o de uma tarefa. A falha \u00e9 indicada por uma vari\u00e1vel de estado que uma implementa\u00e7\u00e3o de classe derivada de Uvms lan\u00e7a em um determinado instante de tempo. Nesta simula\u00e7\u00e3o, a falha ocorre pelo travamento da junta qm2 aos 19s.\nQuando a inst\u00e2ncia de miss\u00e3o detecta a falha, o sistema passa do estado inicial estacion\u00e1rio para o estado m\u00f3vel, o que implica no reparticionamento da equa\u00e7\u00e3o de restri\u00e7\u00e3o colocando a junta qm2 como prim\u00e1ria (com uma refer\u00eancia constante referente \u00e0 posi\u00e7\u00e3o em que travou) e as juntas da cadeia do ve\u00edculo como secund\u00e1rias. O sistema passa a ter redund\u00e2ncia, e uma inst\u00e2ncia de operador de pseudoinvers\u00e3o\nFigura 45. Vari\u00e1veis do manipulador\nponderada de matrizes \u00e9 alocada \u00e0 cadeia cinem\u00e1tica. Pelo processo de tentativa e erro, chega-se a um conjunto de pesos que fa\u00e7a o ve\u00edculo ter o menor movimento na dire\u00e7\u00e3o de balan\u00e7o (y), algum movimento na\nFigura 46. Vari\u00e1veis do ve\u00edculo\ndire\u00e7\u00e3o de avan\u00e7o (x) e o movimento de guinada (rota\u00e7\u00e3o em torno do eixo z) seja equivalente ao das juntas do manipulador qmi e qm3.\nO movimento do manipulador e do ve\u00edculo nessa simula\u00e7\u00e3o s\u00e3o apresentados nas Figuras 47 e 48 respectivamente.\nFigura 47. Vari\u00e1veis do manipulador\nA descontinuidade nesse caso \u00e9 devida ao travamento da junta, quando qm2 passa a ter um valor fixo. Apesar disso, observa-se que a tarefa consegue ser conclu\u00edda, ao custo da movimenta\u00e7\u00e3o do ve\u00edculo.\n(a)\n(b)\nVe\u00edculo - Velocidade de balan\u00e7o\n(d)\n(f)\n\nFigura 48. Vari\u00e1veis do veiculo\n7.1.4\tExecu\u00e7\u00e3o de uma trajet\u00f3ria fechada\nUma \u00faltima simula\u00e7\u00e3o utilizando o sistema de UVMS com um manipulador consiste no seguimento de uma trajet\u00f3ria fechada cujas\ndimens\u00f5es obrigar\u00e3o o ve\u00edculo a se mover. A trajet\u00f3ria \u00e9 mostrada na Figura 49. Essa trajet\u00f3ria \u00e9 percorrida em 46s. Durante todo o tempo, a orienta\u00e7\u00e3o do efetuador final se mant\u00e9m constante, com qt3 = 1,571.\nPara essa simula\u00e7\u00e3o, implementou-se novamente um modelo h\u00edbrido de estados cuja mudan\u00e7a \u00e9 determinada pela proximidade ou afastamento da singularidade do manipulador (monitorando o valor da vari\u00e1vel de junta qm2). Uma classe derivada de Mission foi criada para definir o m\u00e9todo verifyState. O estado inicial \u00e9 o estacion\u00e1rio, onde apenas as vari\u00e1veis do manipulador est\u00e3o na parti\u00e7\u00e3o secund\u00e1ria. Quando o evento de proximidade de singularidade \u00e9 detectado, o estado passa para m\u00f3vel, onde as juntas do ve\u00edculo e as juntas 1 e 3 do manipulador s\u00e3o da parti\u00e7\u00e3o secund\u00e1ria e as demais da parti\u00e7\u00e3o prim\u00e1ria.\nFigura 49. Trajet\u00f3ria a ser percorrida na execu\u00e7\u00e3o da tarefa\nAtribui-se um gerador de trajet\u00f3ria polinomial para qm2, de forma que seu valor passe do atual para o limite de seguran\u00e7a em um per\u00edodo de 3s. Ao passar desse limite, o sistema retorna ao estado estacion\u00e1rio, onde o particionamento original \u00e9 restaurado e os geradores de trajet\u00f3ria das vari\u00e1veis do ve\u00edculo s\u00e3o atualizados.\nO sistema fica no estado m\u00f3vel em dois per\u00edodos de tempo. O primeiro inicia aos 5, 55s e termina aos 7, 98s. O segundo inicia aos 10,67s e termina aos 13,1s. Os resultados da simula\u00e7\u00e3o s\u00e3o mostrados nas Figuras 50 e 51.\nA implementa\u00e7\u00e3o dessa simula\u00e7\u00e3o tem os elementos discutidos nos cap\u00edtulos anteriores sobre a quest\u00e3o da modificabilidade da cadeia cinem\u00e1tica e as implica\u00e7\u00f5es para as demais atividades que comp\u00f5em um sistema de interven\u00e7\u00e3o. Para cada vari\u00e1vel que \u00e9 definida como prim\u00e1ria torna-se necess\u00e1rio ter um fornecedor de refer\u00eancias de posi-\nFigura 50. Vari\u00e1veis do manipulador\n\u00e7\u00e3o e velocidade correspondente. A mudan\u00e7a de estados traz muitas vezes descontinuidades para o movimento das juntas, particularmente aquelas que passam de secund\u00e1rias a prim\u00e1rias, devido \u00e0 dificuldades para efetuar a transi\u00e7\u00e3o suave entre duas refer\u00eancias de trajet\u00f3ria. Isso\n(a)\n(b)\n(c)\n(d)\nVe\u00edculo - Velocidade de guinada\t\t\n0.6\t\t\n0*\t\t\n1\t0.3\t\t\n0.2\t\t\n0.1\t\t\n\t\t\n0.1,\t\t10\t20\t30\t40 *(\u00bb)\n(f)\nFigura 51. Vari\u00e1veis do ve\u00edculo\n\u00e9 evidente nesta simula\u00e7\u00e3o a cada mudan\u00e7a de estado do sistema de interven\u00e7\u00e3o. A sistematiza\u00e7\u00e3o para o planejamento de movimento, por\u00e9m, prova-se efetiva para a resolu\u00e7\u00e3o das tarefas.\n7.2\tUVMS COM DOIS MANIPULADORES EM COOPERA\u00c7\u00c3O\nO caso tratado neste cen\u00e1rio \u00e9 de um UVMS composto por dois manipuladores planares de tr\u00eas graus de liberdade que operam em coopera\u00e7\u00e3o. A estrutura dos manipuladores \u00e9 a mesma do cen\u00e1rio anterior. O caso de dois manipuladores cooperando em um UVMS foi analisado na extens\u00e3o da cinem\u00e1tica por helicoides do Cap\u00edtulo 4, e o modelo cinem\u00e1tico correspondente \u00e9 apresentado na Se\u00e7\u00e3o C.3.2. O cen\u00e1rio \u00e9 ilustrado na Figura 52. Como no cen\u00e1rio anterior, o modelo cinem\u00e1tico desse sistema de interven\u00e7\u00e3o \u00e9 descrito em um arquivo XML, que \u00e9 usado para instancia\u00e7\u00e3o de objetos KCComposable que os represente nas simula\u00e7\u00f5es.\nFigura 52. Cen\u00e1rio de simula\u00e7\u00e3o de um UVMS com dois manipuladores em coopera\u00e7\u00e3o\n7.2.1\tPosicionamento e encaixe de uma pe\u00e7a\nNesta simula\u00e7\u00e3o, a tarefa consiste no posicionamento de uma pe\u00e7a retangular e posterior encaixe em um painel. Para tanto, define-se como a tarefa em quest\u00e3o o movimento do centro da pe\u00e7a. A posi\u00e7\u00e3o inicial desse ponto \u00e9 coincidente com a origem do sistema de coordenadas inercial, e os eixos de seu referencial est\u00e3o alinhados com ele, assim nP.t=o = [ 0 0 0 ]T.\nA trajet\u00f3ria dessa pe\u00e7a \u00e9 composta por diferentes movimentos. Inicialmente, ela se desloca 0, 75m na dire\u00e7\u00e3o de 30o em rela\u00e7\u00e3o ao eixo x do referencial inercial em um per\u00edodo de 10s. Ap\u00f3s, ela se\ndesloca 1, 65m horizontalmente em um tempo de 15s. Nessa posi\u00e7\u00e3o, ela rotaciona 15o em rela\u00e7\u00e3o ao eixo x do referencial inercial em 5s e por fim, se desloca 0, 3m nessa dire\u00e7\u00e3o em um tempo de 5s. A tarefa, ent\u00e3o, tem a dura\u00e7\u00e3o total de 35s.\nA pe\u00e7a \u00e9 movimentada pelos dois manipuladores vinculados ao UVMS. Os seus efetuadores finais agarram a pe\u00e7a por al\u00e7as de transporte, mantendo posi\u00e7\u00e3o e orienta\u00e7\u00e3o fixas em rela\u00e7\u00e3o ao centro da pe\u00e7a. Seus valores s\u00e3o iguais a qri = [ \u20140, 326 \u20141,011 0 ] e qr2 = [ \u20140, 326 1,011 0 ]T, onde o subscrito r\u00bf denota a posi\u00e7\u00e3o relativa do efetuador i em rela\u00e7\u00e3o ao centro da pe\u00e7a. Durante a execu\u00e7\u00e3o da tarefa, o ve\u00edculo mant\u00e9m uma postura fixa igual a nv = [ \u20146,3 0 0 ]T.\nAs vari\u00e1veis de juntas da cadeia cinem\u00e1tica do sistema de interven\u00e7\u00e3o qt1 , qt2 e qt3 s\u00e3o associadas \u00e0s componentes da postura da pe\u00e7a np. A postura do ve\u00edculo \u00e9 representada pelas vari\u00e1veis de juntas qvi, qv2 e qv3. As posi\u00e7\u00f5es relativas entre os efetuadores finais e o centro da pe\u00e7a s\u00e3o representadas por duas cadeias virtuais cujas vari\u00e1veis s\u00e3o qri>1, qr\u00bf,2 e qr\u00bfj3, onde i = 1,2 denota o efetuador final. Este conjunto de vari\u00e1veis forma a parti\u00e7\u00e3o prim\u00e1ria da equa\u00e7\u00e3o de restri\u00e7\u00e3o.\nAs refer\u00eancias para as vari\u00e1veis da pe\u00e7a s\u00e3o fornecidas por geradores de trajet\u00f3ria compostos (inst\u00e2ncias de TrajSequence) que agregam geradores de trajet\u00f3rias lineares (TrajLinearPoly) e de valores constantes (TrajConst) para a posi\u00e7\u00e3o e a orienta\u00e7\u00e3o da pe\u00e7a. Para as demais vari\u00e1veis, que devem ter um valor constante, s\u00e3o utilizados geradores de trajet\u00f3ria instanciados de TrajConst.\nA implementa\u00e7\u00e3o da simula\u00e7\u00e3o \u00e9 similar \u00e0 feita para o cen\u00e1rio anterior. As vari\u00e1veis a serem determinadas s\u00e3o as das juntas dos dois manipuladores-\tqmi,i,\tqmi,2,\tqmi,3 ,\tqm2,i ,\tqm2,2\te\tqm2,3 .\tNovamente,\na matriz Ns \u00e9 quadrada. O passo da simula\u00e7\u00e3o \u00e9 0,01, e o m\u00e9todo de integra\u00e7\u00e3o das velocidades \u00e9 o de Euler. Foi utilizado o modo de cinem\u00e1tica inversa de malha fechada do componente Guidance. As vari\u00e1veis consideradas nessa realimenta\u00e7\u00e3o s\u00e3o as das cadeias r1 e r2, que podem ser determinadas pela cinem\u00e1tica direta do UVMS para os seus efetuadores finais e subsequente transforma\u00e7\u00e3o do resultado para o referencial da pe\u00e7a. Em rela\u00e7\u00e3o \u00e0 essas vari\u00e1veis, os ganhos da matriz Kp utilizados foram 50 para as juntas translacionais e 10 para as juntas rotativas.\nAs trajet\u00f3rias percorridas pelos efetuadores finais s\u00e3o tra\u00e7adas no gr\u00e1fico da Figura 53. Uma composi\u00e7\u00e3o das posturas do sistema de interven\u00e7\u00e3o em diferentes instantes da execu\u00e7\u00e3o da tarefa \u00e9 mostrada na Figura 54. Os gr\u00e1ficos da Figura 55 apresentam a varia\u00e7\u00e3o das\ncomponentes de postura dos efetuadores dos manipuladores 1 e 2 ao longo do tempo.\nFigura 53. Movimento da pe\u00e7a e dos efetuadores finais\nFigura 54. Movimento do UVMS durante a execu\u00e7\u00e3o da tarefa\nAs posi\u00e7\u00f5es das juntas dos manipuladores e suas velocidades s\u00e3o apresentadas nas Figuras 56 e 57.\nNesse cen\u00e1rio aparecem as cadeias de posi\u00e7\u00e3o relativa do efetu-ador final em rela\u00e7\u00e3o \u00e0 pe\u00e7a, o que acrescenta um maior n\u00famero de vari\u00e1veis \u00e0 equa\u00e7\u00e3o de restri\u00e7\u00e3o. Al\u00e9m disso, o uso de mais um manipulador implicou no acr\u00e9scimo de um circuito \u00e0 cadeia cinem\u00e1tica.\n(a)\n^(rad)\ty^m)\n(c)\nFigura 55. Postura dos efetuadores finais ao longo do tempo\nA implementa\u00e7\u00e3o dessa simula\u00e7\u00e3o tem a mesma estrutura b\u00e1sica empregada na implementa\u00e7\u00e3o da simula\u00e7\u00e3o do primeiro caso do primeiro cen\u00e1rio, modificando-se apenas a inst\u00e2ncia de Uvms empregada e os\n(rad)\n(b)\n(a)\n(d)\n(c)\n(f)\nFigura 56. Vari\u00e1veis do manipulador 1\narquivos de defini\u00e7\u00e3o do modelo da cadeia cinem\u00e1tica e da tarefa. Assim, a sistematiza\u00e7\u00e3o definida pelos frameworks facilitou o reuso de componentes e o desenvolvimento de novas simula\u00e7\u00f5es.\n(rarf)\n(b)\n(a)\n(d)\n(c)\n(f)\nFigura 57. Vari\u00e1veis do manipulador 2\nNa simula\u00e7\u00e3o realizada, os circuitos independentes da cadeia do sistema de interven\u00e7\u00e3o foram descritos em um atributo de KCCompo-sable de forma que a matriz de rede fosse gerada como foi definida no\nAp\u00eandice C. Observa-se, por\u00e9m, que a hierarquia de classe Kinema-ticChain tem um m\u00e9todo de determina\u00e7\u00e3o de circuitos independentes com base no pacote NetworkX de manipula\u00e7\u00e3o de grafos do Python (NetworkX, 2011). No caso simulado, esse m\u00e9todo gerou uma matriz de circuitos diferente da definida na modelagem do Ap\u00eandice C, tamb\u00e9m correta. Uma simula\u00e7\u00e3o executada com a matriz gerada pelo m\u00e9todo do framework produziu os mesmos resultados da simula\u00e7\u00e3o original.\n7.3\tDOIS UVMS EM COOPERA\u00c7\u00c3O\nA coopera\u00e7\u00e3o entre UVMS \u00e9 um tema ainda pouco explorado na literatura. A modelagem cinem\u00e1tica por helicoides de um sistema de interven\u00e7\u00e3o desse tipo foi um dos casos considerados na an\u00e1lise do Cap\u00edtulo 4. O cen\u00e1rio em quest\u00e3o utiliza dois UVMS planares com a mesma estrutura cinem\u00e1tica daquele tratado na Se\u00e7\u00e3o 7.1. O modelo deste cen\u00e1rio \u00e9 desenvolvido na Se\u00e7\u00e3o C.3.3, e uma visualiza\u00e7\u00e3o deste \u00e9 mostrada na Figura 58.\nO modelo cinem\u00e1tico deste sistema foi descrito em um arquivo XML. Assim, simula\u00e7\u00f5es baseadas no framework Kast podem facilmente instanciar esse sistema de interven\u00e7\u00e3o atrav\u00e9s do factory method da classe KCFactory.\nFigura 58. Cen\u00e1rio de simula\u00e7\u00e3o de dois UVMS em coopera\u00e7\u00e3o\n7.3.1\tPosicionamento de uma pe\u00e7a\nA tarefa a ser realizada nessa simula\u00e7\u00e3o consiste na movimenta\u00e7\u00e3o de uma pe\u00e7a retangular entre dois pontos como se fosse desconectada de um equipamento para ser reconectada em outro. A posi\u00e7\u00e3o inicial da pe\u00e7a \u00e9 coincidente com a origem do sistema de coordenadas iner-cial e seus eixos est\u00e3o inclinados 30o em rela\u00e7\u00e3o a esse sistema, ou seja nP,\u00ed=o = [ 0 0 0,524 ] . Ao final da tarefa, que deve ocorrer em 25s, a postura da pe\u00e7a dever\u00e1 ser nP,t=25 = [ -0, 75 \u20142 0,524 ]T.\nDiferentes a\u00e7\u00f5es s\u00e3o realizadas sobre a pe\u00e7a. Nos primeiros 5s ela deve rotacionar \u201430o, alinhando seu referencial com o referencial inercial. A seguir, ela se desloca \u2014 2m verticalmente em um per\u00edodo de 10s. Segue-se um movimento horizontal de \u20140, 75m em um tempo de 5s. Por fim, ela \u00e9 rotacionada 30o na posi\u00e7\u00e3o final em 5s.\nOs efetuadores finais dos dois UVMS s\u00e3o posicionados ao longo do eixo x da pe\u00e7a. Suas posturas em rela\u00e7\u00e3o ao referencial da pe\u00e7a s\u00e3o qri = [ \u20142,03 0 0 ]T e qr2 = [ \u20142,015 0 \u20143,142 ]T. Os ve\u00edculos se mant\u00e9m estacion\u00e1rios durante a execu\u00e7\u00e3o da tarefa em nV1 = [ \u20148, 25\t0,\t45\t\u20140,\t349 ]T e\tnV2\t= [\t7, 45\t2, 05\t\u20142, 618 ]T.\nA trajet\u00f3ria da pe\u00e7a \u00e9 descrita pelas vari\u00e1veis de juntas da cadeia cinem\u00e1tica do sistema de interven\u00e7\u00e3o qt1, q\u00cd2 e q\u00cd3. Os ve\u00edculos s\u00e3o representados pelas vari\u00e1veis qV\u00ed j, onde i = 1,2 identifica o ve\u00edculo e j = 1,2,3 identifica a junta da cadeia virtual associada a ele. Esse conjunto de vari\u00e1veis forma a parti\u00e7\u00e3o prim\u00e1ria da equa\u00e7\u00e3o de restri\u00e7\u00e3o. As refer\u00eancias para as vari\u00e1veis da pe\u00e7a s\u00e3o fornecidas por geradores de trajet\u00f3ria compostos (TrajSequence) agregando inst\u00e2ncias de geradores de trajet\u00f3rias lineares (TrajLinearPoly) e de valores constantes (TrajConst). Para as demais vari\u00e1veis s\u00e3o utilizados geradores de trajet\u00f3ria instanciados de TrajConst.\nA implementa\u00e7\u00e3o da simula\u00e7\u00e3o segue a sistematiza\u00e7\u00e3o j\u00e1 utilizada nos cen\u00e1rios anteriores. As vari\u00e1veis a serem determinadas s\u00e3o as das juntas dos dois manipuladores: qm\u00ed j, i = 1,2 e j = 1, 2, 3 identificando o manipulador e a vari\u00e1vel de junta deste, respectivamente. Novamente, a matriz Ns \u00e9 quadrada. O passo da simula\u00e7\u00e3o \u00e9 0,01, e o m\u00e9todo de integra\u00e7\u00e3o das velocidades \u00e9 o de Euler. Foi utilizado o modo de cinem\u00e1tica inversa de malha fechada do componente Guidance. Os ganhos da matriz Kp foram definidos como 50 para as juntas translacionais das cadeias relativas r\u00bf e 10 para as suas juntas rotativas.\nAs trajet\u00f3rias percorridas pelos efetuadores finais e pela pe\u00e7a s\u00e3o mostradas no gr\u00e1fico da Figura 59. Na Figura 60 apresentam-se as\nposturas do sistema de interven\u00e7\u00e3o ao longo da execu\u00e7\u00e3o da tarefa. As posturas dos efetuadores finais s\u00e3o tra\u00e7adas nos gr\u00e1ficos da Figura 61.\nFigura 59. Movimento da pe\u00e7a e dos efetuadores finais\nFigura 60. Movimento dos UVMS durante a execu\u00e7\u00e3o da tarefa\nAs posi\u00e7\u00f5es das juntas dos manipuladores e suas velocidades s\u00e3o apresentadas nas Figuras 62 e 63.\nComo no cen\u00e1rio anterior, a cadeia forma dois circuitos independentes, por\u00e9m com arranjos diferentes da cadeia daquele sistema. Novamente, a implementa\u00e7\u00e3o da simula\u00e7\u00e3o se beneficiou do reuso de componentes de software, bastando derivar uma classe de Uvms para representar o sistema de interven\u00e7\u00e3o. O modelo da cadeia cinem\u00e1tica e a tarefa foram descritos em um arquivo XML, como anteriormente.\n(a)\n(c)\n\nFigura 61. Postura dos efetuadores finais ao longo do tempo\nAssim como no cen\u00e1rio anterior, os circuitos independentes da cadeia foram definidos em um atributo de KCComposable para que a matriz de rede fosse gerada como foi definida no Ap\u00eandice C, possibi-\n(a)\n(b)\n(c)\n(d)\n(f)\nFigura 62. Vari\u00e1veis do manipulador 1\nlitando a depura\u00e7\u00e3o do c\u00f3digo e verifica\u00e7\u00e3o de sua corre\u00e7\u00e3o. Por\u00e9m, os mesmos resultados dessa simula\u00e7\u00e3o foram observados quando foi utilizada a matriz de circuitos gerada pela inst\u00e2ncia de KinematicChain.\n?msl(ra<\u00ed)\n(b)\n(a)\n(d)\n(c)\n(f)\nFigura 63. Vari\u00e1veis do manipulador 2\n7.3.2\tExecu\u00e7\u00e3o de tarefa que exige deslocamento dos UVMS\nO primeiro caso desse cen\u00e1rio tratou de uma tarefa onde os ve\u00edculos puderam manter sua posi\u00e7\u00e3o e orienta\u00e7\u00e3o. Um segundo caso \u00e9\ndefinido de forma que os ve\u00edculos eventualmente tivessem de abandonar a sua condi\u00e7\u00e3o estacion\u00e1ria. A tarefa em quest\u00e3o \u00e9 uma varia\u00e7\u00e3o da primeira, onde o deslocamento vertical passa a -3,5m em 17s e o deslocamento horizontal subsequente \u00e9 de \u20141, 25m em 7s. O tempo total de execu\u00e7\u00e3o da tarefa passa ent\u00e3o a 34s. Na Figura 64 s\u00e3o tra\u00e7ados os deslocamentos da pe\u00e7a e dos efetuadores finais dos UVMS realizados durante a execu\u00e7\u00e3o da tarefa.\nFigura 64. Movimento da pe\u00e7a e dos efetuadores finais\nUma classe derivada de Mission \u00e9 criada para implementar o m\u00e9todo verifyUpdate que monitore e modifique a cadeia cinem\u00e1tica do cen\u00e1rio de acordo com a necessidade. Cada UVMS tem seu pr\u00f3prio estado de opera\u00e7\u00e3o, que \u00e9 definido de acordo pelo m\u00e9todo. verifyUpdate verifica a proximidade de singularidade das juntas qmi,2 , i = 1, 2 do sistema, onde i identifica o UVMS ao qual o manipulador est\u00e1 vinculado.\nInicialmente, ambos UVMS est\u00e3o em estado estacion\u00e1rio. Ao se detectar a proximidade de singularidade, um UVMS passa ao estado m\u00f3vel, e ent\u00e3o o reparticionamento \u00e9 feito de forma que as juntas qvi, qmi,i e qmi,3 passem a ser secund\u00e1rias, enquanto qmi,2 passa a ser prim\u00e1ria, com um gerador de trajet\u00f3ria TrajLinearPoly associado \u00e0 ela para levar sua posi\u00e7\u00e3o \u00e0 um limite de seguran\u00e7a (0, 78rad) em um per\u00edodo de 3s. O retorno ao estado estacion\u00e1rio acontece ao se verificar que a junta qmi,2 est\u00e1 com um valor acima do limite de seguran\u00e7a, onde o reparticionamento de vari\u00e1veis do UVMS volta ao estado original e os\ngeradores de refer\u00eancias do ve\u00edculo s\u00e3o atualizados. A verifica\u00e7\u00e3o dos estados \u00e9 feita de forma independente para os dois UVMS.\nNa execu\u00e7\u00e3o da simula\u00e7\u00e3o, o UVMS 1 esteve no estado m\u00f3vel durante o intervalo entre 31,32s e 33, 76s. O UVMS 2 esteve no estado m\u00f3vel em dois intervalos, o primeiro entre 17, 81 s e 20, 24s e o segundo entre 25, 66s e 28,09s. O movimento translacional dos ve\u00edculos durante a execu\u00e7\u00e3o da tarefa \u00e9 esbo\u00e7ado na Figura 65.\nMovimento dos Ve\u00edculos\n\u2014\tVe\u00edculo 1\n\u2014\tVe\u00edculo 2\n\u2022\tInicial 1\n\u2022\tInicial 2\n6, i.o\n0.5\n0.0\n\u201c\u00b0-10\t-8\t-6\t-4\t-2\t0\t2\t4\t6\t8\nx(m)\nFigura 65. Transla\u00e7\u00e3o dos ve\u00edculos durante a execu\u00e7\u00e3o da tarefa\nAs Figuras 66 e 67 mostram as vari\u00e1veis do UVMS 1. As vari\u00e1veis do UVMS 2 s\u00e3o apresentadas nas Figuras 68 e 69. Os picos de velocidade observados s\u00e3o causados pelo chaveamento de estados. Um estudo para minimizar esse comportamento na troca de estados \u00e9 analisado em (Simas; Fontan; Martins, 2011).\nVerifica-se pela Figura 64 que a tarefa \u00e9 executada pelos efetu-adores finais de acordo com as defini\u00e7\u00f5es de movimento da pe\u00e7a e seu relacionamento com os efetuadores. Com o uso do modelo h\u00edbrido de estados, foi poss\u00edvel executar a tarefa fazendo os ve\u00edculos se movimentarem apenas em situa\u00e7\u00f5es onde os manipuladores a eles vinculados estivessem pr\u00f3ximos a singularidades. Apesar das descontinuidades no movimento das juntas, observa-se que a trajet\u00f3ria \u00e9 cont\u00ednua.\nEm rela\u00e7\u00e3o \u00e0 implementa\u00e7\u00e3o, fez-se apenas a modifica\u00e7\u00e3o do componente de miss\u00e3o utilizado de forma que o m\u00e9todo verifyUpdate\n(a)\n(b)\n(c)\n(d)\nManipulador 1 - Junta 3 - Velocidade\n(f)\nFigura 66. Vari\u00e1veis do manipulador do UVMS 1\nfosse definido para tratar da verifica\u00e7\u00e3o ocorr\u00eancia de eventos de mudan\u00e7a de estados e a adequa\u00e7\u00e3o da cadeia cinem\u00e1tica e geradores de trajet\u00f3ria para quando o estado de cada ve\u00edculo fosse modificado.\nVe\u00edculo 1 - Avan\u00e7o - Posi\u00e7\u00e3o\n\\(rad)\ty^lrnj\t\u2019A1\n(a)\nVe\u00edculo 1 - Balan\u00e7o - Posi\u00e7\u00e3o\n'0-20\t5\t10\t15\t20\t25\t30\ni(a)\n(c)\nVe\u00edculo 1 - Guinada - Posi\u00e7\u00e3o\n0\t5\t10\t15\t20\t25\t30\n\u00ed(s)\n(e)\nVe\u00edculo 1 - Avan\u00e7o - Velocidade\n0.18|-----T-----T------T-----T------T------F-\n0.06\n0.04\n0.02\n0000\tS\t10\t15\t20\t25\t30\n\u00ed(a)\n(b)\nVe\u00edculo 1 - Balan\u00e7o - Velocidade\n0.05|-----1-----1------1-----1------1------1-\n10\t15\t20\t25\t30\n\u00ed(\u00bb)\n(d)\nVe\u00edculo 1 - Guinada - Velocidade\n\u20140.25\n0-300\t5\t10\t15\t20\t25\t30\n\u00ed(a)\n(f)\nFigura 67. Vari\u00e1veis do ve\u00edculo do UVMS 1\n7.4\tDOIS UVMS COM DOIS MANIPULADORES EM COOPERA\u00c7\u00c3O\nEm aplica\u00e7\u00f5es como a explora\u00e7\u00e3o de petr\u00f3leo em \u00e1guas profundas, \u00e9 comum ter sistemas de interven\u00e7\u00e3o com pelo menos dois mani-\n,(\u2122d)\t\u00abm./\u2019-od)\n(a) (b)\n(c)\n(d)\nManipulador 2 - Junta 3 - Velocidade\n(f)\nFigura 68. Vari\u00e1veis do manipulador do UVMS 2\npuladores. Eles usualmente trabalham de forma isolada. O desenvolvimento de autonomia de opera\u00e7\u00e3o pode facilitar a coopera\u00e7\u00e3o entre esses sistemas, e com isso novas aplica\u00e7\u00f5es. O cen\u00e1rio em quest\u00e3o sur-\n(a)\n(b)\n(c)\n(d)\nVe\u00edculo 2 - Guinada - Posi\u00e7\u00e3o\nU\tb\t10\tlb\t20\t2b\t30\n\u00ed(s)\n(e)\n(f)\nFigura 69. Vari\u00e1veis do ve\u00edculo do UVMS 2\ngiu do desenvolvimento do modelo de coopera\u00e7\u00e3o entre manipuladores de dois UVMS do Cap\u00edtulo 4, sendo detalhado na Se\u00e7\u00e3o C.3.4 para um caso planar. Cada UVMS tem dois manipuladores vinculados, como \u00e9\nmostrado na Figura 70.\nFigura 70. Cen\u00e1rio de simula\u00e7\u00e3o de dois UVMS com dois manipuladores cada em coopera\u00e7\u00e3o\nComo nos demais cen\u00e1rios, a cadeia cinem\u00e1tica correspondente ao sistema de interven\u00e7\u00e3o foi descrito em um arquivo XML para compor o banco de cadeias cinem\u00e1ticas e seu uso em simula\u00e7\u00f5es com o Kast.\n7.4.1\tPosicionamento de uma estrutura cil\u00edndrica\nA tarefa desta simula\u00e7\u00e3o baseou-se nas opera\u00e7\u00f5es de conten\u00e7\u00e3o do vazamento de petr\u00f3leo causado pelo acidente da plataforma Deepwater Horizon (British Petroleum, 2010; Leff; Plushnick-Masti, 2010). Uma estrutura cil\u00edndrica de conten\u00e7\u00e3o deve ser corretamente posicionada sobre o local do vazamento, e dois UVMS s\u00e3o usados para esse fim em fun\u00e7\u00e3o das dimens\u00f5es da estrutura. Assume-se que a posi\u00e7\u00e3o inicial da pe\u00e7a \u00e9 a origem do referencial inercial. O cilindro de conten\u00e7\u00e3o tem raio 1, 75m, e \u00e9 assumido como ponto de refer\u00eancia o seu centro.\nA pe\u00e7a deve se deslocar em uma trajet\u00f3ria definida por diferentes pontos de passagem, levando-a da origem do referencial inercial \u00e0 posi\u00e7\u00e3o xp = 1, 5, yp = \u20140, 25. Durante esse deslocamento, a pe\u00e7a rotaciona 15o. Essa opera\u00e7\u00e3o ocorre em um per\u00edodo de 30s. Ap\u00f3s, a pe\u00e7a deve ser deslocada mais \u20140, 25m na dire\u00e7\u00e3o vertical mantendo a orienta\u00e7\u00e3o em um per\u00edodo de 15s.\nDurante o per\u00edodo de execu\u00e7\u00e3o da tarefa (45s), os ve\u00edculos perT manecem estacion\u00e1rios. As posturas s\u00e3o = [ \u20146, 9\t4, 0\t0, 524\ne nV2 = [ 5, 66 5, 66 \u20142, 356 ]T.\nOs efetuadores finais dos quatro manipuladores envolvidos devem manter posturas constantes em rela\u00e7\u00e3o ao referencial da pe\u00e7a. Estas s\u00e3o definidas pelas cadeias r\u00bfj, onde i = 1,2 e j = 1, 2 designam o ve\u00edculo e o manipulador respectivamente. Suas posturas s\u00e3o qri1 = [ -1, 24 -1, 27 0, 75 ]T, qn2 = [ -1, 478 0, 78 0, 088 ]T, qm = [ -0, 217 1, 756 -1,466 ]T e qr22 = [ 1, 756 -0, 004 -3,089 ]T.\nA trajet\u00f3ria da pe\u00e7a, representada pelas vari\u00e1veis de juntas qt1, qt2 e qt3, foi gerada por duas instancias de TrajSequence, uma para posi\u00e7\u00e3o e outra para orienta\u00e7\u00e3o. Em rela\u00e7\u00e3o \u00e0 posi\u00e7\u00e3o, a trajet\u00f3ria curva foi gerada por uma B-spline c\u00fabica a partir de pontos de passagem especificados (uma inst\u00e2ncia de TrajSpline). O trecho de deslocamento vertical foi gerado por um interpolador linear polinomial de 5a ordem (TrajLinearPoly). Quanto \u00e0 orienta\u00e7\u00e3o, a sua varia\u00e7\u00e3o durante os 30s iniciais foi gerada por uma inst\u00e2ncia de TrajLinearPoly, seguida por uma inst\u00e2ncia de TrajConst para gerar refer\u00eancias de valor constante. Para as demais vari\u00e1veis prim\u00e1rias (as dos ve\u00edculos e das cadeias relativas dos efetuadores \u00e0 pe\u00e7a) foram utilizadas inst\u00e2ncias de TrajConst.\nAs vari\u00e1veis das juntas dos manipuladores s\u00e3o identificadas como qmvij, onde v = 1,2, i = 1,2 e j = 1,2,3 correspondem respectivamente ao ve\u00edculo, ao manipulador e \u00e0 junta. A cadeia cinem\u00e1tica desse sistema forma quatro circuitos independentes, e com isso a matriz Ns \u00e9 quadrada para esse particionamento. O passo da simula\u00e7\u00e3o \u00e9 0,01, sendo usado o m\u00e9todo default (Euler) para integra\u00e7\u00e3o das velocidades. A inst\u00e2ncia de Guidance foi definida para usar a cinem\u00e1tica inversa de malha fechada em rela\u00e7\u00e3o \u00e0s vari\u00e1veis das cadeias rj, com ganhos iguais a 50 para as juntas translacionais e 10 para as juntas rotativas.\nAs trajet\u00f3rias percorridas pelos efetuadores finais e pela pe\u00e7a s\u00e3o mostradas na Figura 71. Na Figura 72 apresentam-se as posturas que o sistema de interven\u00e7\u00e3o assume ao longo da execu\u00e7\u00e3o da tarefa. As posturas dos efetuadores s\u00e3o tra\u00e7adas nos gr\u00e1ficos das Figuras 73 e 74.\nAs posi\u00e7\u00f5es das juntas dos manipuladores e suas velocidades s\u00e3o apresentadas nas Figuras 75 a 78. As descontinuidades observadas nas velocidades, como por exemplo no realce da Figura 75b, s\u00e3o causadas pela troca entre os geradores de trajet\u00f3ria usados para cada trecho. A continuidade no chaveamento de geradores de trajet\u00f3ria para cada trecho de caminho \u00e9 um problema a ser abordado em vers\u00f5es futuras do framework Kast.\nApesar da cadeia cinem\u00e1tica mais complexa, com aumento do n\u00famero de circuitos independentes (e consequentemente de vari\u00e1veis), a implementa\u00e7\u00e3o da simula\u00e7\u00e3o foi facilitada pelo reuso dos componentes dos frameworks e das simula\u00e7\u00e3o anteriores. As modifica\u00e7\u00f5es em\nFigura 71. Movimento da pe\u00e7a e dos efetuadores finais\nFigura 72. Movimento dos UVMS durante a execu\u00e7\u00e3o da tarefa\nrela\u00e7\u00e3o aos cen\u00e1rios anteriores foram a cria\u00e7\u00e3o de uma classe derivada de Uvms para determinar a cinem\u00e1tica direta dos manipuladores e pos-\n(a)\n(c)\nEfetuador final 12 - componente ye\n\nFigura 73. Postura dos efetuadores finais 11 e 12 ao longo do tempo\nterior c\u00e1lculo das posi\u00e7\u00f5es relativas destes em rela\u00e7\u00e3o \u00e0 pe\u00e7a no referencial desta, e na descri\u00e7\u00e3o da cadeia cinem\u00e1tica em um arquivo XML. A tarefa tamb\u00e9m foi descrita em arquivo XML.\n(a)\n(b)\n(c)\nEfetuador final 22 - componente ye\n(d)\n^(rad)\n(f)\nFigura 74. Postura dos efetuadores finais 21 e 22 ao longo do tempo\nAssim como nos cen\u00e1rios anteriores, os circuitos independentes da cadeia cinem\u00e1tica foram definidos em um atributo de KCComposable para que a matriz de rede fosse gerada como foi definida no Ap\u00eandice C.\n(a)\n(b)\nManipulador 11 - Junta 2 - Posi\u00e7\u00e3o\n(c)\nManipulador 11 - Junta 2 - Velocidade\n(d)\n(rod)\nManipulador 11 -Junta 3 - Velocidade\n(f)\nFigura 75. Vari\u00e1veis do manipulador 11\nOs testes com a matriz de circuitos calculada pelo Kast resultaram nos mesmos resultados, como se havia observado nas simula\u00e7\u00f5es anteriores.\nAs simula\u00e7\u00f5es apresentadas neste cap\u00edtulo demonstraram a efe-\n(a)\n(b)\n(c)\nManipulador 12 - Junta 2 - Velocidade\n(d)\n(f)\nFigura 76. Vari\u00e1veis do manipulador 12\ntividade da sistematiza\u00e7\u00e3o proposta nesta tese. O uso dos frameworks projetados nos cap\u00edtulos anteriores facilitou o desenvolvimento das simula\u00e7\u00f5es atrav\u00e9s de uma organiza\u00e7\u00e3o bem definida destas. Al\u00e9m disso,\n(a)\n(b)\n(c)\nManipulador 21 - Junta 2 - Velocidade\n(d)\nManipulador 21 -Junta 3 - Velocidade\n(f)\n\nFigura 77. Vari\u00e1veis do manipulador 21\nressaltam-se outras caracter\u00edsticas que agilizaram o desenvolvimento, como o reuso de componentes e a extensibilidade. Os resultados das diferentes simula\u00e7\u00f5es ilustra que a sistematiza\u00e7\u00e3o pode ser empregada\n(a)\n(b)\n(c)\n(d)\nManipulador 22 - Junta 3 - Velocidade\n(f)\nFigura 78. Vari\u00e1veis do manipulador 22\nem estrat\u00e9gias de planejamento de movimento para diferentes cen\u00e1rios de interven\u00e7\u00e3o subaqu\u00e1tica, seja em rela\u00e7\u00e3o ao n\u00famero de UVMS e de manipuladores envolvidos ou rela\u00e7\u00e3o \u00e0s tarefas a serem executadas.\n186\n8\tCONCLUS\u00c3O\nEste trabalho procurou contribuir para a evolu\u00e7\u00e3o dos sistemas de interven\u00e7\u00e3o subaqu\u00e1tica em dire\u00e7\u00e3o \u00e0 autonomia plena. Para tanto, fez-se uma an\u00e1lise desses sistemas, destacando os requisitos importantes para a autonomia. Destes, o planejamento de movimento foi definido como o objeto de pesquisa da tese, por ser considerado essencial para a autonomia de opera\u00e7\u00e3o.\nAssim, foram estudadas diferentes configura\u00e7\u00f5es cinem\u00e1ticas de sistemas, visando estender o modelo por helicoides elaborado em trabalhos anteriores. Com base nessa extens\u00e3o, foi elaborada uma sistematiza\u00e7\u00e3o para desenvolvimento e implementa\u00e7\u00e3o de estrat\u00e9gias de planejamento de movimento.\nAs contribui\u00e7\u00f5es oriundas deste trabalho e as perspectivas de trabalhos futuros s\u00e3o relacionadas a seguir.\n8.1\tCONTRIBUI\u00c7\u00d5ES DA TESE\nAs principais contribui\u00e7\u00f5es deste trabalho procuraram atender ao objetivo geral definido para a tese, qual seja, analisar a cinem\u00e1tica de sistemas de interven\u00e7\u00e3o subaqu\u00e1tica a fim de desenvolver estrat\u00e9gias de planejamento de movimento de UVMS.\nA contribui\u00e7\u00e3o mais diretamente relacionada ao objetivo geral da tese foi a proposi\u00e7\u00e3o de uma sistem\u00e1tica de desenvolvimento de estrat\u00e9gias de planejamento de movimento a partir de uma an\u00e1lise cinem\u00e1tica realizada para diferentes cen\u00e1rios de execu\u00e7\u00e3o de opera\u00e7\u00f5es de interven\u00e7\u00e3o e da identifica\u00e7\u00e3o de blocos de atividades do sistema ro-b\u00f3tico. A sistematiza\u00e7\u00e3o foi feita atrav\u00e9s da implementa\u00e7\u00e3o de classes de um framework cujas inst\u00e2ncias estruturaram um algoritmo geral de execu\u00e7\u00e3o da fase de interven\u00e7\u00e3o de uma miss\u00e3o.\nA extens\u00e3o da modelagem cinem\u00e1tica de sistemas de interven\u00e7\u00e3o subaqu\u00e1tica baseada em helicoides para diferentes configura\u00e7\u00f5es desses sistemas foi outra contribui\u00e7\u00e3o deste trabalho. A extens\u00e3o do modelo ainda trata de caracter\u00edsticas adicionais, como o caso de evitamento de colis\u00e3o com obst\u00e1culos presentes no espa\u00e7o de trabalho. A an\u00e1lise de casos base para essa extens\u00e3o definiu como novos manipuladores podem ser inclu\u00eddos no modelo cinem\u00e1tico. Al\u00e9m disso, verificou-se como representar sistemas de interven\u00e7\u00e3o subaqu\u00e1tica onde UVMS atuam em coopera\u00e7\u00e3o.\nUma sistematiza\u00e7\u00e3o de obten\u00e7\u00e3o de modelos cinem\u00e1ticos atrav\u00e9s de componentiza\u00e7\u00e3o, ou seja, da cria\u00e7\u00e3o de cadeias cinem\u00e1ticas pela composi\u00e7\u00e3o de cadeias mais simples previamente modeladas, foi proposta com base na an\u00e1lise cinem\u00e1tica realizada. Al\u00e9m de agilizar o processo de modelagem, essa abordagem permite considerar a possibilidade de automa\u00e7\u00e3o do processo atrav\u00e9s de padr\u00f5es (templates) de cadeias cinem\u00e1ticas, e de um banco de dados para armazen\u00e1-las. Al\u00e9m disso, acredita-se que a componentiza\u00e7\u00e3o facilita a reconfigurabilidade de cadeias cinem\u00e1ticas, o que pode ser necess\u00e1rio em diferentes cen\u00e1rios de execu\u00e7\u00e3o de miss\u00f5es complexas em um ambiente incerto como o subaqu\u00e1tico. Outro resultado do estudo feito para a extens\u00e3o foi identificar duas formas de modifica\u00e7\u00e3o de cadeias cinem\u00e1ticas para refletir mudan\u00e7as de contextos de execu\u00e7\u00e3o de tarefas, denominadas repartici-onamento e reconfigura\u00e7\u00e3o, sendo esta classifica\u00e7\u00e3o feita pela primeira vez neste trabalho.\nPara facilitar a implementa\u00e7\u00e3o de algoritmos de an\u00e1lise cinem\u00e1tica baseada em helicoides, projetou-se um framework computacional orientado a objetos. Sua implementa\u00e7\u00e3o, feita em Python, \u00e9 tratada no Ap\u00eandice B. O framework Kast ser\u00e1 disponibilizado como software livre t\u00e3o logo esteja com todos os requisitos b\u00e1sicos de projeto funcionais e com uma documenta\u00e7\u00e3o m\u00ednima. Para facilitar o seu aprendizado e extens\u00e3o, todas as implementa\u00e7\u00f5es desenvolvidas nesta tese acompanhar\u00e3o o pacote.\nO framework de interven\u00e7\u00e3o definido na sistematiza\u00e7\u00e3o de estrat\u00e9gias de planejamento de movimento foi implementado e utilizado em diferentes simula\u00e7\u00f5es que demonstraram sua facilidade de uso. Nestas simula\u00e7\u00f5es, observaram-se caracter\u00edsticas como reuso e extensibilidade, t\u00edpicas do paradigma de orienta\u00e7\u00e3o a objetos. Esse framework tamb\u00e9m ser\u00e1 disponibilizado como software livre junto ao Kast.\nAs simula\u00e7\u00f5es tamb\u00e9m serviram para avaliar diferentes cen\u00e1rios de execu\u00e7\u00e3o de tarefas e diferentes situa\u00e7\u00f5es. Verificou-se que a sistematiza\u00e7\u00e3o proposta \u00e9 efetiva para tratar de coopera\u00e7\u00e3o entre manipuladores e entre UVMS. Em situa\u00e7\u00f5es excepcionais, como grandes deslocamentos e travamento de juntas, o uso de modelos h\u00edbridos de estados resolveu o planejamento de movimento, tratando de deslocar os ve\u00edculos apenas quando necess\u00e1rio.\nDos estudos iniciais sobre o panorama da rob\u00f3tica subaqu\u00e1tica, seus cen\u00e1rios e desafios, surgiram contribui\u00e7\u00f5es secund\u00e1rias, como uma organiza\u00e7\u00e3o da classifica\u00e7\u00e3o de ROV e AUV, apresentadas nas Tabelas 1, 2, 3 e 4. Al\u00e9m dessa organiza\u00e7\u00e3o, a pr\u00f3pria distin\u00e7\u00e3o entre ROV e AUV foi considerada inadequada para o estado da arte das pesquisas em\nrob\u00f3tica subaqu\u00e1tica. Assim, cita-se como uma contribui\u00e7\u00e3o secund\u00e1ria a proposta de ado\u00e7\u00e3o de uma classifica\u00e7\u00e3o dos ve\u00edculos subaqu\u00e1ticos n\u00e3o tripulados em fun\u00e7\u00e3o das miss\u00f5es em que s\u00e3o empregados apresentada na Se\u00e7\u00e3o 1.2. Al\u00e9m disso, o desenvolvimento de um mapa conceitual para organizar e relacionar os conhecimentos relativos ao cen\u00e1rio da rob\u00f3tica subaqu\u00e1tica atual \u00e9 considerado outra contribui\u00e7\u00e3o derivada deste trabalho.\n8.2\tPERSPECTIVAS E TRABALHOS FUTUROS\nA autonomia de sistemas de interven\u00e7\u00e3o subaqu\u00e1tica \u00e9 um problema em aberto. As perspectivas de uma maior ado\u00e7\u00e3o desses sistemas \u00e0 medida em que cresce o trabalho em \u00e1guas profundas e ultraprofundas para a explora\u00e7\u00e3o de petr\u00f3leo, al\u00e9m de outras aplica\u00e7\u00f5es no ambiente marinho, demandam novos usos desses sistemas e com isso aplica\u00e7\u00f5es de maior complexidade. Assim, h\u00e1 uma grande variedade de pesquisas em potencial para serem desenvolvidas. Em rela\u00e7\u00e3o ao objeto desta tese, identificam-se algumas possibilidades de trabalhos futuros.\nInicialmente, \u00e9 interessante trabalhar um n\u00famero maior de cen\u00e1rios de sistemas de interven\u00e7\u00e3o subaqu\u00e1tica, principalmente considerando UVMS operando em tr\u00eas dimens\u00f5es. Basear os modelos em sistemas teleoperados hoje existentes e identificar diferentes tarefas que s\u00e3o executadas por esses sistemas seria de grande valia para avaliar a sistematiza\u00e7\u00e3o proposta e aproximar as estrat\u00e9gias de planejamento de movimento da aplica\u00e7\u00e3o em situa\u00e7\u00f5es reais.\nNos estudos iniciais da extens\u00e3o da modelagem de UVMS por helicoides, foram identificados casos que n\u00e3o estavam diretamente relacionados com a ideia de interven\u00e7\u00e3o subaqu\u00e1tica, mas que poderiam ser tratados pela mesma modelagem. Os pelot\u00f5es ou enxames de UUV em aplica\u00e7\u00f5es cient\u00edficas como o monitoramento/mapeamento de grandes \u00e1reas t\u00eam gerado o interesse de pesquisadores. Acredita-se que h\u00e1 potencial de aplica\u00e7\u00e3o da sistem\u00e1tica de planejamento de movimento para esse tipo de aplica\u00e7\u00e3o a partir de similaridades com sistemas cooperativos. Ainda em rela\u00e7\u00e3o a pelot\u00f5es, a identifica\u00e7\u00e3o de objetivos a serem alcan\u00e7ados/seguidos atrav\u00e9s de sensores dos UUV poderia ser integrada \u00e0s estrat\u00e9gias de planejamento de movimento (no que se chama de visual servoing/tracking).\nOutro potencial uso desse modelamento seria na an\u00e1lise da rela\u00e7\u00e3o entre os propulsores e o movimento do ve\u00edculo subaqu\u00e1tico. A partir de um modelo relacionando o movimento do ve\u00edculo com os mo-\nvimentos dos propulsores, seria poss\u00edvel fazer uma an\u00e1lise da influ\u00eancia de cada propulsor e otimiza\u00e7\u00f5es de projeto.\nFaz-se necess\u00e1ria uma an\u00e1lise de como implementar estrat\u00e9gias para identificar mudan\u00e7as de contextos de opera\u00e7\u00e3o e gerir as modifica\u00e7\u00f5es necess\u00e1rias na cadeia cinem\u00e1tica e na tarefa. O estudo das descontinuidades geradas por modifica\u00e7\u00f5es do modelo cinem\u00e1tico em fun\u00e7\u00e3o de mudan\u00e7as de contexto \u00e9 outro problema a ser abordado, pelos efeitos sobre a estrutura dos UVMS. Esse problema j\u00e1 vem sendo estudado para o caso de rob\u00f4s manipuladores industriais. O uso das t\u00e9cnicas desenvolvidas e a avalia\u00e7\u00e3o de outras (como o uso de pseudoin-versa ponderada com pesos vari\u00e1veis e geradores de transi\u00e7\u00f5es suaves) \u00e9 um potencial campo de estudos.\nNo uso dos frameworks, observou-se v\u00e1rias situa\u00e7\u00f5es em que podem ser aplicadas t\u00e9cnicas de otimiza\u00e7\u00e3o, como no caso dos ganhos da realimenta\u00e7\u00e3o em malha fechada, na defini\u00e7\u00e3o de pesos para a matriz de pondera\u00e7\u00e3o da pseudoinversa e at\u00e9 para definir estrat\u00e9gias de cha-veamento de estados. Uma avalia\u00e7\u00e3o da aplica\u00e7\u00e3o dessas t\u00e9cnicas e da possibilidade de uso tanto em simula\u00e7\u00f5es quanto em aplica\u00e7\u00f5es reais \u00e9 de interesse futuro.\nA din\u00e2mica e controle dos UUV \u00e9 um assunto bastante estudado na literatura. Por\u00e9m, n\u00e3o se encontraram refer\u00eancias usando a abordagem de helicoides nessa linha de pesquisa, embora existam trabalhos sobre din\u00e2mica e controle usando helicoides na rob\u00f3tica industrial. Assim, considera-se este um tema relevante de pesquisas futuras, visando o desenvolvimento de uma modelagem com um enfoque unificado do sistema subaqu\u00e1tico. A quest\u00e3o da din\u00e2mica tamb\u00e9m \u00e9 importante no estudo da intera\u00e7\u00e3o entre o UVMS e o meio, especifica\u00e7\u00e3o de tarefas com aplica\u00e7\u00e3o de esfor\u00e7os al\u00e9m de movimento e dos efeitos causados pelo ambiente imerso.\nPor fim, um trabalho futuro de grande import\u00e2ncia \u00e9 a implementa\u00e7\u00e3o dessa sistem\u00e1tica em UVMS reais a fim de fazer a avalia\u00e7\u00e3o experimental dessas t\u00e9cnicas. Al\u00e9m de validar as simula\u00e7\u00f5es, a experimenta\u00e7\u00e3o em sistemas reais demandar\u00e1 o aprimoramento de frameworks para implementar essas t\u00e9cnicas e uma reavalia\u00e7\u00e3o de requisitos de projeto considerando casos reais. Para a implementa\u00e7\u00e3o experimental, s\u00e3o consideradas a possibilidade de acionamento indireto do UVMS (a estrat\u00e9gia de planejamento de movimento substituiria os sinais gerados pelo operador de um ROV em sua esta\u00e7\u00e3o de trabalho) ou a integra\u00e7\u00e3o das estrat\u00e9gias de planejamento de movimento ao sistema de um UVMS. Para isso, seria necess\u00e1rio que este tivesse sido constru\u00eddo com caracter\u00edsticas de configurabilidade total de software e\npossibilidade de opera\u00e7\u00e3o em diferentes n\u00edveis de autonomia). Foram elaborados projetos informacionais e conceituais de UUV para esse fim, que podem ser considerados uma contribui\u00e7\u00e3o secund\u00e1ria desta tese.\n8.3\tCONSIDERA\u00c7\u00d5ES FINAIS\nOs ve\u00edculos subaqu\u00e1ticos n\u00e3o tripulados e suas aplica\u00e7\u00f5es formam uma \u00e1rea com grandes potenciais para pesquisa, ainda mais com a motiva\u00e7\u00e3o do uso cada vez maior desses sistemas em diversas aplica\u00e7\u00f5es no ambiente marinho. A explora\u00e7\u00e3o de petr\u00f3leo e g\u00e1s offshore nacional, particularmente no caso do pr\u00e9-sal, est\u00e1 fazendo com que muitas empresas de tecnologia subaqu\u00e1tica venham para o Brasil. Essas empresas t\u00eam v\u00e1rios desafios tecnol\u00f3gicos a serem resolvidos para seus UUV, particulamente para os sistemas de interven\u00e7\u00e3o subaqu\u00e1tica. Isso motivar\u00e1 cada vez mais desenvolvimentos nesse campo, com oportunidades tanto para a pesquisa quanto para a ind\u00fastria nacionais.\nO presente trabalho contribuiu para esse desenvolvimento nacional, atrav\u00e9s da apresenta\u00e7\u00e3o de inova\u00e7\u00f5es para o planejamento de movimento desses sistemas e de motiva\u00e7\u00e3o para pesquisas futuras. Al\u00e9m disso, observa-se que os desenvolvimentos deste trabalho, em particular o framework Kast, podem ser empregados para outros sistemas ve\u00edculo-manipulador (a\u00e9reos e terrestres) e mesmo para sistemas compostos por manipuladores apenas.\n192\nREFER\u00caNCIAS BIBLIOGR\u00c1FICAS\nAnanthakrishnan, P.; Decron, S. Dynamics of Small and Mini-Autonomous underwater Vehicles: Part I. Analysis and Simulation for Midwater Application. Boca Raton, Florida, 2000.\nAntonelli, G. Open control problems in underwater robotics. In: IEEE. Proc. Fourth International Workshop on RoMoCo\u201904 Robot Motion and Control. Puszczykowo, 2004. p. 219-229.\nAntonelli, G. Underwater Robots: Motion and Force Control of Vehicle-manipulator Systems. 2. ed. Berlim: Springer, 2006. 268 p. (Springer Tracts in Advanced Robotics, v. 2).\nAntonelli, G.; Fossen, T.; Yoerger, D. Underwater Robotics. In: Siciliano, B. and Khatib, O. (Ed.). Springer Handbook of Robotics. Heidelberg: Springer, 2008, (Springer Tracts in Advanced Robotics). cap. 43, p. 987-1008.\nBang-Jensen, J.; Gutin, G. Digraphs: Theory, Algorithms and Applications. Berlim: Springer, 2007. 754 p. (Springer Monographs in Mathematics).\nBarros, E.; Soares, F. Desenvolvimento de um rob\u00f4 submarino de baixo custo. In: Congresso Brasileiro de Autom\u00e1tica. Natal: [s.n.], 2002. v. 14, p. 2121-2126.\nBenjamin, M. Software Architecture and Strategic Plans for Undersea Cooperative Cueing and Intervention. Washington, D.C., 2007.\nBennett, P. et al. Probing the Limits of Human Deep Diving [and Discussion]. Philosophical Transactions of the Royal Society of London. B, Biological Sciences, The Royal Society, London, v. 304, n. 1118, p. 105-117, 1984.\nBeshenov, L. Maxima, a Computer Algebra System. 2011. http://maxima.sourceforge.net. Acessado em 11/11/2011.\nBishop, B. On the use of redundant manipulator techniques for control of platoons of cooperating robotic vehicles. IEEE Transactions on Systems, Man and Cybernetics, v. 33, n. 5, p. 608-615, 2003.\nBishop, B. Swarm-based object manipulation using redundant manipulator analogs. In: IEEE. Proceedings of the IEEE International Conference on Robotics and Automation (ICRA). Pasadena, 2008. p. 1495-1500.\nBishop, B.; Stilwell, D. On the application of redundant manipulator techniques to the control of platoons of autonomous vehicles. In: IEEE. Proceedings of the 2001 IEEE International Conference on Control Applications. M\u00e9xico, 2001. p. 823-828.\nBooch, G.; Rumbaugh, J.; Jacobson, I. The unified modeling language user guide. Reading: Addison Wesley Longman, 1999. ISBN 0201571684.\nBorges, L. E. Python Para Desenvolvedores. Rio de Janeiro: [s.n.], 2010. 360 p. ISBN 978-85-909451-1-6.\nBotelho, S. et al. Lambdari: um rob\u00f4 subaqu\u00e1tico aut\u00f4nomo. Simp\u00f3sio Brasileiro De Automa\u00e7\u00e3o Inteligente-VI SBAI, Bauru, 2003.\nBritish Petroleum. Gulf of Mexico Restoration - Remotely Operated Vehicles. 2010. http://www.bp.com/sectiongenericarticle800. do?categoryId=9036600\\&amp;contentId=7067604. Acessado em 05/06/2011.\nButton, R. et al. A Survey of Missions for Unmanned Undersea Vehicles. Arlington: RAND Corporation, 2009. 223 p.\nCampos, A. Cinem\u00e1tica Diferencial de Manipuladores Empregando Cadeias Virtuais. Tese (Tese de Doutorado) \u2014 Universidade Federal de Santa Catarina, Florian\u00f3polis, 2004.\nCampos, A.; Guenther, R.; Martins, D. Differential kinematics of serial manipulators using virtual chains. Journal of the Brazilian Society of Mechanical Sciences and Engineering, v. 27, n. 4, p. 345-356, 2005.\nCeccarelli, M. Screw axis defined by Giulio Mozzi in 1763 and early studies on helicoidal motion. Mechanism and Machine Theory, Elsevier, v. 35, n. 6, p. 761-770, 2000.\nCenteno, M. Rovfurg-II: projeto e constru\u00e7\u00e3o de um ve\u00edculo subaqu\u00e1tico n\u00e3o tripulado de baixo custo. Disserta\u00e7\u00e3o (Disserta\u00e7\u00e3o de mestrado) \u2014 FURG - P\u00f3s-Gradua\u00e7\u00e3o em Engenharia Oce\u00e2nica, Rio Grande, 2007.\nChiaverini, S.; Oriolo, G.; Walker, I. Kinematically Redundant Manipulators. In: _____. Springer Handbook of Robotics. Heidelberg:\nSpringer, 2008. cap. 11, p. 245-268.\nCui, Y.; Podder, T.; Sarkar, N. Impedance control of underwater vehicle-manipulator systems (UVMS). In: IEEE. 1999 IEEE/RSJ International Conference on Intelligent Robots and Systems, 1999. IROS\u201999. Proceedings. South Korea, 1999. v. 1, p. 148-153.\nCunha, J. Projeto e Estudo de Simula\u00e7\u00e3o de um Sistema de Controle a Estrutura Vari\u00e1vel de um Ve\u00edculo Submarino de Opera\u00e7\u00e3o Remota. Disserta\u00e7\u00e3o (Disserta\u00e7\u00e3o de mestrado) \u2014 UFRJ - COPPE -P\u00f3s-Gradua\u00e7\u00e3o em Engenharia El\u00e9trica, Rio de Janeiro, 1992.\nCybernetix. Presentation - ing\u00e9nirie des syst\u00e8mes robotiques -\nCybernetix. 2008. http://www.cybernetix.fr/Presentation,90. Acessado em 05/06/2011.\nDai, J. An historical review of the theoretical development of rigid body displacements from Rodrigues parameters to the finite twist. Mechanism and Machine Theory, Elsevier, v. 41, n. 1, p. 41-52, 2006.\nDavies, T. Kirchhoff\u2019s circulation law applied to multi-loop kinematic chains. Mechanism and Machine Theory, v. 16, n. 3, p. 171-183, 1981.\nDavison, J.; Hunt, K. Robots and screw Theory: Applications of Kinematics and Statics to Robotics. [S.l.]: Oxford, 2004.\nDe Novi, G. et al. New Approach for a Reconfigurable Autonomous Underwater Vehicle for Intervention. Aerospace and Electronic Systems Magazine, IEEE, v. 25, n. 11, p. 32-36, 2010.\nDe Souza, E.; Maruyama, N. Intelligent UUVs: Some issues on ROV dynamic positioning. IEEE Transactions on Aerospace and Electronic Systems, IEEE, v. 43, n. 1, p. 214-226, 2007.\nde Wit, C.; Diaz, O.; Perrier, M. Nonlinear control of an underwater vehicle/manipulator with composite dynamics. IEEE Transactions on Control Systems Technology, v. 8, n. 6, p. 948-960, 2000.\nDeitel, H.; Deitel, P. Java: Como Programar. 4. ed. Porto Alegre: Bookman, 2004. 1386 p. ISBN 85-363-0123-6.\nDiankov, R. Automated Construction of Robotic Manipulation Programs. Tese (Doutorado) \u2014 Carnegie Mellon University, Robotics\nInstitute, 2010. http://www.programmingvision.com/rosen7o 20diankov%20thesis.pdf.\nDiestel, R. Graph Theory. 3. ed. Heildelberg: Springer, 2005. 415 p. (Graduate Texts in Mathematics, v. 173).\nDigiteo. Scilab website. 2011. http://www.scilab.org. Acessado em 02/02/2011.\nDominguez, R. Simula\u00e7\u00e3o e Controle de um Ve\u00edculo Submarino de Opera\u00e7\u00e3oo Remota. Disserta\u00e7\u00e3o (Disserta\u00e7\u00e3o de mestrado) \u2014 UFRJ - COPPE - P\u00f3s-Gradua\u00e7\u00e3o em Engenharia El\u00e9trica, Rio de Janeiro, 1989.\nDouglas-Westwood. Douglas-Westwood - Energy Bussiness Advisors. 2011. http://www.dw-1.com. Acessado em 06/06/2011.\nDourado, A. Cinem\u00e1tica de Rob\u00f4s cooperativos. Disserta\u00e7\u00e3o (Disserta\u00e7\u00e3o de mestrado) \u2014 Universidade Federal de Santa Catarina, Florian\u00f3polis, 2005.\nD\u00e9cio, O. XML - Guia de Consulta R\u00e1pida. [S.l.]: Novatec, 2000. 96 p. ISBN 85-85184-86-8.\nEaton, J. Octave. 2011. http://www.gnu.org/software/octave. Acessado em 02/02/2011.\nEl-Hawary, F. The Ocean Engineering Handbook. Boca Raton: CRC, 2001. 416 p. ISBN 0-8493-8598-9.\nFeatherstone, R. Rigid Body Dynamics Algorithms. 2. ed. New York: Springer, 2008. 278 p.\nFloriani, B.; Dias, A.; Rocha, C. Aspectos Metodol\u00f3gicos No Projeto Informacional e Conceitual de Um Ve\u00edculo Remotamente Operado Subaqu\u00e1tico. In: IMECHE. Anais do VI Congresso Luso-Mo\u00e7ambicano de Engenharia - CLME 2011. Maputo: Edi\u00e7\u00f5es Inegi, 2011.\nFontan, D. Implementa\u00e7\u00e3o da Cinem\u00e1tica Inversa de Rob\u00f4s Redundantes Operando em Ambientes Confinados no Projeto Roboturb. Disserta\u00e7\u00e3o (Disserta\u00e7\u00e3o de mestrado) \u2014 Universidade Federal de Santa Catarina, Florian\u00f3polis, 2007.\nFossen, T. Guidance and Control of Ocean Vehicles. [S.l.]: Wiley,\n1994.\t494 p.\nFowler, M. UML Essencial. 3. ed. Porto Alegre: Bookman, 2004.\n160 p. ISBN 85-363-0454-5.\nFraisse, P. et al. Position/Force Control of an Underwater Vehicle Equipped with a Robotic Manipulator. In: . [S.l.: s.n.], 2000.\nGuenther, R. et al. A New Integration Method for Differential Inverse Kinematics of Closed-Chain Robots. In: ABCM Symposium Series in Mechatronics. Rio de Janeiro, Brasil: ABCM, 2008, (ABCM Symposium Series, v. 3). p. 225-235.\nHsu, L. et al. Avalia\u00e7\u00e3o Experimental da Modelagem e Simula\u00e7\u00e3o da Din\u00e2mica de Um Ve\u00edculo Submarino de Opera\u00e7\u00e3o Remota. Controle e Automa\u00e7\u00e3o, v. 11, n. 2, p. 82-93, 2000.\nHunt, K. Don\u2019t cross-thread the screw. In: University of Cambridge - Trinity College. A Symposium Commemorating The Legacy, Works and Life of Sir Robert Stawell Ball Upon the 100th Anniversary of A Treatise on The Theory of Screws. Cambridge, United Kingdom: Cambridge University Press, 2000. p. 1-37.\nHunter, J.; Dale, D.; Droettboom, M. matplotlib: python plotting.\n2011. http://matplotlib.sourceforge.net. Acessado em 05/12/2011.\nInova\u00e7\u00e3o Tecnol\u00f3gica. Submarino rob\u00f3tico atinge ponto mais fundo do oceano. Inova\u00e7\u00e3o Tecnol\u00f3gica, 2009. http: //www.inovacaotecnologica.com.br/noticias/artigo= submarino-robotico-atinge-ponto-mais-profundo-oceano. Acessado em 01/08/2009.\nKinsey, J.; Eustice, R.; Whitcomb, L. A Survey of Underwater Vehicle Navigation: Recent Advances and New Challenges. In: IFAC. IFAC Conference of Manoeuvering and Control of Marine Craft. Lisboa, 2006.\nKohnen, W. 2007 MTS Overview of Manned Underwater Vehicle Activity. Marine Technology Society Journal, Marine Technology Society, v. 42, n. 1, p. 26-37, 2008.\nKongsberg. Remus 6000 - Autonomous Underwater Vehicle -Kongsberg Maritime. 2011. http://www.km.kongsberg.com/ks/ web/nokbg0240.nsf/AllWeb/481519DA1B0207CDC12574B0002A8451? OpenDocument. Acessado em 05/06/2011.\nKuhn, V. Controle Autom\u00e1tico de um Ve\u00edculo de Inspe\u00e7\u00e3o Subaqu\u00e1tica Utilizando Sensoriamento de Baixo Custo. Disserta\u00e7\u00e3o (Disserta\u00e7\u00e3o de mestrado) \u2014 FURG - P\u00f3s-Gradua\u00e7\u00e3o em Engenharia Oce\u00e2nica, Rio Grande, 2011.\nLane, D. et al. The AMADEUS dextrous subsea hand: design, modeling, and sensor processing. IEEE Journal of Oceanic engineering, v. 24, n. 1, p. 96-111, 1999.\nLangtangen, H. P. A Primer on Scientific Programming with Python. Berlin: Springer-Verlag, 2009. 695 p. (Texts in Computational Science and Engineering). ISBN 978-3-642-02475-7.\nLaus, L.; Simoni, R.; Martins, D. Progressive dynamic analysis of serial robots based on screw theory. In: Proceedings of the 20th International Congress of Mechanical Engineering - COBEM 2009. Gramado: [s.n.], 2009.\nLaus, L.; Simoni, R.; Martins, D. Progressive Dynamic Analysis of Serial Robots Based on Screw Theory: An Extension to the Theory.\nIn: 11th Pan-American Congress of Applied Mechanics - PACAM XI. Foz do Igua\u00e7u: [s.n.], 2010.\nLeff, L.; Plushnick-Masti, R. Underwater Robots Attack\nSpill Like Superman. msnbc.com, Online, 2010. http: //www.msnbc.msn.com/id/37913126/ns/disaster%20in%20the% 20gulf/t/underwater-robots-attack-spill-superman. Acessado em 05/06/2011.\nLundh, F. ElementTree Overview. 2011. http://effbot.org/zone/ element-index.htm. Acessado em 05/12/2011.\nMarani, G.; Choi, S.; Yuh, J. Underwater autonomous manipulation for intervention missions AUVs. Ocean Engineering, Elsevier, v. 36, n. 1, p. 15-23, 2009.\nMathworks. Matlab - The Language of Technical Computing. 2011. http://www.mathworks.com/products/matlab. Acessado em 02/02/2011.\nMcLain, T.; Rock, S.; Lee, M. Experiments in the coordination of underwater manipulator and vehicle control. In: IEEE. Oceans '95 Proceedings. San Diego, 1995. v. 2, p. 1208-1215.\nMetsker, S. J. Padr\u00f5es de Projeto em Java. Porto Alegre: Bookman, 2004. 407 p. ISBN 85-363-0411-1.\nMoraes, C. Rovfurg-I: projeto e constru\u00e7\u00e3o de um ve\u00edculo subaqu\u00e1tico n\u00e3o tripulado de baixo custo. Disserta\u00e7\u00e3o (Disserta\u00e7\u00e3o de mestrado) \u2014 FURG - P\u00f3s-Gradua\u00e7\u00e3o em Engenharia Oce\u00e2nica, Rio Grande, 2005.\nMTS. ROV Background. MTS Remotely Operated Vehicle Committee, Online, 2006. http://www.rov.org/info.cfm. Acessado em 01/08/2009.\nNetworkX. Overview - NetworkX 1.6 documentation. 2011. http://networkx.lanl.gov. Acessado em 05/12/2011.\nNewman, P. The MOOS - Cross Platform Software for Robotics\nResearch. Oxford, 2009. Website. http://www.robots.ox.ac.uk/ ~mobile/MOOS/wiki/pmwiki.php. Acessado em 02/11/2009.\nNumpy. Scientific Computing Tools for Python - Numpy. 2011. http://numpy.scipy.org. Acessado em 05/12/2011.\nOceaneering. Oceaneering - Remotely Operated Vehicles (ROVs). 2009. http://www.oceaneering.com/rovs. Acessado em 05/06/2011.\nOffshore Engineering. Oceaneering ROV Sets Depth Record Offshore India. Offshore Energy Today.com, Online, 2011. http://www.offshoreenergytoday.com/ oceaneering-rov-sets-depth-record-offshore-india.\nAcessado em 02/06/2011.\nOffshore Engineering. Transocean Sets New World\nRecord in Deepwater Drilling Depth. Offshore Energy\nToday.com, Online, 2011. http://www.offshoreenergytoday.com/ transocean-sets-new-world-record-in-deepwater-drilling-depth. Acessado em 02/06/2011.\nOliveira, A. S. d. An\u00e1lise cinem\u00e1tica via quat\u00e9rnios duais aplicada a um sistema ve\u00edculo-manipulador subaqu\u00e1tico. Tese (Tese de Doutorado) \u2014 Universidade Federal de Santa Catarina, Florian\u00f3polis, 2011.\nOracle. Java.com: Java + you. 2011. http://java.com/pt%20BR. Acessado em 02/02/2011.\nPadir, T. Kinematic redundancy resolution for two cooperating underwater vehicles with on-board manipulators. In: IEEE. Proc. IEEE International Conference on Systems, Man and Cybernetics. Waikoloa, 2005. v. 4, p. 3137-3142.\nPadir, T.; Koivo, A. Modeling of two underwater vehicles with manipulators on-board. In: IEEE. Proc. IEEE International Conference on Systems, Man and Cybernetics. Washington, 2003. v. 2, p. 1359-1364.\nPaschoa, C. AUVs in the Brazilian O&amp;G industry. Sea\nCurrents - Underwater Tech and Ocean Sciences, Online,\n2010.\thttp://news.seadiscovery.com/post/2010/09/29/ auvs-the-brazilian-industry.aspx. Acessado em 25/05/2011.\nPetrobras. Cada Vez Mais Fundo. 2011. http://www.petrobras. com.br/minisite/presal/pt/cada-vez-mais-fundo. Acessado em 04/06/2011.\nPetrobras. Descoberta de \u00f3leo leve na Bacia de Campos. Petrobras -Rela\u00e7\u00e3o com Investidores, Online, 2011. http://www.petrobras. com.br/ri/Show.aspx?id%20materia=ZhgyJ5a4fmuAoBLQCHkSHw==. Acessado em 02/06/2011.\nPetrobras. Inovar Para Crescer: Entrevista com Gerente Executivo do CENPES, Carlos Tadeu Fraga. Petrobras - Fatos e Dados, Online,\n2011.\thttp://fatosedados.blogspetrobras.com.br/2011/05/06/ inovar-para-crescer-entrevista-com-gerente-executivo-do-. cenpes-carlos-tadeu-fraga. Acessado em 02/06/2011.\nPhillips, J. Freedom in Machinery. Cambridge: Cambridge University Press, 2007. 448 p.\nPhoenix. Phoenix International Website. 2011. http://www. phnx-international.us. Acessado em 25/05/2011.\nPressman, R. Engenharia de Software. S\u00e3o Paulo: Makron Books,\n1995.\t1056 p. ISBN 85-346-0237-9.\nPython.org. Python Programming Language - Official Website. 2011. Availableinhttp://www.python.org. Acessado em 02/02/2011.\nRaybaut, P. pythonxy: Scientific-oriented Python Distribution based on Qt and Spyder. 2011. http://www.pythonxy.com. Acessado em 23/08/2011.\nRibeiro, L. P. G.; Guenther, R.; Martins, D. Screw-Based Relative Jacobian for Manipulators Cooperating in a Task. In: ABCM Symposium Series in Mechatronics. Rio de Janeiro: ABCM, 2008, (ABCM Symposium Series, v. 3). p. 276-285.\nRibeiro, L. P. G.; Martins, D. Screw-Based Relative Jacobian For Manipulators Cooperating In A Task Using Assur Virtual Chains. In: ABCM Symposium Series in Mechatronics. Rio de Janeiro: ABCM, 2010, (ABCM Symposium Series, v. 4). p. 729-738.\nRichardson, I.; Woodward, N.; Billingham, J. Deepwater Welding for Installation and Repair: A Viable Technology? In: The International Society of Offshore and Polar Engineers. Int. Conf. On Offshore and Polar Engineering (ISOPE). Kitakyushu, 2002.\nRidao, P. and Sanz, P. J. and Oliver, J. Reconfigurable AUV for Intervention. 2011. http://www.irs.uji.es/rauvi/ abouttheproject.html. Acessado em 06/06/2011.\nRocha, C.; Dias, A. Evitamento de Colis\u00e3o de Rob\u00f4s Atrav\u00e9s do M\u00e9todo das Restri\u00e7\u00f5es Cinem\u00e1ticas. In: ABCM - Associa\u00e7\u00e3o Brasileira de Ci\u00eancias Mec\u00e2nicas. Proceedings do VI Congresso Nacional de Engenharia Mec\u00e2nica - CONEM. Campina Grande, 2010.\nRocha, C.; Dias, A. Sistemas Subaqu\u00e1ticos de Interven\u00e7\u00e3o Aut\u00f4noma: Cen\u00e1rios e Desafios. In: Instituto de Pesquisas da Marinha. Proceedings do VI Simp\u00f3sio Brasileiro de Engenharia Inercial. Rio de Janeiro: Instituto de Pesquisas da Marinha, 2010.\nRocha, C. et al. Obstacle and Collision Avoidance in Unstructured and Time-Varying Environments: A Screw Theory Approach for Manipulators. In: Teesside University. Proceedings of the 19th International Conference on Flexible Automation and Intelligent Manufacturing. Middlesbrough: Gemini, 2009. p. 436-443.\nRocha, C. R.; Tonetto, C.; Dias, A. A framework for kinematic modeling of cooperative robotic systems based on screw theory. In: Universidade Federal do Rio Grande do Norte. Proceedings of the 21th International Congress of Mechanical Engineering - COBEM 2011. Natal, 2011.\nRocha, C. R.; Tonetto, C. P.; Dias, A. A comparison between the Denavit-Hartenberg and the screw-based methods used in kinematic modeling of robot manipulators. Robotics and Computer-Integrated Manufacturing, Elsevier, v. 27, n. 4, p. 723-728, 2011.\nSagara, S. et al. Experiments on a floating underwater robot with a two-link manipulator. Artificial Life and Robotics, Springer, v. 5, n. 4, p. 215-219, 2001.\nSantos, C. Movimento Coordenado de Sistemas Ve\u00edculo-Manipulador Submarinos Utilizando T\u00e9cnicas de Intelig\u00eancia Artificial e Sistemas H\u00edbridos. Tese (Tese de Doutorado) \u2014 Universidade Federal de Santa Catarina, Florian\u00f3polis, 2006.\nSantos, C. et al. Virtual kinematic chains to solve the underwater vehicle-manipulator systems redundancy. Journal of the Brazilian Society of Mechanical Sciences and Engineering, scielo, v. 28, p. 354 -361, 2006.\nSarkar, N.; Podder, T. Coordinated motion planning and control of autonomous underwater vehicle-manipulator systems subject to drag optimization. IEEE Journal of Oceanic Engineering, v. 26, n. 2, p. 228-239, 2001.\nSchjolberg, I.; Fossen, T. Modeling and control of underwater vehicle-manipulator systems. In: Proceedings of the 3rd Conference on Marine Craft Maneuvering and Control. Southampton, UK: [s.n.], 1994. p. 45-57.\nSchmiegelow, J. O Planeta Azul: Uma Introdu\u00e7\u00e3o As Ci\u00eancias Marinhas. Rio de Janeiro: Interci\u00eancia, 2004. 202 p.\nScipy. Scipy. 2011. http://www.scipy.org/SciPy. Acessado em 05/12/2011.\nSiciliano, B.; Khatib, O. (Ed.). Springer Handbook of Robotics.\nHeildeberg: Springer, 2008. 1375 p. (Springer Tracts in Advanced Robotics).\nSiciliano, B. et al. Robotics: Modelling, Planning and Control. London: Springer, 2009. 632 p. (Advanced Textbooks in Control and Signal Processing) .\nSimas, H. Planejamento de Trajet\u00f3rias e Evitamento de Colis\u00e3o em Tarefas de Manipuladores Redundantes Operando em Ambientes Confinados. Tese (Tese de Doutorado) \u2014 Universidade Federal de Santa Catarina, Florian\u00f3polis, 2008.\nSimas, H.; Fontan, D.; Martins, D. Smooth Transitions in Trajectory Profiles for Redundant Robots Performing Secondary Tasks. In:\nUniversidade Federal do Rio Grande do Norte. Proceedings of the 21th International Congress of Mechanical Engineering - COBEM 2011. Natal, 2011.\nSimas, H. et al. A new method to solve robot inverse kinematics using Assur virtual chains. Robotica, Cambridge Univ Press, v. 27, n. 07, p. 1017-1026, 2009.\nSNAME. Nomenclature for Treating The Motion of a Submerged Body Through a Fluid. New Jersey, 1950.\nSoylu, S.; Buckham, B.; Podhorodeski, R. Redundancy Resolution For Underwater Mobile Manipulators. Ocean Engineering, Elsevier, v. 37, p. 325-343, 2010.\nStone Aerospace. ENDURANCE. 2012. http://www. stoneaerospace.com/products-pages/products-ENDURANCE.php. Acessado em 15/04/2012.\nStroustrup, B. Stroustrup: C++. 2011. http://www2.research.att. com/\\~{}bs/C++.html. Acessado em 02/02/2011.\nTarn, T.; Yang, S. Modeling and control for underwater robotic manipulators - an example. In: IEEE. Proceedings of 1997 IEEE International Conference on Robotics and Automation. Albuquerque, 1997. v. 3, p. 2166-2171.\nTavares, A. Um Estudo Sobre A Modelagem e O Controle De Ve\u00edculos SubAqu\u00e1ticos N\u00e3o Tripulados. Disserta\u00e7\u00e3o (Disserta\u00e7\u00e3o de mestrado) \u2014 FURG - P\u00f3s-Gradua\u00e7\u00e3o em Engenharia Oce\u00e2nica, Rio Grande, 2003.\nTerra. Conhe\u00e7a o Remora 6000, o Rob\u00f4 das Buscas do AF447. Terra Not\u00edcias, Online, 2011. http://www.terra.com.br/noticias/ infograficos/remora6000. Acessado em 25/05/2011.\nTonetto, C.; Rocha, C.; Dias, A. Simulation of Multi-Robot Cooperative Systems Programming Based on a Three Environment Definition. In: IMECHE. Proceedings of the 12th Mechatronics Forum Biennial International Conference. Zurich: IWF - Institute of Machine Tools and Manufacturing, 2010. v. 2, p. 186-193.\nTonetto, C. P. Uma Sistematiza\u00e7\u00e3o da Modelagem e Programa\u00e7\u00e3o Cinem\u00e1tica de Sistemas Rob\u00f3ticos Cooperativos Para a Realiza\u00e7\u00e3o de Tarefas. Tese (Tese de Doutorado) \u2014 Universidade Federal de Santa Catarina, Florian\u00f3polis, 2011.\nTonjum, S.; Peterson, R.; Florio, J. Norwegian Deep Diving Trials [and Discussion]. Philosophical Transactions of the Royal Society of London. B, Biological Sciences, The Royal Society, London, v. 304, n. 1118, p. 143-149, 1984.\nTsai, L. Robot Analysis: The Mechanics of Serial and Parallel Manipulators. New York: Wiley-Interscience, 1999.\nTsai, L. W. Mechanism Design: Enumeration of Kinematic Structures According to Function. Boca Raton: CRC-Press, 2000.\nUNESCO (Ed.). Water in a Changing World: The United Nations World Water Development Report 3. Paris: UNESCO, 2009. 430 p.\nValavanis, K. et al. Control architectures for autonomous underwater vehicles. IEEE Control Systems Magazine, v. 17, n. 6, p. 48-64, 1997.\nW3C. Extensible Markup Language(XML). 2011. http: //www.w3.org/XML. Acessado em 09/02/2011.\nWaldron, K.; Schmiedeler, J. Kinematics. In: Siciliano, B.; Khatib, O. (Ed.). Springer Handbook of Robotics. Heidelberg: Springer, 2008, (Springer Tracts in Advanced Robotics). cap. 01, p. 9-34.\nWhitcomb, L. Underwater Robotics: Out of The Research Laboratory and Into The Field. In: IEEE. Proceedings of ICRA \u201900. San Francisco, 2000. v. 1, p. 709-716.\nXu, G. et al. Motion Control and Computer Simulation for Underwater Vehicle-Manipulator Systems. In: International Conference on Mechatronics and Automation - ICMA 2007. Heilongjiang: [s.n.], 2007. p. 1368-1373.\nYuh, J. Modeling and control of underwater robotic vehicles. IEEE Transactions on Systems, Man and Cybernetics, IEEE, v. 20, n. 6, p. 1475-1483, 1990.\nYuh, J. Design and control of autonomous underwater robots: A survey. Autonomous Robots, v. 8, n. 1, p. 7-24, 2000.\nYuh, J. et al. Design of a semi-autonomous underwater vehicle for intervention missions (SAUVIM). In: Proceedings of the 1998 IEEE International Symposium on Underwater Technologies. Tokyo: [s.n.], 1998. p. 63-68.\nZiviani, N. Projeto de algoritmos com implementa\u00e7\u00e3o em Java e C++. S\u00e3o Paulo: Thomson Learning, 2006. 642 p.\nAP\u00caNDICE A - Fundamentos da An\u00e1lise Cinem\u00e1tica Por Helicoides\nEste ap\u00eandice consiste em uma revis\u00e3o das teorias e ferramentas utilizadas na an\u00e1lise cinem\u00e1tica por helicoides. Ele inicia pela representa\u00e7\u00e3o por helicoides do movimento de corpos r\u00edgidos, seguida pela sua extens\u00e3o para cadeias cinem\u00e1ticas, onde a teoria dos grafos \u00e9 um instrumento importante. As ferramentas usadas para a an\u00e1lise das cadeias cinem\u00e1ticas como o m\u00e9todo de Davies e as cadeias virtuais de Assur s\u00e3o apresentadas a seguir. O uso do m\u00e9todo das restri\u00e7\u00f5es cinem\u00e1ticas para o planejamento de movimento encerra o ap\u00eandice.\nA.1 O MOVIMENTO DE CORPOS R\u00cdGIDOS\nA teoria dos helicoides \u00e9 uma forma de se estudar o movimento geral de um corpo r\u00edgido no espa\u00e7o, bem como o movimento relativo de corpos r\u00edgidos vinculados, formando cadeias cinem\u00e1ticas. Suas origens remontam aos estudos do deslocamento helicoidal instant\u00e2neo de Mozzi em 1763 e do deslocamento finito geral de corpos r\u00edgidos de Chasles em 1830. Ball sistematizou a teoria em 1900, sendo posteriormente aplicada na an\u00e1lise cinem\u00e1tica por Hunt, Phillips, Roth e Tsai, entre outros. A evolu\u00e7\u00e3o dos estudos do movimento helicoidal e suas aplica\u00e7\u00f5es \u00e9 apresentada nas revis\u00f5es hist\u00f3ricas de Ceccarelli e Dai (Ceccarelli, 2000; Dai, 2006).\nUm helicoide (do ingl\u00eas screw) \u00e9 um ente geom\u00e9trico, como um ponto, uma reta ou um plano. Ele \u00e9 formado por um eixo (ou reta direcionada) e por uma grandeza escalar denominada passo. Assim, essa entidade pode representar ao mesmo tempo uma quantidade rotacional em torno do seu eixo e uma grandeza translacional paralela a este eixo, relacionando-as pelo valor do passo (Hunt, 2000; Davison; Hunt, 2004). A teoria dos helicoides associa um significado f\u00edsico a esta entidade puramente geom\u00e9trica, utilizando-a para expressar tanto velocidades (angular e linear) quanto esfor\u00e7os (for\u00e7as e momentos) em uma \u00fanica representa\u00e7\u00e3o, o que o torna conveniente para estudos em cinem\u00e1tica e est\u00e1tica (Dai, 2006).\nUma nota\u00e7\u00e3o bastante usada para expressar helicoides \u00e9 baseada na defini\u00e7\u00e3o de uma reta pelas coordenadas de Pl\u00fccker, como ilustrado na Figura 79. Seja S um vetor que representa a dire\u00e7\u00e3o e a magnitude do eixo do helicoide. A posi\u00e7\u00e3o do eixo em rela\u00e7\u00e3o \u00e0 origem O de um sistema de coordenadas de refer\u00eancia \u00e9 descrita pelo momento de S, definido como o produto vetorial entre o vetor posi\u00e7\u00e3o s0 de um ponto qualquer do eixo do helicoide e o vetor S.\nAs coordenadas de Pl\u00fccker s\u00e3o descritas na Equa\u00e7\u00e3o A.1. Os\ntr\u00eas primeiros componentes correspondem ao vetor S do eixo da reta, enquanto os tr\u00eas componentes restantes s\u00e3o o seu momento. Observase que as coordenadas de Pl\u00fccker n\u00e3o formam um vetor, e que S e seu momento s\u00e3o ortogonais (Hunt, 2000).\nFigura 79. Defini\u00e7\u00e3o geom\u00e9trica das coordenadas de Pl\u00fccker\n$ =\nS\nso x S\n= [ L M N \\ P Q R ]T\n(A.1)\nA transla\u00e7\u00e3o paralela ao eixo do helicoide relaciona-se \u00e0 rota\u00e7\u00e3o em torno de S pelo passo escalar h. Esta transla\u00e7\u00e3o \u00e9 adicionada \u00e0s coordenadas de Pl\u00fccker nas componentes de momento, resultando na Equa\u00e7\u00e3o A.2, onde P* = P + hL, Q* = Q + hM e R* = R + hN. A representa\u00e7\u00e3o geom\u00e9trica \u00e9 ilustrada na Figura 80.\n$=\nS\nso x S + hS\n= [ L M N \\ P *\nQ* R* ]T\n(A.2)\nUm helicoide pode ser decomposto em um helicoide normalizado $ e uma magnitude como na Equa\u00e7\u00e3o A.3,\n$ = $^ =\ns\nso x s + hs\n(A.3)\n\nonde s \u00e9 o vetor unit\u00e1rio de S. Caso o helicoide normalizado represente apenas rota\u00e7\u00e3o (h = 0) ele se reduz \u00e0 forma da Equa\u00e7\u00e3o A.4. Para uma transla\u00e7\u00e3o pura assume-se h = to e o helicoide normalizado \u00e9 expresso\n$\nFigura 80. Defini\u00e7\u00e3o geom\u00e9trica de um helicoide\ncomo na Equa\u00e7\u00e3o A.5.\ns\nSQ X S\n(A.4)\n(A.5)\n$ =\n$ =\n0\ns\nA.1.1 Cinem\u00e1tica de Posi\u00e7\u00e3o\nDe acordo com o Teorema de Chasles, o deslocamento geral de um corpo r\u00edgido no espa\u00e7o pode ser representado (ou decomposto) por uma rota\u00e7\u00e3o em torno de um eixo e uma transla\u00e7\u00e3o paralela a este eixo (Simas, 2008; Dai, 2006). Assim, a posi\u00e7\u00e3o de um ponto no corpo r\u00edgido pode ser obtida a partir do helicoide que representa esse movimento, do \u00e2ngulo de rota\u00e7\u00e3o e do deslocamento sobre o helicoide (Tsai, 1999).\nO deslocamento helicoidal \u00e9 ilustrado na Figura 81. Nela, o ponto P se move da posi\u00e7\u00e3o P1 para a posi\u00e7\u00e3o P2. O movimento helicoidal \u00e9 decomposto em uma rota\u00e7\u00e3o 0 ao redor do eixo do helicoide seguida de uma transla\u00e7\u00e3o d paralela a este eixo. Juntamente com sQ e s, que definem o helicoide, essas quatro vari\u00e1veis formam os par\u00e2metros de Rodrigues. A partir destes a matriz de transforma\u00e7\u00e3o homog\u00eanea A da equa\u00e7\u00e3o A.6 \u00e9 obtida. R(0) e p(d, 0) s\u00e3o definidos respectivamente nas equa\u00e7\u00f5es A.7 e A.8.\ny\nFigura 81. Deslocamento helicoidal e par\u00e2metros de Rodrigues\nR(0) =\nce + sX (1 \u2014 ce )\nSy Sx(1 \u2014 ce) \u2014 sz se szsx(1 ce) syse\nSy sx(1 \u2014 ce) \u2014 sz se ce + sy (1 \u2014 ce) sysz(1\tce)\tsxse\nsz. sx(1 \u2014 ce) \u2014 sy se sy sz (1 \u2014 ce) \u2014 sxse ce + sz(1 \u2014 ce)\n(A.7)\np(d, 0) = ds + [I \u2014 R(0)] s0\n(A.8)\nUm corpo r\u00edgido pode sofrer mais de um deslocamento helicoidal, e o deslocamento total resultante pode ser representado por um \u00fanico deslocamento helicoidal equivalente. Este \u00e9 determinado pela premulti-plica\u00e7\u00e3o das matrizes de transforma\u00e7\u00e3o homog\u00eanea dos deslocamentos helicoidais originais.\nA.1.2 Cinem\u00e1tica Diferencial\nSegundo o Teorema de Mozzi, o movimento instant\u00e2neo dos pontos de um corpo pode ser decomposto em uma rota\u00e7\u00e3o diferencial em torno de um eixo e uma transla\u00e7\u00e3o diferencial paralela a este eixo. Este movimento helicoidal pode ser representado por um helicoide de velocidade denominado heligiro (do ingl\u00eas twist) (Campos; Guenther; Martins, 2005).\nSendo um helicoide, o heligiro \u00e9 composto por uma parte rotacional e uma translacional como $ = [wT: vj , onde w \u00e9 a velocidade\nangular do corpo r\u00edgido e vp \u00e9 a velocidade linear de um ponto instantaneamente coincidente com a origem O que se move solid\u00e1rio ao corpo. A Figura 82 ilustra essa defini\u00e7\u00e3o. vp tem um componente normal ao eixo do heligiro (s0 x w) e um componente paralelo a ele (hw).\nFigura 82. Heligiro em um corpo r\u00edgido\nUm heligiro pode ser decomposto em um helicoide normalizado e uma magnitude, como descrito na Equa\u00e7\u00e3o A.9, onde q \u00e9 a magnitude da velocidade. Os casos particulares anteriormente definidos para he-licoides encontram significado f\u00edsico nas juntas rotativas e prism\u00e1ticas comumente empregadas em rob\u00f3tica. Para as primeiras, q corresponde \u00e0 velocidade angular w (assim como o caso helicoidal geral). Nas \u00faltimas, q corresponde \u00e0 velocidade linear vp.\n$ =\nw\ns0 x w + hw\ns\ns0 x s + hs\nq = $q\n(A.9)\nA.2 O MOVIMENTO DE CADEIAS CINEM\u00c1TICAS\nA abordagem baseada em helicoides para modelagem cinem\u00e1tica de cadeias \u00e9 uma alternativa \u00e0 baseada na conven\u00e7\u00e3o de Denavit-Hartenberg, muito usada na literatura de rob\u00f3tica. Em rela\u00e7\u00e3o a esta conven\u00e7\u00e3o, a abordagem baseada em helicoides apresenta algumas vantagens, como o fato de poder ser usada de modo uniforme para cadeias abertas e fechadas e ter flexibilidade na escolha dos sistemas de coordenadas de refer\u00eancia empregados (Rocha; Tonetto; Dias, 2011b).\nA.2.1 Cinem\u00e1tica de Posi\u00e7\u00e3o de Uma Cadeia\nEm uma cadeia cinem\u00e1tica, elos (tratados aqui como corpos r\u00edgidos) s\u00e3o vinculados entre si atrav\u00e9s de juntas. O movimento de um elo i da cadeia em rela\u00e7\u00e3o ao seu predecessor i \u2014 1 \u00e9 fun\u00e7\u00e3o do tipo da junta i que os conecta. Esse movimento pode ser descrito por um heligiro $ \u00bf. Com base nesse heligiro, \u00e9 poss\u00edvel definir a matriz de transforma\u00e7\u00e3o homog\u00eanea que representa a postura do elo i em rela\u00e7\u00e3o ao elo i \u2014 1.\nA postura de um elo e relativa a um elo b (por exemplo, a postura do efetuador final de um manipulador serial em rela\u00e7\u00e3o \u00e0 sua base) \u00e9 ent\u00e3o definida pelos deslocamentos helicoidais realizados pelas juntas da subcadeia definida entre b e e. O deslocamento total do elo e \u00e9 obtido pela premultiplica\u00e7\u00e3o das matrizes de transforma\u00e7\u00e3o j-1Aj determinadas como na Equa\u00e7\u00e3o A.6 a partir dos par\u00e2metros de Rodrigues do deslocamento i. Este resultado \u00e9 expresso na Equa\u00e7\u00e3o A.10.\nbAe = 6A11A2...\u201d-1A\u201e\u201dAe\t(A.10)\nEsse processo pode ser visto como se o corpo r\u00edgido do elo e sofresse v\u00e1rios deslocamentos em sequ\u00eancia segundo os helicoides da primeira \u00e0 \u00faltima junta da subcadeia b \u2014 e. Por isso, ele \u00e9 denominado m\u00e9todo dos deslocamentos helicoidais sucessivos (Tsai, 1999). Ele pode ser sintetizado nos seguintes passos (Rocha; Tonetto; Dias, 2011b):\n\u2022Escolher um sistema de coordenadas fixo de refer\u00eancia a partir dos quais os helicoides ser\u00e3o definidos;\n\u2022Definir uma configura\u00e7\u00e3o de refer\u00eancia para a cadeia cinem\u00e1tica, a partir da qual os par\u00e2metros s e s0 dos helicoides ser\u00e3o determinados;\n\u2022Para cada junta, identificar os par\u00e2metros de Rodrigues e sua vari\u00e1vel de junta;\n\u2022Determinar a matriz de transforma\u00e7\u00e3o homog\u00eanea relativa ao deslocamento de cada junta;\n\u2022Determinar a matriz de transforma\u00e7\u00e3o homog\u00eanea resultante de todos os deslocamentos atrav\u00e9s da Equa\u00e7\u00e3o A.10. A postura do elo e em rela\u00e7\u00e3o a b \u00e9 extra\u00edda dessa matriz.\nNesta s\u00edntese assume-se que o elo b est\u00e1 posicionado na origem do sistema de coordenadas inercial (adotado para expressar os helicoides)\ne alinhado com ele. Se este n\u00e3o for o caso, pode-se incluir uma transforma\u00e7\u00e3o homog\u00eanea adicional que represente a posi\u00e7\u00e3o e orienta\u00e7\u00e3o deste elo em rela\u00e7\u00e3o \u00e0 origem do sistema de coordenadas. Da mesma forma, \u00e9 poss\u00edvel acrescentar uma transforma\u00e7\u00e3o homog\u00eanea que represente a diferen\u00e7a de postura entre o sistema de coordenadas atribu\u00eddo ao elo e e um ponto de interesse neste elo ou em um elemento a ele vinculado (por exemplo, uma ferramenta montada sobre o efetuador final de um manipulador). Dessa forma, a cinem\u00e1tica direta pode ser reescrita como na Equa\u00e7\u00e3o A.11,\nbAf = 0A66A11A2 \u2022 \u2022\u2022 \u201d-1A\u201e\u201dAeeAf\t(A.11)\nonde 0Ab \u00e9 a matriz homog\u00eanea entre o referencial do elo b e o referencial inercial e e Af \u00e9 a matriz homog\u00eanea entre um referencial vinculado ao ponto de interesse F e o referencial do elo e.\nQuando v\u00e1rios helicoides s\u00e3o relacionados, assume-se que todos est\u00e3o representados segundo um mesmo referencial. Em alguns casos, \u00e9 poss\u00edvel que os helicoides sejam definidos segundo sistemas de refer\u00eancia distintos, ou mesmo que se adote um sistema de refer\u00eancia final diferente daquele utilizado para a defini\u00e7\u00e3o dos helicoides das juntas. Isso pode acontecer ao se adotar um referencial que simplifique as express\u00f5es dos helicoides e das matrizes de transforma\u00e7\u00e3o homog\u00eaneas mas que seja distinto do necess\u00e1rio para o estudo de postura do problema (Simas, 2008). Nesses casos, uma transforma\u00e7\u00e3o de helicoides deve ser aplicada. Esta pode ser definida a partir da transforma\u00e7\u00e3o homog\u00eanea entre os sistemas de coordenadas j e i, como ilustrado na Figura 83. A transforma\u00e7\u00e3o \u00e9 expressa como na Equa\u00e7\u00e3o A.12,\nirp __\n\u2014\n%\t0\nS Cp.?)\t\u2019Rj\n(A.12)\nonde S (\u2019p?) \u00e9 a matriz antissim\u00e9trica do vetor posi\u00e7\u00e3o entre as origens dos dois sistemas de coordenadas e \u00aeRj \u00e9 a matriz de rota\u00e7\u00e3o da orienta\u00e7\u00e3o do sistema j para o sistema i.\nA.2.2 Usando Grafos Para Representar Cadeias Cinem\u00e1ticas\nA an\u00e1lise de uma cadeia pode se tornar dif\u00edcil em fun\u00e7\u00e3o da complexidade da sua estrutura cinem\u00e1tica. Esta pode ter um grande n\u00famero de juntas e elos e formar circuitos fechados ou h\u00edbridos. Assim, a modelagem acaba se tornando complexa e eventualmente espec\u00edfica\nFigura 83. Transforma\u00e7\u00e3o de helicoides\npara cada estrutura cinem\u00e1tica, bem como a sua an\u00e1lise. Manipuladores paralelos, sistemas rob\u00f3ticos cooperativos e sistemas ve\u00edculo-manipulador s\u00e3o casos t\u00edpicos da rob\u00f3tica.\nPara simplificar e sistematizar a an\u00e1lise de cadeias cinem\u00e1ticas, faz-se a representa\u00e7\u00e3o destas atrav\u00e9s da teoria dos grafos. Apesar de ser considerada uma \u00e1rea relativamente nova de pesquisa da matem\u00e1tica, essa teoria apresenta muitos resultados e aplica\u00e7\u00f5es pr\u00e1ticas em v\u00e1rias \u00e1reas (Bang-Jensen; Gutin, 2007). Uma discuss\u00e3o detalhada do seu uso para mecanismos pode ser encontrada em (Tsai, 2000).\nUm grafo \u00e9 uma estrutura matem\u00e1tica utilizada para representar rela\u00e7\u00f5es entre objetos de uma determinada cole\u00e7\u00e3o. Os objetos s\u00e3o representados por v\u00e9rtices (tamb\u00e9m chamados de n\u00f3s ou pontos), enquanto as rela\u00e7\u00f5es s\u00e3o definidas pelas arestas (tamb\u00e9m chamadas de linhas) (Bang-Jensen; Gutin, 2007). Uma rela\u00e7\u00e3o entre dois objetos pode ser bidirecional ou apenas de um objeto para outro. Neste caso, a aresta que conecta os v\u00e9rtices relativos aos objetos \u00e9 direcionada. Um grafo que tem esse tipo de aresta \u00e9 chamado de d\u00edgrafo (Diestel, 2005).\nUm caminho \u00e9 um conjunto de arestas que conectam dois v\u00e9rtices quaisquer. Ele \u00e9 fechado quando o v\u00e9rtice de partida \u00e9 o mesmo v\u00e9rtice de chegada, formando um circuito ou ciclo.\nExistem diversas estruturas de dados que podem ser usadas para representar um grafo. A matriz de adjac\u00eancias \u00e9 uma delas, onde as linhas e colunas correspondem a v\u00e9rtices e o conte\u00fado de cada c\u00e9lula indica se h\u00e1 uma aresta entre um v\u00e9rtice l e um v\u00e9rtice c. Outra representa\u00e7\u00e3o usada \u00e9 a matriz de incid\u00eancias, onde as linhas representam os v\u00e9rtices e as colunas representam as arestas, e as c\u00e9lulas indicam se a aresta c incide em um v\u00e9rtice l.\nOutra matriz utilizada no estudo de grafos \u00e9 a matriz de circuitos, em que cada linha corresponde a um circuito do grafo e cada coluna corresponde a uma aresta. O conte\u00fado da c\u00e9lula com endere\u00e7o (l, c) indica se a aresta c \u00e9 parte do circuito l. No caso de d\u00edgrafos, o conte\u00fado da c\u00e9lula pode indicar se o sentido da aresta coincide ou n\u00e3o com o sentido do circuito. Uma representa\u00e7\u00e3o simples para esse caso, em um circuito l, \u00e9 a c\u00e9lula assumir o valor 0 para uma aresta que n\u00e3o fa\u00e7a parte do circuito, +1 se tiver o mesmo sentido do circuito e \u20141 se o seu sentido for contr\u00e1rio ao do circuito.\nPara usar grafos na an\u00e1lise cinem\u00e1tica de cadeias, associam-se os elos aos v\u00e9rtices e as juntas \u00e0s arestas. Um par cinem\u00e1tico formado por dois elos a e b conectado por uma junta 1 \u00e9 representado como no grafo da Figura 84. O sentido da aresta que representa a junta 1 indica que esta gera o movimento do elo b em rela\u00e7\u00e3o ao elo a.\nb\nFigura 84. Representa\u00e7\u00e3o de um par cinem\u00e1tico por um grafo\nAo se representar a cadeia cinem\u00e1tica inteira, v\u00e1rios circuitos podem surgir. No exemplo da Figura 84 \u00e9 assumido que a junta fa\u00e7a parte dos circuitos e l2. Se o grafo da cadeia cinem\u00e1tica tem 3 circuitos independentes (que servem de base para construir todos os circuitos da cadeia), a coluna da matriz de circuitos B correspondente \u00e0 junta 1 assume os valores mostrados na Equa\u00e7\u00e3o A.13.\n1\nli \u2022 \u2022 \u2022\t+1\nB = I2\t\u2022\u2022\u2022\t-1\nI3\t\u2022 \u2022 \u2022\t0\n(A.13)\nExistem dois tipos de d\u00edgrafos usados para a representa\u00e7\u00e3o de cadeias cinem\u00e1ticas. O d\u00edgrafo de acoplamento representa a rela\u00e7\u00e3o entre os elos, ou seja, os pares cinem\u00e1ticos da cadeia. O d\u00edgrafo de movimento, por sua vez, representa o grau de liberdade entre os pares. Este \u00e9 obtido pela substitui\u00e7\u00e3o de cada aresta correspondente a uma junta de mais de um grau de liberdade do d\u00edgrafo de acoplamento por um subgrafo com o n\u00famero de arestas igual aos graus de liberdade da\njunta. Caso todas as juntas da cadeia cinem\u00e1tica sejam de um grau de liberdade, os d\u00edgrafos de acoplamento e movimento ser\u00e3o id\u00eanticos. A an\u00e1lise cinem\u00e1tica \u00e9 feita a partir do d\u00edgrafo de movimento.\nPara exemplificar a descri\u00e7\u00e3o por grafos, ser\u00e1 usado o mecanismo planar de quatro barras apresentado na Figura 85a. Todas as juntas do mecanismo s\u00e3o rotativas, o que faz com que o d\u00edgrafo de acoplamento e o de movimento sejam iguais. Ele \u00e9 apresentado na Figura 85b. A matriz de circuitos B correspondente \u00e9 descrita na Equa\u00e7\u00e3o A.14.\n2\n3\n(a)\n(b)\nFigura 85. Mecanismo de 4 barras: (a)representa\u00e7\u00e3o funcional; (b)grafo de movimento\n12\t3\t4\nB = l [+1 +1 +1 +1]\n(A.14)\nA.2.3 Cinem\u00e1tica Diferencial de Uma Cadeia\nEm uma cadeia cinem\u00e1tica, os heligiros representam o estado de velocidades dos pares cinem\u00e1ticos formados por dois elos vinculados por uma junta. Um heligiro descreve o movimento instant\u00e2neo de um elo em rela\u00e7\u00e3o ao outro elo ao qual est\u00e1 vinculado. O movimento instant\u00e2neo de um elo e em rela\u00e7\u00e3o a um elo b \u00e9 determinado pelo somat\u00f3rio dos heligiros das juntas da cadeia compreendida entre estes elos, como expresso na Equa\u00e7\u00e3o A.15, onde o \u00edndice i corresponde \u00e0 junta respons\u00e1vel pelo movimento relativo do elo i em rela\u00e7\u00e3o ao seu antecessor i \u2014 1.\ne\tp\t-\te\n$ e = V $ i =\t= E\t= Jq\t(A.15)\ni=b+i\tL\ti=b+i\nAo se decompor os heligiros nos seus helicoides normalizados e suas magnitudes, obt\u00e9m-se a matriz Jacobiana J = [$b+1 \u2022 \u2022 \u2022 $e] e o vetor coluna q = [qb+1 \u2022 \u2022 \u2022 qe]T. O Jacobiano, cujas colunas s\u00e3o formadas pelos helicoides normalizados, relaciona as velocidades das juntas \u00e0 velocidade do elo e. Os elementos de q, por sua vez, est\u00e3o associados \u00e0s colunas de J e correspondem \u00e0s magnitudes das velocidades das juntas (Tsai, 1999; Hunt, 2000; Campos, 2004).\nA.3 AN\u00c1LISE CINEM\u00c1TICA\nPara manipuladores seriais, a determina\u00e7\u00e3o do movimento dos elos \u00e9 relativamente simples. Por\u00e9m, \u00e0 medida em que as cadeias cinem\u00e1ticas tornam-se mais complexas, os grafos de movimentos passam a ser uma ferramenta importante na an\u00e1lise do movimento dos elos da cadeia. Em cadeias fechadas, o m\u00e9todo de Davies \u00e9 \u00fatil para relacionar as velocidades do sistema. As cadeias virtuais de Assur, por sua vez, s\u00e3o instrumentais para a an\u00e1lise do movimento de elos espec\u00edficos de uma cadeia, bem como na imposi\u00e7\u00e3o de restri\u00e7\u00f5es.\nA.3.1 O M\u00e9todo de Davies\nO m\u00e9todo de Davies \u00e9 uma adapta\u00e7\u00e3o da lei de circula\u00e7\u00e3o de Kirchhoff para o uso em cadeias cinem\u00e1ticas fechadas com a finalidade de definir a sua cinem\u00e1tica diferencial (Campos, 2004). Davies estabelece que \u201ca soma alg\u00e9brica das velocidades relativas dos pares cinem\u00e1ticos em uma cadeia fechada \u00e9 igual a 0\u201d (Davies, 1981), resultando em uma equa\u00e7\u00e3o de restri\u00e7\u00e3o na forma expressa na Equa\u00e7\u00e3o A.16,\nn\tn\n$ i =\tqi = Nq= 0\t(A.16)\ni=1\ti=1\nonde N \u00e9 a matriz de rede que relaciona os movimentos das juntas aos circuitos independentes da cadeia cinem\u00e1tica. Esta \u00e9 definida a partir da an\u00e1lise do grafo de movimento da cadeia cinem\u00e1tica. Ela tem dimens\u00e3o Xl x Fb, onde A \u00e9 a dimens\u00e3o do espa\u00e7o de helicoides, l \u00e9 o n\u00famero de circuitos independentes da cadeia e Fb \u00e9 o seu n\u00famero de graus de liberdade bruto (igual ao n\u00famero de arestas do grafo de movimento). A matriz N \u00e9 ent\u00e3o definida como na Equa\u00e7\u00e3o A.17,\nN =\nDdiag {Bi}\n(A.17)\nDdiag {Bi}\nonde D \u00e9 uma matriz cujas colunas s\u00e3o formadas pelos helicoides normalizados da cadeia (com dimens\u00e3o A x Fb) e B \u00e9 a matriz de circuitos do grafo de movimento (com dimens\u00e3o l x Fb). O operador diag {Bj} forma uma matriz diagonal com os elementos da linha i da matriz B.\nPode-se afirmar que a equa\u00e7\u00e3o de restri\u00e7\u00e3o estabelece Al restri\u00e7\u00f5es para a cadeia fechada. O n\u00famero de vari\u00e1veis independentes, ou seja, a mobilidade da cadeia cinem\u00e1tica, \u00e9 igual a FN = Fb \u2014 Al. Estas correspondem \u00e0s juntas atuadas da cadeia.\nA equa\u00e7\u00e3o de restri\u00e7\u00e3o relaciona as velocidades de todas as juntas da cadeia (Simas, 2008). Assim, \u00e9 poss\u00edvel us\u00e1-la para calcular as velocidades de algumas juntas da cadeia em fun\u00e7\u00e3o das velocidades das demais juntas. Para tanto, a equa\u00e7\u00e3o de restri\u00e7\u00e3o \u00e9 particionada em dois conjuntos. A parti\u00e7\u00e3o prim\u00e1ria corresponde \u00e0s juntas cujas magnitudes das velocidades s\u00e3o conhecidas, enquanto a parti\u00e7\u00e3o secund\u00e1ria \u00e9 formada pelas vari\u00e1veis de juntas cujas magnitudes devem ser determinadas. Assim, obt\u00e9m-se a Equa\u00e7\u00e3o A.18, onde os subscritos p e s correspondem \u00e0s parti\u00e7\u00f5es prim\u00e1ria e secund\u00e1ria, respectivamente.\nNq = N.q. + Nsqs = 0\n(A.18)\nOs valores das vari\u00e1veis secund\u00e1rias s\u00e3o determinados isolando-as na Equa\u00e7\u00e3o A.18, resultando na Equa\u00e7\u00e3o A.19.\nqs = \u2014 Ns 1Npqp\n(A.19)\nAs magnitudes da parti\u00e7\u00e3o secund\u00e1ria s\u00e3o obtidas se a matriz Ns for invers\u00edvel. Do contr\u00e1rio, o sistema encontra-se em alguma singularidade (Campos, 2004). Pelas defini\u00e7\u00f5es da equa\u00e7\u00e3o de restri\u00e7\u00e3o, pode-se usar o m\u00e9todo de Davies para Xl vari\u00e1veis secund\u00e1rias para Ns ser quadrada. Em algumas situa\u00e7\u00f5es, por\u00e9m, podem haver mais vari\u00e1veis secund\u00e1rias que esse valor, tornando Ns retangular. Nesses casos, se for poss\u00edvel, pode-se arbitrar valores para algumas dessas vari\u00e1veis, tornado-as prim\u00e1rias de forma a manter Ns quadrada. Outra op\u00e7\u00e3o \u00e9 utilizar a opera\u00e7\u00e3o pseudoinversa (Guenther et al., 2008).\nA.3.2 Cadeias Virtuais de Assur\nO m\u00e9todo de Davies apresenta como limita\u00e7\u00e3o o fato de ser aplic\u00e1vel apenas a cadeias fechadas. Al\u00e9m disso, n\u00e3o \u00e9 poss\u00edvel us\u00e1-lo para obter ou impor o movimento espec\u00edfico de um ponto que faz parte de um elo da cadeia cinem\u00e1tica. O uso de cadeias cinem\u00e1ticas virtuais auxilia a superar tais limita\u00e7\u00f5es.\nO conceito de cadeia cinem\u00e1tica virtual foi introduzido por Davies, tendo sido posteriormente analisado e desenvolvido por Campos (Campos, 2004). As cadeias virtuais podem ser consideradas ferramentas para monitoramento de cadeias cinem\u00e1ticas reais ou para imposi\u00e7\u00e3o de movimentos/restri\u00e7\u00f5es sobre estas (Campos, 2004; Campos; Guenther; Martins, 2005).\nComo monitoramento, as cadeias virtuais s\u00e3o usadas de forma a se obterem informa\u00e7\u00f5es sobre deslocamentos de elos e juntas da cadeia real. As informa\u00e7\u00f5es obtidas atrav\u00e9s delas podem ser usadas em estrat\u00e9gias de evitamento de obst\u00e1culos, de verifica\u00e7\u00e3o de limites das juntas ou de evitamento de singularidades.\nNa imposi\u00e7\u00e3o de movimentos e restri\u00e7\u00f5es em cadeias reais, as cadeias virtuais s\u00e3o usadas para especificar tarefas ou impor restri\u00e7\u00f5es ao movimento de determinados elementos da cadeia real. Nesse caso, cadeias virtuais s\u00e3o \u00fateis para explorar a mobilidade adicional de cadeias cinematicamente redundantes.\nAs cadeias virtuais s\u00e3o formadas por elos e juntas, como cadeias cinem\u00e1ticas reais, e devem ter as seguintes propriedades:\n1.\tserem abertas;\n2.\tterem seus helicoides normalizados relativos \u00e0s juntas linearmente independentes;\n3.\tn\u00e3o modificarem a mobilidade de cadeias reais quando vinculadas a estas.\nComo consequ\u00eancia destas propriedades, a mobilidade das cadeias virtuais deve ser igual \u00e0 ordem do sistema de helicoides A das cadeias reais \u00e0s quais s\u00e3o vinculadas.\nAs cadeias virtuais s\u00e3o classificadas como grupos de Assur, sendo tamb\u00e9m denominadas cadeias virtuais de Assur para evitar ambiguidades com o termo virtual (Ribeiro; Guenther; Martins, 2008), que neste contexto significa que os elos e juntas da cadeia n\u00e3o existem fisicamente.\nEm cadeias abertas, caracter\u00edsticas de manipuladores seriais, as cadeias virtuais s\u00e3o usadas para fech\u00e1-las, viabilizando o emprego do\nm\u00e9todo de Davies para resolver a cinem\u00e1tica diferencial da cadeia modificada resultante. Em cadeias fechadas, o uso de cadeias virtuais acrescenta malhas ao circuito existente, permitindo tanto a an\u00e1lise do movimento quanto a adi\u00e7\u00e3o de restri\u00e7\u00f5es (Campos; Guenther; Martins, 2005).\nOs tipos de cadeias virtuais comumente utilizados s\u00e3o apresentados na Figura 86. Elas s\u00e3o classificadas em planares e espaciais. As cadeias virtuais planares usuais s\u00e3o do tipo PPR e RPR por poderem representar sistemas de coordenadas cartesianos e polares, respectivamente. No caso espacial, as cadeias PPPS, RPPS e RRPS s\u00e3o comu-mente empregadas por estarem respectivamente associadas a sistemas de coordenadas cartesianos, cil\u00edndricos e esf\u00e9ricos.\nFigura 86. Cadeias virtuais de Assur\nA.4 PLANEJAMENTO DE MOVIMENTO PARA A REALIZA\u00c7\u00c3O DE TAREFAS\nAs cadeias virtuais de Assur permitem impor o movimento de qualquer elo de uma cadeia cinem\u00e1tica real. Assim, elas podem ser utilizadas na defini\u00e7\u00e3o de tarefas a serem executadas por um sistema rob\u00f3tico.\nNesse caso, uma tarefa consistiria de refer\u00eancias de posi\u00e7\u00e3o e velocidade que seriam aplicadas a uma cadeia virtual para impor o movimento de um ponto do sistema em rela\u00e7\u00e3o a um referencial. O tipo de cadeia virtual seria escolhido de acordo com o movimento a\nser imposto. A cadeia seria vinculada aos pontos da cadeia real entre os quais o movimento \u00e9 desejado. Pode-se estender a especifica\u00e7\u00e3o da tarefa para o movimento/restri\u00e7\u00e3o de mais de um ponto do rob\u00f4. Para isso, adicionam-se mais cadeias virtuais e descri\u00e7\u00f5es das suas refer\u00eancias de posi\u00e7\u00e3o e velocidade.\nA adi\u00e7\u00e3o de cadeias virtuais ao sistema deve definir uma cadeia cinem\u00e1tica final fechada. Assim, pode-se aplicar o m\u00e9todo de Davies para a resolu\u00e7\u00e3o cinem\u00e1tica. Para isso, o particionamento da equa\u00e7\u00e3o de restri\u00e7\u00e3o \u00e9 feito de maneira que as vari\u00e1veis cujas posi\u00e7\u00f5es/velocida-des sejam definidas na tarefa estejam na parti\u00e7\u00e3o prim\u00e1ria, enquanto as demais compor\u00e3o a parti\u00e7\u00e3o secund\u00e1ria, devendo ser calculadas na solu\u00e7\u00e3o da equa\u00e7\u00e3o de restri\u00e7\u00e3o. Obtidas as velocidades, realiza-se a integra\u00e7\u00e3o para se obter as refer\u00eancias de posi\u00e7\u00e3o.\nA.4.1 O M\u00e9todo das Restri\u00e7\u00f5es Cinem\u00e1ticas\nIntroduzido em (Santos, 2006), o m\u00e9todo das restri\u00e7\u00f5es cinem\u00e1ticas \u00e9 uma sistematiza\u00e7\u00e3o do processo de resolu\u00e7\u00e3o cinem\u00e1tica de um sistema rob\u00f3tico em fun\u00e7\u00e3o da tarefa que foi descrito acima.\nEscolhendo adequadamente as juntas a serem atuadas (virtuais e reais) \u00e9 poss\u00edvel definir a matriz Ns como quadrada, permitindo sua invers\u00e3o. Obviamente, as demais juntas devem ter seu movimento definido. No caso de manipuladores redundantes, h\u00e1 liberdade para adicionar restri\u00e7\u00f5es al\u00e9m das que imp\u00f5em o movimento do elo considerado, permitindo explorar a maior destreza dessas cadeias cinem\u00e1ticas. Isso significa que eventualmente alguma junta real da cadeia pode ser referenciada na tarefa, ao inv\u00e9s de alguma junta virtual. Da mesma forma, as juntas de uma cadeia virtual podem ser secund\u00e1rias, como no caso em que se quer monitorar o movimento de algum ponto do sistema. Nos casos em que n\u00e3o \u00e9 poss\u00edvel definir Ns como quadrada, pode-se empregar uma pseudoinvers\u00e3o.\nSimas mostra que esse m\u00e9todo equivale ao Jacobiano estendido, para resolu\u00e7\u00e3o de cadeias cinem\u00e1ticas redundantes. Para tanto, utiliza o conceito de operador aniquilador de cadeias passivas secund\u00e1rias. Tal demonstra\u00e7\u00e3o pode ser vista em (Simas, 2008).\nEm rela\u00e7\u00e3o aos m\u00e9todos mais tradicionais, usando pseudoin-versa, prioridade da tarefa ou jacobiano estendido1, o m\u00e9todo das restri\u00e7\u00f5es cinem\u00e1ticas apresenta como vantagem o fato de n\u00e3o apresentar\n1 Estes m\u00e9todos sao apresentados e analisados em (Chiaverini; Oriolo; Walker, 2008)\ninconsist\u00eancias dimensionais (Santos, 2006; Fontan, 2007; Simas, 2008). Al\u00e9m disso, o m\u00e9todo ainda apresenta a caracter\u00edstica de conserva\u00e7\u00e3o do movimento (Simas, 2008).\nA.4.2 Resolu\u00e7\u00e3o da Cinem\u00e1tica Inversa\nAs posi\u00e7\u00f5es das juntas s\u00e3o obtidas atrav\u00e9s da integra\u00e7\u00e3o das velocidades determinadas pelo m\u00e9todo das restri\u00e7\u00f5es cinem\u00e1ticas, em fun\u00e7\u00e3o das velocidades impostas nas juntas virtuais. A rela\u00e7\u00e3o entre estas velocidades \u00e9 estabelecida por uma matriz jacobiana. Esta, em geral, \u00e9 bastante complexa, o que dificulta a obten\u00e7\u00e3o de uma solu\u00e7\u00e3o anal\u00edtica, levando ao uso de m\u00e9todos de integra\u00e7\u00e3o num\u00e9rica. Por serem baseados em aproxima\u00e7\u00f5es, por\u00e9m, estes m\u00e9todos geram erros, em um fen\u00f4meno conhecido como deriva. Em cadeias abertas, isso resulta em indesej\u00e1veis erros de postura. Em cadeias fechadas o problema \u00e9 mais cr\u00edtico, pois estas acabam por abrir (Simas et al., 2009).\nUma solu\u00e7\u00e3o adotada por muitos autores consiste em compensar o erro de posi\u00e7\u00e3o nas refer\u00eancias da tarefa adotando uma realimenta\u00e7\u00e3o das posi\u00e7\u00f5es calculadas no processo conhecido como cinem\u00e1tica inversa em malha fechada ou CLIK (do ingl\u00eas Closed-Loop Inverse Kinematics (Siciliano et al., 2009; Antonelli, 2006). Uma proposta baseada em helicoides foi desenvolvida por Simas et al. (2009).\nO m\u00e9todo de integra\u00e7\u00e3o proposto por Simas consiste em representar o erro causado pelo m\u00e9todo num\u00e9rico de integra\u00e7\u00e3o por cadeias virtuais de erro de fechamento em cada malha (Simas, 2008; Guenther et al., 2008; Fontan, 2007).\nAs cadeias mais convenientes para a representa\u00e7\u00e3o do erro, s\u00e3o as PPR e 3P3R (caso plano e espacial, respectivamente), pois al\u00e9m de desacoplar os erros de posi\u00e7\u00e3o e de orienta\u00e7\u00e3o, evita introduzir singularidades com as cadeias de erro (Fontan, 2007). A adi\u00e7\u00e3o destas n\u00e3o modifica o m\u00e9todo de Davies, mas a matriz de rede Ns passa a ser particionada levando em considera\u00e7\u00e3o tais cadeias. Assim, tem-se\nNsqs + N.q. + Neqe = 0\n(A.20)\nPara obter qs, acrescenta-se um termo de erro de posi\u00e7\u00e3o \u00e0 equa\u00e7\u00e3o A.19, resultando na equa\u00e7\u00e3o de erro\nqs = -Ns 1 (Npqp - NeKeqe)\n(A.21)\nAo se substituir qs na equa\u00e7\u00e3o A.20, e eliminando Ne, obt\u00e9m-se\nKeqe + qe =0\t(A.22)\nque \u00e9 assintoticamente est\u00e1vel, se Ke for definida positiva (Simas, 2008; Simas et al., 2009). Fontan mostra em exemplos tal resultado (Fontan, 2007).\nO erro \u00e9 definido pelo m\u00e9todo dos helicoides sucessivos, a partir da observa\u00e7\u00e3o de que, em uma cadeia fechada, o produto das transforma\u00e7\u00f5es que representam a postura de um determinado elo em rela\u00e7\u00e3o a si mesmo \u00e9 igual \u00e0 identidade. Separando estas em prim\u00e1rias, secund\u00e1rias e de erro, tem-se\nAP1 Ap2 \u2022\u2022\u2022 A.. AS1A \u2022\u2022\u2022 ASnS E = I\t(A.23)\nA matriz de erros \u00e9 obtida, isolando-a na equa\u00e7\u00e3o A.23, resultando em\nAS1 AS2 \u25a0 \u25a0 \u25a0 As\u201e-. }\n-1\n= Re Pe\n0 1\nE = {AP1 AP2 ' ' ' APnp\n\u00cdnp\tns\tj\nn ap\u00ed n A\ni=i\tj=i\tj\n(A.24)\n(A.25)\nA partir da matriz de rota\u00e7\u00e3o Re e do vetor de posi\u00e7\u00e3o pe da equa\u00e7\u00e3o A.25, extraem-se os erros de postura.\nTal solu\u00e7\u00e3o prova-se efetiva mesmo com m\u00e9todos de integra\u00e7\u00e3o num\u00e9rica simples como o m\u00e9todo de Euler. Dado um intervalo At, e conhecidas as velocidades do instante tk-1, as posi\u00e7\u00f5es nas juntas podem ser calculadas por\nqs (tk) = qs (tk-i) - ns 1 (tk-1) (Np (tk-1) q. - Ne (tfc_i) Keqe) At\n(A.26) Apesar de apresentar estabilidade assint\u00f3tica, pode-se desejar minimizar o erro ao longo de toda a trajet\u00f3ria. Para tanto, pode-se empregar um la\u00e7o secund\u00e1rio no processo de integra\u00e7\u00e3o, no qual se mant\u00e9m constante a posi\u00e7\u00e3o das juntas prim\u00e1rias. Neste la\u00e7o, as itera\u00e7\u00f5es ocorrem at\u00e9 o erro se encontrar em uma toler\u00e2ncia admiss\u00edvel (Simas et al., 2009). Como qp = 0, a Equa\u00e7\u00e3o A.21 se reduz a\n224\nAP\u00caNDICE B - Implementa\u00e7\u00e3o e Uso do Framework KAST\nEste ap\u00eandice trata da implementa\u00e7\u00e3o do framework Kast (Kinematic Analysis by Screw Theory). Inicia-se pela escolha da plataforma computacional usada para seu desenvolvimento e uso posterior. A seguir, descreve-se o conjunto de ferramentas computacionais empregadas na plataforma adotada (Python) e software de apoio utilizado. S\u00e3o discutidos aspectos de implementa\u00e7\u00e3o do Kast. Um exemplo de uso do framework \u00e9 ent\u00e3o apresentado para ilustrar seu uso e possibilidades de extens\u00e3o.\nB.1 ESCOLHA DE UMA PLATAFORMA COMPUTACIONAL\nA escolha da plataforma computacional a ser usada para a implementa\u00e7\u00e3o do framework foi feita logo ap\u00f3s a defini\u00e7\u00e3o dos seus requisitos de projeto (Rocha; Tonetto; Dias, 2011a). Ela foi realizada em paralelo ao processo de projeto, tendo algumas revis\u00f5es em fun\u00e7\u00e3o de necessidades detectadas ao longo do projeto. Observou-se que a ado\u00e7\u00e3o de uma plataforma orientada a objetos seria interessante para o mapeamento direto entre as entidades projetadas e a sua codifica\u00e7\u00e3o. Por\u00e9m, procurou-se manter a neutralidade na escolha de um conjunto representativo de ferramentas computacionais que s\u00e3o de fato empregadas para an\u00e1lise, simula\u00e7\u00e3o e implementa\u00e7\u00e3o em rob\u00f3tica.\nB.1.1 Requisitos Para a Plataforma\nOs requisitos de escolha da plataforma computacional basearam-se nos requisitos do projeto do framework Kast. A plataforma deveria suportar os requisitos de modularidade e extensibilidade dos componentes do framework tanto para o seu desenvolvimento quanto para o seu uso. A plataforma tamb\u00e9m deveria ter possibilidade de se trabalhar no modo interativo (com uma interface de comandos/gr\u00e1fica para o usu\u00e1rio) e tamb\u00e9m de desenvolvimento de aplica\u00e7\u00f5es que executassem autonomamente (standalone em ingl\u00eas). Assim, seria poss\u00edvel trabalhar tanto em an\u00e1lise de cadeias cinem\u00e1ticas quanto em simula\u00e7\u00f5es (usando o modo interativo) e em software a ser embarcado em sistemas reais (como aplica\u00e7\u00e3o standalone). Uma vez que o projeto utilizou o paradigma da orienta\u00e7\u00e3o a objetos, um requisito desej\u00e1vel para a plataforma seria o suporte \u00e0 programa\u00e7\u00e3o orientada a objetos.\nOutros requisitos foram identificados pelas particularidades da implementa\u00e7\u00e3o das features descritas para o framework. A exist\u00eancia\nde bibliotecas para manipula\u00e7\u00e3o matem\u00e1tica num\u00e9rica de matrizes e \u00e1lgebra linear foi um deles. O suporte a grafos e algoritmos para a an\u00e1lise destes foi outro requisito essencial. Para lidar com descri\u00e7\u00f5es textuais de cadeias cinem\u00e1ticas e outras estruturas de dados necess\u00e1rias, era necess\u00e1rio ter bibliotecas que gerenciassem e manipulassem diferentes tipos de dados estruturados, com destaque para o XML, que foi o tipo textual adotado para as descri\u00e7\u00f5es de cadeias. A quest\u00e3o de poder lidar com v\u00ednculos din\u00e2micos de diferentes componentes de software tamb\u00e9m era importante, para possibilitar a flexibilidade de uso dos componentes e a modificabilidade das cadeias cinem\u00e1ticas em tempo de execu\u00e7\u00e3o.\nComo requisitos desej\u00e1veis para implementa\u00e7\u00e3o do Kast estavam a disponibilidade em diferentes sistemas operacionais e dispositivos computacionais e o licenciamento como software livre/aberto. Desejava-se que o framework fosse pass\u00edvel de uso no maior n\u00famero de plataformas de hardware/software utilizadas em simula\u00e7\u00f5es e casos reais e que fosse disponibilizado como software livre. Para isso, era importante que a plataforma fosse acess\u00edvel (tanto em custo quanto em uso), com uma boa base de conhecimento dispon\u00edvel em literatura/In-ternet, e que possibilitasse o licenciamento de software nela desenvolvido como software livre.\nO suporte a gr\u00e1ficos 2D/3D, anima\u00e7\u00f5es, armazenamento de imagens e v\u00eddeos e capacidade de troca de informa\u00e7\u00f5es com outros software eram tamb\u00e9m requisitos desej\u00e1veis para a plataforma, a fim de complementar o uso do framework com recursos usualmente necess\u00e1rios em simula\u00e7\u00f5es e implementa\u00e7\u00f5es de sistemas reais.\nB.1.2 Plataformas Avaliadas\nApesar de existirem v\u00e1rias plataformas computacionais em uso para simula\u00e7\u00e3o e implementa\u00e7\u00e3o em engenharia, a escolha da plataforma de desenvolvimento do framework se deu em um conjunto de seis delas. O conjunto incluia os software comumente empregados nos Laborat\u00f3rios de CAD/CAM e de Rob\u00f3tica da Universidade Federal de Santa Catarina, que atendiam boa parte dos requisitos. Al\u00e9m disso, foram consideradas caracter\u00edsticas como maturidade, exist\u00eancia de su-porte/documenta\u00e7\u00e3o, base de usu\u00e1rios das plataformas e sua colabora\u00e7\u00e3o. Por fim, o conjunto contemplava os software com os quais o desenvolvedor do framework teve experi\u00eancias de uso.\nO conjunto consistia de tr\u00eas ambientes de computa\u00e7\u00e3o num\u00e9-\nrica e tr\u00eas plataformas de desenvolvimento de software. Os ambientes de computa\u00e7\u00e3o num\u00e9rica em quest\u00e3o foram o Matlab\u00ae (Mathworks, 2011), o Scilab (Digiteo, 2011) e o Octave (Eaton, 2011). As plataformas de desenvolvimento eram as das linguagens de programa\u00e7\u00e3o C/C++ (Stroustrup, 2011), Java (Oracle, 2011) e Python (Python.org, 2011). As Tabelas 8 e 9 relacionam as plataformas e identificam o grau de atendimento aos requisitos.\nTabela 8. Ambientes de computa\u00e7\u00e3o num\u00e9rica avaliados para a implementa\u00e7\u00e3o do framework Kast\nPlataforma\tMatlab*\u00ae\tScilab\tOctave\nMatrizes e \u00e1lgebra linear\tSim\tSim\tSim\nGrafos\tSim\tSim\tSim\nGr\u00e1ficos 2D/3D\tSim\tSim\tSim\nAnima\u00e7\u00e3o\tSim\tSim\tSim\nExtens\u00edvel\tSim\tSim\tSim\nOrientada a objetos\tN\u00e3o\tN\u00e3o\tN\u00e3o\nAmbiente interativo\tSim\tSim\tSim\nAplica\u00e7\u00f5es autossuficientes\tMCR1\tN\u00e3o\tN\u00e3o\nInterface com aplica\u00e7\u00f5es\tSim\tSim\tSim\nEmbarc\u00e1vel\tSim\tN\u00e3o\tN\u00e3o\nTipo\tComercial\tSoftware Livre\tSoftware Livre\nDentre as op\u00e7\u00f5es do conjunto de plataformas, foi escolhido o Python. Embora todas atendessem os requisitos essenciais e boa parte dos desej\u00e1veis (exceto a quest\u00e3o da orienta\u00e7\u00e3o a objetos), observou-se que o Python era o \u00fanico que reunia caracter\u00edsticas tanto de ambiente de computa\u00e7\u00e3o num\u00e9rica/simb\u00f3lica quando de plataforma de desenvolvimento. A possibilidade de criar software de execu\u00e7\u00e3o standalone em v\u00e1rias plataformas \u00e9 um diferencial em rela\u00e7\u00e3o aos outros ambientes de computa\u00e7\u00e3o num\u00e9rica. A intera\u00e7\u00e3o com usu\u00e1rio t\u00edpica desses ambientes, por outro lado, \u00e9 o diferencial do Python em rela\u00e7\u00e3o \u00e0s demais plataformas de desenvolvimento.\nAl\u00e9m disso, verificou-se a possibilidade de Python empregar bibliotecas de c\u00f3digos desenvolvidas em outras linguagens de programa\u00e7\u00e3o e mesmo de fazer interface com ambientes de computa\u00e7\u00e3o num\u00e9rica (Python.org, 2011). Outros softwares tamb\u00e9m utilizam o Python como interface com terceiros, o que amplia o potencial de uso da plataforma (Diankov, 2010).\nTabela 9. Plataformas de desenvolvimento de software avaliadas para a implementa\u00e7\u00e3o do framework Kast\nPlataforma\tC/C++\tJava\tPython\nMatrizes e \u00e1lgebra linear\tSim\tSim\tSim\nGrafos\tSim\tSim\tSim\nGr\u00e1ficos 2D/3D\tSim\tSim\tSim\nAnima\u00e7\u00e3o\tSim\tSim\tSim\nExtens\u00edvel\tSim\tSim\tSim\nOrientada a objetos\tSim\tSim\tSim\nAmbiente interativo\tN\u00e3o\tN\u00e3o\tSim\nAplica\u00e7\u00f5es autossuficientes\tSim\tJRE2\tSim\nInterface com aplica\u00e7\u00f5es\tSim\tSim\tSim\nEmbarc\u00e1vel\tSim\tSim\tSim\nTipo\tSoftware\tSoftware\tSoftware\n\tLivre\tLivre\tLivre\nB.2 PYTHON COMO PLATAFORMA DE DESENVOLVIMENTO\nPython \u00e9 uma linguagem de programa\u00e7\u00e3o de alto n\u00edvel de uso geral. Criada por Guido van Rossum para fins cient\u00edficos na d\u00e9cada de 1990, a linguagem se popularizou entre os desenvolvedores de software livre e de sistemas web. A linguagem, por\u00e9m, tamb\u00e9m tem um forte nicho de aplica\u00e7\u00f5es no meio acad\u00eamico e cient\u00edfico. Python \u00e9 orientada a objetos, com caracter\u00edsticas de programa\u00e7\u00e3o din\u00e2mica. Al\u00e9m disso, tem acesso a muitas bibliotecas de software j\u00e1 existentes e sistemas operacionais, podendo ser estendida atrav\u00e9s de m\u00f3dulos constru\u00eddos em C/C++ (Python.org, 2011).\nAs funcionalidades de Python s\u00e3o organizadas em m\u00f3dulos. Esses podem consistir de interfaces para bibliotecas pr\u00e9-existentes criadas em C/C++, Fortran ou outra linguagem que gere c\u00f3digos bin\u00e1rios, serem implementa\u00e7\u00f5es completas em Python ou consistirem de interface de integra\u00e7\u00e3o com outros tipos de linguagens/ambientes como Java e .Net. A biblioteca padr\u00e3o que est\u00e1 embutida no interpretador Python cont\u00e9m muitas funcionalidades que dispensam o uso de outros m\u00f3dulos para aplica\u00e7\u00f5es simples. Dependendo da finalidade da aplica\u00e7\u00e3o, m\u00f3dulos podem ser importados para disponibilizar classes, estruturas de dados e fun\u00e7\u00f5es espec\u00edficas. Por fim, Python \u00e9 dispon\u00edvel como software livre, assim como a maioria de seus m\u00f3dulos (Borges, 2010).\nA vers\u00e3o de Python utilizada no desenvolvimento do Kast, seus\ntestes e uso em simula\u00e7\u00f5es foi a 2.7, executando em sistemas operacionais Linux (Mandriva 2010.2 e Kubuntu 11.04). A plataforma de desenvolvimento completa (Python com biblioteca padr\u00e3o e demais m\u00f3dulos) foram instalados a partir de pacotes dessas distribui\u00e7\u00f5es Linux. Os c\u00f3digos desenvolvidos foram tamb\u00e9m executados, sem modifica\u00e7\u00f5es, em um sistema operacional Windows Vista com uma distribui\u00e7\u00e3o Python chamada Python(X,Y), voltada para fins cient\u00edficos (Raybaut, 2011).\nB.2.1 M\u00f3dulos/Bibliotecas Empregados\nAl\u00e9m da biblioteca padr\u00e3o do Python, outros m\u00f3dulos se tornaram necess\u00e1rios para lidar com matrizes, \u00e1lgebra linear, grafos e XML. Para cada uma dessas demandas, foram identificados mais de um m\u00f3dulo existente. A escolha dos m\u00f3dulos utilizados no framework se deu pela an\u00e1lise comparativa das funcionalidades existentes em cada m\u00f3dulo, de sua manuten\u00e7\u00e3o/n\u00edvel de atividade, exist\u00eancia de documenta\u00e7\u00e3o de suporte, de recomenda\u00e7\u00f5es de usu\u00e1rios de diferentes plataformas e da facilidade de uso, comprovada pela execu\u00e7\u00e3o de exemplos.\nPara representa\u00e7\u00e3o de matrizes, seus comportamentos e a\u00e7\u00f5es, bem como m\u00e9todos de \u00e1lgebra linear, foi adotado o Numpy, parte de um projeto mais abrangente de computa\u00e7\u00e3o cient\u00edfica para Python denominado Scipy. O Numpy \u00e9 a base de outros m\u00f3dulos matem\u00e1ticos para Python, com capacidade de representa\u00e7\u00e3o de matrizes, vetores e fun\u00e7\u00f5es de \u00e1lgebra linear, manipula\u00e7\u00e3o de polinomios, curvas, transforma\u00e7\u00f5es de Fourier, entre outros (Numpy, 2011; Scipy, 2011).\nO NetworkX foi o m\u00f3dulo utilizado para a cria\u00e7\u00e3o e manipula\u00e7\u00e3o de grafos. Esse m\u00f3dulo tem classes para representa\u00e7\u00e3o de grafos, onde seus n\u00f3s e arestas podem conter quaisquer estruturas de dados/objetos. O conjunto de de algoritmos de an\u00e1lise implementados nesse m\u00f3dulo facilitam o estudo dos grafos. De forma complementar, existem ainda facilidades para desenho autom\u00e1tico dos grafos (NetworkX, 2011).\nA constru\u00e7\u00e3o de classes de gerenciamento de descri\u00e7\u00f5es de cadeias cinem\u00e1ticas e outros dados de simula\u00e7\u00e3o demandava o desenvolvimento de analisadores de formatos de dados textuais. Os formatos escolhidos foram o XML e o CSV, por serem comuns em diferentes campos de conhecimento, aceitos por planilhas eletr\u00f4nicas e outros software de processamento cient\u00edfico. O formato CSV, al\u00e9m de f\u00e1cil compreens\u00e3o, \u00e9 gerenciado pelo m\u00f3dulo Numpy. Para o XML, foi utilizado o m\u00f3dulo ElementTree, que trata os dados organizados hierarquicamente em um arquivo XML como uma \u00e1rvore (Lundh, 2011).\nApesar de n\u00e3o ter sido usado diretamente na implementa\u00e7\u00e3o do framework, o m\u00f3dulo matplotlib auxiliou os testes dos diferentes componentes atrav\u00e9s da visualiza\u00e7\u00e3o dos resultados gerados. Ele fornece um conjunto de funcionalidades para tra\u00e7ados de gr\u00e1ficos 2D e 3D bastante sofisticado, com uma op\u00e7\u00e3o de uso que permite emular o comportamento de bibliotecas similares em sistemas de computa\u00e7\u00e3o num\u00e9rica como o MATLAB (Hunter; Dale; Droettboom, 2011).\nB.2.2 Software de Apoio\nAl\u00e9m do Python e seus m\u00f3dulos, outras ferramentas foram utilizadas nas simula\u00e7\u00f5es que foram implementadas com o Kast. O Maxima foi utilizado para auxiliar na obten\u00e7\u00e3o das express\u00f5es dos heligiros das cadeias cinem\u00e1ticas, enquanto o OpenRAVE foi utilizado para gerar a anima\u00e7\u00e3o de modelos 3D dos cen\u00e1rios simulados.\nO Maxima \u00e9 um sistema de computa\u00e7\u00e3o alg\u00e9brica (ou CAS, do ingl\u00eas Computer Algebra System) para manipula\u00e7\u00e3o de express\u00f5es num\u00e9ricas e simb\u00f3licas, distribuido como software livre para diferentes sistemas operacionais. \u00c9 um sistema robusto e maduro, cujo desenvolvimento vem da d\u00e9cada de 1960 (Beshenov, 2011). Esse CAS foi empregado para definir os modelos de cadeias cinem\u00e1ticas simples e sua composi\u00e7\u00e3o. Para tanto, foram desenvolvidas fun\u00e7\u00f5es na linguagem do Maxima que calculavam matrizes de transforma\u00e7\u00e3o homog\u00eanea, transforma\u00e7\u00f5es de helicoides e predefini\u00e7\u00f5es de cadeias simples como a PPR e a RRR. Os recursos de simplifica\u00e7\u00e3o alg\u00e9brica e trigonom\u00e9trica do Maxima permitiram agilizar as defini\u00e7\u00f5es das cadeias, bem como a escolher modos de implementar uma vers\u00e3o otimizada para o caso do sistema de UVMS com um manipulador planar, que \u00e9 descrito na pr\u00f3xima se\u00e7\u00e3o.\nO OpenRAVE \u00e9 um simulador de sistemas rob\u00f3ticos que prov\u00ea um ambiente para teste, desenvolvimento e aplica\u00e7\u00e3o de algoritmos de planejamento de movimento. Ele pode ser usado tanto para simula\u00e7\u00e3o quanto como interface com sistemas rob\u00f3ticos reais. Embora seu foco prim\u00e1rio seja a cinem\u00e1tica e modelagem geom\u00e9trica, ele possui capacidades de representar a din\u00e2mica de sistemas e simular diferentes tipos de sensores. Ele faz interface com ambientes de computa\u00e7\u00e3o num\u00e9rica como Matlab e Octave, al\u00e9m de ter um m\u00f3dulo Python que permite seu acesso dentro de aplica\u00e7\u00f5es escritas nessa linguagem (Diankov, 2010). Nas simula\u00e7\u00f5es realizadas, o OpenRAVE foi empregado para visualizar um ambiente virtual de execu\u00e7\u00e3o de tarefas que era animado a par\ntir dos dados resultantes das execu\u00e7\u00f5es das simula\u00e7\u00f5es. Os recursos de gera\u00e7\u00e3o de v\u00eddeos em diferentes formatos e de imagens est\u00e1ticas do ambiente virtual facilitou a apresenta\u00e7\u00e3o de resultados e sua an\u00e1lise.\nB.3 ASPECTOS DA IMPLEMENTA\u00c7\u00c3O DO FRAMEWORK KAST\nA ado\u00e7\u00e3o do Python como plataforma de desenvolvimento imp\u00f4s algumas mudan\u00e7as na implementa\u00e7\u00e3o do framework em rela\u00e7\u00e3o \u00e0 sua modelagem. Embora n\u00e3o tenha sido feita nenhuma modifica\u00e7\u00e3o das especifica\u00e7\u00f5es de m\u00e9todos e classes, as suas assinaturas sofreram algumas mudan\u00e7as em fun\u00e7\u00e3o das caracter\u00edsticas da linguagem, como suporte a sobrecarga de operadores, possibilidade de incorpora\u00e7\u00e3o de objetos \u00e0 estruturas de controle da linguagem e a exist\u00eancia de propriedades. A manipula\u00e7\u00e3o nativa de conjuntos de dados tamb\u00e9m acrescentou facilidades de implementa\u00e7\u00e3o, por\u00e9m implicando em pequenas modifica\u00e7\u00f5es nas estruturas de dados originalmente propostas. Al\u00e9m disso, o fato de lidar com tipos de dados din\u00e2micos permitiu agrupar m\u00e9todos que realizavam opera\u00e7\u00f5es similares sobre tipos de dados diferentes.\nUma vez que o projeto foi baseado no paradigma da orienta\u00e7\u00e3o a objetos, procurou-se adotar as suas boas pr\u00e1ticas, como o uso de padr\u00f5es de projeto comentado no Cap\u00edtulo 5. Para isso, foram criadas classes base para implementa\u00e7\u00e3o do padr\u00e3o observer, onde objetos podem receber notifica\u00e7\u00f5es de modifica\u00e7\u00f5es feitas em outros objetos. Essas s\u00e3o as classes Event (de representa\u00e7\u00e3o de eventos), Listener e Subject (representando objetos observadores e objetos observados, respectivamente). V\u00e1rias classes s\u00e3o derivadas de Listener, como as cadeias cinem\u00e1ticas e helicoides. As listas de atributos e conjuntos de vari\u00e1veis de juntas s\u00e3o derivadas de Subject, notificando aos seus usu\u00e1rios (as cadeias cinem\u00e1ticas, por exemplo) quando algum dos seus dados tem seu valor modificado.\nOutros padr\u00f5es de projeto como o composite, para defini\u00e7\u00e3o de cadeias cinem\u00e1ticas, utilizaram a caracter\u00edstica de heran\u00e7a inerente \u00e0 orienta\u00e7\u00e3o a objetos, como a hierarquia de classes de componentes cinem\u00e1ticos (derivadas de KCComponent, como Screw e KinematicChain). O padr\u00e3o factory method foi implementado nos analisadores de descri\u00e7\u00f5es XML para cria\u00e7\u00e3o de objetos, como KCFactory e TrajFactory.\nApesar de uma an\u00e1lise do Kast ser bastante extensa, alguns pontos importantes para o seu uso b\u00e1sico s\u00e3o apresentados a seguir. Maiores detalhes s\u00e3o obtidos na leitura do c\u00f3digo dos componentes de Kast e de seus exemplos, que s\u00e3o disponibilizados como software livre.\nB.3.1 Utiliza\u00e7\u00e3o das Facilidades da Plataforma\nA implementa\u00e7\u00e3o das classes de Kast foi bastante facilitada pela utiliza\u00e7\u00e3o das estruturas de dados nativas do Python e de seus m\u00f3dulos de componentes adicionais. Listas, tuplas e dicion\u00e1rios s\u00e3o estruturas de dados nativas que foram extensamente usadas. As duas primeiras armazenam dados em conjuntos que podem ser acessados por sua posi\u00e7\u00e3o. O \u00faltimo vincula chaves aos dados, que s\u00e3o valores usados como refer\u00eancia para o acesso a eles.\nO m\u00f3dulo Numpy forneceu modos de lidar com matrizes atrav\u00e9s da classe array. Al\u00e9m de representar a estrutura de dados da matriz, essa classe permite realizar diferentes opera\u00e7\u00f5es aritm\u00e9ticas al\u00e9m de ter m\u00e9todos espec\u00edficos para tratar de matrizes num\u00e9ricas e \u00e1lgebra linear. Uma caracter\u00edstica dos arrays que foi muito empregada para compartilhamento de dados entre diferentes objetos foi o slicing, t\u00e9cnica que permite criar vis\u00f5es de se\u00e7\u00f5es retangulares de uma matriz que podem ser compartilhadas. Diferente de c\u00f3pias, uma vis\u00e3o \u00e9 uma refer\u00eancia ao conjunto de dados original, de forma que a modifica\u00e7\u00e3o nos elementos da vis\u00e3o \u00e9 percept\u00edvel no array original.\nA partir dessas classes, foram implementadas diversos componentes das classes principais relacionadas \u00e0s cadeias cinem\u00e1ticas, como AttributeList, State e StateList.\nA classe AttributeList armazena atributos da cadeia cinem\u00e1tica em uma lista acessada por um identificador textual (o nome do atributo). Ela \u00e9 utilizada nos componentes cinem\u00e1ticos (derivadas de KC-Component como helicoides, juntas e cadeias cinem\u00e1ticas) para relacionar comprimentos de elos e outros dados que n\u00e3o costumam se modificar durante a execu\u00e7\u00e3o de uma tarefa. Na sua implementa\u00e7\u00e3o foram utilizados dicion\u00e1rios e listas.\nState \u00e9 a classe que trata das vari\u00e1veis de juntas com seus valores de posi\u00e7\u00e3o, velocidade e acelera\u00e7\u00e3o. Para facilitar o acesso aos dados, foram utilizados dicion\u00e1rios com nomes das vari\u00e1veis das juntas juntamente com arrays que armazenam os seus valores. Assim, criou-se um tipo de dados matricial cujos elementos podem ser acessados tanto por posi\u00e7\u00e3o quanto por seu nome. O fato de utilizar arrays permite trabalhar tamb\u00e9m com slices que podem ser tanto horizontais (todos os dados de uma vari\u00e1vel de junta: posi\u00e7\u00e3o, velocidade e acelera\u00e7\u00e3o) quanto verticais (todas as posi\u00e7\u00f5es, por exemplo). Al\u00e9m disso, \u00e9 poss\u00edvel trabalhar com blocos retangulares de dados, que podem ser compartilhados entre objetos. StateList nada mais \u00e9 do que uma lista para gerenciamento de objetos State.\nEssas classes foram projetadas para serem compartilhadas entre componentes cinem\u00e1ticos, uma vez que \u00e9 comum que eles sejam calculados a partir de um mesmo conjunto de vari\u00e1veis e atributos. Tanto helicoides de forma isolada quanto cadeias cinem\u00e1ticas que s\u00e3o compostas por juntas precisam acessar dados em comum, o que \u00e9 facilitado pelas implementa\u00e7\u00f5es feitas em Kast.\nAl\u00e9m desses dados, todo componente cinem\u00e1tico ainda precisa ter uma matriz que armazena os valores num\u00e9ricos dos componentes dos helicoides (_num). No caso de cadeias fechadas derivadas de Kine-maticChain ainda existe uma matriz de rede (_netmatrix). Essas matrizes s\u00e3o todas inst\u00e2ncias de arrays numpy, bem como outras estruturas num\u00e9ricas auxiliares.\nOs atributos de particionamento e sistema de helicoides s\u00e3o definidos por listas. No caso do particionamento, a defini\u00e7\u00e3o de seu atributo na cria\u00e7\u00e3o de um componente cinem\u00e1tico \u00e9 dada por uma lista ou tupla que indica quem \u00e9 vari\u00e1vel prim\u00e1ria (1) ou secund\u00e1ria (0). Os sistemas de helicoides s\u00e3o definidos de forma similar, indicando com valores num\u00e9ricos (1) quais componentes translacionais e rotativos de um helicoide que devem ser calculados.\nPor fim, as caracter\u00edsticas de uma linguagem orientada a objetos din\u00e2mica do Python simplificaram v\u00e1rias interfaces de m\u00e9todos nas implementa\u00e7\u00f5es. O conceito de getters e setters permitiu definir propriedades \u00e0s classes, que se comportam externamente como atributos mas cujos dados s\u00e3o geridos por m\u00e9todos. A sobrecarga de operadores evitou a cria\u00e7\u00e3o de novos m\u00e9todos para realizar opera\u00e7\u00f5es comuns na linguagem, como compara\u00e7\u00f5es, opera\u00e7\u00f5es aritm\u00e9ticas e de atribui\u00e7\u00e3o. Por fim, o fato de ter identifica\u00e7\u00e3o din\u00e2mica facilitou criar m\u00e9todos que podiam lidar com diferentes tipos de dados para um mesmo fim, como no caso da defini\u00e7\u00e3o dos componentes de helicoides.\nEssas facilidades s\u00e3o nativas de Python, e sugere-se um estudo geral de suas caracter\u00edsticas ao leitor interessado em estender as funcionalidades do framework Kast. Borges (2010) apresenta uma vis\u00e3o geral de v\u00e1rias caracter\u00edsticas da linguagem. O uso de Numpy para engenharia \u00e9 abordado em (Langtangen, 2009).\nB.3.2 Especializando Cadeias Cinem\u00e1ticas\nA especializa\u00e7\u00e3o de cadeias cinem\u00e1ticas consiste na cria\u00e7\u00e3o de classes derivadas de KinematicChain a fim de se desenvolver o c\u00e1lculo completo dos heligiros da cadeia cinem\u00e1tica e preenchimento da sua\nmatriz de rede. Obviamente, quaisquer outros m\u00e9todos podem ser reimplementados, se assim desejado.\nA vantagem de se especializar \u00e9 a otimiza\u00e7\u00e3o do c\u00e1lculo dos valores num\u00e9ricos da matriz de rede, o que em uma classe generalizada como KCComposable normalmente n\u00e3o \u00e9 poss\u00edvel. Outra caracter\u00edstica dessa especializa\u00e7\u00e3o \u00e9 a limita\u00e7\u00e3o das possibilidades de modifica\u00e7\u00e3o da cadeia. Isso, por\u00e9m, pode se tornar uma desvantagem para situa\u00e7\u00f5es onde a reconfigura\u00e7\u00e3o pode ser importante para a execu\u00e7\u00e3o de tarefas. Al\u00e9m disso, exige o conhecimento pr\u00e9vio do modelo cinem\u00e1tico completo do sistema, ao passo que uma inst\u00e2ncia de KCComposable pode ser definida em um processo interativo.\nA implementa\u00e7\u00e3o b\u00e1sica de uma classe especializada consiste na defini\u00e7\u00e3o do construtor da classe (_init__) e do m\u00e9todo _update,\nque \u00e9 invocado para calcular a matriz de rede.\nNa inicializa\u00e7\u00e3o, devem ser definidos o n\u00famero de circuitos independentes (_lQte), a quantidade de heligiros (_sQte), os atributos como comprimento de elos (_attr, inst\u00e2ncia de AttributeList) e as vari\u00e1veis de juntas (_q, inst\u00e2ncia de State). Em rela\u00e7\u00e3o a estas vari\u00e1veis, \u00e9 importante observar a ordem de defini\u00e7\u00e3o dos nomes dos heligiros, pois esta ordem \u00e9 obedecida nos demais elementos da classe, como _num (a matriz dos heligiros) e _netmatrix (a matriz de rede).\nO m\u00e9todo _update deve utilizar os atributos e vari\u00e1veis de juntas para calcular os valores num\u00e9ricos dos heligiros, armazenando-os em _-num. Ap\u00f3s, esses valores s\u00e3o copiados para _netmatrix multiplicados por 1, -1 ou 0, de acordo com a rela\u00e7\u00e3o deste heligiro com o circuito da matriz de rede sendo preenchido. A Listagem 1 ilustra a implementa\u00e7\u00e3o desse m\u00e9todo para o UVMS planar descrito na Se\u00e7\u00e3o C.3.1.\nB.3.3 A Classe KCComposable\nPara se ter uma implementa\u00e7\u00e3o funcional de representa\u00e7\u00e3o de cadeias cinem\u00e1ticas, foi criada a classe KCComposable. Derivada de Ki-nematicChain, ela utiliza as facilidades do m\u00f3dulo NetworkX de Python para gerenciar grafos de movimento das cadeias modeladas. Atrav\u00e9s de um objeto d\u00edgrafo s\u00e3o relacionados elos e juntas da cadeia. Essa implementa\u00e7\u00e3o \u00e9 a mais geral poss\u00edvel, pois a cadeia \u00e9 dinamicamente montada e pass\u00edvel de modifica\u00e7\u00f5es na sua estrutura.\nUm objeto KCComposable deve ser inicialmente instanciado de acordo com a interface definida em KinematicChain e a seguir sua estrutura cinem\u00e1tica deve ser definida pela adi\u00e7\u00e3o de elos e juntas. Os\nelos s\u00e3o objetos da classe Link, que podem conter atributos como comprimento do elo e posi\u00e7\u00f5es onde as juntas se conectam. Juntas s\u00e3o inst\u00e2ncias de Joint, classe derivada de Screw que se comporta como um heligiro, onde s\u00e3o definidos um helicoide normalizado e uma magnitude.\nListagem 1. Implementa\u00e7\u00e3o de _update\ndef _update ( s e l f ):\nif self . _updateLevel > Defs . Refresh :\nself. _num. fill (0.0)\nself. _num [ 0 , 2 ] =\ts e l f . _num [0 ,3 ] =\tself\t. _num [0,4]=\t1.0\nself. _num [ 0 ,5 ] =\ts e l f . _num [0 ,8 ] =\tself\t. _num [1,0]=\t1.0\nself. _num [ 2 , 1 ] =\ts e l f . _num [1 ,6 ] =\tself\t. _num [2,7]=\t1.0\nself. _num[ 1 ,3]= self._attr[ 'xvm \u2019 ] * \\\nsin (self._q[ \u2019qv3\u2019 ,0])\nself. _num[2,3]= \u2014 self._attr[ 'xvm \u2019 ] * \\\ncos(self._q[ \u2019qv3\u2019 ,\t0])\nang= self. _q[ \u2019 qv3 \u2019 ,0]+ self . _q[ \u2019qm1 \u2019 ,0] self. _num [1,4]= self. _num [1 , 3 ] + \\\nself._attr[ \u2019 lm1 \u2019 ] * sin ( ang)\nself ._num[2 ,4]= self ._num[2 ,3] \u2014 \\\nself . _ attr [ \u2019 lm1 \u2019 ] * cos( ang)\nang+= self._q[ \u2019 qm2 \u2019 , 0 ]\nself. _num [1,5]= self. _num [1 , 4 ] + \\ self._attr[ \u2019lm2\u2019] * sin (ang)\nself ._num[2 ,5] = self ._num[2 ,4] \u2014 \\\nself . _attr [ \u2019lm2 \u2019] * cos( ang)\nang+= self._q[ \u2019qm3 \u2019 ,0 ] self._num[1, 8]= s e l f ._num[1 , 5]+ \\ self._attr[ \u2019lm3\u2019] * sin (ang)\nself._num[2, 8]= s e l f ._num[2 , 5] \u2014 self._attr[ \u2019lm3\u2019] * cos( ang)\nself. _netmatrix[:,0:6] = self. _num [: ,0:6]\nself. _netmatrix[:,6:9] = \u2014 self. _num [: ,6:9]\nself . notify (KinematicChain. updated)\nself . _updateLevel = Defs .OK\nElos s\u00e3o adicionados pelos m\u00e9todos addLink e addLinks, que al\u00e9m do elo ainda pode ter definidos atributos l\u00f3gicos para indicar se um elo \u00e9 a base da cadeia ou um efetuador final. Juntas s\u00e3o adicionadas pelos m\u00e9todos addJoint e addJoints, e al\u00e9m da junta deve se especificar o par de elos que est\u00e3o sendo conectados por ela. Essa conex\u00e3o \u00e9\ndirigida, do primeiro para o segundo elo especificado, a fim de se gerar posteriormente a matriz de rede da cadeia cinem\u00e1tica fechada.\nComo \u00e9 derivada de Screw, as juntas tem seus heligiros normalizados definidos pelo atributo components. Este pode ser uma lista de componentes ou uma fun\u00e7\u00e3o que calcule todos os componentes do he-licoide. As listas podem conter constantes ou refer\u00eancias a fun\u00e7\u00f5es que calculem um componente. As refer\u00eancias de fun\u00e7\u00f5es, sejam para a lista ou para o helicoide completo, podem ser fun\u00e7\u00f5es normais, membros de classes ou fun\u00e7\u00f5es lambda (tipo de fun\u00e7\u00e3o Python que \u00e9 embutida no c\u00f3digo em que \u00e9 invocada).\nUma vez que os elos e juntas s\u00e3o instanciados separadamente, \u00e9 poss\u00edvel que n\u00e3o compartilhem atributos e vari\u00e1veis de juntas, o que \u00e9 fundamental para o correto c\u00e1lculo da equa\u00e7\u00e3o de restri\u00e7\u00e3o. Assim, o m\u00e9todo pack deve ser invocado quando uma cadeia KCComposable for completada. Esse m\u00e9todo gera novas listas de atributos e vari\u00e1veis reunindo todas as diferentes defini\u00e7\u00f5es de dados em um conjunto e compartilhando com todos os componentes da cadeia cinem\u00e1tica.\nA Listagem 2 cont\u00e9m um trecho de c\u00f3digo que demonstra como representar uma cadeia utilizando KCComposable. Observa-se que embora o processo de montagem pare\u00e7a trabalhoso, ele pode ser facilitado por uma interface gr\u00e1fica com o usu\u00e1rio que gere esse c\u00f3digo \u00e0 medida que o usu\u00e1rio interaja com o software. Por outro lado, \u00e9 poss\u00edvel criar uma fun\u00e7\u00e3o que instancie toda a classe para que possa ser reutilizada em diversas simula\u00e7\u00f5es.\nB.3.4 Descrevendo cadeias cinem\u00e1ticas\nPara facilitar a descri\u00e7\u00e3o de cadeias cinem\u00e1ticas e simplificar o seu reuso em implementa\u00e7\u00f5es computacionais, foi definido um dialeto XML para a sua representa\u00e7\u00e3o. A vers\u00e3o atual descreve como instancias de KComposable s\u00e3o compostas. Por\u00e9m, \u00e9 poss\u00edvel expandir o dialeto para novas classes derivadas de KinematicChain \u00e0 medida em que elas forem projetadas.\nA classe KCFactory foi desenvolvida para gerar objetos derivados de KinematicChain de acordo com descri\u00e7\u00f5es fornecidas a ele, implementando o padr\u00e3o de projeto factory method. Este corresponde ao m\u00e9todo kcFrom, que a partir de um arquivo XML gera o objeto correspondente. O processamento do arquivo XML \u00e9 feito atrav\u00e9s do uso dos componentes do m\u00f3dulo ElementTree de Python, que permite percorrer uma \u00e1rvore de defini\u00e7\u00f5es criada a partir do XML e acessar seu conte\u00fado.\n#\tFuncoes de calculo dos valores dos h eli c o i d es def h_m2( s ) :\ns . _num [ 0 ,\t0 ] = 1.0\ns._num[1, 0] = s . _ attr [ 'x_vm \u2019 ] * sin (s . q (\u2019q_v3 \u2019 )) +\\ s . _attr [ \u2019l_m1 \u2019 ] * sin ( s . q( \u2019q_v3 \u2019 ) + s . q ( \u2019q_m1\u2019 ))\ns . _num[ 2 , 0] = \u2014 s . _ attr [ 'x_vm \u2019 ] * cos(s.q( \u2019q_v3 \u2019 )) \u2014 \\ s . _attr [ \u2019l_m1 \u2019 ] * cos ( s . q ( \u2019 q_v3 \u2019 ) + s . q ( \u2019q_m1\u2019 )) vars = [ \u2019q_v1 \u2019 , \u2019q_v2 \u2019 , \u2019q_v3\u2019 , \u2019q_m1 \u2019 , \u2019q_m2 \u2019 , \u2019q_m3\u2019 , \u2019q_t1 \u2019 , \u2019q_t2 \u2019 , \u2019q_t3 \u2019 ]\nidn = Identity (1701 , \u2019UVMS\u20141 \u2019 , u\u2019UVMS\u201eplanar \u2019) stt = State(vars)\nstt.position = [0.0 ,0.0 ,0.0 ,\t\u2014 0.1745,2.0944, \u2014 0.3491,\n3.9356 ,3.5321 ,1.5708]\n#\tInstanciacao da cadeia cinematica\nuvms = KCComposable (idn, Defs . xy_plane , state=stt , partitioning = [1 ,1 ,1 ,0 ,0 ,0 ,1 ,1 ,1])\n#\tDefinicao dos elos\nbase = Link (Identity (0 , u\u2019Base\u2019)) veiculo = Link (I dent it y (1 , u\u2019Veiculo\u2019), x_vm=2.65) efetuador = Link (Identity (2 ,\t\u2019 Efetuador \u2019 ) , l_m3 = 2.0)\nl_\tv1\t= Link(Identity (3,\t\u2019 vx \u2019\t))\nl_\tv2\t= Link(Identity (4,\t\u2019 vy \u2019\t))\nl_\tm1\t= Link(Identity (5,\t\u2019m1 \u2019\t1 ) , l m1 = 2.0)\nl_\tm2\t= Link(Identity(6,\t\u2019m2 \u2019\t1 ) , l m2 = 2.0)\nl_\tt1\t= Link(Identity (7,\t\u2019 tx \u2019\t))\nl_\tt2\t= Link(Identity (8,\t\u2019ty \u2019\t))\nuvms . addLink (base , base=True)\nuvms . add Links (veiculo ,l_v1,l_v2, l_m1 , l_m2 , l_ 11 , l _ 12 ) uvms . addLink ( efetuador , endEffector=True)\n#\tDefinicao das algumas juntas\nj_v1 = Joint(I denti ty (11,\u2019v1\u2019 , var=\u2019q_v1\u2019),\nDefs . xy_plane , type=Defs . translational , components = [0.0 ,0.0 ,0.0 ,1.0 ,0.0 ,0.0])\nuvms . addJoint ((j_v1 ,base , l_v1))\nj_m1 = Joint (I dent i ty (14 , \u2019m1 \u2019 , var=\u2019q_m1\u2019), Defs . xy_ plane , components = [0.0,0.0,1.0, lambda s: s. attributes [ \u2019x_vm \u2019 ] * sin (s . _q [ \u2019q_v3 \u2019 , 0]) , lambda s: \u2014 s. attributes [ \u2019x_vm \u2019 ] * cos (s . _q[ \u2019q_v3 \u2019 , 0]) , 0.0])\nj_m2 = Joint (Identity (15, \u2019m2 \u2019 , var= \u2019q_m2 \u2019 ) , Defs . xy_plane , components=h_m2)\nuvms . addJoints ((j_m1, veiculo , l_m1) , (j_m2 , l_m1 , l_m2))\n#\tIntegrando todos sob um mesmo conjunto de dados uvms . pack ( )\nUm exemplo de uso \u00e9 mostrado na Listagem 8. Nela, pode-se ver que a instancia\u00e7\u00e3o da cadeia cinem\u00e1tica \u00e9 feita em uma linha de c\u00f3digo.\nA Listagem 3 cont\u00e9m trechos de uma descri\u00e7\u00e3o de cadeia cinem\u00e1tica em um arquivo XML para ilustrar como utilizar essa facilidade no lugar da defini\u00e7\u00e3o em c\u00f3digo feita na Listagem 2.\nB.3.5 Gera\u00e7\u00e3o de Trajet\u00f3rias\nOs geradores de trajet\u00f3rias implementados em Kast tem por finalidade fornecer as refer\u00eancias para as vari\u00e1veis prim\u00e1rias da cadeia do sistema de interven\u00e7\u00e3o a partir de descri\u00e7\u00f5es de tarefas desejadas para elas. Os geradores implementados utilizam caminhos definidos por pontos que as vari\u00e1veis devem atingir ao longo do tempo.\nCom base no m\u00f3dulo Numpy de Python foram criadas duas classes derivadas de TrajectoryFromPath denominadas TrajLinearPoly e TrajSpline. A primeira utiliza os componentes de manipula\u00e7\u00e3o de polin\u00f3mios do Numpy para interpola\u00e7\u00e3o polinomial de 5a ordem de uma reta entre dois pontos. Para caminhos formados por mais de 2 pontos, s\u00e3o interpoladas retas entre cada dois pontos sequenciais do caminho. A segunda classe utiliza os componentes que definem B-Splines de Numpy para interpolar uma trajet\u00f3ria que passe por todos os pontos do caminho especificado para ela. Embora n\u00e3o seja um interpolador de trajet\u00f3rias, foi criada tamb\u00e9m uma classe para fornecer refer\u00eancias constantes para as vari\u00e1veis prim\u00e1rias, denominada TrajConst.\nNovos geradores podem ser implementados tanto derivados de Trajectory quanto de TrajectoryFromPath. A diferen\u00e7a da segunda classe \u00e9 a exig\u00eancia de uma lista de estados (StateList) como atributo adicional, que define o caminho a ser percorrido. As classes de geradores devem implementar o m\u00e9todos _update, que \u00e9 utilizado para pr\u00e9-calcular os par\u00e2metros necess\u00e1rios para a gera\u00e7\u00e3o da trajet\u00f3ria, e _calcPoint, usado para calcular um ponto da trajet\u00f3ria em fun\u00e7\u00e3o do instante de tempo ou da itera\u00e7\u00e3o desejadas.\nO m\u00e9todo _calcPoint atualiza o atributo de estado _q do gerador com os valores de posi\u00e7\u00e3o e suas derivadas primeira e segunda. Esse m\u00e9todo \u00e9 invocado por todos os m\u00e9todos que fornecem refer\u00eancia de trajet\u00f3ria como at, generate e next. O primeiro retorna uma refer\u00eancia para o instante de tempo ou itera\u00e7\u00e3o passados como par\u00e2metro. O segundo retorna todos os pontos da trajet\u00f3ria com seus instantes de tempo em um StateList. next \u00e9 um m\u00e9todo especial de Python que gera informa\u00e7\u00f5es sequenciais, de forma que possa ser utilizado em estrutu-\n<?xml version=\" 1.0 \" encoding=\" utf \u2014 8\"?>\n<!\u2014 Listagem incompleta \u2014 Apenas para ilustracao \u2014>&lt;KinematicChain id=\u20191701\u2019 name= \u2019UMVS\u2014 01 \u2019\nclass= \u2019KCComposable \u2019>\n<screwsystem>xy_plane</screwsystem>\n<\tp a r t i t i o n i n g>1 1 1 0 0 0 1 1 1</p a r t i t i o n i n g>\n<a11 rib utesXvar name= \u2019 l_v3 \u2019>2.65</var>\n<var name= \u2019 l_m1\u2019> 2.0</var>&lt;var name= \u2019 l_m2\u2019> 2.0</var>&lt;var name= \u2019 l_m3 \u2019> 2.15</ varx/ attributes>\n<state><var name= \u2019q_v1\u2019>0.0 0.0\t0.0</var>\n<var name=\u2019q_m1 \u2019> \u20140.174 0.0 0.0</var>&lt;var name= \u2019q_m2 \u2019>2.094 0.0 0.0</var></state>&lt;links><Link id=\u20190\u2019 name=\u2019Base\u2019 base= \u2019 yes\u2019></Link>\n<Link id=\u20191 \u2019 name= \u2019 Ve\u00edculo \u2019></Link>\n<Link id=\u20193\u2019 name= \u2019 v1\u2019></Link>\n<Link id=\u20195 \u2019 name=\u2019m1\u2019></Link>\n<Link id=\u20196 \u2019 name=\u2019m2\u2019></Linkx/l i n ks>\n<\tj o i n t s>\n<Joint id= \u2019 11 \u2019 name=\u2019v1\u2019 var=\u2019q_v1\u2019\nt y p e= ' t r a n s l a t i o n a l '>\n<components>0.0 0.0 0.0\t1.0 0.0 0.0</components>\n<linkfrom>Base</linkfrom>&lt;li nkto>v1</ linkt o>\n</Joint>\n<Joint id=\u2019 14 \u2019 name=\u2019m1\u2019 var=\u2019q_m1\u2019>&lt;components>0.0 0.0\t1. 0 m1_x m1_y 0.0</components>\n<linkfrom>Ve\u00edculo</ linkfrom>&lt;linkto>m1</ l inkto>&lt;code name=\u2019m1_x\u2019 type= \u2019 lambda\u2019x ! [CDATA[\ns:s . attributes [ \u2019 l_v3 \u2019] * sin (s. state [ \u2019 q_v3 \u2019 , 0 ]) ] ] X/code>\n<code name=\u2019m1_y\u2019 type= \u2019 lambda\u2019x ! [CDATA[\ns: \u2014s. attributes [ \u2019 l_ v3 \u2019] * cos(s. state [ \u2019 q_v3 \u2019 , 0 ]) ] ] ></ c o d e>\n</Joint>\n<Joint id=\u2019 15 \u2019 name=\u2019m2\u2019 var=\u2019q_m2\u2019>\n<components>h_m2</components>\n<linkfrom>m1</linkfrom>&lt;linkto>m2</ linkto>\n<code name=\u2019h_m2\u2019 type= \u2019 method\u2019x ! [CDATA[ s . _num[0,0] =\t1.0\ns . _num [1,0]= s . _attr [ \u2019 l_v3 \u2019 ] * si n ( s . q ( \u2019 q_v3 \u2019)) + \\ s. _attr [ \u2019 l_m1 \u2019 ] * sin (s.q( \u2019 q_v3 \u2019) + s . q ( \u2019q_m1 \u2019)) s . _num [2 , 0] = \u2014 s . _attr [ \u2019 l_v3 \u2019 ] * cos ( s . q ( \u2019q_v3 \u2019)) \u2014 \\ s . _attr [ \u2019l_m1 \u2019] * cos (s .q( \u2019 q_v3 \u2019) + s . q ( \u2019q_m1 \u2019))\n] ] ></ c o d e>\n</Joint>\n<\tc o d e s>&lt;i m p o r t s>\n<import module= \u2019 math\u2019>sin cos</import>\n</ importsx/codes>\n</ KinematicChain>\nras de repeti\u00e7\u00e3o da linguagem. Esses m\u00e9todos j\u00e1 est\u00e3o implementados e funcionais nas classes base, desde que existam implementa\u00e7\u00f5es dos m\u00e9todos _calcPoint e _update que possam ser invocadas.\nA Listagem 4 apresenta um exemplo b\u00e1sico de uso de geradores de trajet\u00f3ria baseados em caminhos.\nListagem 4. Exemplo de uso de geradores de trajet\u00f3ria\nv = [ \u2019x \u2019 ]\np = StateList(vars , 4)\np[0] = State ( vars , array ([[ 0.0 ,\t0.0,\t0.0 ] ] ) , 0.0 , 0 )\np [ 1 ] = State(vars,array ([[1.0,\t0.0,\t0.0]]),1.5,15)\np[2] = State(vars,array([[ \u2014 0.5, 0.0,\t0.0]]),3.5,35)\np[3] = State ( vars , array ([[ 0.0 ,\t0.0,\t0.0 ] ]) , 4.0 , 4 0 )\ntrj = Traj LinearPoly ( i n i t i a l =0.0 , final=4.0, step=0.1, vars=v, path=p)\ntexto=nt={0},^h = {1};^x = {2},^dx = {3},^ddx={4}\"\nfor q in trj:\nprint texto . format (q . t , q.h,\nq [ \u2019 x \u2019 , 0] , q[ \u2019 x \u2019 , 1 ] , q [ \u2019 x \u2019 , 2 ] )\nO trecho de c\u00f3digo descreve como instanciar um gerador derivado de TrajectoryFromPath (um TrajLinearPoly). Ap\u00f3s instanciado, o objeto identificado como trj \u00e9 usado em uma estrutura de repeti\u00e7\u00e3o for e as refer\u00eancias fornecidas s\u00e3o processadas. Cada refer\u00eancia gerada \u00e9 uma inst\u00e2ncia de State, que al\u00e9m de conter os valores das vari\u00e1veis e suas derivadas ainda armazena o instante de tempo e o n\u00famero da itera\u00e7\u00e3o.\nPara sistematizar e simplificar a especifica\u00e7\u00e3o de caminhos e trajet\u00f3rias, foi definida uma sintaxe baseada em XML para descri\u00e7\u00e3o de trajet\u00f3rias. Foi criada uma classe para processar essas descri\u00e7\u00f5es e gerar inst\u00e2ncias dos geradores de trajet\u00f3rias especificados a partir de um factory method. Esta classe, denominada TrajFactory, processa os dados do arquivo XML passado no m\u00e9todo trajFrom e retorna uma lista de geradores de trajet\u00f3ria correspondente aos descritos nesse arquivo. Essa classe utiliza os componentes de processamento de dados em XML do m\u00f3dulo ElementTree de Python.\nA Listagem 5 cont\u00e9m um trecho de c\u00f3digo que utiliza o factory method para instanciar geradores de trajet\u00f3ria e os utiliza. Na Listagem 6 h\u00e1 um exemplo de descri\u00e7\u00e3o de trajet\u00f3ria em arquivo XML.\nt r j s = Tr aj Factory. traj From (\u2019teste. traj. xml \u2019) trj = trj s [ \u2019xy \u2019 ] t r j . _update () texto=nt={0},\u201eh = {1};\u201ex = {2},\u201ey={3}\"\nfor q in trj:\nprint texto . format (q . t , q.h,\nq[ \u2019x\u2019 ,0] ,q[ \u2019y \u2019 ,0])\nB.4 EXEMPLO DE USO DE KAST\nAs Listagens 7 e 8 ilustram o uso do framework Kast na implementa\u00e7\u00e3o de simula\u00e7\u00f5es. Elas correspondem a trechos de implementa\u00e7\u00e3o da simula\u00e7\u00e3o inicial do primeiro cen\u00e1rio do Cap\u00edtulo 7. Nesse caso, os componentes de Kast s\u00e3o usados na defini\u00e7\u00e3o de classes e objetos derivados do framework de interven\u00e7\u00e3o apresentado no Cap\u00edtulo 6.\nA classe Intervention01 \u00e9 derivada de Intervention e implementa seus m\u00e9todos. O m\u00e9todo init instancia os objetos necess\u00e1rios \u00e0 simula\u00e7\u00e3o e define seus estados iniciais. A cadeia cinem\u00e1tica \u00e9 representada pela vari\u00e1vel kc, que \u00e9 instanciada pelo factory method kcFrom da classe KCFactory. Ele carrega a defini\u00e7\u00e3o da cadeia cinem\u00e1tica armazenada no arquivo uvms01.kc.xml, que corresponde a um objeto KCComposa-ble. Esta cadeia \u00e9 posteriormente designada como atributo dos objetos guiagem e missao, que s\u00e3o instancias das classes Guidance e Mission, respectivamente.\nA tarefa \u00e9 uma instancia de TaskFromFile, que cria um objeto especializado da classe Task do framework de interven\u00e7\u00e3o a partir da defini\u00e7\u00e3o de um conjunto de geradores de trajet\u00f3rias especificados em um arquivo XML. Para tanto, TaskFromFile utiliza o factory method da classe TrajFactory de Kast.\nA implementa\u00e7\u00e3o do m\u00e9todo execute \u00e9 essencialmente a codifica\u00e7\u00e3o do algoritmo desenvolvido no Cap\u00edtulo 6, particularizada para a sintaxe da linguagem Python e fazendo uso de suas caracter\u00edsticas.\nA execu\u00e7\u00e3o da simula\u00e7\u00e3o \u00e9 feita no c\u00f3digo da Listagem 7. Essencialmente consiste na instancia\u00e7\u00e3o de um objeto Intervention01 e chamada dos seus m\u00e9todos na ordem espec\u00edfica. Os dados s\u00e3o armazenados nos arquivos definidos para o objeto missao.\nListagem 6. Exemplo de especifica\u00e7\u00e3o de trajet\u00f3ria no formato XML\n<?xml version=\" 1.0 \" encoding=\" utf \u2014 8\"?>&lt;Trajectories id= ' 1000 ' name= ' caso1 '>\n<about author=\u2019 Carlos _R_Rocha ' email= ' cticarlo@gmail .com ' version= '20120128 \u2014 1000 ' status=' unstable '/>\n<timeparams i n i t i a l =' 0.0 ' final = '25.0' step= ' 0.0 1 '/>&lt;Trajectory id='1001' name='xy' class= ' TrajSequence'>\n<timeparams i n i t i a l = ' 0 ' f i n a l= ' 25 ' step= ' 0.0 1 ' />\n<T r a j S e q s>\n<trajseq type= ' Traj LinearPoly ' initial = '0' final='1'/>&lt;trajseq type= ' Traj Const ' initial = '1 ' final='2'/>&lt;trajseq type= ' Traj LinearPoly ' initial = '2 ' final='3'/>&lt;/Traj Seqs>\n<vars>x y</vars>\n<Path>\n<state t='0.0' h='0'>0 0 0 0 0 0</state>\n<state t='10.0' h='1000'>.65 0 0 .375 0 0</state>&lt;state t='20.0' h= ' 2000'> 1.65 0 0 .375 0 0</state>&lt;state t='25.0' h=' 2500'> 1.94 0 0 .452 0 0</state>&lt;/Path>\n</Traj ectory>&lt;/ Trajectories>\nListagem 7. Implementa\u00e7\u00e3o de _update\nclass InterventionOl(Intervention ) :\nClasse que representa a execucao da intervencao\ndef____init__(self ) :\nIntervention .__init__(self)\ndef init (self, initial =None , fin a l=None , st ep=None , comclik=True ) :\n#\tDefine o uvms self._uvms = Uvms01()\n#\tDefine a cadeia cinematica\nkc = KCFactory . kcFrom (\u2019uvmsOl. kc . xml \u2019 ) varDic = kc . state . nameDict\n#\tDefine a atividade de guiagem\nKp = array([[0, 0, 0, 0, 0, 0, 100, 100,\t10]]).T\ni f comclik :\ns e l f . _guiagem = Guidance (kc=kc , kp=Kp,\ni n i t i a l = i n i t i a l , final = final , step=step) else :\ns e l f . _guiagem = Guidance (kc=kc , kp=None ,\ni n i t i a l = i n i t i a l , final = final , step=step)\n#\tDefine a tarefa\nself._tarefa = TaskFromFile ( vars=varDic , trajFile=\u2019cenario1 . caso1 . traj . xml \u2019)\n#\tDefine a missao\ns e l f . _ missao= Mission ( i n i t i a l = i n i t ial , final = final , step=step , kc=kc , task=self . _tarefa) self. _ missao . update ( qr=None ,\na=se l f . _uvms. environment)\nself. _ missao . recordData ( fnqa= 'atual. csv\u2019, fnqd= 'des ej ado.csv\u2019, f nqr= \u2019 referencia . csv \u2019)\ndef end(self):\n#\tGarante o salvamento do buffer self. _ missao . noRec ord Data ()\ndef execute(self):\nfor t in s e l f . _missao : self. _missao . verifyState () qd = s e l f ._missao . taskReference qa = s e l f ._missao . act ualS tat e qr = s e l f . _guiagem . execute (t , qd , qa) a = self._uvms.execute(t, qr) s e l f ._missao . update (qr , a)\nprint t\n246\nAP\u00caNDICE C - Modelos Cinem\u00e1ticos Utilizados\nNeste ap\u00eandice s\u00e3o desenvolvidos os modelos cinem\u00e1ticos das cadeias utilizadas ao longo da tese. S\u00e3o identificados os par\u00e2metros e vari\u00e1veis das cadeias junto com sua estrutura cinem\u00e1tica. Quando h\u00e1 possibilidade de composi\u00e7\u00e3o de cadeias a partir de subcadeias previamente modeladas, segue-se o procedimento descrito no Cap\u00edtulo 4. As equa\u00e7\u00f5es de restri\u00e7\u00e3o das cadeias dos diferentes cen\u00e1rios analisados na tese s\u00e3o determinadas. Com este ap\u00eandice, pretende-se complementar o desenvolvimento dos cap\u00edtulos anteriores, exemplificar os m\u00e9todos de modelagem cinem\u00e1tica por helicoides e servir de apoio para a modelagem de outros sistemas de interven\u00e7\u00e3o e seus cen\u00e1rios de utiliza\u00e7\u00e3o.\nC.1 CADEIAS CINEM\u00c1TICAS SIMPLES\nEssas cadeias s\u00e3o formadas apenas por elos e juntas, sem nenhuma subcadeia identific\u00e1vel. Elas s\u00e3o usadas tanto como cadeias reais (como o manipulador planar RRR que \u00e9 parte dos UVMS) quanto como cadeias virtuais (como a PPR planar que representa a imposi\u00e7\u00e3o de movimento no efetuador final do manipulador).\nC.1.1 Cadeia Planar PPR\nEssa cadeia \u00e9 formada por elos conectados por duas juntas prism\u00e1ticas ortogonais entre si e uma junta rotativa. As juntas prism\u00e1ticas atuam no plano da cadeia e o eixo da junta rotativa \u00e9 normal a esse plano. A representa\u00e7\u00e3o funcional do manipulador planar da Figura 87a ilustra uma cadeia desse tipo. As juntas prism\u00e1ticas est\u00e3o alinhadas com os eixos x e y do sistema de coordenadas de refer\u00eancia. O eixo da junta rotativa \u00e9 paralelo ao eixo z do referencial. As vari\u00e1veis e atributos associados \u00e0 cadeia s\u00e3o relacionados na Tabela 10.\nTabela 10. Vari\u00e1veis e atributos da cadeia PPR\nNome\tTipo\tDescri\u00e7\u00e3o\nqi\tVari\u00e1vel\tTransla\u00e7\u00e3o da junta 1\n92\tVari\u00e1vel\tTransla\u00e7\u00e3o da junta 2\n73\tVari\u00e1vel\tRota\u00e7\u00e3o da junta 3\nI3\tAtributo\tComprimento do elo do efetuador final\nAdotando uma configura\u00e7\u00e3o de refer\u00eancia como a da Figura 87b, onde as vari\u00e1veis das juntas assumem os valores q1 = 0, q2 = 0, q3 = 0,\nb\n1, $ 2, $ 3\n(b)\n\nFigura 87. Manipulador planar PPR: (a)representa\u00e7\u00e3o funcional; (b)configura\u00e7\u00e3o de refer\u00eancia\ns\u00e3o determinados os par\u00e2metros de Rodrigues listados na Tabela 11.\nTabela 11. Par\u00e2metros de Rodrigues\nJunta\ts\tso\tt\te\n1\t(1,0, 0)\t(0,0, 0)\tqi\t\u2014\n2\t(0,1,0)\t(0,0,0)\t72\t\u2014\n3\t(0,0,1)\t(0,0,0)\t\u2014\tq3\nAs matrizes de transforma\u00e7\u00e3o homog\u00eanea das juntas s\u00e3o calculadas usando a Equa\u00e7\u00e3o A.6, resultando nas matrizes das Equa\u00e7\u00f5es C.1,\nC.2 e C.3. Al\u00e9m destas, h\u00e1 a transforma\u00e7\u00e3o homog\u00eanea Ae entre o referencial do ponto e do efetuador final e o referencial situado na junta 3 (Equa\u00e7\u00e3o C.4). Pela premultiplica\u00e7\u00e3o destas, como na Equa\u00e7\u00e3o A.10, determina-se a matriz de transforma\u00e7\u00e3o da cadeia na Equa\u00e7\u00e3o C.5.\n\t1\t0\t0\t71\nAi =\t0\t1\t0\t0\n\t0\t0\t1\t0\n\t0\t0\t0\t1\n\t1\t0\t0\t0\nA2 =\t0 0\t1 0\t0 1\t72 0\n\t0\t0\t0\t1\n(C.1)\n(C.2)\nA\ne\nA3 \u2014\nC3\t-S3\t0\t0\nS3\tC3\t0\t0\n0\t0\t1\t0\n0\t0\t0\t1\n10 0 l3\n110 0 0 0 10 0 0 0 1\n(C.3)\n(C.4)\nC3\t-S3\t0\t7! + I3 C3\nA \u2014 AXA2A3Ae\nS3\nC3\t0\t72 + I3S3\n(C.5)\n0 0 1 0\n0 0 0\n1\nA partir da matriz A determina-se a transforma\u00e7\u00e3o de helicoides entre os referenciais do efetuador final e da base bTe atrav\u00e9s da Equa\u00e7\u00e3o A.12, resultando na Equa\u00e7\u00e3o C.6.\nb\nT\ne\nR\t\t0\n00\t72 + I3S3\t\n00\t-71 - I3C3\tR\n71S3 - 72C3\t72S3 + 71C3 + I3\t0\t\n(C.6)\n\tC3\t-S3\t0\nR \u2014\tS3\tC3\t0\n\t0\t0\t1\nA cinem\u00e1tica diferencial \u00e9 obtida a partir da determina\u00e7\u00e3o das express\u00f5es para os vetores s e s0 para qualquer postura da cadeia cinem\u00e1tica atrav\u00e9s da cinem\u00e1tica direta. Os valores desses vetores e do passo do helicoide para cada junta s\u00e3o listados na Tabela 12.\nTabela 12. Par\u00e2metros dos helicoides normalizados\nJunta\ts\tso\th\n1\t(1,0, 0)\t(0,0,0)\t\n2\t(0,1,0)\t(71,0,0)\t\n3\t(0,0,1)\t(71,72,0)\t0\nOs helicoides normalizados s\u00e3o calculados como definido na Equa\u00e7\u00e3o A.3, resultando nas express\u00f5es da Equa\u00e7\u00e3o C.7,\nsi =\n0\t\t0\t\t0\n0\t\t0\t\t0\n0\ts\t0\t\t1\n1\tS2 \u2014\t0\ts S3 \u2014\tq2\n0\t\t1\t\t-qi\n0\t\t0\t\t0\n(C.7)\nque formam a matriz de helicoides normalizados $ppp da Equa\u00e7\u00e3o C.8 ap\u00f3s a exclus\u00e3o das linhas triviais.\nSPPR \u2014\n0 0\t1\n10\tq2\n0\t1\t-qi\n(C.8)\nC.1.2 Cadeia Planar RRR\nEssa cadeia cont\u00e9m tr\u00eas juntas rotativas que atuam em um mesmo plano. As vari\u00e1veis e atributos da cadeia s\u00e3o listados na Tabela 13 e uma representa\u00e7\u00e3o funcional \u00e9 mostrada na Figura 88a, relativa a um manipulador no plano xy com os eixos das juntas paralelos ao eixo z.\nTabela 13. Vari\u00e1veis e atributos da cadeia RRR\nNome\tTipo\tDescri\u00e7\u00e3o\nqi\tVari\u00e1vel\tRota\u00e7\u00e3o da junta 1\nq2\tVari\u00e1vel\tRota\u00e7\u00e3o da junta 2\nq3\tVari\u00e1vel\tRota\u00e7\u00e3o da junta 3\nli\tAtributo\tComprimento do elo 1\nl2\tAtributo\tComprimento do elo 2\nl3\tAtributo\tComprimento do elo do efetuador final\nA configura\u00e7\u00e3o de refer\u00eancia adotada para a determina\u00e7\u00e3o da cinem\u00e1tica de posi\u00e7\u00e3o \u00e9 a da Figura 88b, para a qual q1 = q2 = q3 = 0. Os par\u00e2metros de Rodrigues correspondentes s\u00e3o listados na Tabela 14.\nAs matrizes de transforma\u00e7\u00e3o homog\u00eanea das juntas s\u00e3o mostradas nas Equa\u00e7\u00f5es C.9, C.10 e C.11. A transforma\u00e7\u00e3o do referencial do ponto e do efetuador final em rela\u00e7\u00e3o a um referencial situado na junta 3 \u00e9 apresentada na Equa\u00e7\u00e3o C.12. A premultiplica\u00e7\u00e3o destas ma-\nb\nO$i\n'2\n(b)\n\nFigura 88. Manipulador planar RRR: (a)representa\u00e7\u00e3o funcional; (b)configura\u00e7\u00e3o de refer\u00eancia\nTabela 14. Par\u00e2metros de Rodrigues\nJunta\ts\tso\tt\t6\n1\t(0,0,1)\t(0, 0, 0)\t\u2014\tqi\n2\t(0,0,1)\t(li, 0,0)\t\u2014\t92\n3\t(0,0,1)\t(li + l2- 0- 0)\t\u2014\t73\ntrizes resulta na transforma\u00e7\u00e3o homog\u00eanea entre o referencial da base e o referencial e mostrada na Equa\u00e7\u00e3o C.131.\n\tci\t-si\t0\t0\t\t\nAi =\tsi 0\tci 0\t0 1\t0 0\t\t\n\t0\t0\t0\t1\t\t\n\tc2\t-s2\t0\t-l1 (C2 - 1)\t\t\nA2 =\tS2 0\tc2 0\t0 1\t\t\u2014 lis2 0\t\n\t0\t0\t0\t\t1\t\n\tc3\t-s3\t0\t-(\tli + l2) (c3\t- 1) '\nA3 =\tS3 0\tc3 0\t0 1\t\t(li + l2) 0\tS3\n\t0\t0\t0\t\t1\t\n(C.9)\n(C.10)\n(C.11)\n1Onde ci23 e C123 sao as fun\u00e7\u00f5es cosseno e seno da soma dos \u00e2ngulos de juntas qi, Q2 e q3. Essa conven\u00e7\u00e3o ser\u00e1 utilizada no restante do texto.\nA\ne\n10 0 l3\n110 0 0 0 10 0 0 0 1\n(C.12)\nA = AiA2 A3Ae\nC123\nS123\n0\n\u2014 S123\t0\t(I3\t\u2014 11\t\u2014\tI2)\tC123 +\tI2C12\t+ 11C1\nC123\t0\t(I3\t\u2014 li\t\u2014\tI2)\tS123 +\tl2S12\t+ 11S1\n0 1 0\n0 0 0\n1\n(C.13)\nA transforma\u00e7\u00e3o de helicoides bTe entre os referenciais do efetu-ador final e da base \u00e9 ent\u00e3o determinada como na Equa\u00e7\u00e3o C.14,\nR\t0\nb\nT T e\n(C.14)\nR\nR =\n0\t0\tT43\n0\t0\tT53\nT6i\tT62\t0\t\nCi23\t\u2014 Si23\t0\nSi23\tCi23\t0\n0\t0\t1\nonde os componentes Tj s\u00e3o iguais a\nT43 =\t(l3 \u2014 l2 \u2014 li) s123 + l2si2 + lisi\t(C.15)\nT53 =\t\u2014 ((l3 \u2014 l2 \u2014 li) C123\t+ l2C12 + llCl)\t(C.16)\nT6i =\t(llCl + l2C12) S123 \u2014\t(liS1 + l2\u00ab12) C123\t(C.17)\nT32 =\t(liSl + l2\u00abi2) S123 +\t(llCl + \u00bf2C12) C123 + \u00bf3 \u2014 \u00bf2 \u2014 li (C.18)\nPara determinar a cinem\u00e1tica diferencial s\u00e3o utilizados os valores dos vetores s e s0 para qualquer postura da cadeia listados na Tabela 15 junto com o passo do helicoide.\nA matriz de helicoides normalizados\tda cadeia \u00e9 mostrada\nna Equa\u00e7\u00e3o C.19. Ela \u00e9 formada pelos helicoides normalizados das juntas da cadeia, tendo suas linhas triviais exclu\u00eddas.\nTabela 15. Par\u00e2metros dos helicoides normalizados\nJunta\ts\tso\th\n1\t(0,0,1)\t(0, 0,0)\t0\n2\t(0,0,1)\t(lici, lisi, 0)\t0\n3\t(0,0,1)\t(lici + l2ci2, lisi + l2si2,0)\t0\n$RRR =\t1\t1\t1\t\n\t0\tlisi\tlisi + l2Si2\t(C.19)\n\t0\t\u2014lici\t\u2014 (lici + l2Ci2)\t\nC.2 UVMS COM CADEIAS CINEM\u00c1TICAS COMPOSTAS\nA representa\u00e7\u00e3o de um sistema ve\u00edculo-manipuladores subaqu\u00e1ticos por cadeias cinem\u00e1ticas pode ser feita por composi\u00e7\u00e3o. O movimento do ve\u00edculo pode ser associado com o do efetuador final de uma cadeia PPR (no caso planar) ou de uma cadeia PPPS (no caso espacial), alinhadas com os eixos de um referencial inercial. Os manipuladores, por sua vez, s\u00e3o naturalmente representados por cadeias cinem\u00e1ticas reais de acordo com seus arranjos cinem\u00e1ticos.\nC.2.1 UVMS Planar Com Um Manipulador RRR\nEsse sistema de interven\u00e7\u00e3o subaqu\u00e1tica \u00e9 formado por um ve\u00edculo ao qual est\u00e1 vinculado um manipulador planar de tr\u00eas graus de liberdade. Assume-se que as tarefas s\u00e3o executadas em uma profundidade constante, o que define um plano horizontal de atua\u00e7\u00e3o. A Figura 89 mostra uma representa\u00e7\u00e3o funcional do sistema.\nO movimento do ve\u00edculo \u00e9 representado por uma cadeia virtual planar PPR denominada v, enquanto a cadeia cinem\u00e1tica m, do manipulador, \u00e9 do tipo RRR. A composi\u00e7\u00e3o das defini\u00e7\u00f5es pr\u00e9vias das cadeias cinem\u00e1ticas PPR e RRR resulta na Equa\u00e7\u00e3o C.20, expressa no referencial da base da cadeia v. Assume-se que o referencial do manipulador coincide com o efetuador final da cadeia do ve\u00edculo.\n$ u =\t+ 1 Tm$ m\n[\t1 Tm$m ]\n(C.20)\nFigura 89. UVMS planar com 1 manipulador\nAs vari\u00e1veis das cadeias s\u00e3o renomeadas de forma a incorporar em seus subscritos os identificadores da subcadeia da qual fazem parte, como \u00e9 mostrado na Tabela 16, para evitar conflitos. O referencial do ve\u00edculo coincide com o referencial inercial, motivo pelo qual se utiliza o superscrito I na transforma\u00e7\u00e3o de helicoides. Esta transforma\u00e7\u00e3o \u00e9 definida na Equa\u00e7\u00e3o C.6.\nTabela 16. Vari\u00e1veis e atributos do UVMS planar com um manipulador\nNome\tTipo\tDescri\u00e7\u00e3o\nqvi\tVari\u00e1vel\tTransla\u00e7\u00e3o da junta 1 do ve\u00edculo\nqV2\tVari\u00e1vel\tTransla\u00e7\u00e3o da junta 2 do ve\u00edculo\nqV3\tVari\u00e1vel\tRota\u00e7\u00e3o da junta 3 do ve\u00edculo\nlV3\tAtributo\tComprimento do elo final do ve\u00edculo\n(-lrq\tVari\u00e1vel\tRota\u00e7\u00e3o da junta 1 do manipulador\nQrrq\tVari\u00e1vel\tRota\u00e7\u00e3o da junta 2 do manipulador\nQrrq\tVari\u00e1vel\tRota\u00e7\u00e3o da junta 3 do manipulador\nlmi\tAtributo\tComprimento do elo 1 do manipulador\nlm2\tAtributo\tComprimento do elo 2 do manipulador\nlm3\tAtributo\tComprimento do elo 3 do manipulador\n\u00c9 poss\u00edvel simplificar as express\u00f5es dos componentes dos heligiros com a escolha de um referencial diferente. O referencial c em quest\u00e3o situa-se no centro de massa do ve\u00edculo (onde a junta rotativa de v est\u00e1 posicionada) estando por\u00e9m alinhado com o referencial inercial. A transforma\u00e7\u00e3o entre os referenciais I e c \u00e9 determinada pela transla\u00e7\u00e3o entre as origens desses referenciais, como mostrado na Equa\u00e7\u00e3o C.21.\nI3\t0\nc\nT\nI \u2014\n0\t0\tqV2\n0\t0\tqvi\nqV2\t\u2014 qvi\t0\nI3\n(C.21)\nAplicando essa transforma\u00e7\u00e3o na matriz de helicoides normalizados na Equa\u00e7\u00e3o C.20, e ap\u00f3s simplifica\u00e7\u00f5es, obt\u00e9m-se a matriz de helicoides normalizados expressos segundo o referencial c descrito na Equa\u00e7\u00e3o C.22,\nc$\t_ cm h\nT I\n\u2014 c3 c3 c3 c3 c3 c3 $V2\t$V3\t$mi\t$m2\t$m3\n0\t0\t1\t1\t1\t1\n1\t0\t0\tm1x\tm2x\tm3 3x\n0\t1\t0\tm1y\tm2 2y\tm3 3y\n(C.22)\nonde\nm1x\t\u2014 \u00bfV3SV3\t(C.23)\n^Ly\t\u2014 ~^V3 CV3\t(C.24)\nm2x\t^V3 SV3\t1 lmi SV3mi\t(C.25)\nm2 2y\t^V3 CV3\tlmi CV3mi\t(C.26)\nm3x\tlV3 SV3 1 ^mi SV3mi 1 ^m2 SV3mi2\t(C.27)\nm3 3y\t^V3 CV3\t^mi CV3mi\t^m2\t(C.28)\nC.2.2 UVMS Planar Com Dois Manipuladores RRR\nDa mesma forma que o sistema anterior, assume-se que as tarefas s\u00e3o executadas em um plano horizontal. O fato de ter dois manipuladores leva ao arranjo apresentado na Figura 90. Nele, os manipuladores est\u00e3o afastados de uma dist\u00e2ncia ym\u00ed em rela\u00e7\u00e3o ao efetuador final da cadeia virtual v, onde i = 1,2 \u00e9 o n\u00famero do manipulador. As vari\u00e1veis e atributos da cadeia cinem\u00e1tica s\u00e3o listados na Tabela 17.\nA defini\u00e7\u00e3o dos heligiros da cadeia \u00e9 similar ao caso com um manipulador. Por\u00e9m, deve-se observar que cada manipulador tem um sistema de refer\u00eancia diferente do sistema do efetuador final da cadeia\nFigura 90. UVMS planar com 2 manipuladores\nv, o que faz com que os heligiros de ambas as subcadeias sofram uma transforma\u00e7\u00e3o de helicoides correspondente \u00e0 transla\u00e7\u00e3o de origens de sistemas de coordenadas. Assim, o estado de velocidades da cadeia segundo o referencial c assume a forma da Equa\u00e7\u00e3o C.29, onde cTmi e cTm2 s\u00e3o definidas nas Equa\u00e7\u00f5es C.30 e C.31 respectivamente.\nc\tc\tc\tc\nu $ v + Tmi $ mi + Tm2 $ m2\nc\nT\nT\nq v\nq mi\nq m2\nmi\nm2\n= [ cSv\nT\nTmi\nmi\ncTm2 \u00e9m2 ]\nCv3\tsv3\t\t\t0\t\t\nSv3\tcv3\t\t\t0\t\t\n0\t0\t\t\t1\t\t\n0\t0\tymi\tcv3\t+\t^3\tSv3\n0\t0\tymi\tsv3\t-\t^3\tcv3\n\u2014ymi\t^3\t\t\t0\t\t\ncv3\t\u2014 Sv3\t\t\t0\t\t\nsv3\tcv3\t\t\t0\t\t\n0\t0\t\t\t1\t\t\n0\t0\tym2\tcv3\t+\t^3\tSv3\n0\t0\tym2\tsv3\t-\t^3\tcv3\n\u2014ym2\t^3\t\t\t0\t\t\n$uqu\n(C.29)\n\t0\t\t\ncv3\t\u2014 sv3\t0\t(C.30)\nSv3\tcv3\t0\t\n0\t0\t1\t\n\t0\t\t\ncv3\t\u2014 Sv3\t0\t(C.31)\nSv3\tcv3\t0\t\n0\t0\t1\t\nc\n$\nA matriz de helicoides normalizados obtida a partir da Equa\u00e7\u00e3o\nC.29 \u00e9 apresentada na Equa\u00e7\u00e3o C.32,\nTabela 17. Vari\u00e1veis e atributos do UVMS planar com dois manipuladores\nNome\tTipo\tDescri\u00e7\u00e3o\nqvi\tVari\u00e1vel\tTransla\u00e7\u00e3o da junta 1 do ve\u00edculo\nqV2\tVari\u00e1vel\tTransla\u00e7\u00e3o da junta 2 do ve\u00edculo\nqV3\tVari\u00e1vel\tRota\u00e7\u00e3o da junta 3 do ve\u00edculo\nlV3\tAtributo\tComprimento do elo final do ve\u00edculo\ny mi\tAtributo\tDist\u00e2ncia da base do manipulador 1 ao eixo de avan\u00e7o do ve\u00edculo\nym2\tAtributo\tDist\u00e2ncia da base do manipulador 2 ao eixo de avan\u00e7o do ve\u00edculo\nqmi,i\tVari\u00e1vel\tRota\u00e7\u00e3o da junta 1 do manipulador 1\nqmi,2\tVari\u00e1vel\tRota\u00e7\u00e3o da junta 2 do manipulador 1\nqmi,3\tVari\u00e1vel\tRota\u00e7\u00e3o da junta 3 do manipulador 1\nlmi,i\tAtributo\tComprimento do elo 1 do manipulador 1\nlmi,2\tAtributo\tComprimento do elo 2 do manipulador 1\nlmi,3\tAtributo\tComprimento do elo 3 do manipulador 1\nqm2,i\tVari\u00e1vel\tRota\u00e7\u00e3o da junta 1 do manipulador 2\nqm2,2\tVari\u00e1vel\tRota\u00e7\u00e3o da junta 2 do manipulador 2\nqm2,3\tVari\u00e1vel\tRota\u00e7\u00e3o da junta 3 do manipulador 2\nlm2,i\tAtributo\tComprimento do elo 1 do manipulador 2\n^m2,2\tAtributo\tComprimento do elo 2 do manipulador 2\nlm2,3\tAtributo\tComprimento do elo 3 do manipulador 2\nc\nu\nc $(\tc vi\t$V2\tc\u00e3 $v 3\tc\u00e3\tc\t\u00e3\tc $mi,2\t\u00e3c $mi,3\t\u00e3c $m2,i\n' 0\t0\t1\t1\t1\t1\t1\t1\n1\t0\t0\tm1,1x\tm1,2x\tm1,3x\tm2,1x\t\u21222,2x\n0\t1\t0\tm1,1y\tm1,2y\tm1,3y\tm2,1y\tm2,2y\n\u00e3m2,2 C^m2,3 ]\n1\n\u21222,3x\n\u21222,3y\n(C.32)\nonde\nmi\t3x =\t= m1,2x\t+\tlmi,2 sv3mi,i2\t(C.37)\nmi\t,3y\t= m1,2x\t-\tlmi,2 cv3mi,i2\t(C.38)\nm2.\t,1x =\t= lv3 sv3\t+\tym2 CV3\t(C.39)\nm2\t\t\u2014\tlV3C\tV3\t+ ym2 SV3\t(C.40)\nm2,\t,2X =\t= m2,1x\t+\tlm2,i sv3m2,i\t(C.41)\nm2\t,2 = ,2y\t= m2,1y\t-\tlm2,i cv3m2,i\t(C.42)\nm2.\t3x =\t= m2,2x\t+\tlm2,2 SV3m2,i2\t(C.43)\nm2\t3\t= ,3y\t= m2,2x\t-\tlm2,2 cV3m2,i2\t(C.44)\nC.3 CEN\u00c1RIOS DE OPERA\u00c7\u00c3O\nAssim como nos modelos cinem\u00e1ticos de UVMS, as cadeias cinem\u00e1ticas dos cen\u00e1rios onde eles s\u00e3o empregados podem ser formadas por composi\u00e7\u00e3o. No caso, pelas cadeias dos pr\u00f3prios UVMS e de cadeias virtuais que imp\u00f5em movimentos e restri\u00e7\u00f5es que s\u00e3o definidos pelas tarefas e pelo espa\u00e7o de trabalho.\nC.3.1 UVMS Planar Com Um Manipulador\nPara uma opera\u00e7\u00e3o de interven\u00e7\u00e3o com apenas um manipulador, utiliza-se o modelo de UVMS descrito na Subse\u00e7\u00e3o C.2.1, onde o movimento do efetuador final \u00e9 representado por uma cadeia virtual do tipo PPR. Essa cadeia, denominada t, \u00e9 usada para impor o movimento ao efetuador final, fechando o circuito e possibilitando o uso do m\u00e9todo de Davies para a resolu\u00e7\u00e3o da cinem\u00e1tica. A Figura 91a mostra uma representa\u00e7\u00e3o funcional do sistema, enquanto o grafo de movimento correspondente \u00e9 mostrado na Figura 91b.\nAo se incluir a cadeia virtual t ao sistema, acrescentam-se tr\u00eas novos helicoides normalizados \u00e0 matriz definida na Equa\u00e7\u00e3o C.22. A defini\u00e7\u00e3o destes \u00e9 similar \u00e0 da cadeia v por terem a mesma estrutura2. Segundo o referencial c, os heligiros da cadeia t formam a matriz apresentada na Equa\u00e7\u00e3o C.45.\n2 Outra vis\u00e3o seria a dela estar vinculada ao efetuador final do manipulador, o que implicaria em diferentes transforma\u00e7\u00f5es de helicoides.\nc $ c\t(h\t(h\n$t \u2014 TI $t \u2014\t$ti\t$t2\t$t3\n(C.45)\n0 0 1\n10\tqt2 - q\n0\t1\t\u2014qt1 + qv1\nFigura 91. Execu\u00e7\u00e3o de tarefas com um UVMS planar com um manipulador: (a)representa\u00e7\u00e3o funcional; (b)grafo de movimento\n\u00c9 poss\u00edvel relacionar geometricamente as vari\u00e1veis de posi\u00e7\u00e3o da cadeia t com as das cadeias v e m, como mostrado na Equa\u00e7\u00e3o C.46.\nqt\u2014\nqti\nqt2\nqt3\nqvi + ^V3 cV3\t+ lmi\tcV3mi\t+\tlrm2 cV3mi2\t+\t^m3 cV3mi23\nqv2 + sv3\t+ ^mi\tsv3mi\t+\t^m2 sv3mi2\t+\t^m-3 sv3mi23\nqV3 + qmi + qm2 + qm3\n(C.46)\nSubstituindo essas rela\u00e7\u00f5es na Equa\u00e7\u00e3o C.45, definem-se os heli-coides normalizados de t em fun\u00e7\u00e3o do mesmo conjunto de vari\u00e1veis que\nos das cadeias v e m. A matriz de helicoides normalizados do sistema completo \u00e9 mostrada na Equa\u00e7\u00e3o C.47,\nD = [<\nc\u00bf\nV2\nc\u00bf\nV3\nc\u00bf\nmi\nc\u00bf\nm2\nc\u00bf\nm3\nc\u00bf c\u00bf c ti\t$ t2\n0\t0\t1\t1\t1\t1\t0\t0\t1\n1\t0\t0\tm1x\t\tm3x\t1\t0\t\u00bf3x\n0\t1\t0\tm1y\tmo 2y\tm3 3y\t0\t1\tt3y\n(C.47)\nonde\n\u00bf3x\n\u00bfv3 sv3 + \u00bfmi sv3mi + \u00bfm2 s v3mi2 + \u00bfm3 s v3mi23\nt3\n3y\n\u00bfv3 cv3\t\u00bfmi cv3mi\t\u00bfm2 cv3ml2\t\u00bfm3 cV3mi23\n(C.48)\n(C.49)\nA partir do grafo de movimento da Figura 91b, determina-se a matriz de rede B,\nB = [ 1\t1\t1\t1\t1\t1\t-1\t-1\t-1 ]\t(C.50)\na qual, aplicada na Equa\u00e7\u00e3o A.17 juntamente com a matriz de helicoides normalizados, resulta na matriz de rede N descrita na Equa\u00e7\u00e3o C.51.\nN\t[ $vi\t$v2\t$v3\t$mi\t$m2\t$m3 \u2014 $ti\t\u2014 $t2\t\u2014 $t3\t]\n(C.51)\nPara executar opera\u00e7\u00f5es em um espa\u00e7o livre de obst\u00e1culos onde o ve\u00edculo permanece estacion\u00e1rio (ou tem algum movimento previamente determinado), pode-se usar o particionamento da equa\u00e7\u00e3o de restri\u00e7\u00e3o da Equa\u00e7\u00e3o C.52 para resolver a cinem\u00e1tica para o manipulador a partir das especifica\u00e7\u00f5es da tarefa pela cadeia t e as restri\u00e7\u00f5es do ve\u00edculo impostas pela cadeia v.\nNq = [ $vi $v2 $v3 $mi $m2 $m3 \u2014 $ti \u2014 $t2 \u2014 $t3 j\nqvi\nI\u00cdV2\nqV3\nqmi\n?m2\n?m3\n<7t2\n<7t3\n(C.52)\n= 0\nC.3.2 UVMS Planar Com Dois Manipuladores Em Coopera\u00e7\u00e3o\nNesse tipo de tarefa onde dois manipuladores operam em coopera\u00e7\u00e3o, a cadeia cinem\u00e1tica do sistema tem complexidade maior que a do caso anterior. Al\u00e9m do modelo cinem\u00e1tico do UVMS descrito na Subse\u00e7\u00e3o C.2.2, s\u00e3o acrescidas 3 cadeias virtuais. A cadeia t representa o movimento da pe\u00e7a sendo manipulada, enquanto as cadeias r1 e r2 representam a posi\u00e7\u00e3o relativa dos efetuadores finais do UVMS em rela\u00e7\u00e3o ao ponto da pe\u00e7a vinculado \u00e0 cadeia t. A Figura 92a mostra uma representa\u00e7\u00e3o funcional do sistema, enquanto o grafo de movimento correspondente \u00e9 mostrado na Figura 92b. Ele \u00e9 uma expans\u00e3o do grafo contra\u00eddo da Figura 23.\n(a)\nFigura 92. UVMS planar com dois manipuladores trabalhando em coopera\u00e7\u00e3o: (a)representa\u00e7\u00e3o funcional; (b)grafo de movimento\nA matriz de helicoides normalizados do sistema D \u00e9 ent\u00e3o formada pelos helicoides do UVMS e pelos helicoides das subcadeias t, r1 e r2, todas do tipo PPR. O referencial adotado para o sistema \u00e9 o c. Para expressar os heligiros normalizados de acordo com ele s\u00e3o usadas as transforma\u00e7\u00f5es de helicoides mostradas na Equa\u00e7\u00e3o C.53,\nD = [ c$\u201e c$t cTpp$n cT/\u00cd2 ]\t(C.53)\nonde c$\u201e \u00e9 o conjunto de helicoides normalizados do UVMS definidos na Equa\u00e7\u00e3o C.32 e c$t tem a mesma defini\u00e7\u00e3o da Equa\u00e7\u00e3o C.45. A transforma\u00e7\u00e3o de helicoides cTp ocorre do referencial solid\u00e1rio \u00e0 pe\u00e7a em manipula\u00e7\u00e3o, com origem no ponto em que a cadeia t se conecta a ele (que \u00e9 no qual os heligiros de r1 e r2 est\u00e3o definidos), para o referencial da cadeia c. Ela \u00e9 definida como cTp = cTIITp, onde a transforma\u00e7\u00e3o de helicoides 1 Tp \u00e9 definida como na Equa\u00e7\u00e3o C.54.\n1T =\nTp =\nct3\tst3\t0\t\nSt3\tct3\t0\t\n0\t0\t1\t\n0\t0\tqt2\tct3\n0\t0\t-qti\tSt\nqt1 St3\tqt2 ct3\tqti ct3 + qt2 St3\t0\t0\n0\n-St3\t0\nct3\t0\n0 1\n(C.54)\nAssim, a transforma\u00e7\u00e3o cTp \u00e9 igual a\ncrp\nTp\nct3\t-St3\t0\t\t\t\nSt3\tct3\t0\t\t0\t\n0\t0\t1\t\t\t\n0\t0\tqt2 - qv2\tct3\t-St3\t0\n0\t0\t-qti + qvi\tSt3\tct3\t0\nT6,1\tT6,2\t0\t0\t0\t1\nT6,i = (qti - q-vi) st3 - (qt2 - qv2) ct3\n(C.55)\n(C.56)\nT6,2 =\t(qti\t-\tqvi\t)\tct3\t+ (qt2\t-\tqV2\t) st3\n(C.57)\nCom isso, c$ri e c$r2 s\u00e3o iguais a\n\t0\t0\t1\t\nc8\t\t $ri =\tCt3\tSt3\tqri,i st3 + qri,2 ct3 + qt2 \u2014 qv2\t(C.58)\n\tSt3\tCt3\t\u2014 qri,i ct3 + qri,2 st3 \u2014 qti +\t\n\t0\t0\t1\t\nc8 $r2 =\tCt3\t\u2014 St3\tqr2,i st3 + qr2,2 ct3 + qt2 \u2014 qv2\t(C.59)\n\tSt3\tCt3\t\u2014 qr2,i ct3 + '5'2.2 st3 \u2014 qti + '/\u2022\"\t\nA partir do grafo de movimento da Figura 92b, e seguindo a ordem dos helicoides normalizados da matriz D, determina-se a matriz\nde rede B,\nI3 I3 O3 \u201413 \u201413 O3\nI3 O3 I3 \u201413 O3 \u201413\n(C.60)\nonde 1c \u00e9 um vetor de 1\u2019s de dimens\u00e3o [1 x c] e 0c \u00e9 um vetor de 0\u2019s de dimens\u00e3o [1 x c]. A matriz de rede resultante da substitui\u00e7\u00e3o de D e B na Equa\u00e7\u00e3o A.17 \u00e9 mostrada na Equa\u00e7\u00e3o C.61.\nc 8 c8\tc8\tc8\nv $mi 0\t\u2014 $ t \u2014 $ ri\t0\nc 8\tc8\tc8\tc8\nv 0\t$m2\t\u2014 $ t 0\t\u2014 $ r2\n(C.61)\nPara executar opera\u00e7\u00f5es em um espa\u00e7o livre de obst\u00e1culos onde o ve\u00edculo permanece estacion\u00e1rio (ou tem algum movimento previamente determinado), pode-se usar o particionamento da equa\u00e7\u00e3o de restri\u00e7\u00e3o da Equa\u00e7\u00e3o C.62 para resolver a cinem\u00e1tica para os manipuladores a partir das especifica\u00e7\u00f5es da tarefa pelas cadeias t, n e r2 e as restri\u00e7\u00f5es do ve\u00edculo impostas pela cadeia v.\nNq =\n$v $mi 0 \u2014 $t \u2014 $ri 0 $v 0 $m2 \u2014 $t 0\t\u2014 $r2\nq v\nq mi\nm2\nq t\nq ri\nq r2\n=0\n(C.62)\nC.3.3 Dois UVMS Planares Com Um Manipulador Cada Em Coopera\u00e7\u00e3o\nUm cen\u00e1rio de opera\u00e7\u00e3o cooperativa entre UVMS \u00e9 apresentado na Figura 93a. Nesse caso, cada ve\u00edculo tem um manipulador planar\nacoplado, formando o UVMS descrito na subse\u00e7\u00e3o C.2.1. A descri\u00e7\u00e3o de uma tarefa consiste na defini\u00e7\u00e3o do movimento desejado para o objeto a ser manipulado atrav\u00e9s da cadeia virtual t e das posturas dos efetuadores finais dos UVMS em rela\u00e7\u00e3o ao objeto representadas pelas cadeias virtuais n e r2. O grafo de movimento desse cen\u00e1rio \u00e9 mostrado na Figura 93b.\nVe\u00edculo 1\nEfetuador 1\nReferencial\nVe\u00edculo 2\nEfetuador 2\n(b)\nFigura 93. Execu\u00e7\u00e3o de tarefa cooperativa entre dois UVMS planares: (a)representa\u00e7\u00e3o funcional; (b)grafo de movimento\nA matriz de helicoides normalizados dessa cadeia cinem\u00e1tica \u00e9 obtida pela composi\u00e7\u00e3o das cadeias dos dois UVMS (u1 e u2) al\u00e9m das subcadeias t, r1 e r2. O referencial adotado nesse cen\u00e1rio \u00e9 o inercial,\nvisto ser comum aos dois UVMS e ao objeto sendo manipulado. Assim, a matriz D assume a forma da Equa\u00e7\u00e3o C.63,\nD \u2014 [ $\u201ei $\u201e2 $t 1 T/ii 1T/\u00cd2 ]\t(C.63)\npara 1 Tp definida na Equa\u00e7\u00e3o C.54.\nA partir do grafo de movimento determina-se a matriz de circuitos B que \u00e9 descrita na Equa\u00e7\u00e3o C.64,\nB =\n16\t06\t\u201413\t\u201413 O3\n06\t16\t\u201413\tO3\t\u201413\n(C.64)\nCom D e B determinados, calcula-se a A.17, que resulta na Equa\u00e7\u00e3o C.65.\nmatriz de rede pela Equa\u00e7\u00e3o\nN =\n$ui\t0\t\u2014\u00eat\t\u2014Sri\t0\n0\t$M2\t\u2014St\t0\t\u2014 Sr2\n(C.65)\nOs componentes ferencial inercial como\nda matriz de rede s\u00e3o expressos segundo o re-\n\t\t\u25a0 0\t0\t1\t1\t1\t1\nSMi\t=\t1\t0\tq\u00abi,2\tm1,1x\tm1,2x\tm1,3x\n\t\t0\t1\t\u2014 q\u00abi,i\tm1,1y\tm1,2y\tm1,3y\nm1,1x\t= q\t\u00abi,2\t+ l\t\u00abi,3 S\u00abi,3\t\t\t\nm1,1y = \u2014qvi,1 \u2014 l\u00abi,3 cvi,3 m1,2x = m 1,1 x + lmi,i svi,3mi,i\nm1,2y\tm1,1y\tlmi,i c\u00abi,3mi,i\nm1,3x\tm1,2x + lmi,2 svi,3mi,i2\nm1,3H\tm 1,2y \u2014 lmi,2 cvi,3mi,i2\n(C.66)\n(C.67)\n(C.68)\n(C.69)\n(C.70)\n(C.71)\n(C.72)\n\t0\t0\t1\t1\nU2 =\t1\t0\tqV2,2\tm2,1x\n\t0\t1\t\u2014 qV2,1\tm2,1y\nm2,1x\tqV2,2 + lV2,3 SV2,3\nm2,1y\t\u2014 qV2,1 \u2014 lV2,3 CV2,3\nm2,2x\tm2,1x I lm2,1 SV2,3W2,1\nm2,2y\tm2,1y \u2014 lm2,1 CV2,3^2,1\nm2,3x\tm2,2x + lm2,2 SV2,3m2,12\nm2,3y\tm2,2y \u2014 lm2,2 cV2,3m2,12\n1\t1\t\nm2,2x\tm2,3x\t(C.73)\nm2,2y\tm2,3y\t(C.74)\n\t\t(C.75)\n\t\t(C.76)\n\t\t(C.77)\n\t\t(C.78)\n\t\t(C.79)\nSt =\n(C.80)\n0\t0 1\n1 0\tqt2\n0\t1\t\u2014 qt1\n\t0\t0\t1\t\t\nII\tCt3\tSt3\tqt2 + qr1,1 st3\t+ qr1,2 ct3\t(C.81)\n\tSt3\tCt3\t\u2014 qt1 \u2014 qr1,1 ct\t+ qr1,2 st3\t\n\t0\t0\t1\t\t\nSr2 =\tCt3\tSt3\tqt2 + qr2,1 St3\t+ qr2,2 ct3\t(C.82)\n\tSt3\tCt3\t\u2014 qt1 \u2014 qr2,1 ct\t+ qr2,2 st3\t\nUm particionamento para o sistema operando livre de obst\u00e1culos e considerando que os ve\u00edculos permanecem estacion\u00e1rios \u00e9 descrito na Equa\u00e7\u00e3o C.83. Com isso, resolve-se a cinem\u00e1tica para os manipuladores a partir da restri\u00e7\u00e3o de movimento dos ve\u00edculos, da especifica\u00e7\u00e3o do movimento desejado para o objeto e das posi\u00e7\u00f5es relativas entre os manipuladores e a refer\u00eancia do objeto.\nNq =\n$V1 Sm1\t0\t0\t\u2014$t \u2014 Sr1\n0\t0 $V2\t. \u2014St 0\n0\n\u2014 Sr2\nq V1 q m1 qV2\nq t q n q r2\n=0\n(C.83)\nO particionamento pode ser diferente de acordo com as exig\u00eancias da tarefa, como a possibilidade de algum dos manipuladores estar pr\u00f3ximo de uma singularidade ou de limites de juntas, por exemplo, o que implica na necessidade de movimentar o ve\u00edculo ao qual ele est\u00e1 vinculado.\nC.3.4 Dois UVMS Planares Com Dois Manipuladores Cada Em Coopera\u00e7\u00e3o\nUm segundo cen\u00e1rio de opera\u00e7\u00e3o cooperativa entre UVMS envolve UVMS com dois manipuladores. O sistema, formado por dois UVMS com a configura\u00e7\u00e3o cinem\u00e1tica apresentada na Subse\u00e7\u00e3o C.2.2, \u00e9 apresentado na Figura 94. A descri\u00e7\u00e3o de uma tarefa consiste na defini\u00e7\u00e3o do movimento desejado para o objeto a ser manipulado atrav\u00e9s da cadeia virtual t e das posturas dos efetuadores finais dos UVMS em rela\u00e7\u00e3o ao objeto representadas pelas cadeias virtuais rn, r12, r21 e r22. O grafo de movimento desse cen\u00e1rio \u00e9 mostrado na Figura 95.\nFigura 94. Representa\u00e7\u00e3o funcional do cen\u00e1rio de coopera\u00e7\u00e3o entre dois UVMS planares com dois manipuladores cada\nA matriz de helicoides normalizados dessa cadeia cinem\u00e1tica \u00e9 obtida pela composi\u00e7\u00e3o das cadeias dos dois UVMS (v1, m11, m12, v2, m21 e m22) e das subcadeias t, r11, r12, r21 e r22. O referencial adotado\nFigura 95. Grafo de movimento do cen\u00e1rio de coopera\u00e7\u00e3o entre dois\nUVMS planares com dois manipuladores cada\nnesse cen\u00e1rio \u00e9 o inercial, por ser comum aos dois UVMS e ao objeto manipulado. Assim, a matriz D assume a forma da Equa\u00e7\u00e3o C.84,\nD = [ $\u00ab1 $mn $mi2 $v2 $m21 $m22 ' ' '\n\u2022\u2022\u2022\t1 T/Srii 1T/\u00cd12 1T/\u00cd21 1T/\u00cd22 ]\t(C.84)\nonde a transforma\u00e7\u00e3o de helicoides 1 Tp \u00e9 definida na Equa\u00e7\u00e3o C.54.\nA partir do grafo de movimento determina-se a matriz de circuitos B que \u00e9 descrita na Equa\u00e7\u00e3o C.85.\n\tI3\tI3\tO3\tO3\tO3\tO3\t-I3\t-I3\tO3\tO3\tO3\nB =\tI3\tO3\tI3\tO3\tO3\tO3\t-I3\tO3\t-13\tO3\tO3\n\tO3\tO3\tO3\tI3\tI3\tO3\t-I3\tO3\tO3\t-I3\tO3\n\tO3\tO3\tO3\tI3\tO3\tI3\t-I3\tO3\tO3\tO3\t-I3\n(C.85) Assim, a matriz de rede assume a forma da Equa\u00e7\u00e3o C.86.\n\t$\u00ab1\t\tO\tO\tO\tO\t- $t\t$r11\tO\tO\tO\nN =\t$\u00ab1\tO\t$m12\tO\tO\tO\t- $t\tO\t- $r12\tO\tO\n\tO\tO\tO\t$\u00ab2\t$m21\tO\t- $t\tO\tO\t-$r21\t0\n\tO\tO\tO\t$\u00ab2\tO\t$m22\t- $t\tO\tO\tO\t- $r22\n\t\t\t\t\t\t\t\t\t\t\t(C.86)\nOs componentes da matriz de rede s\u00e3o expressos como\n$v1 \u2014\n0 0\n1 0\n0 1\n1\nqvi,2\n\u2014 qvi,1\n111\n(C.87)\n$ mil\n\u00ab11,1,\n\u00ab11,1y\n\u00ab11,2,\n\u00ab11,2y\n\u00ab11,3,\n\u00ab11,3y\nefV1,x\nefv1,\u00ab\n\u00ab11,1,\t\u00ab11,2,\t\u00ab11,3,\n\u00ab11,1y\tmii,2v\tmii,3v\nymn cV1,3 + e/v1,H ymn S\u00ab1,3\tefv1,,\n\u00ab11,1, + lm11,1 sV1,3m11,1 \u00ab11,1y\tlm11,1 cvi.3mii,i\n\u00ab 11,2, + lm11,2 SV1,3m11,12 \u00ab 11,2y \u2014 lm11,2 cv1,3m11,12 qV1,1 + ^\u00ab1,3 cV1,3 qV1,2 + ^\u00ab1,3 s\u00ab1,3\n(C.88)\n(C.89)\n(C.90)\n(C.91)\n(C.92)\n(C.93)\n(C.94)\n(C.95)\n(C.96)\n$ m12\n\u00ab12,1,\n\u00ab12,1y\n\u00ab12,2,\n\u00ab12,2y\n\u00ab12,3,\n\u00ab12,3y\n111\n\u00ab12,1 \u00ab12,2\t\u00ab12,3\n\u00ab12,1y\t\u00ab12,2y\t\u00ab12,3y\nym12 c\u00ab1,3 + efV1,y\t\nym12 s\u00ab1,3 \u2014 e/\u00ab1,,\t\n\u00ab12,1, + ^12,1 s\u00ab1,3m12,1\t\n\u00ab12,1y\tlm12,1 c\u00ab1,3m12,1\n\u00ab12,2 , + lm12 ,2 s\u00ab1,3m12,12 \u00ab12,2y \u2014 tm.12,2 c\u00ab1,3\u212212,12\n(C.97)\n(C.98)\n(C.99)\n(C.100)\n(C.101)\n(C.102)\n(C.103)\n$\u00ab2\n0 0 1\n1 0\tq\u00ab2,2\n0 1\tq\u00ab2,1\n(C.104)\nSm21\nm21,1x m-21,1y \u212221,2x m-21,2\u201e\n\u212221,3x\nm-21,3\u201e\nefV2,x\ne/\u00ab2,y\n1 1 1\t\nm21,1x m21,2x \u212221,3x\t(C.105)\n\u212221,1y m21,2y \u212221,3\u201e\t\nym2i cv2,3 + e/\u00ab2,y\t(C.106)\nym21 sV2,3 \u2014 e/\u00ab2,x\t(C.107)\nm21,1x + lm21,1 sV2,3m21,1\t(C.108)\nm 21,1 y \u2014 lm21,1 C\u00ab2,3\u212221,1\t(C.109)\nm21,2x + lm21,2 SV2,3m21,12\t(C.110)\nm21,2y \u2014 lm21,2 cV2,3m-21,12\t(C.111)\nqV2,1 + ^\u00ab2,3 C\u00ab2,3\t(C.112)\n7'2.2 + ^\u00ab2,3 s\u00ab2,3\t(C.113)\n$ m22\n\u212222,1x\nm22,1\u201e\n\u212222,2x\n\u212222,2y\n\u212222,3x\nm22,3y\n111\t\nm22,1x m22,2x\tm22,3x\t(C.114)\nm22,1y m22,2y\tm22,3y\t\nym22 C\u00ab2,3 + e/\u00ab2,y\t(C.115)\nym22 S\u00ab2,3 \u2014 ef\u00ab2,x\t(C.116)\nm22,1x + ^22,1 S\u00ab2,3^22.1\t(C.117)\nm22,1y \u2014 lm22,1 C\u00ab2,3^22.1\t(C.118)\nm22,2x + lwb22,2 Sv2,3m22,12\t(C.119)\nm22,2y\t^m22,2 ^\u00ab2.3^22.12\t(C.120)\nSt =\n0\t0\t1\n1\t0\tqt2\n0\t1\t\u2014th1\n(C.121)\n\t0\t0\t1\n$rii =\t\tSt3\tqt2 + qrii,i st3 + qrii,2 ct3\n\t\tct3\tqti\tqrii,i ct3 1 qrii,2 st3\n\t0\t0\t1\n$ri2 =\tCt3\t~St3\tqt2 + qri2,i st3 + qri2,2 ct3\n\tst3\tCt3\tqti\tqri2,i ct3 + qri2,2 st3\n\t0\t0\t1\n$r2i =\tCt3\t~St3\tqt2 + qr2i,i st3 + qr2i,2 ct3\n\tst3\tCt3\tqti\tqr'2i,i ct3 + qr2i,2 st3\n\t0\t0\t1\n$r22 =\tCt3\t~St3\tqt2 + qr22,i st3 + qr22,2\t3\n\tst3\tCt3\tqti\tqr'22,i ct3 + qr22,2 st3\n(C.122)\n(C.123)\n(C.124)\n(C.125)\nUm particionamento para resolver a cinem\u00e1tica do sistema para os manipuladores \u00e9 apresentado na Equa\u00e7\u00e3o C.126. Considera-se que o espa\u00e7o de trabalho \u00e9 livre de obst\u00e1culos e que os ve\u00edculos permanecem estacion\u00e1rios nesse cen\u00e1rio.\n\n= 0\nNq \u2014 [$vi Smn Smi2 Sv2 Sm2i \u00eam22 _ Bt_Srii _Sri2 _ Sr2i _ Sr22\n\u2019 \u00c7t\nq mii\n\u00c7 mi2\nq v2\nq m2i\n\u00c7 m22\nq t \u00c7 rii\n\u00c7 ri2 \u00c7 r2i\n- *4r22 -(C.126) Como no cen\u00e1rio anterior, podem haver diferentes particionamentos\nde acordo com as exig\u00eancias da tarefa.\n274\nAP\u00caNDICE D - Mapa Conceituai da Rob\u00f3tica Subaqu\u00e1tica\nVer arquivo tese-mapaConceitual.pdf\nProjeto hospedado em https://sourceforge.net/projects/ kastframework"}]}}}