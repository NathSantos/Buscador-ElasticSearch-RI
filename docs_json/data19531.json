{"add": {"doc": {"field": [{"@name": "docid", "#text": "BR-TU.23927"}, {"@name": "filename", "#text": "8206_Cire_AndreAugusto_M.pdf"}, {"@name": "filetype", "#text": "PDF"}, {"@name": "text", "#text": "FICHA CATALOGR\u00c1FICA ELABORADA PELA\n            BIBLIOTECA DO IMECC DA UNICAMP\n\n            Bibliotec\u00e1ria: Maria J\u00falia Milani Rodrigues CRB8a / 2116\n\nCir\u00e9, Andr\u00e9 Augusto\n\nC496m Modelos  computacionais  para  o  escalonamento  de  tarefas  em\n\nredes de dutos / Andr\u00e9 Augusto Cir\u00e9 -- Campinas, [S.P. :s.n.], 2008. \n\nOrientadores : Arnaldo Vieira Moura ; Cid Carvalho de Souza\n\nDisserta\u00e7\u00e3o  (mestrado)  -  Universidade  Estadual  de  Campinas, \n\nInstituto de Computa\u00e7\u00e3o.\n\n1.  Restri\u00e7\u00f5es  (Intelig\u00eancia  artificial).  2.  Pesquisa  operacional.  3.\n\nOtimiza\u00e7\u00e3o combinat\u00f3ria.  4. Petr\u00f3leo  - Transporte.   I.  Moura, Arnaldo\n\nVieira.   II.  Souza,  Cid  Carvalho  de.  III.  Universidade  Estadual  de \n\nCampinas. Instituto de Computa\u00e7\u00e3o. IV. T\u00edtulo.\n\nT\u00edtulo em ingl\u00eas: Computational models for task scheduling in pipeline networks\n\nPalavras-chave em ingl\u00eas (Keywords): 1. Constraints (Artificial intelligence. 2. Operational \nresearch. 3. Combinatorial optimization. 4. Petroleum transportation. \n\n\u00c1rea de concentra\u00e7\u00e3o: Pesquisa operacional\n\nTitula\u00e7\u00e3o: Mestre em Ci\u00eancia da Computa\u00e7\u00e3o\n\nBanca examinadora: \n\nProf. Dr. Arnaldo Vieira Moura (IC-UNICAMP)\nProf. Dr. Eduardo Camponogara (DAS-UFSC)\nProf. Dr. Zanoni Dias (IC-UNICAMP)\nProf. Dr. Nizam Omar (Univ.Presbiteriana Mackenzie)\nProfa. Dra. Anamaria Gomide (IC-UNICAMP)\n\nData da defesa: 18/08/2008\n\nPrograma de p\u00f3s-gradua\u00e7\u00e3o: Mestrado em Ci\u00eancia da Computa\u00e7\u00e3o\n\n\n\n\n\nInstituto de Computac?a?o\n\nUniversidade Estadual de Campinas\n\nModelos Computacionais para o Escalonamento de\n\nTarefas em Redes de Dutos\n\nAndre? Augusto Cire?1\n\nJulho de 2008\n\nBanca Examinadora:\n\n\u2022 Prof. Dr. Arnaldo Vieira Moura (Orientador)\n\n\u2022 Prof. Dr. Eduardo Camponogara\n\nDepartamento de Automac?a?o e Sistemas, UFSC\n\n\u2022 Prof. Dr. Zanoni Dias\n\nInstituto de Computac?a?o, UNICAMP\n\n\u2022 Prof. Dr. Nizam Omar (Suplente)\n\nUniversidade Prebisteriana Mackenzie\n\n\u2022 Profa. Dra. Anamaria Gomide (Suplente)\n\nInstituto de Computac?a?o, UNICAMP\n\n1Suporte financeiro de: Fundac?a?o de Amparo a? Pesquisa do Estado de Sa?o Paulo (processo 05/57344-\n7), 2006-2008.\n\niv\n\n\n\nResumo\n\nEsta dissertac?a?o de Mestrado trata de um problema real de escalonamento, no qual\n\numa complexa rede de dutos e? utilizada para distribuic?a?o de derivados de petro?leo e\n\nbio-combust??veis de refinarias a mercados locais. Dutos constituem a alternativa de trans-\n\nporte mais vantajosa em termos econo?micos e ambientais, mas trazem consigo um amplo\n\nconjunto de restric?o?es operacionais dif??ceis, envolvendo sequ?enciamento de produtos, ca-\n\npacidade de tanques, controle de taxa de vaza?o, controle de estoque e muitas outras. O\n\nobjetivo do problema esta? em escalonar operac?o?es de bombeamento nos dutos de forma a\n\nsatisfazer as demandas locais em cada o?rga?o de distribuic?a?o, dentro de um horizonte de\n\nplanejamento pre?-definido.\n\nPara resolve?-lo, este trabalho propo?e uma nova abordagem h??brida composta por duas\n\nfases. Primeiramente, uma fase de planejamento define os volumes de produto que devem\n\nser transmitidos entre o?rga?os para que as demandas sejam completamente atendidas. Em\n\nseguida, uma fase de escalonamento e? responsa?vel por criar e escalonar as operac?o?es de\n\nbombeamento, de forma a garantir que os volumes definidos na fase anterior sejam efe-\n\ntivamente enviados. Esta dissertac?a?o foca na fase de escalonamento, e duas formulac?o?es\n\nem Programac?a?o por Restric?o?es (PR) sa?o apresentadas para modela?-la. Conforme foi\n\nverificado, a flexibilidade de PR e? fundamental para representar e satisfazer restric?o?es\n\nque, usualmente, sa?o desconsideradas na literatura, mas que sa?o essenciais para a via-\n\nbilidade operacional das soluc?o?es. A estrate?gia completa foi implementada e produziu\n\nresultados adequados e promissoras para 5 insta?ncias reais fornecidas pela Petrobras.\n\nTais insta?ncias conte?m 30 dutos, mais de 30 produtos e 14 o?rga?os de distribuic?a?o que\n\ncontemplam cerca de 200 tanques.\n\nv\n\n\n\nAbstract\n\nThis dissertation deals with a very difficult overly-constrained scheduling challenge: how\n\nto operate a large pipeline network in order to adequately transport oil derivatives and\n\nbiofuels from refineries to local markets. Pipeline network systems are considered the\n\nmajor option for transporting these product types, in view of their many economic and\n\nenvironmental advantages. However, they pose serious operational difficulties related to\n\nproduct sequencing, flow rates and tank capacities.\n\nThe challenge is how to schedule individual pumping operations, given the daily pro-\n\nduction and demand of each product, at each location in the network, over a given time\n\nhorizon. In order to tackle this problem, we propose a novel hybrid approach which com-\n\nprises two phases. Firstly, a planning phase decides the necessary volume transmission\n\namong depots to satisfy the given demands. Finally, a scheduling phase generates and\n\nschedules the pumping operations that guarantee the required volume transmission. This\n\ndissertation focuses on the scheduling phase, in which two new Constraint Programming\n\n(CP) models are proposed. The CP flexibility plays a key role in modeling and satisfying\n\noperational constraints that are usually overlooked in literature, but that are essential\n\nin order to guarantee viable solutions. The full strategy was implemented and produced\n\nadequate and promising results when tested over 5 large real instances from Petrobras.\n\nThese instances have a complex topology with around 30 interconnecting pipelines, over\n\n30 different products in circulation, and about 14 distribution depots which harbor more\n\nthan 200 tanks.\n\nvi\n\n\n\nAgradecimentos\n\nAgradec?o primeiramente a? minha fam??lia, Antonio, Maria Antonia e Danielle, pelo cari-\n\nnho, amor, pacie?ncia e pelo apoio incondicional a? minha educac?a?o, sem a qual na?o teria\n\nchegado ate? aqui.\n\nAgradec?o tambe?m aos meus orientadores, Prof. Arnaldo e Prof. Cid, pela oportunidade,\n\namizade, por me iniciarem na a?rea de pesquisa e por constitu??rem o modelo de profissional\n\nque almejo ser no futuro.\n\nAgradec?o a todos os meus amigos pela convive?ncia, pelos o?timos momentos nesses u?ltimos\n\nanos e por todo o apoio que me deram. Em especial ao Tony, pela amizade, pacie?ncia e\n\ngrandes ide?ias nos dias, noites e madrugadas acordadas que passamos desenvolvendo este\n\nprojeto.\n\nAgradec?o a? FAPESP, pelo suporte financeiro ao meu projeto de pesquisa. A? Petrobras,\n\nparticularmente Fernando Marcellino, Andre? Lima, Leandro Barcelos e Enio Medeiros,\n\npelo fornecimento dos dados e, principalmente, pela oportunidade de participar deste\n\nprojeto. Tambe?m agradec?o aos funciona?rios do Instituto de Computac?a?o da UNICAMP,\n\nsempre dispostos a ajudar nos momentos que precisamos.\n\nForc?a sempre!\n\nvii\n\n\n\nSuma?rio\n\nResumo v\n\nAbstract vi\n\nAgradecimentos vii\n\n1 Introduc?a?o 1\n\n1.1 Objetivos do Projeto . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 2\n\n1.2 Organizac?a?o do Texto . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 3\n\n2 O Problema do Transporte em Redes de Dutos 4\n\n2.1 Caracterizac?a?o do PTRD . . . . . . . . . . . . . . . . . . . . . . . . . . . . 5\n\n2.2 Para?metros e Constantes Gerais . . . . . . . . . . . . . . . . . . . . . . . . 5\n\n2.2.1 Restric?o?es dos O?rga?os . . . . . . . . . . . . . . . . . . . . . . . . . 6\n\n2.2.2 Restric?o?es dos Dutos . . . . . . . . . . . . . . . . . . . . . . . . . . 8\n\n2.2.3 Dados Dina?micos da Rede . . . . . . . . . . . . . . . . . . . . . . . 10\n\n2.3 Soluc?a?o e Objetivos . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 11\n\n2.4 Modelo da Rede de Dutos . . . . . . . . . . . . . . . . . . . . . . . . . . . 11\n\n2.5 Topologia Brasileira . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 12\n\n3 Revisa?o Bibliogra?fica 14\n\n4 Arquitetura do Modelo de Resoluc?a?o 19\n\n4.1 Fase de Planejamento . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 20\n\n4.2 Fase de Escalonamento . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 21\n\n5 Conceitos Ba?sicos de Programac?a?o por Restric?o?es 23\n\n5.1 Satisfac?a?o de Restric?o?es . . . . . . . . . . . . . . . . . . . . . . . . . . . . 24\n\n5.1.1 Modelagem em PR . . . . . . . . . . . . . . . . . . . . . . . . . . . 25\n\n5.2 Estrate?gias de Busca . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 26\n\nviii\n\n\n\n5.3 Otimizac?a?o em PR . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 28\n\n6 Modelo Inicial para o Problema de Escalonamento 29\n\nPro?logo . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 29\n\n1 Introduction . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 31\n\n2 Literature Review . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 33\n\n3 Problem Description . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 34\n\n3.1 Problem Constraints . . . . . . . . . . . . . . . . . . . . . . . . . . 34\n\n3.2 Solution and Goals . . . . . . . . . . . . . . . . . . . . . . . . . . . 35\n\n4 The Solver Framework . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 35\n\n4.1 The Planning Phase . . . . . . . . . . . . . . . . . . . . . . . . . . 36\n\n4.2 The Scheduling Phase . . . . . . . . . . . . . . . . . . . . . . . . . 38\n\n5 Results . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 43\n\n6 Conclusions and Further Work . . . . . . . . . . . . . . . . . . . . . . . . . 44\n\nBibliografia 47\n\nEp??logo . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 49\n\n7 Modelo Aprimorado para o Problema de Escalonamento 50\n\nPro?logo . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 50\n\n1 Introduction . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 51\n\n2 Why CP and Related Work . . . . . . . . . . . . . . . . . . . . . . . . . . 54\n\n3 How CP ? . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 55\n\n4 Results . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 65\n\n5 Added Value and Conclusions . . . . . . . . . . . . . . . . . . . . . . . . . 66\n\nBibliografia 69\n\nEp??logo . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 71\n\n8 Conclusa?o 72\n\n9 Trabalhos Futuros 74\n\nBibliografia 76\n\nix\n\n\n\nLista de Tabelas\n\n3.1 Comparac?a?o entre abordagens anteriores. . . . . . . . . . . . . . . . . . . . 15\n\n7 Modelo Inicial para o Problema de Escalonamento 29\n\n6.1 Notac?a?o utilizada no modelo PR. . . . . . . . . . . . . . . . . . . . . . . . 30\n\n2 Solver Results . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 45\n\n3 Solution Example . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 45\n\n8 Modelo Aprimorado para o Problema de Escalonamento 50\n\n1 Solution Example . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 66\n\n2 Solver Results . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 67\n\nx\n\n\n\nLista de Figuras\n\n2.1 Modelo esquema?tico de uma rede de dutos. . . . . . . . . . . . . . . . . . . 12\n\n2.2 Representac?a?o do sistema de dutos da regia?o Sudeste de Sa?o Paulo (figura\n\nfornecida pela Petrobras). . . . . . . . . . . . . . . . . . . . . . . . . . . 13\n\n7 Modelo Inicial para o Problema de Escalonamento 29\n\n1 A pipeline network example. . . . . . . . . . . . . . . . . . . . . . . . . . . . 35\n\n2 Interaction between phases in the solver. . . . . . . . . . . . . . . . . . . . . . 36\n\n3 Instance 2 Tankage Evolution . . . . . . . . . . . . . . . . . . . . . . . . . . 46\n\n8 Modelo Aprimorado para o Problema de Escalonamento 50\n\n1 petrobras pipeline networks. . . . . . . . . . . . . . . . . . . . . . . . . . . 52\n\n2 A pipeline network example. . . . . . . . . . . . . . . . . . . . . . . . . . . . 52\n\n3 Example of a flow reversal. . . . . . . . . . . . . . . . . . . . . . . . . . . . . 55\n\n4 Solver Framework. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 55\n\nxi\n\n\n\nCap??tulo 1\n\nIntroduc?a?o\n\nProblemas operacionais envolvendo agendamento e planejamento te?m obtido grande des-\n\ntaque nos u?ltimos anos, e sua importa?ncia deriva da necessidade da tomada ra?pida de\n\ndeciso?es em ambientes de incerteza e de requerimentos operacionais extremamente com-\n\nplexos. Neste contexto, o planejamento da distribuic?a?o de a?lcoois e produtos derivados\n\ndo petro?leo adquire uma especial importa?ncia. Primeiramente, por envolver uma grande\n\nquantidade de recursos materiais e humanos, como consequ?e?ncia da dificuldade em encon-\n\ntrar agendamentos capazes de suprir toda a demanda sem violar restric?o?es operacionais\n\nda distribuic?a?o. E, em segundo lugar, o fato do cena?rio petrol??fero brasileiro ter deixado\n\nde ser um monopo?lio estatal, a partir de 1994, faz com que uma log??stica eficiente seja\n\ncondic?a?o essencial neste ambiente de alta competitividade.\n\nEsta distribuic?a?o pode ser realizada por diversos meios, tal como mar??timo, rodovia?rio\n\ne ferrovia?rio. Contudo, a principal forma de distribuic?a?o, no Brasil e no mundo, e? via uma\n\nrede de dutos, em decorre?ncia principalmente de sua viabilidade econo?mica e seguranc?a\n\nambiental [32]. De acordo com dados da pro?pria Petrobras, ha? no Brasil mais de\n\n11.300 km de dutos, que distribuem cerca de 1.600 barris por dia de derivados do petro?leo\n\npara o mercado consumidor [31].\n\nAtualmente, o agendamento da distribuic?a?o nas malhas de oleodutos no Brasil e? essen-\n\ncialmente manual, caracterizando-se como uma atividade custosa e lenta, o que dificulta a\n\nsimulac?a?o de cena?rios que possam reduzir custos e atender mais eficientemente a demanda\n\npor tais produtos. Desta forma, ferramentas computacionais de otimizac?a?o exerceriam um\n\npapel fundamental no apoio a? decisa?o deste planejamento, pois sa?o capazes de lidar ra-\n\npidamente com um grande conjunto de varia?veis e restric?o?es, fornecendo alternativas de\n\nsoluc?o?es mais diversificadas, com menor custo e mais detalhadas. Consequ?entemente,\n\nmesmo que as soluc?o?es na?o fossem totalmente aproveitadas, ja? seriam excelentes pontos\n\nde partida para um posterior refinamento e ana?lise.\n\n1\n\n\n\n1.1. Objetivos do Projeto 2\n\n1.1 Objetivos do Projeto\n\nEste projeto de mestrado trata do estudo de modelos para a distribuic?a?o de a?lcoois e\n\nderivados do petro?leo por meio de uma rede de dutos. Ele surge de um problema pra?tico,\n\noriginado na Petrobras, parceira na especificac?a?o dos requisitos e no fornecimento de\n\ndados. Sua importa?ncia, desta forma, na?o se limita apenas a? pesquisa acade?mica, mas\n\ntambe?m envolve o esforc?o de criar metodologias u?teis e aplica?veis para problemas de\n\ntransporte em dutos de grande complexidade.\n\nContudo, a complexidade operacional inerente a?s topologias dutovia?rias torna-o um\n\nproblema de dif??cil resoluc?a?o. Na?o ha? atualmente uma modelagem matema?tica sufici-\n\nentemente compacta e abrangente que aborde todos os requisitos mais fundamentais do\n\nproblema. Consequ?entemente, os modelos de otimizac?a?o ou satisfac?a?o existentes hoje na\n\nliteratura, apesar de eficientes, geram soluc?o?es muito aque?m daquelas operacionalmente\n\nfact??veis. Isto porque sa?o fortemente baseadas em relaxac?o?es do problema, tornando-o\n\nassim mais adequado para metodologias de otimizac?a?o cla?ssicas, como meta-heur??sticas e\n\nProgramac?a?o Linear Inteira [40].\n\nPortanto, diferentemente dos estudos existentes, o objetivo do projeto e? propor mode-\n\nlos capazes de representar todo o amplo nu?mero de requisitos operacionais do problema\n\nem formulac?o?es mais compactas, de forma que uma soluc?a?o va?lida destes modelos esteja\n\nbastante pro?xima de uma soluc?a?o fact??vel para os operadores da rede de dutos. Tais\n\nmodelos devem contemplar tre?s outras caracter??sticas: mostrarem-se promissores para a\n\nresoluc?a?o de insta?ncias reais, fornecidas pela pro?pria Petrobras; serem flex??veis para a\n\nmodelagem de outros requisitos operacionais; e, por fim, serem computa?veis por diferentes\n\nalgoritmos de resoluc?a?o, servindo como base para futuras pesquisas.\n\nA fim de cumprir esses objetivos, montou-se um grupo de pesquisa formado por pro-\n\nfessores e estudantes da UNICAMP, ale?m de funciona?rios da pro?pria Petrobras, em\n\num projeto de longo prazo denominado SCONSUELO1. O grupo era inicialmente com-\n\nposto pelos professores Arnaldo V. Moura, Cid C. de Souza, pelos estudantes de mestrado\n\nAndre? A. Cire?, Tony M.T. Lopes, e pelos funciona?rios da Petrobras, Fernando Mar-\n\ncellino, Andre? Lima, Leandro Barcelos e Enio Medeiros. No te?rmino dessa dissertac?a?o, o\n\ngrupo completou dois anos de pesquisa, incluindo coleta de dados, especificac?a?o do pro-\n\nblema, modelagem e testes computacionais. Os avanc?os eram periodicamente fornecidos\n\naos responsa?veis pelo planejamento de dutos da Petrobras, os quais relatavam as carac-\n\nter??sticas operacionais das soluc?o?es deveriam ser melhor abordadas pelos solucionadores.\n\nA arquitetura de resoluc?a?o desenvolvida pelo grupo propo?e uma divisa?o do problema\n\nem duas fases, planejamento e escalonamento, ambas independentes e que permitem a\n\n1Solucionador para Consuelo, ja? que os resultados dos modelos devem ser compat??veis com o sistema\nde simulac?a?o da Petrobras, denominado Consuelo.\n\n\n\n1.2. Organizac?a?o do Texto 3\n\naplicac?a?o de diferentes me?todos para resolve?-las. Este projeto de mestrado foca na parte\n\nde escalonamento, por estar relacionada a? satisfac?a?o dos requisitos operacionais da rede de\n\ndutos. Para enta?o atingir os objetivos de modelagem descritos anteriormente, o trabalho\n\napresenta uma formulac?a?o exata em Programac?a?o por Restric?o?es [23], ferramenta que\n\nprove? uma grande liberdade de representac?a?o e resoluc?a?o.\n\nAtualmente, o projeto SCONSUELO conta com diversos alunos de iniciac?a?o cient??fica\n\ne novos estudantes de mestrado, os quais utilizara?o os me?todos desenvolvidos ate? enta?o\n\ncomo base para algoritmos mais robustos e capazes de lidar com um maior nu?mero de\n\nrestric?o?es operacionais. A ide?ia inicial e? que a fase de escalonamento seja resolvida utili-\n\nzando te?cnicas de relaxac?a?o e metaheuristicas sobre os modelos PR aqui descritos, o que\n\nreforc?a a contribuic?a?o deste projeto de mestrado para futuras pesquisas relacionadas ao\n\nproblema de escalonamento em dutos.\n\n1.2 Organizac?a?o do Texto\n\nA dissertac?a?o de Mestrado esta? organizada como segue. O cap??tulo 2 descreve em deta-\n\nlhes o problema de Transporte em Dutos e seus para?metros, e o cap??tulo 3 apresenta as\n\nprincipais refere?ncias da literatura de programac?a?o de dutos. Utilizando-se dos trabalhos\n\nanteriores como base, o cap??tulo 4 descreve a proposta de resoluc?a?o do problema, a qual\n\nsera? desenvolvida em detalhes nos cap??tulos 6 e 7. Por fim, o cap??tulo 8 exibe as concluso?es\n\ne cap??tulo 9 os poss??veis trabalhos futuros, seguido pelas refere?ncias bibliogra?ficas.\n\n\n\nCap??tulo 2\n\nO Problema do Transporte em\n\nRedes de Dutos\n\nEmpresas de petro?leo dispo?em usualmente de um conjunto de refinarias e terminais,\n\ndenominados o?rga?os, os quais sa?o dedicados a? produc?a?o e distribuic?a?o de derivados de\n\npetro?leo e bio-combust??veis aos seus mercados consumidores. As campanhas de produc?a?o\n\ndas refinarias e de entrega aos mercados sa?o traduzidas, respectivamente, em valores\n\nestimados de produc?a?o e demanda de produtos em cada o?rga?o da rede [4, 6].\n\nContudo, os o?rga?os na?o sa?o auto-suficientes no suprimento de seus mercados locais.\n\nTorna-se necessa?rio, portanto, o uso de algum meio de distribuic?a?o para evitar a falta de\n\nproduto nos terminais e para escoar a produc?a?o em excesso nas refinarias. Tal transporte\n\ne? predominantemente feito por meio de uma rede de dutos, a alternativa mais vantajosa\n\nem termos econo?micos, operacionais e ambientais [32].\n\nOs dutos possuem capacidades, sentidos permitidos de fluxo, vazo?es de bombeamento\n\ne podem ser usados para movimentar diferentes tipos de produto consecutivamente. Note\n\nque alguns dutos permitem vaza?o em ambos os sentidos, com inverso?es de fluxo. Outra\n\ncaracter??stica operacional e? que os dutos devem estar sempre completamente preenchidos,\n\nou seja, a transmissa?o de um volume implica que necessariamente outro volume deve ser\n\nbombeado em seguida.\n\nOs produtos, por sua vez, esta?o associados a um conjunto de restric?o?es de interface, isto\n\ne?, apenas podem ser bombeados consecutivamente em um duto se forem compat??veis entre\n\nsi, condic?a?o essencial para a manutenc?a?o de um n??vel de qualidade aceita?vel. Cada o?rga?o\n\ntambe?m conte?m restric?o?es locais de bombeamento e recebimento de produtos, decorrentes\n\ndas conexo?es internas entre tanques e dutos.\n\nO Problema de Transporte em Redes de Dutos (PTRD), desta forma, consiste em\n\ndeterminar as operac?o?es a serem realizadas em uma rede de dutos a fim de escoar a\n\nproduc?a?o e atender um dado conjunto de demandas, considerando um horizonte tem-\n\n4\n\n\n\n2.1. Caracterizac?a?o do PTRD 5\n\nporal pre?-estabelecido. Esta programac?a?o deve satisfazer todas as restric?o?es operacionais\n\nparticulares dos o?rga?os e dutos, ale?m de buscar reduzir os custos de transporte do sistema.\n\n2.1 Caracterizac?a?o do PTRD\n\nA seguir, sa?o descritos os dados e restric?o?es que formalizam o dom??nio do PTRD, ne-\n\ncessa?rios para definir as insta?ncias e suas soluc?o?es va?lidas. Tal caracterizac?a?o pode ser\n\ndividida em quatro classes: para?metros e constantes gerais do problema, restric?o?es dos\n\no?rga?os, restric?o?es dos dutos e dados dina?micos da rede. As tre?s primeiras classes esta?o\n\nrelacionadas a? topologia f??sica e pouco muta?vel da rede, enquanto a u?ltima varia conforme\n\no horizonte de planejamento.\n\n2.2 Para?metros e Constantes Gerais\n\nHa? quatro para?metros fundamentais para o PTRD, conforme relac?a?o abaixo.\n\n1. Unidade de Tempo (u.t.): designa a unidade de tempo real que sera? utilizada para a\n\ndiscretizac?a?o da insta?ncia e precisa?o dos modelos desenvolvidos. Nos cena?rios reais,\n\ne? comum que seja utilizado minuto como a u.t. ba?sica.\n\n2. Unidade de Volume (u.v.): analogamente a? u.t., designa a unidade de volume real\n\nque sera? utilizada para as vazo?es e capacidades. Usualmente sa?o metros cu?bicos.\n\n3. Horizonte (H): um nu?mero inteiro que designa o horizonte de execuc?a?o em unidades\n\nde tempo, isto e?, o tamanho da janela de tempo da insta?ncia na qual o planejamento\n\ne escalonamento devem ser aplicados. Considera-se tambe?m que o instante inicial\n\nde planejamento e? 1. Por exemplo, dados H = 14400 e u.t. em minutos, te?m-se um\n\nhorizonte de 10 dias em tempo real.\n\n4. Conjunto de Produtos (P): o conjunto P = {p1, p2, ..., pnp} designa os produtos que\n\nsa?o armazenados e transportados pela rede. Um grupo de produtos e? um subconjunto\n\nde P formado por produtos com certas caracter??sticas qu??micas semelhantes, tais\n\ncomo os grupos de gasolinas, dieseis e a?lcoois. Algumas restric?o?es, tal como as\n\nde interface, podem ser definidas sobre grupos ao inve?s de produtos individuais,\n\nfacilitando a representac?a?o do problema.\n\nProdutos no PTRD sa?o considerados fung??veis ou intercambia?veis [14], ou seja, na?o\n\nha? diferenciac?a?o entre volumes de produtos p distribu??dos na rede. Esta hipo?tese\n\nsurge do fato de que, na pra?tica, as quantidades de um mesmo produto p proveni-\n\nentes de origens distintas possuem tambe?m qualidades diferenciadas, apesar de sua\n\n\n\n2.2. Para?metros e Constantes Gerais 6\n\nequivale?ncia qu??mica. Caso esta diferenciac?a?o seja necessa?ria, e? poss??vel explicita?-la\n\nnesta formulac?a?o criando um novo produto para cada n??vel de qualidade desejado.\n\nUm exemplo no cena?rio real ocorre com a gasolina de exportac?a?o e a gasolina comum.\n\nApesar de na pra?tica serem o mesmo produto, ambas conte?m especificac?o?es de\n\nqualidade bastante distintas. Desta forma, e? importante que sejam consideradas\n\ncomo produtos distintos, com dados de produc?a?o e demandas desagregados.\n\n2.2.1 Restric?o?es dos O?rga?os\n\nUma rede de dutos possui um conjunto de o?rga?os Org = {o1, o2, ..., ono}, responsa?veis\n\npela produc?a?o, armazenamento e distribuic?a?o de produtos. Um nu?mero significativo das\n\nrestric?o?es de um determinado o?rga?o o ? Org esta? relacionado com seu complexo de\n\ntanques, dado pelo conjunto T (o) = {t1, t2, ..., tnto}. Tais restric?o?es sa?o descritas a seguir,\n\ncom T q =\n?\n\no?Org T (o).\n\nC1: Para um dado tanque t ? T q, deve-se respeitar sua capacidade ma?xima de armaze-\n\nnamento cap(t) e nunca violar sua capacidade m??nima, 0.\n\nC2: Um tanque t ? T q pode armazenar apenas um tipo de produto prod(t) ? P durante\n\ntodo o horizonte de planejamento, condic?a?o imposta como um requisito de qualidade.\n\nAle?m disso, usualmente ha? mais de um tanque por produto em cada o?rga?o, mas na?o\n\nnecessariamente um o?rga?o conte?m tanques para todos os produtos da rede. Se\n\nT (o) = ? para um dado o ? Org, o o?rga?o e? denominado entroncamento, isto e?,\n\nutilizado apenas para a passagem de produtos.\n\nNo cena?rio real, ha? casos em que certos tanques podem ser utilizados para o ar-\n\nmazenamento de produtos diferentes dos originalmente atribu??dos, o que envolve a\n\naplicac?a?o de um custo fixo relativo a? limpeza e a demais detalhes operacionais. Como\n\nsa?o casos indeseja?veis e muitas vezes provenientes da dificuldade do planejamento\n\nmanual, a restric?a?o C2 e? inclusive requisitada pelos operadores da Petrobras.\n\nC3: Um produto pode ser tanto bombeado para um tanque ou dele retirado, desde que\n\nessas operac?o?es na?o sejam simulta?neas. Isto significa que, ao iniciar uma inserc?a?o\n\nou retirada em um tanque, toda a operac?a?o deve ser completada antes que qualquer\n\noutra seja realizada neste tanque.\n\nUma excec?a?o a? este caso ocorre em o?rga?os que representam terminais portua?rios.\n\nDevido ao per??odo restrito em que os navios podem ficar parados nos portos, muitas\n\nvezes volumes de produtos devem ser enviados diretamente dos dutos para os navios\n\nsem pre?-estocagem. Para tanto, realiza-se uma operaca?o pulma?o, onde o produto e?\n\nsimultaneamente bombeado nos dutos para um tanque, e do tanque para o navio\n\n\n\n2.2. Para?metros e Constantes Gerais 7\n\ncom uma vaza?o menor. No entanto, a operac?a?o pulma?o e? apenas poss??vel para alguns\n\no?rga?os que possuem esta capacidade hidra?ulica, definido pelo conjunto P ulm ? Org.\n\nAle?m disso, como hipo?tese, um tanque que esvaziou pode ser reabastecido sem que\n\nseja necessa?rio considerar um tempo para limpeza e preparo para o armazenamento\n\nde volume adicional.\n\nC4: Se o produto a ser inserido em um tanque e? produzido localmente, isto e?, no\n\nmesmo o?rga?o, o tanque so? pode receber este produto se estiver completamente vazio,\n\ncondic?a?o imposta tambe?m por questo?es de qualidade.\n\nC5: Caso ocorra a mistura de dois volumes produzidos em o?rga?os distintos num certo\n\ntanque, a qualidade do produto devera? ser reverificada antes da entrega ao mercado\n\nconsumidor ou bombeamento para outros o?rga?os. Isto e? representado aqui como um\n\ntempo de certificac?a?o Tc, considerado entre o instante final da mistura e o instante\n\ninicial das demais operaco?es no tanque.\n\nUma vez definidas as condic?o?es de armazenamento de produto nos o?rga?os, e? poss??vel\n\nlistar as restric?o?es referentes a?s necessidades de estocagem impostas pelos mercados, ale?m\n\ndaquelas relacionadas aos limites de envio e recebimento.\n\nC6: O valor de estoque de um o?rga?o o ? Org, produto p ? P e instante i e? dado somando-\n\nse o volume em i de todos os tanques T (o) que armazenam p. Em todos os o?rga?os\n\ne instantes, tal estoque deve respeitar limitantes de estoque m??nimo, est min(o, p),\n\ne estoque ma?ximo, est max(o, p). Esta restric?a?o e? proveniente da necessidade de\n\nse manter estoques de seguranc?a para incentivar o escoamento da produc?a?o e para\n\neventuais problemas na distribuic?a?o, tal como manutenc?o?es emergenciais de dutos.\n\nC7: Devido a?s restric?o?es sobre o conjunto de bombas e va?lvulas hidra?ulicas em um certo\n\no?rga?o o ? Org, deve ser observado um nu?mero ma?ximo de operac?o?es simulta?neas de\n\nenvio, env max(o). Como sa?o relativas aos bombeamentos, na?o ha? uma restric?a?o\n\nana?loga para recebimento de produtos em o.\n\nC8: Alinhamentos proibidos: o complexo de conexo?es internas aos o?rga?os, principal-\n\nmente refinarias, na?o permite que determinadas operac?o?es em oleodutos ocorram\n\nsimultaneamente. Cada configurac?a?o na?o-pass??vel de uso para transporte de pro-\n\ndutos e? associada a um alinhamento proibido, um co?digo que agrupa as operac?o?es\n\nproibidas de serem exercitadas simultaneamente no o?rga?o.\n\nSupondo que Align(o) sejam os alinhamentos proibidos de o ? Org, cada alinha-\n\nmento alin ? Align(o) e? formado por um conjunto de duplas (p, s), onde p ? P\n\n\n\n2.2. Para?metros e Constantes Gerais 8\n\ne s (sentido) indica se a operac?a?o e? relativa ao envio ou recebimento. Por exem-\n\nplo, o alinhamento alin = {(gasolina, envio), (diesel, recebimento)} significa que as\n\noperac?o?es de envio de gasolina e recebimento de diesel na?o podem ser simulta?neas.\n\nUm certo alinhamento pode envolver diversos produtos e diferentes direc?o?es. Ale?m\n\ndisso, como esta? relacionado a?s conexo?es internas de um o?rga?o, na?o depende dos\n\ndutos de entrada ou sa??da de produto.\n\nEssa forma de representac?a?o facilita a modelagem do PTRD, evitando a necessidade\n\nde explicitar detalhes da topologia dos circuitos hidra?ulicos e dutos internos ao o?rga?o.\n\nC9: Devido principalmente ao custo mais alto da energia ele?trica em certos per??odos\n\ndo dia, um o?rga?o deve obededer a per??odos de sazonalidade, momentos em que\n\nnenhuma operac?a?o pode ser iniciada. Para um dado o?rga?o o ? Org, per??odos\n\nde sazonalidades sa?o dados como um conjunto de intervalos de tempo, saz(o) =\n\n{(inicio1, f im1), ..., (inicionsaz(o), f imnsaz(o))}.\n\nC10: Operac?o?es tambe?m na?o podem ser nem iniciadas, nem terminadas, durante as trocas\n\nde turno de trabalho nos va?rios o?rga?os. Estas trocas sa?o dadas de forma ana?loga\n\naos per??odos de sazonalidade, tt(o) = {(inicio1, f im1), ..., (iniciott(o), f imtt(o))}, o ?\n\nOrg.\n\n2.2.2 Restric?o?es dos Dutos\n\nA rede esta? associada a um conjunto Dt = {d1, d2, ..., dnd} de dutos, onde cada d ? Dt\n\nconecta um par de o?rga?os orgs(d) = (oi, oj), com oi, oj ? Org. No caso, oi e? denominado\n\no?rga?o ou extremidade de origem e oj, o?rga?o ou extremidade de destino do duto d. O sentido\n\nde fluxo da extremidade de origem a? de destino corresponde ao sentido principal do duto,\n\nou p(d). Ja? o sentido de fluxo contra?rio corresponde ao sentido reverso do duto, ou r(d).\n\nOutra caracter??stica e? que dois o?rga?os podem estar conectados por mais de um duto, o\n\nque e? usual nas insta?ncias reais. Volumes tambe?m podem ser transmitidos diretamente\n\nde um duto para outro, sem a necessidade de serem armazenados temporariamente em\n\no?rga?os intermedia?rios.\n\nA partir dos o?rga?os e dutos, define-se tambe?m o conceito de rotas. Uma rota r e?\n\ncomposta por uma sequ?e?ncia de pares de o?rga?os separados por dutos, representando os\n\npercursos pelos quais qualquer fluxo da rede pode transitar. As rotas poss??veis sa?o prefixa-\n\ndas e informadas como para?metro: se um certo volume de produto v for transmitido de um\n\no?rga?o oi da rede ate? um o?rga?o oj , passando por um ou mais o?rga?os e dutos intermedia?rios\n\nd1, oj+1, ..., oj?1, dn, j = i + n, necessariamente a rota r = (oi, d1, oi+1, ..., oj?1, dn, oj) deve\n\nexistir. Note que os volumes sa?o transmitidos diretamente entre os dutos intermedia?rios de\n\numa rota, sem perdas ou armazenamento nas conexo?es intermedia?rias. Contudo, existem\n\n\n\n2.2. Para?metros e Constantes Gerais 9\n\ncasos em que parte do volume pode ser depositado em o?rga?os intermedia?rios, e o movi-\n\nmento do volume restante do duto segue na rota com uma vaza?o menor. Esta operac?a?o e?\n\ndenominada sangria, que tambe?m deve ser prevista no modelo.\n\nAs restric?o?es referentes aos dutos sa?o listadas a seguir.\n\nC11: Os dutos sa?o pressurizados e, portanto, devem sempre estar completamente preen-\n\nchidos com produtos. A capacidade volume?trica de um duto d ? Dt e? definida por\n\nvol(d).\n\nTambe?m e? considerada uma conservac?a?o de massa ideal: para se retirar um determi-\n\nnado volume v de uma extremidade do duto, deve-se inserir o mesmo volume v em\n\nsua outra extremidade. Tal volume pode ser proveniente de um tanque ou mesmo de\n\num outro duto, interligado ao mesmo o?rga?o atrave?s de uma de suas extremidades.\n\nC12: As vazo?es de bombeamento em um duto sa?o limitadas por produto, devido a?s suas\n\nviscosidades, e pelo sentido de fluxo, decorrente das diferenc?as na capacidade das\n\nbombas entre os o?rga?os de origem e destino e inclinac?a?o do terreno. Uma intuic?a?o\n\nrelativa a? vaza?o por sentido e? que dutos geograficamente inclinados possuem uma\n\nvaza?o de descida maior que a de subida. Os limites inferior e superior das vazo?es\n\npara um duto d ? Dt, produto p ? P e sentido s ? {p(d), r(d)} sa?o dados, respecti-\n\nvamente, por vz inf (d, p, s) e vz sup(d, p, s).\n\nAssim, para se bombear um certo volume em um duto, deve-se considerar todos os\n\nprodutos e sentidos dos dutos nas rotas que sera?o movimentadas como consequ?e?ncia\n\ndo bombeamento. A vaza?o ma?xima de bombeamento sera?, portanto, o m??nimo das\n\nvazo?es superiores destes produtos nos seus respectivos sentidos. Ja? a vaza?o m??nima\n\nde bombeamento sera? dada pelo ma?ximo das vazo?es inferiores.\n\nOs para?metros vz inf (d, p, s) e vz sup(d, p, s) tambe?m indicam os sentidos poss??veis\n\nde fluxo para os produtos em um duto. Por exemplo, se um produto p so? puder ser\n\ntrafegado no sentido principal do duto, enta?o vz inf (d, p, r(d)) = vz sup(d, p, r(d)) =\n\n0.\n\nC13: Devido a?s questo?es operacionais das bombas de cada o?rga?o, deve-se respeitar tambe?m\n\numa quantidade m??nima de bombeamento ao se injetar produtos nos dutos. O vo-\n\nlume bombeado em um duto tambe?m pode ser denominado de batelada, e esta\n\nrestric?a?o tambe?m e? comumente referenciada como tamanho m??nimo de batelada na\n\nliteratura. Tal quantidade e? definida por duto d ? Dt, produto p ? P e sentido\n\ns ? {p(d), r(d)}, dada por qtde min(d, p, s).\n\nC14: Dois produtos em contato num certo duto devem ser compat??veis. Pares incom-\n\npativeis sa?o dados pelo conjunto de duplas Incomp = {(gi, gj), ..., (gm, gn)}, onde\n\ngk ? P e? um grupo de produtos.\n\n\n\n2.2. Para?metros e Constantes Gerais 10\n\nEsta restric?a?o esta? ligada a? manutenc?a?o da qualidade dos produtos, de forma a\n\nevitar a degradac?a?o decorrente da mistura (ou interface) entre tipos qu??micos di-\n\nferenciados. Caso seja absolutamente necessa?rio que sejam enviados dois produtos\n\nincompat??veis em sequ?e?ncia, deve-se interpor entre eles um terceiro produto, com-\n\npat??vel com ambos, chamado de selo. O volume de selo depende do oleoduto, dos\n\nprodutos em questa?o e do sentido do fluxo, e e? dado por selo(d, p, q, s), para d ? Dt,\n\np, q ? P e s ? {p(d), r(d)}.\n\nC15: Os dutos possuem per??odos de manutenc?a?o espec??ficos, momentos em que sa?o reali-\n\nzados reparos e limpeza. Os per??odos de manuntenc?a?o sa?o dados por manut(d) =\n\n{mnut1, mnut2, ..., mnutnm(d)}, d ? Dt. Cada elemento mnuti = (inicio, f im, ?) in-\n\ndica que, durante os instantes inicio e f im, as vazo?es esta?o limitadas a um para?metro\n\n? vezes as vazo?es ma?ximas dos produtos e sentidos do duto, com ? &lt;1.\n\n2.2.3 Dados Dina?micos da Rede\n\nOs dados dina?micos compo?em os para?metros que na?o se referem a? topologia f??sica da\n\nrede, mas espec??ficos da insta?ncia a ser tratada pelo algoritmo. Podem ser divididos em\n\ntre?s grupos: dados relativos ao estado inicial da rede, relativos a? produc?a?o e relativos a?\n\ndemanda.\n\nOs dados do estado inicial da rede sa?o dois, dados a seguir.\n\n1. Estoque inicial dos tanques, indicando o produto e o volume inicial nos tanques.\n\n2. Conteu?do inicial dos dutos, dado para todos os dutos por uma sequ?e?ncia da forma\n\nDIni(d) = {(pm, qm, rm), .., (pn, qn, rn)}, d ? Dt. A tripla (pj, qj , rj) representa,\n\nrespectivamente, um produto pj ? P , sua quantidade qj e a rota que deve seguir, rj .\n\nDesta forma, considera-se que os produtos inicialmente nos dutos ja? possuem um\n\ndestino pre?-estabelecido, que obrigatoriamente deve ser respeitado pelas soluc?o?es\n\ngeradas. A ordem das tuplas na sequ?e?ncia DIni(d) refere-se ao sentido principal de\n\nfluxo no duto.\n\nAs campanhas de produc?a?o para cada o?rga?o o ? Org sa?o definidas pelo conjunto\n\nP r(o) = {pr1, pr2, ..., prnpr}, onde cada elemento pri ? P r(o) e? formado pela tupla\n\n(p, v, inicio pr, f im pr). No caso, p ? P e? o produto que sera? refinado, v um inteiro\n\nna?o-negativo que representa o volume produzido e, por fim, [inicio pr, f im pr] representa\n\no intervalo de tempo em que a produc?a?o ocorrera? no o?rga?o.\n\nO volume v produzido e? distribu??do uniformemente entre as t = f im pr ?inicio pr + 1\n\nunidades de tempo, isto e?, a cada instante sera?o produzidas ?v/t? unidades de volume\n\n\n\n2.3. Soluc?a?o e Objetivos 11\n\n(u.v.). A produc?a?o pode ser distribu??da em diferentes tanques durante este intervalo,\n\ncontanto que estejam vazios imediatamente antes de a receberem (restric?a?o C4).\n\nJa? as demandas sa?o dadas de forma sime?trica a?s produc?o?es. Para o o?rga?o o ? Org,\n\ne? definido o conjunto Dem(o) = {dem1, dem2, ..., demndem}, onde cada elemento demi ?\n\nDem(o) e? formado pela tupla (p, v, inicio dem, f im dem). Te?m-se que p ? P e? o produto\n\nda demanda, v e? um inteiro na?o-negativo que representa o volume demandado e, por fim,\n\n[inicio dem, f im dem] representa o intervalo de tempo em que a demanda ocorrera? no\n\no?rga?o o. O volume v demandado e? distribu??do uniformemente entre as t = f im dem ?\n\ninicio dem + 1 unidades de tempo, isto e?, a cada instante sera?o extra??das ?v/t? unidades\n\nde volume (u.v.). Tal como a produc?a?o, demandas podem ser absorvidas de diferentes\n\ntanques durante este intervalo.\n\n2.3 Soluc?a?o e Objetivos\n\nUma soluc?a?o e? formada por uma programac?a?o de movimentos de entrada nos dutos.\n\nCada movimento e? designado pela tupla m = (p, r, v, inicio m, f im m, ts, te), isto e?, por\n\num produto p ? P , uma rota r cadastrada, o volume v positivo do produto, os instantes\n\nde in??cio, inicio m, e fim, f im m, de bombeamento do produto no primeiro duto da rota\n\ne, por fim, pelos tanques de sa??da ts ? T q e de entrada te ? T q, de onde o volume sera?\n\nextra??do e onde sera? armazenado, respectivamente. O conjunto de movimentos deve ser\n\ntal que respeite todas as restric?o?es nos o?rga?os e dutos, ale?m de satisfazer as campanhas\n\nde produc?a?o e demanda em cada o?rga?o.\n\nNo modelo proposto neste projeto, o foco sera? dado a? satisfac?a?o de restric?o?es ao inve?s\n\nda otimizac?a?o de uma certa func?a?o objetivo, devido a? alta complexidade de se obter\n\nsoluc?o?es via?veis para o PTRD. Assim, custos relativos a? utilizac?a?o dos dutos e tanques\n\nsa?o desconsiderados. Isto e? condizente com a pra?tica atual realizada pela Petrobras,\n\nna qual o correto atendimento da demanda e? priorita?rio frente aos demais custos.\n\n2.4 Modelo da Rede de Dutos\n\nA figura 2.1 apresenta um modelo esquema?tico simples de uma rede de dutos tratada\n\nneste projeto, tambe?m mostrada no cap??tulo 7. Cada o?rga?o Bi apresenta seu pro?prio\n\nconjunto de tanques, e note que mais de um duto pode ser utilizado para conectar dois\n\no?rga?os distintos, tal como ocorre entre B2 e B3.\n\nPara que dois produtos fiquem em contato no duto, como em D2, ambos devem ser\n\ncompat??veis entre si, conforme restric?a?o C14. Se o o?rga?o B0 possuir um nu?mero ma?ximo\n\nde envios simulta?neos igual a 1 (restric?a?o C7), enta?o produtos na?o podem ser injetados\n\n\n\n2.5. Topologia Brasileira 12\n\nsimultaneamente em D0 e D1 a partir de B0. Ale?m disso, caso houver um alinhamento\n\nproibido (restric?a?o C8) de recebimento de produtos P1 (cor cinza) e P2 (cor escura) no\n\no?rga?o B3, ele na?o podera? receber produtos dos dutos D3 e D4.\n\nPor fim, um exemplo de rota seria r = (B1, D2, B2, D4, B3). Se o destino do produto\n\nP1 (cor cinza) do duto D2 for o o?rga?o B3 pela rota r, a vaza?o aplicada para empurrar o\n\nduto D2, no caso a partir de B1, deve ser consistente com as vazo?es dos produtos tanto\n\nde D2 como do duto D4, que tambe?m sera? empurrado.\n\nB\n1\nT\n\n0\nP\n\n0\n\nB\n1\nT\n\n0\nP\n\n1\n\nB\n1\nT\n\n0\nP\n\n2\n\nB\n0\nT\n\n0\nP\n\n0\nB\n\n0\nT\n\n0\nP\n\n1\n\nB\n3\nT\n\n0\nP\n\n1\nB\n\n3\nT\n\n0\nP\n\n2\n\nD\n0\n\nD\n1\n\nD\n2\n\nD\n3\n\nD\n4\n\nB\n1\n\nB\n0\n\nB\n2\n\nB\n3\n\nFigura 2.1: Modelo esquema?tico de uma rede de dutos.\n\n2.5 Topologia Brasileira\n\nA especificac?a?o do PTRD aqui descrita agrega as principais restric?o?es abordadas na lite-\n\nratura do problema, ale?m de representar com certa fidelidade a realidade enfrentada pelos\n\nplanejadores e operadores de dutos. Ela foi concebida a partir da ana?lise bibliogra?fica do\n\nPTRD e, principalmente, com diversas reunio?es juntos aos gerentes da Petrobras.\n\nO projeto focara? na rede de dutos da regia?o Sudeste do Brasil, gerenciada pela Pe-\n\ntrobras e representada na figura 2.2. Esta rede e? composta por 14 o?rga?os, 29 dutos,\n\ncerca de 240 tanques e mais de 30 produtos.O horizonte de planejamento e? de cerca de 10\n\ndias.\n\n\n\n2.5. Topologia Brasileira 13\n\nFigura 2.2: Representac?a?o do sistema de dutos da regia?o Sudeste de Sa?o Paulo (figura\nfornecida pela Petrobras).\n\n\n\nCap??tulo 3\n\nRevisa?o Bibliogra?fica\n\nO problema abordado neste projeto engloba um conjunto de restric?o?es bastante complexo\n\ne diversificado, relacionando fatores como capacidade de estocagem, sequ?enciamento de\n\nprodutos nos dutos e condic?o?es de balanceamento de massa em sua especificac?a?o mais\n\ngeral. O trabalho de [25] demonstra que basta considerar a restric?a?o C14, de interfaces\n\nentre produtos, para que o PTRD seja classificado como NP-Dif??cil [30].\n\nNa literatura, o problema e? usualmente conhecido como Multiproduct Pipeline Schedu-\n\nling e diversos trabalhos se propuseram a apresentar abordagens heur??sticas ou exatas para\n\nsua resoluc?a?o. Contudo, em decorre?ncia da grande aplicabilidade pra?tica do problema,\n\nos trabalhos existentes diferem bastante na forma como definem e adaptam restric?o?es a?s\n\nsuas respectivas realidades. Desta forma, tre?s pontos sa?o essenciais para a compreensa?o\n\nde cada proposta de modelagem: a topologia da rede, o me?todo de resoluc?a?o aplicado e,\n\npor fim, os resultados computacionais e a operacionalidade das soluc?o?es.\n\nHa? pesquisas dedicadas a? revisa?o bibliogra?fica do PTRD, tais como [13, 39], que apre-\n\nsentam uma ana?lise bastante detalhada das abordagens existentes na a?rea. Assim, a re-\n\nvisa?o aqui descrita procurara? destacar as propostas mais relevantes e que serviram como\n\nbase para o desenvolvimento deste projeto. A tabela 3.1 sintetiza as caracter??sticas de\n\ntais propostas e a compara com este trabalho.\n\nDentre tais trabalhos, o estudo mais completo da a?rea e? realizado por Camponogara [6],\n\ncujas caracter??sticas mais se aproximam da realidade quando comparadas aos demais pro-\n\njetos. Nele, define-se um Problema de Transporte de Derivados de Petro?leo Simplificado,\n\nou PTDPS, no qual as vazo?es sa?o fixas por duto, todas as bases sa?o capazes de armazenar\n\ntodos os produtos (eliminando-se, assim, a transmissa?o de produtos duto-duto), e na?o\n\nha? trocas de turno ou manutenc?o?es programadas. Tambe?m desconsideram-se estoques\n\nm??nimos por base e quantidades m??nimas por operac?a?o. Os tanques, por sua vez, sa?o\n\nagregados, isto e?, ha? um tanque por o?rga?o com capacidade equivalente a? soma de todos\n\nos tanques que armazenam o produto em questa?o.\n\n14\n\n\n\n15\n\n[1] [3,7,18] [4] [6] [11] [19,20,21] PTRD\n\nO?rga?os 8 5 12 7 2 2 14\nDutos 8 4 28 7 1 1 29\n\nTanques 40 25 84 28 16 12 242\nProdutos 5 4 7 4 8 6 32\nHorizonte 14 dias 3 dias 5 dias 80 u.t. 5 dias 30 dias 10 dias\n\nTempo Cont??nuo\n? ? ?\n\nVazo?es Varia?veis\n? ? ? ?\n\nTanques Individuais\n? ?\n\nTopologia Gene?rica\n? ? ? ?\n\nRestric?o?es de Interface\n? ? ? ? ?\n\nTe?cnica GA MILP,VNS A-Teams GA,MILP MILP,CP MILP Heur??stica+CP\n\nResultados Via?vel O?timo Invia?vel Via?vel O?timo O?timo Via?vel\n\nTabela 3.1: Comparac?a?o entre abordagens anteriores.\n\nPara a resoluc?a?o do PTDPS, o trabalho de [6] propo?s duas te?cnicas distintas, uma\n\nexata e outra heur??stica. A primeira, modelada como uma Programac?a?o Linear Inteira\n\n(PLI) [40], buscava reduzir o PTDPS a um problema de Fluxo em Redes Multiper??odos\n\n[3], com dutos e o?rga?os como ve?rtices e transmisso?es de quantidade como arestas. Apesar\n\nda existe?ncia de algoritmos com bom desempenho para problemas deste tipo, verificou-\n\nse que a resoluc?a?o do modelo PLI do PTDPS era impratica?vel, como conseque?ncia do\n\ntamanho e densidade do grafo resultante da topologia da rede. Para as u?ltimas verso?es\n\ndos resolvedores comerciais de PLI ate? a publicac?a?o desta dissertac?a?o, o tempo me?dio\n\npara se obter uma soluc?a?o para a relaxac?a?o linear do modelo foi de 50 horas.\n\nA segunda te?cnica proposta em [6] caracterizava-se pela aplicac?a?o de Times Ass??ncronos\n\nao PTDPS, heur??stica na qual diversos agentes auto?nomos tratam de partes distintas do\n\nproblema, trocando de tempos em tempos informac?o?es relevantes para a sua resoluc?a?o.\n\nPara viabilizar a aplicac?a?o da heur??stica, o problema foi modelado como um Job Shop\n\nScheduling [6], composto por dois agentes: um para a gerac?a?o de bombeamentos de quan-\n\ntidades entre bases e dutos, os jobs, e outro para o escalonamento e simulac?a?o de tais\n\nbombeamentos nos dutos, equivalente ao processamento dos jobs em ma?quinas (dutos).\n\nApesar de mais eficiente, a aplicac?a?o de Times Ass??ncronos proposta por [6] na?o foi\n\ncapaz de gerar soluc?o?es via?veis para as insta?ncias apresentadas, em decorre?ncia das es-\n\ntrate?gias essencialmente gulosas atribu??das aos agentes. Com esta perspectiva, Laber et al\n\n[27] utilizaram os Times Ass??ncronos como a fase gulosa de uma metaheur??stica GRASP\n\n[38] para o PTDPS, desenvolvendo uma busca local para o reparo das soluc?o?es. Como\n\nconsequ?e?ncia, foram capazes de satisfazer todas as restric?o?es consideradas no PTDPS, mas\n\no tempo necessa?rio para a ressimulac?a?o apo?s cada aplicac?a?o da busca local inviabilizava\n\nsua utilizac?a?o.\n\n\n\n16\n\nPosteriormente, Braconi et al [4] relaxou o modelo PLI de Fluxo em Redes Multi-\n\nper??odos de [6], denominando a resoluc?a?o deste novo modelo Etapa de Planejamento.\n\nEsta soluc?a?o parcial era enta?o utilizada como parte de uma segunda heur??stica, a Etapa\n\nde Escalonamento, na qual atribu??a-se tempos aos fluxos criados na primeira etapa. Esta\n\nte?cnica permitiu obter soluc?o?es rapidamente, mas as relaxac?o?es intr??nsecas a? definic?a?o\n\ndo PTDPS, tal como tanques para todos os produtos em todos os o?rga?os, tornavam as\n\nsoluc?o?es encontradas pouco aplica?veis na pra?tica.\n\nOutro trabalho fundamentado na aplicac?a?o de heur??sticas e? de Crane et al [10], no\n\nqual um Algoritmo Evolutivo [15] foi aplicado para uma versa?o bastante simplificada\n\ndo PTRD. Nela, a rede de dutos e? tratada como uma a?rvore direcionada com 8 no?s,\n\ne os estoques dos tanques possuem apenas tre?s estados poss??veis: alto, me?dio e baixo.\n\nRestric?o?es de interface e tamanho m??nimo de bateladas sa?o tambe?m desconsideradas. O\n\nalgoritmo proposto foi capaz de gerar soluc?o?es para horizontes de ate? 3 dias mas, devido\n\na? forma como as soluc?o?es eram representadas, o algoritmo era capaz de lidar apenas com\n\ninsta?ncias pequenas com poucos tanques e o?rga?os.\n\nA te?cnica desenvolvida por De La Cruz et al [11] tambe?m aplica um Algoritmo Evo-\n\nlutivo para uma versa?o simplificada do PTRD, sem restric?o?es de interface e com todos\n\nos dutos possuindo um mesmo dia?metro e vaza?o. No entanto, sa?o considerados dutos\n\nbidirecionais e uma func?a?o multi-objetivo, buscando reduzir interfaces e prazo de en-\n\ntrega dos produtos. Adicionalmente em [12], o autor tambe?m implementa um PLI para\n\no problema, usado para gerar parte das soluc?o?es que compo?e a populac?a?o do Algoritmo\n\nEvolutivo. Em todos os casos, o algoritmo foi capaz de gerar soluc?o?es para insta?ncias\n\npequenas rapidamente, especialmente com o uso de resolvedores PLI e como decorre?ncia\n\ndas simplificac?o?es.\n\nHa? ainda o trabalho de Alves [1], que tambe?m aplica um Algoritmo Evolutivo para\n\numa variac?a?o do PTRD. No entanto, o procedimento desenvolvido foca na utilizac?a?o de\n\numa rede espec??fica da Petrobras denominada rede de escuros, utilizada para o tra?fego\n\nde produtos de grande viscosidade. O problema e? similar ao PTDPS de [6], com tanques\n\nagregados e vazo?es constantes, mas considerando tambe?m tamanho das bateladas e uso\n\nde selos para separar produtos incompat??veis. Ale?m disso, a func?a?o objetivo buscava\n\nminimizar o na?o-atendimento da demanda. O algoritmo obteve bons resultados para um\n\nhorizontes de 7 e 14 dias, discretizados em per??odos de algumas horas.\n\nUma abordagem alternativa e? descrita em Sasikumar et al [20], onde uma te?cnica\n\nbaseada em Intelige?ncia Artifical, denominada Beam Search, e? agreada a heur??sticas for-\n\ntemente baseadas na experie?ncia humana. O projeto e? aplicado em uma rede indiana,\n\ncom restric?o?es de sequ?enciamento de produtos e estoques nos o?rga?os. Apesar das simpli-\n\nficac?o?es, sa?o geradas boas programac?o?es mensais para as insta?ncias em questa?o.\n\nAinda, os trabalho de Liporace [14] e Milidiu? e Liporace [26] tratam o PTRD como\n\n\n\n17\n\num problema de Planejamento em Intelige?ncia Artificial (PIA). Tal modelagem consiste\n\nem formular o problema genericamente como um conjunto de proposic?o?es lo?gicas, cuja\n\ncomposic?a?o de seus valores bina?rios representam um estado. A partir de um estado\n\ninicial, aplicam-se ac?o?es que ira?o modifica?-lo ate? que se atinja um estado-objetivo. O\n\nobjetivo de um planejador, desta forma, e? identificar uma sequ?e?ncia de ac?o?es va?lidas que\n\nleve o sistema ao estado-objetivo. Ale?m de um planejador espec??fico para o problema,\n\na especificac?a?o do PTRD como um PIA por Liporace foi inclu??da no benchmark oficial\n\nda International Planning Competition [9], uma competic?a?o internacional de planejadores\n\ngene?ricos. Contudo, numa perspectiva pra?tica, os planejadores existentes resolvem apenas\n\ninsta?ncias muito limitadas, com horizontes curtos, poucos tanques e restric?o?es.\n\nOutro foco de pesquisa esta? em topologias simples, compostas por apenas um duto\n\ne um conjunto de o?rga?os conectados a ele. A motivac?a?o e? que ela ja? representa diversos\n\ncasos pra?ticos existentes no mundo, incluindo sub-redes da pro?pria Petrobras. Ale?m\n\ndisso, esta topologia permite considerar restric?o?es mais complicadas referentes a?s vazo?es,\n\ninventa?rio, perdas de volume decorrentes da criac?a?o de interfaces e custos de energia.\n\nNeste contexto, encontram-se os trabalhos de Rejowski e Pinto [18, 24]. Ambos apre-\n\nsentam uma formulac?a?o PLI de tempo discreto para o sistema OSBRA da Petrobras,\n\ncomposto por 5 o?rga?os, 4 produtos e um duto que liga os estados de Sa?o Paulo e Bras??lia.\n\nSa?o consideradas diversas restric?o?es, tais como inventa?rio nos o?rga?os e sequ?e?ncias permi-\n\ntidas de bombeamento, ale?m de uma func?a?o objetivo referente a? minimizac?a?o de custos de\n\nestoque e de interface. Para um horizonte de 3 dias, os autores na?o obtiveram a soluc?a?o\n\no?tima nos testes realizados. Contudo, em [33], o modelo e? fortalecido pela introduc?a?o de\n\ncortes e se consegue, em um tempo computacional razoa?vel, soluc?o?es o?timas para todas\n\nas insta?ncias anteriores.\n\nPara a mesma especificac?a?o proposta por [33], Cafaro e Cerda? [5] apresentam uma\n\nformulac?a?o baseada em uma representac?a?o cont??nua do tempo e dos volumes. Conforme\n\nexplicado pelos autores, esta representac?a?o permite uma diminuic?a?o significativa do ta-\n\nmanho da formulac?a?o e do nu?mero de varia?veis bina?rias. Os resultados sa?o comparados ao\n\ntrabalho de [33], e mostram uma reduc?a?o de cerca de tre?s ordens de magnitude dos requi-\n\nsitos computacionais necessa?rios para resolver o problema. A representac?a?o por tempos\n\ncont??nuos tambe?m foi implementada por Rejowski e Pinto [34], considerando adicional-\n\nmente vazo?es varia?veis de bombeamento e deciso?es relativas ao controle de inventa?rio.\n\nPara tanto, o problema foi modelado como uma Programac?a?o Na?o-linear Inteira, baseado\n\nna formulac?a?o em [24]. O algoritmo resultante gerou boas soluc?o?es para poucos dias.\n\nUm outro direcionamento consiste em decompor o PTRD em subproblemas mais fa?ceis\n\nde serem tratados, ao inve?s de resolve?-lo completamente com um modelo u?nico. O tra-\n\nbalho de Magata?o et al [21] propo?e uma divisa?o em que tre?s submodelos sa?o processados\n\nsequ?encialmente, projetada para uma rede composta por um duto conectando uma refi-\n\n\n\n18\n\nnaria a um terminal portua?rio. A execuc?a?o inicia-se com um procedimento denominado\n\nTanque Bound, caracterizado como um modelo em PLI responsa?vel pela determinac?a?o dos\n\nrecursos (i.e., tanques) a serem utilizados em todo o escalonamento. Em seguida, a Ro-\n\ntina Auxiliar, basicamente heur??stica, define alguns para?metros de entrada para o pro?ximo\n\nsubmodelo, como limites temporais que devem ser respeitados pelas tarefas no oleoduto.\n\nPor fim, o Modelo Principal, escrito como um PLI e baseado nos para?metros fornecidos\n\npelo Tanque Bound e pela Rotina Auxiliar, determina o sequ?enciamento e a temporizac?a?o\n\ndas atividades de bombeamento no duto. A te?cnica foi testada com sucesso na topologia\n\nem questa?o, considerando restric?o?es de tancagem e de interface, ale?m de vaza?o constantes.\n\nOs autores propo?e tambe?m em [22] uma abordagem integrada entre PLI e Programaca?o\n\npor Restric?o?es para resolver as mesmas insta?ncias, gerando boas soluc?o?es.\n\nMais recentemente, um conjunto de trabalhos de Relvas et al apresenta um estudo\n\nde uma rede de dutos de Portugal, formada por um duto e dois o?rga?os. Em [35, 37], os\n\nautores apresentam uma formulac?a?o PLI que considera diversas restric?o?es de controle de\n\ninventa?rio, baseada em [5]. Ja? em [36], o modelo anterior e? melhorado de forma que sejam\n\nconsideradas paradas em dutos e vazo?es varia?veis, ale?m do conceito de re-escalonamento,\n\nem que o modelo e? resolvido apo?s perturbac?o?es na soluc?a?o corrente.\n\n\n\nCap??tulo 4\n\nArquitetura do Modelo de Resoluc?a?o\n\nO estudo dos artigos e teses apresentados no cap??tulo 3 evidencia que, como decorre?ncia da\n\ngrande dificuldade do PTRD, as abordagens existentes se apo?iam fortemente em simpli-\n\nficac?o?es dos requisitos do problema. Por exemplo, sa?o tratadas topologias de rede bastante\n\nsimples na maioria dos casos, com apenas um duto de sentido u?nico e terminais dispostos\n\nde forma sequ?encial [5, 20, 34]. Ou, ainda, na?o sa?o consideradas incompatibilidade entre\n\nprodutos [1, 12] e os tanques sa?o representados com capacidade agregada [4, 6].\n\nTais hipo?teses permitem modelagens mais intuitivas e diretas do PTRD, fundamen-\n\ntando seu tratamento pelas te?cnicas de otimizac?a?o mostradas no cap??tulo anterior. Em\n\ncontrapartida, elas tambe?m impossibilitam a representac?a?o de grande parte das restric?o?es\n\nmais importantes para a viabilidade pra?tica das soluc?o?es, o que torna as abordagens exis-\n\ntentes muito pouco aplica?veis para os cena?rios reais. Um exemplo e? quando se considera\n\num tanque u?nico de capacidade agregada. Apesar de simplificar as deciso?es relativas ao\n\ncontrole de inventa?rio, inviabiliza a aplicac?a?o de restric?o?es como na?o-simultaneidade (C3),\n\nessencial para um ca?lculo mais realista dos tempos de bombeamento. Note tambe?m que a\n\nmaioria dos trabalhos existentes considera cerca de 6 o?rga?os, 4 produtos e poucos tanques.\n\nPor outro lado, a insta?ncia a ser tratada aqui agrega 14 o?rga?os com aproximadamente\n\n300 tanques, ale?m de 28 dutos, 30 produtos, u.t. em minutos e diversas outras restric?o?es.\n\nE? clara, portanto, a necessidade de modelos mais abrangentes para a obtenc?a?o de\n\nsoluc?o?es fact??veis para apresentar aos operadores da rede de dutos. Contudo, constata-se\n\nque a resoluc?a?o do PTRD como um grande problema u?nico e integrado e? pouco promissora.\n\nAle?m do alto nu?mero de restric?o?es complicadoras que devem ser satisfeitas simultanea-\n\nmente, muitos dos trabalhos baseados em resoluc?o?es integradas na?o obtiveram resultados\n\nsatisfato?rios para uma topologia complexa, mesmo apo?s diversas relaxac?o?es do modelo [6].\n\nDesta forma, propo?e-se uma arquitetura de resoluc?a?o do problema composta por duas\n\nfases, executadas sequ?encialmente: a fase de planejamento e a fase de escalonamento,\n\nsendo a u?ltima o objeto de estudo desta dissertac?a?o. Tal arquitetura e? baseada nas\n\n19\n\n\n\n4.1. Fase de Planejamento 20\n\ndecomposic?o?es recorrentes do PTRD encontradas na literatura, as quais refletem os pro-\n\ncedimentos manuais atualmente adotados. Cada fase e? descrita com detalhes nas sec?o?es\n\nseguintes.\n\n4.1 Fase de Planejamento\n\nO problema de planejamento trata da movimentac?a?o geral na rede de dutos, onde sa?o pro-\n\ngramados quais o?rga?os ira?o receber e enviar produtos para o atendimento das demandas\n\ne escoamento das produc?o?es. Uma vez fixados os o?rga?os de destino e de origem, define-se\n\nenta?o quais sera?o os dutos e as bases intermedia?rias pelos quais os produtos ira?o trafegar,\n\ndeterminando tambe?m os volumes que sera?o transmitidos nas rotas escolhidas.\n\nAs trocas de produto geradas pela fase de planejamento sa?o representadas por uma\n\nestrutura denominada plano de entrega, que representa uma transmissa?o de volume de um\n\no?rga?o origem a um o?rga?o destino, passando por uma determinada rota. Cada plano conte?m\n\num prazo, isto e?, o instante ma?ximo em que todo o volume ja? deve estar armazenado no\n\no?rga?o destino. Um plano de entrega e? formalmente definido pela tupla\n\npe = (ti, oi, td, od, p, v, r, pz),\n\nonde ti ? T (oi) e? o tanque no o?rga?o de origem oi ? Org, td ? T (od) e? o tanque no\n\no?rga?o de destino od ? Org , v e? o volume do produto p ? P , r e? a rota de transmissa?o\n\ndo plano e pz e? o prazo do plano dentro do horizonte de programac?a?o. Considera-se\n\nque um plano de entrega e? indivis??vel, ou seja, seu volume na?o pode ser fragmentado\n\nem dois ou mais planos. Contudo, um plano pode parar no duto, isto e?, ser injetado\n\nde forma intermitente, o que acarreta tambe?m a parada de toda a rota envolvida no\n\nbombeamento. Operac?o?es de parada sa?o essenciais, por exemplo, para satisfazer o numero\n\nma?ximo de envios simulta?neos (restric?a?o C7) e os alinhamentos proibidos (restric?a?o C8).\n\nAle?m disso, tambe?m sa?o necessa?rias quando se necessita aguardar esvaziamento de tanques\n\npor demanda para que tais tanques recebam quantidades proveniente do duto.\n\nAssim, dadas as campanhas de produc?a?o e demanda em cada o?rga?o, o objetivo da\n\nfase de planejamento e? gerar um conjunto de planos de entrega de tal forma que, se todos\n\nforem satisfeitos, i.e., entregues no prazo, garante-se uma soluc?a?o que atenda todas as\n\ndemandas da rede e escoe os volumes em excesso das produc?o?es.\n\nDiferentes me?todos heur??sticos ou exatos podem ser aplicados para a criac?a?o dos planos\n\nde uma certa insta?ncia, os quais considerariam crite?rios espec??ficos para a determinac?a?o\n\ndas rotas, volumes e tanques. As te?cnicas heur??sticas aplicadas neste trabalho baseiam-se\n\nem escolher os o?rga?os com as demandas mais criticas, isto e?, com maior volume e mais\n\n\n\n4.2. Fase de Escalonamento 21\n\npro?ximas do in??cio do horizonte. Uma vez escolhidos, definem-se enta?o os o?rga?os que va?o\n\nprover volume para satisfaze?-los, utilizando como crite?rio aqueles mais pro?ximos, isto e?,\n\nconectados por um menor nu?mero de dutos. Por fim, sa?o selecionadas as rotas de maior\n\nvaza?o e os volumes para fixar os demais para?metros dos planos.\n\nAle?m disso, visto que planos sa?o tambe?m uma representac?a?o intuitiva do planejamento\n\nda rede, operadores dos dutos tambe?m sa?o capazes de inserir novos planos ou alterar\n\nos existentes, muitas vezes para a representac?a?o de prefere?ncias de movimentac?a?o na?o\n\nprevistos pelo algoritmo.\n\nA fase de planejamento encapsula as deciso?es de quais rotas e volumes utilizar para a\n\nresoluc?a?o de uma insta?ncia do PTRD, mas na?o detalha as operac?o?es de bombeamento e\n\nseus respectivos tempos. O desafio da fase de planejamento e?, portanto, criar conjuntos\n\nde planos com uma grande probabilidade de serem via?veis, sem contudo aumentar a\n\ncomplexidade do problema a ponto de torna?-lo na?o-resolv??vel.\n\nEste projeto na?o focara? na fase de planejamento, considerando-o como um mo?dulo\n\na? parte ja? existente. O algoritmo utilizado para tal mo?dulo sera? o de [19], o qual foi\n\ndesenvolvido juntamente com esta pesquisa. Contudo, e? poss??vel que diversos outras\n\nmetodologias sejam utilizadas tanto para a fase de planejamento como a de escalonamento,\n\nincentivando mais pesquisas sobre esse aspecto.\n\n4.2 Fase de Escalonamento\n\nUma vez definidos os o?rga?os que ira?o enviar e receber produtos e as respectivas rotas por\n\nonde os volumes ira?o trafegar, deve-se resolver o problema de escalonamento, ou seja,\n\ndeterminar o nu?mero de operac?o?es de envios por plano de entrega e, principalmente, a\n\nordem em que os bombeamentos sera?o realizados. Nesta fase, consideram-se as restric?o?es\n\nde incompatibilidade e de capacidade dos tanques, ale?m do ca?lculo de limitantes de tempo\n\npara envio e chegada dos volumes nos o?rga?os. Por fim, e? necessa?rio atribuir os exatos\n\nmomentos em que ocorrera?o as operac?o?es de bombeamento, compondo a soluc?a?o final do\n\nproblema. Este u?ltimo deve garantir as restric?o?es referentes a?s vazo?es de bombeamento,\n\ntroca de turno, manutenc?a?o de dutos e demais restric?o?es ana?logas.\n\nDado um conjunto de planos de entrega P E = {pe1, pe2, ..., penpl}, o objetivo da fase\n\nde escalonamento e? gerar movimentos m1, ..., mnm, conforme definidos na sec?a?o 2.3, de\n\nforma que todos os planos sejam cobertos no prazo. Isto equivale a sequenciar e escalonar\n\nos planos nas suas respectivas rotas e tanques, garantindo todos requisitos do problema\n\nrelacionadas no cap??tulo 2, como restric?a?o de interface, capacidade de tanques e na?o-\n\nsimultaneidade de operac?o?es. Note que nm ? npl, ja? que planos podem ser bombeados\n\npor uma ou mais operac?o?es de envio.\n\nApesar do grande nu?mero de restric?o?es, a pre?-atribuic?a?o de rotas da fase de planeja-\n\n\n\n4.2. Fase de Escalonamento 22\n\nmento abre a possibilidade de modelagens mais intuitivas e compactas do problema de\n\nescalonamento, ja? que as deciso?es ficam concentradas em como ordenar e temporizar os\n\nplanos nos seus respectivos dutos.\n\nComo consequ?e?ncia da dificuldade em garantir heuristicamente soluc?o?es operacional-\n\nmente via?veis, sera? utilizado um modelo exato como mo?dulo resolvedor desta fase. Este\n\nmodelo, por sua vez, sera? implementado usando Programac?a?o por Restric?o?es (PR) [23],\n\npor duas principais razo?es. A primeira motivac?a?o decorre de restric?o?es na?o-lineares ineren-\n\ntes ao sequ?enciamento e a?s vazo?es varia?veis, impossibilitando a modelagem do problema\n\nusando Programac?a?o Linear Inteira. Ja? a segunda raza?o vem do fato de focarmos, prio-\n\nritariamente, a obtenc?a?o de soluc?o?es via?veis ao inve?s de o?timas. As te?cnicas em PR te?m\n\nobtido grande sucesso neste quesito. Mais detalhes sobre Programac?a?o por Restric?a?o sa?o\n\napresentados no cap??tulo 5.\n\n\n\nCap??tulo 5\n\nConceitos Ba?sicos de Programac?a?o\n\npor Restric?o?es\n\nA Programac?a?o por Restric?o?es (PR) [2, 23] e? uma ferramenta de programac?a?o declarativa\n\nreconhecida, principalmente, pela sua eficie?ncia na modelagem e resoluc?a?o de problemas\n\ncombinato?rios dif??ceis [16]. Apesar de ter origem nos anos 70, seu uso intensificou-se bas-\n\ntante durante as de?cadas de 80 e 90, agregando hoje centenas de pesquisadores das a?reas\n\nde Intelige?ncia Artificial, Linguagens de Programac?a?o, Computac?a?o Simbo?lica, Lo?gica\n\nComputacional e Otimizac?a?o Combinato?ria.\n\nHa? atualmente diversos cena?rios pra?ticos em que o uso de PR possui grandes vantagens\n\nem comparac?a?o a?s outras tecnologias mais tradicionais. Entre tais casos de sucesso [2],\n\ne? poss??vel citar problemas de ana?lise e s??ntese de circuitos, agendamento de tarefas em\n\nmicroprocessadores, sequenciamento de DNA em biologia molecular, alocac?a?o de fun-\n\nciona?rios em empresas ae?reas e muitos outros problemas relacionados a? agendamento em\n\nPesquisa Operacional, o que motiva o estudo de PR para sua aplicac?a?o no PTRD.\n\nDe forma geral, os conceitos ba?sicos de PR giram em torno de restric?o?es. Uma restric?a?o\n\ne? definida como uma relac?a?o lo?gica entre um conjunto de varia?veis, cada qual contendo um\n\ndom??nio de poss??veis valores. As restric?o?es, portanto, ira?o limitar os dom??nios de valores\n\nque as varia?veis podem assumir simultaneamente. Por exemplo, dada duas varia?veis\n\nx ? {1, ..., 5} e y ? {1, ..., 5}, a restric?a?o x + y ? 3 impede, por exemplo, que tanto x\n\ncomo y tenham valores 3, 4 ou 5.\n\nO poder de modelagem de PR recai nas propriedades interessantes que a definic?a?o\n\ngene?rica de restric?a?o traz. Primeiramente, restric?o?es especificam informac?o?es parciais\n\ne, portanto, na?o necessitam definir unicamente o valor de suas varia?veis; x + y ? 3,\n\npor exemplo, representa um relacionamento que possui por si so? um conjunto infinito\n\nde soluc?o?es para x e y. Ale?m disso, restric?o?es tambe?m sa?o na?o-direcionais. Do mesmo\n\nexemplo anterior, temos que x ? 3 ? y ou y ? 3 ? x, isto e?, e? poss??vel inferir novas\n\n23\n\n\n\n5.1. Satisfac?a?o de Restric?o?es 24\n\nrestric?o?es sobre um literal a partir das outras varia?veis que se relacionam com ele.\n\nA principal das propriedades, entretanto, esta? no fato de que restric?o?es sa?o declarativas,\n\nou seja, elas especificam o relacionamento entre varia?veis sem necessariamente impor\n\num procedimento computacional para garantir tal relacionamento. Consequ?entemente, e?\n\nvirtualmente poss??vel definir restric?o?es de qualquer natureza, lineares ou na?o. Um exemplo\n\nt??pico consiste em definir varia?veis como tarefas e restric?o?es que impedem que um certo\n\nnu?mero ma?ximo de tarefas seja executado ao mesmo tempo em uma ma?quina. Por fim,\n\nrestric?o?es tambe?m sa?o aditivas: na?o importa a ordem em que sejam postadas, contanto\n\nque a conjunc?a?o delas seja satisfeita pela soluc?a?o final.\n\nUma vez definidas as restric?o?es, o estudo de PR, portanto, recai em sistemas compu-\n\ntacionais resolvedores que sejam capazes de gerar rapidamente soluc?o?es que satisfac?am\n\ntodas as condic?o?es impostas no modelo. Para tanto, as estrate?gias de busca sa?o basea-\n\ndas essencialmente no conceito de propagac?a?o de restric?o?es. A ide?ia consiste em reduzir\n\nos dom??nios das varia?veis a partir da consiste?ncia parcial das restric?o?es existentes, dimi-\n\nnuindo, desta forma, o espac?o de busca a ser explorado. No caso anterior em que x+y ? 3\n\ne x, y ? {1, ..., 5}, o sistema de propagac?a?o poderia eliminar 3, 4, 5 do dom??nio de ambas\n\nas varia?veis ao inferir que, para tais valores, ter??amos x + y > 3. Por outro lado, a con-\n\nsiste?ncia e? parcial porque ainda ha? uma combinac?a?o de valores no dom??nio resultante,\n\nx, y ? {1, 2}, que podem violar a restric?a?o. O uso de te?cnicas de propagac?a?o e? inerente\n\na?s te?cnicas de busca aplicadas e sera? descrito nas subsec?o?es seguintes.\n\nPodemos dividir a PR em dois ramos que, apesar de compartilharem a mesma termi-\n\nnologia, diferem na origem e nas tecnologias de busca de soluc?o?es: satisfac?a?o de restric?o?es\n\ne resoluc?a?o de restric?o?es. A primeira trata de problemas cujas varia?veis pertencem a\n\ndom??nios finitos e, assim, as soluc?o?es derivam basicamente de te?cnicas combinato?rias. Ja?\n\no segundo ramo lida com dom??nios infinitos ou mais complexos, e cujas metodologias de\n\nresoluc?a?o prove?m do ca?lculo e da matema?tica cont??nua.\n\nNeste projeto, sera? focado o ramo de satisfac?a?o de restric?o?es, ja? que os dom??nios das\n\nvaria?veis do problema sa?o finitos e bem delineados no horizonte a ser tratado. Ale?m disso,\n\ntal ramo abrange a maior parte das aplicac?o?es industriais e possui um grande conjunto\n\nde me?todos e pol??ticas para agilizar o processo de busca.\n\n5.1 Satisfac?a?o de Restric?o?es\n\nDefine-se um problema de PR deste tipo a partir dos seguintes elementos [2]:\n\n1. Um conjunto de varia?veis de decisa?o X = {x1, x2, ..., xn}.\n\n2. Um conjunto finito Di associado a cada xi, com os poss??veis valores que a varia?vel\n\npode assumir. Note que este dom??nio na?o e? necessariamente nume?rico; pode, por\n\n\n\n5.1. Satisfac?a?o de Restric?o?es 25\n\nexemplo, representar valores booleanos ou estruturas espec??ficas do problema.\n\n3. Um conjunto de restric?o?es, isto e?, relac?o?es entre as varia?veis que impedem a ocorre?ncia\n\nsimulta?nea de certos valores.\n\nUma soluc?a?o va?lida e? definida como uma atribuic?a?o de valor a cada varia?vel xi que\n\nrespeite os dom??nios Di e na?o viole nenhuma restric?a?o do modelo. Portanto, uma for-\n\nmulac?a?o PR pode conter diversas soluc?o?es va?lidas, todas igualmente aceita?veis dentro do\n\ncontexto de satisfac?a?o de restric?o?es. Contudo, caso cada soluc?a?o estivesse associada a\n\num valor real representando um determinado custo, encontrar a soluc?a?o de melhor custo\n\ncaracterizaria um problema de otimizac?a?o de restric?o?es.\n\nO processo de uso da tecnologia de PR e? dividido em duas etapas. Em primeiro lugar,\n\ndeve-se modelar o problema adequadamente, definindo as varia?veis, seus dom??nios e as\n\nrestric?o?es que as relacionam. Uma vez criada a formulac?a?o PR, e? necessa?rio definir es-\n\ntrate?gias de busca para a atribuic?a?o das varia?veis sem que nenhuma restric?a?o seja violada.\n\nCada uma dessas etapas em PR sera? descrita com mais detalhes a seguir.\n\n5.1.1 Modelagem em PR\n\nAs te?cnicas de PR induzem naturalmente a uma modelagem do problema mais intuitiva\n\ne pro?xima da realidade, principalmente em decorre?ncia da maior expressividade das res-\n\ntric?o?es. Devido a? sua origem estar intrinsecamente relacionada com Programac?a?o Lo?gica,\n\nformulac?o?es podem ser colocadas de forma declarativa, tal como em Prolog [8], ou\n\ntambe?m de forma ana?loga a?s formulac?o?es em Programac?a?o Linear.\n\nPara exemplificar a modelagem em PR, sera? mostrado um problema cla?ssico de crip-\n\ntoaritme?tica, extra??do de [23] e apresentado abaixo.\n\nS E N D\n\n+ M O R E\n\nM O N E Y\n\nO objetivo da criptoaritme?tica consiste em atribuir um nu?mero i ? {0, 9} a cada\n\numa das letras para que a operac?a?o de soma seja consistente. Uma das poss??veis formas\n\nde modelar o problema seria atribuir diretamente uma varia?vel inteira para cada letra,\n\ntodas com dom??nio no intervalo de [0, 9]. Contudo, ale?m da expressa?o aritme?tica para\n\nrepresentar a consiste?ncia da soma, tambe?m e? necessa?rio impor que as varia?veis (letras)\n\nassumam valores distintos. De forma declarativa no estilo de Prolog, a formulac?a?o seria\n\nfacilmente escrita como:\n\n\n\n5.2. Estrate?gias de Busca 26\n\ncrypto(V ars) : ?\n\nV ars = [S, E, N, D, M, O, R, Y],\n\nV ars :: [0, 9],\n\nM 6= 0,\n\nS 6= 0,\n\n1000.S + 100.E + 10.N + D\n\n+ 1000.M + 100.O + 10.R + E\n\n= 10000.M + 1000.O + 100.N + 10.E + Y,\n\nall different(V ars).\n\nInicialmente, as varia?veis do problema (V ars) e seus dom??nios sa?o definidos. Em se-\n\nguida, condiciona-se que M e S sejam na?o-nulos, pois sa?o os primeiros d??gitos dos nu?meros,\n\ne se escreve a expressa?o aritme?tica da soma. Por fim, impo?e-se a condic?a?o all different,\n\npertencente a um conjunto de restric?o?es denominadas restric?o?es globais, para garantir que\n\nas varia?veis tenham valores distintos entre si.\n\nAs restric?o?es globais compo?em um dos pilares de pesquisa em PR. Uma restric?a?o\n\nglobal caracteriza-se, intuitivamente, como um conjunto de restric?o?es mais elementares\n\ncuja estrutura global pode ser facilmente explorada pelos resolvedores [16]. No exemplo\n\nacima, a restric?a?o global e? equivalente a escrever, para cada par de varia?veis vi, vj ? V ars,\n\na desigualdade vi 6= vj .\n\nAle?m de permitirem uma modelagem mais compacta do problema, tambe?m e? poss??vel\n\nimplementar propagadores espec??ficos para tais restric?o?es, mais eficientes em restringir\n\nos dom??nios das varia?veis. No caso de all different, constro?i-se usualmente um grafo\n\nbipartido para cada restric?a?o global desse tipo, aplicando-se algoritmos espec??ficos para\n\nexplorar tal estrutura [7]. Cata?logos de restric?o?es globais e seus propagadores podem ser\n\nencontrados em [7] e [16].\n\nA flexibilidade de modelagem de PR, principalmente pelo uso das restric?o?es globais,\n\nsera? essencial para a modelagem mais completa do PTRD e para a obtenc?a?o de soluc?o?es\n\nva?lidas, como sera? descrito com detalhes nos cap??tulos 6 e 7.\n\n5.2 Estrate?gias de Busca\n\nA eficie?ncia de um resolvedor PR esta? intrinsicamente relacionada ao modo como a busca\n\nde uma soluc?a?o va?lida e? realizada. A forma mais trivial baseia-se em, para cada varia?vel,\n\nescolher e atribuir um valor arbitra?rio de seu dom??nio. Assim que todas as varia?veis\n\n\n\n5.2. Estrate?gias de Busca 27\n\nestiverem atribu??das, deve-se enta?o checar se alguma restric?a?o foi violada. Tal me?todo e?\n\ndenominada gerar-e-testar e, claramente, possui o menor desempenho.\n\nOutra forma de busca sistema?tica, conhecida como backtracking, consiste em estender\n\nincrementalmente soluc?o?es va?lidas parciais, escolhendo-se repetidamente valores para as\n\nvaria?veis ainda livres. Assim que todas as varia?veis pertinentes a uma certa restric?a?o es-\n\ntiverem atribu??das, verifica-se enta?o se ela foi violada. Caso positivo, o algoritmo retorna\n\npara a u?ltima varia?vel que ainda possua valores alternativos em seu dom??nio, seleciona\n\num novo valor e o procedimento e? repetido. Apesar de ser mais eficiente que o procedi-\n\nmento de gerar-e-estar, o algoritmo de backtracking ba?sico ainda e? bastante ineficiente,\n\nprincipalmente pelo fato de que a violac?a?o de restric?o?es e? detectada muito tardiamente.\n\nDesta forma, mecanismos de propagac?a?o de restric?o?es, tambe?m chamados de te?cnicas\n\nde consiste?ncia local, sa?o geralmente acoplados ao backtracking para contornar tal pro-\n\nblema. Estes mecanismos buscam remover valores inconsistentes dos dom??nios a cada\n\natribuic?a?o nova de valor, reduzindo o tamanho da a?rvore de backtracking e, assim, agi-\n\nlizando o processo de busca. Usualmente, os propagadores baseiam-se em um grafo de\n\nrestric?o?es, onde ve?rtices representam varia?veis e, as arestas, restric?o?es do problema. A\n\npartir de tal grafo, sa?o analisadas as inconsiste?ncias dos dom??nios usando algoritmos\n\ncomo no?-consiste?ncia, arco-consiste?ncia e caminho-consiste?ncia [23]. Ale?m disso, res-\n\ntric?o?es globais tambe?m implementam algoritmos de propagac?a?o mais espec??ficos para os\n\nsubproblemas que representam, tal como mostrado anteriormente com a restric?a?o global\n\nall different.\n\nPara exemplificar a estrate?gia de backtracking, suponha, por exemplo, a formulac?a?o\n\nde criptoaritme?tica mostrada anteriormente. Antes do in??cio da busca, o algoritmo de\n\npropagac?a?o ja? e? capaz de eliminar valores dos dom??nios de todas as varia?veis, como mos-\n\ntrado em [41]. Seja v1 ? {0, 1} o vem-um da coluna correspondente a?s varia?veis E, O, N e\n\nv2 ? {0, 1} o vai-um da coluna S, M, O. Temos, pela restric?a?o aritme?tica, que:\n\nv1 + S + M = O + 10.v2.\n\nPortanto, o primeiro d??gito da palavra MONEY, M, e? claramente v2. Como v2 ? 1 e\n\nM 6= 0, enta?o o dom??nio de M pode ser reduzido para [1]. Por all different, o valor 1 e?\n\nremovido de todos os demais dom??nios. A equac?a?o anterior torna-se, desta forma,\n\nv1 + S = O + 9.\n\nIsto implica que S ? 8 e, assim, o dom??nio de S e? reduzido para [8, 9]. Como v1 + S ?\n\n10, O ? 1 mas, como o valor 1 foi removido pela restric?a?o de all different, o dom??nio de\n\n\n\n5.3. Otimizac?a?o em PR 28\n\nO torna-se [0] e, consequ?entemente, v2 = 0 e o dom??nio de S reduz-se para [9]. As demais\n\nvaria?veis, D, E, N, R, Y, te?m como dom??nio resultante da propagac?a?o inicial o intervalo [2, 8].\n\nAssim, o mecanismo de backtracking se inicia com os dom??nios das varia?veis ja? reduzi-\n\ndos. A pro?xima etapa consiste em escolher uma varia?vel com dom??nio na?o-unita?rio e um\n\nvalor de atribuic?a?o. Apo?s escolhidos, a propagac?a?o de restric?o?es e? realizada novamente e,\n\nse alguma inconsiste?ncia for encontrada, escolhe-se um novo valor ate? que uma atribuic?a?o\n\nva?lida seja encontrada ou se prove que o problema na?o possui soluc?a?o. Por exemplo, e?\n\nposs??vel escolher a varia?vel N e o valor 6. Em seguida, a propagac?a?o removeria o valor 6 de\n\ntodos os dom??nios, e o processo assim continuaria. Uma soluc?a?o va?lida para o problema\n\nseria S = 9, E = 5, N = 6, D = 7, M = 1, O = 0, R = 8 e Y = 2.\n\nAs pol??ticas de busca por atribuic?o?es va?lidas sa?o essencialmente heur??sticas e variam\n\nbastante quanto a? ordem em que as varia?veis ou dom??nios sa?o testados [23]. Todo o espac?o\n\nde busca pode ser coberto ou na?o, e tambe?m podem incluir mecanismos de propagac?a?o\n\nde restric?o?es auxiliares.\n\nComo exemplos, podemos citar as pol??ticas de first-fail, que atribui inicialmente para\n\nas varia?veis com os menores dom??nios; most constrained, que seleciona as varia?veis relacio-\n\nnadas em mais restric?o?es; e split-domain, que explora os dom??nios tal como um algoritmo\n\nde divisa?o-e-conquista. O me?todo de busca ideal deve ser escolhido de acordo com as\n\ncaracter??sticas do problema.\n\n5.3 Otimizac?a?o em PR\n\nA qualidade de uma soluc?a?o em PR e? quantificada por meio de uma func?a?o objetivo, e as\n\nte?cnicas devem buscar maximiza?-la ou minimiza?-la, conforme o caso. Assim, um problema\n\nde Otimizac?a?o em PR, ale?m do conjunto de restric?o?es a serem satisfeitas, tambe?m possui\n\numa func?a?o objetivo que mapeia cada atribuic?a?o va?lida para um valor nume?rico, sendo\n\nque o objetivo e? minimizar (ou maximizar) este valor.\n\nA principal te?cnica para otimizac?a?o em PR e? o Branch and Bound [2], que utiliza\n\numa func?a?o de avaliac?a?o heur??stica subestimadora (em problemas de minimizac?a?o) para\n\nclassificar atribuic?o?es parciais de soluc?o?es. O algoritmo se comporta tal como uma busca\n\nem largura: dentro de um conjunto de atribuic?o?es para uma varia?vel, as soluc?o?es parciais\n\ncom valores (heur??sticos) acima de um determinado limite (ou bound ) sa?o descartadas.\n\nEste limite e? inicialmente colocado como muito alto, e e? substitu??do quando uma atribuic?a?o\n\ncompleta va?lida e? encontrada.\n\nNo modelo do PTRD aqui estudado, o foco sera? dado apenas a? satisfac?a?o de restric?o?es,\n\ntanto devido a? dificuldade do problema, como pela falta de dados de entrada referentes\n\naos custos de bombeamento e de criac?a?o de interfaces entre produtos. A otimizac?a?o do\n\nproblema e? relacionada, desta forma, como sugesta?o para trabalho futuro no cap??tulo 9.\n\n\n\nCap??tulo 6\n\nModelo Inicial para o Problema de\n\nEscalonamento\n\nPro?logo\n\nO artigo a seguir concentra-se na primeira versa?o da formulac?a?o aplicada a? fase de escalo-\n\nnamento do PTRD. Tambe?m e? realizada uma descric?a?o sucinta das heur??sticas utilizadas\n\npara a gerac?a?o dos planos.\n\nInicialmente, descreve-se o problema de forma geral e as restric?o?es a serem tratadas.\n\nAs heur??sticas para a fase de planejamento sa?o enta?o citadas, seguidas da formulac?a?o\n\nda fase de escalonamento em PR. Por fim, alguns resultados para as insta?ncias reais\n\nfornecidas pela Petrobras sa?o mostrados. Para auxilar a compreensa?o da formulac?a?o\n\nmatema?tica do problema, a tabela 6 apresenta uma s??ntese da notac?a?o utilizada para as\n\nvaria?veis e constantes do modelo.\n\nEste artigo foi aceito na confere?ncia internacional IEEE 11th International Confe-\n\nrence on Computational Science and Engineering (CSE08, http://www.icmc.usp.br/\n?cse08/), que ocorreu em Sa?o Paulo, Brasil, nos dias 16 a 18 de julho de 2008. Neste\n\nano, cerca de 30% de mais de 190 trabalhos foram aceitos.\n\nO artigo foi publicado nos anais da confere?ncia, Proceedings of the 11th IEEE Inter-\n\nnational Conference on Computational Science and Engineering - CSE\u201908 [28], e eletro-\n\nnicamente, pela editora do IEEE. No decorrer deste cap??tulo, segue sua transcric?a?o na\n\n??ntegra, em ingle?s.\n\n29\n\n\n\n30\n\nNotac?a?o Significado\n\nDel? Prefixo para varia?veis de planos de entrega (delivery)\n\nDem? Prefixo para varia?veis de planos de demanda\nDet? Prefixo para planos determinados\nP d? Prefixo para varia?veis de produto\nP r? Prefixo para varia?veis de planos de produc?a?o\n\nU nd? Prefixo para planos na?o-determinados\n\n?Acc Sufixo para varia?veis de acu?mulo de volume\n\n?DueDate Sufixo para prazo de um plano de entrega\n?Dir Sufixo para varia?veis de direc?a?o de fluxo nos dutos\n?F R Sufixo para varia?veis de vaza?o (flow rate)\n?R Sufixo para o conjunto de dutos de uma rota\n\n?P os Sufixo para varia?vel de posic?a?o de um plano\n?P osOr Sufixo para varia?vel de posic?a?o de um plano em seu tanque origem\n?P osDest Sufixo para varia?vel de posic?a?o de um plano em seu tanque destino\n?T qOr Sufixo para tanque de origem de um plano\n\n?T qDest Sufixo para tanque de destino de um plano\n?Ti Sufixo para varia?veis de tempo inicial\n?Tf Sufixo para varia?veis de tempo final\n?V Sufixo para os volumes pre?-definido de planos\n?V ol Sufixo para varia?veis de volume\n\nAdjp Pares de produtos/operac?o?es compat??veis no duto p\n\nDelRPi,j Posic?a?o do plano i no duto j\n\nDemord Conjunto de planos de demanda\n\nDelord Conjunto de planos de entrega\n\nDelordp Conjunto de planos de entrega\n\nM axF Ri,j Vaza?o ma?xima de um plano i no duto j\n\nP rord Conjunto de planos de produc?a?o\n\nTabela 6.1: Notac?a?o utilizada no modelo PR.\n\n\n\n1. Introduction 31\n\nHeuristics and Constraint Programming\nHybridizations for a Real Pipeline Planning\n\nand Scheduling Problem\n\nArnaldo V. Moura, Cid C. de Souza, Andre A. Cire, Tony M.T. Lopes\nInstitute of Computing - University of Campinas\n\n13081-970, Campinas, SP\n{arnaldo, cid}@ic.unicamp.br, {andre.cire, tony.lopes}@gmail.com\n\nAbstract\n\nPipeline network systems are considered the major option for transporting\n\npetroleum derivatives from refineries to local markets, in view of their many\n\neconomic and environmental advantages. This article deals with a large real-\n\nworld pipeline system planning and scheduling problem, in which different\n\nproducts should be transported in a pipeline network in order to supply\n\nmarket demands, while also satisfying hard operational constraints related\n\nto product sequencing, flow rates and tank capacities. We propose a novel hy-\n\nbrid approach based on two iterative phases comprised by a heuristic strategy\n\nand a Constraint Programming model. The resulting algorithm was tested\n\nwith real-world instances yielding feasible solutions for all of them.\n\nKeywords: constraint satisfaction, heuristic methods, scheduling, combinatorial algorithms,\n\ndecision support.\n\n1 Introduction\n\nPlanning and scheduling problems have been receiving increasing attention in the last few\n\nyears, mainly due to the need to deal efficiently with large, complex real-world settings in\n\norder for companies to persevere in highly competitive markets. A notable example stems\n\nfrom the oil industry, in which ethanol and several petroleum derivatives, like gasoline,\n\ndiesel, and naphtha must be transported from refineries to depots where consumer markets\n\nare located. In this context, pipeline networks are considered the principal transportation\n\nmode in comparison to rail, road, and vessels, since they are environmentally safer and\n\nmuch more economical. For instance, the Brazilian system managed by PETROBRAS\n\nhas more than 11,300 km of pipelines and supplies 1,600 barrels per day [15].\n\n\n\n1. Introduction 32\n\nA multiproduct pipeline network is composed of depots linked by bidirectional ducts.\n\nIn order to operate the network, one must determine how product volumes should be\n\ntransferred among depots, as well as their exact pumping time intervals, and how in-\n\nventories should be managed. Local markets demands and production schedules, both\n\nrepresented by daily volumes at each depot, must be satisfied at all times. Furthermore,\n\nseveral conditions regarding pumping flow rates, product contamination and tank alloca-\n\ntion must be taken into account.\n\nEven though research in this field can lead to a significant operational cost reduc-\n\ntion, the transportation planning and scheduling procedures are, typically, still executed\n\nmanually in most oil companies. Moreover, studies from the literature usually focus on\n\nmore restrictive and smaller pipeline topologies, each with a reduced set of operational\n\nconstraints that, despite making the problem more tractable, are far from representing\n\nreal-world scenarios. This is a consequence of the large number of hard sequencing and\n\ntiming constraints involved, aggravated when large and more generic topologies are con-\n\nsidered. In face of these difficulties, manual planning is usually deficient, and down-level\n\noperators must frequently apply corrections in pumping plans in order to make the system\n\nwork appropriately.\n\nWe propose a new algorithm for generating feasible solutions for a very-large pipeline\n\nplanning and scheduling problem, considering most of the hardest real-world constraints.\n\nOur approach has two phases: the planning phase is implemented as a constructive heuris-\n\ntic that generates orders, representing necessary transfers between two depots; and the\n\nscheduling phase, a Constraint Programming (CP) model, is used to assign time inter-\n\nvals to orders. The resulting algorithm, specially tailored to deal with large instances,\n\ngenerates more reliable pumping plans and can also be used to validate production and\n\ndemand scenarios.\n\nThis project was a joint work with PETROBRAS, the Brazilian oil company, which\n\nprovided both problem specifications and instances, as well as analyzed the proposed\n\nsolutions. The prototype developed is being considered for use as an auxiliary tool to aid\n\nplanners at PETROBRAS. This strategy proved to be very flexible, permitting the easier\n\naddition or removal of operational requirements, and facilitating the test of new search\n\nheuristics.\n\nThe article is organized as follows. Section 2 presents a literature review. Section\n\n3 describes the problem and Section 4 discusses the solver. Finally, section 5 shows the\n\ncomputational results and section 6 presents some conclusions and points to further work.\n\n\n\n2. Literature Review 33\n\n2 Literature Review\n\nIn the literature, one of the most studied settings involves transporting petroleum deriva-\n\ntives from a single origin to multiple destinations. One pipeline connects an oil refinery to\n\ndepots distributed in series along its segments. For this case, [9] developed a knowledge-\n\nbased heuristic search for an Indian pipeline, composed of three depots, four products\n\nand a 1-month time horizon. Considering a more constrained problem, [16] presented\n\ntwo large-size discrete MILP formulations, strongly based on disjunctive programming,\n\nfor scheduling a real-world Brazilian instance with five depots and four products. Later,\n\n[17] improved this model by adding integer cuts and redundant constraints.\n\nIn addition to the discrete formulations, [3] developed a continuous time and contin-\n\nuous volume model representation based on a MILP approach studied by [16]. Recently,\n\nanother continuous-time model with non-linear constraints (MINLP) for this same con-\n\nfiguration was proposed by [18], who covered pumping flow rate variation for a 130-hours\n\ntime horizon.\n\nAnother studied topology was composed of a refinery, a pipeline, and a depot with\n\na tank farm [10]. For this case, a decomposition strategy similar to the one proposed\n\nby [13] was developed, involving a MILP submodel, an auxiliary routine, and a main\n\ndiscrete MILP model. Improvements appeared in [11], now using CP techniques. A\n\nrecent work [19, 21] presented a single continuous-time MILP for a case study proposed\n\nby a Portuguese oil distribution company. Although simpler in the operational details,\n\nit added inventory management constraints for a 1-month time horizon. An expansion\n\nwas published in [20], with variable flow rates, intermittent pipeline operation, variable\n\nsettling periods, and rescheduling.\n\nThere are also several approaches dealing with multiple origins and destinations within\n\na complex pipeline network, albeit neglecting most of the hard constraints in order to\n\nmake the problem tractable by the methods used. In [4], an heuristic method, known\n\nas A-Teams, was applied to a relaxed real-world pipeline system, but was unable to find\n\nany feasible solutions. A much more simplified problem version was solved by [5], which\n\nimplemented a Genetic Algorithm for a directed tree network topology with 8 depots and\n\nonly a few operational constraints. A similar work using evolutionary algorithms and\n\nMILP models is presented in [6].\n\nA different approach is discussed in [14], which addressed the pipeline scheduling\n\nas a general-purpose artificial intelligence planner problem, albeit not effective for large\n\ninstances. A more recent application of metaheuristics to more general topologies, but\n\nwith relaxed operational constraints, can be found in [1, 7].\n\n\n\n3. Problem Description 34\n\n3 Problem Description\n\nIn this section, we give a cursive description of the problem, as may be conveyed by field\n\nengineers. In the sequel, a more formal discussion will be presented. As an illustration,\n\nFigure 1 shows a sample network with 4 depots, B0, B1, B2, and B3, interconnected by 5\n\npipelines. Between depots B2 and B3, there are 2 pipelines, which is a common scenario in\n\npractice. Each depot also has its own tank farm. For instance, depot B1 has storage tanks\n\nfor products P0, P1 and P2. Each tank contains an initial volume, shown in standardized\n\nunits. Ducts are shown completely filled with product volumes, also given in standardized\n\nunits. In this network, products P0 and P2 cannot make contact since they are not\n\ncompatible.\n\n3.1 Problem Constraints\n\n1. Pipelines operate in an intermittent fashion and must always be completely filled.\n\nIn order to pump out a certain volume from one side, the same volume must be\n\npumped in from the other extremity. No interface losses are considered. Volumes\n\npumped-out can either enter a tank or move directly into another pipeline. An initial\n\nlist of products inside each pipeline, with their respective volumes and destinations\n\nis known.\n\n2. At each depot there are tanks to store certain products, but it is not necessary to\n\nhave tanks for all products. A tank can store only one pre-defined product and its\n\ncapacity must always be respected. Additionally, a tank is not allowed to pump into\n\nmore than one pipeline at a time, and all operations in a tank must be disjunctive\n\nin time. The initial product level in each tank is known.\n\n3. There is a maximum flow rate per pipeline, per pumping direction, and for each\n\nproduct. Flows must respect the least maximum rate for all products in a pipeline.\n\n4. Some pairs of products can not make contact, else a quality loss will ensue. Products\n\nthat can not make contact are called incompatible. It is possible, nevertheless, to\n\nuse a third product, called a plug, to separate two incompatible products. Of course,\n\nthe plug itself must be compatible with both products it separates.\n\n5. A route is a sequence of depots and non-repeating pipelines that is traversed by\n\na certain product volume. A volume in transit can only leave its route at the\n\nfinal destination tank. Although new routes can be created, choices dictated by\n\nhuman experience are to be preferred, since they might account for other implicit\n\noperational restrictions. A list of known routes is given.\n\n\n\n4. The Solver Framework 35\n\n6. Productions and demands are defined per depot and per product, each with its\n\nown time interval. However, since future estimates for such data are speculative, a\n\nproduction (demand) is redefined in a daily basis by linearly distributing its volume\n\nduring the days that comprise its active time interval. The algorithm is at liberty to\n\ninject a production (extract a demand) from the system at any instant and at any\n\nrate during a day. Furthermore, a certain given percentage of such daily production\n\n(demand) can be postponed to the next day, as long as it does not violate its original\n\ntime interval of activation.\n\n3.2 Solution and Goals\n\nA solution is defined as a set of continuos and nonpreemptive pumping operations. Each\n\nsuch operation contains information about the product, volume, route, origin and des-\n\ntination tanks, as well as start and end pumping times. Once a pumping operation is\n\nconcluded, its corresponding volume must follow the designated route until it reaches the\n\ndestination tank. However, a volume in transit may stop at any instant and at any point\n\nalong its route, as long as it is not interleaved with other products. The main goal is to\n\nfind a solution that satisfies both all operational as well as all production and demand\n\nconstraints.\n\nFigure 1: A pipeline network example.\n\n4 The Solver Framework\n\nWhen facing a complex and real sequencing problem, it is very common to decompose\n\nit [4, 10, 11]. One frequently used decomposition scheme, also applied here, divides the\n\nproblem into two parts:\n\n1. Planning and Routing: This sub-problem aims at satisfying all productions and\n\ndemands by creating a set of orders that specify routes and volumes.\n\n\n\n4. The Solver Framework 36\n\n2. Sequencing and Scheduling: Upon receiving a set of orders, this sub-problem defines\n\nthe sequence and exact times for pumping operations at depots, including those\n\nspecial operations used to store production and extract demands.\n\nThe accumulated experience at PETROBRAS showed that the first part is the easiest\n\nto handle manually. We followed some of their guidelines and human expertise when\n\ndeveloping heuristic strategies for our planning phase.\n\nThe second part, the so called scheduling phase, is the hardest. At PETROBRAS it is\n\nsolved manually by trial-and-error using a proprietary simulation software that can check\n\nsimple constraints. In order to properly solve this part, we used CP model.\n\nAlthough the planning phase is designed to produce a good set of orders, on occasion\n\nit might create infeasible sets. Or the scheduling phase may not be able to find a feasible\n\nsolution in a reasonable time. In any case, the planning phase must be activated again,\n\nsince it uses randomization and can produce a new and different set of orders. The\n\ninteraction between the two phases is shown in figure 2.\n\nScheduling Phase\n\nPlanning Phase\n\nInstance\n\nSet of Orders\n\nSolution\n\nNo Solution\n\nFigure 2: Interaction between phases in the solver.\n\n4.1 The Planning Phase\n\nThe planning phase defines a set of orders necessary to satisfy all products demands within\n\nthe time horizon. To this end, we developed a heuristic that incrementally builds a set of\n\norders in a randomized and constructive way.\n\nFor any single order, its product, volume, origin depot, destination depot, origin tank,\n\ndestination tank, route, and due date must be determined. These characteristics are\n\ndetermined sequentially, as described below:\n\n1. Product, Destination Depot, and Due Date: For every triple of product p, destina-\n\ntion depot bd and day t, we define Vp,bd,d = H ? (lastMinute(t) ? T Np,bd), where\n\nH is the last minute in the horizon, and T Np,bd is the minute when enough of the\n\n\n\n4. The Solver Framework 37\n\nappropriate product is available, in all depots, to fully satisfy the demand at day t.\n\nThe idea is to satisfy any pressing demands first. We randomly select some triple\n\nwithin the best ?1 percent triples for the most critical Vp,bd,t values.\n\n2. Origin Depot and Route: For every pair of origin depot bo and route r starting at\n\nbo and ending at a selected depot bd, we define Vbo,r = (lastMinute(t) ? (T Dp,bo +\n\nT minr,p))/(1 + NRr), where T Dp,bo is the minute when there is any quantity of the\n\nproduct p available at bo, and T minr,p gives the minimum amount of minutes nec-\n\nessary for p to travel route r. Hence, the route with the greatest difference between\n\nearliest arrival and due times, for any volume occurring in it, will be selected. Since\n\nwe endured to avoid flow direction reversals, the term NRr captures the number of\n\nsuch occurences if route r is used. A pair among the best ?2 percent Vbo,r values is\n\nrandomly selected.\n\n3. Origin and Destination Tanks: Let Vtq = Captq/(T Aloctq + 1), where tq is a tank,\n\nCaptq is its capacity and T Aloctq is the volume so far assigned to it. A big Vtq\nindicates a large tank with few allocations. The origin tank to and the destination\n\ntank td are selected within the ?3 percent tanks with larger Vtq values inside the\n\norigin depot and the destination depot, respectively.\n\n4. Volume: The volume of an order is determined by its origin and destination tanks.\n\nAssume that in some tank t all orders allocated before this new one have already been\n\nfulfilled, leaving a quantity T Qdet in the tank. This way V olume = min{Capto ?\n\nT Qdeto, Captd ? T Qdetd}. By executing orders in this sequence, no undertankage\n\nor overtankage will occur.\n\nThree types of orders are created. There are production and demand orders that\n\nselect tanks to accommodate productions in the origin depot and to satisfy demands\n\nin the destination depot, respectively. There are also delivery orders, which represent\n\nvolume transfers throughout the chosen route. Delivery orders, in turn, are of two types:\n\ndetermined, which are orders generated by the heuristic, and undetermined orders. The\n\nlater are created randomly and, although they are assigned a route, they do not carry\n\ninformation about the origin or destination tanks. Undetermined orders represent volumes\n\nthat are not transfered to satisfy demands or store production, but are only used to push\n\nother volumes along the pipeline. They are also used to free space in tanks in order to\n\naccommodate future productions.\n\nThe planning phase ends when there is no more pairs of product and destination to\n\nbe chosen, meaning that every demand has been satisfied. In real cases, at this moment\n\nthere could be some production that was left unused. This production can usually be\n\nstored in its origin.\n\n\n\n4. The Solver Framework 38\n\n4.2 The Scheduling Phase\n\nGiven that the planning phase already selects routes and tanks, the scheduling phase must\n\ngather additional information to control the size of the model, incorporating special struc-\n\ntures geared to effectively explore the search space. Notably, knowing which pipelines a\n\ndelivery order will traverse provides lower bounds on the corresponding pumping volumes\n\nand flow rates. This eliminates incompatible order sequences in advance and makes it\n\npossible to infer special conditions to constrain time variables.\n\nHowever, taking advantage of these structures using discrete MILP models, as stud-\n\nied in [10, 17], turned out to be impracticable for two main reasons. Firstly, most of\n\nthe problem restrictions are computationally costly, or impossible, to model as linear\n\nconstraints, specially those related with variable flow rates and direct flow connections\n\nbetween pipelines. Secondly, the MILP models would have to deal with multiple pipelines\n\nand depots, and investigation showed that the number of integer variables and constraints\n\nwould increase at an unacceptable rate.\n\nOn the other hand, heuristics and meta-heuristics strategies per se, as described in\n\n[5, 6], are greatly impaired when too many operational constraints are considered. This\n\nis particularly disturbing when slight modifications in a solution give rise to collateral\n\neffects on the problem structure as a whole. For example, products can flow directly from\n\none pipeline to another connecting pipeline. Thus, changing a single pumping start time\n\nmay delay the arrival of a number of other products in many connected pipelines, which\n\ncan turn the solution into an infeasible one. Repairing procedures could be an elegant\n\nchoice to ameliorate this situation, but their bias can make the model loose robustness.\n\nIn face of all these issues, we propose a new CP model that explicitly takes advantage\n\nof the problem\u2019s diverse structures, while also providing the flexibility to consider new\n\noperational requirements or implement new searching heuristics. CP fundamentals can\n\nbe found in [2, 12]. The CP programming paradigm is distinguished by a powerful model-\n\ning language, reinforced by global constraints, like alldiff and cumulative, that exploit\n\nspecific problems patterns and provide specialized constraint propagation mechanisms [8].\n\nCP is thus well-suited for the scheduling phase. In particular, it can easily model mul-\n\ntiple representations in a compact way, which are then interconnected by element global\n\nconstraints, thus taking advantage of each problem structure.\n\nOur model comprises two different CP perspectives, or views, containing both specific\n\nvariables and constraints to deal with the corresponding structures they focus on, as well\n\nas additional redundancy used to enforce constraint propagation. Firstly, the orders view\n\nwill handle order restrictions. In the sequel, their variables for production, demand and\n\ndelivery, respectively, will be identified by the prefixes Pr*, Dem* and Del*. Secondly,\n\nthe resources view will represent pipeline and tank restrictions, and related variables\n\nwill be identified by the prefix Op*. In addition, the following notation is used across\n\n\n\n4. The Solver Framework 39\n\nthe mathematical models detailed below. For common variables suffixes we use ?V ol for\n\nvolume; ?Ti and ?Tf for start and ending times; ?F R for flow rate; ?Dir for flow direction\n\nin pipelines; ?V for orders\u2019 pre-defined volumes; ?R for pipelines that occur in a route;\n\nand ?T qOr and ?T qDest for orders\u2019 pre-defined origin and destination tanks, respectively.\n\nOther prefixes include P d?, for product; and Det? and Und?, for marking delivery orders\n\nas determined or undetermined. Finally, P ip denotes the pipeline set and T nk denotes\n\nthe tank set. Note that ?Ti and ?Tf are continuous variables, while all others are integer\n\nvariables. Domains are easily inferred.\n\nThe Order View\n\nConstraints (1) to (4) below guarantee the satisfaction of production and demand orders.\n\nIn this case, P rord and Demord stand for the set of orders and [?T min, ?T max] denotes\n\ntheir time interval.\n\nP rT mini ? P rT ii, P rT fi ? P rT\nmax\ni , (1)\n\nP rV oli = P rVi, ?i ? P r\nord. (2)\n\nDemT mini ? DemT ii, DemT fi ? DemT\nmax\ni , (3)\n\nDemV oli = (?1).DemVi, ?i ? Dem\nord. (4)\n\nVolumes can be pumped in a staccato manner into the pipeline network. The waiting\n\ntime between two consecutive pump actions determines a pipeline stoppage time. The\n\nparameter ns limits the number of pump actions a delivery order can be broken into.\n\nAlthough this limits the maximum number of pipeline stoppages, it helps to avoid an\n\nexcessive number of small pump actions for each order.\n\nWe consider now two sets of variables: the entering (overscript (e)) and leaving (over-\n\nscript (l)) sets. They correspond, respectively, to pumping operations that inject or ex-\n\ntract derivatives from a duct along a route. The constraints for the internal relationship\n\nin each set of variables is represented by constraints (5) to (9) below. In these equations,\n\nMaxF Ri,j is the maximum flow rate for order i in pipe j, and the superscript\n(?) indicates\n\nthat the constraint is defined for both sets of variables.\n\nDelT i\n(?)\ni,j,k ? DelT f\n\n(?)\ni,j,k, (5)\n\nDelV ol\n(?)\ni,j,k = DelF R\n\n(?)\ni,j,k(DelT f\n\n(?)\ni,j,k ? DelT i\n\n(?)\ni,j,k), (6)\n\nDelF R\n(?)\ni,j,k ? MaxF Ri,j , (7)\n\nDelT f\n(l)\ni,j,k ? DelDueDatei, ?i ? Del\n\nord, (8)\n\n\n\n4. The Solver Framework 40\n\n?j ? {1, ..., ns}, ?k ? DelRi.\nns\n?\n\nj=1\n\nDelV ol\n(e)\ni,j,k =\n\nns\n?\n\nj=1\n\nDelV ol\n(l)\ni,j,k = DetVi, (9)\n\n?i ? Detord, ?k ? DelRi.\n\nThe channeling between these two sets of variables along route segments is posed by\n\nconstraints (10) to (12):\n\nDelT i\n(l)\ni,j,k = DelT i\n\n(e)\ni,j,k+1, (10)\n\nDelT f\n(l)\ni,j,k = DelT f\n\n(e)\ni,j,k+1, (11)\n\nDelV ol\n(l)\ni,j,k = DelV ol\n\n(e)\ni,j,k+1, (12)\n\n?i ? Delord, ?j ? {1, ..., ns}, ?(k + 1) ? DelRi.\n\nThe Resource View: Pipelines\n\nPipelines are represented as two time-ordered operations sequences: the send sequence\n\n(overscript (s)) relates to operations entering a pipeline, and the receive sequence (over-\n\nscript (r)) relates to operations leaving a pipeline. An operation is considered to be a\n\ncontinuous pumping action and, thus, if a sending operation has finished before a receiv-\n\ning operation, the next sending operation must start immediately after the previous one,\n\nin order to push the volume along the route. The exact number of operations in each\n\npipeline p is given by np = 2.ns|Del\nord\np |.\n\nConstraints which regulate time, flow direction and product incompatibilities are posed\n\nby constraint (13) to (16). Here, (?) means that they are defined for both types of se-\n\nquences, and Adjp is the set of operation pairs which may make contact inside a duct.\n\nOpT f\n(?)\ni,p ? OpT i\n\n(?)\ni+1,p, i ? np ? 1, ?p ? P ip. (13)\n\ndisjunctive([OpT i\n(?)\ni,p , OpT f\n\n(?)\ni,p ]\n\nnp\ni=1), ?p ? P ip. (14)\n\n(OpDir\n(?)\ni,p , OpDir\n\n(?)\ni+1,p) ? V alidDirP airs (15)\n\n(OpP d\n(?)\ni,p , OpP d\n\n(?)\nj,p) /? {(pdm, pdn), (pdn, pdm)}, (16)\n\n?p ? P ip, ?(i, j) ? Adjp, ?(m, n) ? IncompatP d\n\nThe necessary channeling constraints between the in and out sequences is detailed\n\nnext. First, we define the accumulate variables (?Acc), which represent the sum of the\n\nvolumes sent and received until the end of each operation. The accumulate relations are\n\n\n\n4. The Solver Framework 41\n\ndefined by constraints (17) to (18) below. The channeling and flow control constraints\n\nare expressed by equations (20) to (21).\n\nOpAcc\n(?)\n0,p = OpV ol\n\n(?)\n0,p, (17)\n\nOpAcc\n(?)\ni,p = OpAcc\n\n(?)\ni?1,p + OpAcc\n\n(?)\ni,p , (18)\n\n?i ? {2, ..., np}, ?p ? P ip. (19)\n\nOpAcc\n(s)\ni,p ? (OpAcc\n\n(r)\nj,p ? OpV ol\n\n(r)\nj,p ) > V olp (20)\n\n? (OpAcc\n(s)\ni,p ? OpV ol\n\n(s)\nj,p ) ? OpAcc\n\n(r)\nj,p &lt;V olp\n\n=? OpT i\n(s)\ni,p = OpT i\n\n(r)\nj,p +\n\n+max(0, (OpAcc\n(s)\ni,p ? OpV ol\n\n(s)\nj,p ) ?\n\n?(OpAcc\n(r)\nj,p ? OpV ol\n\n(r)\nj,p ) ? V olp)/OpF R\n\n(r)\nj,p\n\n? OpT i\n(r)\nj,p = OpT i\n\n(s)\ni,p +\n\n+max(0, V olp ? ((OpAcc\n(s)\ni,p ? OpV ol\n\n(s)\nj,p ) ?\n\n?(OpAcc\n(r)\nj,p ? OpV ol\n\n(r)\nj,p ))/OpF R\n\n(s)\ni,p\n\n? OpF R\n(s)\ni,p = OpF R\n\n(r)\nj,p\n\n?i, j ? {1, ..., np}, ?p ? P ip.\n\n(OpAcc\n(s)\ni,p ? OpV ol\n\n(s)\nj,p ) ? OpAcc\n\n(r)\nj,p &lt;V olp (21)\n\n=? OpF R\n(s)\ni,p ? OpF RMax\n\n(r)\nj,p\n\n?i, j ? {1, ..., np}, ?p ? P ip.\n\nThe Resource View: Tanks\n\nFor each tank t, only one operation sequence is needed, and its size is given by nt =\n\n|Delordt |. For undetermined delivery orders, an operation is created for each tank to which\n\nit might be assigned and only one such operation does not have a null volume. Tank\n\nconstraints are represented by equations (22) to (26):\n\nOpT fi,t ? OpT ii+1,t, (22)\n\nOpAcc0,t = OpV ol0,t, (23)\n\nOpAcci+1,t = OpAcci,t + OpV oli+1,t, (24)\n\n?i ? {1, ..., nt ? 1},\n\n0 ? OpAcci,t ? Capacityt, ?i ? {1, ..., nt}, (25)\n\n\n\n4. The Solver Framework 42\n\ndisjunctive([OpT ii,t, OpT fi,t]\nnt\ni=1), ?t ? T nk. (26)\n\nChanneling Constraints\n\nIn order to relate pipeline and order variables, we use element global constraints over\n\npositional variables. Each of these variables indicates a position in an order sequence\n\nassociated with both a tank (suffixes ?P osOr for origin tanks and ?P osDest for destina-\n\ntion tanks), as well as with pipelines along a route (suffix ?P os). Constraints (27) to (29)\n\nbelow govern pipeline sequencing, and constraints (30) to (42) relate to tank sequencing.\n\nIn these equations, DelPp indicates delivery orders assigned to pipeline p and DelRPi,p\ndenotes the position of p in order i.\n\nalldiff ([DelP os\n(?)\ni,k ]i?DelPp,k?DelRPi,p) (27)\n\nns?1\n?\n\nj=1\n\nDelT i\n(e)\ni,j,k = OpT i\n\n(s)\n\n[ns(DelP os\n(e)\ni,k\n\n)+j],k\n(28)\n\n? DelT f\n(e)\ni,j,k = OpT f\n\n(s)\n\n[ns(DelP os\n(e)\ni,k\n\n)+j],k\n\n? DelV ol\n(e)\ni,j,k = OpV ol\n\n(s)\n\n[ns(DelP os\n(e)\ni,k\n\n)+j],k\n\n? DelF R\n(e)\ni,j,k = OpF R\n\n(s)\n\n[ns(DelP os\n(e)\ni,k\n\n)+j],k\n\nns?1\n?\n\nj=1\n\nDelT i\n(l)\ni,j,k = OpT i\n\n(r)\n\n[ns(DelP osi,k)\n(l)+j],k\n\n(29)\n\n? DelT f\n(l)\ni,j,k = OpT f\n\n(r)\n\n[ns(DelP os\n(l)\ni,k\n\n)+j],k\n\n? DelV ol\n(l)\ni,j,k = OpV ol\n\n(r)\n\n[ns(DelP os\n(l)\ni,k\n\n)+j],k\n\n? DelF R\n(l)\ni,j,k = OpF R\n\n(r)\n\n[ns(DelP os\n(l)\ni,k\n\n)+j],k\n\n?i ? Delord, ?k ? DelRi\n\nDelT i\n(e)\ni,0,0 = OpT i\n\n(s)\nDelP osOri,DelT qOri\n\n(30)\n\nDelT f\n(e)\ni,ns,0 = OpT f\n\n(s)\nDelP osOri,DelT qOri\n\n(31)\n\nDelV oli = OpV ol\n(s)\nDelP osOri,DelT qOri\n\n(32)\n\nDelT i\n(l)\ni,0,|DelRi| = OpT i\n\n(r)\nDelP osDesti,DelT qDesti\n\n(33)\n\nDelT f\n(l)\ni,ns,|DelRi| = OpT f\n\n(r)\nDelP osDesti,DelT qDesti\n\n(34)\n\n\n\n5. Results 43\n\nDelV oli = OpV ol\n(r)\nDelP osDesti,DelT qDesti\n\n(35)\n\n?i ? Delord.\n\nP rT ii = OpT iP rP osi,P rT qi, (36)\n\nP rT fi = OpT fP rP osi,P rT qi, (37)\n\nP rV oli = OpV olP rP osi,P rT qi, ?i ? P r\nord. (38)\n\nDemT ii = OpT iDemP osi,DemT qi, (39)\n\nDemT fi = OpT fDemP osi,DemT qi, (40)\n\nDemV oli = OpV olP rP osi,DemT qi, ?i ? Dem\nord. (41)\n\nalldiff ([DelP osOri, DelP osDestj, (42)\n\nP rP osk, DemP osl](i,j,k,l)?Ordt).\n\nThe Search Procedure\n\nThe strategy for searching a solution is based on a backtrack mechanism [12] in which the\n\norder for selecting variables is as follows. First, pipelines that are involved in a greater\n\nnumber of operations are chosen, and delivery orders with the earliest due dates are\n\nsequenced first in these pipelines (assignment of ?P os variables). Then, the volumes and\n\ntanks for undetermined delivery orders that were sequenced first in these pipelines are\n\nassigned. This is followed by randomly choosing the sequence of tank orders (including\n\nproduction and demand orders as well). Finally, start and end times are assigned for all\n\norders, which are again chosen by the earliest delivery deadline.\n\n5 Results\n\nThe experiments were carried out on a Pentium D 3.40 Ghz CPU, with 4GB of memory.\n\nThe planning and scheduling phases were coded in C++ and compiled using GCC-4.0\n\nwith optimization flag O3. The CP model was solved using ILOG Solver 6.2 and ILOG\n\nScheduler 6.2, with medium to high propagation enforcement.\n\nPart of a typical solution is presented in table 3. As described earlier, a solution is a\n\nsequence of pumping actions and each line in the table describes one such action. Column\n\nheadings are as follows: Ti and Tf are start and end times (in minutes), respectively; V ol\n\nis the pumped volume (in m3); Pd is the product code (G for gasoline, N for naphtha\n\nand D for diesel); T kOr and T kDt are origin and destination tank codes, respectively;\n\nand Route is the route code. A table showing a full solution would continue for several\n\nhundred lines.\n\nA summary of the results for two real instances are shown in table 2. Both instances\n\nshare the same network topology composed of 14 depots, 29 pipelines, 32 products and\n\n\n\n6. Conclusions and Further Work 44\n\n242 tanks distributed among the depots. As can be seen from section 2, these are far\n\nmore complex instances than others that can be found in any previously reported work.\n\nPipelines volumes range from 30 to 8,000 m3, and most of the tank capacities are between\n\n4,000 and 30,000 m3. Instance 1 had a 10-day scheduling time horizon, while instance 2\n\nhad a 7-day scheduling horizon. The maximum number of pumping operations for each\n\ndelivery order was set as ns = 7. Also, parameters ?1, ?2 and ?3, described in section 4.1,\n\nwere set to 10%. As shown in table 2, the algorithm quickly found a feasible solution,\n\ndespite the size of the problems. The planning phase is the fastest and uses little memory,\n\ngenerating more than 800 orders for each instance. Of these, about 25% were delivery\n\norders and the rest were production and demand orders. The scheduling phase consumed\n\na large amount of memory and was the overall bottleneck. This reflects the sizable number\n\nof variables and constraints in the CP model. Experimental results showed that only a\n\nsmall fraction of the orders used up to ns pumping operations. In all cases the solver\n\nfound a solution in a reasonable time, e.g., within 5 minutes. The number of choice points\n\n(i.e., variables assignment) and fails during the solver execution were greatly reduced by\n\nappropriately choosing a sequence for variable assignments, as discussed in section 4.2.\n\nThe majority of variables were assigned as a result of constraint propagation, and this was\n\ngreatly improved by the use of different model views linked by channeling constraints.\n\nFigure 3 shows the total tankage for some product groups of instance 2. A group is\n\nformed by gathering compatible products. The figure exposes volume variations over time\n\nin a typical solution, covering the entire horizon of 7 days. Note that, in certain cases,\n\nthere was a reduction of more than 15,000 m3, attesting to a intense use of the pipeline\n\nnetwork. Mainly, this volume variation indicates refilling activities necessary to maintain\n\ninventory levels, specially for those lines connected to depots with low-capacity tanks. For\n\nthis same reason, some pipelines did not show the typical intermittent usage, but were\n\ncontinuously used throughout the time horizon (not shown in the figure).\n\nThe heuristic guidance provided in the planning phase was also instrumental to im-\n\nprove other important aspects of the solution quality, as noticed by logistic engineers.\n\nFor instance, usually a typical solution showed only a very small number of pipeline flow\n\nreversions, a kind of operation that engineers prefer to keep to a minimum. Also, new\n\nand interesting routes were identified for product flow through the mesh, some of them\n\nsurprising the logistic engineers, who were biased to use almost always the same routes.\n\n6 Conclusions and Further Work\n\nWe proposed a novel algorithm for generating feasible solutions for a very-large multiprod-\n\nuct pipeline network, considering hard real-world constraints including product incompat-\n\nibility, direct transmission between pipelines, flow rate limitations and tank capacities.\n\n\n\n6. Conclusions and Further Work 45\n\nTable 2: Solver Results\nInstance 1 2\nHorizon 10 days 7 days\nOrders 924 845\n\nPlanning Phase Time 1 min 1 min\nPlanning Phase Memory 350MB 309MB\n\nInteger Variables 92,548 90,619\nContinuous Variables 9,752 7,612\n\nConstraints 417,215 401,363\nChoice Points 2,561 2,451\n\nFails 5,232 4,952\nScheduling Phase Time 3 min 4 min\n\nScheduling Phase Memory 3.4 GB 3.2 GB\nTotal Time 4 min 5 min\n\nTable 3: Solution Example\nTi Tf Vol. Pd TkOr TkDt Route\n\n2075 2362 858 G T004 T005 SUG03\n4857 4868 30 N T160 T087 GUG03\n4870 5111 722 D T008 T005 BUG03\n5111 5693 582 D T111 T098 GRC01\n6323 6753 2139 D T004 T077 TRC01\n6753 6871 582 G T009 T012 SUG03\n7211 7889 2030 G T001 T007 TRC03\n7890 8309 1256 G T003 T005 SUG03\n8309 8505 582 D T023 T215 KDD2\n... ... ... ... ... ... ...\n\nThe algorithm has two phases. The planning phase generates the so called orders,\n\nwhich are related to how product volumes should be transmitted between depots. An\n\norder contains information regarding product, volumes, origin and destination tanks, as\n\nwell as delivery deadlines. In this phase, a number of randomized heuristics work together\n\nin order to select appropriate depots, tanks and volumes so as to satisfy demand and\n\nproduction schedules.\n\nThe scheduling phase, on the other hand, assigns start and end times for each order,\n\nsatisfying all deadlines and operational constraints. Several reasons motivated the use of\n\nCP techniques to model the actions in this phase. The scheduling problem is highly over-\n\nconstrained and have several non-linear constraints, easily modeled in the CP paradigm.\n\nBesides, the primary goal was to search for a feasible solution. The choice of variables\n\nfor value assignment in the CP engine prioritizes variables related to orders with earliest\n\n\n\n6. Conclusions and Further Work 46\n\n0\n\n100\n\n200\n\n300\n\n400\n\n500\n\n600\n\n0 2.5 5 7.5 10\n\nDIESEL GAS NAPHTA\n\nTime (103 min)\n\nV\no\nlu\n\nm\ne\n\n(1\n0\n3\n\nm\n3\n)\n\nFigure 3: Instance 2 Tankage Evolution\n\ndelivery deadlines. When no solution was found in this phase, a new set of orders was\n\nrequested from the planning phase.\n\nAs a result, the algorithm was able to find solutions for two real-world instances com-\n\nposed of 14 depots, 29 pipelines, 32 products, and more than 200 tanks, satisfying all\n\nhard operational constraints and offering a more reliable pumping plan to the pipeline\n\noperators. The prototype developed is being considered by PETROBRAS as an auto-\n\nmatic assistant that could be used by the logistic engineers who have the responsibility\n\nof generating operational plans to run the entire pipeline network on a daily basis.\n\nThere are several opportunities for further research related to this problem. First,\n\nnew real-world constraints are being considered to improve the adequacy of the overall\n\nmodel. These include inventory management restrictions and energy hourly limitations\n\nat the depots. Also, one can implement more sophisticated search heuristics for both the\n\nplanning and scheduling phase, making the overall approach capable of dealing with more\n\nspecific real instances classes. Finally, one can consider objective functions that would\n\nhelp guide the heuristics. This would provide a yardstick, based on a uniform cost grid,\n\nthat could be used to gauge solution quality, thus allowing the search for better solutions\n\nacross several problem instances.\n\nAcknowledgment The authors gratefully acknowledge financial support from FAPESP\n\nunder grants 05/57343-0 and 05/57344-7, from CNPq under grant 305781/2005-7, and\n\nfrom PETROBRAS under grant TI-SPS No 0200-0012829-05-2. The cooperation of Fer-\n\nnando Marcellino, Enio Medeiros, Andre? Lima and Leandro Barcelos were also instru-\n\nmental.\n\n\n\nREFERENCES 47\n\nReferences\n\n[1] V. Alves and V. J. Filho. Pipeline scheduling of petroleum derivatives using genetic al-\n\ngorithm. In IV Congresso Brasileiro de Pesquisa e Desenvolvimento em Petro?leo e Ga?s,\n\nCampinas, Brazil, 2007.\n\n[2] R. Bartak. Constraint programming: In pursuit of the holy grail. In Proceedings of Week\n\nof Doctoral Students (WDS99), pages 555\u2013564, Prague, Czech Republic, 1999.\n\n[3] D. C. Cafaro and J. Cerda?. Optimal scheduling of multiproduct pipeline systems using\n\na non-discrete MILP formulation. Computers &amp; Chemical Engineering, 28(10):2053\u20132058,\n\n2004.\n\n[4] E. Camponogara and P. S. Souza. A-Teams for oil transportation problem through\n\npipelines. In Information Systems Analysis and Synthesis, Orlando, United States, 1996.\n\n[5] D. S. Crane, R. L. Wainwright, and D. A. Schoenefeld. Scheduling of multi-product fungible\n\nliquid pipelines using genetic algorithms. In Proceedings of the 1999 ACM Symposium on\n\nApplied Computing, pages 280\u2013285, San Antonio, USA, 1999.\n\n[6] J. de la Cruz, A. Herra?n-Gonza?lez, J. Risco-Mart??n, and B. Andre?s-Toro. Hybrid heuristic\n\nand mathematical programming in oil pipelines networks: Use of immigrants. Journal of\n\nZhejiang University SCIENCE, 6A(1):9\u201319, 2005.\n\n[7] E. M. S. Filho, V. J. Filho, and L. S. de Lima. Variable neighborhood search (VNS) applied\n\nto pipeline distribution problem with capacity constraints. In IV Congresso Brasileiro de\n\nPesquisa e Desenvolvimento em Petro?leo e Ga?s, Campinas, Brazil, 2007.\n\n[8] J. N. Hooker. Integrated Methods for Optimization (International Series in Operations\n\nResearch &amp; Management Science). Springer-Verlag, Secaucus, USA, 2006.\n\n[9] M. M. Sasikumar, P. R. Prakash, S. M. Patil, and S. Ramani. Pipes: A heuristic search\n\nmodel for pipeline schedule generation. Knowledge-Based Systems, 10(3):169\u2013175, 1997.\n\n[10] L. Magatao, L. Arruda, and F. Neves. A mixed integer programming approach for schedul-\n\ning commodities in a pipeline. Computers &amp; Chemical Engineering, 28(1):171\u2013185, 2004.\n\n[11] L. Magatao, L. Arruda, and F. Neves. Using CLP and MILP for scheduling commodities\n\nin a pipeline. Computer-Aided Chemical Engineering, 20B:1027\u20131032, 2005.\n\n[12] K. Marriot and P. Stuckey. Programming with Constraints: An Introduction. MIT Press,\n\nCambridge, Massachusetts, 1a edition, 1998.\n\n[13] R. Ma?s and J. M. Pinto. A mixed-integer optimization strategy for oil supply in distribution\n\ncomplexes. Optimization and Engineering, 4(1):23\u201364, 2003.\n\n[14] R. Milid??u, F. dos Santos Liporace, and C. J. P. de Lucena. Pipesworld: Planning pipeline\n\ntransportation of petroleum derivatives. In Proceedings of ICAPS\u201903 - Workshop on the\n\nCompetition: Impact, Organization, Evaluation, Benchmarks, Trento, Italy, 2003.\n\n[15] PETROBRAS. Relato?rio anual de atividades, 2004.\n\n[16] R. Rejowski and J. M. Pinto. Scheduling of a multiproduct pipeline system. Computers &amp;\n\nChemical Engineering, 27(8):1229\u20131246, 2003.\n\n[17] R. Rejowski and J. M. Pinto. Efficient MILP formulations and valid cuts for multiproduct\n\npipeline scheduling. Computers &amp; Chemical Engineering, 28(8):1511\u20131528, 2004.\n\n\n\nREFERENCES 48\n\n[18] R. Rejowski and J. M. Pinto. A novel continuous time representation for the scheduling of\n\npipeline systems with pumping yield rate constraints. Computers &amp; Chemical Engineering,\n\n32:1042\u20131066, 2008.\n\n[19] S. Relvas, A. P. F. D. Barbosa-Po?voa, H. A. Matos, J. Fialho, and A. S. Pinheiro. Pipeline\n\nscheduling and distribution centre management - a real-world scenario at CLC. In Pro-\n\nceedings of the 16th European Symposium on Computer Aided Process Engineering and 9th\n\nInternational Symposium on Process Systems Engineering, pages 2135\u20132140, Garmisch-\n\nPartenkirchen, Germany, 2006.\n\n[20] S. Relvas, H. A. Matos, A. P. F. D. Barbosa-Po?voa, and J. Fialho. Reactive scheduling\n\nframework for a multiproduct pipeline with inventory management. Industrial &amp; Engineer-\n\ning Chemistry Research, 46(17):5659\u20135672, 2007.\n\n[21] S. Relvas, H. A. Matos, A. P. F. D. Barbosa-Po?voa, J. Fialho, and A. S. Pinheiro. Pipeline\n\nscheduling and inventory management of a multiproduct distribution oil system. Industrial\n\n&amp; Engineering Chemistry Research, 45(23):7841\u20137855, 2006.\n\n\n\nEp??logo 49\n\nEp??logo\n\nO modelo PR apresentado neste trabalho ainda na?o modela as seguintes restric?o?es do pro-\n\nblema: tanques vazios quando recebem produc?a?o local (C4), tempo de certificac?a?o (C5),\n\nnu?mero ma?ximo de envios simulta?neos (C7), alinhamentos proibidos (C8) e manutenc?a?o\n\nde dutos (C15). Mesmo assim, apresenta um modelo inovador e mais abrangente para o\n\nPTRD, sendo capaz de gerar soluc?o?es para insta?ncias reais fornecidas pela Petrobras.\n\nCada insta?ncia era composta por 14 o?rga?os, 29 dutos, 32 produtos e cerca de 240 tan-\n\nques distribu??dos na rede. O horizonte resolvido variava de 7 a 10 dias. Devido a? dificul-\n\ndade de coletar dados de entrada, apenas algumas insta?ncias foram testadas e resultados\n\npara duas foram apresentados, ja? que as demais ainda apresentavam inconsiste?ncias nas\n\ntabelas de entrada.\n\nDentre as dificuldades enfrentadas, destacava-se o fato de que as soluc?o?es ainda esta-\n\nvam pouco operacionaliza?veis na pra?tica, apesar do grande nu?mero de restric?o?es conside-\n\nradas. Um fator que dificultou a expansa?o do modelo estava relacionado ao para?metro ns,\n\no qual representa o nu?mero ma?ximo de operac?o?es de bombeamento para cada plano de\n\nentrega. Quando ns e? pequeno, ha? poucas possibilidades de parada dos planos nos dutos,\n\no que sempre forc?a bombeamentos maiores e elimina diversas possibilidades de soluc?a?o.\n\nPor outro lado, um valor alto para ns cria diversas operac?o?es desnecessa?rias nos dutos,\n\naumentando excessivamente o nu?mero de varia?veis e o tempo de propagac?a?o na execuc?a?o\n\ndo modelo.\n\nDesta forma, o modelo e? mais adequado para topologias menores e cena?rios reais\n\nnos quais as restric?o?es de alinhamento e envios simulta?neos na?o sejam cr??ticas. Sua im-\n\nplementac?a?o tambe?m e? relativamente simples quando comparado ao modelo descrito no\n\ncap??tulo 7 e, assim, torna-se mais vantajoso quando a rede de dutos na?o apresenta todas\n\nas restric?o?es operacionais do PTRD.\n\n\n\nCap??tulo 7\n\nModelo Aprimorado para o\n\nProblema de Escalonamento\n\nPro?logo\n\nO artigo a seguir apresenta em detalhes o novo modelo desenvolvido para a fase de escalo-\n\nnamento, o qual utiliza estruturas de dados mais eficientes e faz extenso uso de restric?o?es\n\nglobais espec??ficas para escalonamento em PR. Ale?m disso, novos me?todos de busca de\n\nsoluc?a?o tambe?m sa?o propostos.\n\nNeste trabalho, as restric?o?es do problema sa?o descritas e o uso de PR e? fundamentado.\n\nEm seguida, explica-se a arquitetura geral do modelo e a fase de Planejamento e? citada,\n\npara enta?o a formulac?a?o em PR ser extensamente detalhada.\n\nEste artigo foi aceito em uma das confere?ncia internacionais mais importantes na\n\na?rea de Programac?a?o por Restric?o?es, a The 14th Principles and Practice of Constraint\n\nProgramming (CP\u201908), que ocorreu em Sydney, Austra?lia, nos dias 14 a 18 de setembro\n\nde 2008. O artigo foi publicado nos anais do congresso, na se?rie Lecture Notes in Computer\n\nScience [29]. Ale?m disso, tambe?m recebeu o pre?mio de Best Paper Award no Applications\n\nTrack nesta mesma confere?ncia.\n\nA versa?o em ingle?s aqui transcrita refere-se ao texto final submetido a? confere?ncia.\n\nA notac?a?o das varia?veis na formulac?a?o matema?tica do texto seguem um padra?o simples\n\ndescrito com detalhes no texto.\n\n50\n\n\n\n1. Introduction 51\n\nPlanning and Scheduling the Operation of a\nVery Large Oil Pipeline Network\n\nArnaldo V. Moura, Cid C. de Souza, Andre A. Cire, Tony M.T. Lopes\nInstitute of Computing - University of Campinas\n\n13081-970, Campinas, SP\n{arnaldo, cid}@ic.unicamp.br, {andre.cire, tony.lopes}@gmail.com\n\nAbstract\n\nBrazilian petrobras is one of the world largest oil companies. Recurrently,\n\nit faces a very difficult over-constrained planning challenge: how to operate\n\na large pipeline network in order to adequately transport oil derivatives and\n\nbiofuels from refineries to local markets. In spite of being more economical\n\nand environmentally safer, the use of a complex pipeline network poses serious\n\noperational difficulties. The network has a complex topology, with around 30\n\ninterconnecting pipelines, over 30 different products in circulation, and about\n\n14 distribution depots which harbor more than 200 tanks, with a combined\n\ncapacity for storing up to 65 million barrels. The problem is how to schedule\n\nindividual pumping operations, given the daily production and demand of\n\neach product, at each location in the network, over a given time horizon. We\n\ndescribe a solution based on a two-phase problem decomposition strategy.\n\nA novel Constraint Programming (CP) model plays a key role in modeling\n\noperational constraints that are usually overlooked in literature, but that are\n\nessential in order to guarantee viable solutions. The use of CP was crucial,\n\nsince it allowed the modeling of complex constraints, including nonlinearities.\n\nThe full strategy was implemented and produced very adequate results when\n\ntested over large real instances. In contrast, other approaches known from\n\nthe literature failed, even when applied to much less complex networks.\n\n1 Introduction\n\npetrobras is ranked as the 14th largest oil company in the world (see www.energyintel.com).\n\nOne of the major sources of costs faced by petrobras is related to transportation, spe-\n\ncially regarding petroleum derivatives, such as gasoline, and biofuel, like ethanol. In this\n\ncontext, pipeline networks are considered the main inland transportation mode in contrast\n\nto rail and road, since they are much more economical and environmentally safer.\n\n\n\n1. Introduction 52\n\nFigure 1: petrobras pipeline networks.\n\nB\n1\nT\n\n0\nP\n\n0\n\nB\n1\nT\n\n0\nP\n\n1\n\nB\n1\nT\n\n0\nP\n\n2\n\nB\n0\nT\n\n0\nP\n\n0\nB\n\n0\nT\n\n0\nP\n\n1\n\nB\n3\nT\n\n0\nP\n\n1\nB\n\n3\nT\n\n0\nP\n\n2\n\nD\n0\n\nD\n1\n\nD\n2\n\nD\n3\n\nD\n4\n\nB\n1\n\nB\n0\n\nB\n2\n\nB\n3\n\nFigure 2: A pipeline network example.\n\nHowever, these advantages ensue a very high operational complexity. For instance,\n\nthe Brazilian pipeline network owned and operated by petrobras has an extension of\n\n7,000 kilometers, comprising 29 individual interconnecting pipelines in which more than\n\n30 different types of products are in circulation. There are 14 distribution depots that\n\ncan store up to 65 millions barrels of these products, stocked in more than 200 tanks\n\nlocated at such depots. A partial illustration of the Brazilian southeastern network is\n\nshown in Figure 1. Pipelines must always be completely filled with products, meaning\n\nthat a volume must be pushed into a duct in order to pump out the same volume at the\n\nother extremity. Moreover, due to chemical properties, certain products can not make\n\ncontact with each other - they are called incompatibles. Also, each product has its own\n\nflow rate interval, and that depends on the flow direction and on the particular pipeline\n\nbeing used. At depots, not all departing and arriving operations can be simultaneous,\n\ndue to restrictions imposed both by the internal valve and ducts layout, as well as by\n\nthe number of local pumps. Tanks can store just one type of product, and extraction or\n\ninjection of volumes can not be simultaneous.\n\nThe problem is how to schedule all individual pumping operations in order to fulfill\n\nmarket demands and store all the planned production. Each pumping operation is defined\n\nby origin and destination tanks, a pipeline route, start and end times, a specific product\n\nand its respective volume. The operations must obey all constraints over the given time\n\nhorizon. The management of all these resources gives rise to a complex planning and\n\nscheduling problem.\n\nCurrently, the problem is solved manually by executing a trial-and-error process with\n\nthe aid of a proprietary simulator that checks whether some simple physical constraints\n\nare being satisfied. This process is very time consuming and, not rarely, the final results\n\nstill violate some of the more complex restrictions. Clearly, this manual process is far\n\n\n\n1. Introduction 53\n\nfrom optimal and limits the efficiency of the network operation. In fact, it is common for\n\nthe company to use trucks for transporting pending volumes, thus increasing the overall\n\ntransportation costs, a situation that could be avoided by a more intelligent use of the\n\npipeline network.\n\nDue to its size and complexity, as well as to its financial impact, the efficient operation\n\nof this large oil pipeline network is one of the most strategic problems faced by logistics\n\nat petrobras today. As will be discussed later, CP was at the core of a computational\n\nmodel devised and used to find good operational solutions for real problem instances, in\n\nan adequate amount of computer time.\n\nProblem Description. As an illustration, Figure 2 shows a sample network with 4\n\ndepots, B0, B1, B2, and B3, interconnected by 5 pipelines. Between depots B2 and B3,\n\nthere are 2 pipelines, which is common to occur in practice. Each depot also has its own\n\ntank farm. For instance, depot B1 has storage tanks for products P0, P1 and P2. Each\n\ntank contains an initial volume. Ducts must always be completely filled. All of these\n\nquantities are measured in standardized units.\n\nThe following constraints must be satisfied:\n\n(1) During the whole planning horizon, a tank can store only a pre-defined product and\n\nits capacity must always be respected. But a depot not necessarily contains tanks to\n\nstore all types of products. All injection and extraction operations in a tank must be\n\ndisjunctive in time.\n\n(2) Pipelines operate in an intermittent fashion and must always be completely filled. No\n\ninterface losses between products are considered. Furthermore, volumes pumped out can\n\neither enter a tank or move directly into another pipe in an assigned route. The initial\n\nsequence of products inside each pipe is given.\n\nFlows in pipelines can change direction dinamically, an event called pipeline flow re-\n\nversal. An example of reversal is illustrated in Figure 3 for a single pipeline topology.\n\nFrom instants t = 0 to t = 2, a product extracted from tank B0T0P2 in depot B0 is being\n\nused to push another product into the tank B1T0P0 in depot B1. As soon as the first\n\nproduct is completely injected into its destination tank at t = 3, the second volume must\n\nreturn to the first depot, since there is no tank for it in depot B1. This is done by using\n\nthe product from tank B1T0P1 to push it back to the origin tank, changing the pipeline\n\ndirection at t = 4 and t = 5.\n\n(3) Depending on the internal arrangement of a depot, certain operations can not be active\n\nsimultaneously. Such sets of operations are called forbidden alignment configurations.\n\nAlso, each depot has an upper limit on the number of outgoing pump operations, which\n\ndepends on the number of available pumps.\n\n(4) A route is an alternating sequence of depots and non-repeating connecting ducts.\n\n\n\n2. Why CP and Related Work 54\n\nFor example, the sequence (B0, D1, B2, D3, B3) represents a valid route in figure 2. Each\n\nproduct in circulation must have a route assigned to it, and a volume can only leave its\n\nroute at the final destination tank. Although there is no restriction barring the creation\n\nof new routes, the most common choices obtained from human experience should be\n\npreferred.\n\n(5) Least maximum flow rates among all products in any route must be enforced.\n\n(6) To separate two incompatible products, it is possible to use a third product, called a\n\nplug, compatible with both products it separates.\n\n(7) Production and demand volumes are defined per depot and per product, each with\n\nits own duration interval.\n\nA solution is defined by a set of pumping operations. Each such operation is taken as a\n\ncontinuous and atomic pumping stream. An operation is defined by specifying information\n\nabout the product, volume, route, origin and destination tanks, as well as start and end\n\npumping times. Once a pumping operation starts, the volume must follow its designated\n\nroute until it reaches the destination tank. However, a pumping operation can be stopped\n\nat any time, as long as no pumped volume (i.e. a volume that composes a whole operation)\n\nis interleaved with other products at any intermediate depot along its assigned route. The\n\nmain goal is to find a solution that respects all operational and physical constrains of the\n\nnetwork, as well as that uses stocks and productions to satisfy all local demands, while\n\nstoring away any remaining production.\n\n2 Why CP and Related Work\n\nPrevious studies from the literature frequently have focused on more restricted or much\n\nsmaller network topologies. Usually, they consist of a single pipe connecting one origin\n\n(a refinery) to multiple depots. Different problem decompositions together with several\n\nMILP formulations [1, 2, 3, 4] were proposed for these cases. Some studies also deal with\n\nvariable pumping flow rates and other non-linear constraints [5, 6]. Other approaches\n\nhandle multiple origins and destinations within a more realistic network, albeit neglecting\n\nmost of the hard constraints in order to make the problem tractable [7]. In [8], a MILP\n\nbased on a network flow model was created to solve a relaxed version of the problem, but\n\nit took more than 50 hours of computer time only to find the LP initial basis.\n\nAs our research indicated, taking advantage of the problem structure using single\n\nMILP models is not practical for two reasons. First, most of the problem restrictions are\n\ncomputationally costly, or even impossible, to model as linear constraints, specially those\n\nrelated with variable flow rates and transmission between pipelines. Besides, MILP models\n\nwould have to deal with multiple pipelines and depots, and investigation showed that the\n\nnumber of integer variables and constraints would increase at an unacceptable rate. On\n\n\n\n3. How CP ? 55\n\nthe other hand, heuristic and meta-heuristic strategies per se are greatly impaired when\n\ntoo many operational constraints are considered. This is particularly disturbing when\n\nslight modifications in a solution give rise to serious collateral perturbations over the\n\nproblem structure as a whole. For example, since products can flow directly from one\n\npipeline to another, changing a single pumping start time may delay the arrival of a\n\nnumber of other products that pass through connected pipelines. This can easily render\n\na candidate solution into an infeasible one.\n\nIn face of all these issues, the use of CP was seen to offer great advantages for mod-\n\neling and solving this problem. Firstly, its powerful modeling language allowed for the\n\nimplementation of operationally crucial constraints, besides providing enough flexibility\n\nto extend the model if new restrictions were risen by pipeline operators. Secondly, and\n\nmost importantly, it was possible to exploit specific problems patterns explicitly. This\n\nis done, for instance, by modeling multiple subproblem representations in order to use\n\nspecialized and adequate constraint propagation mechanisms to solve each of the sub-\n\nproblems. In fact, such multiple perspectives played an important role in the final model,\n\ngreatly improving domain reductions. Furthermore, a preliminary study [9] already indi-\n\ncated that CP would be flexible and powerful enough to treat the real problem faced by\n\npetrobras. Finally, the use of CP was further fostered by its well-known good perfor-\n\nmance when treating scheduling problems [10]. In addition, CP is more suitable for our\n\ncase since any feasible solution is enough.\n\n3 How CP ?\n\nThe complete problem was solved using a hybrid approach that combined a randomized\n\nconstructive heuristic and a novel CP model. The hybridization main cycle is schemati-\n\ncally presented in Figure 4. The planning phase, implemented as a constructive heuristic,\n\nB\n0\n\nB\n0\nT\n\n0\nP\n\n0\nB\n\n0\nT\n\n0\nP\n\n1\nB\n\n0\nT\n\n0\nP\n\n2\n\nB\n1\n\nt=0\n\nB\n1\nT\n\n0\nP\n\n0\nB\n\n1\nT\n\n0\nP\n\n1\n\nt=1\n\nt=2\n\nt=3\n\nt=4\n\nFigure 3: Example of a flow reversal.\n\nScheduling Phase\n\nPlanning Phase\n\nInstance\n\nSet of Orders\n\nSolution\n\nNo Solution\n\nFigure 4: Solver Framework.\n\nis responsible for creating a set of delivery orders. Each such order is defined by a volume,\n\n\n\n3. How CP ? 56\n\norigin and destination tanks, product type, route and a delivery deadline. The planning\n\nphase must guarantee that, if all delivery orders are completed within their respective\n\ndeadlines, local market demands will be fulfilled and the excess production will be cor-\n\nrectly stored away. The scheduling phase takes the set of delivery orders generated by the\n\nplanning phase. It must both sequence the pumping operations at the initial pipeline in\n\neach route present in a delivery order, as well as determine the start times of each of the\n\npumping operations, while ensuring that no network operational constraint is violated at\n\nany time. The scheduling phase represents the problem\u2019s central decision process and it\n\nwas implemented as a CP model. In the sequel, each phase will be discussed, with the\n\nCP model described in more detail.\n\nPlanning and Routing. To generate delivery orders, we created a randomized con-\n\nstructive heuristic that makes use of the accumulated experience at petrobras. The\n\npurpose of the randomization is to generate diversified sets of orders in case the main\n\ncycle restarts, increasing the chance of finding solutions. Also, it takes into consideration\n\nother criteria that are difficult to handle manually, such as estimating the time for product\n\nvolumes to arrive at depots.\n\nDelivery orders are created incrementally as follows: (1) randomly select a local prod-\n\nuct demand in any depot, giving higher priority to demands that must be fulfilled earlier\n\nin time; (2) randomly choose depots that could supply volumes of the required products,\n\nas well as the routes that these volumes should traverse. In order to do so, consider fac-\n\ntors such as pipeline occupation rate, production schedules, present product stocks and\n\nestimated time of arrivals; (3) select origin and destination tanks, setting order volumes\n\naccordingly. Also, set order deadlines so as to guarantee demand fulfillment.\n\nAs soon as there is no more demands to choose from, the planning phase ends. At this\n\npoint network operators can interfere adding, modifying, or removing orders according\n\nto their particular needs. This flexibility is interesting since sudden needs might unex-\n\npectedly arise. For example, there might be exceptional cases where the operators want\n\nto empty certain tanks for emergency maintenance purposes. This could be achieved by\n\nissuing new orders that remove products from those particular tanks.\n\nAll demands are guaranteed to be satisfied if the resulting orders can be scheduled to\n\narrive by their respective deadlines. Of course, at this stage, it is not possible to know\n\nif the whole pipeline network can be operated in a way that meets all delivery order\n\ndeadlines, while satisfying all problem constraints.\n\nOrders are indivisible, i.e., once a volume starts to be pumped in, no other pump\n\noperation, at that same origin, can be started before the first one completes. However,\n\norders are preemptive in the sense that they can be interrupted and be resumed at a later\n\ntime. For instance, it is possible that a segment of the route that is being used in this\n\n\n\n3. How CP ? 57\n\npumping must also carry other products, with more pressing deadlines, along another\n\nroute that has that segment in common. In such cases, it may be necessary to interrupt\n\nthe present pumping operation, allowing for the more urgent products to circulate in the\n\ncommon pipeline segment, later resuming the first pumping.\n\nSequencing and Scheduling Orders. The scheduling phase must determine the\n\npumping parameters in order to meet all delivery order deadlines, also taking into ac-\n\ncount the network operational constraints. Or it must prove that the present set of\n\ndelivery orders can not be sequenced nor have their start times set in a way that ob-\n\nserve all their assigned deadlines. At this point, orders already have their routes, volumes\n\nand origin/destination tanks assigned by the planning and routing phase, besides their\n\ndeadlines.\n\nIn a typical scenario comprising 14400 minutes (i.e. 10 days), the model is expected to\n\ndeal with around 900 delivery orders, involving dozens of products, leaving and reaching\n\nseveral tanks, circulating through many interconnected pipelines, and subject to thou-\n\nsands of constraints. In order to cope with this problem complexity, the CP model was\n\nfurther divided into two steps. A first model treats the sequencing of delivery orders,\n\ngenerating time intervals for the start of the respective pumping operations. After one\n\nsuch sequencing is completed, the most difficult constraints are guaranteed to be satisfied.\n\nThen a second, simpler, CP model takes over and determines the number of pumping op-\n\nerations for each delivery order (i.e. taking into account possible preemptions), as well\n\nas the start time of each operation.\n\nAll time variables represent minutes, the unit currently adopted by network operators.\n\nTherefore, all variables have integer domains. Time value roundings, e.g. due to some\n\nparticular combination of flow rate and pipeline extension, can be safely neglected given\n\nthe large volumes that are involved. Variable domains are easy to infer from the input\n\ndata instances and are not further detailed here.\n\nThe Sequencing Model. This model must take into account product pair incompati-\n\nbilities, tank capacities, pipeline flow direction restrictions and other essential operational\n\nconstraints, such as no two products being pumped into a pipeline simultaneously. Fur-\n\nthermore, it must consider order deadlines and flow rates, in order to determine valid time\n\nbounds for the pumping operations.\n\nThe model interrelates two different viewpoints [11]. Firstly, the order viewpoint pro-\n\nvides a global view of the problem, dealing mainly with routes and volume transmission\n\nbetween pipelines. In contrast, the operations viewpoint captures a local view of the prob-\n\nlem, representing the pumping operation constraints in each pipeline. Both viewpoints\n\nare connected by channeling constraints.\n\n\n\n3. How CP ? 58\n\nThe Order Viewpoint. The order viewpoint handles the problem globally, focusing\n\non the relationship between orders and the pipelines that occur in their assigned routes.\n\nIt also enforces constraints related to flow rates, deliver deadlines, disjunctions of pipeline\n\noperations, product incompatibilities, and tanks.\n\nLet P be the pipeline set, T the tank set and O = {o1, . . . , on} the set of delivery\n\norders received from the planning phase. For each oi ? O, let route(oi) = (pl, . . . , pm) be\n\nthe sequence of pipelines that order oi must traverse. For each p ? route(oi), the volume\n\nspecified by oi can have one of four possible pipeline flow attributes when traversing\n\npipeline p: N , if it follows the normative, or preferred, pipeline flow direction; R, if it\n\nfollows the reverse direction; NR, if it starts in the normative direction, but later changes\n\nto the reverse direction, thus leaving the pipeline through the same extremity it was\n\npumped into; and RN , similar to NR but starting in the reverse direction. Let variable\n\ndirecti,p specify one among such possibilities. Finally, let origin(oi), destin(oi) ? T\n\nbe the origin and destination tanks, respectively, for order oi.\n\nFor each oi ? O and p ? route(oi), we define two activities [12], sndi,p and rcvi,p,\n\neach composed by start and end time variables and an inferred non-negative duration\n\nvariable. The first activity represents the time interval during which order oi is being\n\npumped into p, while the second represents the time interval during which the order is\n\nbeing pumped out of p. Using these activities, we can give bounds on flow rates and state\n\ndelivery deadline constraints for each oi ? O and each p ? route(oi):\n\nEndT ime(rcvi,p) ? deadline(oi), (1)\n\nDuration(sndi,p).max flow ratep,directi,p ? volume(oi), (2)\n\nDuration(rcvi,p).max flow ratep,directi,p ? volume(oi). (3)\n\nBefore an order exits a pipeline, it must first traverse all the pipeline extension. Thus,\n\nfor each oi ? O and p ? route(oi), we require:\n\nStartT ime(rcvi,p) ? StartT ime(sndi,p) +\n\n?\n\nvolume(p)\n\nmax flow ratep,directi,p\n\n?\n\n. (4)\n\nWhen an order is being pumped out of a pipeline, it is immediately pumped into the\n\nnext pipeline in its route, without volume loss. This can be done by unifying [13] send\n\nand receive activity variables in the following way. For each oi ? O and for each pair\n\n(pl, pm) of consecutive pipeline pairs in route(oi), let:\n\nStartT ime(rcvi,pl) = StartT ime(sndi,pm ), (5)\n\nEndT ime(rcvi,pl) = EndT ime(sndi,pm ). (6)\n\n\n\n3. How CP ? 59\n\nOrder activities in a pipeline must all be disjunctive with respect to time; a send (or\n\nreceive) activity from a certain order must not overlap with the send (or receive) activity of\n\nother orders in the pipe. In order to guarantee this, for each p ? P, we define two unary\n\nresources1: SndResourcep and RcvResourcep, and we associate the send and receive\n\nactivities to these resources, respectively. Since an unary resource defines a mutually\n\nexclusive relationship between activities that are linked to it, each resource constraint is\n\nranked during the solving process, i.e., it is ordered along the time line. This ranking\n\nis explicitly represented in our model using positional variables sndP osi,p and rcvP osi,p,\n\naccounting for, respectively, the send and receive activities positions of order oi in pipeline\n\np ? route(oi). The positional variables are connected directly to the resource\u2019s precedence\n\ngraph [10, 12], expressed by the constraints:\n\nsndi,p startsBefore sndj,p ?? sndP osi,p &lt;sndP osj,p, (7)\n\nrcvi,p startsBefore rcvj,p ?? rcvP osi,p &lt;rcvP osj,p, (8)\n\n?oi, oj ? O, ?p ? route(oi) ? route(oj ).\n\nWe also add redundant all different global constraints [13]. For each p ? P,\n\nall diff (sndP osi,p) ? all diff (rcvP osi,p), ?oi ? O s.t. p ? route(oi). (9)\n\nIn case two orders oi, oj ? O share at least one common consecutive pipeline pair\n\n(pl, pm) ? route(oi) ? route(oj), the activities precedence relations must be preserved in\n\nboth pipelines. Here, we present the restrictions for flow directions N and R, the other\n\ncases being similar.\n\nsndP osi,pl > sndP osj,pl ?? sndP osi,pm > sndP osj,pm (10)\n\n? rcvP osi,pl > rcvP osj,pl ?? rcvP osi,pm > rcvP osj,pm,\n\n?oi, oj ? O, ?(pl, pm) ? route(oi) ? route(oj).\n\nPositional variables also help discarding sequences that violate product incompatibil-\n\nities. Given two orders oi, oj ? O, if product(oi) and product(oj ) are incompatible, then\n\nthey can not make contact in a pipeline. A necessary condition for contact is that both\n\norders enter consecutively at the same pipeline extremity, and this can only happen if\n\nthey have the same entering (or leaving) pipeline flow direction. This scenario is repre-\n\nsented by the following constraints, for each oi, oj ? O, p ? route(oi) ? route(oj) and\n\n1An unary resource is a resource that allows for only one activity at a time [12].\n\n\n\n3. How CP ? 60\n\nproduct(oi) incompatible product(oj).\n\n|sndP osi,p ? sndP osj,p| > 1 if (directi,p 6= N ? directj,p 6= RN ) (11)\n\n? (directi,p 6= R ? directj,p 6= NR),\n\n|rcvP osi,p ? rcvP osj,p| > 1 if (directi,p 6= N ? directj,p 6= NR) (12)\n\n? (directi,p 6= R ? directj,p 6= RN ).\n\nNext, we define two new activities: exti,origin(oi) and inji,destin(oi), representing volume\n\nextraction and injection, respectively, from the assigned tanks associated with order oi.\n\nThe relationship between send (receive) variables and tanks activities is the same as those\n\nfor pipeline volume transmissions. For each oi ? O, letting p0 and pm be the first and last\n\npipeline in route(oi), we state:\n\nStartT ime(sndi,p0) = StartT ime(exti,origin(oi )), (13)\n\nEndT ime(sndi,p0) = EndT ime(exti,origin(oi )), (14)\n\nStartT ime(rcvi,pm ) = StartT ime(inji,destin(oi )), (15)\n\nEndT ime(rcvi,pm ) = EndT ime(inji,destin(oi )). (16)\n\nInjecting and extracting volumes from tanks must not overlap in time as well. Hence,\n\nactivities exti,t and inji,t are associated with a new unary resource T kDisjt, created for\n\neach tank t ? T. However, capacities must also be taken into account in this case, requir-\n\ning the combined use of a different type of resource T kRest, t ? T, called a reservoir [12].\n\nSuch activities can both increase capacity (volume injection) or deplete capacity (volume\n\nextraction) from reservoirs.\n\nFinally, we must also consider production and demand volumes in order to appropri-\n\nately represent the behavior of tank capacities. Let Dem and Pr be, respectively, the\n\nsets of demands and productions given as input. For each d ? Dem, an activity demd\nis created, with its associated constraints, considering demand time bounds and volume\n\nextraction from tanks. Similarly, an activity prodp is created for each p ? Pr, but now\n\nconsidering volume injection instead of extraction. These activities are associated with\n\nthe unary resources T kDisjt and reservoirs T kRest. Additional constraints are stated as\n\nfollows.\n\nStartT ime(demd) ? DemandMinStartTime(d), (17)\n\nEndT ime(demd) ? DemandMaxEndTime(d), ?d ? Dem, (18)\n\nStartT ime(prodp) ? ProductMinStartTime(p), (19)\n\nEndT ime(prodp) ? ProductMaxEndTime(p), ?p ? Pr. (20)\n\n\n\n3. How CP ? 61\n\nThe Operations Viewpoint. The main intuition for this viewpoint is to consider each\n\npipeline individually (a local vision), since time variables domains will be automatically\n\npropagated by force of constraints defined in the order viewpoint. Although time bounds\n\nand disjunctions were already established, it is still necessary to model the fact that,\n\nin order for a certain volume to leave a pipeline, the exact amount of volume must be\n\npumped in from the other extremity. Besides that, restrictions such as variable flow rates\n\nwhich depend on the products inside a pipeline, must also be considered. We will also\n\nuse some ideas from previous studies [2, 5, 6], that treated the case of a single pipeline.\n\nGiven a pipeline p ? P , two time-ordered sets of operation activities are defined,\n\nSndP ipep and RcvP ipep, where |SndP ipep| = |RcvP ipep| = |{oi : oi ? O, p ? route(oi)}|.\n\nAs in the order viewpoint, they represent send and receive activities in p, respectively,\n\nbut now with new precedence relations of the form\n\ni &lt;j ?? sndOpp,i startsBefore sndOpp,j, ?sndOpp,i, sndOpp,j ? SndP ipep,\n\ni &lt;j ?? rcvOpp,i startsBefore rcvOpp,j, ?rcvOpp,i, rcvOpp,j ? RcvP ipep.\n\nA volume and a product variables are additionally associated with each activity be-\n\nlonging to SndP ipep and RcvP ipep. We thus say that both sequences represent a valid\n\nranking of undetermined delivery orders; they will only be determined when orders are\n\nranked in their unary resources. However, since they are already time-ordered, we are\n\nable to create a more intuitive and compact model to represent pipeline flow behavior, in\n\nwhich constraints will also enforce propagation in the order viewpoint variable domains.\n\nLet rcvOpp,j ? RcvP ipep be an activity. A certain volume associated with it can\n\nonly be received when an activity sndOpp,i ? SndP ipep is being pumped at the other\n\nextremity of the pipe. In order to define which send activity i pushes a receive activity j,\n\nit is necessary to consider three factors: the pipeline volume, the volumes of the activities\n\nand the volumes between activities sndOpp,i and rcvOpp,j, i.e., the volume still in the\n\npipeline before sending sndOpp,i and after receiving rcvOpp,j. For the latter, a new\n\nvariable accp,i,j is created for each sndOpp,i ? SndP ipep, rcvOpp,j ? RcvP ipep, for i ? j,\n\nas follows:\n\naccp,i,j =\n?\n\nk<i\n\nvolume(sndOpp,k) ?\n?\n\nk?j\nvolume(rcvOpp,k). (21)\n\nIt can be shown that sndOpp,i never pushes rcvOpp,j off the pipeline, for i > j, due\n\nto the time-ordering of the relation. If accp,i,j ? volume(p), then it is not possible\n\nfor sndOpp,i to push rcvOpp,j, since a quantity greater or equal than the pipeline vol-\n\nume was already injected between activities i and j. On the other hand, if accp,i,j +\n\nvolume(sndOpp,i) + volume(rcvOpp,j) ? volume(p), then the volume in sndOpp,i is not\n\n\n\n3. How CP ? 62\n\nenough to push rcvOpp,j out of the pipeline. Thus, a necessary and sufficient condition\n\nfor activity i to push activity j out of the pipeline (a pushi,j event), can be stated as:\n\npushi,j ?? accp,i,j &lt;volume(p) (22)\n\n? accp,i,j + volume(sndOpp,i) + volume(rcvOpp,j) > volume(p).\n\nSimilar ideas can be used to determine the exact amount of volume involved in the pump-\n\ning. Let f lowi,j be the volume used in sndOpp,i to push the same volume f lowi,j from\n\nrcvOpp,j out of the pipeline. We have:\n\npushi,j =? f lowi,j = min[volume(rcvOpp,j), volume(rcvOpp,j) (23)\n\n+ volume(sndOpp,i) + accp,i,j ? volume(p)]\n\n? max[0, volume(rcvOpp,j) + accp,i,j ? volume(p)],\n\n\u00acpushi,j =? f lowi,j = 0. (24)\n\nThese flow variables can be seen as flow edges in a capacitated network. Assuming that\n\neach operation activity represents a node, the amount of volume (flow) pushed into a pipe\n\nmust be equal to the volume pushed out it, and both are equal to the operation\u2019s total\n\nvolume. To model this restriction, we can use a flow global constraint [10] for send and\n\nreceive variable sequences.\n\nIn order to ensure flow rate bounds consistency, it is necessary to limit the flow rate\n\nof send and receive activities according to the products that are inside the pipeline when\n\nthe pumping activity occurs. This can now be easily done using the earlier condition\n\naccp,i,j + volume(sndOpp,i) + volume(rcvOpp,j) ? volume(p), which is true if sndOpp,i\nand rcvOpp,j are both inside the pipeline at the moment of pumping. Let MaxF li be a\n\nvariable representing the maximum flow rate for activity sndOpp,i, related to the variable\n\nproduct(sndOpp,i), and let MaxF lj stand similarly for activity rcvOpp,j. We state:\n\naccp,i,j + volume(sndOpp,i) + volume(rcvOpp,j) ? volume(p) (25)\n\n=?\n\n?\n\nvolume(sndOpp,i)\n\n(EndT ime(sndOpp,i) ? StartT ime(sndOpp,i)\n\n?\n\n? MaxF lj\n\n?\n\n?\n\nvolume(rcvOpp,j)\n\n(EndT ime(rcvOpp,j) ? StartT ime(rcvOpp,j)\n\n?\n\n? MaxF li.\n\nFinally, flow directions in the pipeline must be consistent as well. For instance, if\n\nan activity has its direction attribute set to N , the next activity along the pipe must\n\nnecessarily have its direction attributes set to N or NR. Direction attributes such as R\n\nand RN are only consistent after a sequence of NR activities whose volume sum is equal\n\n\n\n3. How CP ? 63\n\nto the pipeline volume. Attribute RN is treated similarly. These valid pairs are enforced\n\nusing a Table Constraint [12].\n\nFor the pipeline reversal, a special constraint reversal was created, encapsulating the\n\nrules for the reversal of flow direction. This global constraints also controls the relation\n\nbetween the sequences sndP osi,p and rcvP osi,p, since orders do not enter and live a pipe\n\nin the same order when there is a flow reversal, as showed in figure 3. If there is no flow\n\nreversal in a pipe p, then a constraint sndP osi,p = rcvP osi,p is added to the model.\n\nThe Channeling Constraints. The order and operation viewpoints can be easily\n\nconnected using the element constraint [13] and positional variables. Notice that a similar\n\nset of constraints is applied to the receive sequence.\n\nStartT ime(sndi,p) = StartT ime(sndOp sndP osi,p, p), (26)\n\nEndT ime(sndi,p) = EndT ime(sndOp sndP osi,p, p), (27)\n\nvolume(oi) = V olume(sndOp sndP osi,p, p), (28)\n\ndirect(oi) = Direct(sndOp sndP osi,p, p), (29)\n\nproduct(oi) = P roduct(sndOp sndP osi,p, p), (30)\n\n?oi ? O, p ? route(oi).\n\nThe Scheduling Model. The second part of the complete CP model is a simpler\n\nmodel which is responsible for assigning the exact times to pumping operations, respecting\n\nforbidden alignment configurations and avoiding simultaneous pipe usage. The pumping\n\noperations are created by checking the f lowp,i,j variables values for each activity i and\n\npipeline p. If f lowp,i,j > 0, for a certain j, then there is a pumping operation of volume\n\nf lowp,i,j with flow rate and time bounds already established by the sequencing step. In\n\nthat case, a new activity, pumpOp, is created and its time constraints are included in\n\nthe model. Note that the precedence among activities can be inferred from the orders\u2019\n\nsequence.\n\nLet Dep be the set of depots, and let P umpOpsd give the pumping operations that\n\nwill start at depot d, for each d ? Dep. The simultaneous sending constraint can\n\nbe implemented using a discrete resource, DiscSendingd, a resource which limits the\n\nnumber of consecutive operations by a certain capacity [12]. Thus, we associate each\n\noperation in P umpOpsd in its respective resource DiscSendingd, limited by the input\n\nDepotMaxSimultaneousOperationsd. Similarly, the forbidden alignment configurations\n\nare enforced with discrete resources AlignDisca,d, created for each alignment restriction\n\na. The operations associated with each resource are easily identifiable by checking their\n\nproduct type and flow direction.\n\n\n\n3. How CP ? 64\n\nFree Delivery Orders. In certain scenarios, the orders created by the planning phase\n\nare not enough to guarantee a valid pumping solution. For instance, suppose that only\n\ntwo orders need to be scheduled, and they have incompatible products. Consequently,\n\none can not push the other in a pipeline. A third product must be used between them.\n\nFor that, free delivery orders are arbitrary created before entering the scheduling phase.\n\nIn contrast to regular orders, their volumes, products, and origin/destination tanks are\n\ntreated as variables instead of constants, and they do not have a deadline. Note also that\n\nfree orders may have a null volume associated with them. Furthermore, their routes are\n\npreviously determined by choosing among the ones typically used by pipeline operators.\n\nOperators can change such routes by editing a configuration file.\n\nFree orders are also used to represent products that remain in the pipeline at the end\n\nof the process, for the purpose of ensuring that all pipes are always completely filled.\n\nThese orders do not have a destination tank, and constraints are used to indicate they\n\nare the last ones to be pumped into the pipelines.\n\nOnly minor changes to the previous model are necessary in order to accommodate free\n\norders. Among them, in the order viewpoint, constraints where volume and product were\n\nconstants should be changed to variables, and an Alternative Resource Set [12] can be\n\nused to indicate that an origin and destination tank must be assigned to free orders. The\n\noperation viewpoint remains unchanged.\n\nSearch Strategy. Different types of search strategies were tested for solving both the\n\nsequencing and the scheduling models. The currently implemented version is shown as\n\nAlgorithm 1. It combines a backtracking mechanism [13] with a special variable ordering,\n\nbeing divided into three consecutive parts: disjunctive components determination, adap-\n\ntive backtracking and time assignment. In the Disjunctive Components Determination,\n\na disjunctive component is defined as a subset of the network which can be scheduled\n\nseparately, without affecting other regions. Two pipelines belong to the same component\n\nif they are both contained in at least one order\u2019s route. The same reasoning applies to\n\ntanks.\n\nFor the Adaptive Backtracking, we implemented backtracking using positional variables\n\nfor each pipeline. The term adaptive comes from the fact that it is based on a restart\n\nstrategy [14]. As such, the pipeline sequencing order is changed dynamically according\n\nto the number of fails that occurred during the search. The values of positional variables\n\nare randomly chosen, giving higher probabilities to orders with the earliest deadlines. For\n\nfree orders, volumes, products and tanks are set after their respective positional variables\n\nare labeled.\n\nThe initial sequencing is constructed as follows. Firstly a pipe graph is created, in\n\nwhich pipelines are nodes and there is a direct arc from node p to q if there is a consecutive\n\n\n\n4. Results 65\n\nAlgorithm 1: Procedure for search strategy\n\nbegin1\n\nIdentify network disjunctive components C2\nfor each c ? C do3\n\nBuild pipe graph G(c) and sort it topologically, obtaining order N4\nN ? := N ; k := initial k5\nwhile N ? 6= ? do6\n\np := first element from sequence N ?; N ? := N ?/{p}7\nLabel positional variables, and volumes/tanks in case of free orders8\nif fails in labeling ? k and not cyclic condition then9\n\nk := k+incremental factor; N ? := N10\nMove p to the beginning of sequence N ?11\n\nwhile no scheduling solution found do12\nCreate scheduling model and assign times as earliest as possible13\nif no solution then request next sequencing solution14\n\nend15\n\npair (p, q) in some order\u2019s route. In case there are two arcs (p, q) and (q, p), only the one\n\nassociated with the order having the earliest deadline is maintained. Secondly, the graph is\n\ntopologically sorted, the result being the desired initial sequencing. Clearly, this strategy\n\nconsiders first those pipelines with the least number of orders that come directly from\n\nother pipelines.\n\nAfter the occurrence of k fails involving a pipeline, the backtrack tree is reinitialized\n\nwith that pipeline as the first element in the topological ordering, and k is incremented by\n\na constant. This implementation was motivated by the fact that, during test runs, it was\n\nobserved that a fair number of fails were caused by earlier decisions taken when instan-\n\ntiating variables in related pipelines in the given sequencing. We empirically determined\n\nk = 150 and 100 as the increment.\n\nFinally, in Time Assignment, executed after the sequencing is completed, the CP\n\nscheduling model is created and the time variables are instantiated with the least possible\n\nvalue in their domains. This forces pumping to start as soon as possible. In case a failure\n\nensues, a new sequencing solution is requested, most certainly a different one due to the\n\nrandomization present in the model.\n\n4 Results\n\nSolutions were obtained on a Intel Pentium D 3.40 Ghz CPU platform, with 4GB of\n\nmemory. The planning and scheduling phases were coded in C++ and compiled using\n\n\n\n5. Added Value and Conclusions 66\n\nTable 1: Solution Example\nTi Tf Vol. Pd TkOr TkDt Route\n\n2075 2362 858 G T004 T005 SUG03\n4857 4868 30 N T160 T087 GUG03\n4870 5111 722 D T008 T005 BUG03\n... ... ... ... ... ... ...\n\nGCC-4.0. The CP model was solved using ILOG Solver 6.2 and ILOG Scheduler 6.2,\n\nwith medium to high propagation enforcement. Part of a typical solution is presented\n\nin Table 1. As described earlier, a solution is a sequence of pump operations and each\n\nline in the table describes one such operation. Column headings are as follows: Ti and\n\nTf are the start and end times (in minutes), respectively; V ol is the pumped volume (in\n\nm3); Pd is the product code (G is gasoline, N is naphtha and D is diesel); T kOr and T kDt\nare origin and destination tank codes, respectively; and Route is the route code. A full\n\nsolution table would contain several hundred such lines.\n\nWe used four real field instances to test the models. The first two rows in Table 2\n\nindicate the time horizon and the number of deliver orders generated by the planning\n\nphase, respectively, for each of the test instances. The remaining lines give details of\n\ntypical runs. All instances share the same network topology of 14 depots, 29 pipelines, 32\n\ndifferent product types and 242 tanks distributed among the depots. Pipelines volumes\n\nrange from 30 to 8,000 m3, and most of the tank capacities are between 4,000 and 30,000\n\nm3.\n\nIn all cases the solver found a solution in a reasonable amount of computer time, e.g.,\n\nwithin 10 minutes. Most variables were instantiated as a result of constraint propagation.\n\nThe search heuristic, which proved crucial in the planning phase, was also instrumental to\n\nimprove other important aspects of the solution quality, as noticed by logistic engineers.\n\nFor instance, usually, a typical solution showed only a very small number of pipeline\n\nflow reversions, the kind of operation that engineers prefer to keep to a minimum. Also,\n\nnew and interesting routes were identified. Some of them came as a surprise to logistic\n\nengineers, who were biased towards the same traditional routes they were using when\n\nmanually planning the network operation.\n\n5 Added Value and Conclusions\n\nWe proposed a novel procedure for generating feasible solutions for real instances stem-\n\nming from planning and scheduling the operation of a very-large pipeline network used\n\ndo move petroleum derivatives. The operation of such a network is subject to a complex\n\nset of physical and operational constraints, and it makes possible the delivery of oil and\n\n\n\n5. Added Value and Conclusions 67\n\nTable 2: Solver Results\nInstance 1 2 3 4\n\nHorizon 10 days 7 days 7 days 7 days\nOrders 924 645 724 693\n\nPlanning Phase Time 4 min 5 min 4 min 6 min\nPlanning Phase Peak Memory 78MB 61MB 67MB 63MB\n\nSequencing Model Variables 37,326 21,381 25,938 24,315\nSequencing Model Constraints 382,565 148,075 160,302 155,409\n\nSequencing Choice Points 3,355 2,462 3,417 2,518\nSequencing Fails 2,301 1,291 987 1,902\nSequencing Time 2 min 1 min 1 min 1 min\n\nSequencing Peak Memory 450 MB 240 MB 310 MB 270 MB\nScheduling Model Variables 12,350 7,530 8,931 8,032\n\nScheduling Model Constraints 27,088 16,768 19,231 18,292\nScheduling Choice Points 1,516 1,164 801 1,810\n\nScheduling Fails 301 429 210 120\nScheduling Time 2 min 1 min 1 min 1 min\n\nScheduling Peak Memory 450 MB 250 MB 290 MB 280 MB\nTotal Time 8 min 7 min 6 min 8 min\n\nbiofuel to local markets, as well as the storing of the excess production from refineries.\n\nUsing the CP paradigm, these constraints were adequately modeled. Problems of this\n\nsize and complexity, as known by the authors, would not be solved by other approaches\n\nreported in the literature to date, in which much of the difficult constraints and topologies\n\nare overlooked.\n\nThe procedure is already integrated with a proprietary flow simulation tool and the\n\ncompany is currently considering it for routine use on a daily basis. The tool has already\n\nproved its value, showing that it can save many valuable work hours of skilled engineers.\n\nAlso, using the tool, many different planning and scheduling scenarios can be easily setup\n\nand quickly tested, by varying local demand needs and production schedules at refineries.\n\nThe present modeling and implementation stage was reached after 2 years of problem\n\nspecification, data gathering, model development, and testing. As work progresses, it is\n\nexpected that new constraints will be introduced. Such could include inventory man-\n\nagement restrictions, limitations on energy use at specific time intervals and at specific\n\ndepots, and shutdown periods or partial operation intervals for tanks and pipelines. When\n\nmodeling such new constraints, we feel that the flexibility of the CP paradigm will again\n\nprove to be crucial.\n\nAs for future directions, one could implement more sophisticated search heuristics for\n\nboth the planning and scheduling phases, making the overall approach capable of dealing\n\nwith more specific instance classes. Finally, one could consider objective functions that\n\n\n\n5. Added Value and Conclusions 68\n\nwould help guide the heuristics. This would provide a yardstick that could be used to\n\ngauge solution quality.\n\nAcknowledgments. This research was supported by grants 05/57343-0 and 05/57344-\n\n7 from FAPESP and grants 301732/07-8, 478470/06-1, 472504/07-0, and 473726/07-6,\n\n305781/2005-7 from CNPq. The authors are also grateful to Fernando Marcellino and the\n\nteam of engineers from petrobras-ti/sp.\n\n\n\nREFERENCES 69\n\nReferences\n\n[1] Rejowski, R., Pinto, J.M.: Efficient MILP formulations and valid cuts for multiprod-\n\nuct pipeline scheduling. Computers &amp; Chemical Engineering 28(8) (2004) 1511\u20131528\n\n[2] Cafaro, D.C., Cerda?, J.: Optimal scheduling of multiproduct pipeline systems using\n\na non-discrete MILP formulation. Computers &amp; Chemical Engineering 28(10) (2004)\n\n2053\u20132058\n\n[3] Relvas, S., Barbosa-Po?voa, A.P.F.D., Matos, H.A., Fialho, J., Pinheiro, A.S.:\n\nPipeline scheduling and distribution centre management - a real-world scenario at\n\nCLC. In: Proceedings of the 16th European Symposium on Computer Aided Pro-\n\ncess Engineering and 9th International Symposium on Process Systems Engineering,\n\nGarmisch-Partenkirchen, Germany (2006) 2135\u20132140\n\n[4] Relvas, S., Matos, H.A., Barbosa-Po?voa, A.P.F.D., Fialho, J., Pinheiro, A.S.:\n\nPipeline scheduling and inventory management of a multiproduct distribution oil\n\nsystem. Industrial &amp; Engineering Chemistry Research 45(23) (2006) 7841\u20137855\n\n[5] Rejowski, R., Pinto, J.M.: A novel continuous time representation for the scheduling\n\nof pipeline systems with pumping yield rate constraints. Computers &amp; Chemical\n\nEngineering 32 (2008) 1042\u20131066\n\n[6] Relvas, S., Matos, H.A., Barbosa-Po?voa, A.P.F.D., Fialho, J.: Reactive scheduling\n\nframework for a multiproduct pipeline with inventory management. Industrial &amp;\n\nEngineering Chemistry Research 46(17) (2007) 5659\u20135672\n\n[7] Crane, D.S., Wainwright, R.L., Schoenefeld, D.A.: Scheduling of multi-product\n\nfungible liquid pipelines using genetic algorithms. In: Proceedings of the 1999 ACM\n\nSymposium on Applied Computing, San Antonio, USA (1999) 280\u2013285\n\n[8] Camponogara, E.: A-Teams para um problema de transporte de derivados de\n\npetro?leo. Master\u2019s thesis, Instituto de Matema?tica, Estat??stica e Cie?ncia da Com-\n\nputac?a?o, Universidade Estadual de Campinas, Campinas, Brazil (1995)\n\n[9] Moura, A., de Souza, C., Cire, A., Lopes, T.: Heuristics and constraint programming\n\nhybridizations for a real pipeline planning and scheduling problem. In: Proceedings of\n\nthe 11th IEEE International Conference on Computational Science and Engineering\n\n- CSE\u201908. (Julho 2008) 455\u2013462\n\n[10] Hooker, J.N.: Integrated Methods for Optimization (International Series in Opera-\n\ntions Research &amp; Management Science). Springer-Verlag, Secaucus, USA (2006)\n\n\n\nREFERENCES 70\n\n[11] Cheng, B.M.W., Choi, K.M.F., Lee, J.H.M., Wu, J.C.K.: Increasing constraint\n\npropagation by redundant modeling: an experience report. Constraints 4(2) (1999)\n\n167\u2013192\n\n[12] ILOG: ILOG Scheduler 6.2: User\u2019s Manual. ILOG. (2006)\n\n[13] Marriot, K., Stuckey, P.: Programming with Constraints: An Introduction. 1a edn.\n\nMIT Press, Cambridge, Massachusetts (1998)\n\n[14] Kautz, H., Horvitz, E., Ruan, Y., Gomes, C., Selman, B.: Dynamic restarts policies.\n\nIn: Proceedings of the AAAI-2002, Edmonton, Alberta (2002)\n\n\n\nEp??logo 71\n\nEp??logo\n\nAs principais diferenc?as em relac?a?o a?s duas formulac?o?es de escalonamento existentes\n\nesta? na forma como os bombeamento sa?o representados. No primeiro caso, descrito no\n\ncap??tulo 6, as varia?veis Op? modelam explicitamente as operac?o?es de envio e recebimento\n\nnos dutos e tanques, o que acarreta a necessidade de tratar o para?metro ns que descreve\n\no nu?mero ma?ximo de operac?o?es por plano.\n\nNo modelo aprimorado, os planos sa?o vistos como atividades, que sa?o uma estrutura\n\npara aplicac?a?o de restric?o?es globais mais espec??ficas para problemas de escalonamento [17].\n\nCada atividade e?, de forma geral, composta por um tempo de ??nicio ti e tempo final\n\ntf , os quais modelam os intervalos de ocorre?ncia do plano em cada duto, ao inve?s de\n\nexplicitamente os bombeamentos em si.\n\nEsta representac?a?o de intervalos de tempo permite uma formulac?a?o mais compacta\n\nda rede de dutos, descartando o uso do para?metro ns e, adicionalmente, facilitando a\n\naplicac?a?o de restric?o?es globais relativas a?s disjunc?o?es temporais, como as restric?o?es cu-\n\nmulative e disjunctive apresentadas no texto. Como ha? tambe?m um menor nu?mero de\n\nvaria?veis, tambe?m e? poss??vel aumentar o n??vel de propagac?a?o das restric?o?es, o que reduz\n\no tamanho da a?rvore de backtrack do PR.\n\nAs movimentac?o?es por intervalos de tempo, contudo, na?o caracterizam uma soluc?a?o\n\ndo PTRD, conforme descrito no cap??tulo 2. Assim, um segundo modelo PR de atribuic?a?o\n\nde tempos e? utilizado para determinar exatamente os tempos de bombeamentos. Tais\n\noperac?o?es sa?o calculadas a partir do sequ?enciamento dos planos, obtido pela soluc?a?o do\n\nmodelo anterior.\n\nAs varia?veis do modelo de atribuic?a?o de tempos, desta forma, representam exatamente\n\nas operac?o?es de envio e recebimento que ocorrera?o nos dutos, determinadas a partir de uma\n\nsoluc?a?o parcial do problema de Escalonamento. As restric?o?es faltantes, tal como envios\n\nsimulta?neos e alinhamentos, sa?o facilmente implementadas neste segundo submodelo. O\n\nartigo na?o apresenta a modelagem dos requisitos C5, C10 e C15 em decorre?ncia da falta\n\nde dados na insta?ncia, mas estas podem ser implementadas utilizando-se restric?o?es de\n\ndisjunc?a?o temporal simples.\n\nO artigo tambe?m apresenta um me?todo de busca diferenciado de soluc?o?es, denominado\n\nbacktrack adaptativo. Ao inve?s de fixar uma ordem de varia?veis para atribuic?a?o de valores,\n\no algoritmo procura identificar os dutos mais cr??ticos a partir do nu?mero de fails durante\n\no sequ?enciamento dos planos. Espera-se que a ocorre?ncia de muitos fails seja devida a?\n\ndeciso?es equivocadas no passado e, portanto, os dutos problema?ticos ganham prioridade\n\nna ordem de sequ?enciamento, quando uma nova a?rvore de backtrack e? constru??da.\n\n\n\nCap??tulo 8\n\nConclusa?o\n\nEste projeto de mestrado trata do problema de distribuic?a?o de derivados de petro?leo\n\ne a?lcoois em redes de duto, ou PTRD, atualmente enfrentado pela Petrobras. Seu\n\nobjetivo e? definir movimentos de transporte de produtos entre o?rga?os de tal forma que\n\nas campanhas de produc?a?o e os mercados locais, representados por valores estimados\n\nde demandas, sejam totalmente satisfeitos. Para tanto, um amplo conjunto de restric?o?es\n\noperacionais nos dutos e tanques deve ser respeitado, envolvendo sequ?enciamentos va?lidos\n\nde produtos, capacidade de tanques e limites de envio simulta?neo.\n\nAs te?cnicas ate? enta?o empregadas para resolver o PTRD sa?o fortemente baseadas em\n\nrelaxac?o?es de seus principais requisitos ou lidam apenas com topologias de rede restritas,\n\ntornando-o assim trata?vel para ser resolvido eficientemente com te?cnicas de otimizac?a?o\n\ncla?ssicas. Por outro lado, tais relaxac?o?es acarretam soluc?o?es pouco aplica?veis para os\n\ncena?rios reais ao descartarem restric?o?es fortes para os operadores de duto, tais como\n\ninterface de produtos e na?o-simultaneidade de operac?o?es em tanques.\n\nO trabalho aqui desenvolvido propo?e formulac?o?es capazes de representar a maior parte\n\ndas restric?o?es fundamentais do PTRD, com potencial para serem utilizadas em insta?ncias\n\nde tamanho real. Com este objetivo, a resoluc?a?o e? dividida em duas fases, planejamento\n\ne escalonamento. A dissertac?a?o foca na segunda fase: dado um conjunto de planos de\n\nentrega a serem sequ?enciados e escalonados, deve-se gerar operac?o?es de bombeamento\n\npara cobr??-lo sem que nenhum requisito operacional seja violado.\n\nSa?o propostas duas formulac?o?es em Programac?a?o por Restric?o?es para a fase de es-\n\ncalonamento do PTRD. Tal te?cnica foi utilizada devido a? sua flexibilidade em modelar\n\nproblemas de escalonamento e dos fortes mecanismos de propagac?a?o existentes, os quais\n\npermitem encontrar soluc?o?es fact??veis rapidamente. O primeiro modelo proposto ja? con-\n\nsidera um nu?mero bastante alto de restric?o?es e uma topologia real, mas possui limitac?o?es\n\ndecorrentes da forma como as paradas em dutos sa?o tratadas. Ja? o segundo modelo re-\n\npresenta um aprimoramento significativo do primeiro, resolvendo a questa?o das paradas\n\n72\n\n\n\n73\n\ndos dutos, contemplando mais restric?o?es e sendo capaz de acomodar um horizonte maior.\n\nAs formulac?o?es foram testadas com 5 insta?ncias reais fornecidas pela Petrobras, co-\n\nletadas ao longo de dois anos de especificac?a?o e implementac?a?o dos modelos. Vale ressaltar\n\na grande dificuldade de coletar dados reais, visto que esta e? a primeira vez em que o pro-\n\nblema e? formalizado junto aos operadores e gerentes da Petrobras. Assim, considera-se\n\nque uma contribuic?a?o adicional do trabalho e? prover uma especificac?a?o do PTRD em que\n\nas soluc?o?es obtidas sa?o bastante pro?ximas das realiza?veis, conforme exige?ncia dos pro?prios\n\noperadores. Pela mesma raza?o de falta de dados consolidados pela empresa, ainda na?o\n\nfoi poss??vel comparar as soluc?o?es obtidas pelos modelos com as manualmente criadas.\n\nContudo, todas as soluc?o?es foram executadas com sucesso no simulador de dutos da Pe-\n\ntrobras, denominado CONSUELO. Por fim, devido ao alto nu?mero de restric?o?es, gerar\n\ninsta?ncias artificiais caracteriza-se como um procedimento extremamente dif??cil, o qual\n\nfoi deixado como sugesta?o para trabalho futuro.\n\nO objetivo de se pesquisar modelos flex??veis e abrangentes para o PTRD foi alcanc?ado,\n\nos quais apresentaram grande potencial para gerar soluc?o?es efetivas para o problema.\n\nEspera-se que este seja um primeiro passo para uma resoluc?a?o consistente do PTRD,\n\ninspirando novas te?cnicas e, ainda, ide?ias aplica?veis em problemas similares de escalona-\n\nmento.\n\n\n\nCap??tulo 9\n\nTrabalhos Futuros\n\nPropo?e-se diversas extenso?es deste trabalho, entre as quais:\n\n\u2022 Alterar o modelo de satisfac?a?o para uma formulac?a?o capaz de lidar com otimizac?a?o\n\nde para?metros. Assim, o algoritmo seria capaz de gerar soluc?o?es parciais em relac?a?o\n\nao atendimento da demanda e escoamento das produc?o?es, criando soluc?o?es u?teis para\n\nguiar os operadores da rede de dutos. Ale?m disso, tambe?m seria poss??vel considerar\n\ncustos de energia de bombeamento, o que exigiria tambe?m um esforc?o adicional para\n\na coleta de tais dados.\n\n\u2022 Novas formas de atribuic?a?o de valores a?s varia?veis dos modelos em PR apresentados.\n\nUm poss??vel exemplo seria aplicar heur??sticas de busca local, as quais aproveitariam\n\no sistema de propagac?a?o de PR para a reduc?a?o do tamanho da vizinhanc?a.\n\n\u2022 Testes mais extensos com insta?ncias reais fornecidas pela Petrobras. Experimen-\n\ntos de grande porte ainda na?o foram realizados devido a? dificuldade em se obter\n\num conjunto de dados de entrada confia?veis, visto que esta e? a primeira vez que\n\no problema completo e? formalizado junto com os operadores da rede. Ale?m disso,\n\ntambe?m e? essencial que um gerador de insta?ncias artificiais seja desenvolvido para\n\nverificac?a?o da robustez do algoritmo, o que forneceria um primeiro benchmark mais\n\nextenso para comparac?a?o de trabalhos, tal como em [26].\n\n\u2022 Formas de resoluc?a?o diferenciadas para a fase de escalonamento. Por exemplo, por\n\nmeio de meta-heur??sticas, ou hibridizac?o?es entre PLI, PR e heur??sticas.\n\n\u2022 Formas para que a fase de escalonamento seja capaz de analisar soluc?o?es com falhas,\n\ni.e. sem soluc?a?o, e retornar um feedback para que a fase de planejamento crie\n\nconjuntos de planos de entrega com mais chance de viabilidade.\n\n74\n\n\n\n75\n\n\u2022 Elaborar teorias que regulam o funcionamento dos dutos a partir de, por exemplo,\n\nFluxo em Redes, definindo formalmente a noc?a?o de empurramento. Tal teoria pode\n\nser essencial para criar algoritmos eficientes para o PTRD.\n\n\n\nRefere?ncias Bibliogra?ficas\n\n[1] Vanessa Renno? Frota Moraes Alves. Programac?a?o de transfere?ncia de derivados de\n\npetro?leo em rede dutovia?ria usando algoritmo gene?tico. Dissertac?a?o de Mestrado,\n\nCOPPE - Universidade Federal do Rio de Janeiro, Rio de Janeiro, RJ, Brasil, 2007.\n\n[2] R. Bartak. Constraint programming: In pursuit of the holy grail. Proceedings of Week\n\nof Doctoral Students (WDS99), pa?ginas 555\u2013564, Prague, Czech Republic, 1999.\n\n[3] M.S. Bazaraa, J.J. Jarvis, e H.D. Sherali. Linear Programming and Network Flows.\n\nJohn Wiley and Sons, 1990.\n\n[4] Viviane Monteiro Braconi. Heur??sticas multifluxo para roteamento de produtos em\n\nredes dutovia?rias. Dissertac?a?o de Mestrado, Departamento de Informa?tica, PUC-Rio,\n\nRio de Janeiro, RJ, Brasil, 2002.\n\n[5] Diego C. Cafaro e Jaime Cerda?. Optimal scheduling of multiproduct pipeline sys-\n\ntems using a non-discrete MILP formulation. Computers &amp; Chemical Engineering,\n\n28(10):2053\u20132058, 2004.\n\n[6] Eduardo Camponogara. A-Teams para um problema de transporte de derivados de\n\npetro?leo. Dissertac?a?o de Mestrado, Instituto de Matema?tica, Estat??stica e Cie?ncia\n\nda Computac?a?o, Universidade Estadual de Campinas, Campinas, Brazil, 1995.\n\n[7] Global Constraint Catalog. http://www.emn.fr/x-info/sdemasse/gccat/index.html.\n\n[8] W.F. Clocksin e C.S. Mellish. Programming in Prolog. Springer, 1994.\n\n[9] 5th International Planning Competition. http://zeus.ing.unibs.it/ipc-5/.\n\n[10] D. Scott Crane, Roger L. Wainwright, e Dale A. Schoenefeld. Scheduling of multi-\n\nproduct fungible liquid pipelines using genetic algorithms. Proceedings of the 1999\n\nACM Symposium on Applied Computing, pa?ginas 280\u2013285, San Antonio, USA, 1999.\n\n76\n\n\n\nREFERE?NCIAS BIBLIOGRA?FICAS 77\n\n[11] J.M. de la Cruz, B. Andre?s-Toro, A. Herra?n-Gonza?lez, E. Besada Porta, e P. Fernan-\n\ndez Blanco. Multiobjective optimization of the transport in oil pipelines networks.\n\nProceedings of the IEEE Conference on Emerging Technologies and Factory Automa-\n\ntion, volume 1, pa?ginas 566\u2013573, 2003.\n\n[12] J.M. de la Cruz, A. Herra?n-Gonza?lez, J.L. Risco-Mart??n, e B. Andre?s-Toro. Hybrid\n\nheuristic and mathematical programming in oil pipelines networks: Use of immi-\n\ngrants. Journal of Zhejiang University SCIENCE, 6A(1):9\u201319, 2005.\n\n[13] E?rito Marques de Souza Filho, Vanessa Renno? Frota Moraes, e Virg??lio Jose? Mar-\n\ntins Ferreira Filho. Utilizac?a?o de te?cnicas de pesquisa operacional em problemas\n\nde distribuic?a?o dutovia?ria: Uma revisa?o. XXXVIII Simpo?sio Brasileiro de Pesquisa\n\nOperacional, pa?ginas 1873\u20131880, Goiania, Brazil, 2006.\n\n[14] Frederico dos Santos Liporace. Planejadores para transporte em polidutos. Tese\n\nde Doutorado, Departamento de Informa?tica, PUC-Rio, Rio de Janeiro, RJ, Brasil,\n\n2005.\n\n[15] D. E. Goldberg. Genetic Algorithms in Search, Optimization and Machine Learning.\n\nAddison-Wesley, 1989.\n\n[16] John N. Hooker. Integrated Methods for Optimization (International Series in Ope-\n\nrations Research &amp; Management Science). Springer-Verlag, Secaucus, USA, 2006.\n\n[17] ILOG. ILOG Scheduler 6.2: User\u2019s Manual. ILOG, 2006.\n\n[18] R. Rejowski Jr. e Jose? M. Pinto. An MILP formulation for the scheduling of multi-\n\nproduct pipeline systems. Brazilian Journal of Chemical Engineering, 19(4):467\u2013474,\n\n2002.\n\n[19] Tony Lopes. Planejamento em rede de dutos. Dissertac?a?o de Mestrado, Instituto de\n\nComputac?a?o, Universidade Estadual de Campinas, Campinas, SP, Brasil, 2008 (em\n\nandamento).\n\n[20] M. M. Sasikumar, P. R. Prakash, S. M. Patil, e S. Ramani. Pipes: A heuristic search\n\nmodel for pipeline schedule generation. Knowledge-Based Systems, 10(3):169\u2013175,\n\n1997.\n\n[21] L. Magatao, L.V.R. Arruda, e F. Neves. A mixed integer programming approach for\n\nscheduling commodities in a pipeline. Computers &amp; Chemical Engineering, 28(1):171\u2013\n\n185, 2004.\n\n\n\nREFERE?NCIAS BIBLIOGRA?FICAS 78\n\n[22] L. Magatao, L.V.R. Arruda, e F. Neves. Using CLP and MILP for scheduling com-\n\nmodities in a pipeline. Computer-Aided Chemical Engineering, 20B:1027\u20131032, 2005.\n\n[23] K. Marriot e P.J. Stuckey. Programming with Constraints: An Introduction. MIT\n\nPress, Cambridge, Massachusetts, 1a edic?a?o, 1998.\n\n[24] Rodrigo Ma?s e Jose? M. Pinto. A mixed-integer optimization strategy for oil supply\n\nin distribution complexes. Optimization and Engineering, 4(1):23\u201364, 2003.\n\n[25] R.L. Milid??u e Frederico dos Santos Liporace. Planning of pipeline oil transportation\n\nwith interface restrictions is a difficult problem. Relato?rio Te?cnico 56, Departamento\n\nde Informa?tica, PUC-Rio, Rio de Janeiro, RJ, Brasil, 2003.\n\n[26] R.L. Milid??u, Frederico dos Santos Liporace, e Carlos Jose? P. de Lucena. Pipesworld:\n\nPlanning pipeline transportation of petroleum derivatives. Proceedings of ICAPS\u201903\n\n- Workshop on the Competition: Impact, Organization, Evaluation, Benchmarks,\n\nTrento, Italy, 2003.\n\n[27] R.L. Milid??u, A.A. Pessoa, V. Braconi, E.S. Laber, e Rey P.A. Um algoritmo GRASP\n\npara o problema de transporte de derivados de petro?leo em oleodutos. Proceedings\n\nof the XXXIII Brazilan Symposium on Operations Research, pa?ginas 237\u2013246, 2001.\n\n[28] A.V. Moura, C.C. de Souza, A.A. Cire, e T.M.T. Lopes. Heuristics and constraint\n\nprogramming hybridizations for a real pipeline planning and scheduling problem.\n\nProceedings of the 11th IEEE International Conference on Computational Science\n\nand Engineering - CSE\u201908, pa?ginas 455\u2013462, Julho de 2008.\n\n[29] A.V. Moura, C.C. de Souza, A.A. Cire, e T.M.T. Lopes. Planning and scheduling the\n\noperation of a very large oil pipeline network. Lecture Notes in Computer Science\n\n- Proceedings of the 14th International Conference on Principles and Practice of\n\nConstraint Programming, volume 5202, pa?ginas 36\u201351, Setembro de 2008.\n\n[30] C.H. Papadimitriou e K. Steiglitz. Combinatorial Optimization: Algorithms and\n\nComplexity. Dover Publications, 1998.\n\n[31] PETROBRAS. Relato?rio anual de atividades, 2004.\n\n[32] PETROBRAS. RIMA - Relato?rio de Impacto Ambiental, Plano Diretor de Dutos de\n\nSa?o Paulo PDD/SP, Setembro, 2007.\n\n[33] R. Rejowski e Jose? M. Pinto. Efficient MILP formulations and valid cuts for multi-\n\nproduct pipeline scheduling. Computers &amp; Chemical Engineering, 28(8):1511\u20131528,\n\n2004.\n\n\n\nREFERE?NCIAS BIBLIOGRA?FICAS 79\n\n[34] R. Rejowski e Jose? M. Pinto. A novel continuous time representation for the schedu-\n\nling of pipeline systems with pumping yield rate constraints. Computers &amp; Chemical\n\nEngineering, 32:1042\u20131066, 2008.\n\n[35] Susana Relvas, Ana Paula F. D. Barbosa-Po?voa, Henrique A. Matos, Joa?o Fialho, e\n\nAnto?nio S. Pinheiro. Pipeline scheduling and distribution centre management - a real-\n\nworld scenario at CLC. Proceedings of the 16th European Symposium on Computer\n\nAided Process Engineering and 9th International Symposium on Process Systems\n\nEngineering, pa?ginas 2135\u20132140, Garmisch-Partenkirchen, Germany, 2006.\n\n[36] Susana Relvas, Henrique A. Matos, Ana Paula F. D. Barbosa-Po?voa, e Joa?o Fialho.\n\nReactive scheduling framework for a multiproduct pipeline with inventory manage-\n\nment. Industrial &amp; Engineering Chemistry Research, 46(17):5659\u20135672, 2007.\n\n[37] Susana Relvas, Henrique A. Matos, Ana Paula F. D. Barbosa-Po?voa, Joa?o Fialho,\n\ne Anto?nio S. Pinheiro. Pipeline scheduling and inventory management of a mul-\n\ntiproduct distribution oil system. Industrial &amp; Engineering Chemistry Research,\n\n45(23):7841\u20137855, 2006.\n\n[38] M.G.C. Resende e C.C. Ribeiro. Greedy randomized adaptive search procedures.\n\nF. Glover e G. Kochenberger, editors, Handbook of Metaheuristics, pa?ginas 219\u2013249.\n\nKluwer Academic Publishers, 2002.\n\n[39] A?lvaro Garc??a Sa?nchez e Miguel Ortega Mier. Programacio?n de oleoductos: presen-\n\ntacio?n del problema y revisio?n de enfoques. Anales del IX Congreso de Ingenier??a de\n\nOrganizacio?n (CIO 2005), 2005.\n\n[40] L. A. Wolsey. Integer Programming. Wiley-Interscience, 1998.\n\n[41] Tallys Hoover Yunes. Problemas de escalonamento no transporte coletivo: Pro-\n\ngramac?a?o por restric?o?es e outras te?cnicas. Dissertac?a?o de Mestrado, Instituto de\n\nComputac?a?o, Universidade Estadual de Campinas, 2000."}]}}}