{"add": {"doc": {"field": [{"@name": "docid", "#text": "BR-TU.05968"}, {"@name": "filename", "#text": "10450_dissertacaof.pdf"}, {"@name": "filetype", "#text": "PDF"}, {"@name": "text", "#text": "Universidade de Aveiro 2011\nDepartamento de Electr\u00f3nica, Telecomunica\u00e7\u00f5es e Inform\u00e1tica\nLu\u00eds Carlos Santos Ferreira\nSistema anti-roubo de viaturas via carjacking\nUniversidade de Aveiro 2011\nDepartamento de Electr\u00f3nica, Telecomunica\u00e7\u00f5es e Inform\u00e1tica\nLu\u00eds Carlos Santos Ferreira\nSistema anti-roubo de viaturas via carjacking\nDisserta\u00e7\u00e3o apresentada \u00e0 Universidade de Aveiro para cumprimento dos requisitos necess\u00e1rios \u00e0 obten\u00e7\u00e3o do grau de Mestre em Engenharia Electr\u00f3nica e Telecomunica\u00e7\u00f5es, realizada sob a orienta\u00e7\u00e3o cient\u00edfica do Doutor Ant\u00f3nio Ferreira Pereira de Melo, Professor Catedr\u00e1tico do Departamento de Electr\u00f3nica, Telecomunica\u00e7\u00f5es e Inform\u00e1tica da Universidade de Aveiro.\nDedico este trabalho aos meus pais pela enorme paci\u00eancia que demonstraram ao longo de todos estes anos de estudos e aos meus colegas, vizinhos e amigos Hugo Cunha, Ludimar Guenda e Filipe Abrantes, pela ajuda valiosa e apoio que me deram durante os anos de desenvolvimento deste projecto.\nAgrade\u00e7o ainda ao Professor Doutor Ant\u00f3nio Pereira de Melo, pela oportunidade de realizar um trabalho com uma forte componente pr\u00e1tica e num ramo que me interessa tanto.\nO j\u00fari\nPresidente\tProfessor Doutor Tom\u00e1s Ant\u00f3nio Mendes Oliveira e Silva Professor associado do Departamento de Electr\u00f3nica Telecomunica\u00e7\u00f5es e Inform\u00e1tica da Universidade de Aveiro\nArguente\tProfessor Doutor Pedro Ant\u00f3nio Amado Assun\u00e7\u00e3o Professor Coordenador da Escola Superior de Tecnologia e Gest\u00e3o do Instituto Polit\u00e9cnico de Leiria\nOrientador\tProfessor Doutor Ant\u00f3nio Ferreira Pereira de Melo Professor Catedr\u00e1tico do Departamento de Electr\u00f3nica Telecomunica\u00e7\u00f5es e Inform\u00e1tica da Universidade de Aveiro\npalavras-chave\tZigBee, sem fios, alarme, carjacking, carro, controlo de acessos\nkeywords\tZigBee, wireless, alarm, carjacking, car, access control\nresumo\tNesta tese de mestrado pretende desenvolver-se um sistema anti-caijacking com caracter\u00edsticas aut\u00f3nomas e praticamente sem necessidade de interven\u00e7\u00e3o por parte do utilizador. Esse sistema incorpora registo e controlo de acessos.\nabstract\tIn this thesis is developed a carjacking prevention system having autonomous capability and the ability of functioning without much user input. The system can also record and control the access to a preestablished area.\nI.\n\u00cdndice\nI.\t\u00cdndice................................................................................2\n1.\tIntrodu\u00e7\u00e3o............................................................................1\n1.1.\tEstrutura do documento...........................................................1\n1.2.\tObjectivos.......................................................................1\n1.3.\tEnquadramento....................................................................2\n1.4.\tImport\u00e2ncia no mercado actual....................................................3\n1.5.\tOrganiza\u00e7\u00e3o do projecto..........................................................4\n2.\tBase te\u00f3rica das tecnologias utilizadas...............................................5\n2.1.\tZigbee...........................................................................5\n2.1.1.\tCompara\u00e7\u00e3o com outras tecnologias sem fios.....................................7\n2.1.2.\tVertentes de utiliza\u00e7\u00e3o,\ta ZigBee Alliance.....................................7\n2.1.3.\tPorqu\u00ea a op\u00e7\u00e3o por ZigBee neste projecto?......................................8\n2.2.\tSPI (Serial Peripheral Interface)................................................8\n2.3.\tI2C (Inter-Integrated Circuit)..................................................10\n2.4.\tABS (Anti-lock Braking System)..................................................11\n2.5.\tAceler\u00f3metros...................................................................13\n3.\tExecu\u00e7\u00e3o pr\u00e1tica.....................................................................15\n3.1.\tEscolha dos elementos electr\u00f3nicos..............................................15\n3.1.1.\tElementos comuns utilizados...................................................15\n3.1.2.\tMicroprocessador (CPU)........................................................15\n3.1.3.\tM\u00f3dulo de comunica\u00e7\u00e3o ZigBee..................................................16\n3.2.\tAmbiente de desenvolvimento.....................................................17\n3.2.1.\tHardware de programa\u00e7\u00e3o de microcontroladores PIC.............................17\n3.2.2.\tPrepara\u00e7\u00e3o....................................................................18\n3.2.3.\tA Stack de comunica\u00e7\u00e3o daMicrochip............................................19\n3.2.4.\tConfigura\u00e7\u00e3o utilizada........................................................19\n3.3.\tSoftware........................................................................21\n3.4.\tOs comandos / unidades identificadoras..........................................21\n3.4.1.\tAutonomia esperada............................................................23\n3.5.\tO m\u00f3dulo do carro...............................................................25\n3.5.1.\tDetec\u00e7\u00e3o de cart\u00f5es...........................................................25\n3.5.2.\tActua\u00e7\u00e3o na viatura...........................................................26\n3.5.3.\tObten\u00e7\u00e3o do sinal de ABS......................................................27\n3.5.4.\tO aceler\u00f3metro................................................................28\n3.5.4.1.\tEscolha do aceler\u00f3metro.....................................................28\n3.5.5.\tRegisto de acessos............................................................30\n3.5.6.\tGest\u00e3o de sess\u00f5es em detalhe..................................................31\n3.6.\tO m\u00f3dulo de programa\u00e7\u00e3o.......................................................32\n3.7.\tA aplica\u00e7\u00e3o para Windows........................................................33\n3.7.1.\tGuia de utiliza\u00e7\u00e3o..........................................................33\n3.8.\tInterac\u00e7\u00e3o entre o m\u00f3dulo do carro, o m\u00f3dulo de programa\u00e7\u00e3o e o software........38\n3.8.1.\tTeste da conectividade com o m\u00f3dulo de programa\u00e7\u00e3o............................38\n3.8.2.\tTeste da conectividade com o carro............................................39\n3.8.3.\tAdicionar um cart\u00e3o \u00e0 base de dados do m\u00f3dulo do carro........................40\n3.8.4.\tObter o n\u00famero de cart\u00f5es na base de dados do m\u00f3dulo do carro.................41\n3.8.5.\tRemover um cart\u00e3o da base de dados do m\u00f3dulo do carro..........................42\n3.8.6.\tObter ID de um cart\u00e3o na base de dados do m\u00f3dulo do carro......................43\n3.8.7.\tVerificar estado de bloqueio do carro.........................................43\n3.8.8.\tBloquear ou desbloquear carro.................................................44\n3.8.9.\tAcertar hora e data do m\u00f3dulo do carro........................................45\n3.8.10.\tObter n\u00famero de registos de acesso guardados em mem\u00f3ria......................46\n3.8.11.\tApagar registos de acesso....................................................47\n3.8.12.\tObter registos de acesso..............................................47\n4.\tResultados dos testes no terreno.............................................49\n4.1.\tTestes em viatura........................................................49\n4.1.1.\tO m\u00f3dulo do carro......................................................49\n4.1.2.\tAutonomia do cart\u00e3o....................................................51\n4.1.3.\tAlcances medidos para os v\u00e1rios m\u00f3dulos................................51\n5.\tConclus\u00f5es...................................................................53\n6.\tTrabalho Futuro..............................................................55\n6.1.\tDesenvolver um m\u00e9todo de evitar o replay dos dados transmitidos pelos comandos.55\n6.2.\tImplementar uma bateria de l\u00edtio de 3,6V e um controlador do processo de carga no cart\u00e3o 55\n7.\tOutras aplica\u00e7\u00f5es............................................................57\nII.\tBibliografia..............................................................59\nIII.\tAp\u00eandices.................................................................61\nA.\tOrganiza\u00e7\u00e3o interna da mem\u00f3ria n\u00e3o vol\u00e1til do CPU...............................61\nB.\tComandos implementados na interac\u00e7\u00e3o entre m\u00f3dulos........................62\nC.\tEsquemas el\u00e9ctricos e PCBs................................................63\n1.\tCart\u00e3o..................................................................63\n2.\tM\u00f3dulo do Carro.........................................................64\n3.\tM\u00f3dulo de programa\u00e7\u00e3o....................................................66\nLista de Figuras\nFigura 1 - Diagrama de blocos do sistema projectado.................................................................1\nFigura 2 - N\u00famero de casos de carjacking registados em Portugal entre 2005 e 2008...................................3\nFigura 3 - Logo ZigBee..............................................................................................5\nFigura 4 - Formato de trama ZigBee..................................................................................5\nFigura 5 - Topologias de redes ZigBee...............................................................................6\nFigura 6 - Logo ZigBee Alliance.....................................................................................7\nFigura 7 - Esquema el\u00e9ctrico de um sistema utilizando SPI...........................................................9\nFigura 8 - Diagrama temporal exemplificativo da opera\u00e7\u00e3o do SPI......................................................9\nFigura 9 - Logo I2C.................................................................................................10\nFigura 10 - Esquema el\u00e9ctrico de um sistema utilizando I2C..........................................................10\nFigura 11 - Diagrama temporal exemplificativo da opera\u00e7\u00e3o do I2C....................................................10\nFigura 12 - S\u00edmbolo do sistema ABS..................................................................................11\nFigura 13 - Sensor de ABS...........................................................................................12\nFigura 14 - Exemplo de varia\u00e7\u00e3o da frequ\u00eancia do sinal de ABS com a velocidade do carro.............................12\nFigura 15 - Exemplo de um sinal vindo de um sensor de ABS activo....................................................12\nFigura 16 - Exemplo de utiliza\u00e7\u00e3o de aceler\u00f3metro em telem\u00f3vel para determinar orienta\u00e7\u00e3o do ecr\u00e3...................13\nFigura 17 - Microchip Pie 18F26K20..................................................................................15\nFigura 18 - Microchip MRF24J40MA....................................................................................16\nFigura 19 - IDE MPLAB...............................................................................................17\nFigura 20 - PICkit 3................................................................................................17\nFigura 21 - Stack MiWi da Microchip.................................................................................19\nFigura 22 - Microsoft Visual Basic Express 2010.....................................................................21\nFigura 23 - Reed Relay utilizado....................................................................................21\nFigura 24 - Diagrama de blocos do comando...........................................................................22\nFigura 25 - ID de identifica\u00e7\u00e3o de cada cart\u00e3o......................................................................22\nFigura 26 - Bateria recarreg\u00e1vel utilizada..........................................................................23\nFigura 27 - Curva de carga da bateria...............................................................................24\nFigura 28 - Microchip nano Watt XLP Ba ttery Life Estima tor v1.0...................................................24\nFigura 29 - Diagrama de estados do sistema gestor do bloqueio do carro; A verde est\u00e1 destacado o estado de partida..26\nFigura 30 - Circuito utilizado para obter sinal de ABS de sensor passivo............................................27\nFigura 31 - Circuito utilizado para obter sinal de ABS de sensor activo.............................................28\nFigura 32 - Aceler\u00f3metro utilizado (ADXL327)........................................................................29\nFigura 33 - Diagrama de estados do registador de acessos; A verde escuro est\u00e1 destacado o estado de partida.........30\nFigura 34 - Formato de um registo de acesso guardado na mem\u00f3ria externa.............................................30\nFigura 35 - Gest\u00e3o de sess\u00f5es em detalhe com exemplo de sess\u00e3o do cart\u00e3o 3..........................................31\nFigura 36 - Vector de sess\u00e3o no estado inicial (sem sess\u00f5es iniciadas)..............................................31\nFigura 37 - Vector de sess\u00e3o imediatamente ap\u00f3s detec\u00e7\u00e3o do cart\u00e3o 2................................................32\nFigura 38 - Vector de sess\u00e3o imediatamente antes do final de sess\u00e3o do cart\u00e3o 2.....................................32\nFigura 39 - Janela principal da aplica\u00e7\u00e3o...........................................................................33\nFigura 40 - Iniciar o trabalho na aplica\u00e7\u00e3o.........................................................................34\nFigura 41 - Escolher ficheiro de log para a aplica\u00e7\u00e3o...............................................................34\nFigura 42 - Ecr\u00e3 inicial da aplica\u00e7\u00e3o depois de testes de conectividade.............................................35\nFigura 43 - Adicionar cart\u00e3o........................................................................................35\nFigura 44 - Cart\u00e3o adicionado com sucesso...........................................................................36\nFigura 45 - Carro desbloqueado com sucesso..........................................................................36\nFigura 46 - Acertar hora do m\u00f3dulo do carro.........................................................................37\nFigura 47 - Exemplo de registo de acessos...........................................................................37\nFigura 48 - Exemplo de comunica\u00e7\u00e3o entre aplica\u00e7\u00e3o de programa\u00e7\u00e3o e carro...........................................38\nFigura 49 - Teste de conectividade com o\tprogramador (falha)........................................................38\nFigura 50 - Teste de conectividade com o\tprogramador (sucesso)......................................................39\nFigura 51 - Teste de conectividade com o\tcarro (falha)..............................................................39\nFigura 52 - Teste de conectividade com o carro (sucesso)............................................................40\nFigura 53 - Adicionar cart\u00e3o (falha)................................................................................40\nFigura 54 - Adicionar cart\u00e3o (sucesso)..............................................................................41\nFigura 55 - Obter n\u00famero de cart\u00f5es na base de dados do carro (sucesso).............................................41\nFigura 56 - Obter n\u00famero de cart\u00f5es na base de dados do carro (falha)...............................................42\nFigura 57 - Remover cart\u00e3o da base de dados do m\u00f3dulo do carro (sucesso)............................................42\nFigura 58 - Remover cart\u00e3o da base de dados do m\u00f3dulo do carro (falha)..............................................42\nFigura 59 - Obter ID de cart\u00e3o armazenado na base de dados do m\u00f3dulo do carro (sucesso).............................43\nFigura 60 - Obter ID de cart\u00e3o armazenado na base de dados do m\u00f3dulo do carro (falha).............................43\nFigura 61 - Obter estado de bloqueio do carro (sucesso)...........................................................44\nFigura 62 - Obter estado de bloqueio do carro (falha).............................................................44\nFigura 63 - Bloquear viatura (sucesso)............................................................................44\nFigura 64 - Desbloquear viatura (sucesso).........................................................................45\nFigura 65 - Bloquear viatura (falha)..............................................................................45\nFigura 66 - Desbloquear viatura (falha)...........................................................................45\nFigura 67 - Acertar hora do m\u00f3dulo do carro (sucesso).............................................................46\nFigura 68 - Acertar hora do m\u00f3dulo do carro (falha)...............................................................46\nFigura 69 - Obter n\u00famero de registos de acesso guardados em mem\u00f3ria (sucesso)......................................46\nFigura 70 - Apagar registos de acesso (sucesso)...................................................................47\nFigura 71 - Apagar registos de acesso (falha).....................................................................47\nFigura 72 - Obter 10 registos de acesso (sucesso).................................................................47\nFigura 73 - Obter 10 registos de acesso (falha)...................................................................48\nFigura 74 - M\u00f3dulo do carro na placa branca montado no carro para testes..........................................49\nFigura 75 - Rel\u00e9 autom\u00f3vel utilizado para bloqueio e desbloqueio da viatura.......................................50\nFigura 76 - Pinout de um MCP1407 na package TO-220-5..............................................................50\nFigura 77 - Esquema el\u00e9ctrico do m\u00f3dulo de cart\u00e3o de identifica\u00e7\u00e3o................................................63\nFigura 78 - PCB do m\u00f3dulo do cart\u00e3o de identifica\u00e7\u00e3o (3,32x4,48cm)................................................63\nFigura 79 - Fotos do cart\u00e3o utilizado para testes.................................................................64\nFigura 80 - Esquema el\u00e9ctrico do m\u00f3dulo de carro..................................................................64\nFigura 81 - PCB do m\u00f3dulo do carro (6,72x5,25 cm).................................................................65\nFigura 82 - Foto do m\u00f3dulo do carro utilizado em testes...........................................................65\nFigura 83 - Esquema el\u00e9ctrico do m\u00f3dulo de programa\u00e7\u00e3o............................................................66\nFigura 84 - PCB do m\u00f3dulo de programa\u00e7\u00e3o (2,83x2,75cm)............................................................66\nFigura 85 - Fotos do m\u00f3dulo de programa\u00e7\u00e3o utilizado..............................................................67\nLista de tabelas\nTabela 1 - Compara\u00e7\u00e3o entre ZigBee, Wi-Fi e Bluetooth..............................................................7\nTabela 2 - Exemplos de fun\u00e7\u00f5es MiApp e MiMAC.......................................................................20\nTabela 3 - Tabela de caracteres ASCII poss\u00edveis para ID dos cart\u00f5es................................................23\nTabela 4 - Tabela de estados poss\u00edveis do m\u00f3dulo do carro em fun\u00e7\u00e3o dos leds indicadores...........................49\n\tLista de Acr\u00f3nimos\nABS\tAnti-lock Braking System\nACK\tAcknowledge\nAES\tAdvanced Encryption Standard\nCPU\tCentral Processing Unit\nCSMA/CA\tCarrier Sense Multiple Access with Collision Avoidance\nDIP\tDual Inline Package\nEEPROM\tElectrically-Erasable Programmable Read-Only Memory\nSMD\tSurface Mount Device\nI2C\tInter-Integrated Circuit\nIDE\tIntegrated Development Environment\nMAC\tMedium Access Control\nMIPS\tMilh\u00f5es de Instru\u00e7\u00f5es Por Segundo\nNACK\tNot Acknowledge\nOPAMP\tOperational Amplifier (AMPOP em portugu\u00eas)\nPAN\tPrivate Area Network\nRAM\tRandom Access Memory\nROM\tRead-Only Memory\nRFID\tRadio-Frequency Identification\nSPI\tSerial Peripheral Interface\nUSB\tUniversal Serial Bus\nWDT\tWatchdog Timer\n1.\tIntrodu\u00e7\u00e3o\n1.1.\tEstrutura do documento\nEste documento est\u00e1 dividido em 6 cap\u00edtulos e 3 sec\u00e7\u00f5es.\nO primeiro cap\u00edtulo visa dar uma introdu\u00e7\u00e3o ao que ser\u00e1 tratado, abordando a problem\u00e1tica do carjacking, os objectivos deste projecto e o espa\u00e7o existente no mercado para um producto deste tipo.\nNo segundo s\u00e3o enunciadas as bases te\u00f3ricas para uma melhor compreens\u00e3o do que \u00e9 mencionado nos cap\u00edtulos seguintes.\nNo terceiro est\u00e1 documentada toda a execu\u00e7\u00e3o pr\u00e1tica do projecto, desde a escolha dos componentes a detalhes sobre os quatro componentes base do projecto (cart\u00f5es, m\u00f3dulos de programa\u00e7\u00e3o e do carro e software).\nNo quarto cap\u00edtulo est\u00e3o os resultados da montagem do projecto num carro real.\nPor fim, nos quinto, sexto e s\u00e9timo cap\u00edtulos abordo as conclus\u00f5es do projecto, o trabalho que se poder\u00e1 fazer no futuro para desenvolver mais o projecto e que outras aplica\u00e7\u00f5es ser\u00e3o poss\u00edveis com o hardware criado ou com pequenas modifica\u00e7\u00f5es ao mesmo.\nAs sec\u00e7\u00f5es incluem o \u00cdndice, a Bibliografia e os Ap\u00eandices onde est\u00e3o os esquemas el\u00e9ctricos e as PCBs de todo o hardware realizado.\n1.2.\tObjectivos\nCom este projecto pretendo desenvolver uma solu\u00e7\u00e3o simples e barata para combater o \u201ccarjacking\u201d. N\u00e3o ser\u00e1 uma solu\u00e7\u00e3o que evite que os ladr\u00f5es tentem roubar um carro deste modo, mas sim uma solu\u00e7\u00e3o que evite que eles v\u00e3o muito longe ap\u00f3s terem praticado o acto.\nPIC\tBateria\n18F26k20 recarreg\u00e1vel 3V\nUnidade de comando port\u00e1til\nZigBee\nEEPROM PIC\n25AA1024 18F26k20\nM\u00f3dulo do carro\nBateria\tRTC\nrecarreg\u00e1vel 3V\tDS1307\n!>J era'\nCO\n0>\n0>\nFigura 1 - Diagrama de blocos do sistema projectado\nSer\u00e1 um sistema de funcionamento aut\u00f3nomo, baseado em tecnologia ZigBee e com poucos requisitos t\u00e9cnicos para ser operado, que pode ser instalado num grande n\u00famero de viaturas actualmente a circular nas nossas estradas.\nFuncionar\u00e1 ainda como registador de acessos ao ve\u00edculo, permitindo ao dono verificar quem e quando esteve no interior do mesmo, via uma aplica\u00e7\u00e3o simples para Windows, desde que quem tenha acesso ao ve\u00edculo carregue um cart\u00e3o de identifica\u00e7\u00e3o associado \u00e0 viatura. A viatura n\u00e3o estar\u00e1 operacional sem a presen\u00e7a deste cart\u00e3o a bordo.\nA aplica\u00e7\u00e3o servir\u00e1 de base para toda a programa\u00e7\u00e3o do sistema montado no ve\u00edculo, oferecendo um leque alargado de funcionalidades:\n\u2022\tAdicionar cart\u00f5es (utilizadores);\n\u2022\tRemover cart\u00f5es;\n\u2022\tFor\u00e7ar o Bloqueio ou desbloquear a viatura;\n\u2022\tConsultar o registo de acessos \u00e0 viatura com horas de entrada e sa\u00edda da mesma.\n1.3.\tEnquadramento\nO termo carjacking n\u00e3o \u00e9 de origem portuguesa (n\u00e3o estando inclu\u00eddo no nosso dicion\u00e1rio), sendo antes um derivado de um termo utilizado anteriormente para refer\u00eancia a uma tomada de posse for\u00e7ada de um avi\u00e3o, o chamado hijacking. Com o aumento do n\u00famero de manobras semelhantes em ve\u00edculos autom\u00f3veis, nasceu este nome, uma adapta\u00e7\u00e3o do termo original \u00e0 nova realidade.\n\u00c9 um fen\u00f3meno que teve origem nos Estados Unidos na d\u00e9cada de 80, altura em que os primeiros casos ficaram registados, mas apenas em 1992 foi declarado crime federal naquele pa\u00eds. Chegou a Portugal em 2003, tendo sido not\u00edcia em v\u00e1rios blocos noticiosos que muitas vezes deram conta da viol\u00eancia de que os condutores s\u00e3o alvo.\nPode-se ent\u00e3o definir carjacking como o roubo de uma viatura autom\u00f3vel com o recurso ou n\u00e3o a armas de fogo, sem o consentimento do dono da mesma.\n\u00c9 importante referir que o roubo apenas \u00e9 considerado carjacking quando o propriet\u00e1rio da viatura est\u00e1 nas imedia\u00e7\u00f5es da mesma, mas que tanto pode acontecer com o dono dentro (parado nuns sem\u00e1foros, por exemplo) ou fora (parou apenas para ir buscar alguma coisa a algum lado e deixou a viatura desprotegida) da mesma. S\u00e3o aqueles casos, portanto, em que o ladr\u00e3o n\u00e3o tem de recorrer a nenhuma artimanha para fazer o carro andar, normalmente ele j\u00e1 est\u00e1 pronto a arrancar.\nPode, ent\u00e3o, acontecer em qualquer lado e, quase sempre, quando o dono da viatura menos espera:\n\u2022\tParques de estacionamento;\n\u2022\tBombas de gasolina;\n\u2022\tAcessos \u00e0 resid\u00eancia/sa\u00eddas de garagem;\n\u2022\tCaixas de multibanco;\n\u2022\tLocais despovoados e/ou com pouco ilumina\u00e7\u00e3o;\n\u2022\tCruzamentos ou entroncamentos com sem\u00e1foros.\nCarjacking \u00e9 um crime normalmente praticado com viol\u00eancia proporcional ao n\u00edvel de resist\u00eancia que os ocupantes da viatura proporcionem ao ladr\u00e3o. No entanto, h\u00e1 casos em que, mesmo que n\u00e3o seja oferecida resist\u00eancia, a viol\u00eancia \u00e9 utilizada na mesma.\nO perfil do ladr\u00e3o estabelecido pelas autoridades indica que s\u00e3o normalmente pequenos grupos com armas de fogo e idades entre os 20 e 25 anos, n\u00e3o toxicodependentes mas com resid\u00eancia em bairros suburbanos violentos das grandes cidades. O roubo transferiu-se para carjacking devido \u00e0 evolu\u00e7\u00e3o tecnol\u00f3gica dos sistemas anti-roubo das viaturas que passaram a estar baseados em t\u00e9cnicas de identifica\u00e7\u00e3o via RFID, que dificultam ou mesmo impossibilitam o furto de uma viatura sem acesso \u00e0 respectiva identifica\u00e7\u00e3o electr\u00f3nica, normalmente via chave ou cart\u00e3o.\nOs alvos preferenciais s\u00e3o mulheres e idosos, com carros equipados com caixa de velocidades manual (por serem mais f\u00e1ceis de operar) e o m\u00ednimo de ocupantes.\nSegundo os registos da Pol\u00edcia Judici\u00e1ria portuguesa, em 2004 e s\u00f3 na zona de Lisboa ocorreram 178 crimes do g\u00e9nero. No entanto, e segundo este \u00f3rg\u00e3o de seguran\u00e7a, apenas foram contabilizadas as ocorr\u00eancias em que o prevaricador se apodera da viatura durante um tempo significativo e para proveito\npr\u00f3prio, ficando de fora os casos em que o condutor apenas \u00e9 for\u00e7ado a realizar uma ac\u00e7\u00e3o que favore\u00e7a o ladr\u00e3o, como ir a uma caixa de multibanco levantar dinheiro.\nNa Figura 2 \u00e9 vis\u00edvel a evolu\u00e7\u00e3o dos casos de carjacking no nosso pa\u00eds entre os anos 2005 e 2008, notando-se uma tend\u00eancia para o aumento de incid\u00eancias.\nFigura 2 - N\u00famero de casos de carjacking registados em Portugal entre 2005 e 20081\n1.4.\tImport\u00e2ncia no mercado actual\nExistem actualmente no mercado, essencialmente quatro tipos de solu\u00e7\u00f5es para este problema associado ao \u201ccarjacking\u2019\u201d'.\na)\tLocaliza\u00e7\u00e3o ap\u00f3s roubo;\nb)\tBloqueio remoto ap\u00f3s roubo;\nc)\tBloqueio no local por realiza\u00e7\u00e3o de alguma ac\u00e7\u00e3o dentro da viatura;\nd)\tBloqueio autom\u00e1tica ap\u00f3s a n\u00e3o detec\u00e7\u00e3o de algum objecto identificador dentro da viatura.\nTodas estas t\u00e9cnicas t\u00eam vantagens e desvantagens.\nNo caso a) e no caso b) (muitas vezes as duas solu\u00e7\u00f5es s\u00e3o utilizadas em simult\u00e2neo, permitindo a localiza\u00e7\u00e3o e bloqueio remoto da viatura), tem de ser o condutor a avisar a entidade que lhe disponibilizou o servi\u00e7o de que foi alvo de roubo, para que a mesma proceda \u00e0 localiza\u00e7\u00e3o ou bloqueio da viatura.\nO caso c) pode ser problem\u00e1tico em situa\u00e7\u00f5es mais perigosas e r\u00e1pidas. Se os ladr\u00f5es estiverem dispostos a magoar algu\u00e9m para atingir o fim a que se propuseram e se a pessoa dentro do carro tentar alguma ac\u00e7\u00e3o que n\u00e3o permita que a viatura saia do local, a situa\u00e7\u00e3o pode-se complicar e levar a que algu\u00e9m se magoe. \u00c9 a solu\u00e7\u00e3o menos desejada j\u00e1 que exige que o condutor tome parte activa durante o roubo, o que poder\u00e1 ser visto como uma provoca\u00e7\u00e3o por parte dos ladr\u00f5es. Evita-se o roubo mas podem-se perder vidas, o que n\u00e3o \u00e9 de todo desejado.\nJ\u00e1 na solu\u00e7\u00e3o d) o processo de roubo acontece e n\u00e3o \u00e9 evitado, os ladr\u00f5es levam o carro que se imobilizar\u00e1 uns metros ou uns minutos depois. O sistema desliga a viatura e n\u00e3o permite que esta se volte a ligar sem que alguma ac\u00e7\u00e3o que apenas o condutor conhe\u00e7a seja efectuada. O problema desta solu\u00e7\u00e3o \u00e9 a dist\u00e2ncia ou o tempo em que o carro vai parar, se for demasiado perto ou cedo o condutor corre o risco de encarar com um ladr\u00e3o furioso por o seu roubo n\u00e3o ter funcionado, o que ser\u00e1 um problema ainda maior.\nOs tr\u00eas primeiros casos est\u00e3o sujeitos ainda \u00e0 utiliza\u00e7\u00e3o de dispositivos de bloqueio \u00e0s comunica\u00e7\u00f5es sem fios, que evitam que o carro receba ou transmita informa\u00e7\u00e3o para o exterior. A solu\u00e7\u00e3o\n1 http://www.in.pt/multimedia/infografia.aspx7content id=1039614\nd), em que se enquadra o projecto desenvolvido, tem a vantagem de funcionar ao contr\u00e1rio, o carro bloqueia se n\u00e3o receber instruc\u00e7\u00f5es para n\u00e3o bloquear, o que invalida a utiliza\u00e7\u00e3o de tais dispositivos.\nTodas estas solu\u00e7\u00f5es t\u00eam, no entanto, um problema em comum: o pre\u00e7o elevado.\nNos dois primeiros casos esse custo \u00e9 \u00f3bvio, para al\u00e9m do aparelho e instala\u00e7\u00e3o, o dono da viatura fica muitas das vezes preso a uma subscri\u00e7\u00e3o anual ou mensal.\nNos casos c) e d) \u00e9 o custo do aparelho e instala\u00e7\u00e3o que normalmente s\u00e3o o maior entrave \u00e0 instala\u00e7\u00e3o destes sistemas. Por exemplo, a instala\u00e7\u00e3o de um sistema de bloqueio autom\u00e1tico da viatura pode facilmente ascender \u00e0s centenas de euros, sendo ainda necess\u00e1rio adquirir identificadores extra para todas as pessoas que pretendam utilizar a viatura, com cada um a poder custar mais de \u20ac100.\n\u00c9 aqui que entra o sistema que nos propusemos desenvolver, espera-se que venha a ter um custo bastante inferior a ofertas baseadas em outras tecnologias j\u00e1 no mercado.\n1.5.\tOrganiza\u00e7\u00e3o do projecto\nUm dos grandes objectivos deste projecto \u00e9 criar algo simples, pelo que n\u00e3o seria razo\u00e1vel criar uma mir\u00edade de componentes que lhe adicionassem demasiada complexidade.\nAssim, s\u00e3o 4 os componentes base:\n\u2022\tCart\u00e3o de identifica\u00e7\u00e3o;\n\u2022\tM\u00f3dulo do carro;\n\u2022\tM\u00f3dulo programador;\n\u2022\tSoftware para Windows.\nAs funcionalidades espec\u00edficas e detalhes de cada componente est\u00e3o explicitados mais \u00e0 frente neste documento.\n2.\tBase te\u00f3rica das tecnologias utilizadas\nNeste cap\u00edtulo abordarei sucintamente as bases tecnol\u00f3gicas e protocolos de comunica\u00e7\u00e3o que utilizo no projecto. S\u00e3o eles ZigBee, SPI, I2C, ABS e aceler\u00f3metros.\n2.1.\tZigbee\nZigBee\nFigura 3 - Logo ZigBee\nO ZigBee \u00e9 um standard de comunica\u00e7\u00f5es sem fios criado em 2004 (especifica\u00e7\u00e3o 1.0, em 2003 j\u00e1 havia sido lan\u00e7ada uma especifica\u00e7\u00e3o preliminar e em 2007 foi actualizada) com o objectivo de ser uma alternativa barata e simplificada do Wi-Fi (que se baseiam em IEEE 802.11) em situa\u00e7\u00f5es bastante particulares e do Bluetooth num leque mais abrangente de situa\u00e7\u00f5es.\n\u00c9 claramente virado para redes de controlo que n\u00e3o necessitam de uma grande largura de banda e onde fun\u00e7\u00f5es avan\u00e7adas de poupan\u00e7a de energia s\u00e3o obrigat\u00f3rias, principalmente em n\u00f3s remotos que n\u00e3o fiquem ligados permanentemente a uma fonte de energia robusta e capaz de os alimentar indefinidamente.\nFoi projectado em cima da especifica\u00e7\u00e3o IEEE 802.15.4 e oferece uma pan\u00f3plia de fun\u00e7\u00f5es de gest\u00e3o de redes, que incluem a forma\u00e7\u00e3o de uma rede, atribui\u00e7\u00e3o de endere\u00e7os aos indiv\u00edduos dessa rede, reencaminhamento, troca de mensagens e descoberta de dispositivos pertencentes \u00e0 rede.\nA norma em si foi criada em cima da especifica\u00e7\u00e3o 802.15.4 que define as camadas f\u00edsicas e MAC (Medium Access Control). O 802.15.4 foi criado especificamente para aplica\u00e7\u00f5es que requeiram pouca largura de banda e consumos de energia muito baixos, sendo por isso ideal para o ZigBee.\nNa norma est\u00e1 definido um sistema de detec\u00e7\u00e3o e preven\u00e7\u00e3o de colis\u00f5es (CSMA/CA - Carrier Sense Multiple Access with Collision Avoidance, acesso m\u00faltiplo com verifica\u00e7\u00e3o de portadora e preven\u00e7\u00e3o de colis\u00f5es) e seguran\u00e7a que pode ir at\u00e9 AES (AdvancedEncryption Standard) de 128 bits com preven\u00e7\u00e3o de repeti\u00e7\u00f5es indesejadas (o chamado replay de tramas enviadas anteriormente, por dispositivos n\u00e3o autorizados).\nO ZigBee opera em 27 canais de frequ\u00eancia distintos, com a gama a depender da frequ\u00eancia base de opera\u00e7\u00e3o. Existe 1 canal para a frequ\u00eancia de 868MHz (de uso europeu), 10 canais para os 915MHz (de uso americano) e 16 canais para os 2,4GHz (de uso global). Nos 2,4GHz que ser\u00e3o utilizados neste projecto, cada canal est\u00e1 separado de 5MHz.\nUma trama ZigBee tem o seguinte formato:\n\u2022<-2 Bytes 1 Byte\n4 a 20 Bytes\nn Bytes\n2 Bytes-\nFrame\nControl\nSequence Number\nAddress\nData Payload\nFrame Check\nSequence\nX\nX\nFigura 4 - Formato de trama ZigBee\nUma rede ZigBee pode assumir v\u00e1rias topologias, exemplificadas na Figura 5:\n\u2022\tEstrela - Dispositivos perif\u00e9ricos ligam-se ao coordenador, com toda a informa\u00e7\u00e3o a passar por ele;\n\u2022\t\u00c1rvore - Dispositivos perif\u00e9ricos ligam-se entre eles, podendo-se formar mais de um caminho entre dois pontos; \u201cCabe\u00e7a\u201d da rede \u00e9 o coordenador e todos os n\u00f3s (elementos da rede) t\u00eam apenas um caminho at\u00e9 ele;\n\u2022\tMesh (mistura entre estrela e \u00e1rvore) - Id\u00eantica \u00e0 topologia em \u00e1rvore s\u00f3 que cada n\u00f3 poder\u00e1 ter mais do que uma liga\u00e7\u00e3o para o coordenador;\n\u2022\tP2P - Apenas dois dispositivos que comunicam entre si.\n\u00c1rvore\nFigura 5 - Topologias de redes ZigBee\nMesh\nExistem 3 tipos diferentes de dispositivos em redes ZigBee, por ordem de funcionalidade:\n\u2022\tCoordenadores - Essenciais em todas as redes ZigBee (excepto em redes P2P em que dois dispositivos quaisquer podem comunicar entre si sem necessidade de um gestor de rede), \u00e9 o centro de toda a rede; Entre as suas fun\u00e7\u00f5es est\u00e3o o controlo e transmiss\u00e3o dos par\u00e2metros da rede, a gest\u00e3o dos n\u00f3s da rede e a distribui\u00e7\u00e3o de mensagens na rede;\n\u2022\tRouters - Servem para estender o alcance de uma rede, assumindo fun\u00e7\u00f5es de reencaminhamento de tr\u00e1fego;\n\u2022\tDispositivos finais - Aqueles que, regra geral, comunicam com o mundo exterior, podendo representar m\u00f3dulos de comunica\u00e7\u00e3o com capacidade de fazer medi\u00e7\u00f5es do meio, receptores e comandos de televis\u00e3o, entre outros.\nNo \u00e2mbito deste projecto todos os dispositivos foram configurados como coordenadores, isto \u00e9, todos t\u00eam conhecimento pr\u00e9vio sobre os par\u00e2metros de funcionamento da rede (como o canal em que devem transmitir). Esta op\u00e7\u00e3o foi tomada tendo em conta a funcionalidade pretendida, esperar que os dispositivos se configurassem numa rede autom\u00e1tica de cada vez que fossem iniciados seria um disp\u00eandio de tempo e energia que, por exemplo, nos cart\u00f5es de identifica\u00e7\u00e3o seria prejudicial ao tempo de vida da bateria utilizada.\n2.1.1. Compara\u00e7\u00e3o com outras tecnologias sem fios\n\tZigBee\tWi-Fi\tBluetooth\nVelocidade\t20, 40 e 250kbps, dependendo da frequ\u00eancia de opera\u00e7\u00e3o\tAt\u00e9 600Mbps\tAt\u00e9 3Mbps\nAlcance (com antena normal, n\u00e3o direccional)\tAt\u00e9 100 metros\tAt\u00e9 100 metros\tAt\u00e9 10 metros\nFrequ\u00eancia de opera\u00e7\u00e3o\t868MHz, 915MHz, e 2,4GHz\t2,4 e 5 GHz\t2,4GHz\nComplexidade (Hardware e Software)\tBaixa\tMuito Alta\tAlta\nConsumo de energia\tMuito baixo (mW)\tAlto (W)\tM\u00e9dio (centenas de mW)\nTabela 1 - Compara\u00e7\u00e3o entre ZigBee, Wi-Fi e Bluetooth\nO ZigBee n\u00e3o \u00e9 o standard de comunica\u00e7\u00f5es sem fios mais avan\u00e7ado tecnologicamente, n\u00e3o \u00e9 nem o mais r\u00e1pido nem o que oferece o maior alcance. \u00c9 sim uma especifica\u00e7\u00e3o bastante centrada num prop\u00f3sito bem definido e que n\u00e3o tem grandes pretens\u00f5es fora desse mercado.\n\u00c9 bastante mais lento do que tanto o Wi-Fi como o Bluetooth, mas oferece a possibilidade de operar com um consumo baix\u00edssimo de energia, a rondar os mW, que \u00e9 no m\u00ednimo centenas de vezes inferior ao consumo proporcionado pelo Bluetooth.\nEntre outras diferen\u00e7as importantes para o Bluetooth, a tecnologia mais perto em termos de funcionalidade, est\u00e3o o n\u00famero de dispositivos que cada rede pode ter (8 no Bluetooth, at\u00e9 64 bits de endere\u00e7os no ZigBee, se ignorarmos o facto de o tempo de circula\u00e7\u00e3o de cada pacote pelos n\u00f3s da rede limitar este n\u00famero) e o tempo de entrada numa determinada rede (segundos no Bluetooth, dezenas de milissegundos no ZigBee).\n2.1.2.\tVertentes de utiliza\u00e7\u00e3o, a ZigBee Alliance\nApesar de ser uma tecnologia recente, o ZigBee tem sido bastante promovido pela ZigBee\n7\t.\t.\t.\nAlliance , existindo j\u00e1 perfis de utiliza\u00e7\u00e3o para as mais variadas situa\u00e7\u00f5es.\nZigBee Alliance\nFigura 6 - Logo ZigBee Alliance\nEsses perfis s\u00e3o desenvolvidos e definem standards de utiliza\u00e7\u00e3o que permitem que a tecnologia seja integrada mais facilmente no mercado.\n2 http://www.zigbee.org/\nExemplos desses perfis s\u00e3o:\n\u2022\tBuilding Automation - Controlo remoto de edif\u00edcios comerciais;\n\u2022\tRemote Control - Controlos remotos avan\u00e7ados;\n\u2022\tSmart Energy - Controlo e regula\u00e7\u00e3o remota de consumo de energia;\n\u2022\tHealth Care - Monitoriza\u00e7\u00e3o remota de dados vitais;\n\u2022\tHome Automation - Automa\u00e7\u00e3o de casas de privados;\n2.1.3.\tPorqu\u00ea a op\u00e7\u00e3o por ZigBee neste projecto?\nCom tanta oferta de dispositivos de comunica\u00e7\u00e3o sem fios no mercado, a escolha de uma tecnologia que cumprisse todos os requisitos para o que era pretendido poderia ser complicada.\nNo entanto, a decis\u00e3o de criar um sistema \u00e0 volta do ZigBee tornou-se \u00f3bvia logo nas primeiras etapas do desenvolvimento do projecto.\nPara al\u00e9m das diferen\u00e7as apontadas na compara\u00e7\u00e3o com outras tecnologias realizada na sec\u00e7\u00e3o\n2.1.1,\to ZigBee tem ainda a vantagem de ser uma tecnologia emergente e com um grande pot\u00eancial na \u00e1rea do controlo remoto com recurso a pilhas como fonte de energia.\nPor ser uma especifica\u00e7\u00e3o bastante centrada nesse prop\u00f3sito, est\u00e1 a come\u00e7ar a tomar o lugar de outras tecnologias em v\u00e1rios dispositivos de controlo. O caso dos controlos remotos das televis\u00f5es de mais alta gama, por exemplo, que j\u00e1 oferecem funcionalidades extra gra\u00e7as \u00e0 cria\u00e7\u00e3o de um canal de comunica\u00e7\u00e3o bidireccional entre a televis\u00e3o e o comando que n\u00e3o era poss\u00edvel com os normais infravermelhos. Este foi um mercado em que o Bluetooth entrou mas nunca vingou, muito devido \u00e0 sua falta de funcionalidades exclusivas.\nTamb\u00e9m foi ponderada a utiliza\u00e7\u00e3o de m\u00f3dulos convencionais de 433MHz ou menos, encontrados em praticamente todos os controlos remotos de garagens e at\u00e9 nos comandos convencionais dos carros. Tamb\u00e9m se pensou em utilizar m\u00f3dulos RFID passivos (cujos cart\u00f5es de identifica\u00e7\u00e3o s\u00e3o muito baratos mas os leitores dos mesmos s\u00e3o bastante dispendiosos), no entanto, os par\u00e2metros que levaram \u00e0 escolha do ZigBee foram o potencial de evolu\u00e7\u00e3o que ainda tem e a flexibilidade que oferece.\nSer\u00e1 f\u00e1cil adicionar funcionalidades extra ao comando desenvolvido, como por exemplo realizar ac\u00e7\u00f5es no carro sem ser preciso estar dentro dele ou utilizar o mesmo cart\u00e3o para aceder a v\u00e1rios espa\u00e7os, e isto sem adicionar nenhum hardware ao sistema e sem aumentar exageradamente o pre\u00e7o do produto.\n2.2.\tSPI (Serial Peripheral Interface)\nO SPI \u00e9 um protocolo de comunica\u00e7\u00e3o s\u00e9rie (os bits s\u00e3o enviados apenas numa linha, uns a seguir aos outros), s\u00edncrono (h\u00e1 uma linha de rel\u00f3gio comum entre todos os dispositivos) e capaz de operar em modo full-duplex (podem ser enviados dados ao mesmo tempo que se recebe, sem preju\u00edzo de velocidade, h\u00e1 uma linha dedicada para cada tipo de tr\u00e1fego).\nNum barramento SPI existe a no\u00e7\u00e3o de Master e Slave. O Master \u00e9 aquele que requisita ou envia dados para o Slave, e tamb\u00e9m aquele que controla a linha de rel\u00f3gio. Todas as transmiss\u00f5es de dados no barramento ocorrem com o pedido do Master a um dos Slaves ligados ao mesmo.\nFigura 7 - Esquema el\u00e9ctrico de um sistema utilizando SPI\nA comunica\u00e7\u00e3o entre os v\u00e1rios dispositivos \u00e9 efectuada recorrendo a 4 liga\u00e7\u00f5es:\n\u2022\tSDI - Serial Data In - Liga\u00e7\u00e3o onde circulam os dados provenientes dos outros dispositivos ligados ao barramento; Partilhada entre todos os dispositivos do barramento;\n\u2022\tSDO - Serial Data Out - O mesmo que a anterior mas onde circulam os dados enviados pelo dispositivo para o barramento; Tamb\u00e9m \u00e9 partilhada entre todos os dispositivos.\n\u2022\tCLK - Rel\u00f3gio - Liga\u00e7\u00e3o partilhada por todos os dispositivos e que cont\u00e9m a informa\u00e7\u00e3o do rel\u00f3gio para sincronismo;\n\u2022\tSS - Slave Select - Selecciona o dispositivo pretendido para transmitir ou receber dados, controlada pelo dispositivo Master do barramento; Cada dispositivo tem um Slave Select pr\u00f3prio e apenas um Slave Select pode estar activo em todos os instantes.\nO SPI pode atingir as dezenas de Mbps, estando apenas dependente da velocidade de cada um dos\ndispositivos ligados ao barramento.\t\t\t\t\t\t\t\n1\t2\t3\t4\t5\t6\t7\t8\t9\t10\nCLK\t-ni\t\t\t\t\t\t\nSS\t\\\nSDI x\tx x x :\nSDO x\t:\nFigura 8 - Diagrama temporal exemplificativo da opera\u00e7\u00e3o do SPI\nCom o diagrama temporal da Figura 8 fica claro o m\u00e9todo simples de funcionamento do barramento SPI. Quando o Master pretende transmitir informa\u00e7\u00e3o, \u00e9 ele que controla o barramento de rel\u00f3gio, indicando aos Slaves quando devem colocar informa\u00e7\u00e3o na sua linha de entrada de dados.\nNa mesma figura \u00e9 ainda vis\u00edvel a caracter\u00edstica full-duplex do barramento, pormenor que permite que o Master e os Slaves recebam e transmitam dados ao mesmo tempo.\n2.3.\tI2C (Inter-Integrated Circuit)\nFigura 9 - Logo I2C\n2\nO I C \u00e9 tamb\u00e9m um protocolo de liga\u00e7\u00e3o s\u00e9rie e s\u00edncrono mas, ao contr\u00e1rio do SPI, \u00e9 apenas halfduplex (os dados circulam apenas num sentido, apenas h\u00e1 uma linha para transmiss\u00e3o e recep\u00e7\u00e3o de dados), o que significa que \u00e9 mais lento e complexo de implementar.\nFigura 10 - Esquema el\u00e9ctrico de um sistema utilizando I2C\nAs duas linhas envolvidas na comunica\u00e7\u00e3o s\u00e3o:\n\u2022\tSDA - Serial Data - Linha por onde passa toda a informa\u00e7\u00e3o, tanto de entrada como de sa\u00edda de um dispositivo;\n\u2022\tSCL - Serial Clock - Linha respons\u00e1vel pelo sincronismo entre Master e Slave.\nAmbas as linhas precisam de resist\u00eancias de pull-up (entre a linha e o rail positivo da alimenta\u00e7\u00e3o), uma vez que os dispositivos apenas est\u00e3o permitidos a puxar a linha a zero ou a deix\u00e1-la flutuar, o que eleva a linha \u00e0 tens\u00e3o de alimenta\u00e7\u00e3o. Este desenho tem a vantagem de apenas necessitar de duas liga\u00e7\u00f5es que s\u00e3o partilhadas por todos os dispositivos, sendo o endere\u00e7amento uma parte da inicia\u00e7\u00e3o da comunica\u00e7\u00e3o, contra a selec\u00e7\u00e3o do Slave Select apropriado no SPI.\nAntes de cada troca de dados entre dois dispositivos, o Master coloca na linha de dados o endere\u00e7o para onde se destinam os dados que se seguem, cabendo aos Slaves detectar esse endere\u00e7o e fazer a correspond\u00eancia com o seu. Todos os dispositivos ligados ao barramento recebem os bits de endere\u00e7amento e tomam uma decis\u00e3o sobre o que fazer a seguir.\nCaso haja uma correspond\u00eancia, o Slave j\u00e1 sabe que os dados s\u00e3o para ele. Est\u00e3o definidos 7 bits de endere\u00e7amento no I C (dos quais 16 endere\u00e7os est\u00e3o reservados), o que significa que \u00e9 poss\u00edvel endere\u00e7ar at\u00e9 112 dispositivos com apenas 2 fios. No SPI seriam necess\u00e1rias 112 linhas dedicadas de Slave Select para o mesmo efeito.\n1\t23456789\t10\nSDA\nSCL Start \\__/ B1 \\_____/B2\\\t/Bn\\____/ Stop\n2\nEm termos de velocidades o I C pode atingir os 3,4Mbps, mas a maioria dos dispositivos fica-se pelos 100kbps ou 400kbps. Tamb\u00e9m aqui existe a no\u00e7\u00e3o de Master e Slave, sendo mais uma vez o Master que se encarrega de iniciar e terminar toda e qualquer transmiss\u00e3o de dados.\nExistem tr\u00eas instantes b\u00e1sicos na comunica\u00e7\u00e3o com este protocolo, explicitados na Figura 11:\n\u2022\tStart - In\u00edcio da comunica\u00e7\u00e3o entre o Master e os Slaves, \u00e9 marcado com a passagem da linha SDA de High para Low enquanto SCL est\u00e1 em High;\n\u2022\tStop - Fim da comunica\u00e7\u00e3o entre o Master e o Slave, \u00e9 marcado com a passagem da linha SDA de Low para High com o SCL em High;\n\u2022\tTroca de informa\u00e7\u00e3o - Master ou Slave colocam a informa\u00e7\u00e3o em SDA com o SCL em Low; SCL \u00e9 pulsado (de Low para High e de novo para Low) indicando que os dados est\u00e3o est\u00e1veis na linha SDA; Master ou Slave l\u00eaem o bit em SDA.\n2.4.\tABS (Anti-lock Braking System)\nFigura 12 - S\u00edmbolo do sistema ABS\nO ABS \u00e9 um sistema de seguran\u00e7a activo introduzido nos autom\u00f3veis de produ\u00e7\u00e3o em massa nos anos 80. As suas origens datam dos anos 20, quando come\u00e7ou a ser desenvolvido para utiliza\u00e7\u00e3o na avia\u00e7\u00e3o. Nos anos 70 apareceu pela primeira vez, como um extra bastante caro, em autom\u00f3veis de produ\u00e7\u00e3o. Foi necess\u00e1rio que Robert Bosch pegasse no que existia e desenvolvesse o conceito at\u00e9 praticamente ao n\u00edvel que temos hoje em que \u00e9 standard em quase todos os carros.\nCom o passar dos anos o sistema foi sendo aperfei\u00e7oado e optimizado para aproveitar as cada vez maiores capacidades de processamento encontradas num carro, para al\u00e9m de ter ficado cada vez mais pequeno no que a sensores e actuadores diz respeito.\nO princ\u00edpio de funcionamento \u00e9 bastante simples. Existe um sensor na roda que disponibiliza informa\u00e7\u00e3o sobre o estado de movimento da mesma. Esse sensor \u00e9 excitado por exemplo por um castelado (uma esp\u00e9cie de roda dentada, em destaque na Figura 13) que gera nele uma onda de tens\u00e3o com uma frequ\u00eancia proporcional \u00e0 velocidade de rota\u00e7\u00e3o da roda.\nFigura 13 - Sensor de ABS3\nEssa frequ\u00eancia depende directamente da velocidade da viatura, do n\u00famero de dentes que o fabricante colocou nesse sistema em particular, do tamanho da jante e da altura do pneu.\nFigura 14 - Exemplo de varia\u00e7\u00e3o da frequ\u00eancia do sinal de ABS com a velocidade do carro\nExistem dois tipos de sensores nos carros actuais:\n\u2022\tPassivos - N\u00e3o precisam de alimenta\u00e7\u00e3o e geram uma onda sinusoidal com arcadas positivas e negativas (Figura 14); Tamb\u00e9m s\u00e3o chamados de sensores inductivos; O valor de pico n\u00e3o \u00e9 fulcral para a detec\u00e7\u00e3o dos impulsos, como explicarei mais \u00e0 frente.\n\u2022\tActivos - Necessitam de alimenta\u00e7\u00e3o por parte do controlador de ABS (entre 5V e 12V) mas geram um sinal limitado entre, normalmente, 0,64V e 1,93V de m\u00e1ximo e m\u00ednimo, respectivamente (Figura 15); A especifica\u00e7\u00e3o diz ainda que estes valores n\u00e3o podem ir abaixo de 1,29V de m\u00e1ximo e acima de 0,97V de m\u00ednimo; Um exemplo destes sensores s\u00e3o os sensores por efeito de Hall3 4 5.\n3\thttp://www.2carpros.com/articles/how-abs-anti-lock-brakes-work\n4\thttp://www.volkspage.net/technik/ssp/ssp/SSP 264 d2.pdf\n5\thttp://www.picoauto.com/tutorials/bmw-braking-issues.html\nO m\u00e9todo como o computador central do carro (centralina) actua nas rodas em caso de detec\u00e7\u00e3o de algum problema n\u00e3o \u00e9 significativo para o desenvolvimento deste projecto.\n2.5.\tAceler\u00f3metros\nPor defini\u00e7\u00e3o, um aceler\u00f3metro \u00e9 um dispositivo electromec\u00e1nico capaz de fazer corresponder um sinal el\u00e9ctrico a uma acelera\u00e7\u00e3o. Essa acelera\u00e7\u00e3o poder\u00e1 ser est\u00e1tica, no caso da acelera\u00e7\u00e3o da gravidade, ou din\u00e2mica, causada por movimentos ou vibra\u00e7\u00f5es.\nT\u00eam muitas aplica\u00e7\u00f5es em v\u00e1rios aparelhos \u00e0 venda hoje em dia. Uma delas est\u00e1 nos telem\u00f3veis (Figura 16) onde permitem, entre outras coisas, detectar a inclina\u00e7\u00e3o do ecr\u00e3 face \u00e0 Terra e colocar a imagem do mesmo na posi\u00e7\u00e3o correcta. S\u00e3o tamb\u00e9m utilizados em discos r\u00edgidos de port\u00e1teis para detec\u00e7\u00e3o de acelera\u00e7\u00f5es bruscas, permitindo que o disco se proteja em caso de queda.\nFigura 16 - Exemplo de utiliza\u00e7\u00e3o de aceler\u00f3metro em telem\u00f3vel para determinar orienta\u00e7\u00e3o do ecr\u00e3\nExistem v\u00e1rios m\u00e9todos de funcionamento:\n\u2022\tPiezoel\u00e9ctricos;\n\u2022\tPiezoresistivos;\n\u2022\tVaria\u00e7\u00e3o de capacidade;\n\u2022\tBolhas de ar quente;\n\u2022\tLuz.\nA sa\u00edda do aceler\u00f3metro pode ser digital, anal\u00f3gica ou as duas simultaneamente.\nNo primeiro caso existe um barramento de sa\u00edda, normalmente baseada num protocolo s\u00e9rie, que permite que o utilizador leia os valores de acelera\u00e7\u00e3o dos registos internos do aceler\u00f3metro.\nSe o interface for anal\u00f3gico ser\u00e1 necess\u00e1rio recorrer a uma ADC com um n\u00famero de canais pelo menos igual ao n\u00famero de eixos do aceler\u00f3metro, j\u00e1 que a informa\u00e7\u00e3o da acelera\u00e7\u00e3o de cada eixo ser\u00e1 colocada em uma sa\u00edda espec\u00edfica em formato anal\u00f3gico.\n3.\tExecu\u00e7\u00e3o pr\u00e1tica\nComo apontado anteriormente (1.5), foi necess\u00e1rio desenvolver quatro componentes para o\nsistema:\t\u2022\tComando; \u2022\tM\u00f3dulo do carro; \u2022\tM\u00f3dulo programador; \u2022\tSoftware de programa\u00e7\u00e3o para Windows.\n3.1.\tEscolha dos elementos electr\u00f3nicos\nNa escolha de todos os elementos foi tido em conta o ambiente onde estes ter\u00e3o de operar, todos os elementos do m\u00f3dulo do carro existem em packages com especifica\u00e7\u00f5es de temperatura adequadas para funcionamento no interior de uma viatura (no m\u00ednimo de -40 a 85\u00b0C).\nN\u00e3o foi utilizado um kit de desenvolvimento, o processo de desenvolvimento de todos os componentes passou por uma fase em placa branca e s\u00f3 depois foi desenvolvida a PCB final.\n3.1.1.\tElementos comuns utilizados\nExistem dois elementos base que todos os componentes do sistema possuem em comum:\n\u2022\tMicroprocessador;\n\u2022\tM\u00f3dulo de comunica\u00e7\u00e3o ZigBee.\n3.1.2.\tMicroprocessador (CPU)\nO processador escolhido para ser utilizado em todos os componentes do sistema foi um PIC18F26K206 da Microchip, a funcionar com o rel\u00f3gio interno a 16Mhz.\n\n\n\nFigura 17 - Microchip PIC 18F26K20\n6\thttp://www.microchiD.com/wwwDroducts/Devices.aspx?dDocName=enQ26332\nA partir deste momento utilizarei a sigla CPU para me referir a este elemento em particular.\nAs raz\u00f5es para a escolha deste microcontrolador foram as seguintes:\n\u2022\tS\u00e3o bastante baratos (menos de \u20ac5) e f\u00e1ceis de obter;\n\u2022\tOferecem possibilidades de poupan\u00e7a de energia que os concorrentes n\u00e3o conseguem oferecer, nomeadamente o menor consumo de energia em modo Sleep (parte do processador desligado, apenas com as fun\u00e7\u00f5es vitais a funcionar) que foi poss\u00edvel encontrar;\n\u2022\tTem um rel\u00f3gio interno com uma velocidade interessante (16MHz), o que evitou a utiliza\u00e7\u00e3o de cristais extra em todos os m\u00f3dulos; A velocidade de rel\u00f3gio do processador \u00e9 importante que seja pr\u00f3xima dos 20MHz (a frequ\u00eancia de trabalho dos m\u00f3dulos ZigBee) de modo a que, principalmente no cart\u00e3o, se evitem tempos de espera por informa\u00e7\u00e3o na comunica\u00e7\u00e3o entre os dois elementos; N\u00e3o conv\u00e9m que seja muito superior a 20MHz porque seria um desperd\u00edcio de energia, o processador tornar-se-ia excessivamente r\u00e1pido e o m\u00f3dulo ZigBee n\u00e3o seria capaz de acompanhar;\n\u2022\tO comprimento de palavra (8 bits) \u00e9 suficiente para o projecto, uma vez que n\u00e3o ser\u00e1 necess\u00e1rio efectuar c\u00e1lculos complexos nem, geralmente, utilizar vari\u00e1veis com tamanho superior; Adicionalmente, a performance deste tipo de processadores em c\u00e1lculos que requeiram vari\u00e1veis com mais bits \u00e9 mais do que suficiente, e os protocolos SPI e I C funcionam com transmiss\u00f5es de 8 bits.\n\u2022\tExiste numa grande variedade de configura\u00e7\u00f5es de pinos (com e sem pinos, DIP e SMD), o que facilitou o desenvolvimento e debug de todas as aplica\u00e7\u00f5es, para al\u00e9m de permitir que o produto final fique o mais pequeno poss\u00edvel sem ser preciso repensar tudo de novo;\n\u2022\tTem capacidade de processamento (at\u00e9 16 MIPS, Milh\u00f5es de Instru\u00e7\u00f5es Por Segundo) e mem\u00f3ria interna suficiente (1KByte) para este projecto, excep\u00e7\u00e3o feita no caso do m\u00f3dulo do carro em que \u00e9 necess\u00e1rio guardar o registo de acessos, a\u00ed o sistema exigiu a presen\u00e7a de uma EEPROM externa com mais capacidade (1Mbit).\n\u2022\tEu estou mais familiarizado com os microprocessadores da Microchip;\n3.1.3.\tM\u00f3dulo de comunica\u00e7\u00e3o ZigBee\nAs comunica\u00e7\u00f5es ZigBee s\u00e3o levadas a cabo tamb\u00e9m por m\u00f3dulos da Microchip, exemplares do MRF24J40MA7 (Figura 18) que \u00e9 um m\u00f3dulo com antena incorporada criado \u00e0 volta do transceiver MRF24J408 tamb\u00e9m da Microchip.\nFigura 18 - Microchip MRF24J40MA\n7\thttp://www.microchip.com/wwwproducts/Devices.aspx?dDocName=en535967\n8\thttp://www.microchip.com/wwwproducts/Devices.aspx?dDocName=en027752\nAs raz\u00f5es para a escolha foram as seguintes:\n\u2022\tA Microchip fornece toda a stack de comunica\u00e7\u00e3o ZigBee com fun\u00e7\u00f5es de transmiss\u00e3o e recep\u00e7\u00e3o de mensagens entre n\u00f3s em modo broadcast, o necess\u00e1rio para o projecto;\n\u2022\tS\u00e3o bastante baratos (cerca de \u20ac8 por unidade) e f\u00e1ceis de obter, estando dispon\u00edveis em v\u00e1rios distribu\u00eddores;\n\u2022\tCont\u00eam todos os componentes necess\u00e1rios \u00e0 sua opera\u00e7\u00e3o (cristais, antena e adapta\u00e7\u00e3o para a antena);\n\u2022\tOferecem excelentes n\u00edveis de consumo de energia (na zona dos mW), permitindo ainda que o CPU coloque o transceiver em modo Sleep para poupan\u00e7a de energia extra;\n\u2022\tS\u00e3o capazes de um alcance suficiente para a fun\u00e7\u00e3o que desempenhar\u00e3o neste projecto (cerca de 2 metros para os cart\u00f5es e dezenas de metros para o programador).\n3.2.\tAmbiente de desenvolvimento\n3.2.1.\tHardware de programa\u00e7\u00e3o de microcontroladores PIC\nUma vez que foram utilizados produtos da Microchip, faz todo o sentido que sejam utilizadas ferramentas daMicrochip para o desenvolvimento do projecto.\nFigura 19 - IDE MPLAB\nFigura 20 - PICkit 3\nPara a programa\u00e7\u00e3o dos CPUs foi utilizado o programador PICkit 39 10(Figura 20), que se encontra perfeitamente integrado no MPLAB (v8.56 foi a utilizada, Figura 19), o IDE de desenvolvimento para microcontroladores PIC da Microchip. O compilador utilizado foi o C18w na sua edi\u00e7\u00e3o para estudantes, o compilador para PICs 18F tamb\u00e9m da Microchip e tamb\u00e9m ele perfeitamente integrado no IDE.\nA conjuga\u00e7\u00e3o PICkit 3, MPLAB e C18 permite, entre outras coisas, compila\u00e7\u00e3o do programa escrito e programa\u00e7\u00e3o imediata do CPU, tudo na mesma aplica\u00e7\u00e3o, acelerando bastante o processo de desenvolvimento, e tamb\u00e9m debug do c\u00f3digo dentro do pr\u00f3prio CPU, com visualiza\u00e7\u00e3o do estado de todos os registos e execu\u00e7\u00e3o instru\u00e7\u00e3o a instru\u00e7\u00e3o do c\u00f3digo.\n9\thttp://www.microchip.com/stellent/idcplg?IdcService=SS GET PAGE&amp;nodeId=1406&amp;dDocName=en538340\n10\thttp://www.microchip.com/stellent/idcplg?IdcService=SS GET PAGE&amp;nodeId=1406&amp;dDocName=en010014\n3.2.2.\tPrepara\u00e7\u00e3o\nOs passos para ter o ambiente de desenvolvimento a funcionar e o sistema pronto a compilar/programar c\u00f3digo do utilizador s\u00e3o os seguintes:\n1.\tInstalar MPLAB;\n2.\tInstalar C18;\n3.\tIncorporar C18 no MPLAB;\n4.\tInstalar PICkit 3;\n5.\tSeleccionar o programador no MPLAB.\nDe seguida \u00e9 necess\u00e1rio fazer o download da stack de comunica\u00e7\u00e3o fornecida pela Microchip11, que incorpora todas as fun\u00e7\u00f5es necess\u00e1rias para utilizar eficientemente os m\u00f3dulos ZigBee e at\u00e9 ficheiros de teste que permitem testar a comunica\u00e7\u00e3o entre m\u00f3dulos remotos.\nEste foi o ponto de partida para este projecto e onde foram dados os primeiros passos e realizados os primeiros testes com tecnologia ZigBee.\nOs ficheiros do projecto inicial que foi utilizado podem ser encontrados, depois de devidamente instalada a stack de comunica\u00e7\u00e3o, na pasta \u201cBasic Demos/Simple Example\u201d. A\u00ed existem duas pastas, uma para cada n\u00f3 da rede, mas apenas \u00e9 necess\u00e1rio utilizar uma, o c\u00f3digo \u00e9 o mesmo para os dois n\u00f3s que ser\u00e3o criados, a n\u00e3o ser que o hardware utilizado ou a conex\u00e3o entre o CPU e o m\u00f3dulo ZigBee seja diferente, a\u00ed ser\u00e1 conveniente utilizar o c\u00f3digo de cada pasta para cada n\u00f3 individual.\nPara colocar esta demonstra\u00e7\u00e3o a funcionar \u00e9 necess\u00e1rio editar apenas um ficheiro de nome \u201cHardwareProfile.h\u201d, que cont\u00e9m as defini\u00e7\u00f5es da montagem de hardware realizada pelo utilizador.\nCaso se esteja a utilizar um kit de desenvolvimento da Microchip de entre as quatro poss\u00edveis (PICDEMZ, PIC18_EXPLORER, EXPLORER16 ou EIGHT_BIT_WIRELESS_BOARD) o processo de configura\u00e7\u00e3o resume-se \u00e0 remo\u00e7\u00e3o do coment\u00e1rio apropriado nas seguintes linhas do ficheiro:\n#define PICDEMZ\n//#define PIC18EXPLORER\n//#define RXPLORRR16\n//#define EIGHT BIT WIRELESS BOARD_____________________________________________________\n\u00c9 importante n\u00e3o esquecer de comentar as linhas dos kits de desenvolvimento n\u00e3o utilizados. Ap\u00f3s este passo e se o hardware estiver todo montado devidamente, estar\u00e1 tudo pronto a funcionar.\nCaso o utilizador n\u00e3o utilize um kit de desenvolvimento daqueles quatro, o caso deste projecto, ser\u00e1 necess\u00e1rio efectuar o processo de configura\u00e7\u00e3o manualmente.\nPara simplificar, optou-se por simular o hardware encontrado no kit PICDEMZ, por ser o que mais se assemelhava \u00e0 montagem que se pretendia utilizar. Basta ent\u00e3o ir \u00e0 sec\u00e7\u00e3o destinada a esse kit no ficheiro e alterar a configura\u00e7\u00e3o de pinos do CPU para que corresponda exactamente \u00e0 montagem do utilizador. A parte que interessa do ficheiro est\u00e1 entre:\n#if defined(PICDEMZ)\n#endif\nDepois de configurados os pinos, \u00e9 s\u00f3 ligar \u00e0 alimenta\u00e7\u00e3o e testar a montagem. \u00c9 importante n\u00e3o esquecer que para testar a comunica\u00e7\u00e3o sem fios s\u00e3o precisos dois m\u00f3dulos operacionais. Este programa de testes assume isso mesmo, que o utilizador montou dois circuitos com a mesma configura\u00e7\u00e3o e com o mesmo programa carregado nos dois CPUs.\n11\thttD://www.microchiD.com/stellent/idcplg?IdcService=SS GET PAGE&amp;nodeId=2680&amp;dDocName=en547784\nQuando tudo estiver a funcionar, o programa implementa a utiliza\u00e7\u00e3o de dois bot\u00f5es para transmiss\u00e3o de mensagens entre os dois n\u00f3s de dois m\u00e9todos distintos: broadcast e unicast. O primeiro transmite a mesma mensagem para todos os n\u00f3s no raio de alcance e o segundo transmite apenas para o primeiro n\u00f3 que for detectado e que se encontre na lista de endere\u00e7os do CPU.\nO utilizador pode confirmar o funcionamento do sistema de dois modos. Ligando um dos CPUs a um computador atrav\u00e9s de uma porta RS232 e lendo o que o CPU escreve ou simplesmente pela observa\u00e7\u00e3o dos dois leds incluidos na montagem, que se acendem e apagam com a recep\u00e7\u00e3o de cada mensagem, sendo um led dedicado \u00e0s mensagens unicast e outro \u00e0s broadcast.\n3.2.3.\tA Stack de comunica\u00e7\u00e3o da Microchip\nA Microchip disponibiliza de modo gratuito a stack de comunica\u00e7\u00e3o para utilizar com os seus m\u00f3dulos sem fios. Para a realiza\u00e7\u00e3o deste projecto optei pela stack MiWi, que fornece fun\u00e7\u00f5es de transfer\u00eancia de informa\u00e7\u00e3o entre dois dispositivos de um modo simples e r\u00e1pido, permitindo configurar todos os par\u00e2metros do m\u00f3dulo de comunica\u00e7\u00e3o utilizado como pot\u00eancia de transmiss\u00e3o, velocidade e canal de opera\u00e7\u00e3o, entre outros.\nEsta stack est\u00e1 organizada da forma esquematizada na Figura 21. Faz uso dos m\u00f3dulos da Microchip permitindo a sua configura\u00e7\u00e3o atrav\u00e9s das extens\u00f5es MiMAC e utiliza uma camada de abstrac\u00e7\u00e3o extra para o desenvolvimento da aplica\u00e7\u00e3o chamada MiApp.\nFigura 21 - Stack MiWi da Microchip12\nO utilizador raramente ter\u00e1 de fazer uso directo das extens\u00f5es MiMAC, a n\u00e3o ser que seja necess\u00e1rio um grande controlo sobre o protocolo de comunica\u00e7\u00e3o, as extens\u00f5es MiApp fornecem um n\u00edvel de abstrac\u00e7\u00e3o dessa camada e fazem uso das suas extens\u00f5es.\nO utilizador ter\u00e1 apenas de desenvolver a camada aplica\u00e7\u00e3o, que fica num n\u00edvel de abstrac\u00e7\u00e3o acima da camada MiApp e que far\u00e1 uso das fun\u00e7\u00f5es disponibilizadas nas camadas abaixo.\n3.2.4.\tConfigura\u00e7\u00e3o utilizada\nDe entre os protocolos disponibilizados na stack de comunica\u00e7\u00e3o, foi escolhido o MiWi P2P, por ser o mais simples de utilizar e permitir a troca de mensagens entre dispositivos de um modo directo. Neste projecto n\u00e3o ser\u00e3o utilizadas as fun\u00e7\u00f5es de cria\u00e7\u00e3o/ades\u00e3o a redes do ZigBee, uma vez que a\n12\thttp://www.microchip.com/stellent/idcplg?IdcService=SS GET PAGE&amp;nodeId=2664&amp;param=en520414\nmaioria do tempo o cart\u00e3o de identifica\u00e7\u00e3o n\u00e3o estar\u00e1 no alcance do m\u00f3dulo do carro e o processo de ades\u00e3o \u00e0 rede criada pelo mesmo significaria um maior consumo de energia por parte do cart\u00e3o.\nA stack de comunica\u00e7\u00e3o escolhida \u00e9 seleccionada no ficheiro ConfigApp.h removendo o coment\u00e1rio na seguinte instru\u00e7\u00e3o:\n#defne PROTOCOL P2P\nNo entanto, continuar\u00e1 a ser utilizado o conceito de rede privada (PAN, Private Area Network), s\u00f3 que todos os m\u00f3dulos estar\u00e3o na mesma rede, configurada no programa que se carrega para o CPU. A stack MiWi P2P utiliza uma identifica\u00e7\u00e3o de rede com 4 Bytes, o que significa que poder\u00e3o existir at\u00e9 65.536 redes distintas, entre as quais n\u00e3o h\u00e1 troca de mensagens.\nEsse par\u00e2metro \u00e9 configurado tamb\u00e9m no ficheiro ConfigApp.h na seguinte instru\u00e7\u00e3o:\n\u25a0\u25a0define MY PAN ID 0x1234\nNo programa tem ainda de ser configurado o canal de opera\u00e7\u00e3o. O m\u00f3dulo MRF24J40MA opera a 2,4GHz e por isso tem dispon\u00edveis os canais de 16 a 31, segundo a configura\u00e7\u00e3o do mesmo.\nForam realizados testes de comunica\u00e7\u00e3o que revelaram que a mudan\u00e7a de canal n\u00e3o alterava significativamente a presta\u00e7\u00e3o do m\u00f3dulo, mesmo num regime de funcionamento com mais do que uma rede Wi-Fi a operar numa frequ\u00eancia pr\u00f3xima. Por isso mesmo, optou-se por um canal interm\u00e9dio, o 25. Esse canal \u00e9 configurado com a instru\u00e7\u00e3o seguinte na aplica\u00e7\u00e3o do utilizador:\nMiApp SetChannel(25);\nNa Tabela 2 est\u00e3o alguns exemplos das fun\u00e7\u00f5es disponibilizadas nas camadas MiApp e MiMAC.\nMiMAC\t\tMiApp\t\nMiMAC_Init()\tIniciar m\u00f3dulo ZigBee\tMiApp_ProtocolInit()\tConfigura\u00e7\u00e3o inicial do protocolo de comunica\u00e7\u00e3o\nMiMAC_SetPower()\tDefinir pot\u00eancia de transmiss\u00e3o\tMiApp_SetChannel()\tDefinir canal de opera\u00e7\u00e3o\nMiMAC_PowerState()\tColocar o m\u00f3dulo ZigBee num estado de consumo de energia\tMiApp_BroadcastPacket()\tTransmitir conte\u00fado do buffer de transmiss\u00e3o\nTabela 2 - Exemplos de fun\u00e7\u00f5es MiApp e MiMAC\n3.3.\tSoftware\nFigura 22 - Microsoft Visual Basic Express 2010\nPara desenvolver o software para PC foi utilizado o Microsoft Visual Studio Express 2010. Este IDE de desenvolvimento da Microsoft permite criar aplica\u00e7\u00f5es em Visual Basic para Windows com alguma facilidade, incluindo desde logo bibliotecas para comunica\u00e7\u00e3o com a porta de s\u00e9rie e para o desenho de interfaces gr\u00e1ficos, dois pontos essenciais para este projecto.\nPara al\u00e9m disso existe uma vers\u00e3o para estudante que foi utilizada e que possui grande parte das funcionalidades da vers\u00e3o profissional.\n3.4.\tOs comandos / unidades identificadoras\nO primeiro componente que irei documentar \u00e9 o comando. No sistema desenvolvido est\u00e1 previsto que possam ser adicionados ao m\u00f3dulo central (a colocar no carro) at\u00e9 9 comandos identificadores, que podem servir para identificar at\u00e9 9 utilizadores diferentes perante o sistema de controlo de acessos.\nTem como fun\u00e7\u00f5es:\n\u2022\tIdentificar um utilizador perante o m\u00f3dulo do carro;\n\u2022\tDesbloquear o carro em caso de bloqueio.\nE \u00e9 constitu\u00eddo por 3 componentes base:\n\u2022 CPU;\n\u2022\tM\u00f3dulo de comunica\u00e7\u00e3o ZigBee;\n\u2022\tReed relay.\nOs primeiros dois j\u00e1 foram apresentados, o reed relay \u00e9 um componente que tem como fun\u00e7\u00e3o permitir desbloquear o carro com o comando ap\u00f3s um bloqueio.\nFigura 23 - Reed Relay utilizado\nTrata-se de um interruptor normalmente aberto que pode ser fechado submetendo-o a um campo magn\u00e9tico. Quando o utilizador aproximar um \u00edman do lado do comando indicado para o efeito, este interruptor fecha e o comando transmite um c\u00f3digo diferente do habitual, que ser\u00e1 discutido j\u00e1 de seguida.\nArranque\nN\u00e3o\nEnviar c\u00f3digo de identifica\u00e7\u00e3o\n\t\t\t\nAcordar ZigBee\t\t<\t\tAcordar CPU\nSim\nEnviar c\u00f3digo de desbloqueio\nAdormecer ZigBee\nWDT terminou?\nN\u00e3o-\nAdormecer CPU\nActivar Watchdog\nTimer (WDT)\nV\n\n>\n\n4\nFigura 24 - Diagrama de blocos do comando\nA fun\u00e7\u00e3o dos comandos \u00e9 notificar o carro da sua presen\u00e7a na \u00e1rea, pelo que este apenas transmite o seu c\u00f3digo para todos os receptores. Quando o m\u00f3dulo do carro recebe uma ID que esteja armazenada na sua base de dados, \u00e9 aberta ou continuada uma sess\u00e3o dedicada a esse cart\u00e3o. Essa sess\u00e3o tem um tempo de vida de aproximadamente 1 minuto, ap\u00f3s o qual essa sess\u00e3o expira e o m\u00f3dulo do carro toma as medidas necess\u00e1rias para evitar que o carro continue a movimentar-se.\nA transmiss\u00e3o desse c\u00f3digo por parte do cart\u00e3o processa-se de 5 em 5 segundos, um tempo que representa um compromisso entre a dura\u00e7\u00e3o da bateria pretendida e as necessidades de refrescamento da sess\u00e3o do cart\u00e3o perante o carro.\nA ID (identifica\u00e7\u00e3o) de cada cart\u00e3o \u00e9 \u00fanica e permite que o m\u00f3dulo do carro saiba o que fazer em situa\u00e7\u00e3o de presen\u00e7a, para al\u00e9m do registo de acesso.\nEssa ID tem a seguinte forma:\n1 Byte de comando\n7 Bytes de identifica\u00e7\u00e3o\ne identifica\u00e7\u00e3o\nX X X X X X X\tX\nFigura 25 - ID de identifica\u00e7\u00e3o de cada cart\u00e3o\nCada \u2018X\u2019 representa um caracter alfanum\u00e9rico pertencente ao conjunto {[A...Z],[0...9]}, e cujos c\u00f3digos ASCII poss\u00edveis est\u00e3o representados na Tabela 3.\nTendo em conta que o \u00faltimo bit da ID utilizada para identificar cada cart\u00e3o serve para desbloquear a viatura ap\u00f3s bloqueio, o n\u00famero de cart\u00f5es que poder\u00e1 ser criado sem reutilizar c\u00f3digos de identifica\u00e7\u00e3o ser\u00e1 o seguinte:\nmax-Cart\u00f5es = 267 x 13 \u00ab 1011\nS\u00e3o utilizados 7 caracteres de entre qualquer um dos representados na Tabela 3 e mais um caracter de entre todos os caracteres da Tabela 3 tabela com o \u00faltimo bit a zero (que s\u00e3o 13), uma vez que a variante com o bit a um ser\u00e1 utilizada para desbloquear a viatura.\nCaso a viatura chegue ao estado de bloqueada, o comando, via reed relay, e o software de programa\u00e7\u00e3o s\u00e3o os \u00fanicos meios de desbloqueio da mesma.\nNo caso do software o desbloqueio \u00e9 trivial, \u00e9 s\u00f3 escolher a opera\u00e7\u00e3o de desbloqueio no programa. Caso n\u00e3o seja poss\u00edvel aceder a um computador com o programa instalado, foi criado um sistema redundante para o efeito, baseado no reed relay do cart\u00e3o de identifica\u00e7\u00e3o mencionado em cima.\nX\tC\u00f3digo ASCII\t\u00daltimo Bit\nA\t0x41\t1\nB\t0x42\t0\nC\t0x43\t1\nD\t0x44\t0\nE\t0x45\t1\nF\t0x46\t0\nG\t0x47\t1\nH\t0x48\t0\nI\t0x49\t1\nJ\t0x4A\t0\nK\t0x4B\t1\nL\t0x4C\t0\nX\tC\u00f3digo ASCII\t\u00daltimo bit\nM\t0x4D\t1\nN\t0x4E\t0\nO\t0x4F\t1\nP\t0x51\t0\nQ\t0x52\t1\nR\t0x53\t0\nS\t0x54\t1\nT\t0x55\t0\nU\t0x56\t1\nV\t0x57\t0\nW\t0x58\t1\nX\t0x59\t0\nX\tC\u00f3digo ASCII\t\u00daltimo bit\nY\t0x5A\t1\nZ\t0x5B\t0\n0\t0x30\t0\n1\t0x31\t1\n2\t0x32\t0\n3\t0x33\t1\n4\t0x34\t0\n5\t0x35\t1\n6\t0x36\t0\n7\t0x37\t1\n8\t0x38\t0\n9\t0x39\t1\nTabela 3 - Tabela de caracteres ASCII poss\u00edveis para ID dos cart\u00f5es\n3.4.1.\tAutonomia esperada\n\u00c9 importante que os comandos tenham uma autonomia interessante (centenas de dias), de modo a evitar situa\u00e7\u00f5es constrangedoras caso a bateria do comando deixe de ter energia suficiente para que este anuncie a sua presen\u00e7a, o que levaria a um desligar da viatura sem necessidade. Optamos por utilizar baterias recarreg\u00e1veis do tipo CR2032.\nFigura 26 - Bateria recarregavel utilizada\nO circuito de carregamento utilizado foi um simples regulador de tens\u00e3o de 3,3V com uma resist\u00eancia limitadora de corrente (R10) entre o mesmo e a bateria de modo a evitar o sobreaquecimento da mesma quando em carga, o datasheet da bateria n\u00e3o explicitava restri\u00e7\u00f5es ou m\u00e9todos de carregamento espec\u00edficos e apresentava a curva de carga da Figura 27.\nCharge voltage (V)\nFigura 27 - Curva de carga da bateria\nCom a poupan\u00e7a de energia em mente, os componentes do comando foram escolhidos de modo a serem bastante eficientes e poupados. O CPU \u00e9 uma unidade nanoWatt XLP da Microchip, o que significa que \u00e9 um dos que menos energia consome de toda a gama da empresa, e o m\u00f3dulo ZigBee controlar a pot\u00eancia de transmiss\u00e3o e disp\u00f5e de um modo Sleep de baixo consumo.\nPara projectar a autonomia estimada do comando foi utilizado o Microchip nanoWattXLP Battery Life Estimator v1.0 (Figura 28), uma aplica\u00e7\u00e3o da Microchip criada para o efeito. Foi medida a corrente de transmiss\u00e3o de um cart\u00e3o e obtido o valor de cerca de 10-12mA para cada transmiss\u00e3o, tendo sido esse o valor introduzido na aplica\u00e7\u00e3o.\nPara a bateria recarreg\u00e1vel escolhida para alimentar o circuito, este programa anuncia uma autonomia em funcionamento cont\u00ednuo do sistema de 231 dias. A corrente de pico no instante de transmiss\u00e3o do c\u00f3digo por parte do cart\u00e3o ultrapassa a corrente que uma bateria destas ser\u00e1 capaz de debitar, pelo que foi adicionado um condensador de apoio \u00e0 mesma para aliviar a carga na pilha nestas situa\u00e7\u00f5es.\nFigura 28 - Microchip nanoWattXLPBattery Life Estimator v1.0\n13\thttD://www.microchiD.com/stellent/idcplg?IdcService=SS GET PAGE&amp;nodeId=2680&amp;dDocName=en545243\n\u00c9 importante ter em aten\u00e7\u00e3o que o programa tem em conta que o CPU funcionar\u00e1 at\u00e9 aos 1,8V, o que n\u00e3o \u00e9 o caso do circuito do nosso cart\u00e3o, uma vez que o m\u00f3dulo ZigBee deixa de funcionar abaixo dos 2,4V. Isto significa que a autonomia n\u00e3o ser\u00e1 t\u00e3o grande quanto este programa anuncia.\nNo entanto, aparenta ser satisfat\u00f3ria e poder\u00e1 duplicar se forem utilizadas duas pilhas do mesmo tipo. No entanto, e para n\u00e3o aumentar demasiado o volume do produto final, optei por utilizar apenas uma pilha e fazer uso de outra estrat\u00e9gia para aumentar o tempo de vida \u00fatil da bateria.\nPara o efeito foi adicionado um bot\u00e3o de on/off ao comando, que permite que o utilizador desligue o comando quando estiver longe da viatura e este n\u00e3o seja preciso. Deste modo o comando apenas consumir\u00e1 energia durante o per\u00edodo em que o dono esteja perto do carro. Esse bot\u00e3o apenas desactiva o circuito, a pilha pode ser recarregada mesmo com o bot\u00e3o desligado.\nSe o dono utilizar o comando durante 8 horas por dia, estamos a falar num aumento da autonomia de 3 vezes (cerca de 2 anos), uma vez que o comando ficar\u00e1 operacional apenas um quarto do dia.\nAdicionalmente, o comando poder\u00e1 ser ligado a qualquer porta USB de qualquer computador para recarregar a bateria, sendo para isso utilizada uma porta mini-USB no comando. Esta facilidade adicional permite que a pilha do comando dure praticamente durante o tempo de vida da viatura.\n3.5.\tO m\u00f3dulo do carro\nDe longe o componente mais complexo de todo o sistema ao n\u00edvel de software, o m\u00f3dulo do carro \u00e9 o componente mais importante de todo o sistema, \u00e9 dele que depende o sucesso ou n\u00e3o dos algoritmos aplicados para detectar uma situa\u00e7\u00e3o de carjacking.\nTem como fun\u00e7\u00f5es:\n\u2022\tDetectar a presen\u00e7a de cart\u00f5es na vizinhan\u00e7a;\n\u2022\tActuar na viatura em caso de n\u00e3o detec\u00e7\u00e3o de nenhum cart\u00e3o;\n\u2022\tRegistar a presen\u00e7a de cada cart\u00e3o na base de dados, para verifica\u00e7\u00e3o posterior.\nE \u00e9 constitu\u00eddo por at\u00e9 5 componentes base:\n\u2022\tCPU;\n\u2022\tM\u00f3dulo de comunica\u00e7\u00e3o ZigBee;\n\u2022\tRel\u00f3gio - RTC (Real-Time Clock) da Maxim com cristal inclu\u00eddo e comunica\u00e7\u00e3o por I2C, cuja fun\u00e7\u00e3o \u00e9 fornecer a data para o registo de acessos; \u00c9 o \u00fanico elemento alimentado pela bateria recarreg\u00e1vel colocada neste m\u00f3dulo, todos os outros n\u00e3o est\u00e3o alimentados quando o utilizador desliga a viatura.\n\u2022\tEEPROM externa - Mem\u00f3ria n\u00e3o vol\u00e1til de 1Mbit da Microchip com comunica\u00e7\u00e3o SPI;\n\u2022\tAceler\u00f3metro (opcional) - Dispositivo com capacidade de detectar acelera\u00e7\u00f5es.\n3.5.1.\tDetec\u00e7\u00e3o de cart\u00f5es\nCada comando identificador tem uma ID associada a si, ID essa que \u00e9 transmitida periodicamente para todos os receptores no alcance. Quando recebe uma transmiss\u00e3o com 8 Bytes, o m\u00f3dulo do carro sabe automaticamente que \u00e9 de um cart\u00e3o de identifica\u00e7\u00e3o, o sistema foi projectado para que n\u00e3o haja outro tipo de comunica\u00e7\u00e3o que envolva a troca de 8 Bytes de informa\u00e7\u00e3o.\nRecebida a ID do comando, resta compar\u00e1-la com as IDs armazenadas na mem\u00f3ria n\u00e3o vol\u00e1til interna do CPU, cuja organiza\u00e7\u00e3o pode ser consultada no ap\u00eandice 0.\nFicou definido no firmware do m\u00f3dulo do carro que o sistema apenas pode armazenar 9 IDs de cart\u00f5es no seu interior, mais uma vez este n\u00famero \u00e9 um compromisso entre o espa\u00e7o dispon\u00edvel na mem\u00f3ria do mesmo e as condi\u00e7\u00f5es reais em que o sistema ser\u00e1 utilizado, 9 cart\u00f5es de identifica\u00e7\u00e3o ser\u00e3o suficientes na esmagadora maioria das situa\u00e7\u00f5es.\nDe modo a poupar esta mem\u00f3ria, que tem um limite de escrita baixo quando comparado com a mem\u00f3ria vol\u00e1til (RAM), a informa\u00e7\u00e3o dos cart\u00f5es apenas \u00e9 alterada quando acontece alguma altera\u00e7\u00e3o digna de registo (remo\u00e7\u00e3o ou adi\u00e7\u00e3o). Para fazer as compara\u00e7\u00f5es entre as IDs recebidas e as armazenadas \u00e9 utilizada uma c\u00f3pia da informa\u00e7\u00e3o dos cart\u00f5es que se encontra na RAM.\n3.5.2.\tActua\u00e7\u00e3o na viatura\nNo diagrama de estados da Figura 29 est\u00e3o representados os tipos de actua\u00e7\u00e3o que foram implementados, bem como em que situa\u00e7\u00f5es s\u00e3o utilizados.\nO sistema verifica constantemente se h\u00e1 sess\u00f5es iniciadas (Figura 29). Se houver significa que o carro n\u00e3o est\u00e1 bloqueado e que tamb\u00e9m n\u00e3o \u00e9 para bloquear, uma vez que um cart\u00e3o v\u00e1lido est\u00e1 no raio de alcance e tem sess\u00e3o iniciada no m\u00f3dulo do carro.\nSe n\u00e3o houver, existem tr\u00eas op\u00e7\u00f5es distintas de actua\u00e7\u00e3o.\nAs linhas a tracejado representam as hip\u00f3teses poss\u00edveis, das quais apenas uma estar\u00e1 activa num determinado sistema.\nFigura 29 - Diagrama de estados do sistema gestor do bloqueio do carro; A verde est\u00e1 destacado o estado de partida\nO m\u00f3dulo do carro est\u00e1 constantemente a medir dist\u00e2ncia, tempo ou a actividade do aceler\u00f3metro inclu\u00eddo, actuando quando um evento pr\u00e9-definido acontecer. O tipo de eventos a que o carro responde ser\u00e1 uma op\u00e7\u00e3o pr\u00e9-montagem, o que significa que cada sistema apenas actuar\u00e1 de um dos modos mencionados de seguida, e que essa op\u00e7\u00e3o ser\u00e1 feita no hardware.\nPor exemplo, ou se desliga o carro ap\u00f3s a dist\u00e2ncia pretendida ou ap\u00f3s um certo tempo, n\u00e3o os dois ao mesmo tempo. No entanto, para evitar que o carro pare imediatamente ap\u00f3s ter sido detectado movimento, \u00e9 utilizado o mesmo temporizador da vers\u00e3o apenas com base no tempo para contar o tempo a partir da detec\u00e7\u00e3o de movimento, esta \u00e9 a \u00fanica ocasi\u00e3o em que s\u00e3o utilizados dois m\u00e9todos em simult\u00e2neo.\nCada linha a tracejado representa umas das hip\u00f3teses para decidir quando desactivar o carro.\n\u2022\tPor dist\u00e2ncia - \u00c9 utilizado o sinal de ABS para medir dist\u00e2ncias, o que significa que nem todos os carros poder\u00e3o implementar esta forma de actua\u00e7\u00e3o;\n\u2022\tPor tempo - O CPU do m\u00f3dulo do carro conta o tempo passado ap\u00f3s o fecho da \u00faltima sess\u00e3o, bloqueando a viatura no final do tempo pr\u00e9-estabelecido (2 minutos); A contagem dos tempos \u00e9 realizada apenas quando a viatura estiver em funcionamento; Caso o condutor desligue a mesma, a contagem continuar\u00e1 assim que esta seja ligada novamente.\n\u2022\tPor movimento e tempo - O aceler\u00f3metro inclu\u00eddo no m\u00f3dulo do carro (caso seja requerido para o funionamento) permite determinar quando o ve\u00edculo se come\u00e7ou a mover ap\u00f3s o fim da \u00faltima sess\u00e3o iniciada, altura em que se come\u00e7a a contar o tempo para o bloqueio da viatura (2 minutos).\nIsto significa que o caso da actua\u00e7\u00e3o por dist\u00e2ncia, o carro parar\u00e1 ap\u00f3s uma dist\u00e2ncia program\u00e1vel, fun\u00e7\u00e3o do n\u00famero de impulsos de ABS por segundo (directamente relacionados com a dimens\u00e3o do pneu e com o carro em quest\u00e3o) mais no m\u00e1ximo 1 minuto, se tiver sido prolongada ou iniciada uma sess\u00e3o no momento antes do furto da viatura.\nNo caso da actua\u00e7\u00e3o por tempo passa-se a mesma coisa, o carro parar\u00e1 no m\u00e1ximo 3 minutos depois de se ter deixado de detectar um cart\u00e3o.\nO m\u00e9todo mais dif\u00edcil de implementar numa viatura ser\u00e1 o do aceler\u00f3metro, uma vez que implica que a sess\u00e3o termine e que haja uma acelera\u00e7\u00e3o para que o sistema actue, algo que eventualmente acontecer\u00e1 numa travagem ou num arranque mais r\u00e1pido, mas que n\u00e3o pode ser previsto exactamente quando ir\u00e1 acontecer.\nEste m\u00e9todo ter\u00e1 mais uso na adapta\u00e7\u00e3o deste sistema \u00e0 protec\u00e7\u00e3o de outros objectos como malas, que ser\u00e3o brevemente abordados na sec\u00e7\u00e3o de outras utiliza\u00e7\u00f5es para o sistema, mais \u00e0 frente.\n3.5.3.\tObten\u00e7\u00e3o do sinal de ABS\nUma vez que existem dois tipos de sensores de ABS, foi necess\u00e1rio desenvolver acondicionadores de sinal para ambos.\nNo caso dos sensores passivos (sinal gerado \u00e9 anal\u00f3gico, sinusoidal e possui arcadas negativas e positivas de igual amplitude) o circuito utilizado para obter o sinal digital para ser medido no CPU foi o da Figura 30.\nFigura 30 - Circuito utilizado para obter sinal de ABS de sensor passivo\nA sa\u00edda do opamp ser\u00e1 saturada positiva nas arcadas positivas e zero nas arcadas negativas, dando ao CPU a possibilidade de obter o n\u00famero de impulsos. \u00c9 simples perceber agora porque \u00e9 que a amplitude do sinal sinusoidal n\u00e3o \u00e9 decisiva no bom funcionamento do circuito de detec\u00e7\u00e3o. O opamp saturar\u00e1 para um dos lados assim que uma das entradas se torne maior do que a outra, n\u00e3o precisando este valor de ser muito elevado para que tal aconte\u00e7a.\nPara os sensores activos (sinal entre 0,97V e 1,29V, no m\u00ednimo), o sinal j\u00e1 \u00e9 digital, s\u00f3 lhe falta um pouco de ganho para ficar dentro da escala que o CPU utiliza (cada impulso \u00e9 contado quando o sinal passar de 1,65V, que \u00e9 metade da tens\u00e3o de alimenta\u00e7\u00e3o). Optei por um ganho perto de 1,5, que colocar\u00e1 o m\u00ednimo no m\u00e1ximo em 1,455V e o m\u00e1ximo no m\u00ednimo em 1,935V. O circuito utilizado foi o da Figura 31.\nFigura 31 - Circuito utilizado para obter smal de ABS de sensor activo\nA sa\u00edda do opamp ser\u00e1 uma onda id\u00eantica \u00e0 de entrada, amplificada do seguinte valor de ganho. F^=1 + 22fc = 1457/7\nvSensor\nAntes da instala\u00e7\u00e3o do sistema ser\u00e1 necess\u00e1rio saber que tipo de sensor \u00e9 utilizado no carro e ainda fazer uma estimativa para o c\u00e1lculo do n\u00famero de impulsos por volta, valor que ter\u00e1 de ser programado no m\u00f3dulo do carro para ser utilizado posteriormente no c\u00e1lculo da dist\u00e2ncia percorrida.\nA programa\u00e7\u00e3o desse valor \u00e9 feita na constante ABS_MAX que se encontra no ficheiro abs.h contido na pasta \u201cMicrochip/Include\u201d do c\u00f3digo criado durante este projecto:\n#ifndefABS_MAX\n#define ABSMAX NUMERO\n#endif\n3.5.4.\tO aceler\u00f3metro\nO aceler\u00f3metro \u00e9 utilizado para detectar o movimento da viatura.\n3.5.4.1.\tEscolha do aceler\u00f3metro\nAs for\u00e7as a que est\u00e1 submetido uma viatura comum raramente excedem 1-2g numa utiliza\u00e7\u00e3o normal, podem surgir for\u00e7as maiores em travagens muito fortes em viaturas com pneus de alta gama e suspens\u00e3o desportiva, mas isso raramente acontece numa estrada p\u00fablica.\nPor isso foi escolhido um aceler\u00f3metro com uma gama de medi\u00e7\u00e3o de +/-2g, da Analog Devices, uma unidade ADXL327, representada na Figura 32, pass\u00edvel de ser alimentado a 3,3V e com sa\u00eddas anal\u00f3gias para medi\u00e7\u00e3o com a ADC do CPU.\nu u\n15\t14\nADXL327\nXOUT\nNC\nYo\u00fcT\nNC\nFigura 32 - Aceler\u00f3metro utilizado (ADXL327)\nQuando n\u00e3o houver nenhuma sess\u00e3o iniciada, o m\u00f3dulo do carro faz uma medi\u00e7\u00e3o inicial da posi\u00e7\u00e3o dos tr\u00eas eixos do aceler\u00f3metro, servindo esses valores de refer\u00eancia para as medi\u00e7\u00f5es seguintes.\nAp\u00f3s essa medida inicial, o sistema continua a efectuar medidas sucessivas at\u00e9 detectar uma varia\u00e7\u00e3o em qualquer dos eixos.\nEssa varia\u00e7\u00e3o foi configurada para assinalar varia\u00e7\u00f5es de % de g (% da acelera\u00e7\u00e3o da gravidade, 0,25g), um valor que foi considerado adequado tendo em conta a acelera\u00e7\u00e3o normal de uma viatura.\nPor exemplo, um carro que acelere at\u00e9 aos 100Km/h (27,7m/s) em 10 segundos, acelera a uma for\u00e7a que \u00e9 dada pela equa\u00e7\u00e3o seguinte:\n7(m/s)\nacelera\u00e7\u00e3o =-----\n9\nZ1J\n10\"\t2,77\t9\n----=------= 0,28a, com lg = 9,8m/s2\n9,8\t9,8\ty y\t'\nNa travagem as for\u00e7as a que o carro est\u00e1 submetido s\u00e3o ainda maiores, pelo que n\u00e3o dever\u00e1 haver problemas na detec\u00e7\u00e3o que se espera efectuar.\nEsses 0,25g, com a ACD de 10 bits do CPU configurada com a maior escala (0-3,3V, 0-1.024) e com o aceler\u00f3metro a fazer corresponder 1g com 420mv, correspondem a cerca 33 divis\u00f5es da mesma, como justificado nas express\u00f5es seguintes.\n3,2mV por divis\u00e3o da escala da ADC\n420\t1\n\u2014\u2014 = 105m7 para \u2014 g\n105\nyy = 32,8 divis\u00f5es da escala da ADC\nAp\u00f3s detec\u00e7\u00e3o de movimento (Figura 29), come\u00e7a a contagem dos 2 minutos para o bloqueio do carro, e a partir daqui o sistema comporta-se como se estivesse a funcionar apenas com tempo, o que significa que pode passar para o estado de sess\u00e3o inicada se algum cart\u00e3o v\u00e1lido for detectado.\n3.5.5.\tRegisto de acessos\nO m\u00f3dulo do carro possui uma EEPROM externa ao CPU com 1Mbit (128KBytes) de capacidade. Esta mem\u00f3ria \u00e9 utilizada pelo CPU via SPI e ser\u00e1 utilizada para armazenar o registo de acessos ao carro.\nFigura 33 - Diagrama de estados do registador de acessos; A verde escuro est\u00e1 destacado o estado de partida\nEm cada detec\u00e7\u00e3o validada de cart\u00e3o (com correspond\u00eancia na base de dados de cart\u00f5es) que o m\u00f3dulo do carro fa\u00e7a, \u00e9 sempre feita uma verifica\u00e7\u00e3o de exist\u00eancia de sess\u00e3o iniciada anteriormente por parte desse cart\u00e3o.\nQuando um cart\u00e3o \u00e9 detectado, caso exista uma sess\u00e3o j\u00e1 aberta por esse cart\u00e3o, a mesma \u00e9 estendida por mais 1 minuto, sem ser feito um novo registo de acesso. Este detalhe permitiu poupar imenso a mem\u00f3ria externa e criar uma no\u00e7\u00e3o de verdadeira sess\u00e3o. Caso n\u00e3o exista sess\u00e3o aberta desse cart\u00e3o, \u00e9 adicionado um novo registo de acesso com a marca de entrada.\nSempre que uma sess\u00e3o termina ou \u00e9 iniciada, \u00e9 adicionado um registo de acessos na mem\u00f3ria externa. Este registo inclui a data e hora, o n\u00famero do cart\u00e3o envolvido e ainda o tipo de registo. Cada registo ocupa 32 bits na mem\u00f3ria externa, tendo sido dividido da seguinte forma.\n\u25c4---------------------------------------------------------------------32 bits-----------------------------------------------------------------\u25ba\n------------Registol----------------------------Registo2----------------------------Registo3----------------------------Registo4------------\u25ba\n\u25c4-------#\t\u25c4---------Dia\n\u25ba Mes&lt;\nAno\n\u25ba\tHora\t<\n\u25c4Ek\nMinuto\nFigura 34 - Formato de um registo de acesso guardado na mem\u00f3ria externa\nSignificado dos campos:\n\u2022\t# (4 bits) - N\u00famero do cart\u00e3o a que se refere o registo;\n\u2022\tDia (5 bits), M\u00eas (4 bits), Ano (7 bits), Hora (5 bits) e Minuto (6 bits) - Data e hora de registo;\n\u2022\tE (1 bit) - Tipo de registo (entrada ou sa\u00edda).\nOs valores de cada campo podem ser obtidos realizando opera\u00e7\u00f5es elementares sobre os 32 bits. No entanto, a comunica\u00e7\u00e3o com a mem\u00f3ria externa processa-se Byte a Byte, o que significa que \u00e9 preciso ler os 32 bits em 4 etapas e juntar os dados depois.\n\u2022\t# = Regis to 1 >> 4\n\u2022\td i a = ( R e g is t o 1 &amp;. 0 x0 F)&lt;&lt;1 | ( R e g is to 2 >> 7)\n\u2022\tm e s = ( R e g i s t o 2 &amp;. 0 x 7 8) >> 3\n\u2022\tano = ( R e g is to 2 &amp;. 0x 0 7 )&lt;&lt;4 |\t( R e g is t o 3\t>> 4)\n\u2022\tFo r a = ( R e g is t o 3 &amp;. 0x 0 F)&lt;&lt;1\t| ( R eg is to 4\t>>\t7 )\n\u2022\tmi nu to = ( R e g is to 4 &amp;. 0x 7F) >>\t1\n\u2022\ttip o = R e g is to 4 &amp;. 0x 0 1\nO processo de grava\u00e7\u00e3o de um registo \u00e9 precisamente o inverso, pegar nos campos e separ\u00e1-los devidamente nos 4 registos prontos para grava\u00e7\u00e3o.\n\u2022\tR e g is to 1\t= ( #&lt;&lt;4) | ( d ia >> 1)\n\u2022\tR e g is to 2\t= ( d i a&lt;&lt;7) | (mes&lt;&lt;3 ) |\t(\tano >>\t4)\n\u2022\tR e g i s t o 3\t= ( an o&lt;&lt;4) | ( F o r a >> 1 )\n\u2022\tR e g i s t o4\t= ( F or a&lt;&lt;7 ) | (m inu t o&lt;<\t1 )\t|\tt i p\to\nCom cada registo a ocupar 32 bits, significa que ser\u00e1 poss\u00edvel armazenar at\u00e9 32.768 registos de acessos nos 131.072 Bytes da EEPROM externa, um n\u00famero bastante satisfat\u00f3rio.\n3.5.6.\tGest\u00e3o de sess\u00f5es em detalhe\nTimer tem um per\u00edodo T= 0,13 segundos\nCart\u00e3o 3 inicia\nsess\u00e3o\nIn\u00edcio, sem sess\u00f5es iniciadas\n9 posi\u00e7\u00f5es, uma para cada cart\u00e3o\nFigura 35 - Gest\u00e3o de sess\u00f5es em detalhe com exemplo de sess\u00e3o do cart\u00e3o 3\nTimeout0\tTimeout1\tTimeout2\tTimeout3\tTimeout4\tTimeout5\tTimeout6\tTimeout7\tTimeout8\n0\t0\t0\t0\t0\t0\t0\t0\t0\nFigura 36 - Vector de sess\u00e3o no estado inicial (sem sess\u00f5es iniciadas)\nA gest\u00e3o de sess\u00f5es foi realizada recorrendo a um vector com 9 posi\u00e7\u00f5es (esquematizado na imagem de cima e na Figura 35) colocado na RAM do CPU, uma para cada cart\u00e3o que \u00e9 poss\u00edvel instalar. O valor por defeito de cada elemento desse vector \u00e9 0 (zero), valor esse que \u00e9 tamb\u00e9m utilizado para indicar que ainda n\u00e3o foi iniciada nenhuma sess\u00e3o.\nTimeoutO Timeoutl Timeout2 Timeout3\t\t\tTimeout4\tTimeout5\tTimeout6\tTimeout7\tTimeout8\n0 1\t0\t0\t0\t0\t0\t0\t0\nFigura 37 - Vector de sess\u00e3o imediatamente ap\u00f3s detec\u00e7\u00e3o do cart\u00e3o 2\nAssim que o cart\u00e3o seja detectado a primeira vez (sem ter sess\u00e3o iniciada), o valor do elemento correspondente \u00e0 posi\u00e7\u00e3o onde a ID desse cart\u00e3o est\u00e1 guardada em mem\u00f3ria \u00e9 incrementado.\nA partir do momento em que esse valor deixa de ser 0 (zero), o timer 3 do CPU est\u00e1 programado para o incrementar e verificar o seu valor em cada overflow, na sua fun\u00e7\u00e3o de interrupt.\nCaso o mesmo comando seja detectado novamente, o valor da posi\u00e7\u00e3o dedicada a esse comando no vector de sess\u00e3o ser\u00e1 colocado a 1, indicando que a sess\u00e3o acabou de ser reiniciada.\nSe passado o minutos definido o comando n\u00e3o for detectado novamente, a sess\u00e3o \u00e9 terminada e \u00e9 guardado o registo na mem\u00f3ria externa.\nEssa detec\u00e7\u00e3o \u00e9 feita recorrendo a uma constante (TIMEOUT_MAX) com o n\u00famero de vezes que o timer 3 tem de fazer overflow para corresponder a 1 minuto de contagem.\nTimeoutO\tTimeoutl\tTimeout2\tTimeout3\tTimeout4\tTimeout5\tTimeout6\tTimeout7\tTimeout8\n0\t916\t0\t0\t0\t0\t0\t0\t0\nFigura 38 - Vector de sess\u00e3o imediatamente antes do final de sess\u00e3o do cart\u00e3o 2\nO timer 3 conta at\u00e9 65.536 (16 bits) e foi configurado com um prescaller de 8, o que lhe d\u00e1 um per\u00edodo de rel\u00f3gio efectivo de:\nT = 16Mhz = 7f\u00c3H~z = 0,1315\n4 x 8 x 216\nO que significa que para obter uma contagem de tempo de 1 minuto \u00e9 preciso que o timer conte at\u00e9 ao final da sua escala o seguinte n\u00famero de vezes:\n2 x 60\nTIMEOUT MAX =----------= 458\n0,131\nPara assinalar o final de sess\u00e3o de um cart\u00e3o, a posi\u00e7\u00e3o do vector de sess\u00e3o dedicada a esse cart\u00e3o \u00e9 colocada a 0 (zero), tal como est\u00e1 indicado na Figura 25, e o timer 3 deixa de incrementar esse valor.\n3.6.\tO m\u00f3dulo de programa\u00e7\u00e3o\nO m\u00f3dulo de programa\u00e7\u00e3o permite configurar o m\u00f3dulo do carro de um modo simples e pr\u00e1tico, sem ser preciso mexer ou ligar alguma coisa \u00e0 viatura.\nEste m\u00f3dulo faz a ponte sem fios entre o software de programa\u00e7\u00e3o desenvolvido e o m\u00f3dulo do carro, funcionando como um interpretador de comandos por porta de s\u00e9rie do lado do software e como receptor de respostas do lado do m\u00f3dulo do carro.\nEste m\u00f3dulo \u00e9 constitu\u00eddo pelos seguintes componentes:\n\u2022\tCPU;\n\u2022\tM\u00f3dulo de comunica\u00e7\u00e3o ZigBee;\ne\nConversor USB-RS232 (USB-S\u00e9rie) com regulador de 3,3V para alimenta\u00e7\u00e3o do circuito.\nPara tornar o m\u00f3dulo o mais simples poss\u00edvel, foi escolhido um conversor USB-S\u00e9rie capaz de alimentar o circuito, evitando que seja necess\u00e1ria alimenta\u00e7\u00e3o externa extra.\nAs funcionalidades do m\u00f3dulo de programa\u00e7\u00e3o s\u00e3o as seguintes:\n\u2022\tAcertar a hora do m\u00f3dulo do carro;\n\u2022\tAdicionar cart\u00f5es;\n\u2022\tRemover cart\u00f5es;\n\u2022\tFor\u00e7ar bloqueio da viatura;\n\u2022\tDesbloquear viatura;\n\u2022\tConsultar registo de acessos;\n\u2022\tApagar registo de acessos.\nTodas estas fun\u00e7\u00f5es est\u00e3o estritamente ligadas ao software desenvolvido para Windows, pelo que ser\u00e3o descritas na sec\u00e7\u00e3o 3.7.\nO esquema el\u00e9ctrico e a PCB deste componente podem ser encontrados no ap\u00eandice III.C.3.\n3.7.\tA aplica\u00e7\u00e3o para Windows\nPara simplificar o processo de configura\u00e7\u00e3o do m\u00f3dulo do carro, foi desenvolvida uma aplica\u00e7\u00e3o para o sistema operativo Windows em Visual Basic. Esta aplica\u00e7\u00e3o comunica com o m\u00f3dulo de programa\u00e7\u00e3o via RS232 e este fica encarregue de enviar os comandos de programa\u00e7\u00e3o e receber as respostas do carro, comunicando posteriormente o que recebeu ao software.\nAs funcionalidades do software est\u00e3o directamente ligadas \u00e0s funcionalidades do m\u00f3dulo de programa\u00e7\u00e3o, sendo exactamente as mesmas, j\u00e1 descritas na sec\u00e7\u00e3o 3.6.\n3.7.1.\tGuia de utiliza\u00e7\u00e3o\nDepois de instalada a aplica\u00e7\u00e3o no computador, ao execut\u00e1-la surge o ecr\u00e3 da Figura 39.\nFigura 39 - Janela principal da aplica\u00e7\u00e3o\nDepois de ligado o m\u00f3dulo de programa\u00e7\u00e3o ao PC, \u00e9 necess\u00e1rio clicar em Ficheiro->Iniciar, como se pode observar na Figura 40.\nFigura 40 - Iniciar o trabalho na aplica\u00e7\u00e3o\nDe seguida \u00e9 pedido que se escolha um ficheiro de log (Figura 41), onde ficar\u00e1 registada toda a actividade da aplica\u00e7\u00e3o, para mais tarde poder ser revista caso seja necess\u00e1rio. O ficheiro de logo tem de ser um ficheiro de texto, o conte\u00fado gerado durante a utiliza\u00e7\u00e3o do programa ser\u00e1 anexado a qualquer outro conte\u00fado que o ficheiro j\u00e1 tenha.\nFigura 41 - Escolher ficheiro de log para a aplica\u00e7\u00e3o\nAp\u00f3s o per\u00edodo inicial de configura\u00e7\u00e3o, a aplica\u00e7\u00e3o estar\u00e1 pronta para come\u00e7ar a funcionar, sendo este (Figura 42) o primeiro ecr\u00e3 que o utilizador encontrar\u00e1 em caso de sucesso dos testes de conectividade iniciais, tanto com o m\u00f3dulo de programa\u00e7\u00e3o como com o m\u00f3dulo do carro.\nCaso algum destes testes falhe, ser\u00e1 pedido ao utilizador que tome medidas para corrigir o erro, sendo poss\u00edvel repeti-los a qualquer altura na aplica\u00e7\u00e3o.\nFigura 42 - Ecr\u00e3 inicial da aplica\u00e7\u00e3o depois de testes de conectividade\nO passo seguinte \u00e9 adicionar um cart\u00e3o ao m\u00f3dulo do carro, para isso basta carregar no bot\u00e3o adicionar ou na barra de menu em Cart\u00f5es->Adicionar. Surge no ecr\u00e3 uma nova janela para o utilizador introduzir a ID inscrita no cart\u00e3o (Figura 43). Esta ID ser\u00e1 a ID que identificar\u00e1 o cart\u00e3o perante o carro e ser\u00e1 \u00fanica de cada cart\u00e3o. A introdu\u00e7\u00e3o ter\u00e1 de ser feita com o teclado, da\u00ed a necessidade de os caracteres utilizados nestas IDs serem acess\u00edveis deste modo.\nFigura 43 - Adicionar cart\u00e3o\nAp\u00f3s ter introduzido a ID do cart\u00e3o (a aplica\u00e7\u00e3o corrige automaticamente as letras min\u00fasculas, a ID \u00e9 constitu\u00edda apenas por letras mai\u00fasculas e n\u00fameros), quando carregar no bot\u00e3o adicionar a opera\u00e7\u00e3o\nde envio para o carro ter\u00e1 lugar. Caso a opera\u00e7\u00e3o seja bem sucedida, o utilizador ver\u00e1 o ecr\u00e3 da Figura 44. Neste caso adicionei o cart\u00e3o com a ID \u2018ABCDEFGH\u2019, aquele que utilizei para testes. Destacar o facto de o \u00faltimo Byte da ID introduzida ser uma das que termina com um bit a zero, estando dentro do estipulado.\nFigura 44 - Cart\u00e3o adicionado com sucesso\nNesta altura o cart\u00e3o ainda n\u00e3o ter\u00e1 nenhum efeito sobre o carro (a n\u00e3o ser que o m\u00e9todo de actua\u00e7\u00e3o escolhido tenha sido o tempo, nesse caso o cart\u00e3o desbloquear\u00e1 a viatura sem nenhuma ac\u00e7\u00e3o do utilizador e o passo seguinte \u00e9 redundante), uma vez que este se encontra bloqueado, como \u00e9 indicado nas figuras anteriores pela bola vermelha no canto superior direito. \u00c9 portanto necess\u00e1rio, caso seja essa a vontade do utilizador, desbloquear o carro.\nFigura 45 - Carro desbloqueado com sucesso\nO carro encontra-se agora no estado de espera, sem nenhuma sess\u00e3o iniciada, o seu estado seguinte depende do tipo de sistema que estiver instalado, com aceler\u00f3metro, ABS ou tempo. Se o sistema apenas actua baseado no tempo, se dentro de 2 minutos n\u00e3o for detectado um cart\u00e3o o carro volta a ser bloqueado, sendo desbloqueado quando detectar novamente um cart\u00e3o.\nDe seguida conv\u00e9m acertar a hora do m\u00f3dulo do carro, s\u00f3 para garantir que os registos de acesso ficam com a hora correcta. Essa opera\u00e7\u00e3o pode ser executada escolhendo a op\u00e7\u00e3o respectiva no menu Carro->Acertar Hora (Figura 46).\nFigura 46 - Acertar hora do m\u00f3dulo do carro\nEst\u00e1 tudo pronto a funcionar, o carro come\u00e7ar\u00e1 a registar os acessos como descrito no ponto 3.5.5 e a gerir as sess\u00f5es de acordo com o definido no ponto 3.5.6. Os registos de acessos podem ser consultados ou apagados clicando no menu respectivo na barra de menu.\nNa est\u00e1 um exemplo de um registo de acessos com 3 acessos registados para o cart\u00e3o na posi\u00e7\u00e3o 1, uma sess\u00e3o de 1 minuto j\u00e1 terminada e outra sess\u00e3o com in\u00edcio mas ainda sem fim.\nFigura 47 - Exemplo de registo de acessos\n3.8.\tInterac\u00e7\u00e3o entre o m\u00f3dulo do carro, o m\u00f3dulo de programa\u00e7\u00e3o e o software\nComo mencionado anteriormente, o m\u00f3dulo de programa\u00e7\u00e3o e o software comunicam atrav\u00e9s de uma porta de s\u00e9rie, e o m\u00f3dulo de programa\u00e7\u00e3o envia e recebe os dados para o carro via ZigBee.\nDe um modo simples, para um comando que requeira um ACK (acknowledge, resposta positiva), a comunica\u00e7\u00e3o processa-se do seguinte modo:\nCarro\nAplica\u00e7\u00e3o\nProgramador\n-----exemplo---------------1 T\nReceber Comando\nEnviar Resposta\n-------ACK--------------1\nFigura 48 - Exemplo de comunica\u00e7\u00e3o entre aplica\u00e7\u00e3o de programa\u00e7\u00e3o e carro\n\nDe notar dois factores importantes:\n\u2022\tOs comandos trocados entre os v\u00e1rios m\u00f3dulos s\u00e3o case-sensitive, o que significa que \u00e9 diferente enviar um \u2018a\u2019 ou um \u2018A\u2019, por exemplo;\n\u2022\tAs linhas a tracejado indicam comunica\u00e7\u00e3o sem fios via ZigBee.\nOutra conven\u00e7\u00e3o estabelecida durante a descri\u00e7\u00e3o dos processos de comunica\u00e7\u00e3o foi a seguinte:\n\u2022\tACK - Resposta \u00e9 um \u2018s\u2019;\n\u2022\tNACK - Resposta \u00e9 um \u2018n\u2019.\nSempre que o m\u00f3dulo \u00e0 espera de resposta receba um \u2018n\u2019 significa que ocorreu um erro. Em ambos os casos e na maioria das situa\u00e7\u00f5es, foi ainda estabelecido que a seguir ao s\u00edmbolo de ACK ou NACK vir\u00e1 o comando que gerou essa resposta, na mesma transmiss\u00e3o, permitindo assim confirmar o comando que est\u00e1 com problemas. Esta situa\u00e7\u00e3o ficar\u00e1 mais clara de seguida, quando os comandos poss\u00edveis forem explicados em detalhe.\nUma lista simplificada de todos os comandos que foram implementados na aplica\u00e7\u00e3o e que s\u00e3o descritos de seguida pode ser encontrada no Ap\u00eandice III.B.\n3.8.1.\tTeste da conectividade com o m\u00f3dulo de programa\u00e7\u00e3o\nEis o primeiro e mais simples exemplo real de um comando implementado na aplica\u00e7\u00e3o e no programador. Quando o utilizador carregar no bot\u00e3o para testar a conectividade com o m\u00f3dulo de programa\u00e7\u00e3o, a aplica\u00e7\u00e3o envia para a porta de s\u00e9rie o caracter \u2018t\u2019 e espera 2 segundos por uma resposta.\n\nAplica\u00e7\u00e3o\nProgramador\nSe essa resposta vier (Figura 50), ser\u00e1 certamente positiva (o programador n\u00e3o vai responder a dizer que n\u00e3o est\u00e1 contact\u00e1vel, como \u00e9 \u00f3bvio). Se a resposta n\u00e3o vier (Figura 49), a aplica\u00e7\u00e3o assume que o programador n\u00e3o est\u00e1 contact\u00e1vel e informa o utilizador.\n\nAplica\u00e7\u00e3o\nProgramador\nFigura 50 - Teste de conectividade com o programador (sucesso)\nA resposta est\u00e1 no formato discutido anteriormente e pode dividir-se em duas sub-respostas:\n\u2022\t\u2018s\u2019 - A resposta foi positiva (ACK);\n\u2022\t\u2018t\u2019 - Ao comando de testar conectividade com o programador.\nA principal causa de uma poss\u00edvel falha na resposta \u00e9 uma falha na porta de s\u00e9rie, seja por se ter escolhido a porta errada no software ou por o m\u00f3dulo n\u00e3o estar ligado convenientemente ao computador.\n3.8.2.\tTeste da conectividade com o carro\nPassado o teste de conectividade com o programador, resta testar a conectividade com o m\u00f3dulo do carro. Esta opera\u00e7\u00e3o j\u00e1 envolve uma resposta do m\u00f3dulo do carro, o que permite testar se o carro est\u00e1 ou n\u00e3o no raio de alcance do programador.\nQuando o utilizador carregar no bot\u00e3o para testar a conectividade com o carro, a aplica\u00e7\u00e3o envia para a porta de s\u00e9rie o caracter \u2018c\u2019, que \u00e9 reencaminhado pela liga\u00e7\u00e3o sem fios para o m\u00f3dulo do carro. A aplica\u00e7\u00e3o espera de seguida 2 segundos por uma resposta.\nCarro\nAplica\u00e7\u00e3o\nProgramador\nEnviar\t\tw.\tReceber Comando\nComando\t\t\tReencaminhar\n\u2014 \u2014\\\nV\nN\u00e3o Recebe\nComando\n\nX\nFigura 51 - Teste de conectividade com o carro (falha)\nSe n\u00e3o houver resposta (Figura 51), o carro estar\u00e1 ou fora de alcance ou com algum problema, n\u00e3o sendo poss\u00edvel distinguir entre as duas possibilidades sem analisar o m\u00f3dulo do carro.\nFigura 52 - Teste de conectividade com o carro (sucesso)\nMais uma vez, a resposta estr\u00e1 no formato escolhido:\n\u2022\t\u2018s\u2019 - A resposta foi positiva (ACK);\n\u2022\t\u2018c\u2019 - Ao teste de conectividade com o m\u00f3dulo do carro.\nO carro responde afirmativamente ao pedido do programador (Figura 52) e este reencaminha essa resposta para a aplica\u00e7\u00e3o, que notifica o utilizador.\n3.8.3.\tAdicionar um cart\u00e3o \u00e0 base de dados do m\u00f3dulo do carro\nDepois de ambos os testes anteriores terem sido completados com sucesso, a aplica\u00e7\u00e3o passa a permitir interagir com a informa\u00e7\u00e3o que est\u00e1 armazenada no m\u00f3dulo do carro.\nO passo seguinte numa primeira instala\u00e7\u00e3o do sistema \u00e9 adicionar um cart\u00e3o \u00e0 base de dados, para que este possa servir como desbloqueador para o carro, evitando que este se bloqueie enquanto o possuidor do cart\u00e3o estiver por perto.\nPara adicionar um cart\u00e3o o utilizador escolhe a op\u00e7\u00e3o para esse efeito na barra de menu da aplica\u00e7\u00e3o, que abre uma nova janela de seguida. Nessa janela o utilizador insere a ID que consta no cart\u00e3o e clica em adicionar, dando-se in\u00edcio ao processo de adi\u00e7\u00e3o do cart\u00e3o.\nA aplica\u00e7\u00e3o envia para o programador o comando \u2018axxxxxxxx\u2019, em que \u2018xxxxxxxx\u2019 representa os 8 Bytes da ID do cart\u00e3o, que comunica ao carro a sua inten\u00e7\u00e3o de adicionar um novo cart\u00e3o.\nCarro\nAplica\u00e7\u00e3o\nProgramador\naxxxxxxxx------------1\n*\nReceber Comando\nEnviar Resposta\n\u2014na-------1\nFigura 53 - Adicionar cart\u00e3o (falha)\nA aplica\u00e7\u00e3o mant\u00e9m em mem\u00f3ria o n\u00famero de cart\u00f5es instalados e as suas IDs e n\u00e3o permite que seja adicionado um novo cart\u00e3o quando o n\u00famero de cart\u00f5es tiver atingido o m\u00e1ximo estipulado (9), mas se por algum motivo o utilizador tentar adicionar um d\u00e9cimo cart\u00e3o, a resposta do m\u00f3dulo do carro ser\u00e1 um NACK (Figura 53), e o cart\u00e3o n\u00e3o ser\u00e1 adicionado.\naxxxxxxxx------------1\n\u00a5\nReceber Comando\nEnviar Resposta\n\u2014sa\nFigura 54 - Adicionar cart\u00e3o (sucesso)\nSe a resposta for positiva (Figura 54), tanto a aplica\u00e7\u00e3o como o m\u00f3dulo do carro actualizam a base de dados de cart\u00f5es e o n\u00famero de cart\u00f5es \u00e9 incrementado.\n3.8.4.\tObter o n\u00famero de cart\u00f5es na base de dados do m\u00f3dulo do carro\nSempre que se inicia a aplica\u00e7\u00e3o, e depois de testar a conectividade com ambos os m\u00f3dulos, \u00e9 necess\u00e1rio saber quantos cart\u00f5es est\u00e3o guardados na mem\u00f3ria do m\u00f3dulo do carro, por uma quest\u00e3o de sincroniza\u00e7\u00e3o.\nQuando o utilizador escolhe a op\u00e7\u00e3o de obter n\u00famero de cart\u00f5es na aplica\u00e7\u00e3o, esta inicia a comunica\u00e7\u00e3o com o programador enviando o caracter \u2018b\u2019. O programador reencaminha a instru\u00e7\u00e3o para o carro via ZigBee e aguarda a resposta do carro. A aplica\u00e7\u00e3o espera durante 2 segundos antes de assumir que alguma coisa correu mal e mostrar um erro.\nEm caso de sucesso (Figura 55), o carro responde com o comando \u2018b#\u2019, em que \u2018#\u2019 \u00e9 o n\u00famero de cart\u00f5es instalados, um n\u00famero entre 0 e 9. Neste caso n\u00e3o faz sentido haver ACK uma vez que \u00e9 exigida uma resposta espec\u00edfica por parte do carro, o ACK pode ser substitu\u00eddo pela verifica\u00e7\u00e3o da conformidade da resposta recebida com o que se esperava receber.\nAplica\u00e7\u00e3o\tProgramador\tCarro\n\nFigura 55 - Obter n\u00famero de cart\u00f5es na base de dados do carro (sucesso)\nCaso algo aconte\u00e7a que impossibilite o m\u00f3dulo do carro de enviar o n\u00famero de cart\u00f5es, este responder\u00e1 com o NACK estabelecido (Figura 56), \u2018nb\u2019, que identifica que ocorreu um erro no processamento da instru\u00e7\u00e3o \u2018b\u2019.\nFigura 56 - Obter n\u00famero de cart\u00f5es na base de dados do carro (falha)\n3.8.5.\tRemover um cart\u00e3o da base de dados do m\u00f3dulo do carro\nRemover um cart\u00e3o \u00e9 um processo id\u00eantico ao de adicionar, s\u00f3 que em vez de enviar para o carro a string com a ID do cart\u00e3o a remover, envia-se o n\u00famero de identifica\u00e7\u00e3o do cart\u00e3o de entre os 9 poss\u00edveis. Uma vez que as bases de dados do carro e da aplica\u00e7\u00e3o s\u00e3o sincronizadas no arranque, os cart\u00f5es est\u00e3o nas mesmas posi\u00e7\u00f5es em ambos os dispositivos.\nA remo\u00e7\u00e3o do cart\u00e3o \u00e9 iniciada enviando para o carro o comando \u2018r#\u2019, em que \u2018r\u2019 identifica a instru\u00e7\u00e3o a executar e \u2018#\u2019 o n\u00famero do cart\u00e3o a remover. Em caso de sucesso (Figura 57) o m\u00f3dulo do carro responde com o ACK esperado.\nAp\u00f3s o envio do comando a aplica\u00e7\u00e3o aguarda 2 segundos antes de decidir que ocorreu um erro na comunica\u00e7\u00e3o e que a remo\u00e7\u00e3o n\u00e3o aconteceu com sucesso.\nCarro\n\nAplica\u00e7\u00e3o\nProgramador\nFigura 57 - Remover cart\u00e3o da base de dados do m\u00f3dulo do carro (sucesso)\ni\nReceber Comando Enviar Resposta\nsr\nCaso o n\u00famero do cart\u00e3o que se pretende remover seja inv\u00e1lido (n\u00e3o exista na base de dados), o m\u00f3dulo do carro responde com o NACK esperado (Figura 58).\nCarro\nAplica\u00e7\u00e3o\nProgramador\nFigura 58 - Remover cart\u00e3o da base de dados do m\u00f3dulo do carro (falha)\n\u2014r#\nY\nReceber Comando\nEnviar Resposta\n\u2014nr\n3.8.6.\tObter ID de um cart\u00e3o na base de dados do m\u00f3dulo do carro\nObter a ID de um cart\u00e3o em particular \u00e9 um processo id\u00eantico ao de remover um cart\u00e3o na fase de envio de instru\u00e7\u00e3o para o carro, a diferen\u00e7a est\u00e1 na altura de receber a resposta.\nTamb\u00e9m neste caso n\u00e3o \u00e9 necess\u00e1ria a recep\u00e7\u00e3o de um sinal de ACK, uma vez que a resposta do carro tem de vir num formato pr\u00e9-determinado. Em caso de sucesso (Figura 59) a resposta ser\u00e1 \u2018ixxxxxxxx\u2019 em que \u2018i\u2019 identifica que tipo de resposta \u00e9, e \u2018xxxxxxxx\u2019 \u00e9 a ID do cart\u00e3o escolhido.\nAplica\u00e7\u00e3o\nProgramador\n7\nCarro\nr\u2019\nFigura 59 - Obter ID de cart\u00e3o armazenado na base de dados do m\u00f3dulo do carro (sucesso)\nEm caso de falha (Figura 60), a resposta ser\u00e3o um NACK com o formato esperado. Mais uma vez, a aplica\u00e7\u00e3o espera 2 segundos antes de declarar a opera\u00e7\u00e3o como falhada e mostrar um erro.\nAplica\u00e7\u00e3o\tProgramador\tCarro\n\u25a0v\tr\nFigura 60 - Obter ID de cart\u00e3o armazenado na base de dados do m\u00f3dulo do carro (falha)\nA obten\u00e7\u00e3o de todos os cart\u00f5es armazenados no carro \u00e9 um processo iterativo em que o software requisita uma ID de cada vez ao carro.\n3.8.7.\tVerificar estado de bloqueio do carro\nA aplica\u00e7\u00e3o permite ainda verificar em que estado de bloqueio se encontra a viatura em qualquer instante, com um simples clicar num bot\u00e3o.\nO comando para o efeito \u00e9 \u2018de\u2019, enviado pela aplica\u00e7\u00e3o ao m\u00f3dulo programador e por este ao carro via ZigBee. Em caso de sucesso no processamento (Figura 61), a resposta ser\u00e1 ou \u2018c\u2019 (closed) ou \u2018o\u2019 (open). A aplica\u00e7\u00e3o espera 2 segundos por uma resposta do carro.\n\n-----de-----------1\n-----c/o------------'\nFigura 61 - Obter estado de bloqueio do carro (sucesso)\nV\nReceber Comando Enviar Resposta\nCaso algo corra mal do lado do m\u00f3dulo do carro (Figura 62), a resposta ser\u00e1 um NACK com o formato esperado.\nAplica\u00e7\u00e3o\nProgramador\nFigura 62 - Obter estado de bloqueio do carro (falha)\n\u2014de\u2014\n\u2014nd\u2014\n3.8.8. Bloquear ou desbloquear carro\nCarro\nr\ni\nReceber Comando Enviar Resposta\nPara bloquear ou desbloquear o carro, os comandos s\u00e3o mais uma vez semelhantes, sendo agora esperado um ACK com identifica\u00e7\u00e3o da opera\u00e7\u00e3o que foi bem sucedida. A aplica\u00e7\u00e3o envia o comando para o programador e espera 2 segundos por uma resposta.\nEm caso de sucesso (Figura 63 e Figura 64), o carro responde com o ACK esperado, que identifica o sucesso da opera\u00e7\u00e3o e a opera\u00e7\u00e3o efectuada.\nCarro\nAplica\u00e7\u00e3o\nProgramador\nFigura 63 - Bloquear viatura (sucesso)\n\u2014db----------------1\n\u00a5\nReceber Comando\nEnviar Resposta\nsb-------------\u2022\nFigura 64 - Desbloquear viatura (sucesso)\n- -dd- -\n\u2014sd\u2014\ni\nReceber Comando Enviar Resposta\nCaso n\u00e3o seja poss\u00edvel bloquear/desbloquear a viatura por algum motivo, o m\u00f3dulo do carro responde com o NACK esperado (Figura 65 e Figura 66).\nCarro\nAplica\u00e7\u00e3o\nProgramador\nFigura 65 - Bloquear viatura (falha)\n- -db- -\n\u2014nb\u2014\ni\nReceber Comando Enviar Resposta\nCarro\nAplica\u00e7\u00e3o\nProgramador\nFigura 66 - Desbloquear viatura (falha)\n- -dd- -\n\u2014nd\u2014\ny\nReceber Comando Enviar Resposta\n3.8.9. Acertar hora e data do m\u00f3dulo do carro\nCada registo de acesso inclui a informa\u00e7\u00e3o da data e data a que aconteceu o evento, da\u00ed a necessidade de incluir no m\u00f3dulo do carro um dispositivo que seja capaz de servir de rel\u00f3gio em tempo real, estando ali para o CPU obter a informa\u00e7\u00e3o hor\u00e1ria sempre que seja necess\u00e1rio registar algum evento.\nAssim que o m\u00f3dulo do carro \u00e9 ligado pela primeira vez, a hora inicia-se nas 00:00:00 de 01/01/00, sendo necess\u00e1rio proceder ao seu acerto.\nO software inclui essa fun\u00e7\u00e3o, sendo apenas necess\u00e1rio escolh\u00ea-la para que a hora do m\u00f3dulo do carro seja acertada.\nO comando utilizado para o efeito tem o formato:\n\u2018h\u2019 + hora + minuto + segundo + dia + m\u00eas + ano\nEm que cada elemento \u00e9 enviado num Byte de dados. A informa\u00e7\u00e3o para cada campo \u00e9 obtida do sistema operativo automaticamente.\nh+data\n\u2014sh\u2014\nFigura 67 - Acertar hora do m\u00f3dulo do carro (sucesso)\ni\nReceber Comando Enviar Resposta\nEm caso de sucesso (Figura 67) ou de falha (Figura 68) s\u00e3o recebidos os ACK ou NACK esperados com o formato definido, indicando o sucesso ou falha da opera\u00e7\u00e3o \u00e0 aplica\u00e7\u00e3o.\nAplica\u00e7\u00e3o\nProgramador\nh+data\n\u2014nh\u2014\nFigura 68 - Acertar hora do m\u00f3dulo do carro (falha)\nCarro\n\\x\ni\nReceber Comando Enviar Resposta\n3.8.10.\tObter n\u00famero de registos de acesso guardados em mem\u00f3ria\nAntes de se obterem os registos de acesso propriamente ditos, \u00e9 necess\u00e1rio saber quantos registos est\u00e3o guardados em mem\u00f3ria, para evitar que a aplica\u00e7\u00e3o requisite registos que n\u00e3o existem ainda.\nCarro\nAplica\u00e7\u00e3o\nProgramador\nX7\n-------Rn-----------------1 Y\nReceber Comando Enviar Resposta\n---Rn##----------\u2022\nFigura 69 - Obter n\u00famero de registos de acesso guardados em mem\u00f3ria (sucesso)\nA aplica\u00e7\u00e3o envia o comando \u2018Rn\u2019 para o programador e este comando \u00e9 reencaminhado para o carro que responde com \u2018Rn##\u2019, em que \u2018##\u2019 \u00e9 um n\u00famero de dois Bytes que representa o n\u00famero de registos guardados. S\u00e3o precisos 15 bits para representar os 32.768 registos que podem ser guardados na mem\u00f3ria, mas s\u00e3o enviados 16 bits uma vez que a transmiss\u00e3o entre m\u00f3dulos ZigBee se processa ao Byte.\nN\u00e3o est\u00e1 prevista uma resposta em caso de falha, uma vez que o n\u00famero de registos de acessos \u00e9 apenas um n\u00famero que o CPU transmite para o programador, n\u00e3o \u00e9 necess\u00e1rio ler nada de nenhum dispositivo externo que possa falhar.\n3.8.11. Apagar registos de acesso\nNa aplica\u00e7\u00e3o \u00e9 tamb\u00e9m poss\u00edvel apagar os registos de acesso armazenados at\u00e9 ent\u00e3o. O que o m\u00f3dulo do carro faz na realidade \u00e9 reiniciar o contador de posi\u00e7\u00e3o dos registos de acesso guardados, a informa\u00e7\u00e3o continua l\u00e1 mas ser\u00e1 substitu\u00edda na pr\u00f3xima passagem por l\u00e1, quando o n\u00famero de registos come\u00e7ar a crescer.\nCarro\nAplica\u00e7\u00e3o\nProgramador\nFigura 70 - Apagar registos de acesso (sucesso)\n- -Ra- -\n- -sR- -\ni\nReceber Comando Enviar Resposta\nO comando para o efeito \u00e9 \u2018Ra\u2019, ao que o carro responder\u00e1 com \u2018sR\u2019 em caso de sucesso (Figura 70) ou com \u2018nR\u2019 se alguma coisa falhar (Figura 71). Ambas as respostas est\u00e3o dentro da estrat\u00e9gia de ACK e NACK escolhida anteriormente.\nCarro\nAplica\u00e7\u00e3o\nProgramador\nFigura 71 - Apagar registos de acesso (falha)\n- -Ra- -\n- -nR- -\n3.8.12. Obter registos de acesso\ni\nReceber Comando Enviar Resposta\nA obten\u00e7\u00e3o dos registos de acesso \u00e9 a opera\u00e7\u00e3o que mais mem\u00f3ria consome o CPU e representa tamb\u00e9m a maior transmiss\u00e3o de dados entre o m\u00f3dulo do carro e o programador.\nA aplica\u00e7\u00e3o n\u00e3o pede ao carro todos os registos de acesso de uma vez, estes s\u00e3o pedidos em blocos de 10, organizados pela ordem em que foram sendo guardados na mem\u00f3ria.\nO comando para fazer o pedido de 10 registos \u00e9 \u2018Re##\u2019 em que \u2018##\u2019 representa o n\u00famero do registo de come\u00e7o da leitura. S\u00e3o precisos 16 bits porque, mais uma vez, \u00e9 necess\u00e1rio endere\u00e7ar 32.768 registos diferentes.\nCarro\nAplica\u00e7\u00e3o\nProgramador\n------Re##----------.\n- -Re###...###--------\u2022\nV\nReceber Comando Enviar Resposta\nSe a resposta for positiva (Figura 72), ser\u00e1 enviado o comando \u2018Re\u2019 seguido de 60 Bytes na mesma transmiss\u00e3o. Esses 60 Bytes representam 10 registos de acesso, cada registo ocupa 6 Bytes da transmiss\u00e3o (#, dia, m\u00eas, ano, hora e minuto do registo).\nOptei por enviar os dados de cada registo desta forma pela maior facilidade que existe em tratar dados bin\u00e1rios no CPU do que na aplica\u00e7\u00e3o, se fossem enviados os dados como est\u00e3o guardados na mem\u00f3ria seriam utilizados 4 Bytes por registo.\nS\u00e3o sempre enviados 60 Bytes de registos para o programador, mesmo que n\u00e3o existam 10 registos guardados na mem\u00f3ria. Os registos que n\u00e3o existam v\u00e3o com os bits todos a \u20181\u2019, uma situa\u00e7\u00e3o imposs\u00edvel para um registo verdadeiro e facilmente detect\u00e1vel pela aplica\u00e7\u00e3o.\nCarro\n\nAplica\u00e7\u00e3o\nProgramador\nr\n----Re##--------------,\nY\nReceber Comando Enviar Resposta\n-----ne------------1\nFigura 73 - Obter 10 registos de acesso (falha)\nEm caso de falha (Figura 73), a resposta ser\u00e1 um NACK formatado de acordo com o especificado.\n4.\tResultados dos testes no terreno\nDe seguida apresento os testes realizados e os resultados dos mesmos para verificar o correcto funcionamento dos v\u00e1rios elementos do sistema.\n4.1.\tTestes em viatura\nOs testes ao sistema foram realizados no meu carro, um Renault Clio II de 1999.\n4.1.1.\tO m\u00f3dulo do carro\nFigura 74 - M\u00f3dulo do carro na placa branca montado no carro para testes\nPara tal foi utilizada a vers\u00e3o do m\u00f3dulo do carro ainda na placa branca e um cart\u00e3o e um programador j\u00e1 com PCB completa. A raz\u00e3o da utiliza\u00e7\u00e3o do m\u00f3dulo ainda na placa branca teve a haver com a complexidade do mesmo, assim testou-se primeiro e s\u00f3 depois se fez a PCB, evitando-se a cria\u00e7\u00e3o de v\u00e1rias revis\u00f5es da mesma e poupando recursos.\nA placa \u00e9 alimentada pelo mesmo fio que vem da igni\u00e7\u00e3o, o que significa que, tal como se queria, o circuito do m\u00f3dulo do carro apenas ser\u00e1 ligada quando o utilizador der \u00e0 chave, continuando activo enquanto o carro se mantiver ligado.\n\tLed aceso\tEstado do m\u00f3dulo e da viatura\nVerde\t\tO carro est\u00e1 operacional; O m\u00f3dulo tem um cart\u00e3o com sess\u00e3o iniciada.\nVerde + Vermelho\t\tO carro est\u00e1 operacional; N\u00e3o existe nenhum cart\u00e3o com sess\u00e3o iniciada e a contagem decrescente para o bloqueio da viatura est\u00e1 a decorrer; A presen\u00e7a de um cart\u00e3o v\u00e1lido far\u00e1 o m\u00f3dulo passar para o estado de cima.\nVermelho\t\tO carro est\u00e1 bloqueado; N\u00e3o foi detectado nenhum cart\u00e3o durante 2 minutos; \u00c9 necess\u00e1rio recorrer ao software ou ao reed relay de um cart\u00e3o previamente adicionado ao sistema para desbloquear a viatura.\nTabela 4 - Tabela de estados poss\u00edveis do m\u00f3dulo do carro em fun\u00e7\u00e3o dos leds indicadores\t\t\nExistem dois leds indicadores do que se est\u00e1 a passar em todo o instante, um verde e um vermelho. Na Tabela 4 est\u00e3o indicados os estados poss\u00edveis desses leds e o seu significado.\nA forma utilizada para desactivar a viatura na altura de bloqueio foi o desvio da linha de igni\u00e7\u00e3o (fio vermelho na Figura 74), facilmente acess\u00edvel no meu carro mas que dificilmente seria op\u00e7\u00e3o num carro mais moderno.\nNesse caso ser\u00e1 prefer\u00edvel contactar a pr\u00f3pria marca para informa\u00e7\u00f5es como proceder.\nO corte dessa linha deliga imediatamente a viatura mas n\u00e3o corta energia ao restante sistema, o r\u00e1dio continuou a trabalhar, por exemplo, e nos testes verificou-se que \u00e9 perfeitamente seguro desligar a viatura deste tipo, os trav\u00f5es mant\u00eam-se operacionais e o condutor poder\u00e1 parar a viatura em perfeitas condi\u00e7\u00f5es, sem se colocar a sua vida em risco e sem se arriscar causar um acidente.\nPara efectuar a interrup\u00e7\u00e3o da linha de igni\u00e7\u00e3o foi utilizado um rel\u00e9 autom\u00f3vel normalmente aberto, o que significa que sem o sistema montado o carro n\u00e3o arranca. A corrente que o rel\u00e9 necessitar\u00e1 de ser capaz de comutar ronda os 2A sensivelmente constantes, medidos na linha de igni\u00e7\u00e3o quando o carro est\u00e1 em funcionamento, por isso o rel\u00e9 de autom\u00f3vel de 40A utilizado ser\u00e1 mais do que suficiente.\nFigura 75 - Rel\u00e9 autom\u00f3vel utilizado para bloqueio e desbloqueio da viatura\nA corrente de activa\u00e7\u00e3o do rel\u00e9 tamb\u00e9m foi medida e ronda os 160mA, o que levou \u00e0 necessidade de adi\u00e7\u00e3o de um driver capaz de dissipar uma pot\u00eancia razo\u00e1vel, a utiliza\u00e7\u00e3o de transistores discretos de uso comum levaria \u00e0 necessidade de adicionar um dissipador extra ao conjunto, tal a pot\u00eancia envolvida.\nP = V x I = 127 * 0,16.4 = 1,9217\nO driver escolhido foi o MCP1407 daMicrochip, por ser capaz de comutar uma corrente bastante alta (6A) e de dissipar uma pot\u00eancia aceit\u00e1vel na sua package TO-220-5. Para al\u00e9m disso, esta package permitiria a adi\u00e7\u00e3o f\u00e1cil de um dissipador caso fosse necess\u00e1rio, o que n\u00e3o se veio a verificar.\nFigura 76 - Pinout de um MCP1407 napackage TO-220-5\nEsse driver \u00e9 ligado ou desligado pelo CPU, colocando +12V ou 0V aos terminais do rel\u00e9 e activando ou desactivando o mesmo, respectivamente.\nOs resultados foram bastante interessantes e corresponderam \u00e0s expectativas.\n4.1.2.\tAutonomia do cart\u00e3o\nUm dos aspectos que foi testado foi a autonomia do cart\u00e3o. N\u00e3o foi poss\u00edvel fazer testes extensivos \u00e0 mesma mas os que se realizaram serviram para fazer uma estimativa.\nA bateria recarreg\u00e1vel do comando quando carregada fica com uma tens\u00e3o de 3,3V. Verificou-se que a mesma perdia entre 20 e 50mV por dia com uma utiliza\u00e7\u00e3o moderada (cerca de 120 minutos com o comando activo, no restante tempo este foi desligado).\nTendo em conta que os elementos do cart\u00e3o (CPU e m\u00f3dulo ZigBee) funcionam at\u00e9 1,8V e 2,4V, respectivamente, conclui-se que o sistema se manter\u00e1 a funcionar at\u00e9 a tens\u00e3o na pilha descer de 2,4V. A perder 50mV por dia o comando ter\u00e1 ent\u00e3o carga para 18 dias, o que fica longe dos meses calculados pelo programa da Microchip mas que \u00e9 um valor aceit\u00e1vel para um primeiro prot\u00f3tipo funcional.\nTestes posteriores revelaram um comportamento interessante. O ritmo de descarga da bateria mant\u00e9m um n\u00edvel semelhante quando o cart\u00e3o est\u00e1 desligado (10-30mV por dia), o que significa que se poder\u00e1 fazer alguma coisa para conter esta drenagem de energia que acontece mesmo quando o cart\u00e3o n\u00e3o est\u00e1 a ser utilizado, e ganhar perto de 100% de capacidade se for poss\u00edvel reduzir as perdas nesta sec\u00e7\u00e3o do cart\u00e3o a zero com o mesmo desligado.\nInfelizmente n\u00e3o foi poss\u00edvel realizar outra PCB para o cart\u00e3o a tempo de colocar aqui os resultados mas penso que o problema est\u00e1 encontrado: o circuito de regula\u00e7\u00e3o de tens\u00e3o que permite ligar os 5V do USB directamente ao cart\u00e3o e que suporta o carregamento da pilha.\nComo o cart\u00e3o est\u00e1 neste momento, esse circuito mant\u00e9m-se conectado \u00e1 pilha mesmo quando o cart\u00e3o \u00e9 desligado de modo a permitir que a mesma possa ser recarregada em todas as ocasi\u00f5es. Basta colocar o interruptor de modo a que se desligue completamente a pilha do circuito para evitar que ela drene com tanta facilidade para o circuito de carga. O preju\u00edzo para a aplica\u00e7\u00e3o ser\u00e1 o facto de o cart\u00e3o passar a necessitar de estar ligado para que o processo de carga funcione.\nEste problema seria bastante reduzido se tivesse sido utilizado uma bateria de l\u00edtio e um controlador de carregamento em circuito integrado. Os mais recentes t\u00eam baix\u00edssimas correntes de retorno quando n\u00e3o est\u00e3o a ser utilizados, o que praticamente acabaria com o problema.\n4.1.3.\tAlcances medidos para os v\u00e1rios m\u00f3dulos\nForam tamb\u00e9m testados os alcances do m\u00f3dulo de programa\u00e7\u00e3o e do comando.\nO m\u00f3dulo de programa\u00e7\u00e3o, que serve para programar o m\u00f3dulo do carro, e o m\u00f3dulo do carro foram programados para emitir \u00e0 pot\u00eancia m\u00e1xima disponibilizada pelo m\u00f3dulo ZigBee (0dB) e oferecem um alcance de cerca 30-40 metros em campo aberto e de 10-20 metros com uma parede entre o m\u00f3dulo e o carro, isto com o m\u00f3dulo do carro j\u00e1 dentro da viatura.\nPor outro lado, o comando foi programado para ter um alcance de cerca de 2 metros (-26dB) de modo a desbloquear a viatura apenas dentro desta. Na pot\u00eancia m\u00e1xima seria poss\u00edvel interagir com o carro a 20-30 metros, o que n\u00e3o \u00e9 desejado para este projecto por raz\u00f5es de autonomia. Quanto menor a pot\u00eancia de transmiss\u00e3o menor ser\u00e1 a energia necess\u00e1ria para transmitir e o sistema assume que o utilizador desliga o carro quando sai dele, o que desliga o m\u00f3dulo do carro, e deixam de ser recebidas as transmiss\u00f5es do cart\u00e3o de qualquer maneira.\n5.\tConclus\u00f5es\nOs objectivos tra\u00e7ados inicialmente foram atingidos com relativo sucesso.\nO sistema criado est\u00e1 de acordo com as especifica\u00e7\u00f5es desejadas e funciona na preven\u00e7\u00e3o do furto de viaturas ap\u00f3s carjacking, como foi confirmado no teste numa viatura real.\nUm dos pontos que ficou um pouco aqu\u00e9m das expectativas foi a autonomia, onde os cerca de 18 dias medidos ficaram bastante longe dos meses que eram esperados. Numa futura evolu\u00e7\u00e3o da PCB dos cart\u00f5es ser\u00e1 poss\u00edvel corrigir este problema e a troca da pilha de 3V por uma bateria de l\u00edtio poder\u00e1 ser bem-vinda se se confirmar que valha a pena.\n6.\tTrabalho Futuro\n6.1.\tDesenvolver um m\u00e9todo de evitar o replay dos dados transmitidos pelos comandos\nTalvez o maior problema que este sistema enfrentar\u00e1 caso seja adoptado para ser instalado em viaturas ser\u00e1 a garantia de seguran\u00e7a.\nO ZigBee proporciona encripta\u00e7\u00e3o at\u00e9 128 bits e preven\u00e7\u00e3o de ataques que utilizem o replay de comandos. No entanto, a utiliza\u00e7\u00e3o de preven\u00e7\u00e3o de replay neste projecto n\u00e3o \u00e9 poss\u00edvel nos termos em que o ZigBee o define, j\u00e1 que parte do pressuposto que os n\u00f3s da rede comunicam uns com os outros e est\u00e3o no raio de alcance uns dos outros sempre, algo que n\u00e3o acontece aqui.\nCada cart\u00e3o de identifica\u00e7\u00e3o \u00e9 apenas um transmissor, recebe mas n\u00e3o reconhece como v\u00e1lida nenhuma transmiss\u00e3o porque foi programado para isso de modo a n\u00e3o dispender energia extra.\nIsto significa que n\u00e3o h\u00e1 comunica\u00e7\u00e3o bidireccional entre os comandos e o m\u00f3dulo do carro. Como os comandos transmitem periodicamente o seu c\u00f3digo, se a protec\u00e7\u00e3o de replay estivesse activa o n\u00famero de controlo de cada frame transmitido continuaria a ser incrementado automaticamente no comando, mas s\u00f3 seria incrementado no m\u00f3dulo do carro se este recebesse a transmiss\u00e3o.\nAssim que o cart\u00e3o transmita algo que o m\u00f3dulo do carro n\u00e3o receba (quando o utilizador sai do carro), o m\u00f3dulo do carro perde o sincronismo e passa a rejeitar as mensagens recebidas, porque o n\u00famero do frame n\u00e3o corresponde com o que tem armazenado, e esse comando ficaria inutilizado.\nUma forma de resolver esse problema seria permitir que o comando recebesse mensagens para actualiza\u00e7\u00e3o do n\u00famero do frame transmitido e utilizar um algoritmo de encripta\u00e7\u00e3o em software.\nNo entanto, o tempo de vida da bateria seria drasticamente reduzido, n\u00e3o s\u00f3 pela necessidade de mais tempo de processamento para realizar a encripta\u00e7\u00e3o e decripta\u00e7\u00e3o mas tamb\u00e9m porque o m\u00f3dulo de comunica\u00e7\u00e3o precisaria de ficar activo algum tempo ap\u00f3s ter transmitido o frame, de modo a receber a resposta do carro, tendo sido essa a raz\u00e3o pela sua n\u00e3o utiliza\u00e7\u00e3o neste projecto.\n6.2.\tImplementar uma bateria de l\u00edtio de 3,6V e um controlador do processo de carga no cart\u00e3o\nA tecnologia das baterias continua a evoluir a olhos vistos, ainda para mais agora com a chegada dos carros el\u00e9ctricos ao mercado.\nSeria interessante trocar a bateria CR2032 de 3V por uma bateria de l\u00edtio ultra-fina de 3,6V e por um circuito integrado que gerisse o carregamento da mesma. No entanto, estas baterias t\u00eam uma taxa de auto-descarga bastante superior \u00e0s CR2032 (5% contra 0,08%, por exemplo), o que exigiria a realiza\u00e7\u00e3o de testes para verificar at\u00e9 que ponto seria vi\u00e1vel a sua utiliza\u00e7\u00e3o e se trariam vantagens face \u00e0s CR2032 no que \u00e0 autonomia diz respeito.\nCom estra troca, a op\u00e7\u00e3o de implementar o apontado em 6.1 seria bastante mais vi\u00e1vel, pois a capacidade energ\u00e9ticas destas baterias \u00e9 bastante superior \u00e0 da bateria utilizada.\n7.\tOutras aplica\u00e7\u00f5es\nO sistema desenvolvido neste projecto poder\u00e1 ser utilizado em v\u00e1rias situa\u00e7\u00f5es em que seja necess\u00e1rio o controlo e registo de acessos a um espa\u00e7o.\nExemplos comuns s\u00e3o empresas, espa\u00e7os comerciais e at\u00e9 casas de privados.\nOutro exemplo de aplica\u00e7\u00e3o ser\u00e1 em malas recorrendo a uma montagem com aceler\u00f3metro, que permitiria, por exemplo, soar um alarme caso seja detectado movimento numa altura em que este n\u00e3o estivesse previsto.\nNeste caso o sistema poderia ser adaptado ligeiramente para um funcionamento mais simples. Por exemplo, o utilizador instalava o sistema numa mala de viagem que ia utilizar para viajar de comboio. \u00c0 chegada \u00e0 esta\u00e7\u00e3o o utilizador pousava a mala e desligava o seu cart\u00e3o de identifica\u00e7\u00e3o.\nPassado um tempo curto (teria de ser mais curto do que os 2 minutos utilizados para o carro), a mala ficaria num estado bloqueado e sens\u00edvel a movimentos. Se algu\u00e9m pegasse nela, seria activado um altifalante (chamado sereia) com um alarme sonoro, cuja inten\u00e7\u00e3o seria demover o ladr\u00e3o.\nOutra adapta\u00e7\u00e3o que poderia ser feita neste caso seria permitir que o cart\u00e3o com a sua presen\u00e7a desbloqueasse o alarme, o que permitiria que tudo regressasse ao normal quando o utilizador voltasse a ligar o cart\u00e3o para seguir viagem.\nII.\nBibliografia\n1.\tMicrochip. MPLAB C18 C Compiler User's Guide. www.microchip.com. [Online] 2005. http://ww1.microchip.com/downloads/en/DeviceDoc/MPLAB_User_Guide_51519c.pdf.\n2.\t\u2014. MPLAB C18 C Compiler Libraries. www.microchip.com. [Online] 2002. http://ww1.microchip.com/downloads/en/devicedoc/mplab_c18_libraries_51297f.pdf.\n3.\t\u2014.\tPIC18F26K20.\twww.microchip.com.\t[Online]\t2010.\nhttp://www.microchip.com/wwwproducts/Devices.aspx?dDocName=en026332.\n4.\t\u2014.\tMRF24J40MA.\twww.microchip.com.\t[Online]\t2008.\nhttp://www.microchip.com/wwwproducts/Devices.aspx?dDocName=en535967.\n5.\t\u2014.\tMRF24J40.\twww.microchip.com.\t[Online]\t2010.\nhttp://www.microchip.com/wwwproducts/Devices.aspx?dDocName=en027752.\n6.\t\u2014. AN1066 MiWi Wireless Networking Protocol Stack . www.microchip.com. [Online] 2010. http://www.microchip.com/stellent/idcplg?IdcService=SS_GET_PAGE&amp;nodeId=1824&amp;appnote=en5206 06.\n7.\t\u2014. AN1283 Microchip Wireless (MiWi) Media Access Controller - MiMAC .\nwww.microchip.com.\t[Online]\t2009.\nhttp://www.microchip.com/stellent/idcplg?IdcService=SS_GET_PAGE&amp;nodeId=1824&amp;appnote=en5440 32.\n8.\t\u2014. AN 1204 Microchip MiWi P2P Wireless Protocol. www.microchip.com. [Online] 2010. http://www.microchip.com/stellent/idcplg?IdcService=SS_GET_PAGE&amp;nodeId=1824&amp;appnote=en5361 81.\n9.\t\u2014. AN1284 Microchip Wireless (MiWi) Application Programming Interface - MiApp .\nwww.microchip.com.\t[Online]\t2009.\nhttp://www.microchip.com/stellent/idcplg?IdcService=SS_GET_PAGE&amp;nodeId=1824&amp;appnote=en5440 39.\n10.\t\u2014. AN1232 ZigBee 2006 Protocol Stack . www.microchip.com. [Online] 2008. http://www.microchip.com/stellent/idcplg?IdcService=SS_GET_PAGE&amp;nodeId=1824&amp;appnote=en5377 67.\nIII. Ap\u00eandices\nA. ORGANIZA\u00c7\u00c3O INTERNA DA MEM\u00d3RIA N\u00c3O VOL\u00c1TIL DO CPU\nEndere\u00e7o\t\t\tDados\n0x00\t-\t0x07\t\tID1\n0x08\t\t0x0F\tID2\n0x10\t\t0x17\tID3\n0x18\t\t0x1F\tID4\n0x20\t\t0x27\tID5\n0x28\t\t0x2F\tID6\n0x30\t\t0x37\tID7\n0x38\t\t0x3F\tID8\n0x40\t\t0x47\tID9\n\t0x48\t\tN\u00famero de cart\u00f5es\n\t0x49\t\tEstado da viatura\n0x50\t-\t0x51\tUltima posi\u00e7\u00e3o gravada do registo de acessos\n0x52\t\t0x53\tTimeout ID1\n0x54\t\t0x55\tTimeout ID2\n0x56\t\t0x57\tTimeout ID3\n0x58\t\t0x59\tTimeout ID4\n0x5A\t\t0x5B\tTimeout ID5\n0x5C\t\t0x5D\tTimeout ID6\n0x5E\t\t0x5F\tTimeout ID7\n0x60\t\t0x61\tTimeout ID8\n0x62\t\t0x63\tTimeout ID9\n0x64\t\t0x65\tContador 2 minutos\n\t0x66\t\tEstado do Aceler\u00f3metro\nB. Comandos implementados na interac\u00e7\u00e3o entre m\u00f3dulos\nFun\u00e7\u00e3o\tComando enviado pela aplica\u00e7\u00e3o\nTeste de conectividade com o m\u00f3dulo de programa\u00e7\u00e3o\tt\nTeste de conectividade com o m\u00f3dulo do carro\tc\nAdicionar cart\u00e3o \u00e0 base de dados do m\u00f3dulo do carro\taxxxxxxxx\nObter n\u00famero de cart\u00f5es na base de dados do m\u00f3dulo do carro\tb\nRemover cart\u00e3o da base de dados do m\u00f3dulo do carro\tr#\nObter ID de um cart\u00e3o na base de dados do m\u00f3dulo do carro\ti#\nVerificar estado de bloqueio do carro\tde\nBloquear carro\tdb\nDesbloquear carro\tdd\nAcertar hora do m\u00f3dulo do carro\th+data\nObter n\u00famero de registos de acesso guardados em mem\u00f3ria\tRn\nApagar registos de acesso guardados em mem\u00f3ria\tRa\nObter registos de acesso\tRe##\nC. Esquemas el\u00e9ctricos e PCBs\n1. Cart\u00e3o\nPIC18F26K20\n_2\n3\n_5\n6\nRAO/ANO\tI\nRA1/AN1\nRA2/AN2\nRA3/AN3\nRA4/T0CKI/C1OUT RA5/AN4/SS/C2OUT\n\n\n\nOSC2/CLKOUT/RA6\nINT0/FLT0/AN12/RB0\nINT1/AN10/RB1\nINT2/AN8/RB2\nCCP2/AN9/RB3\nKBI0/AN11/RB4\nKBI1/PGM/RB5\nKBI2/PGC/RB6\nKBI3/PGD/RB7\nOSC1/CLKIN/RA7\nMCLR/VPP/RE3\nT1OSO/T13CKI/RC0\nT1OSI/CCP2/RC1 CCP1/RC2 SCK/SCL/RC3 SDI/SDA/RC4\nSDO/RC5\nTX/CK/RC6\nRX/DT/RC7\nFigura 77 - Esquema el\u00e9ctrico do m\u00f3dulo de cart\u00e3o de identifica\u00e7\u00e3o\nFigura 78 - PCB do m\u00f3dulo do cart\u00e3o de identifica\u00e7\u00e3o (3,32x4,48cm)\nFigura 79 - Fotos do cart\u00e3o utilizado para testes\n2. M\u00f3dulo do Carro\nFigura 80 - Esquema el\u00e9ctrico do m\u00f3dulo de carro\nFigura 81 - PCB do m\u00f3dulo do carro (6,72x5,25 cm)\nFigura 82 - Foto do m\u00f3dulo do carro utilizado em testes\n3. M\u00f3dulo de programa\u00e7\u00e3o\nPIC18F26K20\n2\n4\n6\n10\n_9\n\nRAO/ANO\nRA1/AN1\nRA2/AN2\nRA3/AN3\nRA4/T0CKI/C1OUT\nRA5/AN4/SS/C2OUT\nINT0/FLT0/AN12/RB0\nINT1/AN10/RB1 INT2/AN8/RB2\nCCP2/AN9/RB3\nKBI0/AN11/RB4\nKBI1/PGM/RB5\nKBI2/PGC/RB6\nKBI3/PGD/RB7\nOSC2/CLKOUT/RA6\nOSC1/CLKIN/RA7\nMCLR/VPP/RE3\nT1OSO/T13CKI/RC0\nT1OSI/CCP2/RC1 CCP1/RC2 SCK/SCL/RC3 SDI/SDA/RC4\nSDO/RC5\nTX/CK/RC6\nRX/DT/RC7\nMCLR PGD PGC GND VDD\nFigura 83 - Esquema el\u00e9ctrico do m\u00f3dulo de programa\u00e7\u00e3o\nFigura 84 - PCB do m\u00f3dulo de programa\u00e7\u00e3o (2,83x2,75cm)\n\nFigura 85 - Fotos do m\u00f3dulo de programa\u00e7\u00e3o utilizado\nRIA\nEstes anexos s\u00f3 est\u00e3o dispon\u00edveis para consuita atrav\u00e9s do CD-ROM. Queira por favor dirigir-se ao baic\u00e3o de atendimento da Bibiioteca.\nServi\u00e7os de Documenta\u00e7\u00e3o\nUniversidade de Aveiro"}]}}}