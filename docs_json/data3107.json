{"add": {"doc": {"field": [{"@name": "docid", "#text": "BR-TU.08684"}, {"@name": "filename", "#text": "13555_MarcosAntoniodeMatosLaia_DO_corrigida.pdf"}, {"@name": "filetype", "#text": "PDF"}, {"@name": "text", "#text": "UNIVERSIDADE DE S\u00c3O PAULO  \nINSTITUTO DE F\u00cdSICA DE S\u00c3O CARLOS \n\nEMBRAPA INSTRUMENTA\u00c7\u00c3O \n \n \n \n \n \n \n \n \n \n \n \n\nMARCOS ANTONIO DE MATOS LAIA \n \n \n \n \n \n\nFiltragem de Kalman n\u00e3o linear com redes neurais  \n\nembarcada em uma arquitetura reconfigur\u00e1vel para uso na   \n\ntomografia  de Raios-X  para amostras da f\u00edsica de solos \n\n \n\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n\n \nS\u00e3o Carlos \n\n2013 \n\n\n\n  \n\n \n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n\n\n \n\n \n\nMARCOS ANTONIO DE MATOS LAIA \n\n  \n \n \n \n \n \n \n \n \n \n \n \n \n \n\nFiltragem de Kalman n\u00e3o linear com redes neurais  \n\nembarcada em uma arquitetura reconfigur\u00e1vel para uso na   \n\ntomografia  de Raios-X para amostras da f\u00edsica de solos \n\n \n \n \n\nTese apresentada ao Programa de P\u00f3s-\nGradua\u00e7\u00e3o em F\u00edsica do Instituto de \nF\u00edsica de S\u00e3o Carlos da Universidade de \nS\u00e3o Paulo, para obten\u00e7\u00e3o do t\u00edtulo de \nDoutor em Ci\u00eancias. \n \n\u00c1rea de concentra\u00e7\u00e3o: F\u00edsica Aplicada \nOp\u00e7\u00e3o: F\u00edsica Computacional \nOrientador: Prof. Dr. Paulo E. Cruvinel \n \n \n\n \n\n \n\n \n\n \n\n \n\nVers\u00e3o Corrigida \n\n(Vers\u00e3o original dispon\u00edvel na Unidade que aloja o Programa) \n\n \n\nS\u00e3o Carlos \n2013 \n\n   \n\n\n\n \n\n \n\n  \n\n \n\n \n\n \n  \n\n\n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\nAos meus pais, por todo apoio e carinho  que  foram fundamentais   \n\npara a elabora\u00e7\u00e3o deste trabalho \n\n \n\n   \n\n\n\n \n\n \n\n  \n\n \n\n  \n\n\n\n \n\n \n\nAGRADECIMENTOS \n\n \n\n \n\nAo Prof. Dr. Paulo E. Cruvinel, pelos ensinamentos nos anos de conviv\u00eancia, aten\u00e7\u00e3o, \n\napoio e orienta\u00e7\u00e3o. \n\nAos colegas Francisco de Assis Scannavino J\u00fanior e Cristiane Gataz, pelas discuss\u00f5es  \n\ne amizade, bem como pelos bons momentos no laborat\u00f3rio de pesquisa. \n\nAo Instituto de F\u00edsica de S\u00e3o Carlos, pela oportunidade de realiza\u00e7\u00e3o desse \n\ndoutoramento. \n\nAo Conselho Nacional de Desenvolvimento Cient\u00edfico e Tecnol\u00f3gico e Instituto \n\nNacional de Ci\u00eancia e Tecnologia em Sistemas Embarcados, pela concess\u00e3o da bolsa de \n\ndoutorado e pelo apoio financeiro para a realiza\u00e7\u00e3o desta pesquisa. \n\nA Embrapa Instrumenta\u00e7\u00e3o Agropecu\u00e1ria, por colocar \u00e0 disposi\u00e7\u00e3o a \u00e1rea \n\nexperimental e os laborat\u00f3rios.  \n\n  \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n\n\n \n\n \n\n  \n\n \n\n \n\n \n\n  \n\n\n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n\u201cN\u00e3o creio que haja alguma emo\u00e7\u00e3o mais intensa para um inventor que ver alguma de \n\nsuas cria\u00e7\u00f5es funcionando. Essa emo\u00e7\u00e3o faz que se esque\u00e7a de comer, de dormir, de tudo.\" \n\nNikola Tesla \n\n \n  \n\n\n\n \n\n \n\n  \n\n  \n\n\n\n \n\n \n\nRESUMO \n\n \n\nLAIA, M. A. M. Filtragem de Kalman n\u00e3o linear com redes neurais embarcada \n\nem uma arquitetura reconfigur\u00e1vel para uso na tomografia  de Raios-X para \n\namostras da f\u00edsica de solos. 2013. 156 p. Tese (Doutorado em Ci\u00eancias) -  Instituto \n\nde F\u00edsica de S\u00e3o Carlos, Universidade de S\u00e3o Paulo, S\u00e3o Carlos, 2013. \n\n \n\nEstudar as propriedades f\u00edsicas do solo envolve conhecer a umidade, o transporte \n\nde \u00e1gua e solutos, a densidade, a identifica\u00e7\u00e3o da porosidade, o que \u00e9 essencial \n\npara o crescimento de ra\u00edzes das plantas. Para esses estudos, a tomografia de raios \n\nX tem se mostrado uma t\u00e9cnica \u00fatil. As imagens tomogr\u00e1ficas s\u00e3o obtidas atrav\u00e9s de \n\nproje\u00e7\u00f5es (sinais) que s\u00e3o reconstru\u00eddos com algoritmos adequados. No processo \n\nde aquisi\u00e7\u00e3o dessas proje\u00e7\u00f5es, podem surgir ru\u00eddos provenientes de diferentes \n\nfontes. O sinal tomogr\u00e1fico apresenta ru\u00eddos que possuem uma distribui\u00e7\u00e3o de \n\nPoisson gerada pela contagem de f\u00f3tons, bem como o detector de f\u00f3tons \u00e9 \n\ninfluenciado por uma presen\u00e7a de ru\u00eddo eletr\u00f4nico com uma distribui\u00e7\u00e3o Gaussiana. \n\nEssas diferentes distribui\u00e7\u00f5es podem ser mapeadas com transformadas n\u00e3o lineares \n\nespec\u00edficas que alteram uma distribui\u00e7\u00e3o Gaussiana para outros tipos de \n\ndistribui\u00e7\u00f5es, como a de transformada de Anscombe (Poisson) ou transformada de \n\nBox-Muller (Uniforme), mas s\u00e3o aproxima\u00e7\u00f5es que apresentam erros acumulativos. \n\nAs transformadas podem ser ent\u00e3o mapeadas por um sistema de redes neurais, o \n\nque garante um melhor resultado com o filtro de Kalman n\u00e3o linear em que os pesos \n\nda rede e as medidas das proje\u00e7\u00f5es s\u00e3o estimados em conjunto. Este trabalho \n\napresenta uma nova solu\u00e7\u00e3o com filtragem de Kalman descentralizada utilizando \n\nredes neurais artificiais embarcada em uma arquitetura reconfigur\u00e1vel com o intuito \n\nde obter se um valor \u00f3timo de melhoria na rela\u00e7\u00e3o Sinal/Ru\u00eddo de proje\u00e7\u00f5es \n\ntomogr\u00e1ficas e consequentemente nas imagens reconstru\u00eddas proporcionando  \n\nmelhorias para os m\u00e9todos de an\u00e1lise dos f\u00edsicos de solos agr\u00edcolas. \n\n \n\nPalavras-chave: F\u00edsica computacional. Computa\u00e7\u00e3o reconfigur\u00e1vel. Filtro de Kalman.  \n\n  \n\n\n\n \n\n \n\n  \n\n  \n\n\n\n \n\n \n\nABSTRACT \n\n \n\nLAIA, M. A. M. Nonlinear Kalman filtering with neural network embedded in a \n\nreconfigurable architecture for use in X-ray tomography for samples of soil \n\nphysics. 2013. 156 p. Tese (Doutorado em Ci\u00eancias) -  Instituto de F\u00edsica de S\u00e3o \n\nCarlos, Universidade de S\u00e3o Paulo, S\u00e3o Carlos, 2013. \n\n \n\nTo study the physical properties of soil moisture involves knowing the transport of \n\nwater and solutes, density, porosity identification, which is essential for the growth of \n\nplant roots. For these studies, X-ray tomography has been shown to be a useful \n\ntechnique. The tomographic images are obtained through projections (signals) that \n\nare reconstructed with appropriate algorithms. In the process of acquiring these \n\nprojections, noise can arise from different sources. The tomographic signal is noisy \n\nwhich have a Poisson distribution generated by photon counting, and the photon \n\ndetector is influenced by a presence of electronic noise with a Gaussian distribution. \n\nThese different distributions can be mapped to specific nonlinear transformed altering \n\na Gaussian distribution for other types of distributions, such as the Anscombe \n\ntransform (Poisson) or Box-Muller transform (Uniform), but are approximations that \n\nhave cumulative errors. Transforms can then be mapped by a neural network \n\nsystem, which ensures a better result with nonlinear Kalman filter in which the \n\nnetwork weights and measures of the projections are estimated together. This work \n\npresents a new solution to the unscented Kalman filtering using artificial neural \n\nnetworks embedded in a reconfigurable architecture in order to obtain an optimum \n\nvalue of improvement in S/N ratio of tomographic projections and consequently the \n\nimages reconstructed by providing improvements for the methods of physical \n\nparameters of the agricultural soils. \n\n \n\nKeywords: Computational physics. Reconfigurable computing. Kalman filter.  \n\n  \n\n\n\n \n\n \n\n  \n\n  \n\n\n\n \n\n \n\nSUM\u00c1RIO \n\n1 INTRODU\u00c7\u00c3O ........................................................................................................... 15 \n\n1.1 TOMOGRAFIA COMPUTADORIZADA APLICADA A SOLOS ....................................... 16 \n\n1.2 HIST\u00d3RICO DA TOMOGRAFIA COMPUTADORIZADA .............................................. 22 \n\n1.3 INCERTEZAS EM MEDIDAS TOMOGR\u00c1FICAS .......................................................... 23 \n\n1.4 TRABALHOS RELACIONADOS ................................................................................ 26 \n\n2 COMPUTA\u00c7\u00c3O RECONFIGUR\u00c1VEL BASEADA EM FPGA .......................... 29 \n\n2.1 DISPOSITIVOS RECONFIGUR\u00c1VEIS ......................................................................... 32 \n\n2.2 FPGAS .................................................................................................................. 34 \n\n3 DESENVOLVIMENTO METODOL\u00d3GICO E MATERIAIS ............................. 43 \n\n3.1 PROCESSAMENTO DIGITAL EM SISTEMAS EMBARCADOS ...................................... 43 \n\n3.2 FILTRO DE KALMAN .............................................................................................. 47 \n\n3.2.1 FILTRO DE KALMAN DISCRETO ..................................................................................... 47 \n\n3.2.2 FILTRO DE KALMAN ESTENDIDO ................................................................................... 49 \n\n3.2.3 FILTRO DE KALMAN COM REDES NEURAIS ARTIFICIAIS (RNAS) ................................... 50 \n\n3.2.4 FILTRO DE KALMAN DESCENTRALIZADO ...................................................................... 52 \n\n3.3 M\u00c9TODO DE RECONSTRU\u00c7\u00c3O TOMOGR\u00c1FICA DE RAIOS X .................................... 59 \n\n3.4 MODELAGEM DO SISTEMA DE FILTRAGEM A SER EMBARCADO ............................. 63 \n\n3.5 CORDIC ................................................................................................................ 70 \n\n3.6 PONTO FIXO ......................................................................................................... 76 \n\n3.6.1 FATOR DE ESCALA ......................................................................................................... 76 \n\n3.6.2 ARITM\u00c9TICA DE PONTO FIXO ........................................................................................ 77 \n\n3.6.3 NOTA\u00c7\u00d5ES NUM\u00c9RICAS ............................................................................................... 78 \n\n3.7 GERA\u00c7\u00c3O DE C\u00d3DIGO EM HDL .............................................................................. 81 \n\n4 RESULTADOS ........................................................................................................... 87 \n\n4.1 ALGORITMO EMBARCADO .................................................................................. 104 \n\n4.2 AN\u00c1LISE DE RESULTADOS NA CONFIGURA\u00c7\u00c3O DE FILTRO EMBARCADO .............. 106 \n\n4.2.1 RESULTADOS OBTIDOS COM OS PHANTOMS DE CALIBRA\u00c7\u00c3O ................................. 107 \n\n4.2.2 RESULTADOS OBTIDOS COM AMOSTRAS DE SOLOS AGR\u00cdCOLAS .............................. 127 \n\n5 CONCLUS\u00c3O ........................................................................................................... 145 \n\n5.1 TRABALHOS FUTUROS ........................................................................................ 148 \n\n \n\n\n\n \n\n \n\n  \n\n  \n\n\n\n15 \n\n \n\n1 INTRODU\u00c7\u00c3O \n \n\n \n\nTomografia de solos tem como objetivo investigar propriedades como \n\ntransporte de \u00e1gua e solutos, porosidade e densidade, bem como a intera\u00e7\u00e3o solo-\n\nplanta com base na an\u00e1lise de imagens reconstru\u00eddas a partir das proje\u00e7\u00f5es (sinais) \n\nobtidas de amostras. As primeiras aplica\u00e7\u00f5es de tomografia da ci\u00eancia do solo foram \n\ndiscutidas no in\u00edcio da d\u00e9cada de 1980, por f\u00edsicos e engenheiros\n1-3\n\n.  \n\nO desenvolvimento sistematizado da tomografia computadorizada aplicada \u00e0 \n\nf\u00edsica de solos no Brasil originou-se de parceria e colabora\u00e7\u00e3o entre o Centro \n\nNacional de Pesquisa e Desenvolvimento de Instrumenta\u00e7\u00e3o Agropecu\u00e1ria \n\n(CNPDIA), do Instituto de F\u00edsica de S\u00e3o Carlos (IFSC), da Universidade de \n\nCampinas (Unicamp), da Universidade de S\u00e3o Paulo (USP) e do Departamento de \n\nComputa\u00e7\u00e3o da Universidade Federal de S\u00e3o Carlos (UFSCar)\n4-12\n\n. Al\u00e9m destas \n\ninstitui\u00e7\u00f5es, projetos neste segmento tem contado  com a parceria de Universidades \n\nItalianas e Americanas, o que vem promovendo a elabora\u00e7\u00e3o de contribui\u00e7\u00f5es \n\npioneiras\n3,13-15\n\n. \n\nEste trabalho de pesquisa baseado em arquiteturas reconfigur\u00e1veis e \n\ntomografia aplicada \u00e0 ci\u00eancia dos solos v\u00eam sendo desenvolvido junto ao Programa \n\nde P\u00f3s-Gradua\u00e7\u00e3o em F\u00edsica Computacional do IFSC e o INCT-SEC\na\n, que \u00e9 \n\ncoordenado pelo Instituto de Ci\u00eancias Matem\u00e1ticas e de Computa\u00e7\u00e3o (ICMC) com o \n\nCNPDIA.  O Programa de P\u00f3s-Gradua\u00e7\u00e3o em F\u00edsica Computacional investe em \n\ninova\u00e7\u00e3o tecnol\u00f3gica atrav\u00e9s de pesquisas cient\u00edficas ligadas \u00e0 modelagem \n\ncomputacional de problemas f\u00edsicos que visam analisar e desenvolver teorias, \n\ncriando modelos capazes de explicar tais fen\u00f4menos f\u00edsicos.  \n\n Neste contexto, \u00e9 apresentado o desenvolvimento de  uma nova abordagem \n\npara o uso do filtro de Kalman com redes neurais artificiais embarcado para filtragem  \n\nde proje\u00e7\u00f5es tomogr\u00e1ficas da ci\u00eancia do solo que viabiliza a minimiza\u00e7\u00e3o das \n\nincertezas do processo aleat\u00f3rio da contagem de f\u00f3tons\n16\n\n. Esta pesquisa \u00e9 pioneira, \n\numa vez que o filtro de Kalman estruturado em uma arquitetura reconfigur\u00e1vel obt\u00e9m \n\naprendizado em tempo real, sem necessidade de treinamento pr\u00e9vio, sendo assim \n\num novo modelo baseado na f\u00edsica do processo de obter-se proje\u00e7\u00f5es com maior \n\n                                            \na\n INCT-SEC \u2013 Instituto Nacional de Ci\u00eancia e Tecnologia em Sistemas Embarcados Cr\u00edticos  \n\n\n\n16 \n\n \n\n  \n\nqualidade que levam em conta a intera\u00e7\u00e3o de f\u00f3tons com a mat\u00e9ria em dada energia \n\npara aux\u00edlio \u00e0 an\u00e1lise que envolve processos din\u00e2micos da ci\u00eancia do solo. \n\nEste texto est\u00e1 organizado em cinco cap\u00edtulos sendo o primeiro uma \n\nintrodu\u00e7\u00e3o \u00e0 tomografia computadorizada aplicada \u00e0 ci\u00eancia do solo, o segundo \n\naborda sobre computa\u00e7\u00e3o reconfigur\u00e1vel, o terceiro sobre os materiais e m\u00e9todos \n\npara o desenvolvimento de um filtro de Kalman embarcado para tomografia \n\ncomputadorizada aplicada \u00e0 f\u00edsica dos solos, o quarto sobre os resultados obtidos \n\nat\u00e9 o presente momento e o quinto sobre as considera\u00e7\u00f5es finais, conclus\u00e3o e \n\ntrabalhos futuros.  \n\n \n\n \n\n1.1  TOMOGRAFIA COMPUTADORIZADA APLICADA A SOLOS \n \n\n \n\nO uso do solo para a agricultura tem se tornado cada vez mais o foco das \n\ndiscuss\u00f5es no cen\u00e1rio mundial. Isso se deve \u00e0s preocupa\u00e7\u00f5es com as mudan\u00e7as do \n\nclima e as consequ\u00eancias na produ\u00e7\u00e3o de alimentos para um mundo cada vez mais \n\npopuloso. O uso eficiente do solo objetiva suprir as necessidades de uma produ\u00e7\u00e3o \n\nque tende a tornar-se cada vez mais escassa. A agricultura \u00e9 a atividade que mais \n\nafeta o meio ambiente, seja pela grande quantidade de \u00e1gua usada ou pela imensa \n\nquantidade de insumos agr\u00edcolas que s\u00e3o aplicados sobre o solo\n18\n\n. O uso desses \n\nrecursos acaba por degradar os recursos h\u00eddricos. Estima-se que cerca de 75% do \n\nconsumo de \u00e1gua pelo homem \u00e9 utilizado para a agricultura\n19\n\n.  \n\nA atividade agr\u00edcola ocupa extensas \u00e1reas com monoculturas ou com uma \n\npequena variedade de esp\u00e9cies, fazendo com que haja uma prolifera\u00e7\u00e3o \n\ndescontrolada de insetos e pragas microbianas, provocadas principalmente pela \n\nquebra da cadeia alimentar de um ecossistema equilibrado.  \n\nPara combater os problemas de pragas, s\u00e3o aplicados milh\u00f5es de toneladas \n\nde pesticidas sobre as culturas de todo o mundo. Esse tipo de a\u00e7\u00e3o faz com que a \n\nsa\u00fade humana esteja em risco devido \u00e0 presen\u00e7a de tais pesticidas na \u00e1gua e no ar.  \n\nA contamina\u00e7\u00e3o das \u00e1guas pelos pesticidas ocorre de duas maneiras: \n\nescorrimento superficial para os rios e corpos de d\u2019\u00e1gua e percola\u00e7\u00e3o\nb\n profunda no \n\nsolo at\u00e9 atingir as \u00e1guas subterr\u00e2neas. Atrav\u00e9s do conhecimento dos mecanismos \n\n                                            \nb\n Percola\u00e7\u00e3o se refere ao movimento e filtragem de flu\u00eddos por materiais porosos. \n\n\n\n17 \n\n \n\nde transporte do soluto na regi\u00e3o n\u00e3o-saturada do solo pode-se otimizar a aplica\u00e7\u00e3o \n\ndos insumos agr\u00edcolas para a minimiza\u00e7\u00e3o dos efeitos prejudiciais ao reservat\u00f3rios \n\nh\u00eddricos naturais\n17\n\n.  \n\nA movimenta\u00e7\u00e3o de \u00e1gua e solutos no solo depende diretamente da \n\ncaracter\u00edstica do mesmo. As caracter\u00edsticas s\u00e3o ligadas \u00e0 capacidade de absor\u00e7\u00e3o \n\ndo solo, presen\u00e7a de macroporos, da quantidade de mat\u00e9ria org\u00e2nica presente no \n\nsolo, solubilidade das subst\u00e2ncias presentes e permeabilidade do solo. Em regi\u00f5es \n\nonde o solo \u00e9 arenoso e perme\u00e1vel, a infiltra\u00e7\u00e3o da \u00e1gua no solo \u00e9 mais intensa do \n\nque o escorrimento superficial\n20\n\n. \n\nOs poros grandes presentes no solo contribuem para a penetra\u00e7\u00e3o de ra\u00edzes, \n\ntrocas gasosas e presen\u00e7a da \u00e1gua no volume do solo. Quanto maior a densidade \n\nde macroporos, mais as ra\u00edzes podem se espalhar pelo solo e quanto mais \n\ncont\u00ednuos os macroporos, mais livremente os gases podem realizar trocas com a \n\natmosfera. Macroporos tamb\u00e9m permitem que haja uma infiltra\u00e7\u00e3o direta de \u00e1gua e \n\ntransporte de solutos nos poros. O tamanho da abertura dos macroporos est\u00e1 ligado \n\ndiretamente ao crescimento da planta, tendo um papel mais importante que a pr\u00f3pria \n\nporosidade\n20\n\n. \n\nO manejo do solo tamb\u00e9m exerce um papel importante na f\u00edsica de transporte \n\nde \u00e1gua do solo. O plantio direto \u00e9 usado para minimizar perdas de solo e \u00e1gua pela \n\na\u00e7\u00e3o do escorrimento superficial. Ele visa diminuir o impacto da agricultura e das \n\nm\u00e1quinas agr\u00edcolas sobre o mesmo. \n\nNo plantio direto, a palha e os demais restos vegetais de outras culturas s\u00e3o \n\nmantidos na superf\u00edcie do solo, garantindo cobertura e prote\u00e7\u00e3o do mesmo contra \n\nprocessos danosos, tais como a eros\u00e3o. O solo s\u00f3 \u00e9 manipulado no momento do \n\nplantio, quando \u00e9 aberto um sulco onde s\u00e3o depositadas sementes e fertilizantes. \n\nN\u00e3o existe, al\u00e9m do supracitado, nenhum m\u00e9todo de preparo do solo. O mais \n\nimportante controle que se d\u00e1 nesse modo de cultivo \u00e9 o das plantas daninhas, \n\natrav\u00e9s do manejo integrado de pragas, doen\u00e7as em geral e plantas infestantes. \n\nTamb\u00e9m \u00e9 muito importante para o sucesso do sistema que seja utilizada a rota\u00e7\u00e3o \n\nde culturas. \n\nO plantio direto tamb\u00e9m garante a presen\u00e7a de macroporos devido \u00e0 mat\u00e9ria \n\norg\u00e2nica incorporada, maior presen\u00e7a de minhocas e atividades biol\u00f3gicas mais \n\nintensas. J\u00e1 no plantio convencional, a maior exposi\u00e7\u00e3o do solo ao impacto direto da \n\nchuva causa o selamento superficial do solo, provocando escorrimento superficial e \n\n\n\n18 \n\n \n\n  \n\neros\u00e3o. Outros fatores s\u00e3o o uso de m\u00e1quinas agr\u00edcolas de grande porte que \n\npromovem a compacta\u00e7\u00e3o do solo, eliminando os macroporos.  \n\nA ci\u00eancia tem razo\u00e1vel dom\u00ednio sobre os estudos de solos saturados\nc\n e na \n\nregi\u00e3o n\u00e3o saturada, que \u00e9 um horizonte agricult\u00e1vel na maioria das culturas. Nesta \n\nregi\u00e3o ocorrem processos biol\u00f3gicos, rea\u00e7\u00f5es qu\u00edmicas e concentra\u00e7\u00e3o vari\u00e1vel de \n\nmassa e umidade. Antes, a preocupa\u00e7\u00e3o era resolver problemas espec\u00edficos para \n\naumentar a produtividade. Hoje j\u00e1 se busca encontrar um equil\u00edbrio entre agricultura \n\ne manejo sustent\u00e1vel do ecossistema\n19\n\n. \n\nPesquisadores da ci\u00eancia do solo t\u00eam colaborado com pesquisadores de \n\noutras \u00e1reas do conhecimento com objetivo de melhor caracterizar as propriedades \n\ndo solo. Os resultados dessas colabora\u00e7\u00f5es t\u00eam provido uma melhor qualidade de \n\nvida. O uso desses resultados na agricultura vem sendo aplicado atrav\u00e9s de \n\ndiversas atividades que direcionam a uma melhor base para o uso dos recursos \n\nnaturais que podem ser utilizados de forma sustent\u00e1vel\n20\n\n.  \n\nNeste contexto, t\u00e9cnicas avan\u00e7adas t\u00eam sido utilizadas para encontrar \n\nrespostas a variados mecanismos f\u00edsicos e qu\u00edmicos que ocorrem nos solos. Entre \n\nelas incluem o uso de sonda de n\u00eautrons, gravimetria, transmiss\u00e3o diretas de raios \n\nX, microscopia e intrus\u00e3o de merc\u00fario, tomografia de raios X, resson\u00e2ncia magn\u00e9tica \n\nnuclear, entre outras\n21,22\n\n. O uso da Tomografia Computadorizada (TC) de raios X e \n\ngama, bem como da resson\u00e2ncia magn\u00e9tica nuclear, pode permitir a an\u00e1lise n\u00e3o \n\ninvasiva o que \u00e9 desej\u00e1vel para a obten\u00e7\u00e3o de medidas sem perturba\u00e7\u00e3o do \n\nambiente. Estas t\u00e9cnicas fornecem como resultados imagens digitais as quais \n\npodem auxiliar na recomenda\u00e7\u00e3o de diagn\u00f3sticos e progn\u00f3sticos para o ambiente \n\nf\u00edsico observado.  \n\nA TC \u00e9 utilizada para estudar a influ\u00eancia da estrutura f\u00edsica do solo nos \n\nmecanismos de transporte de \u00e1gua no solo\n20\n\n. Perret e colaboradores estudaram \n\numa estrutura do solo como uma rede de poros em 3 dimens\u00f5es e utilizaram a TC \n\npara estudo de fluxo preferencial em solos.  \n\nOs primeiros resultados de an\u00e1lise de TC no Brasil foram obtidos com \n\ntom\u00f3grafos m\u00e9dicos, contudo o pre\u00e7o e as dificuldades envolvidas com a calibra\u00e7\u00e3o \n\nde tais equipamentos fizeram o seu uso invi\u00e1vel para pesquisa aplicada em f\u00edsica de \n\n                                            \nc\n O grau de satura\u00e7\u00e3o de uma amostra de solo \u00e9 definido pela raz\u00e3o entre volume de \u00e1gua e \n\nvolume vazio. O volume vazio, por sua vez \u00e9 definido pela diferen\u00e7a entre o volume s\u00f3lido e \n\nvolume total. \n\n\n\n19 \n\n \n\nsolos. Uma solu\u00e7\u00e3o para esse problema foi o desenvolvimento de tom\u00f3grafos mais \n\nbaratos de primeira gera\u00e7\u00e3o, projetados exclusivamente para uso de pesquisas em \n\nagricultura. Cruvinel, um engenheiro e cientista da Embrapa/CNPDIA situada em \n\nS\u00e3o Carlos, S\u00e3o Paulo, construiu pela primeira vez um tom\u00f3grafo para aplica\u00e7\u00f5es \n\nem ci\u00eancia do solo.  \u00c9 importante mencionar que esta contribui\u00e7\u00e3o pioneira usando \n\nTC de raios X e gama na ci\u00eancia do solo foram consequ\u00eancias do uso de radia\u00e7\u00e3o \n\ngama na medida de densidades de torr\u00e3o de solo e conte\u00fado de \u00e1gua em amostras \n\nde solo. \n\nA TC tem como desafio melhorar a qualidade das imagens, o que \u00e9 um dos \n\nprincipais requisitos para sua an\u00e1lise, sendo desej\u00e1vel que as mesmas estejam bem \n\npr\u00f3ximas da representa\u00e7\u00e3o das amostras que foram ensaiadas. Neste contexto, o \n\nuso de algoritmos desenvolvidos para outras \u00e1reas do conhecimento humano tem \n\ncrescido consideravelmente e as t\u00e9cnicas de processamento de imagens t\u00eam \n\nauxiliado significantemente na melhoria da informa\u00e7\u00e3o visual utilizada na an\u00e1lise e \n\ninterpreta\u00e7\u00e3o ou percep\u00e7\u00e3o autom\u00e1tica realizada com o auxilio dos computadores. \n\nTais aspectos envolvem: \n\n? O modelamento do funcionamento do olho humano;  \n\n? Estudo de transformadas de imagens, como a Transformada de Fourier, \n\nwavelets e espectro de pot\u00eancia. \n\n? A aplica\u00e7\u00e3o de filtros que visem recuperar informa\u00e7\u00f5es e conhecimento \n\npresente em imagem buscando ampliar as oportunidades do uso das t\u00e9cnicas \n\ndo processamento de imagens. \n\n?  Compress\u00e3o de imagens e formula\u00e7\u00e3o de novas bases cognitivas.  \n\n? Segmenta\u00e7\u00e3o de imagens, para detec\u00e7\u00e3o de bordas, de primitivas, de linhas \n\ne descontinuidade para sua an\u00e1lise;  \n\n? Reconhecimento e interpreta\u00e7\u00e3o de imagens, como t\u00e9cnicas de an\u00e1lise \n\nbaseada em redes neurais, com o prop\u00f3sito de reconhecer padr\u00f5es e suas \n\ncaracter\u00edsticas.  \n\nUma imagem de boa qualidade permite observar dados que podem ser \n\nfundamentais para a aplica\u00e7\u00e3o de algum processamento digital\n23\n\n. Dentro desse \n\nprinc\u00edpio, parte essencial desse trabalho tem como objetivo a melhoria da qualidade \n\nde imagens tomogr\u00e1ficas de raios X filtrando os sinais obtidos antes da sua \n\nreconstru\u00e7\u00e3o. \n\n\n\n20 \n\n \n\n  \n\nNa Embrapa Instrumenta\u00e7\u00e3o foram projetados e constru\u00eddos tom\u00f3grafos \n\ndedicados \u00e0 aplica\u00e7\u00e3o agr\u00edcola, tal como se pode observar na Figura 1\n12,17,24-25\n\n. \n\n \n\n \n\nFigura 1 - Tom\u00f3grafos desenvolvidos na Embrapa Instrumenta\u00e7\u00e3o: (a) \nMinitom\u00f3grafo desenvolvido para aplica\u00e7\u00f5es agr\u00edcolas\n\n12\n. (b) \n\nTom\u00f3grafo port\u00e1til de transmiss\u00e3o direta de raios X para uso em \ncampo\n\n17\n. (c) Tom\u00f3grafo com micro precis\u00e3o\n\n24\n. (d) Tom\u00f3grafo de \n\nespalhamento Compton\n25\n\n. \n\nA qualidade das imagens tomogr\u00e1ficas influencia na classifica\u00e7\u00e3o de \n\nprimitivas morfol\u00f3gicas presentes no solo e que impacta na an\u00e1lise da porosidade, \n\nda densidade e de \u00edndices de compacta\u00e7\u00e3o. Tais primitivas afetam o aumento da \n\nprodu\u00e7\u00e3o agr\u00edcola e a preserva\u00e7\u00e3o do solo. A classifica\u00e7\u00e3o possibilita  o uso de \n\nferramentas de processamento de imagens para caracteriza\u00e7\u00e3o dos fen\u00f4menos \n\nf\u00edsicos, tais como o movimento de solutos e \u00e1gua, forma\u00e7\u00e3o de poros, texturas e \n\ndistribui\u00e7\u00e3o de ra\u00edzes\n3\n. Aliada ao desenvolvimento de t\u00e9cnicas de an\u00e1lise,  modelos \n\nforam desenvolvidos visando \u00e0 melhoria e a precis\u00e3o das imagens, nos resultados \n\nde algoritmos de reconstru\u00e7\u00e3o, al\u00e9m do desenvolvimento de ferramentas \n\ncomputacionais para ajudar os usu\u00e1rios na extra\u00e7\u00e3o de informa\u00e7\u00f5es\n5-11\n\n. \n\nCom base na intensidade de f\u00f3tons emitida por uma fonte de raios X e gama, \n\nbem como na intensidade captada por um detector na outra extremidade da reta de \n\npropaga\u00e7\u00e3o, pode-se determinar o peso da atenua\u00e7\u00e3o devido ao objeto que se faz \n\npresente entre a fonte e o detector. O peso da atenua\u00e7\u00e3o \u00e9 um dado crucial para o \n\n\n\n21 \n\n \n\nprocesso de reconstru\u00e7\u00e3o, o qual possibilita obter um mapa de coeficientes de \n\natenua\u00e7\u00e3o linear da sec\u00e7\u00e3o transversal do objeto, como pode ser visto na Figura 2. \n\n \n\nFigura 2 - Processo de estabelecimento de uma proje\u00e7\u00e3o tomogr\u00e1fica. \n\nUm tomografia computadorizado 2D gera uma imagem reconstru\u00edda das \n\nproje\u00e7\u00f5es obtidas numa s\u00e9rie de emiss\u00f5es de raios X, em diferentes \u00e2ngulos, que \n\nconsiste numa se\u00e7\u00e3o transversal (uma \u201cfatia\u201d) do objeto em estudo\n11\n\n. \n\nA imagem resultante proporciona um mapa de coeficientes de atenua\u00e7\u00e3o \n\nlinear de raios X, os quais s\u00e3o representados atrav\u00e9s de pixels cujos valores s\u00e3o \n\ndados em n\u00fameros CT \u2013 Computerized Tomography. Esses n\u00fameros s\u00e3o \n\nnormalizados em fun\u00e7\u00e3o do coeficiente de atenua\u00e7\u00e3o da \u00e1gua     , sendo definidos \n\ncomo: \n\n \n\n           \n           \n\n    \n          (1) \n\n \n\nonde \u00b5(x,y) representa o coeficiente de atenua\u00e7\u00e3o linear de raios X no pixel do corpo \n\nsob estudo. \n\nLargamente utilizada nas \u00e1reas m\u00e9dicas, a tomografia computadorizada teve \n\nseu uso em ci\u00eancia do solo introduzido por Petrovic, Hainsworth e Aylmore e por \n\n\n\n22 \n\n \n\n  \n\nCrestana\n1-3\n\n. Petrovic demonstrou a possibilidade de usar um tom\u00f3grafo \n\ncomputadorizado de raios X para medir a densidade de volumes de solos, j\u00e1 \n\nHainsworth e Aylmore verificaram a distribui\u00e7\u00e3o espacial de \u00e1gua no solo, enquanto \n\nCrestana demonstrou que a TC pode solucionar problemas de estudos da f\u00edsica da \n\n\u00e1gua no solo, atrav\u00e9s das medidas do potencial m\u00e1trico da \u00e1gua no solo realizadas \n\natrav\u00e9s dos tensi\u00f4metros instalados em v\u00e1rias profundidades e da curva de reten\u00e7\u00e3o \n\nde \u00e1gua no solo foi poss\u00edvel medir os respectivos valores de umidade. Utilizando \n\ncurvas de calibra\u00e7\u00e3o do tom\u00f3grafo para o solo estudado foi poss\u00edvel medir os \n\nvalores de densidade global do solo considerando conhecidos os valores de \n\numidade. \n\n  \n\n \n\n1.2  HIST\u00d3RICO DA TOMOGRAFIA COMPUTADORIZADA \n \n\n \n\nEm 1917, o matem\u00e1tico austr\u00edaco Radon foi o primeiro a apresentar uma \n\nsolu\u00e7\u00e3o matem\u00e1tica das equa\u00e7\u00f5es de reconstru\u00e7\u00e3o de corpos a partir de proje\u00e7\u00f5es, \n\ndeterminando a fun\u00e7\u00e3o distribui\u00e7\u00e3o de densidade da regi\u00e3o estudada atrav\u00e9s delas, \n\nno campo da gravita\u00e7\u00e3o\n26\n\n. \n\nBracewell, em 1946, utilizou a reconstru\u00e7\u00e3o tomogr\u00e1fica para construir um \n\nmapa das regi\u00f5es solares emissoras de micro-ondas, pois naquela \u00e9poca as \n\nantenas de micro-ondas existentes permitiam focalizar apenas pequenas faixas da \n\nsuperf\u00edcie solar\n27\n\n.  \n\nO embri\u00e3o da tomografia reconstrutiva de raios X pode ser encontrado nos \n\ntrabalhos de Takahashi em 1957, onde uma fonte de raios X e um filme foram \n\ncolocados em um mesmo plano\n28\n\n.  \n\nEm 1963, Cormack, professor de F\u00edsica da University of Cape Town, \n\ndesenvolveu a t\u00e9cnica matem\u00e1tica para reconstruir imagens utilizando o m\u00e9todo da \n\nretroproje\u00e7\u00e3o\n29\n\n. Ele havia sido solicitado para supervisionar o uso de is\u00f3topos \n\nradioativos no Groote Schuur Hospital devido \u00e0 demiss\u00e3o do f\u00edsico do hospital. \n\nDurante algumas semanas o pesquisador trabalhou com os is\u00f3topos radioativos e \n\nacompanhou tratamentos de radioterapia. Com base em experimentos e \n\nobserva\u00e7\u00f5es, ele formulou uma matriz de coeficientes de atenua\u00e7\u00e3o linear de raios X \n\npara cortes seccionais que poderia ser obtida pela medida da transmiss\u00e3o de raios X \n\n\n\n23 \n\n \n\nem v\u00e1rios \u00e2ngulos atrav\u00e9s de um corpo com a obten\u00e7\u00e3o de imagens de se\u00e7\u00f5es \n\ntransversais. Seu estudo foi decisivo para a reconstru\u00e7\u00e3o das se\u00e7\u00f5es a partir de um \n\nn\u00famero finito de proje\u00e7\u00f5es estudadas.  \n\nEm aplica\u00e7\u00f5es m\u00e9dicas, o primeiro tom\u00f3grafo computadorizado de raios X de \n\ncar\u00e1ter comercial foi apresentado em 1973, pela EMI Ltda., tendo sido desenvolvido \n\npelo engenheiro Hounsfield, causando um grande impacto para os diagn\u00f3sticos \n\nm\u00e9dicos\n30\n\n.  \n\n \n\n \n\n1.3  INCERTEZAS EM MEDIDAS TOMOGR\u00c1FICAS \n \n\n \n\nBasicamente, uma TC indica a quantidade de radia\u00e7\u00e3o absorvida por cada \n\npor\u00e7\u00e3o da se\u00e7\u00e3o analisada e traduz essas varia\u00e7\u00f5es numa escala de tons de cinza \n\nem uma imagem. Como a capacidade de absor\u00e7\u00e3o de raios X de um material est\u00e1 \n\nintimamente relacionada com a sua densidade, diferentes medidas s\u00e3o \n\napresentadas. Deste modo, cada valor do sinal corresponde \u00e0 m\u00e9dia da absor\u00e7\u00e3o \n\ndos materiais nessa zona, expresso em Unidades de Hounsfield. A principal \n\nvantagem da TC \u00e9 permitir o estudo de sec\u00e7\u00f5es transversais de materiais de forma \n\nn\u00e3o invasiva. \n\nPara TCs, devido \u00e0 faixa de energia utilizada, h\u00e1 tr\u00eas principais efeitos de \n\nintera\u00e7\u00e3o da radia\u00e7\u00e3o com a mat\u00e9ria que podem ser considerados. S\u00e3o eles o efeito \n\nfotoel\u00e9trico, o efeito Compton e o efeito de produ\u00e7\u00e3o de pares\n15\n\n. Al\u00e9m das quest\u00f5es \n\nrelacionadas aos efeitos mencionados, h\u00e1 outras quest\u00f5es que influenciam a \n\nmedi\u00e7\u00e3o em tomografia computadorizada. Dentre elas, encontram-se a estat\u00edstica da \n\ncontagem de f\u00f3tons (efeito de Poisson) e os ru\u00eddos devidos aos equipamentos \n\nmec\u00e2nicos e eletr\u00f4nicos utilizados.  \n\nA probabilidade de detec\u00e7\u00e3o de f\u00f3tons em um intervalo de tempo de \n\nexposi\u00e7\u00e3o t pode ser estimada pela fun\u00e7\u00e3o de distribui\u00e7\u00e3o de probabilidade de \n\nPoisson\n31\n\n, dada por\n     \n\n \n\n         \n     \n\n     \n      (2) \n\n \n\n\n\n24 \n\n \n\n  \n\nonde   \u00e9 o n\u00famero de f\u00f3tons e    \u00e9 a medida de fotoel\u00e9trons emitidos no intervalo de \n\ntempo t, dados por: \n\n                   (3) \n\n \n\nonde M \u00e9 a raz\u00e3o m\u00e9dia de f\u00f3tons (f\u00f3tons/segundo) e ? \u00e9 a efici\u00eancia qu\u00e2ntica do \n\ndetector. A incerteza (ou ru\u00eddo) \u00e9 dada pelo desvio padr\u00e3o \n\n \n\n          .      (4) \n\n \n\nLogo a rela\u00e7\u00e3o sinal-ru\u00eddo, SNR, apresentada pelo sinal incidente pode ser \n\ndada por: \n\n \n\n    \n   \n\n    \n \n\n  \n\n \n         .      (5) \n\n \n\nDesta rela\u00e7\u00e3o \u00e9 avaliado que para um n\u00famero pequeno de f\u00f3tons, o ru\u00eddo \n\npode ser consider\u00e1vel, por\u00e9m com o seu aumento, o ru\u00eddo pode vir a ser \n\ndesprez\u00edvel. Para uma fotomultiplicadora, por exemplo, a emiss\u00e3o de el\u00e9trons \n\ntermi\u00f4nicos no fotoc\u00e1todo causa um aumento nesse tipo de ru\u00eddo. Considerando que \n\no fotoc\u00e1todo emite el\u00e9trons aleatoriamente em raz\u00e3o da corrente de c\u00e1todo \n\nincrementado de:  \n\n \n\n                  (6) \n\n \n\npode-se estabelecer uma nova rela\u00e7\u00e3o sinal-ru\u00eddo que \u00e9 dada pela express\u00e3o por: \n\n \n\n    \n    \n\n     \n.                (7) \n\n \n\nEm geral, a visualiza\u00e7\u00e3o de uma imagem tomogr\u00e1fica \u00e9 acompanhada pela \n\npresen\u00e7a de granulosidade, que \u00e9 significante para visualiza\u00e7\u00e3o de objetos de baixo \n\ncontraste. O termo ru\u00eddo em imagens tomogr\u00e1ficas refere-se \u00e0 varia\u00e7\u00e3o dos \n\ncoeficientes de atenua\u00e7\u00e3o linear sobre o valor m\u00e9dio quando uma imagem \u00e9 obtida \n\n\n\n25 \n\n \n\nde um objeto uniforme. O ru\u00eddo na imagem pode ser baseado no c\u00e1lculo do desvio \n\npadr\u00e3o e tamb\u00e9m no espectro de pot\u00eancia de Wiener, o qual \u00e9 visualizado como \n\numa fun\u00e7\u00e3o da frequ\u00eancia espacial que permite observar a intensidade e o tipo de \n\nru\u00eddo envolvendo o sistema tomogr\u00e1fico como um todo. \n\nO ru\u00eddo presente nas imagens TC inclui: (a) erros de arredondamento que \n\nocorrem no algoritmo de reconstru\u00e7\u00e3o, (b) ru\u00eddo eletr\u00f4nico e (c) ru\u00eddo causado pelo \n\nsistema de visualiza\u00e7\u00e3o. Entretanto, a principal fonte de ru\u00eddo em imagens TC ocorre \n\ndevido \u00e0 varia\u00e7\u00e3o qu\u00e2ntica (quantus mottle), causado pela varia\u00e7\u00e3o estat\u00edstica \n\nespacial e temporal no n\u00famero de f\u00f3tons de raios X emitidos pela fonte. O ru\u00eddo \n\ndecorrente do algoritmo computacional depende do tamanho do pixel do dispositivo \n\nde visualiza\u00e7\u00e3o e tamb\u00e9m influencia o ru\u00eddo da imagem, assim, maiores pixels levam \n\na uma redu\u00e7\u00e3o do ru\u00eddo na imagem, por\u00e9m com perda na resolu\u00e7\u00e3o. Algoritmos de \n\nreconstru\u00e7\u00e3o normalmente utilizam filtros de suaviza\u00e7\u00e3o que minimizam o efeito \n\nvisual do ru\u00eddo, acompanhado de alguma perda na resolu\u00e7\u00e3o espacial. O ru\u00eddo \n\neletr\u00f4nico pode ter origem em dispositivos eletr\u00f4nicos n\u00e3o ideais, tais como \n\nresistores e capacitores n\u00e3o puros, terminais de contatos n\u00e3o ideais, corrente de \n\nfuga de transistores, efeito Joule, podendo ser tamb\u00e9m independente do sinal, como \n\ninterfer\u00eancia externa (el\u00e9trica ou at\u00e9 mesmo mec\u00e2nica)\n32\n\n. \n\nFazer medidas discretas dos dados obtidos em diferentes sensores, que \n\npodem ser encontrados em dispositivos embarcados se torna uma tarefa que requer \n\ncuidados devido \u00e0 necessidade de minimizar imprecis\u00f5es das medidas. \n\nArredondamentos e truncamentos computacionais s\u00e3o os mais dif\u00edceis de serem \n\ngerenciados devido aos finitos recursos dos processadores.  \n\nDispositivos embarcados apresentam uma nota\u00e7\u00e3o num\u00e9rica adequada, \n\nainda que imperfeita, devido \u00e0 aproxima\u00e7\u00e3o de n\u00fameros que devem ser \n\nrepresentados como no caso de n\u00fameros irracionais. As aproxima\u00e7\u00f5es podem ser \n\naceitas em casos normais de opera\u00e7\u00e3o, mas para sistemas cr\u00edticos n\u00e3o podem ser \n\nsuficientemente precisas.  \n\nAs incertezas podem transformar os dados desejados de bons para ruidosos, \n\neliminando a precis\u00e3o necess\u00e1ria para alguma opera\u00e7\u00e3o cr\u00edtica. Al\u00e9m dos ru\u00eddos, as \n\nimagens de TC est\u00e3o sujeitas a diversos artefatos e distor\u00e7\u00f5es como fontes com \n\nenergias policrom\u00e1ticas, atribu\u00eddos pelos efeitos conhecidos como endurecimento do \n\nfeixe (beam hardening), diferentes materiais em um mesmo voxel (volume parcial), \n\n\n\n26 \n\n \n\n  \n\nbem como devido ao deslocamento mec\u00e2nico indesej\u00e1vel da amostra ou do \n\nequipamento de posicionamento\n33-35\n\n. \n\n \n\n \n\n1.4  TRABALHOS RELACIONADOS \n \n\n \n\nA base da filtragem de dados provenientes de TC foi desenvolvida a partir da \n\nconstru\u00e7\u00e3o do minitom\u00f3grafo com  a colabora\u00e7\u00e3o de Cruvinel, em 1987\n12\n\n. V\u00e1rios \n\noutros trabalhos com o objetivo de melhorar a qualidade da imagens obtidas tem \n\nsido orientados no grupo de instrumenta\u00e7\u00e3o da Embrapa em parceria com a \n\nUniversidade Federal de S\u00e3o Carlos e Instituto de F\u00edsica de S\u00e3o Carlos \n\n(Universidade de S\u00e3o Paulo). \n\nEm 1989, Vaz, orientado pelo Dr. Silvio Crestana da Embrapa Instrumenta\u00e7\u00e3o, \n\nusou a t\u00e9cnicas de TC aplicadas \u00e0 compacta\u00e7\u00e3o de solo em sua disserta\u00e7\u00e3o de \n\nmestrado\n20\n\n.  \n\nFuruie, em 1990, abordou em seu trabalho de doutorado a reconstru\u00e7\u00e3o \n\ntomogr\u00e1fica de imagens com ru\u00eddo Poisson, fazendo estimativas das proje\u00e7\u00f5es\n36\n\n.  \n\nNo ano seguinte, Portal fez um refinamento dos m\u00e9todos de estima\u00e7\u00e3o das \n\nproje\u00e7\u00f5es para a recontru\u00e7\u00e3o das imagens afetadas pelo ru\u00eddo Poisson\n37\n\n.  \n\nEm 1994, Ribeiro abordou em sua disserta\u00e7\u00e3o de mestrado sobre o \n\ndesenvolvimento algoritmos de reconstru\u00e7\u00e3o em 3D das proje\u00e7\u00f5es tomogr\u00e1ficas\n5\n. \n\nTamb\u00e9m em 1994, C\u00e1ssaro fez um estudo  sobre o uso da tomografia de dupla \n\nenergia para caracterizar a deforma\u00e7\u00e3o de meio porosos sob diferentes graus de \n\nhidrata\u00e7\u00e3o\n38\n\n.  \n\nNaime, no mesmo ano, projetou e construiu um tom\u00f3grafo port\u00e1til para o \n\nestudo de plantas e solos\n17\n\n.  \n\nEm 1995, Venturini apresentou e desenvolveu t\u00e9cnicas para an\u00e1lise da \n\nqualidade das imagens tomogr\u00e1ficas com o uso do espectro de Wiener\n6\n.  \n\nBiassusi fez um estudo da expans\u00e3o e contra\u00e7\u00e3o de um vertissolo com o uso \n\nde tomografia computadorizada em 1996\n39\n\n. \n\nEm 1997, Macedo construiu um tom\u00f3grafo com resolu\u00e7\u00e3o microsc\u00f3pica para os \n\nestudos em ci\u00eancias do solo\n21\n\n. \n\n\n\n27 \n\n \n\nMinatel por sua vez, usou t\u00e9cnicas de filtros frequenciais e wavelets para a \n\nreconstru\u00e7\u00e3o das imagens tomogr\u00e1ficas, em 1997\n7\n.  \n\nGranato, em 1998,  trabalhou com filtros adaptativos para a melhoria das \n\nimagens ap\u00f3s a reconstru\u00e7\u00e3o\n8\n. \n\nGuerra tamb\u00e9m estudou a restaura\u00e7\u00e3o de imagens do minitom\u00f3grafo de \n\nan\u00e1lise de solos por t\u00e9cnicas de regulariza\u00e7\u00e3o enquanto Homem fez um estudo \n\nsobre t\u00e9cnicas de reconhecimento de padr\u00f5es aplicadas a imagens tomogr\u00e1ficas \n\nadquiridas em m\u00faltiplas energias. Ambos os trabalhos foram conclu\u00eddos em 1998 \n\nsob a orienta\u00e7\u00e3o do professor Dr. Nelson Mascarenhas\n40,41\n\n. \n\nEm 2001, Salina fez um estudo sobre a reconstru\u00e7\u00e3o tomogr\u00e1fica de imagens \n\nt\u00e9cnicas POCS sequenciais e paralelas\n42\n\n.  \n\nPereira, em 2002, desenvolveu um algoritmo paralelo para a reconstru\u00e7\u00e3o das \n\nproje\u00e7\u00f5es e em 2007 abordou o uso de filtragem nas imagens tanto quanto nas \n\nproje\u00e7\u00f5es antes da etapa de reconstru\u00e7\u00e3o com o uso do filtro de Wiener e prop\u00f4s o \n\nuso desses algoritmos implementados em DSPs (Processadores Digitais de Sinais) \n\nusando uma arquitetura paralela\n9,43\n\n.  \n\nNo mesmo ano, Laia desenvolveu para uso em desktop um filtro de Kalman e \n\nsuas extens\u00f5es mais comuns para filtragem de proje\u00e7\u00f5es tomogr\u00e1ficas\n10\n\n.  \n\nBotega, em 2008, desenvolveu um ambiente virtual para an\u00e1lise das imagens \n\nem 3D reconstru\u00eddas e utilizou filtros espaciais convencionais\n11\n\n.  \n\nEm 2009, Laia publicou um cap\u00edtulo de livro sobre o uso de filtro de Kalman \n\npara proje\u00e7\u00f5es tomogr\u00e1ficas da ci\u00eancia do solo com um modelo f\u00edsico mais pr\u00f3ximo \n\ndo real, comparando a efici\u00eancia do filtro sua vers\u00e3o n\u00e3o linear com o uso de redes \n\nneurais\n16\n\n.  \n\nRibeiro, em 2010, elaborou novas propostas em filtragem de proje\u00e7\u00f5es \n\ntomogr\u00e1ficas sob ru\u00eddo Poisson\n44\n\n. \n\nLaia, em 2011, fez uma valida\u00e7\u00e3o sobre o algoritmo do filtro de Kalman n\u00e3o \n\nlinear com redes neurais para ser embarcado e aplicado em amostras da ci\u00eancia dos \n\nsolos\n45\n\n.  \n\nEm 2012, Laia elaborou um estudo sobre um projeto para ser embarcado em \n\nFPGA (Field-Programmable Gate Array \u2013 Arranjo de Portas Program\u00e1veis em \n\nCampo) atrav\u00e9s de um c\u00f3digo HDL gerado pelo Matlab\n\u00ae46\n\n. \n\n\n\n28 \n\n \n\n  \n\n  \n\n\n\n29 \n\n \n\n2 COMPUTA\u00c7\u00c3O RECONFIGUR\u00c1VEL BASEADA EM FPGA \n \n\n \n\nAtualmente, computadores s\u00e3o usados em uma ampla gama de aplica\u00e7\u00f5es e \n\ncada vez mais t\u00eam se tornado essencial em todas as \u00e1reas de conhecimentos. A \n\nvantagem do uso de aplica\u00e7\u00f5es em computadores de uso geral \u00e9 a flexibilidade para \n\nalterar-se algoritmos cujas modifica\u00e7\u00f5es s\u00e3o facilmente incorporadas ao c\u00f3digo que \n\ndever\u00e1 ser executado. Um microprocessador, ap\u00f3s sua fabrica\u00e7\u00e3o como um Circuito \n\nIntegrado (CI), pode resolver tarefas computacionais que podem ser executadas em  \n\ntempos distintos, podendo inclusive extrapolar o uso previamente definido pelo seu \n\nprojetista.  \n\n\u00c1reas espec\u00edficas das engenharias e ci\u00eancias exatas possuem diferentes \n\nproblemas e complexidade que exigem grande demanda de recursos \n\ncomputacionais, os quais incluem o armazenamento, a recupera\u00e7\u00e3o, a transmiss\u00e3o \n\ne o processamento de informa\u00e7\u00f5es. Muitos desses problemas necessitam que as \n\nsolu\u00e7\u00f5es sejam obtidas em um pequeno intervalo de tempo ou at\u00e9 mesmo em tempo \n\nreal\n48\n\n. Von Neumann\nd\n demonstrou que sistemas com um \u00fanico processador faz com \n\nque o maior tempo gasto seja na leitura e na escrita de dados na mem\u00f3ria do que no \n\nuso de instru\u00e7\u00f5es para processamento, que na maioria das vezes, dependem de \n\nresultados anteriores que ainda n\u00e3o foram atualizados na mem\u00f3ria.  \n\nA evolu\u00e7\u00e3o da microeletr\u00f4nica permitiu o surgimento de dispositivos \n\neletr\u00f4nicos cada vez mais velozes, com maior capacidade de armazenamento de \n\ninforma\u00e7\u00f5es, menor consumo de energia e menores custos de fabrica\u00e7\u00e3o. O desafio \n\npara o projetista de arquitetura de computadores est\u00e1 em manter um padr\u00e3o de \n\nvelocidade para as opera\u00e7\u00f5es de novos sistemas mantendo suas generalidades\n49\n\n. \n\nProjetar processadores que atendam uma demanda de uso geral, com v\u00e1rias \n\ninstru\u00e7\u00f5es e amplos recursos de mem\u00f3ria, ainda se constitui em um desafio a ser \n\nvencido. \n\n                                            \nd\n A arquitetura de Von Neumann trata de estrutura computacional proposta pelo matem\u00e1tico \n\nem 1945. Ela descreve um computador com subdivis\u00f5es de uma unidade de processamentos \nque cont\u00e9m unidade de l\u00f3gica aritm\u00e9tica, registradores de processamento, unidade de \ncontrole contendo registradores de instru\u00e7\u00e3o e contador de programa, mem\u00f3ria externa e \nmecanismos de entrada e sa\u00edda\n\n47\n. \n\n\n\n30 \n\n \n\n  \n\n Novas solu\u00e7\u00f5es ainda s\u00e3o desenvolvidas para melhorar o tempo de resposta \n\ne o desempenho atrav\u00e9s de novas arquiteturas computacionais. Dentre elas se \n\ndestacam: \n\n? Software paralelo e arquiteturas paralelas de prop\u00f3sito geral50\n-54: \n\nO uso de software paralelo permite que aplicativos possam \n\ntrabalhar como de forma concorrente em arquiteturas paralelas. A \n\nvantagem sobre sistemas sequenciais \u00e9 a capacidade de dividir um \n\nproblema em pequenas partes, processar essas partes ao mesmo \n\ntempo para chegar a uma solu\u00e7\u00e3o em menor tempo do que se o \n\nproblema viesse a ser resolvido de forma sequencial. \n\n? Software distribu\u00eddo  e arquiteturas de prop\u00f3sito geral55\n,56: \n\nSistemas distribu\u00eddos permitem que cada processador na \n\narquitetura (presente em uma m\u00e1quina ou em v\u00e1rias m\u00e1quinas \n\ndispostas como um cluster, por exemplo) receba uma parte da tarefa.  \n\n? Software sequencial ou paralelo e arquiteturas dedicadas57\n,58: \n\nArquiteturas dedicadas s\u00e3o caracterizadas por terem um \n\nprocessamento limitado, somente trabalhando de forma efetiva com a \n\nfun\u00e7\u00e3o para a qual ela  foi constru\u00edda, n\u00e3o possuindo flexibilidade a \n\nfavor da robustez do sistema. O software \u00e9 usado para o uso \n\notimizado, podendo tanto ser sequencial quanto paralelo sendo \n\nbastante utilizado em sistemas embarcados\ne\n. \n\n? Hardware dedicado e fixo para aplica\u00e7\u00f5es espec\u00edficas59: \n\nHardware dedicado e fixo tamb\u00e9m \u00e9 utilizado em sistemas \n\nembarcados, principalmente em sistemas cujo custo em energia e \n\nresposta em tempo real s\u00e3o fundamentais. Esse tipo de sistema \u00e9 \n\nconstru\u00eddo com uma finalidade espec\u00edfica, podendo tornar-se obsoleto \n\npor n\u00e3o permitir atualiza\u00e7\u00f5es de projeto ap\u00f3s a fabrica\u00e7\u00e3o. \n\n? Computa\u00e7\u00e3o e arquiteturas reconfigur\u00e1veis60\n-62: \n\nA computa\u00e7\u00e3o reconfigur\u00e1vel baseia-se na utiliza\u00e7\u00e3o de um software \n\nque decomp\u00f5e o problema em tarefas menores e que torna a processar tais \n\n                                            \ne\n Um sistema embarcado \u00e9 um sistema computacional projetado para fun\u00e7\u00f5es de controle \n\nespec\u00edficas que pode ser parte de um sistema maior, trabalhando em  fun\u00e7\u00f5es que \ndemandam processamento em tempo real\n\n63,64\n.  \n\n\n\n31 \n\n \n\ntarefas em paralelo, objetivando atingir resultados significativos em rela\u00e7\u00e3o \n\nao tempo de processamento.  \n\nNo projeto de equipamentos dedicados para aplica\u00e7\u00f5es espec\u00edficas, \n\narquiteturas reconfigur\u00e1veis podem ser utilizadas para validar um design, podendo \n\ntrabalhar, em campo, com otimiza\u00e7\u00f5es no uso de energia e componentes, por \n\nexemplo.  \n\nHardwares dedicados diferem da evolu\u00e7\u00e3o das arquiteturas RISC\nf\n, CISC\n\ng\n e \n\ndos modelos h\u00edbridos\nh\n que foram projetados para atenderem uma demanda de uso \n\ngeral. Circuitos com hardware personalizado ou circuitos integrados com aplica\u00e7\u00f5es \n\nespec\u00edficas s\u00e3o desenvolvidos para executarem tarefas espec\u00edficas, o que possibilita \n\no desenvolvimento de sistemas computacionais inteiros e de menor porte, com \n\nmenor consumo de energia e mais r\u00e1pidos. Esses sistemas, chamados de ASIC \n\n(Application Specific Integrated Circuit) s\u00e3o limitados ao custo de desenvolvimento e \n\n\u00e0 incapacidade de serem modificados ap\u00f3s serem fabricados, sendo arriscado para \n\nuso em projetos comerciais. Uma arquitetura ASIC pode ser usada tamb\u00e9m para \n\ncontornar o problema da fabrica\u00e7\u00e3o de circuitos integrados espec\u00edficos com o \n\ncontrole fixo e as unidades funcionais e personalizadas, otimizados para uma dada \n\naplica\u00e7\u00e3o65. \n\nUma configura\u00e7\u00e3o em arquitetura ASIC tamb\u00e9m pode ser um sistema \n\nembarcado, pois se trata de um sistema microprocessado onde o computador \u00e9 \n\ncompletamente encapsulado e dedicado a um dispositivo ou sistema controlado. Ele \n\npode ser provido de um microcontrolador (que inclui uma unidade de processamento \n\nintegrada, quantidade de mem\u00f3ria RAM\ni\n limitada e uma mem\u00f3ria ROM\n\nj\n onde \n\ninstru\u00e7\u00f5es do programa s\u00e3o gravadas).  \n\nAlgumas ASICs passaram a possuir uma parte reprogram\u00e1vel ou permitir que \n\numa parte do c\u00f3digo pode ser modificada/apagada fisicamente atr\u00e1ves do uso de luz \n\n                                            \nf\n Reduced Instruction Set Computer \u2013 Computador com um Conjunto Reduzido de Instru\u00e7\u00f5es, \neste tipo de sistema foi viabilizado pelo uso de compiladores que poderiam aperfei\u00e7oar o uso \ndos ciclos de instru\u00e7\u00f5es. \ng\n Complex Instruction Set Computer \u2013 Computador com um Conjunto Complexo de \n\nInstru\u00e7\u00f5es, este tipo de sistema foi utilizado quando programas eram feitos em linguagem de \nm\u00e1quina, permitindo que uma linha de comando executasse uma tarefa espec\u00edfica, sendo \nsubstitu\u00eddo parcialmente pelo uso de compiladores. \nh\n H\u00edbridos s\u00e3o computadores que possuem caracter\u00edsticas RISC e CISC, sendo comum aos \n\ncomputadores com arquitetura x86 e computadores modernos que utilizam instru\u00e7\u00f5es \nespec\u00edficas para melhoria na execu\u00e7\u00e3o de instru\u00e7\u00f5es.  \ni\n Random Access Memory \u2013 Mem\u00f3ria de Acesso Aleat\u00f3rio. Mem\u00f3ria vol\u00e1til de r\u00e1pido acesso \nusada para escrita e leitura de dados.  \nj\n Read-Only Memory \u2013 Mem\u00f3ria com acesso apenas para leitura. \n\n\n\n32 \n\n \n\n  \n\nultravioleta (EPROM\nk\n) ou eletronicamente (EEPROM\n\nl\n) com sistemas modernos \n\nusando. Dentro dessa categoria de ASICs com partes reprogram\u00e1veis, podem haver \n\narranjos integrados de portas l\u00f3gicas que permitem a cria\u00e7\u00e3o de uma nova estrutura \n\nem hardware, como novos caminhos de interconex\u00e3o em sistemas multicores \n\n(barramentos), compartilhamento de mem\u00f3ria ou novas unidades de controle e \n\nprocessamento.  \n\nNa realidade, o software ainda tem que obedecer as especifica\u00e7\u00f5es do \n\nsistema para garantir os resultados. O gargalo desse tipo de configura\u00e7\u00e3o acaba \n\nsendo a comunica\u00e7\u00e3o entre os diferentes  processadores.  \n\nA computa\u00e7\u00e3o reconfigur\u00e1vel tamb\u00e9m possui as caracter\u00edsticas \n\norganizacionais de um computador de uso geral. Entretanto, o modo de executar as \n\nfun\u00e7\u00f5es \u00e9 diferente, ou seja, ao inv\u00e9s de trabalhar uma fun\u00e7\u00e3o sequencialmente \n\natrav\u00e9s de um conjunto de instru\u00e7\u00f5es de tempo (como um processador \n\nconvencional), as arquiteturas reconfigur\u00e1veis geralmente computam a fun\u00e7\u00e3o \n\natrav\u00e9s de unidades funcionais configuradas no espa\u00e7o (unidades em diferentes \n\nblocos dentro dos dispositivos). O que difere os dois tipos de computa\u00e7\u00e3o \u00e9 que um \n\nmodelo \u00e9 temporal/sequencial enquanto o outro \u00e9 espacial/paralelo. \n\n \n\n \n\n2.1 DISPOSITIVOS RECONFIGUR\u00c1VEIS \n \n\n \n\nA computa\u00e7\u00e3o reconfigur\u00e1vel por ser uma \u00e1rea relativamente recente tem \n\nrecebido v\u00e1rias defini\u00e7\u00f5es. O conceito dado por Compton e Hauck\n66\n\n a define como a  \n\nhabilidade de se trabalhar em hardware com a flexibilidade de uma solu\u00e7\u00e3o em \n\nsoftware, com o objetivo de aumentar o desempenho total do sistema \n\ncomputacional, sendo uma arquititetura com um processador ou multi-processada. O \n\ndiagrama apresentado na Figura 3 exibe as caracter\u00edsticas da computa\u00e7\u00e3o \n\nconfigur\u00e1vel que re\u00fane as vantagens da computa\u00e7\u00e3o reconfigur\u00e1vel. \n\n \n\n                                            \nk\n Erasable Programmable Read-Only Memory \u2013 Mem\u00f3ria Program\u00e1vel de Leitura Apag\u00e1vel \n\nl\n Electrically-Erasable Programmable Read-Only Memory \u2013 Mem\u00f3ria Program\u00e1vel de Leitura \nEletronicamente Apag\u00e1vel. \n\n\n\n33 \n\n \n\n \n\nFigura 3 - Diagrama esquem\u00e1tico que ilustra as vantagens da computa\u00e7\u00e3o \nreconfigur\u00e1vel, que combina as vantagens das outras modalidades \nde arquiteturas. \n\nA computa\u00e7\u00e3o reconfigur\u00e1vel pode ser vista como solu\u00e7\u00e3o intermedi\u00e1ria entre \n\nhardware e software, ou seja, o uso da programa\u00e7\u00e3o de software paralelo em \n\nhardware especializados. O objetivo, as metas e as motiva\u00e7\u00f5es passam a se \n\nrelacionar com a melhoria do desempenho, flexibilidade, generalidade, efici\u00eancia e \n\ncustos\n48\n\n. Recentemente, esses sistemas t\u00eam sido entendidos como fundamentais \n\npara sistemas embarcados cr\u00edticos, atribuindo novas oportunidades como trabalhar \n\nem tempo-real, maior seguran\u00e7a, robustez, baixo consumo de energia e menores \n\ndimens\u00f5es. \n\nA computa\u00e7\u00e3o reconfigur\u00e1vel \u00e9 baseada em dispositivos l\u00f3gicos program\u00e1veis \n\n(PLD \u2013 Programmable Logic Devices) que fornecem uma programa\u00e7\u00e3o flex\u00edvel no \n\nn\u00edvel de portas l\u00f3gicas e podem atingir um desempenho elevado de acordo com a \n\nestrutura\u00e7\u00e3o do projeto e sua aplica\u00e7\u00e3o\n68\n\n.  \n\nOs PLDs podem ser definidos como sendo um Circuito Integrado com  arranjo \n\nde portas l\u00f3gicas, que por sua vez pode ser usado para a implementa\u00e7\u00e3o de \n\ncircuitos digitais atrav\u00e9s do uso de softwares espec\u00edficos desenvolvidos pelos \n\nfabricantes. Esses dispositivos tamb\u00e9m podem realizar quaisquer tarefas \n\ncomputacionais, podendo inclusive possuir uma unidade de processamento j\u00e1 \n\nembutida.  \n\n\n\n34 \n\n \n\n  \n\nAs interconex\u00f5es das portas l\u00f3gicas s\u00e3o feitas por transistores comandados \n\npor c\u00e9lulas SRAM\nm\n\n, transistores, EEPROM, fus\u00edveis, multiplexadores, entre outros\n67\n\n. \n\n \n\n \n\n2.2 FPGAS \n \n\n \n\nA FPGA (Field-Programmable Gate Array \u2013 Arranjo de Portas Program\u00e1veis \n\nem Campo) \u00e9 um dipositivo da fam\u00edlia dos PLDs e por isso caracteriza-se como um \n\ndispositivo semicondutor que cont\u00e9m componentes de l\u00f3gica (blocos l\u00f3gicos) e \n\nconex\u00f5es internas program\u00e1veis.  \n\nEsses blocos l\u00f3gicos podem ser programados para trabalhar como portas \n\nl\u00f3gicas (AND\nn\n, XOR\n\no\n) ou fun\u00e7\u00f5es complexas que podem ser combinadas como \n\ndecoders/encoders, multiplexadores ou fun\u00e7\u00f5es matem\u00e1ticas. A primeira FPGA \n\ncomercial foi criada em 1985 pela Xilinx Inc. como dispositivo program\u00e1vel de acordo \n\ncom as aplica\u00e7\u00f5es do usu\u00e1rio (programador ou projetista), lembrando que outros \n\nPLDs j\u00e1 possu\u00edam a capacidade de programar em blocos l\u00f3gicos, mas eram apenas \n\numa pequena parte, muitas vezes usados para fazer ponte de conex\u00e3o em \n\ndiferentes processadores de um mesmo sistema.  \n\nUma FPGA \u00e9 composta de tr\u00eas tipos de componentes: CLB (Configuration \n\nLogical Blocks - Blocos de Configura\u00e7\u00e3o L\u00f3gica), IOB (Input/Output Block \u2013 Blocos \n\nde entrada e sa\u00edda) e PSM (Programmable Switch Matrix - Matriz de interconex\u00e3o \n\nProgram\u00e1vel).  \n\nCLBs s\u00e3o circuitos id\u00eanticos, constru\u00eddos pela reuni\u00e3o de flip-flops do tipo D e \n\nest\u00e3o localizados no centro do chip enquanto os IOBs est\u00e3o presentes nas \n\nperiferias, como pode ser visto na Figura 4.  \n\nA interconex\u00e3o \u00e9 necess\u00e1ria para implementar projetos na FPGA. A \n\nconfigura\u00e7\u00e3o distribu\u00edda controla o comportamento dos CLBs e IOBs atrav\u00e9s de um \n\nprograma armazenado.  \n\n \n\n                                            \nm\nStatic Random Access Memory \u2013 Mem\u00f3ria Est\u00e1tica de Acesso Aleat\u00f3rio. Ela tem a \n\ncapacidade de manter a memoriza\u00e7\u00e3o dos dados, n\u00e3o necessitando sua atualiza\u00e7\u00e3o de \ntempos em tempos (Refreshing) \nn\n Porta l\u00f3gica \u201ce\u201d cuja sa\u00edda \u00e9 sempre falsa se uma das entradas for falsa. \n\no\n Porta l\u00f3gica \u201cou exclusiva\u201d cuja sa\u00edda \u00e9 sempre verdadeira se as entradas forem diferentes. \n\n\n\n35 \n\n \n\n \n\nFigura 4 - Arquitetura interna de uma FPGA, onde s\u00e3o visualizados a \nlocaliza\u00e7\u00e3o dos CLBs, PSMs e IOBs\n\n48,68\n. \n\nNa Figura 5 \u00e9 apresentado um diagrama de um CLB simplificado  usado para \n\nprogramar uma l\u00f3gica combinacional ou sequencial. Ele \u00e9 composto por uma LUT \n\n(Lookup Table \u2013 Tabela de Consulta) controlada por 4 entradas, para programar \n\numa l\u00f3gica combinacional e um flip-flop do tipo D para a l\u00f3gica sequencial.  \n\n \n\n \n\nFigura 5 - Diagrama simplificado de um CLB. \n\nUm multiplexador (MUX\np\n) \u00e9 usado para selecionar diretamente a sa\u00edda da \n\nl\u00f3gica combinacional atrav\u00e9s da sa\u00edda do flip-flop. Um CLB \u00e9 programado por \n\ncarregar a tabela verdade da fun\u00e7\u00e3o l\u00f3gica para a LUT (16 bits) e o bit de controle \n\n                                            \np\n Multiplexadores: S\u00e3o sistemas digitais que podem ser usados como conversores \n\nparalelo/serial selecionando sinais de entrada, atrav\u00e9s de sinais de controle. \n\n\n\n36 \n\n \n\n  \n\ndo MUX (1 bit). Utilizando os CLBs, o usu\u00e1rio pode calcular elementos l\u00f3gicos \n\nespec\u00edficos. \n\nIOBs s\u00e3o circuitos respons\u00e1veis pelo interfaceamento das sa\u00eddas \n\nprovenientes das sa\u00eddas das combina\u00e7\u00f5es de CLBs. S\u00e3o basicamente buffers, que \n\nfuncionar\u00e3o como um pino bidirecional entrada e sa\u00edda da FPGA permitindo conex\u00e3o \n\ncom outros elementos da aplica\u00e7\u00e3o. Cada IOB pode ser usado como entrada ou \n\nsa\u00edda dependendo do estado do OE (Output Enable). O bit OE pode ser programado \n\nestaticamente ou como um conjunto para a sa\u00edda de um CLB. IOBs cont\u00eam flip-flops \n\ndo tipo D para atraso (Latching) dos sinais de entrada e sa\u00edda. As travas podem ser \n\neliminadas por MUXs programados apropriadamente. Na Figura 6, um diagrama \n\nsimplificado de um IOB \u00e9 apresentado com dois flip-flops do tipo D. \n\n \n\n \n\nFigura 6 - Diagrama simplificado de um IOB. \n\nPSMs s\u00e3o trilhas utilizadas para conectar os CLBs e IOBs. Os recursos de \n\ninterconex\u00f5es possuem trilhas para conectar as entradas e sa\u00eddas dos CLBs e IOBs \n\npara as redes apropriadas. Geralmente, a configura\u00e7\u00e3o \u00e9 estabelecida por \n\nprograma\u00e7\u00e3o interna das c\u00e9lulas de mem\u00f3ria est\u00e1tica, que determinam fun\u00e7\u00f5es \n\nl\u00f3gicas e conex\u00f5es internas implementadas na FPGA entre os CLBs e os IOBs. O \n\nprocesso de escolha das interconex\u00f5es \u00e9 chamado de roteamento. Apesar de \n\ndeixarem a FPGA mais vers\u00e1til, PSMs causam atrasos nos sinais. No diagrama da \n\nFigura 7 s\u00e3o apresentadas duas PSMs interligando tr\u00eas unidades de CLBs. \n\nO roteamento \u00e9 a forma pela qual os barramentos e as PSMs s\u00e3o \n\nposicionados para permitir a interconex\u00e3o entre as c\u00e9lulas l\u00f3gicas. Essa arquitetura \n\n\n\n37 \n\n \n\npermite que se obtenha um roteamento completo e, ao mesmo tempo, uma alta \n\ndensidade de portas l\u00f3gicas.  \n\n \n\n \n\nFigura 7 - Diagrama simplificado de uma PSM. As PSMs s\u00e3o utilizadas para \ninterligar CLBs e IOBs atrav\u00e9s de trilhas tornando a configura\u00e7\u00e3o \nda FPGA mais flex\u00edvel. \n\nA granularidade \u00e9 uma caracter\u00edstica das FPGAs e, a fim de classific\u00e1-las \n\nquanto ao bloco l\u00f3gico, foram divididas em 3 categorias: grande granularidade: onde \n\nas FPGAs dessa categoria podem possuir como gr\u00e3os unidades l\u00f3gicas e \n\naritm\u00e9ticas, pequenos microprocessadores e mem\u00f3rias; granularidade m\u00e9dia: onde \n\nFPGAs de gr\u00e3o m\u00e9dio frequentemente cont\u00eam duas ou mais LUTs e dois ou mais \n\nflip-flops. A maioria das arquiteturas de FPGAs implementa a l\u00f3gica em LUTs de \n\nquatro entradas; pequena granularidade: onde as FPGAs de pequeno gr\u00e3o cont\u00eam \n\num grande n\u00famero de blocos l\u00f3gicos simples. Os blocos l\u00f3gicos normalmente \n\ncont\u00eam uma fun\u00e7\u00e3o l\u00f3gica de duas entradas ou um multiplexador 4x1 e um flip-flop. \n\nPor serem vol\u00e1teis, as c\u00e9lulas de armazenamento dos LUTs acabam por \n\nperderem o conte\u00fado armazenado quando n\u00e3o h\u00e1 mais fornecimento de energia. \n\nAssim, a FPGA deve ser programada toda vez que for energizada. Geralmente \n\nutiliza-se uma pequena mem\u00f3ria FLASH EEPROM cuja fun\u00e7\u00e3o \u00e9 carregar \n\nautomaticamente as c\u00e9lulas de armazenamento, toda vez que a FPGA for \n\nenergizada. \n\n\n\n38 \n\n \n\n  \n\nAs PSMs apresentam algumas propriedades, tais como tamanho, resist\u00eancia, \n\ncapacit\u00e2ncia e tecnologia de fabrica\u00e7\u00e3o, que afetam principalmente a velocidade e o \n\ntempo de propaga\u00e7\u00e3o dos sinais e definem caracter\u00edsticas como volatilidade bem \n\ncomo capacidade de reprograma\u00e7\u00e3o. Na escolha de um dispositivo reconfigur\u00e1vel, \n\nesses fatores devem ser avaliados. Basicamente existem tr\u00eas tipos de tecnologia de \n\nprograma\u00e7\u00e3o das chaves de roteamento:  \n\n? SRAM, que por serem vol\u00e1teis utilizam uma EEPROM para armazenar \n\na programa\u00e7\u00e3o e ocupam muito espa\u00e7o f\u00edsico, apesar de serem \n\nrapidamente program\u00e1veis;  \n\n? Antifuse, essa tecnologia baseia-se num dispositivo de dois terminais, \n\nque no estado n\u00e3o programado apresenta uma alta imped\u00e2ncia \n\n(circuito aberto);  \n\n? Gate flutuante, cuja tecnologia baseia-se no uso de transistores MOS \n\n(Metal Oxide Semiconductor), especialmente constru\u00eddos com dois \n\ngates flutuantes semelhantes aos usados nas mem\u00f3rias EPROM e \n\nEEPROM. O diferencial dessa tecnologia \u00e9 a sua capacidade de \n\nprograma\u00e7\u00e3o e reten\u00e7\u00e3o de dados. Al\u00e9m disso, da mesma forma que \n\numa mem\u00f3ria EEPROM, os dados podem ser programados com o \n\ncircuito integrado instalado em placa, caracter\u00edstica denominada ISP \n\n(In System Programmability).  \n\nNa Figura 8 \u00e9 apresentada uma placa com FPGA fabricada pela Altera. \n\n \n\n \n\nFigura 8 -  Placa com um chip reprogram\u00e1vel desenvolvido pela Altera. No \ndetalhe, o maior chip \u00e9 a FPGA. \n\n\n\n39 \n\n \n\nPara projetar se uma arquitetura usando uma FPGA, \u00e9 preciso configur\u00e1-la \n\n(ou program\u00e1-la), escolhendo como o chip ir\u00e1 operar com um diagrama de circuito \n\nl\u00f3gico ou c\u00f3digo fonte. As t\u00e9cnicas para programa\u00e7\u00e3o variam de HDL (Hardware \n\nDescription Language) \u00e0 linguagens de alto n\u00edvel.  \n\nA HDL \u00e9 uma linguagem utilizada para uma descri\u00e7\u00e3o formal e constru\u00e7\u00e3o de \n\ncircuitos eletr\u00f4nicos de l\u00f3gica digital. Ela pode ser descrita como uma opera\u00e7\u00e3o, \n\nprojeto, organiza\u00e7\u00e3o de circuitos e testes s\u00e3o usados para verificar sua opera\u00e7\u00e3o por \n\nmeio de simula\u00e7\u00e3o69.  \n\nA HDL facilita o trabalho de configura\u00e7\u00e3o, viabilizando a manipula\u00e7\u00e3o de \n\ngrandes estruturas, sendo poss\u00edvel especific\u00e1-las numericamente sem a \n\nnecessidade de desenh\u00e1-las \u00e0 m\u00e3o. Por outro lado, a entrada esquematizada \n\npermite uma especifica\u00e7\u00e3o mais pr\u00f3xima da aplica\u00e7\u00e3o que deve ser atendida. \n\nHDL se caracteriza por express\u00f5es baseadas em textos tanto da estrutura \n\nespacial quanto da estrutura temporal e comportamento de sistemas eletr\u00f4nicos. \n\nComo as estruturas da programa\u00e7\u00e3o concorrente utilizada pela computa\u00e7\u00e3o \n\nparalela, a s\u00edntese e a sem\u00e2ntica da linguagem incluem uma no\u00e7\u00e3o expl\u00edcita do \n\ntempo, que \u00e9 um atributo prim\u00e1rio de hardware.  \n\nAs duas linguagens HDL mais utilizadas, tanto no meio acad\u00eamico como \n\ncomercialmente, s\u00e3o a VHDL (VHSIC-HDL \u2013 Very High Speed Integrated Circuits \u2013 \n\nCircuitos Integrados com Velocidade Muito Alta) e Verilog. Smith\n70\n\n faz uma \n\ncompara\u00e7\u00e3o entre as duas linguagens dando \u00eanfase nas suas similaridades e \n\ncontrastando suas diferen\u00e7as. \n\nAs duas linguagens permitem que uma estrutura de hardware seja modelada \n\nefetivamente. Mas quando se modela um hardware abstrato, a capacidade da VHDL \n\ns\u00f3 pode ser atingida pelo Verilog quando se usa PLI (Program Language Interface \u2013 \n\nInterface para Linguagem de programa\u00e7\u00e3o). \n\nA linguagem VHDL pode ter m\u00faltiplas unidades de projeto (pares de \n\nentidade/arquitetura) que ao estarem presentes no mesmo arquivo de sistema, \n\npodem ser compilados separadamente. O Verilog atua como linguagem de \n\ninterpreta\u00e7\u00e3o, assim a compila\u00e7\u00e3o pode melhorar o desempenho, mas n\u00e3o mudar\u00e1 a \n\nnatureza da linguagem. Resultados podem ser obtidos pela mudan\u00e7a da ordem da \n\ncompila\u00e7\u00e3o de arquivos separados. \n\nV\u00e1rios tipos de dados definidos pelo usu\u00e1rio ou pela linguagem podem ser \n\nutilizados no VHDL. Dependendo da arquitetura a ser projetada, algumas fun\u00e7\u00f5es \n\n\n\n40 \n\n \n\n  \n\ndedicadas s\u00e3o necess\u00e1rias para converter um objeto de um tipo para outro. A \n\nescolha do tipo usado deve ser considerada, especialmente para os tipos de dados \n\nenumerados (abstratos). Isso poder\u00e1 fazer os modelos serem mais f\u00e1ceis de serem \n\nescritos, mais claros para serem lidos, e evitando fun\u00e7\u00f5es de convers\u00e3o \n\ndesnecess\u00e1rias que podem deixar o c\u00f3digo obscuro. Comparado com VHDL, os \n\ntipos de dados do Verilog s\u00e3o mais simples, mais f\u00e1ceis de utilizar e mais \n\ndirecionados a modelagem de uma estrutura de hardware t\u00edpica do que uma \n\nabstrata. Todos os tipos de dados s\u00e3o definidos pela linguagem utilizada e n\u00e3o pelo \n\nusu\u00e1rio.  \n\nEm VHDL, procedimentos e fun\u00e7\u00f5es podem ser colocados em pacotes e \n\nserem dispon\u00edveis para qualquer unidade de projeto que desejem utiliz\u00e1-las. Em \n\nVerilog, por n\u00e3o existir esse conceito de pacotes, fun\u00e7\u00f5es usadas dentro do modelo \n\ndevem ser definidas nos m\u00f3dulos. \n\nVHDL permite usar construtos e modelagem de alto n\u00edvel, bibliotecas para \n\nguardar entidades compiladas, arquiteturas, pacotes e configura\u00e7\u00f5es. Tamb\u00e9m, \n\natrav\u00e9s dessas estruturas, \u00e9 poss\u00edvel, gerenciar projetos maiores. Outras \n\ncaracter\u00edsticas relevantes incluem chamadas de procedimentos concorrentes e \n\npermite o uso de atributos chamados foreign, onde arquiteturas e subprogramas \n\npodem ser modelados em outras linguagens. A leitura e o entendimento do c\u00f3digo \n\nem Verilog s\u00e3o mais simples, em parte pelo c\u00f3digo ser similar \u00e0 linguagem C\nq\n (cerca \n\nde 50%) enquanto VHDL \u00e9 baseado em linguagem Ada\nr\n. \n\nVerilog \u00e9 uma linguagem mais f\u00e1cil de familiarizar com desenvolvimento de \n\narquiteturas em FPGA, mas suas limita\u00e7\u00f5es tornam VHDL mais interessante para \n\num programador com maior experi\u00eancia e que trabalhe com uma abstra\u00e7\u00e3o maior\n70\n\n. \n\nUma vez organizado um projeto, os arquivos fontes podem ser gravados em \n\numa FPGA atrav\u00e9s de um framework desenvolvido pelo fabricante onde atrav\u00e9s de \n\ndiferentes passos se produz um arquivo que traduz a programa\u00e7\u00e3o desejada a qual \n\n\u00e9 transferida para a FPGA via interface serial ou por um dispositivo de mem\u00f3ria \n\nexterna como uma EEPROM. \n\n                                            \nq\n \u00c9 uma linguagem de programa\u00e7\u00e3o que desenvolvida para ser utilizado inicialmente no \n\nsistema operacional Unix. \u00c9 a linguagem mais utilizada, influente e suportada pela maioria \ndas arquiteturas. \nr\n \u00c9 uma linguagem vista como extens\u00e3o do Pascal, orientada a objetos e fortemente \ndirecionada para programa\u00e7\u00e3o concorrente. \n\n\n\n41 \n\n \n\nAs aplica\u00e7\u00f5es para FPGAs incluem o uso em processamento de sinais \n\ndigitais, sistemas aeroespacial e de defesa, prototipagem para ASIC, imagens \n\nm\u00e9dicas, vis\u00e3o computacional, reconhecimento de voz, criptografia, bioinform\u00e1tica, \n\nemula\u00e7\u00e3o de hardware de computadores entre outras \u00e1reas. Algoritmos que podem \n\nser utilizados para uso de paralelismo. FPGAs s\u00e3o tamb\u00e9m utilizadas em aplica\u00e7\u00f5es \n\nconvencionais de computa\u00e7\u00e3o de alto desempenho onde os n\u00facleos computacionais \n\ncom FFT e convolu\u00e7\u00e3o s\u00e3o por eles calculados ao inv\u00e9s de se usar \n\nmicroprocessadores\n71\n\n.  \n\n\n\n42 \n\n \n\n  \n\n  \n\n\n\n43 \n\n \n\n3 DESENVOLVIMENTO METODOL\u00d3GICO E MATERIAIS  \n \n\nNeste trabalho, \u00e9 feito o uso de filtragem de Kalman\n72\n\n utilizando uma estrutura \n\nde redes neurais artificiais (RNA) embarcada em uma FPGA. O principal objetivo \u00e9 \n\nde filtrar a priori proje\u00e7\u00f5es de tomografia de amostras de solo e obter uma melhor \n\nrela\u00e7\u00e3o sinal/ru\u00eddo, o que impacta a imagem a ser posteriormente reconstru\u00edda. O \n\nfiltro \u00e9 projetado como um conjunto de portas l\u00f3gicas como uma nova arquitetura \n\nespec\u00edfica diferentemente dos sistemas baseados em DSP onde os mesmos s\u00e3o \n\nprogramados como um software e gravados na mem\u00f3ria do sistema para ent\u00e3o \n\nserem processados em um n\u00facleo dedicado. \n\nOs filtros de Kalman com RNA s\u00e3o vistos como extens\u00f5es de filtros n\u00e3o \n\nlineares e as modifica\u00e7\u00f5es s\u00e3o feitas diretamente nas equa\u00e7\u00f5es para medi\u00e7\u00e3o e \n\ncorre\u00e7\u00e3o dos par\u00e2metros dos mesmos.  \n\nO filtro de Kalman foi primeiramente utilizado para calcular posi\u00e7\u00f5es precisas \n\ndo sistema de navega\u00e7\u00e3o da nave Apolo em sua incurs\u00e3o at\u00e9 a Lua, garantindo que \n\na trajet\u00f3ria para a chegada ao sat\u00e9lite natural e a volta a Terra\n73\n\n. Sem o filtro, os \n\nerros nos c\u00e1lculos devido \u00e0 incerteza da posi\u00e7\u00e3o poderiam acumular o que levaria a \n\nnave a se chocar contra o corpo celeste. Desenvolvido na d\u00e9cada anterior e aplicado \n\ncomo primeiro sistema embarcado cr\u00edtico, o sistema inaugurou a era digital e o uso \n\npara a portabilidade de computadores, como tamb\u00e9m o florescimento da estat\u00edstica \n\naplicada em problemas reais com o processamento computacional.  \n\n \n\n \n\n3.1 PROCESSAMENTO DIGITAL EM SISTEMAS EMBARCADOS \n \n\n \n\nO primeiro filtro de Kalman embarcado foi implementado como um ASIC, \n\nsendo um dos primeiros circuitos integrados, algo novo para uma \u00e9poca em que \n\ncomputadores e instrumentos eram, em grande parte, exclusivamente baseado em \n\neletr\u00f4nica anal\u00f3gica e limitados a grandes centros de pesquisas e universidades.  O \n\nENIAC, por exemplo, apresentado em 1946, era do tamanho de uma sala de \n\nescrit\u00f3rio. Hoje \u00e9 poss\u00edvel ver que a evolu\u00e7\u00e3o tecnol\u00f3gica de cinco d\u00e9cadas colocou \n\nmilh\u00f5es de ENIACS na palma da m\u00e3o, com um custo de produ\u00e7\u00e3o menor e mais \n\natrativo. O que poucos sabem \u00e9 que essa miniaturiza\u00e7\u00e3o de computadores, sem \n\n\n\n44 \n\n \n\n  \n\nperder o poder de processamento, remonta a constru\u00e7\u00e3o do AGC (Apollo Guidance \n\nComputer \u2013 Computador de Navega\u00e7\u00e3o da Apollo)\n74,75\n\n.  \n\nA Gemini foi a primeira a ter um sistema computacional completamente \n\nintegrado no sistema de navega\u00e7\u00e3o sendo pioneira em uma nova gera\u00e7\u00e3o de naves \n\nespaciais. Ela criou a necessidade de computadores de bordo e processamento em \n\ntempo real. O computador deveria processar um fluxo cont\u00ednuo de dados de \n\nnavega\u00e7\u00e3o e de radar e apresentar as solu\u00e7\u00f5es para a tripula\u00e7\u00e3o. Isso permitiu que \n\na nave operasse de forma independente. O projeto da sua interface era orientado a \n\ntarefas. A interface de usu\u00e1rio consistia em um teclado com sistema num\u00e9rico para \n\nentrada dos dados e um display mec\u00e2nico (um display eletroluminescente verde de \n\nalta voltagem acionados por rel\u00eas) com o endere\u00e7o e conte\u00fado de uma simples \n\npalavra de mem\u00f3ria. Sua principal fun\u00e7\u00e3o era fornecer dados para direcionar a \n\nlocaliza\u00e7\u00e3o no painel de instrumentos da tripula\u00e7\u00e3o. \n\nO AGC foi constru\u00eddo como um DSP (Digital Signal Processing), ou seja, \n\npartia do principio de um Hardware fixo que tinha uma programa\u00e7\u00e3o gravada na \n\nmem\u00f3ria para fazer o controle dos dados de entrada do sistema para retornar uma \n\nsa\u00edda. DSP s\u00e3o utilizados essencialmente para processamento de sinais digitais, o \n\nque pode ser definido como a manipula\u00e7\u00e3o matem\u00e1tica de um sinal para modific\u00e1-lo \n\nou melhor\u00e1-lo de alguma maneira.  \n\nEsse processamento pode ser caracterizado pela representa\u00e7\u00e3o do sinal em \n\ntempo, frequ\u00eancia ou outros dom\u00ednios discretos, como por exemplo, uma sequ\u00eancia \n\nde n\u00fameros. O in\u00edcio do desenvolvimento comercial dos DSPs deu-se nos anos das \n\nd\u00e9cadas de 1960 e 1970 quando os computadores estavam tornando-se mais \n\nacess\u00edveis, mas ainda eram caros e limitados a poucas aplica\u00e7\u00f5es cr\u00edticas\n76\n\n.  \n\nDentre seus usos principais encontram-se: medir, filtrar e comprimir sinais \n\nanal\u00f3gicos em tempo real. Sua opera\u00e7\u00e3o envolve como primeiro passo converter o \n\nsinal anal\u00f3gico para digital por amostragem, digitalizando-o com um conversor \n\nAnal\u00f3gico-Digital (ADC \u2013 Analog-to-Digital Converter), o que torna o sinal digital em \n\num fluxo de n\u00fameros. Contudo, algumas vezes, a sa\u00edda requerida do sinal \u00e9 em sua \n\nforma anal\u00f3gica, o que requer um conversor Digital-Anal\u00f3gico (DAC \u2013 Digital-to-\n\nAnalogic Converter). Mesmo que o uso de DSP represente um processo mais \n\ncomplexo do que um processamento anal\u00f3gico, o seu poder computacional permite \n\nv\u00e1rias vantagens como detec\u00e7\u00e3o e corre\u00e7\u00e3o de erros na transmiss\u00e3o de sinais, entre \n\noutros. Na Figura 9 \u00e9 ilustrado o processo de discretiza\u00e7\u00e3o e reconstru\u00e7\u00e3o de um \n\n\n\n45 \n\n \n\nsinal, o que ocorre respeitando-se o teorema da amostragem\ns\n. O sinal anal\u00f3gico \u00e9 \n\nconvolu\u00eddo por um trem de impulsos, onde \u00e9 feita a amostragem em pontos. A \n\nreconstru\u00e7\u00e3o do sinal \u00e9 feita com base nas amostras, o que depende diretamente da \n\nqualidade amostral. f(x) corresponde a uma fun\u00e7\u00e3o representando o sinal anal\u00f3gico, \n\ns(x) um trem de pulsos, (f*s)(x) um sinal discretizado, l(x) uma fun\u00e7\u00e3o cont\u00ednua e \n\n(f*s*l)(x) o sinal cont\u00ednuo reconstru\u00eddo. \n\n \n\nFigura 9 -  Processos de amostragem e reconstru\u00e7\u00e3o de sinais. \n\nA amostragem corresponde em discretizar o sinal espacialmente ou por \n\ntempo, ou seja, selecionar um limitado n\u00famero de pontos para represent\u00e1-lo. \n\nDenomina-se quantiza\u00e7\u00e3o o processo de discretizar os valores que representam a \n\nintensidade no ponto\n77\n\n.  \n\n                                            \ns\n  Qualquer sinal no qual frequ\u00eancias maiores que f sejam nulas pode ser perfeitamente \n\nreconstru\u00eddo se amostrado em uma frequ\u00eancia igual ou superior a 2f. A frequ\u00eancia limite \npara amostragem \u00e9 tamb\u00e9m conhecida como Limite de Nyquist. \n\n\n\n46 \n\n \n\n  \n\nAlgoritmos de DSP t\u00eam sido executados em computadores, em \n\nprocessadores especializados chamados processadores digitais de sinais \n\nconstru\u00eddos diretamente no equipamento, como as arquiteturas ASIC. Hoje existem \n\ntecnologias adicionais usadas para processamento digital de sinais que incluem \n\nmicroprocessadores, FPGAs, controladores de sinais digitais e processadores de \n\nfluxo. Dependendo da aplica\u00e7\u00e3o, os DSPs podem ser aplicados em sistemas \n\nembarcados que pode incluir ou n\u00e3o microprocessadores especializados\n78\n\n.  \n\nQuando o processamento requerido n\u00e3o necessita ser em tempo real, ele \u00e9 \n\nfeito com computadores de uso geral por ser economicamente vi\u00e1vel. O sinal passa \n\na existir em arquivos de dados. N\u00e3o h\u00e1 uma diferen\u00e7a maior do que outros tipos de \n\ndados, exceto no uso de t\u00e9cnicas matem\u00e1ticas, cujo conjunto de dados deve ser \n\nusado, como na Transformada de Fourier, por exemplo. Quando o processamento \n\nrequer ser de tempo real, DSP \u00e9 sempre implementado usando microprocessadores \n\nespecializados. Em geral, usa-se a aritm\u00e9tica de ponto fixo, mas existem vers\u00f5es \n\nmais potentes que se utilizam de unidades aritm\u00e9ticas de pontos flutuantes. Para \n\naplica\u00e7\u00f5es que exigem tempo de resposta menor, essas unidades podem ser \n\nutilizadas.  \n\nAtualmente, os sistemas embarcados fazem parte das atividades do dia a dia das \n\npessoas devido ao baixo custo de seus desenvolvimentos e t\u00eam presen\u00e7a em \n\npraticamente todos os setores da sociedade. Eles s\u00e3o largamente utilizados em \n\ntelefones celulares, eletrodom\u00e9sticos, c\u00e2meras fotogr\u00e1ficas, em autom\u00f3veis e \n\navi\u00f5es\n79\n\n.  \n\nEntretanto, o projeto de um sistema embarcado torna-se complexo devido a \n\nconceitos como o uso limitado de energia, portabilidade, mem\u00f3ria limitada, \n\nseguran\u00e7a, confiabilidade e comunica\u00e7\u00e3o mantendo um processamento em n\u00edvel \n\nadequado \u00e0 aplica\u00e7\u00e3o que se projeta. J\u00e1 um sistema embarcado cr\u00edtico possui uma \n\nmaior complexidade de desenvolvimento pela necessidade de ter uma maior \n\nconfiabilidade e seguran\u00e7a com atividades com respostas em tempo real\n80\n\n. \n\nAs possibilidades de se trabalhar com sistemas embarcados apresentam-se \n\nde forma vasta devido aos grandes desafios ligados aos projetos de arquitetura de \n\ncomputadores. \n\nEm um sistema mais complexo pode ocorrer \u00e0 presen\u00e7a de componentes \n\nprogram\u00e1veis, com um software de aplica\u00e7\u00e3o composto por m\u00faltiplos processos, \n\ndistribu\u00eddos em diferentes processadores e comunicando-se atrav\u00e9s de mecanismos \n\n\n\n47 \n\n \n\nvariados. A hierarquia de conex\u00f5es program\u00e1veis permite que os blocos l\u00f3gicos \n\nsejam interconectados quando desejado pelo projetista do sistema, comportando-se \n\ncomo um sistema de um \u00fanico chip program\u00e1vel.  \n\nV\u00e1rios trabalhos sobre a implementa\u00e7\u00e3o de filtros em FPGA, seja para \n\naumentar o desempenho ou apenas para satisfazer uma solu\u00e7\u00e3o em sistemas \n\nembarcados, s\u00e3o oferecidos na literatura\n80-82\n\n. \n\n \n\n \n\n3.2 FILTRO DE KALMAN \n \n\n \n\n3.2.1 FILTRO DE KALMAN DISCRETO \n \n\n \n\nO filtro de Kalman foi criado para ser um filtro de corre\u00e7\u00e3o on-the-fly, que se \n\ncaracteriza por obter um valor preciso das medidas atrav\u00e9s das observa\u00e7\u00f5es de \n\namostras. O filtro em sua vers\u00e3o b\u00e1sica \u00e9 considerado um \u00f3timo estimador linear, \n\nmas possui outras restri\u00e7\u00f5es\n83\n\n.  \n\nAs equa\u00e7\u00f5es abaixo apresentam o conjunto de fun\u00e7\u00f5es lineares necess\u00e1rias \n\npara a aplica\u00e7\u00e3o do filtro:  \n\n \n\n \n           \n         \n\n      (8) \n\n \n\nonde xk \u00e9 o estado atual que possui uma m\u00e9dia    com uma matriz de erro com \n\ncovari\u00e2ncia Pk, que determina a confiabilidade da medida, qk  \u00e9 o ru\u00eddo do processo \n\nque \u00e9 assumido ter uma m\u00e9dia zero com uma distribui\u00e7\u00e3o normal multivariada e uma \n\ncovari\u00e2ncia Qk. rk \u00e9 ru\u00eddo de observa\u00e7\u00e3o que \u00e9 assumido como um ru\u00eddo Gaussiano \n\nbranco com m\u00e9dia zero, com uma covari\u00e2ncia Rk. A e H s\u00e3o matrizes de \n\ntransfer\u00eancias que permitem fazer a din\u00e2mica entre os estados.  zk \u00e9  vetor de \n\nestados observados. \n\nAs restri\u00e7\u00f5es mais comuns est\u00e3o no conhecimento profundo do problema, \n\ncomo valores iniciais para as medidas, as equa\u00e7\u00f5es do sistema para o processo \n\n(que \u00e9 alimentado com o valor anterior) e de observa\u00e7\u00e3o (que depende dos valores \n\n\n\n48 \n\n \n\n  \n\nda equa\u00e7\u00e3o do processo) e as covari\u00e2ncias que determinam o processo e a \n\nincerteza da observa\u00e7\u00e3o: \n\n \n\n \n\n           \n\n          \n\n          \n\n      (9) \n\n \n\nEssa fun\u00e7\u00e3o linear \u00e9 constitu\u00edda de um vetor coluna, que por sua vez \u00e9 \n\nmultiplicado por uma matriz de transfer\u00eancia e somada a outro vetor coluna. Esses \n\nvetores colunas podem ser escalares, sendo que a matriz de transfer\u00eancia (que \n\nacompanha as dimens\u00f5es do vetor coluna) tamb\u00e9m ser\u00e1 escalar. \n\nA principal caracter\u00edstica da filtragem linear \u00e9 a sua habilidade de fazer uma \n\npredi\u00e7\u00e3o dada uma fun\u00e7\u00e3o linear conhecida. O filtro de Kalman Discreto se \n\ncaracteriza por um conjunto de equa\u00e7\u00f5es: \n\n \n\n \n \n \n\n \n \n\n   \n       \n\n   \n        \n\n   \n\n      \n       \n\n      \n\n       \n            \n\n  \n\n              \n \n\n     (10) \n\n \n\nonde xk-1 representa um vetor de estados conhecidos a priori que atrav\u00e9s de uma \n\nmatriz de transfer\u00eancia \u00e9 estimado o vetor de estado futuro     \n \n\n. Pk-1 representa a \n\nmatriz de covari\u00e2ncia do vetor de estados xk-1.    \n \n\n representa a covari\u00e2ncia estimada \n\nusando a covari\u00e2ncia Pk-1 e Kk  representa o ganho de Kalman, usado para corrigir \n\nos estados quando multiplicado com o erro de observa\u00e7\u00e3o dado por         \n  . O \n\npar           s\u00e3o os estados e a covari\u00e2ncia estimados pelo filtro.  \n\nA covari\u00e2ncia do ru\u00eddo na observa\u00e7\u00e3o pode ser facilmente medida, mas o \n\ncomportamento do sinal caracterizado na equa\u00e7\u00e3o do processo pode variar \n\ndependendo da aplica\u00e7\u00e3o. O pr\u00f3prio filtro tem a capacidade de estimar estados \n\nocultos \u00e0 observa\u00e7\u00e3o e criar um modelo linear onde os estados ocultos influenciem a \n\nestima\u00e7\u00e3o do pr\u00f3ximo estado: \n\n \n\n\n\n49 \n\n \n\n \n \n \n\n \n  \n\n  \n \n\n  \n \n\n \n\n  \n   \n   \n   \n\n  \n\n  \n \n\n  \n \n\n   \n\n  \n   \n   \n   \n\n  \n\n  \n \n\n  \n \n\n \n\n         \n\n  \n \n\n  \n \n\n \n\n   \n\n    (11) \n\n \n\nEsta \u00e9 uma solu\u00e7\u00e3o \u00f3tima quando o problema \u00e9 linear, mas quando o \n\nproblema passa a ter um comportamento n\u00e3o linear, a aproxima\u00e7\u00e3o n\u00e3o \u00e9 t\u00e3o \n\nprecisa e h\u00e1 uma demora na resposta de converg\u00eancia e pode apresentar perda na \n\nprecis\u00e3o dos dados.  \n\n \n\n \n\n3.2.2 FILTRO DE KALMAN ESTENDIDO \n \n\n \n\nUm sistema n\u00e3o linear pode ser representado como fun\u00e7\u00f5es n\u00e3o lineares do \n\nprocesso e observa\u00e7\u00e3o: \n\n \n\n \n             \n           \n\n      (12) \n\n \n\nO filtro de Kalman Discreto pode ser modificado para aceitar fun\u00e7\u00f5es \n\nconhecidas que variam no tempo. Quando se conhece a fun\u00e7\u00e3o, mas n\u00e3o se \n\nconhece as matrizes lineares, elas podem ser obtidas no tempo, atrav\u00e9s de c\u00e1lculos \n\nenvolvendo gradiente da fun\u00e7\u00e3o a ser linearizada\n84\n\n, ou seja: \n\n \n\n     \n  \n\n  \n      (13) \n\n   \n  \n\n  \n      (14) \n\n \n\n Assim, o algoritmo do filtro de Kalman Discreto pode ser reescrito como: \n\n  \n\n\n\n50 \n\n \n\n  \n\n \n  \n \n\n  \n \n\n   \n         \n\n   \n              \n\n   \n\n   \n   \n\n   \n\n    \n     \n\n       \n             \n\n   \n\n               \n \n\n     (15) \n\n \n\nO problema da lineariza\u00e7\u00e3o \u00e9 que envolve c\u00e1lculos de matrizes jacobianas\nt\n e \n\nhessianas\nu\n, que nem sempre s\u00e3o eficientes e precisos e depende do conhecimento \n\ndas fun\u00e7\u00f5es. Como nem sempre a fun\u00e7\u00e3o de processo \u00e9 conhecida, pode-se usar \n\numa RNA para fazer um mapeamento e a partir da entrada e dos pesos da rede \n\nestabelecer um c\u00e1lculo mais preciso da matriz de lineariza\u00e7\u00e3o. Assim o filtro teria a \n\ncapacidade de resolver de forma mais precisa um problema linear anteriormente \n\ntrabalhado de acordo com as entradas e as sa\u00eddas observadas. \n\n \n\n \n\n3.2.3 FILTRO DE KALMAN COM REDES NEURAIS ARTIFICIAIS \n(RNAS) \n\n \n\n \n\nComo o filtro tamb\u00e9m tem a capacidade de estimar estados ocultos, o filtro de \n\nKalman pode treinar uma RNA a partir de observa\u00e7\u00f5es, modificando os valores de \n\npesos de acordo com a sa\u00edda observada, como um treinamento supervisionado. \n\nOs pesos treinados podem ser utilizados como par\u00e2metros em outro  filtro \n\npara a estima\u00e7\u00e3o de novos estados. Ainda h\u00e1 a possibilidade de interligar os dois \n\nfiltros para trabalharem de forma conjunta, com estima\u00e7\u00e3o de par\u00e2metros e estados \n\nem tempo-real. Neste caso espec\u00edfico, um filtro treina a RNA de acordo com a sa\u00edda \n\ndo outro filtro de forma din\u00e2mica.  \n\n \n\nO processo de treinamento das RNAs pode ser feito utilizando filtros de \n\nKalman. Assim, ele pode ser realizado utilizando-se um filtro dedicado para o \n\ntreinamento e outro filtro, que auxilia no estabelecimento dos pesos da rede neural, \n\n                                            \nt\n Matrizes formadas pelas derivadas parciais de primeira ordem de uma fun\u00e7\u00e3o vetorial. \n\nu\n Matrizes formadas pelas derivadas parciais de segunda ordem de uma fun\u00e7\u00e3o vetorial. \n\n\n\n51 \n\n \n\nisto \u00e9, com base na estimativa dos estados/pesos da RNA para mapear a fun\u00e7\u00e3o de \n\ntransfer\u00eancia da equa\u00e7\u00e3o de processo.  \n\nDesta forma, as equa\u00e7\u00f5es do sistema passam a ser descritas como: \n\n \n\n \n             \n\n \n            \n\n              (16) \n\n                 \n\nA estimativa de par\u00e2metros envolve a determina\u00e7\u00e3o de um mapeamento n\u00e3o \n\nlinear, dado por \n\n \n\n                    (17) \n\n \n\nonde xk \u00e9 a entrada, W representa os pesos e yk \u00e9 a sa\u00edda. O mapeamento n\u00e3o \n\nlinear g \u00e9 parametrizado pelo vetor W. O mapeamento n\u00e3o linear \u00e9 assim feito pela \n\nRNA, onde W \u00e9 conjunto de pesos. O aprendizado corresponde \u00e0 estima\u00e7\u00e3o dos \n\npar\u00e2metros de W. O treinamento pode ser feito com pares de amostras, envolvendo \n\numa entrada conhecida e sa\u00edda desejada (xk,dk). O erro \u00e9 definido pela equa\u00e7\u00e3o 18. \n\nO objetivo do aprendizado envolve a minimiza\u00e7\u00e3o do erro quadr\u00e1tico esperado, isto \n\n\u00e9: \n\n \n\n                  (18) \n\n \n\nPara se estimar os par\u00e2metros, escreve-se um novo conjunto de equa\u00e7\u00f5es \n\npara a representa\u00e7\u00e3o estado-espacial, na forma: \n\n \n\n \n          \n\n              \n \n               (19) \n\n \n\nonde os par\u00e2metros Wk correspondem a um processo estacion\u00e1rio com uma matriz \n\nidentidade de transi\u00e7\u00e3o de estado, governado por um ru\u00eddo processual vk (a escolha \n\nda vari\u00e2ncia determina o desempenho da filtragem). A sa\u00edda yk corresponde a uma \n\nobserva\u00e7\u00e3o n\u00e3o linear em Wk. O filtro de Kalman Descentralizado pode ser aplicado \n\ndiretamente como uma eficiente t\u00e9cnica de terceira ordem para corre\u00e7\u00e3o dos \n\npar\u00e2metros. \n\n\n\n52 \n\n \n\n  \n\nComo o problema de estima\u00e7\u00e3o consiste em trabalhar sobre uma entrada xk \n\nn\u00e3o observada e requer uma uni\u00e3o entre a estima\u00e7\u00e3o dos estados e par\u00e2metros, o \n\nmesmo deve ser considerado um problema de estima\u00e7\u00e3o conjunta com pesos e \n\nestados, considerando uma din\u00e2mica discreto-temporal de um sistema n\u00e3o linear, o \n\nqual pode ser escrito na forma: \n\n \n\n \n \n    \n  \n\n   \n           \n\n  \n \n\n           \n\n      (20) \n\n \n\nonde ambos os estados do sistema dado por    e o conjunto dos par\u00e2metros W para \n\no sistema din\u00e2mico devem ser estimados atrav\u00e9s de uma observa\u00e7\u00e3o do estado \n\nobservado (ruidoso)   . \n\nAs t\u00e9cnicas utilizadas em Intelig\u00eancia Artificial (Computacional) e em \n\nestima\u00e7\u00e3o com o filtro de Kalman s\u00e3o usadas para aumentar a efici\u00eancia de filtragem \n\ne resolver problemas de ordens mais elevadas. S\u00f3 que o filtro de Kalman ainda \n\nprecisa de uma matriz de transfer\u00eancia conhecida na equa\u00e7\u00e3o de processo para \n\numa estima\u00e7\u00e3o \u00f3tima. Logo viu-se a necessidade de arranjar um novo m\u00e9todo para \n\nque o filtro de Kalman suporte fun\u00e7\u00f5es n\u00e3o lineares sem perder a precis\u00e3o ou que \n\nhaja um controle maior na mesma. \n\nA maior precis\u00e3o e mapeamento de fun\u00e7\u00f5es n\u00e3o lineares s\u00e3o feitos atrav\u00e9s \n\nde transformada descentralizada. O controle da precis\u00e3o passa a ser feito por novos \n\npar\u00e2metros, o que aumenta o grau de complexidade do filtro, mas permite que os \n\nnovos valores fossem reais e n\u00e3o aproximados. Esse tipo de filtro \u00e9 chamado \n\nusualmente de Filtro de Kalman Descentralizado (Unscented Kalman Filter), que \n\nser\u00e1 apresentado na pr\u00f3xima se\u00e7\u00e3o. \n\n \n\n \n\n3.2.4 FILTRO DE KALMAN DESCENTRALIZADO \n \n\n \n\nO filtro de Kalman Descentralizado \u00e9 similar \u00e0 vers\u00e3o extendida\n85\n\n. A \n\ndistribui\u00e7\u00e3o de estados \u00e9 representada por uma vari\u00e1vel aleat\u00f3ria Gaussiana, \n\n\n\n53 \n\n \n\nespecificada pelo uso de um conjunto m\u00ednimo de pontos de amostragem \n\ncuidadosamente escolhidos.  \n\nOs pontos amostrados capturam as verdadeiras m\u00e9dias e covari\u00e2ncias de \n\numa vari\u00e1vel aleat\u00f3ria e quando ela \u00e9 propagada atrav\u00e9s de uma fun\u00e7\u00e3o n\u00e3o linear, \n\npromovendo, de forma precisa, uma estima\u00e7\u00e3o de terceira ordem para qualquer n\u00e3o \n\nlinearidade. Todo esse processo \u00e9 feito atrav\u00e9s do uso de um processamento \n\ndescentralizado como pode ser ver na Figura 10. \n\n \n\n \n\nFigura 10 - Processo o qual o filtro de Kalman Descentralizado faz uma \nestima\u00e7\u00e3o da m\u00e9dia e covari\u00e2ncia de uma vari\u00e1vel aleat\u00f3ria. \n\nConsidere um espalhamento da vari\u00e1vel aleat\u00f3ria x (com dimens\u00e3o L) atrav\u00e9s \n\nde uma fun\u00e7\u00e3o n\u00e3o linear y=g(x), assumindo que ela possui uma m\u00e9dia     e \n\ncovari\u00e2ncia Px para calcular y. Isso pode ser feito para formar uma matriz X de 2L+1 \n\nvetores sigmas (com correspond\u00eancia aos pesos Wi), de acordo com: \n\n \n\n\n\n54 \n\n \n\n  \n\n \n \n \n \n\n \n \n \n\n    \n\n                              \n\n                                 \n\n  \n   \n\n        \n\n  \n   \n\n                 \n\n \n \n   \n\n  \n \n   \n\n                           \n\n    (21) \n\n \n\nonde  = \n2\n(L+k)-L \u00e9 um par\u00e2metro escalar. A vari\u00e1vel   determina o ponto de \n\nespalhamento sigma em volta da m\u00e9dia    e \u00e9 sempre um m\u00ednimo positivo. k \u00e9 um \n\npar\u00e2metro escalar secund\u00e1rio definido como 0.   \u00e9 usado para incorporar o \n\nconhecimento a priori da distribui\u00e7\u00e3o de x (para distribui\u00e7\u00f5es Gaussianas,  =2 \u00e9 \n\nassumido como um valor \u00f3timo).             \u00e9 a i-\u00e9sima linha da matriz da raiz \n\nquadrada. (c) denota os pesos da covari\u00e2ncia e (m) os pesos da m\u00e9dia. \n\nA transforma\u00e7\u00e3o descentralizada \u00e9 um m\u00e9todo usado para calcular as \n\nestat\u00edsticas de uma vari\u00e1vel aleat\u00f3ria atrav\u00e9s de uma transforma\u00e7\u00e3o n\u00e3o linear, \n\ncomo pode ser vista na Figura 11.  \n\n \n\nFigura 11 - Esquem\u00e1tico para uma transforma\u00e7\u00e3o descentralizada da \ncovari\u00e2ncia. \n\n Os vetores sigmas s\u00e3o propagados atrav\u00e9s da fun\u00e7\u00e3o n\u00e3o linear: \n\n \n\n                            (22) \n\n \n\nA m\u00e9dia e a covari\u00e2ncia    s\u00e3o aproximadas pelo uso da m\u00e9dia e covari\u00e2ncia \n\nda amostra nos pontos sigmas, isto \u00e9: \n\n\n\n55 \n\n \n\n \n\n  \n    \n\n \n   \n\n  \n  \n   \n\n      \n   \n\n            \n   \n\n   \n\n    (23) \n\n. \n\nEste m\u00e9todo se difere dos m\u00e9todos gerais de amostragem (como os m\u00e9todos \n\nde Monte-Carlo e os filtros de part\u00edculas), que requerem ordens de magnitudes \n\nampliadas com um maior n\u00famero de pontos amostrados numa tentativa de definir e \n\npropagar as distribui\u00e7\u00f5es dos estados (possivelmente distribui\u00e7\u00f5es n\u00e3o Gaussianas) \n\n86-88\n. A descentraliza\u00e7\u00e3o aborda os resultados de uma forma mais precisa para as \n\nentradas, que envolvem distribui\u00e7\u00f5es Gaussianas de terceira ordem para todas as \n\nn\u00e3o linearidades. \n\nO filtro de Kalman descentralizado \u00e9 uma extens\u00e3o direta da transforma\u00e7\u00e3o \n\ndescentralizada para a equa\u00e7\u00e3o de estima\u00e7\u00e3o recursiva \n\n \n\n       \n            \n\n      (24) \n\n \n\nonde o estado das vari\u00e1veis aleat\u00f3rias \u00e9 redefinido com a concatena\u00e7\u00e3o dos estados \n\noriginais e do ru\u00eddo: \n\n \n\n   \n     \n\n   \n   \n\n   .      (25) \n\n \n\nA sele\u00e7\u00e3o dos pontos sigmas \u00e9 aplicada para um novo estado da vari\u00e1vel \n\naleat\u00f3ria para selecionar e calcular a matriz sigma correspondente    \n \n.  \n\nCom o uso das fun\u00e7\u00f5es do modelo e a transi\u00e7\u00e3o de estados feita pela \n\ncontribui\u00e7\u00e3o de propaga\u00e7\u00e3o de pontos sigmas, elimina-se a necessidade de se \n\ncalcular matrizes jacobianas ou hessianas. O n\u00famero de c\u00e1lculos total \u00e9 o mesmo \n\ndo filtro em sua forma estendida relacionado ao controle n\u00e3o linear que requer uma \n\nretroalimenta\u00e7\u00e3o dos estados. Nestas aplica\u00e7\u00f5es, o modelo din\u00e2mico \u00e9 um modelo \n\nparam\u00e9trico que \u00e9 assumido como conhecido. \n\nDevido \u00e0 instabilidade num\u00e9rica do ru\u00eddo e do uso da fatora\u00e7\u00e3o de Cholesky\nv\n \n\npara determinar a raiz quadrada da matriz de probabilidade, van der Merwe e Wan \n\n                                            \nv \n\u00c9 o m\u00e9todo que permite que uma matriz sim\u00e9trica e positiva definida possa ser decomposta em uma \n\nmatriz triangular inferior e sua transposta. A fatora\u00e7\u00e3o de Cholesky \u00e9 muito \u00fatil na resolu\u00e7\u00e3o de \n\n\n\n56 \n\n \n\n  \n\ndesenvolveram o Filtro de Kalman Descentralizado de Raiz Quadrada, o que permite \n\num melhor controle dos valores da matriz de vari\u00e2ncia que devido ao problema da \n\nmatriz vir a ser negativa ou indefinida\n88\n\n. Como o Filtro de Kalman Descentralizado \n\noriginal, o filtro de Kalman Descentralizado de Raiz Quadrada \u00e9 inicializado \n\ncalculando-se a raiz quadrada da matriz de covari\u00e2ncia dos estados pela fatora\u00e7\u00e3o \n\nde Cholesky, isto \u00e9: \n\n \n\n                          \n            (26) \n\n \n\nO filtro de Kalman Descentralizado com o uso de raiz quadrada \u00e9 formado \n\npelas equa\u00e7\u00f5es 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38 e 39: \n\n \n\na) C\u00e1lculo dos pontos sigmas: \n\n \n\n   \n        \n\n      \n            \n\n     (27) \n\n \n\nonde X \u00e9 o conjunto de pontos onde a transformada descentralizada \u00e9 baseada na \n\nm\u00e9dia e na covari\u00e2ncia a priori.  \n\n \n\nb) Equa\u00e7\u00f5es de Predi\u00e7\u00e3o: \n\n \n\n   \n    \n\n \n     \n\n                 (28) \n\n \n\nonde W\n(m)\n\n representa o conjunto de pesos dos pontos sigmas usados para a \n\nreconstru\u00e7\u00e3o da m\u00e9dia verdadeira. \n\n \n\n  \n         \n\n   \n            \n\n     \n             (29) \n\n \n\nonde W\n(c)\n\n representa o conjunto de pesos dos pontos sigmas usados para a \n\nreconstru\u00e7\u00e3o da covari\u00e2ncia verdadeira. \n\n                                                                                                                                        \nproblemas de ortoganaliza\u00e7\u00e3o de sinais. A decomposi\u00e7\u00e3o de Cholesky se d\u00e1 da forma A=LD(L\u2019) onde \nL \u00e9 matriz triangular inferior(com 1 na diagonal principal) e D \u00e9 matriz diagonal. \n\n\n\n57 \n\n \n\nUma subsequente atualiza\u00e7\u00e3o de Cholesky (ou regress\u00e3o) na equa\u00e7\u00e3o abaixo \n\n\u00e9 necess\u00e1ria desde que o peso W0 talvez seja negativo: \n\n \n\n  \n               \n\n      \n     \n\n    \n   \n\n    (30) \n\n      \n        \n\n      \n       (31) \n\n \n\nonde F \u00e9 a fun\u00e7\u00e3o da propaga\u00e7\u00e3o das transi\u00e7\u00f5es dos estados dos pontos sigmas. \n\n \n\nc) Equa\u00e7\u00f5es de Corre\u00e7\u00e3o:  \n\n \n\n             \n      \n\n       (32) \n\n \n\nonde   \u00e9 a fun\u00e7\u00e3o do sistema para a gera\u00e7\u00e3o dos pontos sigmas para os estados \n\nobservados  . \n\n \n\n   \n    \n\n \n     \n\n           \n \n\n     (33) \n\n \n\nonde y \u00e9 o estado observado estimado, reconstru\u00eddo pelos pontos sigmas. \n\n \n\n     \n         \n\n   \n            \n\n             (34) \n\n     \n                 \n\n          \n    \n\n   \n .   (35) \n\n \n\nDiferente da maneira que o ganho de Kalman \u00e9 calculado no filtro de Kalman \n\nDescentralizado padr\u00e3o, aqui o ganho \u00e9 calculado usando-se duas invers\u00f5es: \n\n \n\n           \n               (36) \n\n \n\nonde as equa\u00e7\u00f5es que representam a corre\u00e7\u00e3o da m\u00e9dia a priori: \n\n \n\n       \n          \n\n        (37) \n\n \n\n\n\n58 \n\n \n\n  \n\nUma vez que a matriz de covari\u00e2ncia \u00e9 quadrada e triangular, uma troca \n\neficiente pode ser usada para resolv\u00ea-la diretamente, sem que se tenha que inverter \n\na matriz. Finalmente a fatora\u00e7\u00e3o de Cholesky atualiza a vari\u00e2ncia do estado, a qual \u00e9 \n\ncalculada aplicando uma sequ\u00eancia de regress\u00f5es de Cholesky, ou seja:  \n\n \n\n                \n           (38) \n\n \n\nLogo, o vetor para a regress\u00e3o \u00e9 representado pela coluna da equa\u00e7\u00e3o na forma: \n\n \n\n               (39) \n\n \n\nTendo o conhecimento a priori da fun\u00e7\u00e3o do processo e utilizando um filtro de \n\nKalman que suporte fun\u00e7\u00f5es n\u00e3o lineares, \u00e9 poss\u00edvel obter-se uma melhoria \n\nsignificativa na rela\u00e7\u00e3o sinal/ru\u00eddo considerada.  \n\nQuando n\u00e3o se conhece a fun\u00e7\u00e3o do processo ou at\u00e9 mesmo a distribui\u00e7\u00e3o \n\nda vari\u00e1vel n\u00e3o \u00e9 considerada uma distribui\u00e7\u00e3o Gaussiana, o uso de uma rede \n\nneural pode ajudar a promover uma melhor fun\u00e7\u00e3o de mapeamento do processo \n\npara a redu\u00e7\u00e3o do ru\u00eddo. Para isso, uma estima\u00e7\u00e3o dos pesos faz-se necess\u00e1rio. \n\nNeste contexto, utilizando o princ\u00edpio da n\u00e3o linearidade do filtro de Kalman \n\nDescentralizado para o uso de fun\u00e7\u00e3o n\u00e3o linear e a experi\u00eancia de se estimar \n\nestados ocultos Markovianos\nw\n, podendo fazer uma estima\u00e7\u00e3o conjunta envolvendo \n\nos pesos e os estados.  \n\nPara se determinar o comportamento de uma fun\u00e7\u00e3o, pode-se utilizar o \n\npr\u00f3prio filtro para predi\u00e7\u00e3o linear ou fazer uma predi\u00e7\u00e3o n\u00e3o linear usando as redes \n\nneurais.  \n\nTrabalhos anteriores focaram o uso de filtro de Kalman em filtragem de \n\nproje\u00e7\u00f5es tomogr\u00e1ficas e apresentaram as efici\u00eancias dos resultados considerando \n\na estima\u00e7\u00e3o linear ou a estima\u00e7\u00e3o feita com o uso de redes neurais, bem como os \n\nprimeiros passos para seu uso em um sistema embarcado usando FPGA\n16,45,46,89-93\n\n.   \n\n                                            \nw\n Cadeia de Markov \u00e9 um caso particular de processo estoc\u00e1stico com estados discretos onde os \n\nestados anteriores s\u00e3o irrelevantes para a predi\u00e7\u00e3o dos estados seguintes, desde que o estado atual \nseja conhecido. Um modelo oculto de Markov \u00e9 um modelo estat\u00edstico em que o sistema modelado \u00e9 \nassumido como um processo de Markov com par\u00e2metros desconhecidos, e o desafio \u00e9 determinar os \nestados ocultos a partir dos estados observ\u00e1veis.  \n\n\n\n59 \n\n \n\nO uso de RNA permite que rela\u00e7\u00f5es entre vari\u00e1veis sejam entendidas como \n\nfun\u00e7\u00f5es a serem mapeadas. Num sistema real, todas as vari\u00e1veis s\u00e3o aleat\u00f3rias, ou \n\nseja, trabalham dentro de um determinado campo de valores com uma m\u00e9dia e \n\nvari\u00e2ncia conhecidas ou aproximadas. Em se tratando de precis\u00e3o, o valor em \n\ndeterminado tempo pode se apresentar diferentemente de outros valores passados \n\ne valores que ainda ser\u00e3o aferidos.   \n\n \n\n \n\n3.3 M\u00c9TODO DE RECONSTRU\u00c7\u00c3O TOMOGR\u00c1FICA DE RAIOS X \n \n\n \n\nAs maiores contribui\u00e7\u00f5es para o desenvolvimento da tomografia \n\ncomputadorizada derivam-se dos trabalhos de Radon (1917), Cormack (1963)\n \ne \n\nHounsfield (1973)\n26,29,30\n\n. Radon foi o primeiro a apresentar solu\u00e7\u00f5es matem\u00e1ticas \n\npara a reconstru\u00e7\u00e3o de corpos a partir de proje\u00e7\u00f5es, enquanto Cormack \n\ndesenvolveu t\u00e9cnicas para reconstruir imagens utilizando o m\u00e9todo de retroproje\u00e7\u00e3o, \n\ndesconhecendo o trabalho de Radon. J\u00e1 Hounsfield desenvolveu o primeiro \n\ntom\u00f3grafo computadorizado de raios X. \n\nA tomografia computadorizada, de raios X e gama de 1\u00aa gera\u00e7\u00e3o, utiliza um \n\nfeixe colimado de radia\u00e7\u00e3o, o qual define planos t\u00e3o finos quanto o pr\u00f3prio feixe e, \n\natrav\u00e9s de v\u00e1rios feixes colimados paralelos, podem-se definir v\u00e1rios planos. Assim, \n\nobt\u00eam-se valores que formam proje\u00e7\u00f5es a partir de cada reta de propaga\u00e7\u00e3o dos \n\nfeixes que partem da fonte para o detector. \n\nNa Figura 12, observa-se uma linha tracejada que representa a radia\u00e7\u00e3o que \n\nparte da fonte para o detector. Ela atravessa o objeto e, \u00e0 medida que o conjunto \n\ncaminha atrav\u00e9s dos eixos L\u2019 e L, que formam com o eixo x o \u00e2ngulo ?, as proje\u00e7\u00f5es \n\nv\u00e3o sendo obtidas.  \n\nAs varreduras devem ser realizadas para n valores de   dentro do intervalo de \n\n0&lt;<180\no\n. Assim, obt\u00e9m-se a varredura completa da transformada de Radon do \n\nobjeto. \n\n \n\n \n\n\n\n60 \n\n \n\n  \n\n \n\nFigura 12 - Ilustra\u00e7\u00e3o da tomografia de transmiss\u00e3o de um tom\u00f3grafo de 1\u00aa \ngera\u00e7\u00e3o onde s\u00e3o feitas varreduras da amostra utilizando-se de \nmovimentos de transla\u00e7\u00e3o e rota\u00e7\u00e3o\n\n43\n. \n\nA partir das proje\u00e7\u00f5es amostradas \u00e9 poss\u00edvel usar a transformada inversa de \n\nRadon ou de m\u00e9todos derivados desta transformada para a reconstru\u00e7\u00e3o da fatia, \n\ncomo pode ser visto na Figura 13.  \n\n \n\nFigura 13 -  Proje\u00e7\u00e3o paralela de f(x,y) para a Transformada de Radon\n43\n\n. \n\n \n\n\n\n61 \n\n \n\nA qualidade da imagem reconstru\u00edda depender\u00e1 diretamente da qualidade da \n\namostragem das proje\u00e7\u00f5es e do m\u00e9todo usado para a reconstru\u00e7\u00e3o. \n\nO raio        no plano onde z = 0 pode ser expresso matematicamente por: \n\n \n\n                  (40) \n\n \n\nonde t \u00e9 a dist\u00e2ncia perpendicular da origem at\u00e9 a linha.  \n\nCom o uso desta equa\u00e7\u00e3o do raio, a integral do raio P?(t) \u00e9 dada por: \n\n \n\n                                            \n \n\n          \n.  (41) \n\n \n\n Com P?(t) sendo uma fun\u00e7\u00e3o de t representando a proje\u00e7\u00e3o paralela com \n\n\u00e2ngulo ? cont\u00ednuo, a fun\u00e7\u00e3o P?(t) \u00e9 a transformada de Randon de f(x,y). As \n\nproje\u00e7\u00f5es dadas foram obtidas paralelamente \u00e0 rota\u00e7\u00e3o no eixo x nomeada por t. \n\n  Um dos principais algoritmos para a reconstru\u00e7\u00e3o de imagens tomogr\u00e1ficas \u00e9 \n\no algoritmo de retroproje\u00e7\u00e3o filtrada, por fornecer rapidez, precis\u00e3o e facilidade em \n\nsua implementa\u00e7\u00e3o\n5\n. O princ\u00edpio \u00e9 que o coeficiente de atenua\u00e7\u00e3o \u00e9 estimado pela \n\nsoma total dos coeficientes que atravessam o ponto.  \n\nEle pode ser visto como uma deriva\u00e7\u00e3o dos teoremas das sec\u00e7\u00f5es de Fourier \n\nadotando o uso de coordenadas polares no lugar dos sistemas de coordenadas \n\nretangulares: \n\n \n\n                     \n                  \n\n \n\n \n\n  \n\n \n\n               \n                  \n\n \n\n \n\n \n\n \n\n                    \n                                \n\n \n\n \n\n \n\n \n\n (42) \n\n \n\nUsando                     na equa\u00e7\u00e3o 42 pode-se escrever \n\n       como a ajuda do teorema das sec\u00e7\u00f5es de Fourier e a express\u00e3o   em termos \n\nde   e   como definidos pela transformada inversa de Fourier:  \n\n \n\n                            \n \n\n  \n   \n\n \n\n \n\n              \n       \n\n \n\n  \n   \n\n \n\n \n\n   (43) \n\n\n\n62 \n\n \n\n  \n\n \n\nA forma filtrada retroprojetada da equa\u00e7\u00e3o 43 \u00e9 constru\u00edda a partir da \n\nequa\u00e7\u00e3o em duas opera\u00e7\u00f5es diferentes. A primeira \u00e9 a filtragem dos dados de \n\nproje\u00e7\u00e3o para cada \u00e2ngulo  , como se segue: \n\n \n\n                \n       \n\n \n\n  \n   (44) \n\n \n\nA segunda equa\u00e7\u00e3o baseia-se na retroproje\u00e7\u00e3o das proje\u00e7\u00f5es filtradas para \n\nse obter a fun\u00e7\u00e3o objeto: \n\n \n\n                            \n \n\n \n    (45) \n\n \n\nPara cada pixel(x,y) no plano da imagem, existir\u00e1 um valor de          \n\n       para cada proje\u00e7\u00e3o filtrada Q?, obtida no \u00e2ngulo ?. Cada uma destas \n\nproje\u00e7\u00f5es filtradas contribuir\u00e1 para a reconstru\u00e7\u00e3o do ponto (x,y) com seu valor em t. \n\nConforme pode ser observado na Figura 14 todos os pontos sobre a linha LM \n\nreceber\u00e3o a mesma contribui\u00e7\u00e3o de     para o \u00e2ngulo ?i\n94\n\n. \n\n \n\nFigura 14 - Retroproje\u00e7\u00e3o dos pontos sobre a linha LM a partir do dado  \n  \n    \n\nda proje\u00e7\u00e3o filtrada  \n  \n\n9. \n\n  \n\n\n\n63 \n\n \n\n3.4 MODELAGEM DO SISTEMA DE FILTRAGEM A SER \nEMBARCADO \n\n \n\n \n\nO modelo f\u00edsico da contagem de f\u00f3tons \u00e9 definido pela equa\u00e7\u00e3o: \n\n \n\n      \n          (46) \n\n \n\nonde I0  \u00e9 o n\u00famero de f\u00f3tons que sai da fonte de raios X e gama, ? \u00e9 o coeficiente \n\nde atenua\u00e7\u00e3o linear de raios X, d \u00e9 a dist\u00e2ncia entre a fonte e o detector e Ii \u00e9 a \n\ncontagem de f\u00f3tons que passam atrav\u00e9s do material e chega ao detector. A \n\ncontagem de f\u00f3tons \u00e9 afetada por um ru\u00eddo do tipo Poisson.  \n\nPara uma modelagem mais pr\u00f3xima ao modelo f\u00edsico, primeiro trabalhou-se \n\ncada proje\u00e7\u00e3o de forma individual, como se fossem posi\u00e7\u00f5es variantes no tempo. \n\nEssa abordagem cl\u00e1ssica permitiu desenvolver uma din\u00e2mica para a estima\u00e7\u00e3o das \n\nproje\u00e7\u00f5es livre de ru\u00eddos, ou seja: \n\n \n\n \n               \n\n           \n              (47) \n\n \n\nOnde Pk \u00e9 uma proje\u00e7\u00e3o livre de ru\u00eddos e Ik, uma proje\u00e7\u00e3o perturbada por ru\u00eddos. As \n\nvari\u00e1veis qk-1 e rk s\u00e3o ru\u00eddos brancos, isto \u00e9, possuem distribui\u00e7\u00e3o qk-1~N(0,Q) e \n\nrk~N(0,R), isto \u00e9, distribui\u00e7\u00e3o Gaussiana normal com m\u00e9dias iguais a 0 e vari\u00e2ncias \n\nQ e R, respectivamente.  \n\nA fun\u00e7\u00e3o f pode ser utilizada como um mapeamento de redes neurais ou uma \n\nmatriz de transfer\u00eancia de estados. A fun\u00e7\u00e3o h \u00e9 uma fun\u00e7\u00e3o que oculta os estados \n\nn\u00e3o observados, tamb\u00e9m podendo ser representada por uma matriz. Ela tamb\u00e9m \n\npode ser ajustada ao ru\u00eddo Poisson utilizando a transformada de Anscombe\n95\n\n.  \n\nO que se prop\u00f5e nesse trabalho \u00e9 utilizar um novo modelo baseado no \n\nmodelo f\u00edsico, determinando as vari\u00e1veis do processo e como \u00e9 feita a observa\u00e7\u00e3o. \n\nA equa\u00e7\u00e3o de processo define um estado anterior xk-1 atrav\u00e9s de uma \n\ntransforma\u00e7\u00e3o feita pela fun\u00e7\u00e3o f e influ\u00eancia de um ru\u00eddo branco qk-1, se chega ao \n\num novo estado xk. Estes estados podem ser ocultos \u00e0 sa\u00edda do sistema. Assim, \u00e9 \n\n\n\n64 \n\n \n\n  \n\nposs\u00edvel definir uma nova fun\u00e7\u00e3o g que permite transformar essa vari\u00e1vel de acordo \n\ncom o que \u00e9 observado. \n\nO sistema de incerteza do processo de estima\u00e7\u00e3o do valor real possui um \n\nintervalo de confian\u00e7a que \u00e9 definido pela contagem de f\u00f3tons e que \u00e9 dado pelo \n\nru\u00eddo Poisson. Essa incerteza pode ser filtrada com a estima\u00e7\u00e3o de outras medidas \n\nna equa\u00e7\u00e3o que s\u00e3o independentes desse intervalo de confian\u00e7a. Logo, o que acaba \n\nsendo filtrado s\u00e3o os ru\u00eddos provenientes do detector, ou seja, ru\u00eddos mec\u00e2nicos e \n\neletr\u00f4nicos. \n\nUma forma de aumentar a confian\u00e7a no valor esperado \u00e9 mudar o foco sobre \n\no que deve ser estimado para se obter um valor mais confi\u00e1vel de uma medida \n\nesperada.  \n\nComo a varia\u00e7\u00e3o do ru\u00eddo de Poisson tem uma distribui\u00e7\u00e3o m\u00e9dia e vari\u00e2ncia \n\nde valores iguais ao n\u00famero de f\u00f3tons, podemos definir um novo sistema baseado \n\nnuma equa\u00e7\u00e3o de processo em que o raio-soma \u00b5k \u00e9 a vari\u00e1vel utilizada no processo \n\nque permite a observa\u00e7\u00e3o da proje\u00e7\u00e3o, conforme ela se apresenta na matriz de \n\nproje\u00e7\u00f5es: \n\n \n\n \n             \n\n        \n        \n\n      (48) \n\n \n\nA fun\u00e7\u00e3o h \u00e9 relacionada \u00e0 transformada de Anscombe que faz com que a \n\nvari\u00e2ncia do ru\u00eddo branco seja uma aproxima\u00e7\u00e3o ao ru\u00eddo Poisson. Para promover \n\numa melhor estima\u00e7\u00e3o da transi\u00e7\u00e3o dos estados do processo, pode-se usar uma \n\nRNA, ou seja:  \n\n \n\n \n \n  \n  \n\n   \n            \n\n       \n \n\n        \n         \n\n     (49) \n\n \n\nAgora, focando-se na equa\u00e7\u00e3o de observa\u00e7\u00e3o, pode-se tratar a vari\u00e2ncia do \n\nru\u00eddo da observa\u00e7\u00e3o com a transformada de Anscombe atrav\u00e9s do uso combinado \n\ncom sua inversa, \n\n \n\n    \n        \n\n             (50) \n\n\n\n65 \n\n \n\n \n\nonde A representa a transformada e A\n-1\n\n sua inversa. Isso permite trabalhar com um \n\nru\u00eddo Gaussiano com a distribui\u00e7\u00e3o rk~N(0,1).  \n\nPode-se desenvolver uma equa\u00e7\u00e3o baseada na equa\u00e7\u00e3o 4 que determina que \n\no ru\u00eddo Poisson possa ser determinado como  \n\n \n\n     .      (51) \n\n \n\nAssim, podemos escrever a equa\u00e7\u00e3o de observa\u00e7\u00e3o como: \n\n \n\n      \n         \n\n       .     (52) \n\n \n\nonde rk por ter uma distribui\u00e7\u00e3o Gaussiana, assumindo, tamb\u00e9m, valores negativos \n\nou nulos. Essa alternativa permite se desviar do uso da transformada de Anscombe \n\nque \u00e9 apenas uma aproxima\u00e7\u00e3o. \n\nOutro modelo para a equa\u00e7\u00e3o de forma simplificada pode ser definido por: \n\n \n\n      \n              (53) \n\n \n\nonde rk passa a ter uma vari\u00e2ncia dada pela rela\u00e7\u00e3o sinal/ru\u00eddo igual a \n\n \n\n   \n  \n\n   \n.      (54) \n\n \n\nEsse tipo de abordagem permite fazer a inclus\u00e3o de outros ru\u00eddos presentes \n\nno sistema de contagem de f\u00f3tons atrav\u00e9s da propaga\u00e7\u00e3o de erros.  \n\nPara definir a covari\u00e2ncia do ru\u00eddo de observa\u00e7\u00e3o R, o ru\u00eddo a ser tratado leva  \n\nem conta n medidas de grandezas prim\u00e1rias feitas a partir da observa\u00e7\u00e3o das \n\nvari\u00e1veis do sistema {Io,\u00b5,d}. O c\u00e1lculo de I \u00e9 feito a partir da rela\u00e7\u00e3o entre essas \n\nvari\u00e1veis. Em linguagem formal, pode-se escrever: \n\n \n\n           .     (55) \n\n \n\n\n\n66 \n\n \n\n  \n\nSe os erros com que as grandezas Io, \u00b5 e d medidas forem dados por ?I0, ?\u00b5 \n\ne ?d,  o erro ?I da contagem de f\u00f3tons ser\u00e1 dada pela express\u00e3o \n\n \n\n    \n  \n\n   \n      \n\n  \n\n  \n     \n\n  \n\n  \n   .   (56) \n\n \n\nOs valores de        e    s\u00e3o dados pelo desvio padr\u00e3o da m\u00e9dia ou por seu \n\nestimador conforme se tem muita ou pouca medidas das grandezas Io, \u00b5 e d. \n\nPode-se determinar o erro estat\u00edstico das vari\u00e1veis f\u00edsicas independentes e \n\ntornar dependente a vari\u00e2ncia da vari\u00e1vel f\u00edsica para o c\u00e1lculo do erro estat\u00edstico das \n\nvari\u00e1veis f\u00edsicas independentes, bem como tornar a vari\u00e2ncia da vari\u00e1vel f\u00edsica \n\ndependente para o c\u00e1lculo do erro estat\u00edstico, isto \u00e9: \n\n \n\n  \n   \n\n  \n\n   \n \n\n \n\n   \n   \n\n  \n\n  \n \n\n \n\n  \n    \n\n  \n\n  \n \n\n \n\n  \n \n.   (57) \n\n \n\nAl\u00e9m da incerteza das vari\u00e1veis do sistema, tem-se um ru\u00eddo caracter\u00edstico do \n\ndetector. Essa varia\u00e7\u00e3o do ru\u00eddo \u00e9 conhecida quando se fecha o detector, mas \n\nmesmo assim contagens s\u00e3o observadas.  \n\nContagens observadas est\u00e3o associadas diretamente a um ru\u00eddo aditivo, \n\npodendo ser acrescentado na equa\u00e7\u00e3o como um erro ligado \u00e0 vari\u00e1vel I: \n\n \n\n  \n   \n\n  \n\n   \n \n\n \n\n   \n   \n\n  \n\n  \n \n\n \n\n  \n   \n\n  \n\n  \n \n\n \n\n  \n   \n\n  \n\n  \n \n\n \n\n  \n .    (58) \n\n \n\nLogo,   \n  passa a definir a covari\u00e2ncia do ru\u00eddo de observa\u00e7\u00e3o de entrada do \n\nfiltro dada por R. \n\nNa literatura s\u00e3o definidos modos de inferir a covari\u00e2ncia do ru\u00eddo do \n\nprocesso dado por Q. Desde que o sinal \u00e9 observado, pode-se usar a covari\u00e2ncia do \n\nsinal ruidoso para definir a covari\u00e2ncia Q\n84\n\n.  \n\nComo a covari\u00e2ncia do processo \u00e9 diretamente associada ao vetor ?, a \n\nequa\u00e7\u00e3o de Beer-Lambert pode ser escrita como: \n\n \n\n      \n  \n\n \n        (59) \n\n\n\n67 \n\n \n\n \n\nPara este vetor, a covari\u00e2ncia Q necess\u00e1ria para entrada do filtro, pode ser \n\nobtida como: \n\n \n\n           \n      (60) \n\n \n\nMas, para uma estima\u00e7\u00e3o mais precisa, \u00e9 necess\u00e1ria uma covari\u00e2ncia de \n\nprocesso livre de ru\u00eddos ou aproximada. Inferindo que S seja a covari\u00e2ncia do sinal \n\nruidoso, Q a covari\u00e2ncia do ru\u00eddo do processo e R a covari\u00e2ncia do ru\u00eddo da \n\nobserva\u00e7\u00e3o, tem-se a seguinte rela\u00e7\u00e3o: \n\n \n\n           (61) \n\n \n\nComo R pode ser medido no sistema e se pode obter um Q que seja afetado \n\npelo ru\u00eddo com vari\u00e2ncia R  pode-se chegar a   \n\n \n\n           (62) \n\n \n\nIsso pode ser feito usando a t\u00e9cnica de propaga\u00e7\u00e3o de erros para se obter \n\numa covari\u00e2ncia   na grandeza dos processos Q e S. \n\nOutro passo importante \u00e9 a defini\u00e7\u00e3o das constantes de controle  ,   e ?. \n\nComo a magnitude da vari\u00e1vel do processo \u00b5 difere da vari\u00e1vel da observa\u00e7\u00e3o I,  =1 \n\nfoi escolhido. No caso deste valor ser maior ou menor do que o ideal n\u00e3o h\u00e1 \n\npossibilidade de filtragem, podendo causar, ainda, instabilidades num\u00e9ricas no filtro. \n\nComo sugerido na literatura, para um par\u00e2metro ou uma estima\u00e7\u00e3o conjunta, a \n\nvari\u00e1vel   se mant\u00e9m como  =2, enquanto o valor de ? passa a ser igual a 3-n, onde \n\nn est\u00e1 relacionado ao n\u00famero de neur\u00f4nios. \n\nNeste trabalho, os equipamentos utilizados envolveram um minitom\u00f3grafo de \n\nraios X e gama de primeira gera\u00e7\u00e3o e um microtom\u00f3grafo\n24\n\n para medidas \n\nmicrom\u00e9tricas, ambos desenvolvidos na Embrapa Instrumenta\u00e7\u00e3o\n12\n\n, um computador \n\ndesktop (equipado com um processador Quad-core) e um kit de desenvolvimento de \n\nFPGAs Cyclone III (EP3C120F780), fabricado pela Altera, conforme ilustrado na \n\nFigura 15.  \n\n\n\n68 \n\n \n\n  \n\n \n\nFigura 15 - Kit de desenvolvimento em FPGA fabricado pela Altera que ser\u00e1 \nutilizado para o embarque do filtro de Kalman. \n\n \n\nO Kit de desenvolvimento de FPGA utilizado para o embarque do filtro  \n\napresenta as seguintes configura\u00e7\u00f5es: \n\n? Circuito USB-Blaster\u2122 que inclui um CPLD Altera MAX\n\u00ae\n II que permite \n\ncarregar os arquivos de configura\u00e7\u00e3o da FPGA via cart\u00e3o de mem\u00f3ria \n\nflash ou por um computador. \n\n? Mem\u00f3ria principal de 256 MB DDR2 SDRAM com canal duplo com \n\ncorre\u00e7\u00e3o de erros. \n\n? Mem\u00f3ria SRAM de 8 MB, que permite fazer uma ponte entre \n\nprocessador e acesso \u00e0 mem\u00f3ria principal. Quanto maior a sua \n\ncapacidade, menor ser\u00e1 o acesso \u00e0 mem\u00f3ria principal, poupando ciclos \n\nde processamento enquanto \u00e9 feita a busca. \n\n? Mem\u00f3ria flash de 64MB que permite que uma grande quantidade de \n\ndados seja armazenada sem precisar descart\u00e1-los. Um arquivo de \n\nproje\u00e7\u00e3o n\u00e3o passa de 100 kB. \n\n? Portas de comunica\u00e7\u00e3o variadas como sa\u00edda para rede, Ethernet \n\n10/100/1000, e USB 2.0 permitindo conectar praticamente qualquer \n\nequipamento desenvolvido no mercado com arquitetura IP ou conex\u00e3o \n\n\n\n69 \n\n \n\nuniversal. Essas conex\u00f5es v\u00e3o permitir a grava\u00e7\u00e3o da FPGA, bem \n\ncomo que a comunica\u00e7\u00e3o entre a FPGA e o computador seja mais \n\nr\u00e1pida. \n\n? Dois osciladores on-board de 50 MHz e 125MHz n\u00e3o havendo \n\nnecessidade de se usar nenhum outro circuito externo para esta \n\nfinalidade. \n\n? Dois conectores para entrada e sa\u00edda anal\u00f3gica e um HSMC, bem \n\ncomo conversores digitais-anal\u00f3gicos que permitem acessar \n\ndiretamente dados dos m\u00f3dulos do minitom\u00f3grafo que possuem sa\u00eddas \n\nanal\u00f3gicas e digitais. \n\n? V\u00e1rios bot\u00f5es, interruptores e indicadores que podem ser programados \n\nde acordo com um projeto a ser desenvolvido. \n\n? Duas telas: uma de gr\u00e1ficos com resolu\u00e7\u00e3o de 128x64 pixels e outra \n\ncom 2 linhas X 16 caracteres (ambas com tecnologia LCD). \n\nPara o trabalho desenvolvido, em um ambiente de simula\u00e7\u00e3o o desempenho \n\ndo filtro de Kalman mostrou-se equivalente ao c\u00f3digo gerado em Matlab\n\u00ae\n. O \n\nalgoritmo ainda apresenta alguns gargalos que dever\u00e3o ser otimizados com a \n\nintrodu\u00e7\u00e3o de c\u00f3digos em HDL e estruturas espec\u00edficas fornecidas no software da \n\nfabricante da FPGA, como o DSP Builder\n\u00ae\n, um toolkit integrado com o Simulink\n\n\u00ae\n do \n\nMatlab\n\u00ae\n. Apesar disso, os c\u00f3digos para algumas fun\u00e7\u00f5es complexas como a \n\nfatora\u00e7\u00e3o de Cholesky e multiplica\u00e7\u00e3o de matrizes j\u00e1 foram otimizados com o uso do \n\nMatlab\n\u00ae\n.  \n\nAlgumas fun\u00e7\u00f5es foram transformadas em C e depois em HDL, o que \n\nnecessitou de novos ajustes, mas devido a sua complexidade pode n\u00e3o foi vi\u00e1vel ou \n\neficiente escrev\u00ea-las diretamente em HDL.  \n\nNeste contexto, uma ferramenta gr\u00e1fica tamb\u00e9m est\u00e1 sendo desenvolvida \n\npara permitir o acesso \u00e0s proje\u00e7\u00f5es, tanto diretamente do minitom\u00f3grafo quanto da \n\nFPGA, al\u00e9m de permitir uma comunica\u00e7\u00e3o da FPGA para filtrar dados que j\u00e1 estejam \n\nno computador. Isso permite uma flexibilidade al\u00e9m de utilizar a FPGA como um \n\ndispositivo externo de alto desempenho.  O diagrama apresentado na Figura 16 \n\nilustra esta parte do trabalho em desenvolvido. \n\nUtilizando o bloco embedded Matlab function presente no Simulink\n\u00ae\n \u00e9 \n\nposs\u00edvel gerar um c\u00f3digo em HDL do algoritmo escrito como uma fun\u00e7\u00e3o do Matlab\n\u00ae\n, \n\n\n\n70 \n\n \n\n  \n\npermitindo uma implementa\u00e7\u00e3o mais simples e precisa do que refazer cada fun\u00e7\u00e3o \n\ncom blocos e conex\u00f5es. \n\n As limita\u00e7\u00f5es se baseiam no uso da mem\u00f3ria din\u00e2mica e de fun\u00e7\u00f5es n\u00e3o \n\nsuportadas pelo codificador HDL ou pelo uso de aritm\u00e9tica em ponto fixo que n\u00e3o \n\npossui uma fun\u00e7\u00e3o relacionada em C como sqrt (raiz quadrada), pow ou ^ (pot\u00eancia), \n\nexp (exponencial), chol (fatora\u00e7\u00e3o de Cholesky), cholupdate (atualiza\u00e7\u00e3o de \n\nCholesky), entre outras. Algumas fun\u00e7\u00f5es como a cholupdate podem ser \n\nsubstitu\u00eddas por implementa\u00e7\u00f5es pr\u00f3prias de usu\u00e1rios. Outras fun\u00e7\u00f5es s\u00e3o \n\nsuportadas pelo DSP Builder\n\u00ae\n como sqrt e pow, mas seu uso na forma alg\u00e9brica \n\npode demandar trabalho adicional. \n\n \n\nFigura 16 - Diagrama esquem\u00e1tico do sistema de filtragem de proje\u00e7\u00f5es a \npriori e a posteriori do processo de reconstru\u00e7\u00e3o de imagens. \n\n \n\n \n\n3.5 CORDIC \n \n\n \n\nComo algumas fun\u00e7\u00f5es n\u00e3o s\u00e3o suportadas pelo codificador HDL ou n\u00e3o \n\nsuportam a aritm\u00e9tica de ponto fixo, a solu\u00e7\u00e3o foi constru\u00ed-las usando t\u00e9cnicas que \n\ngarantam a precis\u00e3o e sejam otimizadas para chegar ao resultado \u00f3timo em menor \n\n\n\n71 \n\n \n\ntempo com o m\u00ednimo de recursos. A precis\u00e3o em fun\u00e7\u00f5es n\u00e3o lineares demandam \n\num tempo maior no processamento devido ao uso de s\u00e9ries temporais cujo tamanho \n\ndefine a converg\u00eancia dos valores processados. Para se obter uma melhor precis\u00e3o \n\nem um menor tempo de processamento. \n\nUma calculadora \u00e9 um tipo de sistema embarcado que n\u00e3o possui muita \n\nmem\u00f3ria e tem capacidade de processamento limitada quando se compara com um \n\ncomputador de uso geral, mas \u00e9 eficiente com respostas em milisegundos para \n\nc\u00e1lculos de ra\u00edzes quadradas de grandes n\u00fameros com precis\u00e3o de 10 a 20 d\u00edgitos, \n\nenquanto uma fun\u00e7\u00e3o programada pelo usu\u00e1rio usando s\u00e9ries temporais atrav\u00e9s de \n\nla\u00e7os e recursividades pode durar segundos e nem sempre atingir a precis\u00e3o \n\nnecess\u00e1ria. A solu\u00e7\u00e3o encontrada e aplicada neste trabalho desenvolvido foi o uso \n\ndo CORDIC \u2013 Coordinate Rotation Digital Computer, conhecido por m\u00e9todo de d\u00edgito \n\na d\u00edgito. CORDIC \u00e9 um algoritmo simples e eficiente usado para computar fun\u00e7\u00f5es \n\ntrigonom\u00e9tricas que requerem adi\u00e7\u00e3o, subtra\u00e7\u00e3o, deslocamento de bit (bit shift) e \n\ntabela de pesquisa (lookup table), quando n\u00e3o h\u00e1 um multiplicador implementado no \n\nsistema ou com pouca quantidade, como no caso da maioria das FPGAs.  \n\nDescrito em 1959 por Jack E. Volder\n96\n\n para navega\u00e7\u00e3o de bombardeiros, o \n\nCORDIC \u00e9 similar as t\u00e9cnicas matem\u00e1ticas conhecidas desde 1624. A Hewlett-\n\nPackard (HP) alterou o algoritmo para permitir que ele calculasse fun\u00e7\u00f5es \n\nhiperb\u00f3licas, logar\u00edtmicas, exponenciais, multiplica\u00e7\u00f5es, divis\u00f5es e raizes \n\nquadradas\n97-99\n\n.  \n\nOs c\u00f3digos utilizados foram desenvolvidos por John Burkardt e adaptados \n\npara serem aceitos no codificador HDL do Matlab\n\u00ae99\n\n. Nos quadros 1, 2 e 3 s\u00e3o \n\napresentados os algoritmos em linguagem do Matlab\n\u00ae\n. \n\n \n\n \n\n \n\n\n\n72 \n\n \n\n  \n\n \nQuadro 1 - Algoritmo da fun\u00e7\u00e3o raiz quadrada em CORDIC modificado para \n\ntrabalhar com o HDL Code Generation. \n\n \n\nNeste trabalho, foi utilizada uma varia\u00e7\u00e3o do CORDIC com limite de 20 \n\nitera\u00e7\u00f5es dentro dos la\u00e7os. Se o n\u00famero convergir para um menor valor de \n\nitera\u00e7\u00f5es, o algoritmo prontamente termina o la\u00e7o em execu\u00e7\u00e3o. Esses la\u00e7os \n\nprovocam roubos de ciclos e n\u00e3o s\u00e3o previs\u00edveis para o uso de recursos, ou seja, \n\nquando eles s\u00e3o usados dinamicamente com estruturas como la\u00e7os condicionais (a \n\nestrutura while), ou quando o limite \u00e9 caracterizado por uma fun\u00e7\u00e3o que possui \n\nvalores diferentes, ou ainda, quando a fun\u00e7\u00e3o \u00e9 chamada (ao usar o valor final do \n\ncontrole de itera\u00e7\u00f5es como vari\u00e1vel).  \n\n \n\n \n\nfunction y = sqrt_cordic (x,n ) \n  if ( x == 0.0 ) \n   y = 0; \n   return \n end \n  if ( x == 1.0 ) \n  y = 1; \n   return \n  end \n  poweroftwo = 1.0; \n if ( x &lt;1.0 ) \n  for i=1:20 \n       if (x)&lt;= (poweroftwo * poweroftwo ) \n           poweroftwo = poweroftwo / 2.0; \n       else \n          break; \n       end \n   end \n   y = poweroftwo; \n  elseif ( 1.0 &lt;x )  \nfor i=1:20 \n        if ( poweroftwo * poweroftwo &lt;= x) \n           poweroftwo = poweroftwo * 2.0; \n        else \n           break; \n        end \n     end \n      y = poweroftwo / 2.0; \n   end \n  for i = 1 : n \n  poweroftwo = poweroftwo / 2.0; \n     if (  (y + poweroftwo ) * ( y + poweroftwo )&lt;=  x ) \n        y = y + poweroftwo; \n     end \n  end \nreturn \n\nend \n\n\n\n73 \n\n \n\n \n\n \n\nQuadro 2 - Algoritmo da fun\u00e7\u00e3o logaritmo em CORDIC modificado para \ntrabalhar com o HDL Code Generation. \n\n \n\nOs  la\u00e7os devem ser modificados para atender um limite m\u00e1ximo de itera\u00e7\u00f5es \n\ndentro dos recursos j\u00e1 alocados. Por exemplo, uma modifica\u00e7\u00e3o no la\u00e7o din\u00e2mico \n\nfunction fx = ln_cordic ( x, n,a ) \na_length = 25; \nk =0; \nfor i=1:20 \n\nif e<=x \n      k = k + 1; \n      x = x/e; \n    else \n      break; \n    end \n  end \n  for i=1:20 \n    if x<1.0 \n      k = k - 1; \n      x = x*e; \n    else \n      break; \n    end \n  end \n w=zeros(1,n);  \n ai=0; \n for i = 1 : n \n      w(i) = 0.0; \n    if ( i&lt;= a_length ) \n        ai = a(i); \n     else \n        ai = 1.0 + (ai - 1.0) / 2.0; \n     end \n     if ( ai &lt;x ) \n        w(i) = 1.0; \n        x = x / ai; \n     end \n  end \n  x =x - 1.0; \n  x2=(1-x/2); \n  x3=(1+x/3); \n  x4=(1-x/4); \n  x = x*x2*x3*x4; \n  poweroftwo = 0.5; \n  for i = 1 : n \n   wt=  w(i) * poweroftwo;   \n       x = x + wt; \n     poweroftwo = poweroftwo / 2.0; \n  end \n  fx = k + x; \n  return  \n\nend \n\n\n\n74 \n\n \n\n  \n\npara calcular a precis\u00e3o de um valor \u00e9 aceit\u00e1vel pelo codificador HDL pode ser feito \n\nda seguinte maneira: \n\n \n\n \n\nQuadro 3 - Algoritmo da fun\u00e7\u00e3o exponencial em CORDIC modificado para \ntrabalhar com o HDL Code Generation. \n\nfunction fx = exp_cordic ( x, n, a ) \na_length = 25; \ne = 2.718281828459045; \nx_int = floor(x);  \npoweroftwo = 0.5; \nz = x - x_int; \nw = zeros(1,n); \nfor i = 1 : n \n\nif ( poweroftwo &lt;z ) \n        w(i) = 1.0; \n       z = z - poweroftwo; \n     end \n     poweroftwo = poweroftwo/2.0; \nend \nfx = 1.0; \nfor i = 1 : n \n\nai=0; \n    if ( i&lt;= a_length ) \n      ai = a(i); \n    else \n      ai = 1.0 + ( ai - 1.0 )/2.0; \n     end \n     if ( 0.0 &lt;w(i) ) \n        fx =fx * ai; \n     end \nend \n z1=(1.0 + z ); \n z2=(1.0 + z / 2.0); \n z3=(1.0 + z / 3.0); \n z4=(1.0 + z / 4.0); \n fx=fx*z1*z2*z3*z4;  \n  \n if ( x_int &lt;0 ) \n   for i = 1 : 20 \n     if i<=-x_int \n       fx = fx / e; \n     else \n       break; \n     end \n   end \nelse \n\nfor i=1:20 \n    if i<=x_int \n        fx = fx * e; \n    else \n       break; \n    end \n  end \n end \nreturn \n\nend \n\n\n\n75 \n\n \n\n \n \n\na) C\u00f3digo original \n \nwhile (y &lt;x) \n \n\n{c\u00f3digo} \n \nend_while \n\n \n\nb) C\u00f3digo modificado \n \nfor i=1:20 \n \n\nif (y<x) \n \n\nbreak; \n \n    else \n \n\n{c\u00f3digo} \n \n\nend_if \n \nend_for \n\n \nEsse tipo de modifica\u00e7\u00e3o garante um m\u00e1ximo de itera\u00e7\u00f5es para uma precis\u00e3o \n\naceit\u00e1vel e permite que se a condi\u00e7\u00e3o for aceita antes do fim das itera\u00e7\u00f5es, haja \n\numa interrup\u00e7\u00e3o instant\u00e2nea. Essa modifica\u00e7\u00e3o existe nas tr\u00eas principais fun\u00e7\u00f5es \n\nmatem\u00e1ticas do algoritmo do filtro especializado em proje\u00e7\u00f5es tomogr\u00e1ficas: raiz \n\nquadrada, logar\u00edtmica e exponencial.  \n\nA fun\u00e7\u00e3o de raiz quadrada \u00e9 a fun\u00e7\u00e3o mais importante do algoritmo, pois o \n\nvalor aproximado deve ter precis\u00e3o suficiente para que n\u00e3o haja problemas na \n\nestabilidade do filtro. Ela \u00e9 utilizada amplamente pelas fun\u00e7\u00f5es qr, chol e cholupdate, \n\nusadas no processamento de pontos sigmas do filtro.  \n\nUm erro na precis\u00e3o faz com que o algoritmo fique inst\u00e1vel ou ineficiente \n\ndevido \u00e0s proje\u00e7\u00f5es da m\u00e9dia e da vari\u00e2ncia que dependem da fatora\u00e7\u00e3o de \n\nCholesky para computar fun\u00e7\u00f5es n\u00e3o lineares baseadas em exponencial, logaritmo e \n\nRNA.  \n\nO c\u00f3digo da fun\u00e7\u00e3o de raiz quadrada em CORDIC dispensa o uso de uma \n\ntabela de pesquisa, sendo seu c\u00e1lculo feito usando recurs\u00f5es baseadas em uma \n\ns\u00e9rie temporal e usando la\u00e7os para determinar a precis\u00e3o. As fun\u00e7\u00f5es exponencial  \n\ne logaritmo utilizam pesos calculados atrav\u00e9s do residual entre a parte inteira e a \n\nfracion\u00e1ria, usando as mesmas t\u00e9cnicas estabelecidas no c\u00e1lculo de ra\u00edz quadrada. \n\n\n\n76 \n\n \n\n  \n\nAl\u00e9m dessas t\u00e9cnicas, fazem o uso de uma tabela de pesquisa previamente gerada \n\ncom 25 posi\u00e7\u00f5es pela fun\u00e7\u00e3o: \n\n \n\n    \n \n \n\n \n \n \n\n  com              (73) \n\n \n\n \n\n3.6 PONTO FIXO \n \n\n \n\nO c\u00f3digo HDL gerado pelo Matlab\n\u00ae\n \u00e9 gerado com vari\u00e1veis do tipo double \n\n(ponto flutuante), o que n\u00e3o \u00e9 suportado pelo sistema de FPGA. Para que o c\u00f3digo \n\nseja embarcado corretamente, todos os dados devem ser trabalhados como ponto \n\nfixo, tornando a tarefa mais complexa devido \u00e0s diferentes classes num\u00e9ricas \n\npresentes. \n\nUm n\u00famero com ponto fixo \u00e9 representado como um tipo de dado real para \n\num n\u00famero que tem d\u00edgitos fixos depois da v\u00edrgula (depois da v\u00edrgula na nota\u00e7\u00e3o \n\nbrasileira enquanto na nota\u00e7\u00e3o americana usa-se o ponto). \n\nPontos fixos s\u00e3o \u00fateis para representa\u00e7\u00e3o valores fracion\u00e1rios (usualmente na \n\nbase 2 ou base 10) quando a execu\u00e7\u00e3o do processador n\u00e3o tem uma unidade em \n\nponto flutuante.  \n\nFPGAs e a maioria dos microprocessadores e microcontroladores n\u00e3o \n\npossuem uma unidade de ponto flutuante (FPU \u2013 Floating Point Unity), mas em \n\nalguns sistemas o uso de ponto fixo prov\u00ea melhor desempenho ou uma melhor \n\nprecis\u00e3o para uma determinada aplica\u00e7\u00e3o. \n\n \n\n \n\n3.6.1 FATOR DE ESCALA \n \n\n \n\nUm valor de um tipo de dados ponto fixo \u00e9 um inteiro que \u00e9 dimensionado  por \n\num fator espec\u00edfico determinado pelo tipo. Por exemplo, o valor 1,48 pode ser \n\nrepresentado por 1480 em um tipo de dados de ponto fixo de um fator de escala \n\n1/1000 e o valor 1480000 pode ser representado como 1480 com um fator de escala \n\n\n\n77 \n\n \n\n1000. Diferente dos tipos de dados de ponto flutuante, o fator de escala \u00e9 o mesmo \n\npara todos os valores do mesmo tipo e n\u00e3o muda durante os c\u00e1lculos. \n\nO fator de escala \u00e9 usualmente uma pot\u00eancia de 10 ou uma pot\u00eancia de 2. \n\nContudo, outro fator de escala pode ser usado com um valor de tempo em horas que \n\npode ser representado como um tipo de ponto fixo com um fator de escala de 1/3600 \n\npara se obter valores com uma precis\u00e3o de segundos. \n\nO valor m\u00e1ximo de um tipo de ponto fixo \u00e9 simplesmente o maior valor que \n\npode ser representado dentro do tipo inteiro, multiplicado pelo fator de escala e pode \n\nser feito o mesmo processo para o valor m\u00ednino.  \n\n \n\n \n\n3.6.2 ARITM\u00c9TICA DE PONTO FIXO \n \n\n \n\nPara adicionar ou subtrair dois valores do mesmo tipo de ponto fixo, \u00e9 \n\nnecess\u00e1rio adicionar ou subtrair inteiros subjacentes, mantendo o seu fator de \n\nescala comum. O resultado pode ser apresentado pelo mesmo tipo, desde que \n\nnenhum estouro (overflow) ocorra. Se os  n\u00fameros t\u00eam diferentes pontos fixos com \n\ndiferentes fatores de escala, ent\u00e3o um deles deve ser convertido para o outro antes \n\nda soma.  \n\nPara se multiplicar dois n\u00fameros do tipo ponto fixo, basta multiplicar os dois \n\ninteiros subjacentes e assumir que o fator de escala do resultado \u00e9 o produto dos \n\nfatores de escalas. Esta opera\u00e7\u00e3o n\u00e3o envolve arrendondamentos. Por exemplo, \n\nmultiplicando o n\u00famero 123/1000 (0,123) e o n\u00famero 25/10 (2,5), resulta o inteiro \n\n123*25=3075 dimensionado por (1/1000)*(1/10) = 1/10000, que \u00e9 3075/10000 = \n\n0.3075.  \n\nSe os dois operandos pertencem ao mesmo tipo de ponto fixo, o resultado \n\ntamb\u00e9m ser\u00e1 representado neste tipo. Ent\u00e3o, o produto dos dois inteiros deve ser \n\nexplicitamente multiplicado pelo fator de escala comum. Neste caso o resultado deve \n\nser arredondado havendo a possibilidade do estouro ocorrer.  \n\nSe o fator de escala comum \u00e9 1/100, multiplicando 1,23 por 0,25 implica \n\nmultiplicar 123 por 25 para resultar 3075/10000.  Ao ser convertido ao fator de \n\nescala original 1/100 e dependendo do m\u00e9todo de arredondamento usado, resultar\u00e1 \n\n31 (0,31) ou 30 (0,30).  \n\n\n\n78 \n\n \n\n  \n\nPara dividir dois n\u00fameros de pontos fixos, um toma o inteiro quociente de \n\nseus inteiros subjacentes e assume que o fator de escala \u00e9 o quociente do seu fator \n\nde escala.  \n\n \n\n \n\n3.6.3 NOTA\u00c7\u00d5ES NUM\u00c9RICAS \n \n\n \n\nExistem v\u00e1rias nota\u00e7\u00f5es num\u00e9ricas usadas para representar o tamanho da \n\npalavra e o ponto raiz em um n\u00famero de ponto fixo. Para as representa\u00e7\u00f5es \n\npadronizadas, usa-se f para representar o n\u00famero fracion\u00e1rio de bits, m \u00e9 o n\u00famero \n\nda magnitude ou de bits inteiros, s \u00e9 o n\u00famero de bits assinalados e b \u00e9 o n\u00famero \n\ntotal de bits: \n\n? Qf: O prefixo Q. Q15 representa um n\u00famero de 15 bits fracion\u00e1rios. \n\nEsta nota\u00e7\u00e3o \u00e9 amb\u00edgua desde que n\u00e3o especif\u00edca o tamanho da \n\npalavra, contudo \u00e9 usualmente assumido que \u00e9 16 ou 32 bits \n\ndependendo do processador em foco a ser usado\n100\n\n.  \n\n? Qm.f: A forma clara da nota\u00e7\u00e3o Q. Desde que a palavra inteira \u00e9 um \n\ninteiro complemento de 2, um bit sinalizador \u00e9 impl\u00edcito. Por exemplo, \n\nQ1,30 descreve um n\u00famero com 1 bit inteiro e 30 bits fracion\u00e1rios \n\nguardados como um complemento inteiro de 2 em 32 bits\n100-101\n\n. \n\n? fxm.b: O prefixo fx \u00e9 similar ao de cima, mas usa o tamanho da palavra \n\ncomo um segundo \u00edtem no par pontuado. Por exemplo, fx1,16 descreve \n\num n\u00famero com magnitude de 1 bit e 15 bits fracion\u00e1rios em uma \n\npalavra de 16 bits\n102\n\n. \n\n? s:m:f: outras nota\u00e7\u00f5es incluem um bit de sinal. Tamb\u00e9m se difere no \n\nmodo convensional usando dois pontos. Por exemplo, 0:8:0 \n\ncorresponde a um byte inteiro n\u00e3o assinalado.  \n\nOpera\u00e7\u00f5es com pontos fixos podem produzir resultados que tenham mais bits \n\nque os operandos, existindo a possibilidade de perda de informa\u00e7\u00e3o. Por exemplo, o \n\nresultado de uma multiplica\u00e7\u00e3o de pontos fixos poderia potencialmente ter muito \n\nmais bits com a soma de dois operandos.  \n\nCom a finalidade de adequar o resultado para o mesmo n\u00famero de bits do \n\noperando, a resposta deve ser arredondada ou truncada. Se for este o caso, a \n\n\n\n79 \n\n \n\nescolha de quais bits devem ser mantidos \u00e9 muito importante. Quando se multiplica \n\ndois n\u00fameros de ponto fixo com o mesmo formato como, por exemplo, I bits inteiros \n\nou Q bits fracion\u00e1rios, a resposta sempre ser\u00e1 2I bits inteiros ou 2Q bits fracion\u00e1rios.  \n\nMuitos procedimentos usam multiplica\u00e7\u00f5es de pontos fixos com o mesmo \n\nformato de resultado como os operandos. Isso tem o efeito de manter os bits \n\nm\u00e9dios: o n\u00famero I do menos significante de bits inteiros e o n\u00famero Q do mais \n\nsignificante de bits fracion\u00e1rios. Bits fracion\u00e1rios perdidos abaixo deste valor \n\nrepresenta uma perda de precis\u00e3o que \u00e9 comum em multiplica\u00e7\u00e3o fracion\u00e1ria. Se \n\nquaisquer bits inteiros s\u00e3o perdidos os valores ser\u00e3o radicalmente imprecisos.  \n\nAlguns modelos baseados em pacotes de pontos fixos permitem especificar \n\num formato resultado diferente dos formatos de entrada. Isso permite maximizar a \n\nprecis\u00e3o e evitar o estouro. Opera\u00e7\u00f5es como divis\u00e3o sempre t\u00eam uma limita\u00e7\u00e3o de \n\nresultados embutida de modo que qualquer estouro positivo resulta no maior n\u00famero \n\nposs\u00edvel que pode ser apresentado pelo formato atual. Diferentemente, o estouro \n\nnegativo resulta em um n\u00famero grande negativo representado pelo atual formato. \n\nEste tipo de constru\u00e7\u00e3o em limita\u00e7\u00f5es \u00e9 sempre referido como satura\u00e7\u00e3o.  \n\nAlguns processadores suportam um estouro implementado em hardware que \n\npode gerar uma exce\u00e7\u00e3o na ocorr\u00eancia de um estouro, mas isto \u00e9 usualmente muito \n\ntardio para salvar o resultado apropriado neste ponto. Ciclos de desenvolvimentos \n\nmodernos incluem uma fase de prototipagem que examina o potencial da perda de \n\nprecis\u00e3o e estouro de projetos usando c\u00e1lculos de pontos fixos antes de continuar \n\ncom prototipagem f\u00edsica.  \n\nOs dados das itera\u00e7\u00f5es anteriores s\u00e3o guardados em vari\u00e1veis persistentes \n\n(que mant\u00e9m o \u00faltimo valor guardado, como se fossem vari\u00e1veis globais).   \n\nAlgoritmos complexos com diferentes grandezas n\u00famericas entre as vari\u00e1veis \n\ne c\u00e1lculos de precis\u00e3o fazem com o que o c\u00f3digo n\u00e3o seja bem implementado ou \n\nseja incompat\u00edvel com a FPGA.  \n\nA solu\u00e7\u00e3o encontrada \u00e9 especificar os pontos fixos manualmente e realizar as \n\nopera\u00e7\u00f5es aritm\u00e9ticas com diferentes vers\u00f5es das fun\u00e7\u00f5es implementadas para \n\ncada tipo de ponto fixo. No Quadro 4 \u00e9 apresentada a fun\u00e7\u00e3o principal do algoritmo \n\ndesenvolvido em transformado em ponto fixo.  \n\nA fun\u00e7\u00e3o usada para a convers\u00e3o dos dados \u00e9 a fi(s,i,f,m), onde s pode ter o \n\nvalor de 1 se o valor possui sinal ou 0 se n\u00e3o possuir, i \u00e9 o tamanho da palavra em \n\nbits, f a quantidade de bits para a parte fracion\u00e1ria e m o modelo usado onde pode \n\n\n\n80 \n\n \n\n  \n\nser configurados o m\u00e1ximo de bits para a aritm\u00e9tica de ponto flutuante, tipos de \n\narredondamento, satura\u00e7\u00e3o, entre outros. \n\nNo  Quadro 4, o padr\u00e3o de bits usados pelo sistema foi de 14 bits \n\nconsiderando o modelo padr\u00e3o do Matlab\n\u00ae\n para gera\u00e7\u00e3o de c\u00f3digo em HDL.  \n\n \n\n \n\nQuadro 4 - C\u00f3digo gerado pelo HDL Code Generation para a transforma\u00e7\u00e3o \nde dados do tipo ponto flutuante para ponto fixo. \n\n\u00c9 nesta fun\u00e7\u00e3o, tamb\u00e9m, que s\u00e3o calculadas as covari\u00e2ncias do filtro, onde \u00e9 \n\nfeita a chamada da fun\u00e7\u00e3o do filtro de Kalman Descentralizado usando os \n\npar\u00e2metros persistentes, como o vetor de estados anteriores e a matriz de \n\nfunction I = KalmanARNfpgao2_FixPt(y) \n    fm = hdlfimath; \n    persistent reg \n    if isempty( reg ) \n        reg = fi( (zeros( 2, 1 )), 1, 14, 14, fm ); \n    end \n    persistent P \n    if isempty( P ) \n        P = fi( (diag( [ 0.03; 0.1*ones( 26, 1 ) ] )),1, 14, 16, fm ); \n    end \n    persistent x \n    if isempty( x ) \n        x = fi( ([ 0; 0.1*ones( 26, 1 ) ]), 1, 14, 13, fm ); \n    end \n    persistent Io \n    if isempty( Io ) \n        Io = fi( (y), 0, 14, -2, fm ); \n    end \n    Io = fi( (max( [ y, Io ] )), 0, 14, -2, fm ); \n    mi = fi( (f23_log( (Io) ./ (y) )), 0, 14, 15, fm ); \n    R1 = fi( (f25_sqrt( Io )), 0, 14, 6, fm ); \n    R2 = fi( (0.0001), 0, 14, 27, fm ); \n    temp1 = fi( (f29_exp( mi )), 0, 14, 13, fm ); \n    temp2 = fi((1./temp1)^2*(R1)^2+(fi_uminus((Io(1)))./ temp1)^2 .* \n\n(R2)^2, 0, 14, -2, fm ); \n    R = fi( f25_sqrt( temp2 ), 0, 14, 6, fm ); \n    saida = fi( 1, 0, 14, 13, fm ); \n    c_oculta = fi( 5, 0, 14, 11, fm ); \n    estados = fi( 1, 0, 14, 13, fm ); \n    regressao = fi( 2, 0, 14, 12, fm ); \n    entrada = fi( estados + regressao, 0, 14, 12, fm ); \n    pesos = fi( saida*(c_oculta + fi( 1, 0, 1, 0 )) + c_oculta*(entrada \n\n+ fi( 1, 0, 1, 0 )), 0, 14, 9, fm ); \n    no = fi( c_oculta, 0, 3, 0, fm ); \n    tipo = fi( 1, 0, 14, 13, fm ); \n    Q = fi( f59_anealing( P ), 1, 14, 18, fm ); \n    [fmo_1,fmo_2] = f240_UKF( y, x, P, Q, R, 1, Io,no, reg, estados ); \n    x = fi( fmo_1, 1, 14, 13, fm ); \n    P = fi( fmo_2, 1, 14, 16, fm ); \n    reg = fi( [ x( 1 ); reg( 1 ) ], 1, 14, 14, fm ); \n    I = fi( Io( 1 )*f29_exp( fi_uminus( x( 1, 1 ) )), 0, 14, -2, fm ); \n\nend \n\n \n\n\n\n81 \n\n \n\ncovari\u00e2ncia do processo, bem como os dados atuais como covari\u00e2ncia de erro e o \n\nestado observado atual. \n\n \n\n \n\n3.7 GERA\u00c7\u00c3O DE C\u00d3DIGO EM HDL \n \n\n \n\nGerar c\u00f3digo em HDL atrav\u00e9s do Matlab\n\u00ae\n \u00e9 tido como uma tarefa simples, \n\npodendo ser automatizada, quando feito atrav\u00e9s dos blocos pr\u00e9-definidos da \n\nferramenta Simulink\n\u00ae\n atrav\u00e9s do HDL Workflow Advisor ou usando a toolbox do HDL \n\nCoder. O Matlab\n\u00ae\n em sua vers\u00e3o mais nova, a R2012a possui uma ferramenta de \n\nan\u00e1lise e gera\u00e7\u00e3o de pontos fixos integrada ao HDL Code Generation, como pode \n\nser vista na Figura 17.  \n\n \n\n \n\nFigura 17 - Ferramenta HDL Code Generation usada para criar pontos fixos, \ngera\u00e7\u00e3o de c\u00f3digo em HDL e grava\u00e7\u00e3o de um c\u00f3digo do Matlab\n\n\u00ae\n \n\nna FPGA.  \n\n \n\n\n\n82 \n\n \n\n  \n\nO filtro, em arquitetura reconfigur\u00e1vel utilizando FPGA, foi implementado \n\nusando a linguagem de script do Matlab\n\u00ae\n com bloco de fun\u00e7\u00f5es definido pelo \n\nusu\u00e1rio, como o bloco Embedded Matlab\n\u00ae\n Function. Esse bloco permite a integra\u00e7\u00e3o \n\ndo c\u00f3digo feito pelo usu\u00e1rio, como tamb\u00e9m sua otimiza\u00e7\u00e3o na tradu\u00e7\u00e3o para a \n\nlinguagem C, que apresenta um desempenho maior por ser um c\u00f3digo compilado.  \n\nUm modo de contornar o uso dessas fun\u00e7\u00f5es \u00e9 a declara\u00e7\u00e3o da pol\u00edtica %eml \n\nque permite fazer uma chamada da fun\u00e7\u00e3o do sistema e enviar o valor ao \n\ncomputador que processa e envia de volta o resultado ao bloco. Na pr\u00e1tica, o \n\nsistema vem a ser dependente, mas pode ser utilizado na op\u00e7\u00e3o de sistemas \n\nhardware-in-loop. \n\nO tempo de processamento pode vir a ser alto devido ao grande n\u00famero de \n\nchamada de fun\u00e7\u00f5es a serem realizadas causando um aumento de tr\u00e1fego entre os \n\ndados durante a comunica\u00e7\u00e3o.  Para diminuir o tr\u00e1fego, deve-se implementar e \n\nembarcar o filtro de Kalman totalmente na FPGA e reescrever as fun\u00e7\u00f5es \n\nnecess\u00e1rias para seu funcionamento.  \n\nOutra caracter\u00edstica presente no Matlab\n\u00ae\n \u00e9 que o gerador de HDL n\u00e3o permite \n\no uso de vetores e matrizes din\u00e2micas. Assim, o tamanho do vetor ou da matriz deve \n\nser definido previamente. Outro problema pode se extender ao tempo de \n\nprocessamento para gerar matrizes que diminui a efici\u00eancia do c\u00f3digo. La\u00e7os t\u00eam \n\num grande problema em rela\u00e7\u00e3o ao tempo para otimizar o c\u00f3digo, mas as \n\nferramentas de projeto tem diferentes solu\u00e7\u00f5es para esses la\u00e7os que s\u00e3o \n\nminimizados dentro de pipelines automaticamente. A fun\u00e7\u00e3o de embarque do \n\nMatlab\n\u00ae\n \u00e9 apresentada na Figura 18. Essa fun\u00e7\u00e3o permite que um c\u00f3digo da \n\nlinguagem do Matlab\n\u00ae\n, o M-code, possa ser utilizado no Simulink\n\n\u00ae\n.  \n\n \nFigura 18 - Bloco de embarque de fun\u00e7\u00e3o do Matlab\n\n\u00ae\n do Simulink\n\n\u00ae\n. Esse \n\nbloco permite editar uma fun\u00e7\u00e3o em M-code para ser usada como \num bloco. \n\nO M-code gerado apresenta algumas restri\u00e7\u00f5es quanto ao seu uso padr\u00e3o \n\ncomo linguagem de script. Ele deve ser usado como uma fun\u00e7\u00e3o que tenha ao \n\nmenos uma sa\u00edda. \u00c9 poss\u00edvel escrever no pr\u00f3prio arquivo outras fun\u00e7\u00f5es \n\n\n\n83 \n\n \n\nnecess\u00e1rias para o c\u00f3digo, n\u00e3o necessitando realizar chamadas externas de outras \n\nfun\u00e7\u00f5es.  \n\nO c\u00f3digo em HDL pode ser gerado a partir de uma ferramenta integrada ao \n\nSimulink\n\u00ae\n, a HDL Workflow Advisor,  apresentada na Figura 19. \n\n \n\n \n\nFigura 19 - A ferramenta HDL Workflow Advisor usada para gerar um c\u00f3digo \nem HDL em conjunto com outros softwares da fabricante da \nFPGA, permitindo a s\u00edntese e an\u00e1lise do c\u00f3digo. \n\nA ferramenta permite gerar um c\u00f3digo HDL de subsistemas ou fun\u00e7\u00f5es \n\nembarcadas e, em vers\u00f5es mais novas do Matlab\n\u00ae\n, escolher novas formas de \n\nintera\u00e7\u00e3o entre o Desktop e a FPGA, como FPGA-in-loop, onde ela pode ser \n\nintegrada no sistema comunicando-se de forma impl\u00edcita. O HDL Workflow Advisor \n\npermite gerar tanto c\u00f3digos em HDL quanto projetos do Quartus. Neste trabalho, o \n\nfoco est\u00e1 em usar essa ferramenta para gerar o c\u00f3digo em HDL. \n\nA ferramenta pode gerar o c\u00f3digo HDL em duas linguagens Verilog e VHDL. \n\nH\u00e1 a op\u00e7\u00e3o de gerar o c\u00f3digo com ponto flutuante (vari\u00e1veis do tipo double) que \n\npodem ser embarcadas quando se tem uma unidade de c\u00e1lculo de ponto flutuante \n\nembarcado no c\u00f3digo, como na maioria dos DSPs.  \n\nNesse trabalho, o uso de um co-processador de ponto flutuante foi \n\ndispensado pois os dados num\u00e9ricos s\u00e3o transformados em pontos fixos. \n\nO uso de ponto fixo torna a tarefa de criar um c\u00f3digo em HDL mais complexa, \n\nmas permite uma arquitetura \u00fanica e espec\u00edfica. \n\n\n\n84 \n\n \n\n  \n\nO DSP Builder\n\u00ae\n \u00e9 o software desenvolvido pela Altera que permite montar um \n\nmodelo usando diagramas em blocos no Simulink\n\u00ae\n e gravar na FPGA. Sua limita\u00e7\u00e3o \n\n\u00e9 que apenas os blocos do toolbox s\u00e3o compilados e validados, pois o seu objetivo \u00e9 \n\nanalisar os resultados do modelo implementando no Simulink\n\u00ae\n antes do embarque.  \n\nO DSP Builder\n\u00ae\n, apresentado na Figura 20, \u00e9 usado para gerar um projeto \n\npara o Quartus atrav\u00e9s de um bloco implementado no Simulink\n\u00ae\n. \n\n \n\nFigura 20 - Ferramenta DSP Builder\n\u00ae\n fornecida pela Altera que permite \n\ncompilar e gravar o c\u00f3digo na FPGA, usada tamb\u00e9m para a \nverifica\u00e7\u00e3o de modelos compat\u00edveis com a FPGA. \n\nO DSP Builder\n\u00ae\n \u00e9 chamado pelo bloco Signal Compiler, presente no toolbox \n\nda Altera e pode ser associado ao modelo da FPGA a ser gravado sem que haja a \n\nnecessidade de configura\u00e7\u00f5es por parte do usu\u00e1rio. Esse bloco \u00e9 apresentado na \n\nFigura 21. \n\n\n\n85 \n\n \n\n \nFigura 21 - O bloco Signal Compiler \u00e9 usado para gerar, validar e embarcar \n\nfun\u00e7\u00f5es do DSP Builder\n\u00ae\n na FPGA.  \n\nUma forma de us\u00e1-lo para rodar um projeto do Matlab\n\u00ae\n \u00e9 a de utilizar os \n\nblocos HIL e HDL Import. Esses blocos s\u00e3o apresentados na Figura 22.  \n\n \n\nFigura 22 - Blocos utilizados para implementar modelos gerados pelo \nSimulink\n\n\u00ae\n na FPGA: HIL (Hardware-in-loop) utilizado para \n\nembarcar um arquivo de projeto do Quartus, enquanto o HDL \nImport \u00e9 utilizado para embarcar um c\u00f3digo v\u00e1lido em HDL. \n\nO diagrama da Figura 23 mostra os poss\u00edveis caminhos para a grava\u00e7\u00e3o dos \n\ndados na FPGA, tal como a gera\u00e7\u00e3o de c\u00f3digos em HDL ou projetos do Quartus. \n\nO bloco HIL aceita somente c\u00f3digos gerados como projetos (qpf \u2013 Quartus \n\nProject File) enquanto o HDL Import j\u00e1 aceita c\u00f3digos em HDL (em VHDL ou \n\nVerilog). Esses dois blocos s\u00e3o necess\u00e1rios para se criar um caminho para a \n\ngrava\u00e7\u00e3o do c\u00f3digo na FPGA e integra\u00e7\u00e3o com o sistema. A import\u00e2ncia destes \n\nblocos d\u00e1-se pela capacidade de controlar o fluxo de dados do mini-tom\u00f3grafo e da \n\nFPGA, organizando-os e gerando arquivos contendo os dados coletados e filtrados. \n\n O caminho escolhido para o embarque do algoritmo \u00e9 descrito nos passos \n\nabaixo:  \n\n1. Reescrever as fun\u00e7\u00f5es n\u00e3o suportadas pelo gerador de c\u00f3digo HDL do \n\nMatlab\n\u00ae\n. \n\n2. Aplicar, manualmente, os limites para os pontos fixos para cada vari\u00e1vel e \n\nopera\u00e7\u00e3o presente no c\u00f3digo. \n\n3. Utilizar o HDL Coder do Matlab\n\u00ae\n, pois o HDL Coder do Simulink\n\n\u00ae\n n\u00e3o trata \n\no algoritmo dentro do bloco Matlab\n\u00ae\n Function, n\u00e3o fazendo otimiza\u00e7\u00f5es \n\nnecess\u00e1rias como desenrolar la\u00e7os e otimiza\u00e7\u00e3o do uso de unidades de \n\nmultiplica\u00e7\u00e3o. \n\n4. Verificar a consist\u00eancia do c\u00f3digo usando o bloco HDL Import. \n\n\n\n86 \n\n \n\n  \n\n5. Criar um projeto no Quartus II\n\u00ae\n e verificar se h\u00e1 erros no c\u00f3digo ao ser \n\ncompilado. \n\n6. Importar o c\u00f3digo para o bloco HIL (Hardware-in-loop). \n\n \n\n \n\n \n\nFigura 23 - Diagrama esquem\u00e1tico apresentando os poss\u00edveis caminhos para \na gera\u00e7\u00e3o de c\u00f3digos em HDL, projeto do Quartus II\n\n\u00ae\n e grava\u00e7\u00e3o \n\ndireta na FPGA. \n\n  \n\n\n\n87 \n\n \n\n4 RESULTADOS \n \n\n \n\nO trabalho desenvolvido inclui a cria\u00e7\u00e3o de uma ferramenta que prov\u00ea uma \n\ninterface para a an\u00e1lise dos sinais filtrados fazendo a comunica\u00e7\u00e3o entre o \n\ncomputador e a FPGA, tal como a visualiza\u00e7\u00e3o das imagens reconstru\u00eddas. A \n\nimplementa\u00e7\u00e3o do filtro na FPGA \u00e9 feita usando Matlab\n\u00ae\n e ferramentas da Altera. \n\nA ferramenta desenvolvida, como se pode ver na Figura 24, permite um \n\nacesso de maneira simples e intuitivo a esses recursos atrav\u00e9s de bot\u00f5es. \u00c9 \n\nposs\u00edvel visualizar a imagem reconstru\u00edda de uma amostra de gr\u00e3os de areia, \n\noriginalmente ruidosa e na outra imagem, a mesma amostra de areia ap\u00f3s a etapa \n\nde filtragem das proje\u00e7\u00f5es. No gr\u00e1fico \u00e9 feita a compara\u00e7\u00e3o entre o sinal filtrado (em \n\nazul) e o ruidoso (em vermelho).  \n\n \n\n \n\nFigura 24 - Ferramenta desenvolvida para armazenamento de dados, \nfiltragem das proje\u00e7\u00f5es e visualiza\u00e7\u00e3o imagens tomogr\u00e1ficas \nreconstru\u00eddas.  \n\nAssim, esta ferramenta permite abrir dois tipos de arquivos de proje\u00e7\u00f5es com \n\ncabe\u00e7alho simplificado ou com cabe\u00e7alho espec\u00edfico, al\u00e9m de permitir visualizar o \n\nprocesso de filtragem, os dados originais e filtrados, al\u00e9m de fornecer uma \n\n\n\n88 \n\n \n\n  \n\ncompara\u00e7\u00e3o entre eles. Outras funcionalidades s\u00e3o a filtragem dos dados feita pelo \n\ncomputador ou pela FPGA, bem como uma camada interna onde foi programado um \n\nalgoritmo de reconstru\u00e7\u00e3o tomogr\u00e1fica de proje\u00e7\u00f5es para auxiliar a an\u00e1lise de \n\nresultados.  \n\nA implementa\u00e7\u00e3o do filtro em FPGA segue os passos apresentados na Figura \n\n25, onde em algumas etapas j\u00e1 desenvolvidas foram realizados testes da qualidade \n\nde filtragem e precis\u00e3o de dados. \n\n \n\n \n\nFigura 25 - Diagrama de blocos mostrando as etapas para o embarque do \nc\u00f3digo do filtro de Kalman na FPGA. \n\nPara gerar os resultados com imagens, utilizou-se a filtragem de um vetor de \n\nproje\u00e7\u00f5es retirados da matriz. Cada vetor \u00e9 filtrado de forma independente e depois \n\n\u00e9 inclu\u00eddo numa matriz final com todas as proje\u00e7\u00f5es filtradas. Para uma melhor \n\nvisualiza\u00e7\u00e3o do processo final, as matrizes de proje\u00e7\u00f5es foram reconstru\u00eddas com o \n\n\n\n89 \n\n \n\nalgoritmo de retroproje\u00e7\u00e3o filtrada. O filtro foi validado com a  ferramenta Simulink\n\u00ae\n \n\ndo Matlab\n\u00ae\n, como pode ser visto na Figura 26.  \n\n \n\n \n\nFigura 26 - M\u00f3dulo desenvolvido no Simulink\n\u00ae\n usando o bloco de embarque \n\nde fun\u00e7\u00e3o do Matlab\n\u00ae\n. Esse m\u00f3dulo permite ler um dado que \n\nesteja dispon\u00edvel em uma vari\u00e1vel dentro do Matlab\n\u00ae\n juntamente \n\ncom os par\u00e2metros do filtro. \n\nUsando o m\u00e9todo de quantifica\u00e7\u00e3o na melhoria na rela\u00e7\u00e3o sinal-ru\u00eddo (ISNR \u2013 \n\nImprovemment in Signal to Noise Ratio), foram medidas as melhorias das  proje\u00e7\u00f5es \n\ne as imagens reconstru\u00eddas. Este m\u00e9todo permite calcular a rela\u00e7\u00e3o entre o ru\u00eddo \n\nanterior e posterior \u00e0 filtragem. O ISNR pode ser calculado atrav\u00e9s da equa\u00e7\u00e3o: \n\n \n\n                 \n              \n\n              \n    (74) \n\n \n\nPara a filtragem com estima\u00e7\u00e3o com RNA, uma MLP com o esquema de \n\nneur\u00f4nios foi definido como 6-10-1. A camada de entrada possui a mesma \n\nquantidade de entradas, ou seja, 6 entradas (5 estados para a regress\u00e3o e o estado \n\nanterior que recebem a retroalimenta\u00e7\u00e3o), enquanto a camada intermedi\u00e1ria \u00e9 \n\ndefinida pela m\u00e9dia geom\u00e9trica entre a entrada e a sa\u00edda.  \n\n\n\n90 \n\n \n\n  \n\nPara haver a valida\u00e7\u00e3o, algumas modifica\u00e7\u00f5es foram necess\u00e1rias, como \n\ntransformar o filtro em uma vers\u00e3o on-line onde cada uma das proje\u00e7\u00f5es \u00e9 enviada \u00e0 \n\nFPGA, analisada pelo filtro de acordo com o ru\u00eddo medido pelas equa\u00e7\u00f5es de \n\npropaga\u00e7\u00e3o de erro e finalmente filtrada. \n\nPara validar e ajustar os par\u00e2metros do filtro foi utilizado um phantom \n\nhomog\u00eaneo (constru\u00eddo a partir de um tubo de Nylon com 60 mm de di\u00e2metro) \n\nusado para calibra\u00e7\u00f5es e adicionados ru\u00eddos Poisson e branco obtendo um sinal \n\nruidoso com valor de -50 dB. O ISNR foi aplicado nas proje\u00e7\u00f5es individuais, na \n\nmatriz de proje\u00e7\u00f5es e na imagem reconstru\u00edda. A defini\u00e7\u00e3o dos par\u00e2metros do filtro \n\nfoi baseada naqueles que apresentaram o maior valor m\u00e9dio de ISNR.  \n\nOs par\u00e2metros usados foram vari\u00e2ncia dos pesos da rede de 0,01, coeficiente \n\nde atenua\u00e7\u00e3o inicial esperado de 0,1, o grau de espalhamento dos pontos sigmas no \n\nvalor de 0,1, vari\u00e2ncia de incerteza da medida de 0,01 e grau de converg\u00eancia da \n\nRNA de 0,995.  \n\nNa Figura 27 s\u00e3o apresentados os resultados da filtragem atrav\u00e9s das \n\nmatrizes de proje\u00e7\u00f5es obtidas pelo minitom\u00f3grafo de raios X e gama, suas \n\nrespectivas imagens reconstru\u00eddas e com a compara\u00e7\u00e3o dos sinais. O ISNR m\u00e9dio \n\nda matriz de proje\u00e7\u00f5es foi de 2,34 dB enquanto da imagem foi de 4,84 dB.  \n\nNa Figura 28 s\u00e3o apresentados os resultados usando proje\u00e7\u00f5es de um tubo \n\ncontendo gr\u00e3os de areia obtidas atrav\u00e9s do microtom\u00f3grafo. As proje\u00e7\u00f5es foram \n\nreconstru\u00eddas para a visualiza\u00e7\u00e3o do efeito da filtragem nas imagens tomogr\u00e1ficas. \n\nOs par\u00e2metros para o filtro foram os mesmo aplicados no phantom homog\u00eaneo.  \n\nO ISNR para as proje\u00e7\u00f5es obteve a melhoria m\u00e9dia  de 0,01 dB enquanto \n\npara a imagem reconstru\u00edda, o ISRN foi de 1,51 dB.  \n\nNo conjunto de figuras abaixo (Figura 29, Figura 30, Figura 31, Figura 32, \n\nFigura 33, Figura 34 e Figura 35) \u00e9 poss\u00edvel notar o comportamento diferenciado da \n\nfiltragem em cada tipo de amostra. As proje\u00e7\u00f5es que foram filtradas possuem \n\nresolu\u00e7\u00e3o microm\u00e9trica e s\u00e3o provenientes do microtom\u00f3grafo de raios X e gama. \n\nNa compara\u00e7\u00e3o entre os sinais foi utilizada a primeira posi\u00e7\u00e3o obtida no \u00e2ngulo 0, ou \n\nseja, a primeira linha da matriz de proje\u00e7\u00f5es. \n\n\n\n91 \n\n \n\n \n\nFigura 27 - Phantom homog\u00eaneo usado para calibrar o filtro. Foram \nadicionados ru\u00eddos Poisson e branco para verificar a taxa de \nmelhoria da rela\u00e7\u00e3o sinal-ru\u00eddo ap\u00f3s a filtragem. Em (a) \u00e9 \napresentada a compara\u00e7\u00e3o dos sinais, em (b) a matriz de \nproje\u00e7\u00f5es original, a sua respectiva reconstru\u00e7\u00e3o feita pelo \nalgoritmo de retroproje\u00e7\u00e3o filtrada em (c). Em (d), a matriz de \nproje\u00e7\u00f5es ruidosa e em (e) sua imagem reconstru\u00edda. Em (f) a \nmatriz de proje\u00e7\u00f5es filtradas com a apresenta\u00e7\u00e3o da imagem \nreconstru\u00edda em (g). \n\n\n\n92 \n\n \n\n  \n\n \nFigura 28 - Proje\u00e7\u00f5es de uma amostra de areia usadas para validar o filtro. \n\nForam adicionados ru\u00eddos Poisson e branco para verificar a taxa \nde melhoria da rela\u00e7\u00e3o sinal-ru\u00eddo ap\u00f3s a filtragem. Em (a) \u00e9 \napresentada a compara\u00e7\u00e3o dos sinais, em (b) a matriz de \nproje\u00e7\u00f5es original, a sua respectiva reconstru\u00e7\u00e3o feita pelo \nalgoritmo de retroproje\u00e7\u00e3o filtrada em (c). Em (d), a matriz de \nproje\u00e7\u00f5es ruidosa e em (e) sua imagem reconstru\u00edda. Em (f) a \nmatriz de proje\u00e7\u00f5es filtradas com a apresenta\u00e7\u00e3o da imagem \nreconstru\u00edda em (g). \n\n\n\n93 \n\n \n\n \n\n \n\n \n\n \n\nFigura 29 -  Phantom homog\u00eaneo (phantomp.dat) usado para calibra\u00e7\u00e3o. (a) \nCompara\u00e7\u00e3o entre as proje\u00e7\u00f5es, (b) matriz de proje\u00e7\u00f5es original, \n(c) imagem reconstru\u00edda das proje\u00e7\u00f5es originais, (d) matriz de \nproje\u00e7\u00f5es filtradas e (e) imagem reconstru\u00edda da proje\u00e7\u00e3o filtrada. \n\n  \n\n\n\n94 \n\n \n\n  \n\n \n\n \n\n \n\nFigura 30 - Amostra com gr\u00e3os de areia (areia2.dat). (a) Compara\u00e7\u00e3o entre as \nproje\u00e7\u00f5es, (b) matriz de proje\u00e7\u00f5es original, (c) imagem \nreconstru\u00edda das proje\u00e7\u00f5es originais, (d) matriz de proje\u00e7\u00f5es \nfiltradas e (e) imagem reconstru\u00edda da proje\u00e7\u00e3o filtrada. \n\n  \n\n\n\n95 \n\n \n\n \n\n \n\n \n\nFigura 31 - Amostra de solo (torrao.dat). (a) Compara\u00e7\u00e3o entre as proje\u00e7\u00f5es, \n(b) matriz de proje\u00e7\u00f5es original, (c) imagem reconstru\u00edda das \nproje\u00e7\u00f5es originais, (d) matriz de proje\u00e7\u00f5es filtradas e (e) imagem \nreconstru\u00edda da proje\u00e7\u00e3o filtrada. \n\n \n\n \n\n \n\n \n\n\n\n96 \n\n \n\n  \n\n \n\n \n\n \n\nFigura 32 - Amostra de solo (cimen2.dat). (a) Compara\u00e7\u00e3o entre as proje\u00e7\u00f5es, \n(b) matriz de proje\u00e7\u00f5es original, (c) imagem reconstru\u00edda das \nproje\u00e7\u00f5es originais, (d) matriz de proje\u00e7\u00f5es filtradas e (e) imagem \nreconstru\u00edda da proje\u00e7\u00e3o filtrada. \n\n \n\n \n\n \n\n \n\n\n\n97 \n\n \n\n \n\n \n\n \n\nFigura 33 - Amostra de solo (degri30.dat). (a) Compara\u00e7\u00e3o entre as proje\u00e7\u00f5es, \n(b) matriz de proje\u00e7\u00f5es original, (c) imagem reconstru\u00edda das \nproje\u00e7\u00f5es originais, (d) matriz de proje\u00e7\u00f5es filtradas e (e) imagem \nreconstru\u00edda da proje\u00e7\u00e3o filtrada. \n\n \n\n \n\n \n\n \n\n\n\n98 \n\n \n\n  \n\n \n\n \n\n \n\nFigura 34 - Amostra de solo (adub30.dat). (a) Compara\u00e7\u00e3o entre as proje\u00e7\u00f5es, \n(b) matriz de proje\u00e7\u00f5es original, (c) imagem reconstru\u00edda das \nproje\u00e7\u00f5es originais, (d) matriz de proje\u00e7\u00f5es filtradas e (e) imagem \nreconstru\u00edda da proje\u00e7\u00e3o filtrada. \n\n \n\n\n\n99 \n\n \n\n \n\n \n\n \n\nFigura 35 - Amostra de solo (mb1t1.dat). (a) Compara\u00e7\u00e3o entre as proje\u00e7\u00f5es, \n(b) matriz de proje\u00e7\u00f5es original, (c) imagem reconstru\u00edda das \nproje\u00e7\u00f5es originais, (d) matriz de proje\u00e7\u00f5es filtradas e (e) imagem \nreconstru\u00edda da proje\u00e7\u00e3o filtrada. \n\n \n\n \n\n \n\n\n\n100 \n\n \n\n  \n\nNa Figura 29 \u00e9 poss\u00edvel perceber que o filtro suavizou o sinal, acompanhando \n\na curva da proje\u00e7\u00e3o, evitando os picos relacionados aos ru\u00eddos. Na imagem \n\nreconstru\u00edda temos a parte do corpo da amostra mais clara com a presen\u00e7a de \n\nru\u00eddos. Esses ru\u00eddos tamb\u00e9m s\u00e3o formados pela presen\u00e7a de artefatos na \n\nreconstru\u00e7\u00e3o da imagem, sendo s\u00f3 poss\u00edvel atenu\u00e1-los numa filtragem ap\u00f3s a \n\nreconstru\u00e7\u00e3o.  \n\nNa filtragem das proje\u00e7\u00f5es apresentada na Figura 30 \u00e9 poss\u00edvel perceber que \n\no sinal filtrado descarta alguns detalhes, classificando-os como ru\u00eddos. Se esses \n\ndetalhes forem importantes como caracter\u00edsticas da amostra, a imagem reconstru\u00edda \n\nir\u00e1 apresentar suaviza\u00e7\u00f5es. \n\nO resultado apresentado na Figura 31 apresenta uma filtragem onde o sinal \n\nfiltrado acompanha bem o sinal original. A maioria dos detalhes \u00e9 mantida, enquanto \n\nna parte com maior atenua\u00e7\u00e3o, h\u00e1 uma filtragem mais discreta.   \n\nO mesmo comportamento ocorre na filtragem de outras amostras de solo \n\n(Figura 32, Figura 33, Figura 34 e Figura 35), onde as amostras apresentam \n\nmicroporos maiores do que na amostra anterior. Alguns detalhes nas imagens foram \n\npreservados, mas a diferen\u00e7a nos contrastes provocaram perdas de detalhes, como \n\nos microporos. Isso ocorre devido \u00e0 presen\u00e7a de granularidade da imagem que pode \n\nser interpretada como falsos elementos ou poros. Uma filtragem excessiva pode \n\nprovocar essa perda de detalhes como bordas da imagem reconstru\u00edda. \n\n O filtro pode ser reajustado para suavizar ou manter mais detalhes da \n\nimagem, mas isso vai impactar na qualidade final do sinal de sa\u00edda do sistema, \n\nafetando diretamente a imagem resultante, sendo, portanto, necess\u00e1rio um cuidado \n\nna realiza\u00e7\u00e3o destes ajustes, o que \u00e9 obtido com o ensaio de phantoms. \n\nPara comparar a efici\u00eancia do filtro e configur\u00e1-lo para obter uma qualidade \n\nde sinal desej\u00e1vel, foram aplicados dois tipos de filtros:  \n\nUm com fun\u00e7\u00f5es nativas do Matlab\n\u00ae\n e outro fun\u00e7\u00f5es contendo algoritmos \n\nbaseados em CORDIC.  \n\nCom o objetivo de analisar como o filtro se comporta com diferentes proje\u00e7\u00f5es \n\ne frente \u00e0 impossibilidade de medir o ISNR apenas com dados ruidosos e filtrados, \n\nfoi feito uma medi\u00e7\u00e3o de SNR (Signal to Noise Ratio \u2013 Rela\u00e7\u00e3o Sinal/Ru\u00eddo) em \n\ncada proje\u00e7\u00e3o e  imagem reconstru\u00edda. O SNR pode ser dado por: \n\n \n\n\n\n101 \n\n \n\n                \n \n\n \n      (75) \n\n \n\nA partir dessas medidas, pode-se calcular o ganho da filtragem.  \n\n \n\nNa Tabela 1 s\u00e3o apresentados os SNRs para as matrizes de proje\u00e7\u00f5es e \n\nimagens reconstru\u00eddas.  \n\n \n\nTabela 1 - Resultados obtidos com a an\u00e1lise de SNR das proje\u00e7\u00f5es e \nimagens reconstru\u00eddas.  \n\nArquivos \ndas \n\nProje\u00e7\u00f5es \n\nRela\u00e7\u00e3o Sinal/Ru\u00eddo (em dB) \n\nProje\u00e7\u00e3o Imagem \n\nOriginal Filtrada Ganho Original Filtrada Ganho \n\nphantomp.dat 14,52 16,44 1,92 2,34 2,47 0,13 \n\nareia2.dat 24,51 24,84 0,33 -1,36 -0,98 0,38 \n\ntorrao.dat 14,72 14,85 0,13 -1,29 -1,15 0,14 \n\ncimen2.dat 18,08 18,31 0,23 -2,62 -2,22 0,40 \n\ndegri30.dat 18,90 19,07 0,17 -4,77 -4,51 0,26 \n\nadub30.dat 16,67 16,86 0,19 -3,00 -2,81 0,19 \n\nmb1t1.dat 19,11 19,25 0,14 -1,71 -1,31 0,40 \n\n \n\nAp\u00f3s obter os SNRs, foi calculado o ganho baseado na diferen\u00e7a entre o SNR \n\ndas amostras filtradas e o SNR das amostras originais. Algumas amostras possu\u00edam \n\nSNR negativos significando que o ru\u00eddo tinha pot\u00eancia maior que o sinal. \n\nValores negativos no ganho de SNR tem o mesmo significado do que no uso \n\ndo ISNR, significa que detalhes foram perdidos, havendo perdas na qualidade do \n\nsinal.  \n\nNa pr\u00e1tica, o ganho obtido na filtragem de proje\u00e7\u00f5es pode ser diferente para o \n\nganho medido nas imagens reconstru\u00eddas. O motivo principal \u00e9 que o algoritmo de \n\nreconstru\u00e7\u00e3o atua como um filtro passa-altas. \n\n\n\n102 \n\n \n\n  \n\nOs filtros passa-alta permitem a passagem de altas frequ\u00eancias em uma \n\nimagem, destacando os detalhes. Os ru\u00eddos presentes em proje\u00e7\u00f5es tomogr\u00e1ficas \n\ntamb\u00e9m fazem parte da frequ\u00eancia alta e s\u00e3o potencializados juntos com os \n\ndetalhes.  \n\nO uso do ganho do SNR usando a rela\u00e7\u00e3o entre a m\u00e9dia e o desvio padr\u00e3o \u00e9 \n\numa medida menos precisa do que o ISNR feito com o c\u00e1lculo da rela\u00e7\u00e3o entre ru\u00eddo \n\ndos dados originais e o ru\u00eddo dos dados filtrados, mas permite quantificar e qualificar \n\nos resultados de dados que n\u00e3o s\u00e3o conhecidos a priori.  \n\nOs filtros foram aplicados em um phantom na amostra de areia e em uma \n\namostra de solo. Para o c\u00e1lculo do ISNR foi adicionado um ru\u00eddo de -50 dB de \n\npot\u00eancia.  \n\nNa Figura 36 s\u00e3o apresentados os resultados obtidos com a filtragem das \n\namostras de areia e de solo natural. \u00c9 poss\u00edvel, que visualmente, as filtragens \n\napresentem resultados similares. \n\nNas tabelas 2 e 3 s\u00e3o apresentados os resultados do tempo de \n\nprocessamento e dos valores de ISNR pra a filtragem usando fun\u00e7\u00f5es do Matlab\n\u00ae\n e \n\nm\u00e9todos de CORDIC. Apesar dos resultados apresentarem-se visualmente \n\nmelhores, houve uma grande diferen\u00e7a no grau de filtragem, que pode ser visto na \n\ndiscrep\u00e2ncia entre os valores de ISNR nos dois filtros. \n\nOs filtros de Kalman apresentados nesse trabalho n\u00e3o foram otimizados para \n\nfiltragem de ru\u00eddos Gaussianos adicionados em proje\u00e7\u00f5es. O objetivo principal \u00e9  \n\ncomparar o efeito de filtragem entre os dois filtros e prover uma melhor vis\u00e3o para a \n\nprecis\u00e3o dos dados conforme as etapas de implementa\u00e7\u00e3o do filtro no sistema \n\nembarcado. \n\nFoi observado que o filtro de Kalman, mesmo usando as fun\u00e7\u00f5es de CORDIC \n\nadaptadas, com ou sem otimiza\u00e7\u00e3o de multiplica\u00e7\u00e3o de matriz pelo Matlab\n\u00ae\n, o tempo \n\nde processamento foi 38% menor do que o filtro de Kalman usando as fun\u00e7\u00f5es \n\nnativas do Matlab\n\u00ae\n. A precis\u00e3o estava dentro do padr\u00e3o esperado, oferecendo at\u00e9 \n\nmesmo um valor maior de ISNR na filtragem, mostrando a capacidade do filtro de se \n\nadaptar \u00e0s imprecis\u00f5es mesmo dentro do pr\u00f3prio sistema. \n\nO tempo de processamento do filtro foi menor com o uso do algoritmo \n\nCORDIC deve-se a ele ser mais \u00e1gil e menos preciso do que o algoritmo \n\nimplementado nativamente no Matlab\n\u00ae\n. A causa da perda de precis\u00e3o e o menor \n\ntempo de processamento est\u00e1 ligado ao limite de itera\u00e7\u00f5es dos algoritmos (limitando \n\n\n\n103 \n\n \n\no tamanho das s\u00e9ries temporais), o uso de tabelas de aloca\u00e7\u00e3o, e opera\u00e7\u00f5es de bit \n\nshift presente no CORDIC.  \n\n \n\n \n\nFigura 36 - Proje\u00e7\u00f5es tomogr\u00e1ficas afetadas por ru\u00eddos Gaussianos (a) \ncomposta de gr\u00e3os de areia e (b) uma amostra de solo natural. \n\n \n\n \n\n \n\n \n\n \n\n\n\n104 \n\n \n\n  \n\nTabela 2 - Compara\u00e7\u00e3o de desempenho das fun\u00e7\u00f5es do Matlab\n\u00ae\n e m\u00e9todos \n\nde CORDIC para proje\u00e7\u00f5es tomogr\u00e1ficas de gr\u00e3os de areia. \n\nFun\u00e7\u00f5es Matlab\n\u00ae\n CORDIC \n\nTempo 55,74 s 28,99 s \n\nISRN M\u00e1ximo 23,30 dB 31,99 dB \n\nISRN M\u00ednimo -45,91 dB -48,73 dB \n\nISRN M\u00e9dio -1,76 dB -1,83 dB \n\nVari\u00e2ncia ISNR 165,20 177,64 \n\n \n\nTabela 3 - Compara\u00e7\u00e3o de desempenho das fun\u00e7\u00f5es do Matlab\n\u00ae\n e m\u00e9todos \n\nde CORDIC para proje\u00e7\u00f5es tomogr\u00e1ficas de solo natural. \n\nFun\u00e7\u00f5es Matlab\n\u00ae\n CORDIC \n\nTempo 45,58 s 24,03 s \n\nISRN M\u00e1ximo 42,82 dB 45,56 dB \n\nISRN M\u00ednimo -30,98 dB -32,58 dB \n\nISRN M\u00e9dio 1,27 dB 1,22 dB \n\nVari\u00e2ncia ISNR 138,36 138,87 \n\n \n\nOs valores de ISNR usando CORDIC tamb\u00e9m apresentaram-se com picos de \n\nganhos e perdas maiores do que usando o Matlab\n\u00ae\n, o que demonstra uma perda de \n\nestabilidade tamb\u00e9m confirmada pelo pouca diferen\u00e7a entre os valores m\u00e9dios e \n\numa varia\u00e7\u00e3o maior do ISNR nos algoritmos implementados com CORDIC.  \n\nComparando os resultados de filtragem com os sinais originais, nota-se que a \n\ndiferen\u00e7a \u00e9 muito pequena, que valida o filtro para ser aplicado a uma FPGA para \n\nprover uma melhor rela\u00e7\u00e3o sinal/ru\u00eddo. \n\n \n\n \n\n4.1 ALGORITMO EMBARCADO \n \n\n \n\nO processo de embarque do filtro torna-se complexo por depender de fatores \n\nligados aos recursos dispon\u00edveis na FPGA e o computador utilizado para compilar os \n\narquivos para a grava\u00e7\u00e3o dos dados devido aos recursos necess\u00e1rios para a tarefa.  \n\nO primeiro passo, ap\u00f3s a escolha dos valores de ponto-fixo, foi gerar o c\u00f3digo \n\nem HDL. Como o algoritmo inicialmente era bem complexo, a tarefa de gerar o \n\nc\u00f3digo n\u00e3o era suportada pelo computador utilizado para o projeto, pois o suporte de \n\n\n\n105 \n\n \n\nmem\u00f3ria era apenas de 4 Gigabytes de mem\u00f3ria RAM. Com a aquisi\u00e7\u00e3o de um novo \n\nequipamento com 16 Gigabytes de mem\u00f3ria RAM, o problema persistiu. Ap\u00f3s uma \n\nan\u00e1lise da localiza\u00e7\u00e3o do erro no processo e no algoritmo, descobriu-se que o erro \n\nestava na fun\u00e7\u00e3o de Loop Unroll (desenrolar de la\u00e7os) feito pelo Matlab\n\u00ae\n, de forma \n\nautom\u00e1tica, ou, numa etapa posterior, no pr\u00f3prio Quartus II\n\u00ae\n. Os gargalos foram \n\nencontrados, principalmente, em tr\u00eas fun\u00e7\u00f5es: mapeamento da rede neural, \n\ndecomposi\u00e7\u00e3o QR e fatora\u00e7\u00e3o de Cholesky. Essa situa\u00e7\u00e3o foi contornada ao se \n\nutilizar uma diretiva do Matlab\n\u00ae\n, a coder.unroll, que permite que o c\u00f3digo, antes de \n\nser compilado, desenrole os la\u00e7os, usando menos mem\u00f3ria, mas aumentando o \n\ntempo de compila\u00e7\u00e3o. Nessa etapa, levou da ordem de vinte horas para se gerar o \n\nc\u00f3digo HDL. Adicionalmente, o c\u00f3digo a ser embarcado possu\u00eda um n\u00famero de \n\nrecursos que era maior que a capacidade suportada pela FPGA.  \n\nPara diminuir o tempo de gera\u00e7\u00e3o do c\u00f3digo bem como adequ\u00e1-lo para ser \n\nembarcado, a rede neural foi otimizada retirando as fun\u00e7\u00f5es de regress\u00e3o e \n\ndiminuindo o n\u00famero de neur\u00f4nios na camada oculta. Assim, a rede neural passou a \n\nter quatro neur\u00f4nios  e o desenrolamento dos la\u00e7os foi mais r\u00e1pido e n\u00e3o utilizou-se \n\nde muita mem\u00f3ria do sistema para gerar o c\u00f3digo. \n\nPara diminuir o tempo e analisar o c\u00f3digo, foi realizado um teste sem o uso de \n\nredes neurais para o embarque na FPGA. Ap\u00f3s uma an\u00e1lise profunda no c\u00f3digo, \n\ndescobriu-se que a fun\u00e7\u00e3o de decomposi\u00e7\u00e3o QR era a respons\u00e1vel pela ocupa\u00e7\u00e3o \n\nde grande espa\u00e7o (cerca de 5 vezes a capacidade da FPGA), devido \u00e0 matriz 22x5, \n\ncom v\u00e1rios c\u00e1lculos de raiz quadrada. Assim, a primeira op\u00e7\u00e3o foi adaptar uma \n\nfun\u00e7\u00e3o de decomposi\u00e7\u00e3o QR em CORDIC presente no Matlab\n\u00ae\n. Outra solu\u00e7\u00e3o, mais \n\nvi\u00e1vel, foi a de diminuir o c\u00e1lculo da matriz 50%, ou seja, trabalhar uma matriz 11x5, \n\nlevando em conta que a matriz de covari\u00e2ncia de pontos sigmas gerados pelo \n\nMatlab\n\u00ae\n apresenta um espelhamento com valores positivos nas primeiras onze \n\nlinhas e os mesmos valores, negativos, nas \u00faltimas linhas. Com um c\u00e1lculo matricial, \n\no n\u00famero de opera\u00e7\u00f5es diminuiu consideravelmente, mas ainda era alto para o \n\nsistema compilar. \n\nOutro aspecto importante foi o de diminuir o uso de unidades l\u00f3gicas, onde o \n\nsinal anteriormente aplicado necessitava de uma palavra de 40 bits. Ap\u00f3s uma \n\nmodifica\u00e7\u00e3o no sinal e sua normaliza\u00e7\u00e3o com valor m\u00e1ximo de 1, o tamanho do \n\nponto fixo passou a ser de 21 bits, destes, 15 bits reservados para valores \n\nfracion\u00e1rios. Com essa adapta\u00e7\u00e3o, o uso de recursos de hardware necess\u00e1rio caiu \n\n\n\n106 \n\n \n\n  \n\nquase 50%. As fun\u00e7\u00f5es de an\u00e1lise do sinal e gera\u00e7\u00e3o da vari\u00e2ncia do ru\u00eddo tamb\u00e9m \n\nforam exclu\u00eddas. O filtro passou a ser alimentado com o sinal e a vari\u00e2ncia do ru\u00eddo \n\nj\u00e1 calculada. O filtro faz o pr\u00f3prio armazenamento das vari\u00e1veis internas usando a \n\ndiretiva de vari\u00e1vel persistente presente no Matlab\n\u00ae\n, o que aumenta a complexidade \n\nem tratamento de sinais de controle para a grava\u00e7\u00e3o, limpeza de mem\u00f3ria e uso \n\nefetivo de fun\u00e7\u00f5es que dependem desses sinais de controle. Outras fun\u00e7\u00f5es em \n\nCORDIC, como raiz quadrada e exponencial, foram limitadas a 6 itera\u00e7\u00f5es, \n\nperdendo parte da precis\u00e3o, mas disponibilizando mais recursos. \n\nAnalisando o algoritmo do filtro de Kalman, surgiu a ideia de separ\u00e1-lo em \n\nduas partes utilizando a t\u00e9cnica de Filtro de Kalman Dual, que diminuiria alguns \n\nrecursos como eliminar o c\u00e1lculo pesado para a estima\u00e7\u00e3o do sinal. Assim, a matriz \n\nde covari\u00e2ncia dos estados do sinal passou a ser de 6x3 e, com o uso da fun\u00e7\u00e3o de \n\nmultiplica\u00e7\u00e3o matricial para diminuir o c\u00e1lculo de fun\u00e7\u00e3o QR, a matriz efetiva utilizada \n\npassa a ser 3x3.  \n\nO filtro em sua configura\u00e7\u00e3o final ocupa 33% da capacidade da FPGA, \n\ngerando o c\u00f3digo e  embarcando-o em um tempo menor do que 32 minutos, \n\npodendo o mesmo ser utilizado em equipamentos de 32 bits com mem\u00f3ria de 4 \n\nGigabytes.  \n\n \n\n \n\n4.2 AN\u00c1LISE DE RESULTADOS NA CONFIGURA\u00c7\u00c3O DE FILTRO \nEMBARCADO \n\n \n\n \n\nPara validar o filtro embarcado, foram utilizados dois Phantoms para \n\ncalibra\u00e7\u00e3o, um homog\u00eaneo e outro heterog\u00eaneo. O homog\u00eaneo \u00e9 formado por um \n\ncorpo s\u00f3lido de Nylon e o heterog\u00eaneo cont\u00e9m quatro materiais diferentes (alum\u00ednio, \n\n\u00e1gua, c\u00e1lcio e f\u00f3sforo), feito de plexiglas. Aos dois Phantoms foram adicionados  \n\ndiferentes ru\u00eddos. Foram introduzidos ru\u00eddos tais como multiplicativo, Gaussiano e de \n\nPoisson. Tamb\u00e9m foram utilizados amostras de solos agr\u00edcolas. \n\nO c\u00e1lculo para adicionar o ru\u00eddo multiplicativo \u00e9 dado por: \n\n \n\n                    (76) \n\n \n\n\n\n107 \n\n \n\nonde   \u00e9 a proje\u00e7\u00e3o,   \u00e9 o ru\u00eddo Gaussiano e       , a proje\u00e7\u00e3o perturbada por um \n\nru\u00eddo multiplicativo. \n\nJ\u00e1 o c\u00e1lculo para adicionar o ru\u00eddo Gaussiano \u00e9 dado por: \n\n \n\n                      (77) \n\n \n\nonde       , a proje\u00e7\u00e3o perturbada por um ru\u00eddo Gaussiano.  \n\nE, finalmente, o c\u00e1lculo para adicionar o ru\u00eddo Poisson \u00e9 dado por:  \n\n \n\n                   .     (78) \n \n \n\nonde         , a proje\u00e7\u00e3o ruidosa perturbada por um ru\u00eddo do tipo Poisson. \n\nO ru\u00eddo Poisson foi acrescido de uma multiplica\u00e7\u00e3o por 10 para que o ru\u00eddo se \n\napresentasse de maneira mais forte na imagem.  \n\nOs ru\u00eddos foram aplicados nos dois Phantoms de calibra\u00e7\u00e3o. Ap\u00f3s a an\u00e1lise \n\ndos resultados da filtragem obtidos, o filtro foi aplicado novamente nos Phantoms  e \n\nnas amostras de solo.  \n\n \n\n \n\n4.2.1 RESULTADOS OBTIDOS COM OS PHANTOMS DE \nCALIBRA\u00c7\u00c3O \n\n \n\n \n\nNas Figura 37, Figura 39 e Figura 41 s\u00e3o apresentados os Phantoms de \n\ncalibra\u00e7\u00e3o homog\u00eaneos com os diferentes tipos de ru\u00eddos e nas Figura 38, Figura 40 \n\ne Figura 42, os seus respectivos espectros de Fourier do sinal e das imagens \n\nreconstru\u00eddas. Tamb\u00e9m nas  Figura 43, Figura 45, Figura 47 s\u00e3o apresentados os \n\nresultados de filtragem do phantom de calibra\u00e7\u00e3o heterog\u00eaneo com os diferentes \n\ntipos de ru\u00eddos e nas Figura 44, Figura 46 e Figura 48, os seus respectivos \n\nespectros de Fourier do sinal e das imagens reconstru\u00eddas. As proje\u00e7\u00f5es foram \n\nfiltradas com o filtro de Kalman com redes neurais embarcado em FPGA. \n\nOs diferentes tipos de ru\u00eddos foram escolhidos com o crit\u00e9rio de afetar o sinal \n\nde forma diferenciada: Enquanto o ru\u00eddo multiplicativo afeta, principalmente, as \n\n\n\n108 \n\n \n\n  \n\nmaiores contagens de f\u00f3tons, o ru\u00eddo Poisson afeta as menores contagens e o ru\u00eddo \n\nGaussiano afeta o sinal por inteiro, tanto em baixas quanto nas altas contagens.   \n\nOutra an\u00e1lise importante \u00e9 quanto ao uso do espectro de Fourier, gerado a \n\npartir da transformada de Fourier bidimensional em uma imagem. A an\u00e1lise com o \n\nespectro de Fourier \u00e9 importante para se decidir qual tipo de filtragem ser\u00e1 mais bem \n\nutilizada.  \n\nO filtro ao ser aplicado em uma imagem pode real\u00e7ar ou reter os coeficientes \n\ndos componentes de determinadas frequ\u00eancias, o que pode ser visualizado no \n\nespectro de Fourier com altera\u00e7\u00e3o nos valores das componentes do sinal em \n\ndeterminada faixa de frequ\u00eancia.  \n\n \n\n\n\n109 \n\n \n\n \n\nFigura 37 \u2013  Phantom de calibra\u00e7\u00e3o homog\u00eaneo com ru\u00eddo multiplicativo. (a) \nCompara\u00e7\u00e3o entre os sinais da primeira linha da matriz de \nproje\u00e7\u00f5es. (b) Matriz de proje\u00e7\u00f5es do Phantom original. (c) Matriz \nde proje\u00e7\u00f5es com ru\u00eddo. (d) Matriz de proje\u00e7\u00f5es filtrada. (e) \nImagem do Phantom reconstru\u00eddo. (f) Imagem do Phantom ruidoso \nreconstru\u00eddo. (g) Imagem do Phantom filtrado reconstru\u00eddo. \n\nNa Figura 37, \u00e9 poss\u00edvel notar que o ru\u00eddo afeta todo o sinal, principalmente \n\nnas bordas, ligado \u00e0 alta contagem. Ao se verificar a imagem reconstru\u00edda, \u00e9 notada \n\numa granularidade alta, onde o Phantom n\u00e3o \u00e9 vis\u00edvel. Com a filtragem \u00e9 poss\u00edvel \n\nperceber a restaura\u00e7\u00e3o do Phantom. \n\n\n\n110 \n\n \n\n  \n\n \n\n \n\n \n\n \n\n \n\nFigura 38 -  Espectro de Fourier das proje\u00e7\u00f5es afetadas do Phantom \nhomog\u00eaneo afetadas pelo ru\u00eddo multiplicativo. (a) Espectro de \nFourier da primeira linha da matriz de proje\u00e7\u00f5es. Espectros de \nFourier das imagens reconstru\u00eddas das proje\u00e7\u00f5es: (b) originais  (c) \nafetadas pelo ru\u00eddo e (d) filtradas. \n\n \n\nNa Figura 38, \u00e9 poss\u00edvel ver a compara\u00e7\u00e3o dos espectros do sinal. O ru\u00eddo \n\nmultiplicativo afeta todas as frequ\u00eancias do sinal. O filtro atenua os valores das \n\ncomponentes com tentativas de restaurar o sinal. Nos espectros das imagens \n\nreconstru\u00eddas \u00e9 poss\u00edvel perceber a restaura\u00e7\u00e3o de parte do sinal, principalmente \n\nnas baixas e altas frequ\u00eancias.  \n\n \n\n\n\n111 \n\n \n\n \n\nFigura 39 - Phantom de calibra\u00e7\u00e3o homog\u00eaneo com ru\u00eddo Gaussiano. (a) \nCompara\u00e7\u00e3o entre os sinais da primeira linha da matriz de \nproje\u00e7\u00f5es. (b) Matriz de proje\u00e7\u00f5es do Phantom original. (c) Matriz \nde proje\u00e7\u00f5es com ru\u00eddo. (d) Matriz de proje\u00e7\u00f5es filtrada. (e) \nImagem do Phantom reconstru\u00eddo. (f) Imagem do Phantom ruidoso \nreconstru\u00eddo. (g) Imagem do Phantom filtrado reconstru\u00eddo. \n\nNa Figura 39, foi aplicado o ru\u00eddo Gaussiano. Ele afeta todo o sinal \n\nigualmente, ou seja, tanto nas regi\u00f5es de alta e baixa contagem. O filtro promove \n\numa atenua\u00e7\u00e3o dos valores dos ru\u00eddos se aproximando do sinal na original. Nas \n\nimagens reconstru\u00eddas \u00e9 poss\u00edvel notar a restaura\u00e7\u00e3o do corpo do Phantom e \n\ndiminui\u00e7\u00e3o da granula\u00e7\u00e3o.  \n\n\n\n112 \n\n \n\n  \n\n \n\n \n\n \n\nFigura 40 - Espectro de Fourier das proje\u00e7\u00f5es afetadas do Phantom \nhomog\u00eaneo afetadas pelo ru\u00eddo Gaussiano. (a) Espectro de \nFourier da primeira linha da matriz de proje\u00e7\u00f5es. Espectros de \nFourier das imagens reconstru\u00eddas das proje\u00e7\u00f5es: (b) originais  (c) \nafetadas pelo ru\u00eddo e (d) filtradas. \n\n \n\nNa Figura 40, nota-se uma filtragem mais precisa. O ru\u00eddo afeta as \n\nfrequ\u00eancias mais altas do sinal. Algumas componentes foram atenuadas, como a \n\nfaixa de frequ\u00eancia pr\u00f3xima de 35%, 47% 75% e 85%. Em compensa\u00e7\u00e3o, algumas \n\nfaixas de frequ\u00eancias foram restauradas, como as faixas de 21%, 42% e 95%. Por \n\nser um filtro adaptativo, o comportamento n\u00e3o fica preso ao \u00e0 um s\u00f3 intervalo de \n\nfaixa. \n\n \n\n\n\n113 \n\n \n\n \n\nFigura 41- Phantom de calibra\u00e7\u00e3o homog\u00eaneo com ru\u00eddo de Poisson. (a)  \nCompara\u00e7\u00e3o entre os sinais da primeira linha da matriz de \nproje\u00e7\u00f5es. (b) Matriz de proje\u00e7\u00f5es do Phantom original. (c) Matriz \nde proje\u00e7\u00f5es com ru\u00eddo. (d) Matriz de proje\u00e7\u00f5es filtrada. (e) \nImagem do Phantom reconstru\u00eddo. (f) Imagem do Phantom ruidoso \nreconstru\u00eddo. (g) Imagem do Phantom filtrado reconstru\u00eddo. \n\nNa Figura 41, foram adicionados ru\u00eddos do tipo Poisson. Esse tipo de ru\u00eddo \u00e9 \n\ncaracter\u00edstico por afetar principalmente as baixas contagens de f\u00f3tons. \u00c9 poss\u00edvel \n\nperceber como o sinal \u00e9 mais afetado no centro do sinal do que nas extremidades. O \n\nfiltro atua direcionado pela medi\u00e7\u00e3o do ru\u00eddo. Ou seja, altas contagens geram \n\nvalores maiores de ru\u00eddos, enquanto baixas contagens geram valores menores. Mas \n\n\n\n114 \n\n \n\n  \n\nao reconstruir as imagens, o contraste \u00e9 essencial para que sejam observados \n\nvalores de baixo contraste, ou seja, a rela\u00e7\u00e3o sinal ru\u00eddo \u00e9 maior nas baixas \n\ncontagens. O filtro se adapta e acaba por realizar uma filtragem consistente do sinal, \n\no que pode ser observado na reconstru\u00e7\u00e3o da imagem filtrada.  \n\n \n\n  \n\n \n\nFigura 42- Espectro de Fourier das proje\u00e7\u00f5es afetadas do Phantom \nhomog\u00eaneo afetadas pelo ru\u00eddo de Poisson. (a) Espectro de \nFourier da primeira linha da matriz de proje\u00e7\u00f5es. Espectros de \nFourier das imagens reconstru\u00eddas das proje\u00e7\u00f5es: (b) originais  (c) \nafetadas pelo ru\u00eddo e (d) filtradas. \n\nNa Figura 42, \u00e9 poss\u00edvel notar que o ru\u00eddo afeta algumas faixas de frequ\u00eancia, \n\natenuando suas componentes.  As frequ\u00eancias mais altas, da faixa de 90 a 100% \n\ns\u00e3o mantidas, enquanto frequ\u00eancias intermedi\u00e1rias sofrem com a atenua\u00e7\u00e3o. O filtro \n\ntenta restaurar essas componentes, atenuando quando \u00e9 preciso, como a faixa de \n\n35%. \n\n\n\n115 \n\n \n\n \n\n \n\nFigura 43- Phantom de calibra\u00e7\u00e3o heterog\u00eaneo com ru\u00eddo de multiplicativo. \n(a) Compara\u00e7\u00e3o entre os sinais da primeira linha da matriz de \nproje\u00e7\u00f5es. (b) Matriz de proje\u00e7\u00f5es do Phantom original. (c) Matriz \nde proje\u00e7\u00f5es com ru\u00eddo. (d) Matriz de proje\u00e7\u00f5es filtrada. (e) \nImagem do Phantom reconstru\u00eddo. (f) Imagem do Phantom ruidoso \nreconstru\u00eddo. (g) Imagem do Phantom filtrado reconstru\u00eddo. \n\nNa Figura 43, pelo Phantom heterog\u00eaneo ter uma contagem de f\u00f3tons maior \n\nque o Phantom homog\u00eaneo, h\u00e1 uma maior distor\u00e7\u00e3o no interior do sinal do que nas \n\nbordas. Esse tipo de ru\u00eddo distorce o sinal completamente, deixando os detalhes da \n\ntomografia quase impercept\u00edveis ao reconstruir  a imagem. Ap\u00f3s a aplica\u00e7\u00e3o do \n\nfiltro, os elementos (os diferentes tipos de materiais do phantom) podem ser \n\n\n\n116 \n\n \n\n  \n\nvisualizados. Isso porque o filtro atenuou o ru\u00eddo presente nas contagem mais altas \n\ndo que nas contagem mais baixas. \n\n \n\n \n\n \n\nFigura 44 - Espectro de Fourier das proje\u00e7\u00f5es afetadas do Phantom \nheterog\u00eaneo afetadas pelo ru\u00eddo multiplicativo. (a) Espectro de \nFourier da primeira linha da matriz de proje\u00e7\u00f5es. Espectros de \nFourier das imagens reconstru\u00eddas das proje\u00e7\u00f5es: (b) originais  (c) \nafetadas pelo ru\u00eddo e (d) filtradas. \n\n \n\nNa Figura 44, \u00e9 percept\u00edvel que o ru\u00eddo afeta principalmente as componentes \n\nintermedi\u00e1rias e mais altas. O filtro acaba por atenuar as amplitudes em todo o \n\nespectro, o que causou uma restaura\u00e7\u00e3o das frequ\u00eancias m\u00e9dias e atenua\u00e7\u00e3o das \n\nfrequ\u00eancias altas. Como pode se notar na compara\u00e7\u00e3o entre os sinais, o ru\u00eddo \n\nalterou principalmente as frequ\u00eancias mais altas. \n\n\n\n117 \n\n \n\n \n\n \n\n \n\nFigura 45 - Phantom de calibra\u00e7\u00e3o heterog\u00eaneo com ru\u00eddo de Gaussiano. (a) \nCompara\u00e7\u00e3o entre os sinais da primeira linha da matriz de \nproje\u00e7\u00f5es. (b) Matriz de proje\u00e7\u00f5es do Phantom original. (c) Matriz \nde proje\u00e7\u00f5es com ru\u00eddo. (d) Matriz de proje\u00e7\u00f5es filtrada. (e) \nImagem do Phantom reconstru\u00eddo. (f) Imagem do Phantom ruidoso \nreconstru\u00eddo. (g) Imagem do Phantom filtrado reconstru\u00eddo. \n\nNa Figura 45, \u00e9 apresentado o Phantom com ru\u00eddo aditivo Gaussiano. Como \n\nhouve uma distor\u00e7\u00e3o do sinal pouco agressiva, a filtragem se apresentou de forma \n\noptimizada. Os elementos da imagem reconstru\u00edda s\u00e3o vis\u00edveis, mas h\u00e1 uma \n\ndificuldade em diferenci\u00e1-los. Ap\u00f3s a filtragem, \u00e9 percept\u00edvel uma melhoria e \n\nvisualiza\u00e7\u00e3o dos quatro elementos. \n\n \n\n\n\n118 \n\n \n\n  \n\n \n\n \n\n \n\nFigura 46- Espectro de Fourier das proje\u00e7\u00f5es afetadas do Phantom \nheterog\u00eaneo afetadas pelo ru\u00eddo Gaussiano. (a) Espectro de \nFourier da primeira linha da matriz de proje\u00e7\u00f5es. Espectros de \nFourier das imagens reconstru\u00eddas das proje\u00e7\u00f5es: (b) originais  (c) \nafetadas pelo ru\u00eddo e (d) filtradas. \n\n \n\nNa Figura 46, o ru\u00eddo Gaussiano afeta principalmente as frequ\u00eancias mais \n\naltas. \u00c9 poss\u00edvel notar que algumas das componentes mais altas foram recuperadas, \n\nenquanto outras que sofreram maiores distor\u00e7\u00f5es obtiveram pouco ganho (na faixa \n\nentre 80% e 90%). No espectro de Fourier da imagem reconstru\u00edda, nota-se que \n\nhouve uma atenua\u00e7\u00e3o de frequ\u00eancias mais altas enquanto as frequ\u00eancias mais \n\nbaixas foram mantidas. \n\n\n\n119 \n\n \n\n \n\n \n\nFigura 47 - Phantom de calibra\u00e7\u00e3o heterog\u00eaneo com ru\u00eddo de Poisson. (a) \nCompara\u00e7\u00e3o entre os sinais da primeira linha da matriz de \nproje\u00e7\u00f5es. (b) Matriz de proje\u00e7\u00f5es do Phantom original. (c) Matriz \nde proje\u00e7\u00f5es com ru\u00eddo. (d) Matriz de proje\u00e7\u00f5es filtrada. (e) \nImagem do Phantom reconstru\u00eddo. (f) Imagem do Phantom ruidoso \nreconstru\u00eddo. (g) Imagem do Phantom filtrado reconstru\u00eddo. \n\nNa Figura 47 \u00e9 poss\u00edvel que o ru\u00eddo Poisson afeta as \u00e1reas com menor \n\ncontagem do que \u00e1reas com maior contagem de f\u00f3tons. Isso \u00e9 percept\u00edvel quando \n\nn\u00e3o h\u00e1 diferencia\u00e7\u00e3o entre certos elementos da imagem e a presen\u00e7a de ru\u00eddos no \n\nsinal com baixa contagem de f\u00f3tons. A filtragem do sinal promoveu um melhor \n\nacompanhamento do sinal original. \n\n\n\n120 \n\n \n\n  \n\n \n\n \n\nFigura 48 - Espectro de Fourier das proje\u00e7\u00f5es afetadas do Phantom \nheterog\u00eaneo afetadas pelo ru\u00eddo Gaussiano. (a) Espectro de \nFourier da primeira linha da matriz de proje\u00e7\u00f5es. Espectros de \nFourier das imagens reconstru\u00eddas das proje\u00e7\u00f5es: (b) originais  (c) \nafetadas pelo ru\u00eddo e (d) filtradas. \n\n \n\nNa Figura 48, \u00e9 poss\u00edvel ver que no espectro de Fourier do sinal h\u00e1  uma \n\ndegrada\u00e7\u00e3o maior do sinal nas frequ\u00eancias intermedi\u00e1rias e mais altas, pois o ru\u00eddo \n\nde Poisson afeta as regi\u00f5es de maior contraste. O filtro obteve uma efici\u00eancia maior \n\nna restaura\u00e7\u00e3o das frequ\u00eancias m\u00e9dias e tendo atenua\u00e7\u00e3o nas frequ\u00eancias mais \n\naltas. No espectro de Fourier da imagem reconstru\u00edda da amostra ruidosa, o ru\u00eddo \n\nafeta principalmente as frequ\u00eancias intermedi\u00e1rias e altas. No espectro da imagem \n\nrestaurada, \u00e9 poss\u00edvel notar a atenua\u00e7\u00e3o nas frequ\u00eancias enquanto o centro obteve \n\num realce, visualizado pelo centro mais iluminado do que o restante do espectro. \n\n\n\n121 \n\n \n\nApesar de apresentar ru\u00eddos, \u00e9 poss\u00edvel notar que ao adicionar diferentes \n\ntipos de ru\u00eddo nas proje\u00e7\u00f5es e reconstruir suas respectivas imagens, h\u00e1 uma \n\nvaria\u00e7\u00e3o nos componentes em  todo o espectro. Esta mudan\u00e7a dos valores na faixa \n\ndo espectro de Fourier ajuda a entender que houve realce nas frequ\u00eancias baixas, \n\nmanteve as frequ\u00eancias intermedi\u00e1rias e reteve as frequ\u00eancias mais altas. \n\nNa Tabela 4, s\u00e3o apresentados os valores de ISNR para as filtragens do \n\nPhantom homog\u00eaneo enquanto na Tabela 5, s\u00e3o apresentados os valores para a \n\nfiltragem do Phantom heterog\u00eaneo.  \n\n \n\nTabela 4 - Tabela de valores de ISNR obtidos pela filtragem do Phantom de \ncalibra\u00e7\u00e3o homog\u00eaneo com diferentes tipos de ru\u00eddo.  \n\nFun\u00e7\u00f5es \nRu\u00eddo \n\nMultiplicativo \nRu\u00eddo \n\nGaussiano \nRu\u00eddo \n\nPoisson \n\nISRN M\u00e1ximo 94,07 dB 71,00 dB 84,75 dB \n\nISRN M\u00ednimo -69,13 dB -71,17 dB -66,69 dB \n\nISRN M\u00e9dio 4,45 dB 3,50 dB 4,49 dB \n\nVari\u00e2ncia ISNR 130,77 dB 139,06 dB 130,70 dB \n\nISNR da Imagem 4,55 dB 5,19 dB 4,38 dB \n\n \n\nTabela 5 - Tabela de valores de ISNR obtidos pela filtragem do Phantom de \ncalibra\u00e7\u00e3o heterog\u00eaneo com diferentes tipos de ru\u00eddo.  \n\nFun\u00e7\u00f5es \nRu\u00eddo \n\nMultiplicativo \nRu\u00eddo \n\nGaussiano \nRu\u00eddo \n\nPoisson \n\nISRN M\u00e1ximo 67,99 dB 60,43 dB 64,49 dB \n\nISRN M\u00ednimo -59,80 dB -84,59 dB -74,20 dB \n\nISRN M\u00e9dio 3,34 dB -0,75 dB -0,67 dB \n\nVari\u00e2ncia ISNR 138,29 dB 172,51 dB 169,34 \n\nISNR da Imagem 4,28 dB 4,78 dB 5,62 dB \n\n \n\nA filtragem do ru\u00eddo multiplicativo apresenta como melhoria uma m\u00e9dia de \n\n4,45 dB para o Phantom homog\u00eaneo e de 3,34 dB para o Phantom heterog\u00eaneo \n\ncom vari\u00e2ncias com valores mais baixos, ou seja, mais confi\u00e1veis.  \n\nNo caso das filtragens dos Phantoms com o ru\u00eddo Gaussiano, a melhoria \n\nm\u00e9dia foi de 3,50 dB para o homog\u00eaneo e -0,75 dB para o heterog\u00eaneo. O valor \n\nnegativo representa que houveram mais perdas de dados do que ganho, estando \n\nligado, nesse caso, aos detalhes do sinal que foram perdidos. Como no Phantom \n\nhomog\u00eaneo h\u00e1 poucos detalhes, \u00e9 esperado um valor mais alto do ISNR m\u00e9dio.  \n\n\n\n122 \n\n \n\n  \n\nNo caso dos Phantoms  que tiveram o ru\u00eddo Poisson filtrado, repete-se a \n\nperda da qualidade do sinal no Phantom heterog\u00eaneo. Se analisar que os detalhes \n\ndo sinal est\u00e3o presentes nas baixas contagens, percebe-se que h\u00e1 um \n\ncomportamento de que dados ser\u00e3o perdidos durante a filtragem, devido \u00e0 \n\nsuaviza\u00e7\u00e3o. \n\nO ISNR das imagens reconstru\u00eddas, apresentaram uma melhoria acima de 4 \n\ndBs, o que garante um ganho na qualidade de imagem, o que pode se perceber na \n\ndetec\u00e7\u00e3o de elementos que n\u00e3o eram bem visualizados nas imagens reconstru\u00eddas \n\ndas proje\u00e7\u00f5es sem filtragem. \n\n Ao ser aplicado em amostra de solos, \u00e9 poss\u00edvel notar a qualidade do filtro. \n\nEle se comporta de acordo com o ru\u00eddo presente nas contagens de f\u00f3tons e n\u00e3o \n\ndiretamente \u00e0 presen\u00e7a do ru\u00eddo na imagem tomogr\u00e1fica ap\u00f3s sua reconstru\u00e7\u00e3o. \n\nIsso faz com que, dependendo do n\u00famero de f\u00f3tons e do ru\u00eddo presente nas \n\nproje\u00e7\u00f5es, ele se adapte, variando o corte e realce em determinadas frequ\u00eancias. \n\nEsse tipo de informa\u00e7\u00e3o garante que mesmo o sinal tenha perdido detalhes, a \n\nimagem reconstru\u00edda vai ter um ganho de qualidade significativo. \n\nPara calcular o ISNR \u00e9 necess\u00e1rio conhecer o ru\u00eddo presente nos sinais e \n\nimagens. Em aplica\u00e7\u00f5es reais, feitas com amostras reais n\u00e3o \u00e9 poss\u00edvel identificar o \n\nru\u00eddo de forma precisa. Dado esse problema, \u00e9 utilizada a medi\u00e7\u00e3o atrav\u00e9s do SNR \n\nque, apesar de n\u00e3o ser t\u00e3o preciso quanto o ISNR, ainda serve como indicador de \n\nqualidade.  \n\nAntes de aplicar a filtragem em amostras de solo, o filtro foi aplicado nos dois \n\nPhantoms sem adicionar qualquer tipo de ru\u00eddos. Como eles apresentam ru\u00eddos \n\nprovenientes do tom\u00f3grafo e esses s\u00e3o caracterizados por aproxima\u00e7\u00f5es, os \n\nresultados ser\u00e3o avaliados por SNR. \n\nNas Figura 49, Figura 50, Figura 50Figura 51 e Figura 52 s\u00e3o apresentados \n\nos resultados com os Phantoms de calibra\u00e7\u00e3o. Por haver perda de precis\u00e3o, o sinal \n\nacaba sendo suavizado, n\u00e3o atingindo um valor pr\u00f3ximo do final da proje\u00e7\u00e3o, \n\ndiferentemente da filtragem anterior com mais precis\u00e3o. Isso ocorre por v\u00e1rios \n\nfatores, os algoritmos em CORDIC possuem menor n\u00famero de itera\u00e7\u00f5es para utilizar \n\nmenos recursos na FPGA, tal como uma rede neural mais simplificada e n\u00famero de \n\nbits da palavra reduzidos pela metade. \n\n\n\n123 \n\n \n\n \n\nFigura 49 - Phantom de calibra\u00e7\u00e3o homog\u00eaneo. (a) Compara\u00e7\u00e3o entre os \nsinais da primeira linha da matriz de proje\u00e7\u00f5es. (b) Matriz de \nproje\u00e7\u00f5es do Phantom original. (c) Matriz de proje\u00e7\u00f5es com ru\u00eddo. \n(d) Imagem do Phantom original reconstru\u00eddo. (e) Imagem do \nPhantom filtrado reconstru\u00eddo.  \n\nNa Figura 49, \u00e9 poss\u00edvel observar que houve uma atenua\u00e7\u00e3o do ru\u00eddo, o sinal \n\nse apresenta mais suave na matriz de proje\u00e7\u00f5es. A suaviza\u00e7\u00e3o do sinal aumentou o \n\ncontraste na imagem reconstru\u00edda. Com a diminui\u00e7\u00e3o da granularidade da imagem, \n\nos pixels se apresentam na faixa mais clara. \n\n\n\n124 \n\n \n\n  \n\n \n\nFigura 50- Espectro de Fourier das proje\u00e7\u00f5es afetadas do Phantom \nhomog\u00eaneo. (a) Espectro de Fourier da primeira linha da matriz de \nproje\u00e7\u00f5es. Espectros de Fourier das imagens reconstru\u00eddas das \nproje\u00e7\u00f5es: (b) originais e (c) filtradas. \n\n \n\nNa Figura 50, nota-se que algumas frequ\u00eancias tiveram suas amplitudes \n\namplificadas, em diferentes faixas, enquanto na maioria das frequ\u00eancias, \n\nprincipalmente as mais altas, os valores se mantiveram. Visualizando o efeito no \n\nespectro das imagens reconstru\u00eddas, \u00e9 poss\u00edvel notar que a perda de textura (no \n\ncaso das imagens tomogr\u00e1ficas reconstru\u00eddas, uma diminui\u00e7\u00e3o da granularidade). A \n\nimagem apresenta uma simetria mais definida ap\u00f3s a filtragem. \n\n \n\n\n\n125 \n\n \n\n \n\nFigura 51 - Phantom de calibra\u00e7\u00e3o homog\u00eaneo. . (a) Compara\u00e7\u00e3o entre os \nsinais da primeira linha da matriz de proje\u00e7\u00f5es. (b) Matriz de \nproje\u00e7\u00f5es do Phantom original. (c) Matriz de proje\u00e7\u00f5es com ru\u00eddo. \n(d) Imagem do Phantom original reconstru\u00eddo. (e) Imagem do \nPhantom filtrado reconstru\u00eddo.  \n\nNa Figura 51 s\u00e3o apresentados os resultados obtidos com a filtragem do \n\nPhantom heterog\u00eaneo. \u00c9 poss\u00edvel notar a suaviza\u00e7\u00e3o na compara\u00e7\u00e3o entre os \n\nsinais, havendo perda de alguns detalhes no sinal. No conjunto de proje\u00e7\u00f5es nota-se \n\numa suaviza\u00e7\u00e3o em toda a matriz. Nas imagens reconstru\u00eddas, nota-se a diferen\u00e7a \n\nde contraste, apresentando objetos mais s\u00f3lidos, com menor granularidade. \n\n\n\n126 \n\n \n\n  \n\n \n\nFigura 52 - Espectro de Fourier das proje\u00e7\u00f5es afetadas do Phantom \nheterog\u00eaneo. (a) Espectro de Fourier da primeira linha da matriz \nde proje\u00e7\u00f5es. Espectros de Fourier das imagens reconstru\u00eddas das \nproje\u00e7\u00f5es: (b) originais e  (c)  filtradas. \n\n \n\nNa Figura 52 \u00e9 apresentado o espectro de Fourier filtrado do Phantom \n\nheterog\u00eaneo. H\u00e1 uma menor varia\u00e7\u00e3o nos coeficientes mais altos, com exce\u00e7\u00e3o da \n\nfaixa entre 90% e 100%.  Ao se observar o espectro da imagem reconstru\u00edda, h\u00e1 um \n\ncorte nas frequ\u00eancias mais altas, com os valores de intensidade mais baixos (cor \n\nazul escura) do que no espectro da imagem do Phantom original.  \n\nNa Tabela 6 s\u00e3o apresentados os valores de SNR para os dois Phantoms de \n\ncalibra\u00e7\u00e3o. \n\n \n\n \n\n \n\n\n\n127 \n\n \n\nTabela 6 - Resultados obtidos com a an\u00e1lise de SNR das proje\u00e7\u00f5es e \nimagens reconstru\u00eddas.  \n\nPhantoms \n\nRela\u00e7\u00e3o Sinal/Ru\u00eddo (em dB) \n\nProje\u00e7\u00e3o Imagem \n\nOriginal Filtrada Ganho Original Filtrada Ganho \n\nHomog\u00eaneo 14,52 14,68 0,16 2,34 2,56 0,22 \n\nHeterog\u00eaneo 9,15 10,48 1,33 -1,32 -0,78 0,53 \n\n \n \n\nA filtragem dos dois Phantoms apresentaram ganhos na qualidade do sinal. \n\nFica evidente que o SNR \u00e9 capaz de traduzir os resultados experimentais para \n\nresultados reais, mesmo que em uma escala de valor mais baixa.  \n\nAp\u00f3s o processo de valida\u00e7\u00e3o do filtro, aplicou-se o mesmo em proje\u00e7\u00f5es \n\nreais de tomografia de solos.  \n\n \n\n \n\n4.2.2 RESULTADOS OBTIDOS COM AMOSTRAS DE SOLOS \nAGR\u00cdCOLAS \n\n \n\n \n\nNas Figuras 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67 e 68 s\u00e3o apresentados \n\nos resultados obtidos com os dados de tomografias de solo. Em geral, o sinal filtrado \n\nest\u00e1 dentro das expectativas de pouca perda de qualidade, garantindo uma imagem \n\nreconstru\u00edda de melhor qualidade, como foi verificado com os testes feitos com o \n\nPhantom  de calibra\u00e7\u00e3o heterog\u00eaneo.  \n\nNas amostras de solo, o que se nota \u00e9 a atenua\u00e7\u00e3o de determinadas faixas \n\nde  frequ\u00eancias, a granularidade \u00e9 presente por toda imagem e a sua varia\u00e7\u00e3o \u00e9 \n\ndesignada por frequ\u00eancias mais altas. Os poros apresentam uma frequ\u00eancia \n\nintermedi\u00e1ria por estarem em contraste com as partes s\u00f3lidas das amostras e por \n\nterem uma menor variabilidade nos pixels enquanto as partes s\u00f3lidas est\u00e3o \n\npresentes nas frequ\u00eancias mais baixas. A atenua\u00e7\u00e3o de frequ\u00eancias altas tem como \n\nobjetivo de eliminar os ru\u00eddos, mas tamb\u00e9m eliminam componentes importantes nas \n\nimagens, como as bordas e poros, que podem ser omitidos pela perda de contraste. \n\n\n\n128 \n\n \n\n  \n\nPor outro lado, o realce das partes s\u00f3lidas faz com que o contraste aumente, \n\ndeixando os poros mais evidentes.   \n\n \nFigura 53 - Dados do arquivo areia2.dat. (a) Compara\u00e7\u00e3o entre os sinais da \n\nprimeira linha da matriz de proje\u00e7\u00f5es. (b) Matriz de proje\u00e7\u00f5es do \nPhantom original. (c) Matriz de proje\u00e7\u00f5es com ru\u00eddo. (d) Imagem \ndo Phantom original reconstru\u00eddo. (e) Imagem do Phantom filtrado \nreconstru\u00eddo.  \n\n \n\nNa Figura 53,  trata-se de uma microtomografia de um tubo contendo gr\u00e3os \n\nde areia. A filtragem suavizou os picos e vales, aumentando o contraste da imagem \n\n\n\n129 \n\n \n\ne eliminando porosidades onde n\u00e3o existem, como os gr\u00e3os de areia. Os detalhes \n\nnas imagens foram mantidos como se v\u00ea a delimita\u00e7\u00e3o dos gr\u00e3os e a presen\u00e7a dos \n\npequenos c\u00edrculos.  \n\n \nFigura 54- Espectro de Fourier das proje\u00e7\u00f5es do tubo contendo gr\u00e3os de \n\nareia. (a) Espectro de Fourier da primeira linha da matriz de \nproje\u00e7\u00f5es. Espectros de Fourier das imagens reconstru\u00eddas das \nproje\u00e7\u00f5es: (b) originais e  (c)  filtradas. \n\n \n\nNo espectro do sinal restaurado apresentado na Figura 54, \u00e9 poss\u00edvel notar \n\numa atenua\u00e7\u00e3o de componentes por todo o sinal de forma discreta. No espectro de \n\nFourier nota-se a atenua\u00e7\u00e3o dos componentes de frequ\u00eancias conforme se distancia \n\ndo centro do espectro. \u00c9 poss\u00edvel notar a atenua\u00e7\u00e3o de frequ\u00eancias mais altas por \n\ntodo espectro, se apresentando de valores mais baixos, entre 1 e 2 no espectro da \n\nimagem reconstru\u00edda restaurada, enquanto esses valores estavam distribu\u00eddos entre \n\n2 e 3 no espectro da imagem reconstru\u00edda original. \n\n\n\n130 \n\n \n\n  \n\n \nFigura 55 - Dados do arquivo torrao.dat. (a) Compara\u00e7\u00e3o entre os sinais da \n\nprimeira linha da matriz de proje\u00e7\u00f5es. (b) Matriz de proje\u00e7\u00f5es do \nPhantom original. (c) Matriz de proje\u00e7\u00f5es com ru\u00eddo. (d) Imagem \ndo Phantom original reconstru\u00eddo. (e) Imagem do Phantom filtrado \nreconstru\u00eddo. \n\nO sinal filtrado, apresentado na Figura 55, acompanha bem o sinal ruidoso \n\nmantendo as caracter\u00edsticas das amostras, como os pequenos poros e eliminando \n\nos falsos artefatos gerados pelo ru\u00eddo, como a falsa porosidade. Os detalhes ainda \n\ns\u00e3o consistentes e a imagem final apresenta um melhor contraste. \n\n\n\n131 \n\n \n\n \n\n \nFigura 56 - Espectro de Fourier das proje\u00e7\u00f5es do torr\u00e3o. (a) Espectro de \n\nFourier da primeira linha da matriz de proje\u00e7\u00f5es. Espectros de \nFourier das imagens reconstru\u00eddas das proje\u00e7\u00f5es: (b) originais e  \n(c)  filtradas. \n\n \n\nNa Figura 56, o espectro do sinal possui cortes em diferentes faixas de \n\nfrequ\u00eancia. No espectro da imagem reconstru\u00edda original nota-se que o ru\u00eddo est\u00e1 \n\npresente por todo o espectro, sendo que no espectro da imagem reconstru\u00edda ap\u00f3s \n\na filtragem das proje\u00e7\u00f5es h\u00e1 uma atenua\u00e7\u00e3o das frequ\u00eancias mais altas, com alguns \n\ncomponentes sendo mantidos (como a presen\u00e7a de uma borda e pequenos pontos \n\nmais claros no espectro). \n\n  \n\n\n\n132 \n\n \n\n  \n\n \nFigura 57 - Dados do arquivo cimen2.dat. (a) Compara\u00e7\u00e3o entre os sinais da \n\nprimeira linha da matriz de proje\u00e7\u00f5es. (b) Matriz de proje\u00e7\u00f5es do \nPhantom original. (c) Matriz de proje\u00e7\u00f5es com ru\u00eddo. (d) Imagem \ndo Phantom original reconstru\u00eddo. (e) Imagem do Phantom filtrado \nreconstru\u00eddo. \n\nNa Figura 57, o sinal se apresenta com uma maior porosidade e elementos \n\ncom alto contraste no sinal, que podem ser vistos nas imagens reconstru\u00eddas como \n\nporos maiores e elementos mais claros.  O sinal \u00e9 mais suavizado em compara\u00e7\u00e3o \n\ncom o algoritmo proposto anteriormente, mas ainda realiza uma filtragem \n\nconsistente. \n\n \n\n\n\n133 \n\n \n\n \n\n \nFigura 58- Espectro de Fourier das proje\u00e7\u00f5es do solo cimentado. (a) Espectro \n\nde Fourier da primeira linha da matriz de proje\u00e7\u00f5es. Espectros de \nFourier das imagens reconstru\u00eddas das proje\u00e7\u00f5es: (b) originais e  \n(c)  filtradas. \n\n \n\nNa Figura 58, por ser um sinal que apresenta v\u00e1rios detalhes, a frequ\u00eancia de \n\ndiferentes valores \u00e9 notada no espectro de Fourier. Nota-se o corte de determinadas \n\nfrequ\u00eancias, baixas (em 30%) m\u00e9dias (em 47% e 70%) e altas (83% e 85%). Por ser \n\nafetado por diferentes ru\u00eddos, o filtra acaba determinando qual frequ\u00eancia deve ser \n\natenuada, por se tratar de ru\u00eddo. Nas imagens espectrais percebe-se como a \n\natenua\u00e7\u00e3o permitiu o realce de outras frequ\u00eancias, como a presen\u00e7a de diferentes \n\nc\u00edrculos no espectro.  \n\n\n\n134 \n\n \n\n  \n\n \nFigura 59 - Dados do arquivo degri30.dat. (a) Compara\u00e7\u00e3o entre os sinais da \n\nprimeira linha da matriz de proje\u00e7\u00f5es. (b) Matriz de proje\u00e7\u00f5es do \nPhantom original. (c) Matriz de proje\u00e7\u00f5es com ru\u00eddo. (d) Imagem \ndo Phantom original reconstru\u00eddo. (e) Imagem do Phantom filtrado \nreconstru\u00eddo. \n\nNa Figura 59,o sinal desta tomografia de solo se apresenta como um cone, \n\ndevido \u00e0s caracter\u00edsticas f\u00edsicas da amostra. O ru\u00eddo se apresenta mais ao centro do \n\nsinal por haver baixa contagem e, quando reconstru\u00edda, a imagem apresenta falsa \n\nporosidade. Ap\u00f3s a aplica\u00e7\u00e3o do filtro, os elementos principais s\u00e3o mantidos assim \n\ncomo os poros reais.  \n\n\n\n135 \n\n \n\n \nFigura 60- Espectro de Fourier das proje\u00e7\u00f5es do solo degradado. (a) Espectro \n\nde Fourier da primeira linha da matriz de proje\u00e7\u00f5es. Espectros de \nFourier das imagens reconstru\u00eddas das proje\u00e7\u00f5es: (b) originais e  \n(c)  filtradas. \n\n \n\nNa Figura 60, como em outras amostras de solo, as atenua\u00e7\u00f5es em algumas \n\nfaixas de frequ\u00eancias foram percebidas, desta vez, pr\u00f3ximas \u00e0s frequ\u00eancias de 5%, \n\n40%, 65% e 98%.  No espectro das imagens reconstru\u00eddas \u00e9 poss\u00edvel notar que h\u00e1 \n\numa atenua\u00e7\u00e3o, mas certas frequ\u00eancias ainda s\u00e3o mantidas. \n\n  \n\n\n\n136 \n\n \n\n  \n\n \nFigura 61 - Dados do arquivo adub30.dat. (a) Compara\u00e7\u00e3o entre os sinais da \n\nprimeira linha da matriz de proje\u00e7\u00f5es. (b) Matriz de proje\u00e7\u00f5es do \nPhantom original. (c) Matriz de proje\u00e7\u00f5es com ru\u00eddo. (d) Imagem \ndo Phantom original reconstru\u00eddo. (e) Imagem do Phantom filtrado \nreconstru\u00eddo. \n\nNa Figura 61, a caracter\u00edstica principal do sinal dessa amostra \u00e9 possuir uma \n\nparte menos porosa do lado esquerdo, caracterizado pela estabiliza\u00e7\u00e3o do sinal, e \n\nmais porosa do lado direito, caracterizado por um sinal mais tortuoso. O filtro \n\naplicado se mostra eficiente, acompanhando o sinal bem pr\u00f3ximo ao sinal original, \n\neliminando a granularidade que poderia ser classificada como poros e  mantendo os \n\ndetalhes da imagem reconstru\u00edda, como os pequenos poros.  \n\n\n\n137 \n\n \n\n \n\n \nFigura 62 - Espectro de Fourier das proje\u00e7\u00f5es do solo adubado. (a) Espectro \n\nde Fourier da primeira linha da matriz de proje\u00e7\u00f5es. Espectros de \nFourier das imagens reconstru\u00eddas das proje\u00e7\u00f5es: (b) originais e  \n(c)  filtradas. \n\n \n\nNa Figura 62, \u00e9 percept\u00edvel no sinal algumas atenua\u00e7\u00f5es nas frequ\u00eancias em \n\ndiferentes faixas, sendo mais percept\u00edvel na frequ\u00eancia pr\u00f3xima a 70%. Nos \n\nespectros, nota-se uma maior atenua\u00e7\u00e3o, mas mantendo as caracter\u00edsticas das \n\nfrequ\u00eancias, mas com menores faixas de valores. \n\n  \n\n\n\n138 \n\n \n\n  \n\n \nFigura 63 - Dados do arquivo mb1t1.dat. (a) Compara\u00e7\u00e3o entre os sinais da \n\nprimeira linha da matriz de proje\u00e7\u00f5es. (b) Matriz de proje\u00e7\u00f5es do \nPhantom original. (c) Matriz de proje\u00e7\u00f5es com ru\u00eddo. (d) Imagem \ndo Phantom original reconstru\u00eddo. (e) Imagem do Phantom filtrado \nreconstru\u00eddo. \n\n \n\nNa Figura 63, o sinal apresenta v\u00e1rios detalhes que foram suavizados em \n\nconjunto com o ru\u00eddo. Esses dados foram corrigidos a partir da classifica\u00e7\u00e3o do filtro \n\ndiretamente feito sobre o valor da proje\u00e7\u00e3o, assim, o que por haver baixa contagem \n\nno interior da amostra, os ru\u00eddos eram mais persistentes. Se analisar o topo do sinal, \n\n\u00e9 not\u00e1vel a presen\u00e7a de ru\u00eddo na alta contagem, o que determina que os detalhes \n\n\n\n139 \n\n \n\npresentes nas baixas contagens tinha grande probabilidade de serem apenas \n\nru\u00eddos. Analisando a imagem reconstru\u00edda pode se ver a diminui\u00e7\u00e3o efetiva da \n\ngranularidade enquanto os pequenos poros e elementos de alto contraste foram \n\nmantidos.  \n\n \n\n \nFigura 64 - Espectro de Fourier das proje\u00e7\u00f5es de solo argiloso. (a) Espectro \n\nde Fourier da primeira linha da matriz de proje\u00e7\u00f5es. Espectros de \nFourier das imagens reconstru\u00eddas das proje\u00e7\u00f5es: (b) originais e  \n(c)  filtradas. \n\n \n\nNa Figura 64, por ser um sinal com v\u00e1rias faixas de frequ\u00eancias, a filtragem \n\napresenta cortes em diferentes frequ\u00eancias. Com a atenua\u00e7\u00e3o da frequ\u00eancia \n\npr\u00f3xima a 75%, seguida de pequenas atenua\u00e7\u00f5es em frequ\u00eancias baixas como 13% \n\ne 21%, ligada a presen\u00e7a a granularidade e a textura da amostra. Essa densidade \n\nde sinais tamb\u00e9m \u00e9 percept\u00edvel na imagem espectral original, onde h\u00e1 presen\u00e7a de \n\n\n\n140 \n\n \n\n  \n\nv\u00e1rias frequ\u00eancias altas. Na imagem espectral filtrada \u00e9 poss\u00edvel notar o corte de \n\nalgumas frequ\u00eancias altas. \n\nAnalisando os valores apresentados na Tabela 6, \u00e9 poss\u00edvel verificar a \n\nrela\u00e7\u00e3o entre sinal e ru\u00eddo do sinal e da imagem.  \n\n \nTabela 6 - Resultados obtidos com a an\u00e1lise de SNR das proje\u00e7\u00f5es e \n\nimagens reconstru\u00eddas.  \n\nArquivos \ndas \n\nProje\u00e7\u00f5es \n\nRela\u00e7\u00e3o Sinal/Ru\u00eddo (em dB) \n\nProje\u00e7\u00e3o Imagem \n\nOriginal Filtrada Ganho Original Filtrada Ganho \n\nareia2.dat 24,51 24,65 0,14 -1,36 -0,61 0,75 \n\ntorrao.dat 14,72 14,76 0,04 -1,29 -1,22 0,06 \n\ncimen2.dat 18,08 18,16 0,08 -2,62 -1,68 0,94 \n\ndegri30.dat 18,90 18,96 0,06 -4,77 -5,09 -0,32 \n\nadub30.dat 16,67 13,72 -3,00 -3,01 0,01 3,00 \n\nmb1t1.dat 19,11 19,18 0,07 -1,71 -1,32 0,38 \n\n \n \n\nAs tomografias de solo obtiveram valores mais significativos na imagem do \n\nque no sinal, como as tomografias de gr\u00e3os de areia (areia2,dat), latosolo \n\n(torrao.dat), de solo cimentado (cimen2.dat), solo adubado (adub30.dat) e o solo \n\nargiloso (mb1t1.dat), destacando que o solo adubado teve uma m\u00e1 avalia\u00e7\u00e3o no \n\nganho do sinal, mas uma boa filtragem no ganho da imagem. Isso ocorre porque os \n\nvalores de ISNR e SNR classificam que quanto mais suave \u00e9 a imagem, maior \u00e9 o \n\nvalor. Ou seja, quanto menor a granularidade apresentada pela imagem \n\nreconstru\u00edda, mais confi\u00e1vel e melhor qualidade ela representar\u00e1.  \n\nOs resultados dos c\u00f3digos gerados pela FPGA se apresentam semelhantes \n\naos c\u00f3digos gerados pelo simulador da  arquitetura feita com o uso do bloco HDL \n\nImport e o pr\u00f3prio c\u00f3digo do Simulink\n\u00ae\n, ap\u00f3s altera\u00e7\u00f5es necess\u00e1rias devido a \n\nproblemas ligados ao software de embarque, o Quartus II\n\u00ae\n. Nem sempre todas as \n\nopera\u00e7\u00f5es na FPGA e no simulador s\u00e3o bem adequadas, como a inconsist\u00eancia de \n\ndados gerados. Muitas vezes, uma linha de c\u00f3digo deve ser dividida em pequenas \n\n\n\n141 \n\n \n\npartes para que a leitura correta dos valores seja identificada de forma correta ap\u00f3s \n\no embarque ou a simula\u00e7\u00e3o. Ao compilar o c\u00f3digo, o Quartus II\n\u00ae\n gera latches que \n\ns\u00e3o necess\u00e1rios para resolver esses problemas, mas alguns acabam n\u00e3o sendo \n\nidentificados. \n\nAp\u00f3s a corre\u00e7\u00e3o, o c\u00f3digo com pontos fixos executou da mesma maneira que \n\no c\u00f3digo embarcado pelas opera\u00e7\u00f5es em ponto-fixo serem feitas com valores em \n\nbin\u00e1rios como na FPGA. A diferen\u00e7a maior est\u00e1 no tempo de execu\u00e7\u00e3o como pode \n\nser visto na Tabela 7. Na Figura 69 s\u00e3o apresentados os dados da Tabela 6 em \n\nforma de gr\u00e1fico para melhor an\u00e1lise do comportamento do processamento do filtro \n\nde Kalman em rela\u00e7\u00e3o ao tempo. \n\n \n\nTabela 7 - Tempo de processamento do filtro nos diferentes ambientes do \nMatlab\n\n\u00ae\n e embarcado na FPGA. \n\nAmbiente \n\nTempo de processamento em segundos \n\nN\u00famero de Posi\u00e7\u00f5es no Sinal Digital \n\n10 50 100 200 400 600 \n\nMatlab\n\u00ae\n 1,21 3,20 5,21 11,32 23,54 35,11 \n\nMatlab\n\u00ae\n com \n\nponto fixo \n30,51 120,65 254,41 516,21 1002,61 1400,75 \n\nSimulink\n\u00ae\n 0,09 0,67 2,22 5,29 8,22 10,68 \n\nHDL Import 3,89 5,16 6,08 7,22 9,23 11,42 \n\nFPGA 0,09 1,86 1,96 2,62 3,91 4,32 \n\n \nNo ambiente do Matlab\n\n\u00ae\n com o c\u00f3digo utilizando pontos flutuantes, o tempo \n\nfoi o usual de opera\u00e7\u00f5es normais. \u00c9 considerado pesado por ser um c\u00f3digo \n\ninterpretado e n\u00e3o compilado. Ao se usar ponto-fixo, o tempo foi maior, pois h\u00e1 \n\nv\u00e1rias transforma\u00e7\u00f5es e c\u00e1lculos feitos em cima de pontos fixos.  \n\n\n\n142 \n\n \n\n  \n\n \n\nFigura 65 - Compara\u00e7\u00e3o entre os diferentes tempos de processamento nos \ndiversos ambientes usados para gera\u00e7\u00e3o do c\u00f3digo em HDL com \no embarque do c\u00f3digo na FPGA. O tempo de processamento da \nFPGA est\u00e1 ligado diretamente ao tempo de comunica\u00e7\u00e3o entre o \ncomputador e o dispositivo.  \n\n \n\nCom o Simulink\n\u00ae\n, \u00e9 feito uma compila\u00e7\u00e3o do c\u00f3digo, gerando um arquivo \n\nexecut\u00e1vel em C, o que diminuiu o tempo at\u00e9 mesmo em rela\u00e7\u00e3o ao c\u00f3digo sendo \n\nexecutado no ambiente padr\u00e3o do Matlab\n\u00ae\n. O c\u00f3digo gerado pelo Simulink\n\n\u00ae\n tamb\u00e9m \n\nj\u00e1 estava convertido em ponto-fixo. \n\nO bloco HDL Import \u00e9 utilizado no Simulink\n\u00ae\n, mas a diferen\u00e7a \u00e9 o c\u00f3digo em \n\nHDL gerado numa fase anterior \u00e9 importado e compilado. A estrutura segue o \n\nmesmo padr\u00e3o do c\u00f3digo a ser embarcado. Dependendo da vers\u00e3o do Matlab\n\u00ae\n, DSP \n\nBuilder\n\u00ae\n, Quartus II\n\n\u00ae\n e o compilador usado pelo Matlab\n\n\u00ae\n, o c\u00f3digo gerado e \n\nembarcado pode atuar de forma diferente. O c\u00f3digo inicial foi criado usando uma \n\nvers\u00e3o mais nova do Matlab\n\u00ae\n (R2012b \u2013 64 bits com um compilador externo), DSP \n\nBuilder\n\u00ae\n e Quartus II\n\n\u00ae\n 12.1. Ao usar um computador com vers\u00f5es mais antigas dos \n\nsoftwares, o mesmo precisou ser readequado. \n\n\n\n143 \n\n \n\nJ\u00e1 o c\u00f3digo embarcado na FPGA foi executado rapidamente, limitado apenas \n\npela transfer\u00eancia de dados entre o computador e o dispositivo. \u00c9 poss\u00edvel notar a \n\nvantagem de um sistema com base em l\u00f3gica combinacional com menor poder de \n\nfrequ\u00eancia, mas dedicado, do que um computador de uso geral que trabalha com \n\nprocessamento sequencial.  \n\nTodos os testes foram feitos em um computador com processador Intel Core \n\ni7 com 8 n\u00facleos de 3,6 GHz com 16 Gigabytes de mem\u00f3ria RAM e HD SSD.  \n\nA diferen\u00e7a do tempo de processamento n\u00e3o se deve \u00e0 compara\u00e7\u00e3o normal \n\nsobre frequ\u00eancia de clock ou n\u00famero de ciclos para executar uma instru\u00e7\u00e3o, algo \n\npresente em sistemas sequenciais. O trajeto dos dados j\u00e1 \u00e9 pr\u00e9-definido pelo projeto \n\ndo c\u00f3digo em HDL.  \n\nO uso de FPGA tamb\u00e9m se difere de microcontroladores. Apesar de serem \n\ntamb\u00e9m usados para sistemas dedicados, eles possuem baixo poder de \n\nprocessamento e por serem baseados em l\u00f3gica sequencial, dependem do ciclo de \n\nclock para realizar cada tarefa, perdendo para a capacidade de processamento em \n\ntempo real de dispositivos mais robustos.  \n\nO uso de uma arquitetura baseada em algoritmos permitiu que dados fossem \n\nprocessados e disponibilizem a sa\u00edda em um tempo menor. A efici\u00eancia depende \n\nmais da  estrutura da arquitetura do que a quantidade de ciclos, pois n\u00e3o h\u00e1 acesso \n\nem mem\u00f3ria ou busca de instru\u00e7\u00f5es, como em computadores em tempo real.  \n\nO filtro embarcado apresenta limita\u00e7\u00f5es relacionadas \u00e0 precis\u00e3o dos dados,  \n\nreconfigura\u00e7\u00e3o da arquitetura (algo ainda indispon\u00edvel na maioria das FPGAs atuais) \n\ne complexidade de sistemas n\u00e3o lineares. Contudo, essas limita\u00e7\u00f5es podem ser \n\ncontornadas com o uso de um filtro de Kalman descentralizado para a corre\u00e7\u00e3o em \n\ntempo real dos erros de precis\u00e3o, da aplica\u00e7\u00e3o das redes neurais auto-\n\nreconfigur\u00e1veis, que s\u00e3o atualizadas de acordo com a observ\u00e2ncia desses erros, \n\ndentro do contexto da FPGA, onde a arquitetura tem como refer\u00eancia a robustez e \n\nrespostas em tempo real.   \n\n\n\n144 \n\n \n\n  \n\n  \n\n\n\n145 \n\n \n\n5 CONCLUS\u00c3O \n \n\n \n\nEm tomografia de raios X a filtragem convencional promove uma suaviza\u00e7\u00e3o \n\ndos valores devido \u00e0 natureza da distribui\u00e7\u00e3o de dados (os coeficientes de \n\natenua\u00e7\u00e3o) que apresentam uma distribui\u00e7\u00e3o uniforme, enquanto o filtro \u00e9 limitado a \n\ntrabalhar com um processo Gaussiano. Essa suaviza\u00e7\u00e3o promove a perda de \n\ndetalhes, ap\u00f3s a reconstru\u00e7\u00e3o da imagem,  que s\u00e3o elementos importantes e a \n\naus\u00eancia destes pode dificultar a caracteriza\u00e7\u00e3o de solos agr\u00edcolas. \n\n Ao se usar filtragem de Kalman e RNAs para a estima\u00e7\u00e3o do processo, foi \n\napresentado um resultado mais preciso atrav\u00e9s do mapeamento do comportamento \n\ndas amostragens fazendo com que as transforma\u00e7\u00f5es necess\u00e1rias das incertezas \n\nsejam adequadas para garantir um melhor detalhamento das imagens.  \n\nAlgo que se nota, \u00e9 que a qualidade da filtragem n\u00e3o depende mais do \n\nconhecimento das vari\u00e2ncias do processo. Em um filtro sem RNA a vari\u00e2ncia do \n\nprocesso \u00e9 determinada pelas caracter\u00edsticas f\u00edsico-qu\u00edmicas da amostra ensaiada \n\nou de ru\u00eddos presentes diretamente na proje\u00e7\u00e3o. J\u00e1 na estima\u00e7\u00e3o do processo \n\nusando RNAs, a vari\u00e2ncia do processo passar\u00e1 a definir o grau de aprendizado da \n\nRNA em sua capacidade de se estimar os estados futuros livre de ru\u00eddos.  \n\nO uso de fun\u00e7\u00f5es n\u00e3o lineares permitiu que o processo (mapeado pela RNA) \n\ne a observa\u00e7\u00e3o (baseada na equa\u00e7\u00e3o de Beer-Lambert) alcancem a precis\u00e3o \n\nnecess\u00e1ria. A precis\u00e3o tem um papel importante em uma estima\u00e7\u00e3o  pr\u00f3xima ao \n\ncomportamento real do sistema atrav\u00e9s da observa\u00e7\u00e3o das proje\u00e7\u00f5es afetadas pelos \n\ndiferentes tipos de ru\u00eddos e suas diferentes distribui\u00e7\u00f5es. \n\nPara determinar o ru\u00eddo que afeta o sistema, foi feito o uso da t\u00e9cnica de \n\npropaga\u00e7\u00e3o de erros. Esta t\u00e9cnica foi necess\u00e1ria para se definir previamente o ru\u00eddo \n\ndo sistema que pode ser proveniente de diferentes fontes que afetam as medidas \n\nfeitas pela contagem final de f\u00f3tons, a incerteza na determina\u00e7\u00e3o dos coeficientes de \n\natenua\u00e7\u00e3o do material e o tempo de exposi\u00e7\u00e3o da amostra \u00e0 radia\u00e7\u00e3o.  \n\nOs algoritmos baseados em CORDIC permitiram a obten\u00e7\u00e3o de um tempo \n\nmenor de processamento e uma  m\u00ednima perda de precis\u00e3o em rela\u00e7\u00e3o ao uso das \n\nfun\u00e7\u00f5es nativas do Matlab\n\u00ae\n. Este resultado foi alcan\u00e7ado devido \u00e0s fun\u00e7\u00f5es serem \n\nconstru\u00eddas dentro do sistema e usar em menor itera\u00e7\u00e3o dos la\u00e7os para garantir \n\nprecis\u00e3o. \n\n\n\n146 \n\n \n\n  \n\nUma melhor medida das varia\u00e7\u00f5es dos ru\u00eddos do detector pode ser feita em \n\ntempo real. Quanto mais pr\u00f3ximos s\u00e3o os valores da vari\u00e2ncia total do ru\u00eddo medido, \n\nmenor ser\u00e1 o erro na etapa de reconstru\u00e7\u00e3o. A implementa\u00e7\u00e3o do filtro em FPGA \n\np\u00f4de assegurar melhores resultados devido \u00e0 sua alimenta\u00e7\u00e3o  com os valores mais \n\nprecisos das vari\u00e2ncias  de cada  vari\u00e1vel do sistema, de acordo com a calibra\u00e7\u00e3o e \n\nenergia utilizada pelo minitom\u00f3grafo. Ao ter o filtro implementado em hardware, o \n\ntempo de resposta da filtragem diminui consideravelmente.  \n\nA limita\u00e7\u00e3o do uso de fun\u00e7\u00f5es do Matlab\n\u00ae\n e certos blocos para gerar HDL foi \n\ncontornada pelo uso de fun\u00e7\u00f5es implementadas especificamente para atender um \n\ngrau de precis\u00e3o nas medidas. Ao mesmo tempo, todas as fun\u00e7\u00f5es n\u00e3o suportadas, \n\ncomo la\u00e7os din\u00e2micos e matrizes din\u00e2micas tiveram que ser modificadas para \n\naceitar um limite de n\u00famero m\u00e1ximo, mesmo que nem todas as fun\u00e7\u00f5es atinjam \n\nesse limite. Estas limita\u00e7\u00f5es, em rela\u00e7\u00e3o ao baixo uso de recursos, v\u00e3o contra o uso \n\nde facilidades permitidas no uso da linguagem M-code como a utiliza\u00e7\u00e3o de  \n\nmem\u00f3ria din\u00e2mica. \n\nO bloco de fun\u00e7\u00e3o embarcada do Matlab\n\u00ae,\n\n somente embarca um M-code em \n\num bloco do Simulink\n\u00ae\n. Para transformar o c\u00f3digo em HDL, existem outras op\u00e7\u00f5es, \n\nentre elas a ferramenta HDL Workflow Advisor. Esta ferramenta permite a otimiza\u00e7\u00e3o \n\ndo sistema gerado com uma gama de op\u00e7\u00f5es para o balanceamento de atrasos, \n\ndistribui\u00e7\u00e3o hier\u00e1rquica de pipelines, otimiza\u00e7\u00e3o do controle de tempo e minimiza\u00e7\u00e3o \n\nde habilita\u00e7\u00e3o por clock.  \n\nA configura\u00e7\u00e3o da placa de FPGA p\u00f4de ser feita automaticamente sem a \n\nnecessidade de otimiza\u00e7\u00e3o do tempo de processamento e c\u00e1lculo do consumo de \n\nenergia pelo sistema. Ap\u00f3s validar um c\u00f3digo em HDL gerado pelo Matlab\u00ae, onde o \n\nmesmo deve ser aceito sem erros na compila\u00e7\u00e3o e simulado como se funcionassem \n\nna FPGA, as pr\u00f3prias ferramentas de embarque fizeram o processo de controle dos \n\nfluxos dos dados entre o computador e a FPGA, sem diretamente se envolverem \n\ncom a an\u00e1lise da qualidade do c\u00f3digo e poder de consumo ou uso de mem\u00f3ria do \n\nsistema. \n\nPara uma simplifica\u00e7\u00e3o do tratamento dos pontos fixos, adotou-se o mesmo \n\nvalor para todas as vari\u00e1veis do sistema por ser mais fact\u00edvel para controlar os erros \n\nao analisar o c\u00f3digo gerado.  \n\n\n\n147 \n\n \n\nA precis\u00e3o do c\u00f3digo embarcado foi a mesma do c\u00f3digo gerado com pontos \n\nfixos, onde todas as fun\u00e7\u00f5es foram trabalhadas como unidades l\u00f3gicas, tanto no \n\nsimulador quanto no pr\u00f3prio Simulink\n\u00ae\n ao usar o tipo de ponto fixo. \n\nAs ferramentas utilizadas permitiram diminuir a complexidade da constru\u00e7\u00e3o \n\nda arquitetura usando HDL, mas apresentaram algumas limita\u00e7\u00f5es, principalmente \n\npara projetos complexos como uso de fun\u00e7\u00f5es matem\u00e1ticas exclusivas e fun\u00e7\u00f5es de \n\nmapeamento de redes neurais. Por esta raz\u00e3o, o filtro teve que ser modificado para \n\noperar com uma rede neural mais simples, ainda que eficiente, como tamb\u00e9m utilizar \n\nde fun\u00e7\u00f5es CORDIC com poucas itera\u00e7\u00f5es para liberar recursos na FPGA. Isso fez \n\ncom que o filtro perdesse parte da precis\u00e3o, antes garantida com um filtro \n\ntrabalhando com pontos flutuantes em um computador de uso geral.  \n\nOutro ponto importante na abordagem da filtragem usando FPGA foi o ganho \n\nno tempo de processamento dos dados, sua reserva de recurso do sistema \n\ncomputacional e possiblidade de portabilidade. O ganho no processamento de \n\ndados permitiu que sistemas de controle e armazenamento mais simples possam ser \n\nutilizados no sistema de tomografia computadorizada, sem exigir grandes recursos \n\nque acabem sendo desperdi\u00e7ados para a tarefa de filtragem. Isto mostrou a \n\npossibilidade de se usar a FPGA como um dispositivo independente, onde os sinais \n\ngerados pelo tom\u00f3grafo s\u00e3o repassados a ela e automaticamente s\u00e3o tratados antes \n\nde chegar ao final do sistema. Como o filtro desenvolvido \u00e9 on-line, ou seja, realiza a \n\nfiltragem durante o processamento de cada proje\u00e7\u00e3o, o tempo de processamento \n\np\u00f4de ser reduzido. \n\nEm geral, o uso do Matlab\n\u00ae\n para gerar um c\u00f3digo HDL de um sistema \n\ncomplexo como \u00e9 um filtro de Kalman descentralizado com redes neurais foi \n\nadequado. Uma caracter\u00edstica que se destacou foi a capacidade de se trabalhar com \n\numa linguagem mais clara e menos ligada a blocos l\u00f3gicos, o que  permitiu depurar \n\no c\u00f3digo de maneira mais eficaz ao inv\u00e9s de escrev\u00ea-lo em Verilog ou VHDL. Outra \n\ncaracter\u00edstica importante foi a otimiza\u00e7\u00e3o que permitiu reduzir o n\u00famero de unidades \n\nmultiplicadoras, trabalhar n\u00fameros fracion\u00e1rios (algo complexo em HDL) e \n\ndesenrolar os la\u00e7os antes da gera\u00e7\u00e3o do c\u00f3digo em HDL. \n\n A capacidade de portabilidade n\u00e3o fica presa somente ao uso de FPGAs. \n\nEsses dispositivos tamb\u00e9m s\u00e3o usados para validar projetos de hardware de um \n\nmodo mais f\u00edsico do que simuladores de HDL, pois podem sofrer interfer\u00eancias, \n\nproblemas com temporiza\u00e7\u00e3o e limita\u00e7\u00e3o de recursos. O projeto validado de uma \n\n\n\n148 \n\n \n\n  \n\nFPGA pode ser usado em um projeto de um ou mais processadores que operam em \n\nfrequ\u00eancias mais pr\u00f3ximas de processadores embarcados. Ao inv\u00e9s de requerer no \n\nfinal um hardware mais complexo e, possivelmente, menos robusto, a opera\u00e7\u00e3o de \n\nfiltragem pode ser feita totalmente em uma pastilha simples com o alto poder de \n\nprocessamento em um sistema totalmente paralelo e auto-reconfigur\u00e1vel.  \n\nA auto-reconfigurabilidade \u00e9 uma caracter\u00edstica do filtro de Kalman, que, ao \n\nobservar o erro, altera o ganho e, consequentemente, corrige o sinal. Essa tarefa \n\npassou a ser mais complexa e se mostrou mais eficiente com o uso de redes neurais \n\nartificiais, que, adicionalmente, corrige o processo de previs\u00e3o do sinal, por meio de \n\naltera\u00e7\u00f5es nos valores dos pesos. Essas opera\u00e7\u00f5es s\u00e3o feitas automaticamente \n\napenas pela observa\u00e7\u00e3o do sinal.  \n\n \n\n \n\n5.1 TRABALHOS FUTUROS \n \n\n \n\n1. Utilizar uma FPGA de quinta gera\u00e7\u00e3o com mais recursos para uso em \n\ncomputa\u00e7\u00e3o de alto desempenho. \n\n2. Implementar o c\u00f3digo diretamente em HDL para proporcionar o uso \n\nmais eficiente dos recursos e utilizando-se do pr\u00f3prio Quartus II\n\u00ae\n com suas \n\nfuncionalidades. \n\n3. Aplicar a filtragem embarcada de Kalman em processos din\u00e2micos da \n\nf\u00edsica dos solos.  \n\n  \n\n\n\n149 \n\n \n\nREFER\u00caNCIAS \n\n \n \n\n1 PETROVIC, M.; SIEBERT, J. E.; RIEKE, P. E. Soil bulk analysis in three dimensions by \ncomputed tomographic scanning. Soil Science Society American Journal, v. 46, n.3, p. 445-\n450, 1982. \n\n \n\n2 HAINSWORTH, J. M.; AYLMORE, L. A. The use of the computed-assisted tomography to \ndetermine spatial distribution of soil water content. Australian Journal Soil Research. v. 21, \nn.4 p. 435-443, 1983. \n\n \n\n3 CRESTANA, S. A tomografia computadorizada com um novo m\u00e9todo para estudos da \nf\u00edsica da \u00e1gua no solo. 1985. 140p. Tese (Doutorado em F\u00edsica Aplicada) \u2013 Instituto de \nF\u00edsica de S\u00e3o Carlos, Universidade de S\u00e3o Paulo, S\u00e3o Carlos, 1985. \n\n \n\n4 EMBRAPA Instrumenta\u00e7\u00e3o completa 23 anos de hist\u00f3ria, ousadia e persist\u00eancia. Dispon\u00edvel \nem: &lt;http://www.cnpdia.embrapa.br/noticia_04122007.html> Acesso em: 29 de junho de \n2013. \n\n \n\n5 RIBEIRO, G. C. Desenvolvimento de um algoritmo para a reconstru\u00e7\u00e3o tridimensional \npara imagens de um minitom\u00f3grafo, baseado no m\u00e9todo de reconstru\u00e7\u00e3o alg\u00e9brica \nmodificado e interpola\u00e7\u00e3o spline. 1994. 122p. Disserta\u00e7\u00e3o (Mestrado em Ci\u00eancia da \nComputa\u00e7\u00e3o) \u2013 Departamento de Computa\u00e7\u00e3o. Universidade Federal de S\u00e3o Carlos, S\u00e3o \nCarlos, 1994.  \n\n \n\n6 VENTURINI, Y. An\u00e1lise quantitativa da qualidade de imagens digitais com o uso de \nespectro de Wiener. 1995. 84p. Disserta\u00e7\u00e3o (Mestrado em Ci\u00eancia da Computa\u00e7\u00e3o) \u2013 \nDepartamento de Computa\u00e7\u00e3o. Universidade Federal de S\u00e3o Carlos, S\u00e3o Carlos, 1995.  \n \n7 MINATEL, E. R. Desenvolvimento de algoritmo para reconstru\u00e7\u00e3o e visualiza\u00e7\u00e3o \ntridimensional de imagens tomogr\u00e1ficas com o uso de t\u00e9cnicas frequ\u00eanciais e \nWavelets. 1997. 121p. Disserta\u00e7\u00e3o (Mestrado em Ci\u00eancia da Computa\u00e7\u00e3o) \u2013 Departamento \nde Computa\u00e7\u00e3o. Universidade Federal de S\u00e3o Carlos, S\u00e3o Carlos, 1997.  \n\n \n\n8 GRANATO, L. F. Algoritmo adaptativo para a melhoria em imagens tomogr\u00e1ficas \nobtidas em m\u00faltiplas energias. 1998. 135p. Disserta\u00e7\u00e3o (Mestrado em Ci\u00eancia da \nComputa\u00e7\u00e3o) \u2013 Departamento de Computa\u00e7\u00e3o. Universidade Federal de S\u00e3o Carlos, S\u00e3o \nCarlos, 1998. \n\n \n\n9 PEREIRA, M. F. L. Algoritmo paralelo para reconstru\u00e7\u00e3o tridimensional de imagens \ntomogr\u00e1ficas de amostras agr\u00edcolas em arquitetura DSP com t\u00e9cnicas Wavelets. 2002. \n142p. Disserta\u00e7\u00e3o (Mestrado em Ci\u00eancia da Computa\u00e7\u00e3o) \u2013 Departamento de Computa\u00e7\u00e3o. \nUniversidade Federal de S\u00e3o Carlos, S\u00e3o Carlos, 2002. \n\n \n\n10 LAIA, M. A. M. Filtragem de proje\u00e7\u00f5es tomogr\u00e1ficas do solo utilizando Kalman e \nRedes Neurais. 2007. 131p. Disserta\u00e7\u00e3o (Mestrado em Ci\u00eancia da Computa\u00e7\u00e3o) \u2013 \nDepartamento de Computa\u00e7\u00e3o. Universidade Federal de S\u00e3o Carlos, S\u00e3o Carlos, 2007. \n\n \n\n\n\n150 \n\n \n\n  \n\n11 BOTEGA, L. C. An\u00e1lise de imagens tomogr\u00e1ficas da ci\u00eancia do solo em ambiente de \nrealidade virtual. 2008. 213p. Disserta\u00e7\u00e3o (Mestrado em Ci\u00eancia da Computa\u00e7\u00e3o) \u2013 \nDepartamento de Computa\u00e7\u00e3o. Universidade Federal de S\u00e3o Carlos, S\u00e3o Carlos, 2008. \n\n \n\n12 CRUVINEL, P. E. Minitom\u00f3grafo de Raios X e Raios gama computadorizado para \naplica\u00e7\u00f5es multidisciplinares. 1987. 325p. Tese (Doutorado em Engenharia El\u00e9trica, \nUniversidade Estadual de Campinas, Campinas, 1987. \n\n \n\n13 CRESTANA, S.; CESAREO, R.; MASCARENHAS, S. Using a computed tomography \nminiscanner in soil science. Soil Science,  v.142, n.1, p.56-61, July 1985. \n\n \n\n14 CRESTANA, S.; MASCARENHAS, S.; MUCELLI, R. P. Tomografia computerizada \naplicada \u00e0 f\u00edsica de solos. Ci\u00eancia e Cultura, , v. 36, n. 7, p. 676, ref. 10-F.3, 1984. \nSuplemento. \n\n \n\n15 CRUVINEL, P. E.; CESAREO, R.; CRESTANA, S.; MASCARENHAS, S. X-and ?-rays \ncomputerized minitomograph scanner for soil science. IEEE - Transactions on Instrumental \nand Measurement v. 39, n. 4, p. 745-750, 1990. \n\n \n\n16 LAIA, M. A. M.; CRUVINEL, P. E. An application approach to Kalman filter and CT \nscanners for Soil Science. In: GUNGOR,E. B. O.. (Ed). Principles, application and \nassessment in soil science. Naple, FL.: INTECH, 2011. Cap. 19, p 371-394. DOI: \n10.5572/1860. \n\n \n\n17 NAIME, J. M. Projeto e constru\u00e7\u00e3o de um tom\u00f3grafo port\u00e1til para estudos de ci\u00eancia \ndo solo e planta, em campo. 1994. 87p. Disserta\u00e7\u00e3o (Mestrado em Engenharia El\u00e9trica) \u2013 \nEscola de Engenharia de S\u00e3o Carlos, Universidade de S\u00e3o Paulo, S\u00e3o Carlos, 1994. \n\n \n\n18 WALLACE, J. S. Increasing agricultural water use efficiency to meet future food production. \nAgriculture Ecosystems &amp; Environment.  v.82, n.3, p. 105-19. 2000. \n\n \n\n19 SHIPTALO, M. J.; DICK, W. A; EDUARDS, W.M. Conservation tillage and macropore \nfactors that affect water movement and the fate of chemicals. Amsterdam, Soil &amp; Tillage \nResearch, v. 53, n. 3, p. 167-83. 2000. \n\n \n\n20 VAZ, C. M. P.  Tomografia computadorizada aplicada a estudos de compacta\u00e7\u00e3o de \nsolos. 1989. 110p. Disserta\u00e7\u00e3o (Mestrado em Engenharia El\u00e9trica). Escola de Engenharia de \nS\u00e3o Carlos, Universidade de S\u00e3o Paulo, S\u00e3o Carlos, 1989. \n\n \n\n21 MACEDO, A.; VAZ, C. M. P.; CRUVINEL, P. E.; CRESTANA, S. Tom\u00f3grafo de resolu\u00e7\u00e3o \nmicrom\u00e9trica para estudos do sistema \u00e1gua-solo-planta. Circular T\u00e9cnica \u2013 Embrapa \nInstrumenta\u00e7\u00e3o. p. 1-5, setembro, 1996. \n\n \n\n22 CRESTANA, S.; NIELSEN, D. R. Investiga\u00e7\u00f5es n\u00e3o destrutivas de sistemas porosos \nmultif\u00e1sicos atrav\u00e9s de microtomografia de raios-X, gama e resson\u00e2ncia nuclear (RMN). In: \nENCONTRO NACIONAL SOBRE ESCOAMENTO EM MEIOS POROSOS-ENEMP, 8., out. \n1990, Nova Friburgo, RJ. Anais... Nova Friburgo: Col\u00e9gio Anchieta, 1990. p. 699-710, 1990. \n\n \n\n\n\n151 \n\n \n\n23 VIS\u00c3O computacional. laborat\u00f3rio de rob\u00f3tica da Universidade de S\u00e3o Paulo. Dispon\u00edvel \nem&lt;http://robot.lac.usp.br> Acesso em: 29  de junho de  2013.  \n\n \n\n24 MACEDO, A. Constru\u00e7\u00e3o e uso de um tom\u00f3grafo com resolu\u00e7\u00e3o microm\u00e9trica para \naplica\u00e7\u00f5es em ci\u00eancias do solo e do ambiente. 1997. 183p. Tese (Doutorado em \nEngenharia El\u00e9trica). Escola de Engenharia de S\u00e3o Carlos, Universidade de S\u00e3o Paulo, S\u00e3o \nCarlos, 1997. \n\n \n\n25 CRUVINEL, P. E.; BALOGUN, F. A. Tom\u00f3grafo de espalhamento Compton para medidas \nagr\u00edcolas. Revista Engenharia Agr\u00edcola, v.26, n.1 ,p. 151-160, 2006. \n\n \n\n26 RADON, J. On the determination of functions from their integrals along certain manifolds. \nBer Saechs Akad wiss. Leipzig Mathematical Physik,. v. 69, p. 262-277, 1917. \n\n \n\n27 BRACEWELL, R. N., Microwave transmission and cavity resonator theory. Sydney: \nAngus and Robertson 1946. \n\n \n\n28 TAKAHASHI, H.; SHIMODA, K.; TOWNES, C. H. Fluctuation in amplification of quanta with \napplication to master amplifiers. Journal of Physics Society, Japan, v.12, n.6, p. 686-700, \n1957. \n\n \n\n29 CORMACK, A. M. Representation of a function by its line integrals, with some radiological \napplications. Journal of Applied Physics, v. 34, n. 9 p. 2908-2913, 1963. \n\n \n\n30 HOUNSFIELD, G. N. Computerized transverse axial scanning (tomography). 1. Description \nof system. Britannic Journal of  Radiology. v. 46, n. 552, p. 1016\u20131022, Dec. 1973. \n\n \n\n31 DEREMACK, E.; CROWE, D. G. Optical radiation detectors. New York: John Wiley &amp; \nSons, Inc., 1984. \n\n \n\n32 ZIEL, A. D. Noise in measurements. New York: John Wiley &amp; Sons,1976. \n \n\n33 DUERINCKX, A. J.; MACOVSKI, A. Polychromatic streak artifacts in computed tomography \nimages. Journal of Computering  Assisted Tomography, v. 2, n. 4, p. 481-487, 1978. \n\n \n\n34 JOSEPH, P. M. A method for correction bone-induced artifacts of CT scanners. Journal \nComputering  Assisted Tomography, v. 2, n. 1, p. 100-108, 1978. \n\n \n\n35 IBBOTT, G. S. Radiation therapy treatment planning and the distortion of CT images. \nMedical Physics, v.7, n. 3, p. 261,  1980. \n\n \n\n36 FURUIE, S. S. Reconstrucao tomografica de imagens com ruido Poisson: estimativa \ndas proje\u00e7\u00f5es. 1990. 150p. Tese (Doutorado em Engenharia El\u00e9trica) - Universidade de S\u00e3o \nPaulo, S\u00e3o Paulo, 1990.  \n\n \n\n\n\n152 \n\n \n\n  \n\n37 PORTAL, A. L. S.. Refinamentos nos m\u00e9todos de estimacao das proje\u00e7\u00f5es para a \nreconstru\u00e7\u00e3o tomogr\u00e1fica de imagens com ruido poisson. 1991. 122p.  Disserta\u00e7\u00e3o \n(Mestrado em Engenharia El\u00e9trica) - Universidade de S\u00e3o Paulo, 1991. \n\n \n\n38 C\u00c1SSARO, F. A. M. Tomografia de dupla energia para caracteriza\u00e7\u00e3o f\u00edsico-h\u00eddrica \nde meios porosos deform\u00e1veis sob diferentes graus de hidrata\u00e7\u00e3o. 1994.  194 p. \nDisserta\u00e7\u00e3o (Mestrado em F\u00edsica) \u2013 Instituto de F\u00edsica de S\u00e3o Carlos, Universidade de S\u00e3o \nPaulo, S\u00e3o Carlos. 1994. \n\n \n\n39 BIASSUSI, M. Estudo da expans\u00e3o e contra\u00e7\u00e3o de um vertissolo atrav\u00e9s da \ntomografia computadorizada simult\u00e2nea. 1996. 91p. Disserta\u00e7\u00e3o (Mestrado em \nAgronomia) - Universidade Federal de Pelotas, Pelotas, 1996. \n\n \n\n40 GUERRA, A. C  Restaura\u00e7\u00e3o de imagens de minitom\u00f3grafo de an\u00e1lise de solos por \nt\u00e9cnicas de regulariza\u00e7\u00e3o. 1998. 125p. Disserta\u00e7\u00e3o (Mestrado em Ci\u00eancia da Computa\u00e7\u00e3o) \n- Universidade Federal de S\u00e3o Carlos, S\u00e3o Carlos, 1998. \n\n \n\n41 HOMEM, M. R. P. T\u00e9cnicas de reconhecimento de padr\u00f5es aplicadas a imagens \ntomogr\u00e1ficas adquiridas em m\u00faltiplas energias. 1998. 134 p. Disserta\u00e7\u00e3o (Mestrado em \nCi\u00eancia da Computa\u00e7\u00e3o) - Universidade Federal de S\u00e3o Carlos, S\u00e3o Carlos, 1998. \n\n \n\n42 SALINA, F. V. Reconstru\u00e7\u00e3o tomogr\u00e1fica de imagens utilizando t\u00e9cnicas POCS \nsequenciais e paralelas. 2001. 112 p. Disserta\u00e7\u00e3o (Mestrado em Ci\u00eancia da Computa\u00e7\u00e3o)  - \nUniversidade Federal de S\u00e3o Carlos, S\u00e3o Carlos, 2001. \n\n \n\n43 PEREIRA, M. F. L. Um modelo de reconstru\u00e7\u00e3o tomogr\u00e1fica 3D para amostras \nagr\u00edcolas com filtragem de Wiener em processamento paralelo. 2007. 148p. Tese \n(Doutorado em F\u00edsica Aplicada) \u2013 Instituto de F\u00edsica de S\u00e3o Carlos, Universidade de S\u00e3o \nPaulo, S\u00e3o Carlos, 2007. \n\n \n\n44 RIBEIRO, E. S. Novas propostas em filtragem de proje\u00e7\u00f5es tomogr\u00e1ficas sob ru\u00eddo \npoisson. 2010. 149p.  Disserta\u00e7\u00e3o (Mestrado em Ci\u00eancia da Computa\u00e7\u00e3o) - Universidade \nFederal de S\u00e3o Carlos, S\u00e3o Carlos, 2010. \n\n \n\n45 LAIA, M. A. M.; CRUVINEL, P. E. Evaluation of an embedded unscented Kalman filter for \nsoil tomography. In: CONFER\u00caNCIA DE SISTEMAS EMBARCADOS CR\u00cdTICOS, (CBSEC) \nUSP, S\u00e3o Carlos. Anais\u2026S\u00e3o Carlos:2011., v.1 n. 1, p. 1-6. \n\n \n\n46 LAIA, M. A. M.; CRUVINEL, P. E. Using Simulink to generate HDL code for validating an \nembedded Kalman filter. In: BRAZILIAN CONFERENCE ON CRITICAL EMBEDDED \nSYSTEMS, CBSEC, 2, 2012,Campinas. Proceedings\u2026 Canada:IEEE,2012. DOI \n10.1109/CBSEC.2012.17. \n\n \n\n47 ROJAS, R.; HASHAGEN, U. The first computers: history and architectures, New York: \nMIT Press, 2000. \n\n \n\n48 MARTINS, C. A. P. S.; ORDONEZ, E. D. M.; CORR\u00caA, J. B. T.; CARVALHO, M. B. \nComputa\u00e7\u00e3o reconfigur\u00e1vel: conceitos, tend\u00eancias e aplica\u00e7\u00f5es. Sociedade Brasileira de \nComputa\u00e7\u00e3o, v.2, n.6,  p. 339-388, 2003. \n\n \n\n\n\n153 \n\n \n\n49 VILLASENOR, J.; MANGIONE-SMITH, W. H. Configurable computing. Scientific \nAmerican, v.. 276, n. 6,p. 54-59, June 1997. \n\n \n\n50 HWANG, K.; XU, Z. Scalable parallel computing: technology, architecture, programming, \nSan Francisco: McGraw-Hill, 1998. \n\n \n\n51 LEWIS, T. G.; EL-REWINI, H. Distributed and parallel computing. Greenwich: Manning, \n1998. \n\n \n\n52 PFISTER, G. In search of clusters. 2nd ed.. New Jersey: Prentice Hall ,1998 \n \n\n53 BUYYA, R. High performance cluster computing: architectures and systems. New \nJersey: Prentice Hall, 1999. \n\n \n\n54 BUYYA, R. High performance cluster computing: programming and applications. New \nJersey: Prentice Hall, 1999. \n\n \n\n55 TANENBAUM, A. S. Distributed operating systems. New Jersey: Prentice Hall, 1995. \n \n\n56 MULLENDER, S. J. Distributed-operating systems. ACM computing surveys, v. 28, n. 1, \np. 22-33, March 1996. \n\n \n\n57 ALMASI, G. S.; GOTTLIEB, A. Highly parallel computing. 2.ed., Redwood City: \nBenjamin/Cummings, 1994. \n\n \n\n58 DECEGAMA, A. L. Parallel processing architectures and VLSI hardware.  New Jersey: \nPrentice Hall, 1989.v.1. \n\n \n\n59 WOLF, W. Modern VLSI design: a system approach. New Jersey: Prentice Hall, 1994. \n \n\n60 SANCHEZ, E.; SIPPER, M. HAENNI, J. B.; URIBE, A. P. Static and dynamic configurable \nsystems, IEEE Transactions of computers, v. 48, n. 6. p. 556-564, June 1999. \n\n \n\n61 SIPPER, M.; SANCHEZ, E. Configurable chips meld software and hardware. IEEE \nComputer, v. 32, n. 1, p. 120-121, Jan, 2000. \n\n \n\n62 TURLEY, J. Triscend E5 reconfigures microcontrollers. Microprocessor report, p. 12-13, \nNov. 16, 1998. \n\n \n\n63 BARR, M. Embedded systems glossary. Ethiopia: Neutrino Technical Library, 2007. \n \n\n64 HEATH, S. Embedded systems design: EDN series for design engineers 2nd. ed. \nOxford: Newnes,2003. p. 88\u201389. ISBN 978-0-7506-5546-0, \n\n \n\n\n\n154 \n\n \n\n  \n\n65 SKLIAROVA, I.; FERRARI, A. B. Introdu\u00e7\u00e3o \u00e0 computa\u00e7\u00e3o reconfigur\u00e1vel. Revista do \nDetua, v. 2, n. 6, p. 1-16, set., 2003. \n\n \n\n66 COMPTON, K.; HAUCK, S. Reconfigurable computing: a survey of systems and software. \nACM Computing Survey, v. 34, n. 2, p. 171-210, June 2002. \n\n \n\n67 KATO, E. R. R.; PEDRINO, E. C. Introdu\u00e7\u00e3o aos sistemas embarcados utilizando FPGAs. \nIn: BRAZILIAN CONFERENCE ON CRITICAL EMBEDDED SYSTEMS, CBSEC, 2, 2012, \nCampinas. Proceedings\u2026Canada: IEEE, 2012. v. 2, p. 42-47. \n DOI 10.1109/CBSEC.2012.17.  \n\n \n\n68  THE PROGRAMMABLE logic data book. San Jose, California: Xilinx Inc., 1994.  \n \n\n69 MEHTA, G.; KINTALI, S. Hardware description languages. Santa Barbara: University of \nCalifornia, Oct., 2009. \n\n \n\n70 SMITH, D. J. HDL chip design: a practical guide for designing, synthesizing and \nsimulating ASICs and FPGAs using VHDL or Verilog. California: Doone Publications, 1998. \n\n \n\n71 SOARES, A. B. Explora\u00e7\u00e3o do paralelismo em arquiteturas para processamento de \nimagens e v\u00eddeo. 2007. 128p. Tese (Doutorado em Computa\u00e7\u00e3o) \u2013 Universidade Federal do \nRio Grande do Sul, Porto Alegre, 2007. \n\n \n\n72 KALMAN, R.E. A new approach to linear filtering and prediction problems. Journal of \nBasic Engineering, v. 82, n.1, p. 35\u201345, 1960. \n\n \n\n73 SCHMIDT, S.F. The Kalman filter: recognition and development for aerospace applications. \nJournal of Guidance and Control, v. 4, n. 1, p. 4-7, 1981. \n\n \n\n74 O\u2019BRIEN, F. The Apollo guidance computer: architecture and operation. Berlin: Springer \nPraxis Books / Space Exploration, 2010. \n\n \n\n75 HALL, E. C. Journey to the moon: the history of the Apollo guidance computer. Reston, \nVirginia, USA: American Institute of Aeronautics and Astronautics, 1996.. p. 196. ISBN \n156347185X. \n\n \n\n76 PORAT, B. A course in digital signal processing, New York: John Wiley &amp; Sons,1997. \nISBN 0-471-14961-6. \n\n \n\n77 OPPENHEIM, A. V.; SCHAFER, R. W.; BUCK, J. R. Discrete-time signal processing. \n2nd, ed, New Jersey: Prentice Hall,1999. ISBN 0-13-754920-2. \n\n \n\n78 WOLF, W. H. Computers as components: principle of embedded computing system \ndesign. San Francisco: Morgan Kaufmann, 2001. \n\n \n\nhttp://www.elo.utfsm.cl/~ipd481/Papers%20varios/kalman1960.pdf\n\n\n155 \n\n \n\n79 INCT-SEC. Instituto Nacional de Ci\u00eancia e Tecnologia em Sistemas Embarcados Cr\u00edticos. \nDispon\u00edvel em: &lt;http://www.inct-sec.org>. Acesso em: 29 de junho de 2013.  \n\n \n\n80 CARRO, L.; WAGNER, F. R. Sistemas computacionais embarcados. Jornadas de \nAtualiza\u00e7\u00e3o em Inform\u00e1tica, n. 22, p.45-94, 2003. \n\n \n\n81 AYOUBI, R.; DUBOIS; J., MINKARA, R. FPGA Implementation of generalized maximal \nratio combining receiver diversity. World Academy of Science, Engineering and \nTechnology, v. 68, p. 1102-1107, 2010. \n\n \n\n82 CAI, J. J. Evolutionary bioinformatics with a scientific computing environment. \nDallas: Texas A&amp;M University, 2009. \n\n \n\n83 WELCH, G.; BISHOP, G.. An introduction to the Kalman filter. Chapel Hill:  University of \nNorth Carolina, 2004. \n\n \n\n84 HAYKIN, S. Kalman filtering and neural network, New York: John Wiley &amp; sons, inc.; \n2001.285p. \n\n \n\n85 JULIER, S. J.; UHLMANN, J. K. A new extension of Kalman filter to nonlinear systems. \nSymposium. Aerospace/Defense Sensing Simulation and Controls, v.1, n. 1, p. 1-12, \n1997. \n\n \n\n86 HASTINGS, W. K. Monte Carlo sampling methods using Markov chains and their \napplications, Biometrika, v.  57, n. 1, p. 97-109, 1970. \n\n \n\n87 DOUCET, A.; DE FREITAS N.; GORDON, N.J., SMC methods in practice. \nBerlin:Springer-Verlag, 2001. \n\n \n\n88 VAN DER MERWE; R., WAN, E. The square-root unscented Kalman filter for state and \nparameter-estimation. IEEE International Conference on Acoustics, Speech, and Signal \nProcessing (ICASSP), v. 6, p. 3461\u20133464, 2001. \n\n \n\n89 LAIA, M. A. M.; CRUVINEL, P. E.; LEVADA, A. L. Filtragem de proje\u00e7\u00f5es tomogr\u00e1ficas da \nci\u00eancia do solo utilizando transformada de Anscombe e Kalman. In: CONFER\u00caNCIA \nBRASILEIRA DE DIN\u00c2MICA, CONTROLE E APLICA\u00c7\u00d5ES,- DINCON\u201907,2007. S\u00e3o Jos\u00e9 do \nRio Preto. Anais... S\u00e3o Jos\u00e9 do Rio Preto: Universidade Estadual de S\u00e3o Paulo, 2007. \n\n \n\n90 LAIA, M. A. M.; CRUVINEL, P. E. Filtragem de proje\u00e7\u00f5es tomogr\u00e1ficas do solo utilizando \nKalman e Redes Neurais numa estima\u00e7\u00e3o conjunta. In: CONFER\u00caNCIA BRASILEIRA DE \nDIN\u00c2MICA, CONTROLE E APLICA\u00c7\u00d5ES, DINCON\u201908,2008, Presidente Prudente. Anais...  \nPresidente Prudente: Universidade Estadual de S\u00e3o Paulo, 2008. \n\n \n\n91 LAIA, M. A. M.; CRUVINEL, P. E. Filtragem de proje\u00e7\u00f5es tomogr\u00e1ficas utilizando Kalman \n\nDiscreto e Rede Neurais. IEEE Am\u00e9rica Latina, v. 6, n.1, p. 114-121, 2008.  \n \n\n\n\n156 \n\n \n\n  \n\n92 LAIA, M. A. M.; LEVADA, A. M; BOTEGA, L. C.; PEREIRA, M. F.; CRUVINEL, P. E. A \nnovel model for combining projection and image filtering using Kalman and discrete wavelet \ntransform in computerized tomography. IEEE  International Conference on Computational \nScience and Engineering,11\n\nth\n, v. 11, n. 7, 2008. \n\n \n\n93 LAIA, M. A. M.; CRUVINEL, P. E. Applying an improved square root unscented Kalman \nfiltering in tomographic projections of agricultural soil samples. Revista Vetor, v. 18, n. 1, p. 1-\n6, 2009. \n\n \n\n94 KAK, A. C.; SLANEY, M. Principles of computerized tomographic imaging. New York: \nIEEE Press, 1999. \n\n \n\n95 MASCARENHAS, N. D. A.; SANTOS, C. A. N.; CRUVINEL, P. E., Transmission \ntomography under poisson noise using the Anscombe transformation and Wiener filtering of \nthe projections. Nuclear Instruments And Methods In Physics Research. Section A, v. 423, \np. 265-271, 1999. \n\n \n\n96 VOLDER , J. E. The birth of CORDIC. Journal VLSI Signal Processing v. 25, n. 2, p. \n101-105, 2000. \n\n \n\n97 WALTHER, J. S. The Story of Unified CORDIC.  Journal VLSI Signal Processing v. 25,  \nn.2 p. 107-112, 2000. \n\n \n\n98 LAKSHMI, B., DHAR A. S. CORDIC architectures: a survey, Kharagpur: Hindawi \nPublishing Corporation. 2010. \n\n \n\n99 BURKARDT J. Matlab. source code. Dispon\u00edvel em : \n<http://people.sc.fsu.edu/~jburkardt/m_src/m_src.html> Acesso em: 29 de junho de 2013.  \n \n\n100 TEXAS INSTRUMENTS, TMS320C64x DSP Library Programmer's Reference, Appendix \nA.2. Dispon\u00edvel em :  &lt;http://www.ti.com/lit/ug/spru565b/spru565b.pdf> Acesso em: 12 de \njulho de 2013. \n\n \n\n101 MATHWORKS Fixed-Point Toolbox Documentation Glossary. Disponivel em: \n<http://www.mathworks.com/help/fixedpoint/ref/bp7g699.html#f6811>  Acesso em: 12 de julho \nde 2013. \n\n \n\n102 VISSIM Fixed-Point Toolbox.  Dispon\u00edvel em \n<http://www.vissim.com/products/addons/vissim/fixed-point.html> Acesso em: 12 de julho de \n2013"}]}}}