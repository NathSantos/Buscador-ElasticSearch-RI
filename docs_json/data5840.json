{"add": {"doc": {"field": [{"@name": "docid", "#text": "BR-TU.09412"}, {"@name": "filename", "#text": "14390_ERICK_WAKAMOTO_TAKARABE.pdf"}, {"@name": "filetype", "#text": "PDF"}, {"@name": "text", "#text": "Erick Wakamoto Takarabe\n\nSistemas de Controle Distribu\u00eddos em\n\nRedes de Comunica\u00e7\u00e3o\n\nS\u00e3o Paulo\nAgosto de 2009\n\n\n\nErick Wakamoto Takarabe\n\nSistemas de Controle Distribu\u00eddos em\n\nRedes de Comunica\u00e7\u00e3o\n\nDisserta\u00e7\u00e3o apresentada ao Programa de\n\nP\u00f3s-Gradua\u00e7\u00e3o em Engenharia Mec\u00e2nica da\n\nEscola Polit\u00e9cnica da Universidade de S\u00e3o\n\nPaulo para obten\u00e7\u00e3o do T\u00edtulo de Mestre\n\nem Engenharia Mec\u00e2nica.\n\n\u00c1rea de concentra\u00e7\u00e3o:\nEngenharia de Controle e Automa\u00e7\u00e3o Mec\u00e2-\nnica\n\nOrientador:\nProf. Dr. Newton Maruyama\n\nS\u00e3o Paulo\nAgosto de 2009\n\n\n\n\u00c0 minha fam\u00edlia: ber\u00e7o e raz\u00e3o de tudo.\n\n\n\nAgradecimentos\n\nPrimeiramente gostaria de agradecer aos meus pais por todo amor e carinho que foram\n\nfundamentais para chegar at\u00e9 este presente momento, principalmente nas horas dif\u00edceis\n\n(que n\u00e3o foram poucas!). E \u00e0 Aline, Seu Tada, Dona Cris, Dri, Sato, Mirianzinha (Mari-\n\nazinha), R\u00f3 e Clau por me acolherem como um membro desta linda fam\u00edlia.\n\nN\u00e3o somente aos amigos que me acompanharam nesta etapa de minha vida, mas\n\ntamb\u00e9m aos que estiveram nas anteriores, meu sincero muit\u00edssimo obrigado! Me sinto\n\nmuito afortunado em dizer que o motivo de n\u00e3o citar seus nomes \u00e9 que n\u00e3o haveria espa\u00e7o\n\nsuficiente para todos eles.\n\nPara os membros da banca de qualifica\u00e7\u00e3o, Prof. Dr. Paulo Eigi Miyagi e Prof.\n\nDr. F\u00e1bio Gagliardi Cozman, fica meu agradecimento pelas cr\u00edticas construtivas e minha\n\nadmira\u00e7\u00e3o pelas respectivas contribui\u00e7\u00f5es ao mundo da pesquisa. Sou grato tamb\u00e9m ao\n\nmeu orientador, Prof. Dr. Newton Maruyama, cujos ensinamentos foram muito al\u00e9m do\n\ntema desta pesquisa.\n\nGostaria por fim de agradecer ao apoio da FAPESP atrav\u00e9s de minha bolsa de estudos.\n\n\n\n\"O homem que aos 50 anos v\u00ea o mundo do mesmo modo que via aos 20, perdeu 30 anos\n\nde sua vida.\"(Muhammad Ali)\n\n\n\nResumo\n\nSistemas de controle distribu\u00eddos cujas malhas s\u00e3o fechadas atrav\u00e9s de uma rede de co-\nmunica\u00e7\u00e3o s\u00e3o chamados de sistemas de controle distribu\u00eddos em redes de comunica\u00e7\u00e3o\n(NCS - Networked Control System). Este tipo de arquitetura permite a divis\u00e3o do sistema\nde controle em m\u00f3dulos interconectados atrav\u00e9s da rede de comunica\u00e7\u00e3o, proporcionando\na divis\u00e3o do processamento, a redu\u00e7\u00e3o de custo e de peso, al\u00e9m de facilitar o diagn\u00f3stico\ne manuten\u00e7\u00e3o do sistema e de aumentar a sua flexibilidade e agilidade; e por isso seu\nemprego na ind\u00fastria est\u00e1 se tornando comum (e.g., fly-by-wire e drive-by-wire). Por\u00e9m,\na distribui\u00e7\u00e3o do processamento e a inser\u00e7\u00e3o de uma rede de comunica\u00e7\u00e3o aumenta a com-\nplexidade da an\u00e1lise e do projeto deste tipo de sistema. Um dos fatores que contribui para\nesse aumento da complexidade \u00e9 a presen\u00e7a de atrasos aleat\u00f3rios nos sinais de controle,\ncausados pela din\u00e2mica do sistema computacional (conjunto de hardware e software) que\nserve como plataforma para implementa\u00e7\u00e3o do sistema de controle digital.\n\nEste trabalho faz um estudo sobre este tipo de sistema sob a perspectiva destes sinais\ncom atrasos. Para isso, faz-se uso dos toolboxes para MATLAB: TrueTime e Jitterbug.\nAtrav\u00e9s destas ferramentas, mostra-se a exist\u00eancia de uma rela\u00e7\u00e3o de compromisso entre\no desempenho do controle e o desempenho do sistema computacional.\n\nAtrav\u00e9s deste estudo, \u00e9 proposto uma solu\u00e7\u00e3o de um sistema de controle do tipo NCS\npara um ROV (do ingl\u00eas Remotely Operated Vehicle), modelado atrav\u00e9s de 6 equa\u00e7\u00f5es\ndiferenciais desacopladas n\u00e3o-lineares. Este tipo de ve\u00edculo tem uma relev\u00e2ncia econ\u00f4mica\nsignificativa para o Brasil, visto que \u00e9 utilizado em opera\u00e7\u00f5es de manuten\u00e7\u00e3o e instala\u00e7\u00e3o\nde plataformas de extra\u00e7\u00e3o do petr\u00f3leo que est\u00e1 depositado em profundidades que variam\nde mil a 2 mil metros. Para este NCS proposto, s\u00e3o utilizados controladores do tipo PI\ncom estrutura feedback-feedfoward cujos par\u00e2metros de projeto s\u00e3o obtidos em fun\u00e7\u00e3o dos\natrasos inseridos pelo sistema computacional.\n\nPalavras-chave: NCS, rede de comunica\u00e7\u00e3o, sistemas de controle distribu\u00eddos, True-\nTime, Jitterbug, ROV.\n\n\n\nAbstract\n\nDistributed control systems wherein the control loops are closed through a communica-\ntion network are called Networked Control Systems (NCSs). This type of architecture\nallows the control systems division into modules interconnected through the communica-\ntion network, providing the processing division, reduction of cost and weight, and faci-\nlitates the systems diagnosis and maintenance, and increases their flexibility and agility.\nTherefore its use in industry is becoming common (eg, fly-by-wire and drive-by-wire).\nHowever, the processing distribution and the communication network insertion increase\nthe system analysis and design complexity. One of the factors that contributes to this\nincreased complexity is the presence of random time delays, caused by the dynamics of\nthe computer system (set of hardware and software) used as a platform for digital control\nsystem implementation.\n\nThis work deals with the networked control systems under these random time delays\nview. For this, it is used two MATLAB toolboxes: Jitterbug and TrueTime. With these\ntools, it is shown the existence of a relationship between the performance of control and\nperformance of computer system.\n\nWith this study, it proposed a solution of a NCS for a ROV (Vehicle Operated Remo-\ntely), modeled by 6 differential nonlinear decoupled equations. This type of vehicle has\na significant economic relevance for Brazil, as it is used in maintenance and installation\nof platforms for oil extraction deposited at depths ranging from thousand to 2 thou-\nsand meters. For this proposed NCS are adopted PI controllers with feedfoward-feedback\nstructure whose parameters design are given in terms of delay inserted by the computer\nsystem.\n\nKeywords: ROV, NCS, network, distributed control, TrueTime, Jitterbug.\n\n\n\nLista de Figuras\n\n1.1 Modelo de um NCS. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 2\n\n1.2 Sistema de controle computadorizado composto por: um sistema de con-\n\nvers\u00e3o Anal\u00f3gico-Digital (A/D); um sistema computacional (hardware e\n\nsoftware) onde \u00e9 implementado o controlador em sua forma discreta; e um\n\nsistema de convers\u00e3o Digital-Anal\u00f3gico (D/A). . . . . . . . . . . . . . . . . 3\n\n1.3 M\u00faltiplas plantas sendo controladas por m\u00faltiplos controladores em um\n\nsistema de processamento multitarefa. . . . . . . . . . . . . . . . . . . . . . 5\n\n1.4 Diagrama de tempo dos ciclos de controle. . . . . . . . . . . . . . . . . . . 6\n\n1.5 Transi\u00e7\u00e3o de estado de processos. . . . . . . . . . . . . . . . . . . . . . . . 9\n\n1.6 Estrutura de rede em camadas. . . . . . . . . . . . . . . . . . . . . . . . . 11\n\n1.7 Diagrama de tempo para dois n\u00f3s e um acesso aleat\u00f3rio \u00e0 rede, onde: o\n\nCaso 1 trata de uma situa\u00e7\u00e3o sem colis\u00e3o; o Caso 2 trata de uma situa\u00e7\u00e3o\n\ncom colis\u00e3o, onde o n\u00f3 i tem maior prioridade; e o Caso 3 trata de uma\n\nsitua\u00e7\u00e3o com colis\u00e3o e sem prioridade, onde os dois n\u00f3s retransmitem a\n\nmensagem depois de um tempo aleat\u00f3rio. . . . . . . . . . . . . . . . . . . . 12\n\n2.1 Modelo de um sistema com atraso em tempo cont\u00ednuo, onde K(s) e G(s)\n\nrepresentam respectivamente o controlador e a planta. . . . . . . . . . . . . 15\n\n2.2 Exemplo de um diagrama de Nyquist de um sistema de segunda ordem\n\ncom e sem atraso (WOLOVICH, 1994). . . . . . . . . . . . . . . . . . . . . . 16\n\n2.3 Diagrama de blocos do modelo real GR(s) da planta do sistema, composto\n\npelo erro multiplicativo ?M (s) e pelo modelo nominal GN (s). . . . . . . . . 17\n\n2.4 Ilustra\u00e7\u00e3o qualitativa do comportamento t\u00edpico de eM (?). . . . . . . . . . . 17\n\n\n\n2.5 Diagrama de Nyquist mostrando a rela\u00e7\u00e3o entre GN (j?), GR(j?) e eM (?).\n\nOs c\u00edrculos tracejados demarcam a \u00e1rea das trajet\u00f3rias poss\u00edveis da curva\n\nde GR(j?). . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 18\n\n2.6 Diagrama de blocos com um sistema em tempo cont\u00ednuo conectado aos con-\n\nversores D/A e A/D, onde {uk} e {yk} s\u00e3o seq\u00fc\u00eancias do sinal de controle\ne do sinal de sa\u00edda, respectivamente, tomados nos instantes de amostragem\n\nkh; e Clock \u00e9 sincronizador do do sistema computacional. . . . . . . . . . . 19\n\n2.7 Diagrama de tempo do modelo do sistema com atraso, onde o sinal de\n\ncontrole uk?1 atua por um per\u00edodo ?, e o sinal de controle uk atua por um\n\nper\u00edodo h ? ?. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 21\n\n2.8 Exemplo de um modelo Jitterbug de um sistema controlado por computador. 23\n\n2.9 Exemplo de um modelo de tempo e a sua correspondente cadeia de Markov. 26\n\n2.10 Biblioteca de blocos do TrueTime. . . . . . . . . . . . . . . . . . . . . . . . 28\n\n2.11 Modelo TrueTime do sistema de controle de tempo real de um sistema\n\ndin\u00e2mico. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 29\n\n2.12 Exemplo de um diagrama de escalonamento, que mostra os 3 estados das\n\ntasks (escalonamento de tasks) ou dos n\u00f3s da rede (escalonamento da rede),\n\natrav\u00e9s dos n\u00edvel de amplitude i (inativo), i+0.25 (em preemp\u00e7\u00e3o) e i+0.50\n\n(em execu\u00e7\u00e3o), com i = 1, . . . ,N, onde N \u00e9 o n\u00fameros de tasks ou de n\u00f3s\n\nda rede. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 31\n\n2.13 Diagrama de bode do sistema com ? = 0 e ? = 21ms. . . . . . . . . . . . . 33\n\n2.14 Resposta no tempo do sistema com e sem atraso ? = 21ms, com a planta\n\ncont\u00ednua (G(s)) e o controlador discreto (Kd(z)). . . . . . . . . . . . . . . 33\n\n2.15 Densidade espectral do sinal de sa\u00edda do sistema com e sem atraso ? =\n\n21ms, obtido atrav\u00e9s do Jitterbug. . . . . . . . . . . . . . . . . . . . . . . 34\n\n3.1 Compara\u00e7\u00e3o de desempenho do controle para os casos de controle cont\u00ednuo,\n\ncontrole discreto e NCS em fun\u00e7\u00e3o do per\u00edodo de amostragem adotado. . . 36\n\n4.1 Resposta do motor CC para uma entrada degrau unit\u00e1rio. . . . . . . . . . 43\n\n\n\n4.2 Diagrama de implementa\u00e7\u00e3o do controlador PID adotado, onde ?ref (s) \u00e9\n\no sinal de refer\u00eancia, u(s) \u00e9 o sinal de controle, ?(s) \u00e9 o sinal de sa\u00edda,\n\nPI(s) \u00e9 o termo proporcional e integral do controlador e D(s) e o termo\n\nderivativo do controlador. . . . . . . . . . . . . . . . . . . . . . . . . . . . 43\n\n4.3 Resposta do sistema em malha fechada dado pela Equa\u00e7\u00e3o (4.2) para uma\n\nentrada degrau. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 45\n\n4.4 Sa\u00edda ? e sinal de controle Va para o sistema de controle discreto ideal. . . 46\n\n4.5 Diagramas de Bode obtido atrav\u00e9s da fun\u00e7\u00e3o de transfer\u00eancia Gdcl(z) com\n\no h = 0.05s e alguns casos de atrasos. Observa-se tamb\u00e9m no diagrama a\n\nfreq\u00fc\u00eancia de Nyquist (metade da freq\u00fc\u00eancia de amostragem). . . . . . . . 48\n\n4.6 Modelo SIMULINK do sistema com atraso. O atraso \u00e9 representado por\n\num atraso de transporte na entrada da planta com um reconstrutor de\n\nordem zero. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 48\n\n4.7 Resultado da simula\u00e7\u00e3o com o modelo SIMULINK da Figura 4.6 para os\n\ncasos com h = 0.05s e atrasos d = 0, 0.20h e 0.60h. . . . . . . . . . . . . . 48\n\n4.8 Diagramas de Nyquist da fun\u00e7\u00e3o de malha aberta Ld(z) para 6 situa\u00e7\u00f5es\n\ndistintas. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 49\n\n4.9 Sa\u00eddas do sistema para h = 0.05s e d = 0.01s e para h = 0.026s e d = 0.03s. 50\n\n4.10 Modelo de NCS utilizado nesta se\u00e7\u00e3o. . . . . . . . . . . . . . . . . . . . . . 50\n\n4.11 Modelo TrueTime do sistema de controle do motor CC. . . . . . . . . . . . 51\n\n4.12 Ilustra\u00e7\u00e3o das grandezas analisadas neste estudo de caso e das tasks en-\n\nvolvidas no ciclo de controle. Nota-se que a task no controlador pode\n\napresentar um intervalo durante sua execu\u00e7\u00e3o devido \u00e0 preemp\u00e7\u00e3o. . . . . 53\n\n4.13 Diagramas de escalonamentos das tasks do controlador, destacando o in-\n\ntervalo em que as tasks de controle em preemp\u00e7\u00e3o s\u00e3o executadas. . . . . . 55\n\n4.14 Diagrama de escalonamento da rede, destacando o intervalo em que ocorre\n\num aumento no tr\u00e1fego da rede. . . . . . . . . . . . . . . . . . . . . . . . . 56\n\n4.15 Distribui\u00e7\u00e3o das lat\u00eancias LkS . . . . . . . . . . . . . . . . . . . . . . . . . . 57\n\n4.16 Distribui\u00e7\u00e3o das lat\u00eancias LkC . . . . . . . . . . . . . . . . . . . . . . . . . . 58\n\n\n\n4.17 Distribui\u00e7\u00e3o dos intervalos de amostragem hk. . . . . . . . . . . . . . . . . 59\n\n4.18 Sa\u00eddas do sistema para h: 0.01s, 0.02s, 0.04s, 0.06s e 0.07s, obtidas com\n\nTrueTime. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 59\n\n5.1 Modelo CAD de um ROV. . . . . . . . . . . . . . . . . . . . . . . . . . . . 62\n\n5.2 Sistema de coordenadas para ve\u00edculos marinhos, com 6 graus de liberdade\n\n(FOSSEN, 1994). . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 63\n\n5.3 Diagrama esquem\u00e1tico da arquitetura atual do sistema de controle do ROV. 66\n\n5.4 Estrutura hier\u00e1rquica do controle do ve\u00edculo. As vari\u00e1veis com \u00edndice ref\n\nse referem aos valores de refer\u00eancia. . . . . . . . . . . . . . . . . . . . . . . 67\n\n5.5 Posicionamento dos propulsores em rela\u00e7\u00e3o ao referencial m\u00f3vel (sistema de\n\ncoordenadas verde), considerando que o CG do ROV \u00e9 o ponto de intersec-\n\n\u00e7\u00e3o dos planos de simetria. As for\u00e7as axiais produzidas pelos propulsores\n\ns\u00e3o representadas pelas flechas em vermelho. Os propulsores s\u00e3o identifi-\n\ncados por n\u00fameros de 1 a 8. . . . . . . . . . . . . . . . . . . . . . . . . . . 67\n\n5.6 Diagrama esquem\u00e1tico da poss\u00edvel arquitetura de controle do tipo NCS\n\npara o VSOR. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 69\n\n6.1 Histogramas das lat\u00eancias do sensor das tasks de controle para o caso com\n\nh = 400ms. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 76\n\n6.2 Histogramas das lat\u00eancias do controlador das tasks de controle para h =\n\n400ms, para o Caso 1. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 77\n\n6.3 Histogramas dos intervalos de amostragem das tasks de controle para h =\n\n400ms, para o Caso 1. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 78\n\n6.4 Carga na CPU em fun\u00e7\u00e3o do tempo para h = {400, 200, 130}ms, para o\nCaso 1. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 79\n\n6.5 Histogramas das lat\u00eancias do sensor das tasks de controle para h = 130ms,\n\npara o Caso 2. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 81\n\n6.6 Histogramas das lat\u00eancias do controlador das tasks de controle para h =\n\n130ms, para o Caso 2. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 81\n\n\n\n6.7 Histogramas dos intervalos de amostragem das tasks de controle para h =\n\n130ms, para o Caso 2. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 82\n\n6.8 Carga na CPU em fun\u00e7\u00e3o do tempo para h = {400, 200, 130}ms, para o\nCaso 2. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 83\n\n6.9 Diagrama de escalonamento das tasks do controle central para h = 130ms,\n\npara o Caso 3. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 85\n\n6.10 Histogramas das lat\u00eancias do sensor das tasks de controle para h = 130ms,\n\npara o Caso 3. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 85\n\n6.11 Histogramas das lat\u00eancias do controlador das tasks de controle para h =\n\n130ms, para o Caso 3. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 86\n\n6.12 Histogramas dos intervalos de amostragem das tasks de controle para h =\n\n130ms, para o Caso 3. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 86\n\n6.13 Carga na CPU em fun\u00e7\u00e3o do tempo para h = {400, 200, 130}ms, para o\nCaso 3. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 87\n\n6.14 Diagrama de escalonamento das tasks do controle central para h = 130ms,\n\npara o Caso 4. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 88\n\n6.15 Histogramas das lat\u00eancias do sensor das tasks de controle para h = 130ms,\n\npara o Caso 4. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 89\n\n6.16 Histogramas das lat\u00eancias do controlador das tasks de controle para h =\n\n130ms, para o Caso 4. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 89\n\n6.17 Carga na CPU em fun\u00e7\u00e3o do tempo para h = {400, 200, 130}ms, para o\nCaso 4. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 90\n\n6.18 Histogramas dos intervalos de amostragem das tasks de controle para h =\n\n130ms, para o Caso 4. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 91\n\n6.19 Custo J em fun\u00e7\u00e3o de ?i, para os Casos {1, 2, 3, 4}, considerando ?ni =\n1rad/s, o que corresponde a h = 400ms. . . . . . . . . . . . . . . . . . . . 93\n\n6.20 Custo J em fun\u00e7\u00e3o de ?i, para os Casos {1, 2, 3, 4}, considerando ?ni =\n2rad/s, o que corresponde a h = 200ms. . . . . . . . . . . . . . . . . . . . 93\n\n\n\n6.21 Custo J em fun\u00e7\u00e3o de ?i, para os Casos {1, 2, 3, 4}, considerando ?ni =\n3rad/s, o que corresponde a h = 130ms. . . . . . . . . . . . . . . . . . . . 94\n\n6.22 Resposta do sistema no tempo nos GLs surge, sway, heave e yaw conside-\n\nrando wn1 = wn2 = wn3 = wn6 = 3[rad/s] para o Caso 4. . . . . . . . . . . 95\n\n6.23 Resposta do sistema no GL surge para (?n1,?1) = {(1, 0.7), (2, 1.2), (3, 1.7)}\npara o Caso 4. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 96\n\n6.24 Modelo do VSOR em realidade virtual. . . . . . . . . . . . . . . . . . . . . 96\n\n6.25 Deslocamento no plano XY do ve\u00edculo para (?n1,?1) = (1, 0.7), (?n2,?2) =\n\n(1, 0.8), (?n3,?3) = (1, 0.8) e (?n6,?6) = (1, 0.9), para o Caso 1 e para o\n\nCaso 4. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 97\n\n6.26 Deslocamento no plano XY do ve\u00edculo para (?n1,?1) = (2, 1.2), (?n2,?2) =\n\n(2, 1.0), (?n3,?3) = (2, 0.8) e (?n6,?6) = (2, 0.8), para o Caso 1 e para o\n\nCaso 4. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 97\n\n6.27 Deslocamento no plano XY do ve\u00edculo para (?n1,?1) = (3, 1.7), (?n2,?2) =\n\n(3, 1.3), (?n3,?3) = (2, 1.0) e (?n6,?6) = (2, 0.8), para o Caso 1 e para o\n\nCaso 4. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 98\n\nA.1 Diagrama do sistema em malha fechada e em tempo cont\u00ednuo. . . . . . . . 102\n\n\n\nLista de Tabelas\n\n3.1 Par\u00e2metros das redes de controle. . . . . . . . . . . . . . . . . . . . . . . . 40\n\n4.1 Coeficientes do controlador PID em tempo discreto, dados em fun\u00e7\u00e3o do\n\nm\u00e9todo de aproxima\u00e7\u00e3o. . . . . . . . . . . . . . . . . . . . . . . . . . . . . 45\n\n4.2 Caracter\u00edsticas das tasks do sistema. . . . . . . . . . . . . . . . . . . . . . 52\n\n4.3 Crit\u00e9rio ITAE aplicados aos resultados obtidos atrav\u00e9s do TrueTime. . . . 54\n\n4.4 Resultados das simula\u00e7\u00f5es com o Jitterbug para o caso estudado, com h:\n\n0.01s, 0.02s, 0.04s, 0.06s e 0.07s. . . . . . . . . . . . . . . . . . . . . . . . 61\n\n5.1 Nota\u00e7\u00f5es definidas pela SNAME (The Society of Naval Architects and Ma-\n\nrine Engineers) utilizadas para ve\u00edculos marinhos. . . . . . . . . . . . . . . 64\n\n5.2 Sistema sensorial do ROV (AVILA; MARUYAMA; ADAMOWSKI, 2008). . . . . 66\n\n6.1 M\u00e9dias e desvios padr\u00e3o dos intervalos de amostragem das tasks de controle\n\npara h = 130ms, para o Caso 2. . . . . . . . . . . . . . . . . . . . . . . . . 82\n\n6.2 M\u00e9dias e desvios padr\u00e3o da carga na CPU, para h = {400, 200, 130}ms,\npara o Caso 3. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 84\n\nA.1 Dados do VSOR referentes aos GLs (AVILA, 2008). . . . . . . . . . . . . . 109\n\n\n\nLista de Abreviaturas\n\nROV Remotely Operated Underwater Vehicle\n\nNCS Networked Control System\n\nA/D Anal\u00f3gico-Digital\n\nD/A Digital-Anal\u00f3gico\n\nLQG/LTR Linear Quadratic Gaussian / Loop Transfer Recovery\n\nCPU Central Processing Unit\n\nSTR Sistema de Tempo Real\n\nRTOS Real-Time Operating System\n\nFP Fixed Priority\n\nRM Rate Monotonic\n\nEDF Earliest Deadline First\n\nFBW Fly by Wire\n\nDBW Drive by Wire\n\nMAC Media Access Cotnrol\n\nCSMA/CD Carrier Sense Multiple Access with Collision Detection\n\nCSMA/AMP Carrier Sense Multiple Access with Arbitration on Message Priority\n\nFDMA Frequency Division Multiple Access\n\nTDMA Time Division Multiple Access\n\nWLAN Wireless Local Area Network\n\n\n\nCSMA/CA Carrier Sense Multiple Access with Collision Avoidance\n\nZOH Zero-Order-Hold\n\nMJLS Markov Jump Linear Systems\n\nMSS Mean Square Stability\n\nWCET Worst Case Execution Time\n\nCAN Controller Area Network\n\nFIFO First in, First out\n\nVSOR Ve\u00edculo Submarino Operado Remotamente\n\nGL Grau de Liberdade\n\n\n\nLista de S\u00edmbolos\n\nOs seguintes s\u00edmbolos ser\u00e3o utilizados:\n\ns\u00edmbolo descri\u00e7\u00e3o\n\nh Per\u00edodo de amostragem nominal\n\nhk Intervalo de amostragem\n\nLkio Lat\u00eancia de entrada-sa\u00edda\n\nLks Lat\u00eancia de amostragem\n\nL Transformada de Laplace\nH(t) Fun\u00e7\u00e3o de Heaviside\n\nL(s) Fun\u00e7\u00e3o de malha aberta\n\nS(s) Fun\u00e7\u00e3o de sensibilidade\n\n?i(A) Autovalores de A\n\nJ Custo total do sistema obtido atrav\u00e9s do Jitterbug\n\nP? (k) Probabilidade de um atraso de k? segundos\n\nP(k?) Covari\u00e2ncia do estado no instante k?\n\n?y(?) Densidade espectral de uma sa\u00edda y\n\nru(k) Fun\u00e7\u00e3o de covari\u00e2ncia de y\n\nLkS Lat\u00eancia do sensor\n\nLkC Lat\u00eancia do controlador\n\n?i For\u00e7a/torque correspondente ao GL i\n\nmi In\u00e9rcia/massa virtual correspondente ao GL i\n\ndLi Coeficiente de arrasto linear correspondente ao GL i\n\ndQi Coeficiente de arrasto quadr\u00e1tico correspondente ao GL i\n\nbi Modelo de dist\u00farbio correspondente ao GL i\n\n? Vetor de posic\u00e3o/orienta\u00e7\u00e3o do ve\u00edculo no referencial inercial\n\n? Vetor de velocidades do ve\u00edculo no referencial m\u00f3vel\n\n?GL Vetor de for\u00e7as/torques no ve\u00edculo no referencial m\u00f3vel\n\n\n\n\n\nConte\u00fado\n\n1 Introdu\u00e7\u00e3o 1\n\n1.1 Contextualiza\u00e7\u00e3o: NCS . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 2\n\n1.2 Sistema de tempo real (STR) . . . . . . . . . . . . . . . . . . . . . . . . . 7\n\n1.3 Redes de comunica\u00e7\u00e3o . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 10\n\n1.4 Objetivos e apresenta\u00e7\u00e3o do trabalho . . . . . . . . . . . . . . . . . . . . . 13\n\n2 M\u00e9todos de An\u00e1lise 15\n\n2.1 M\u00e9todo com o Modelo do Sistema com Atraso . . . . . . . . . . . . . . . . 19\n\n2.2 M\u00e9todo com os Toolboxes Jitterbug e TrueTime . . . . . . . . . . . . . . . 22\n\n2.2.1 Jitterbug . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 22\n\n2.2.2 TrueTime . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 28\n\n2.3 Exemplo Introdut\u00f3rio . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 32\n\n2.4 Conclus\u00e3o . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 34\n\n3 Redes de Comunica\u00e7\u00e3o para Sistemas de Controle 35\n\n3.1 Candidatas \u00e0 rede de controle . . . . . . . . . . . . . . . . . . . . . . . . . 37\n\n3.1.1 Ethernet . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 38\n\n3.1.2 ControlNet . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 38\n\n3.1.3 DeviceNet (CAN) . . . . . . . . . . . . . . . . . . . . . . . . . . . . 39\n\n3.2 Compara\u00e7\u00e3o entre as Candidatas . . . . . . . . . . . . . . . . . . . . . . . 40\n\n3.3 Conclus\u00e3o . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 40\n\n\n\n4 Estudo de Caso 42\n\n4.1 O Sistema . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 43\n\n4.2 An\u00e1lise com Modelo do Sistema com Atraso . . . . . . . . . . . . . . . . . 46\n\n4.3 Simula\u00e7\u00e3o com o TrueTime . . . . . . . . . . . . . . . . . . . . . . . . . . 50\n\n4.4 An\u00e1lise com o Jitterbug . . . . . . . . . . . . . . . . . . . . . . . . . . . . 60\n\n4.5 Conclus\u00e3o . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 61\n\n5 O ROV 62\n\n5.1 Modelo do VSOR . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 63\n\n5.2 Arquitetura de Controle . . . . . . . . . . . . . . . . . . . . . . . . . . . . 65\n\n5.3 Estrat\u00e9gia de Controle . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 70\n\n5.4 Conclus\u00e3o . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 71\n\n6 Resultados 73\n\n6.1 An\u00e1lise com o TrueTime . . . . . . . . . . . . . . . . . . . . . . . . . . . . 74\n\n6.1.1 Caso 1 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 75\n\n6.1.2 Caso 2 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 80\n\n6.1.3 Caso 3 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 84\n\n6.1.4 Caso 4 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 87\n\n6.2 An\u00e1lise com o Jitterbug . . . . . . . . . . . . . . . . . . . . . . . . . . . . 92\n\n6.3 Simula\u00e7\u00f5es com o Modelo do ROV . . . . . . . . . . . . . . . . . . . . . . 94\n\n6.4 Conclus\u00f5es . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 98\n\n7 Conclus\u00f5es 100\n\n7.1 Sugest\u00f5es para Trabalhos Futuros . . . . . . . . . . . . . . . . . . . . . . . 101\n\nAnexo A -- Robustez de Sistemas SISO 102\n\n\n\nRefer\u00eancias 105\n\nAp\u00eandice A -- Par\u00e2metros do VSOR 109\n\n\n\n1\n\n1 Introdu\u00e7\u00e3o\n\nSistemas de controle distribu\u00eddo em redes de comunica\u00e7\u00e3o, ou conhecidos tamb\u00e9m como\n\nNetworked Control Systems (NCSs), est\u00e3o atualmente em evid\u00eancia, visto que proporcio-\n\nnam aos sistemas de controle caracter\u00edsticas como distribui\u00e7\u00e3o do processamento, redu\u00e7\u00e3o\n\nde custo e de peso, al\u00e9m de facilitar o diagn\u00f3stico e manuten\u00e7\u00e3o do sistema e de aumen-\n\ntar a sua flexibilidade e agilidade (com rela\u00e7\u00e3o a poss\u00edveis adapta\u00e7\u00f5es e modifica\u00e7\u00f5es)\n\n(WALSH et al., 2002). Estas caracter\u00edsticas se tornam mais importantes \u00e0 medida que a\n\ncomplexidade dos sistemas de controle aumenta.\n\nUm exemplo de um sistema de controle complexo \u00e9 um ROV: ve\u00edculo submerg\u00edvel\n\nn\u00e3o-tripulado ligado a um navio na superf\u00edcie atrav\u00e9s de um cord\u00e3o umbilical tanto para\n\nalimenta\u00e7\u00e3o (energia) quanto para transmiss\u00e3o de dados. Fatores que contribuem para o\n\naumento desta complexidade s\u00e3o as suas restri\u00e7\u00f5es f\u00edsicas e operacionais. Devido a estas\n\nrestri\u00e7\u00f5es, o controle deste tipo de ve\u00edculo \u00e9 realizado atrav\u00e9s de sistemas embarcados1 de\n\nforma a minimizar o espa\u00e7o ocupado, o peso e o consumo de energia.\n\nNeste trabalho ser\u00e1 estudado NCS com o intuito de propor solu\u00e7\u00f5es deste tipo para\n\no controle de um ROV. Para isso, o cap\u00edtulo inicia com uma contextualiza\u00e7\u00e3o de NCSs\n\nna Se\u00e7\u00e3o 1.1, apresentando seus componentes, seu hist\u00f3rico e os problemas envolvidos\n\ndo ponto de vista de controle. As Se\u00e7\u00f5es 1.2 e 1.3 apresentam a vis\u00e3o geral sobre dois\n\nimportantes componentes do NCS: o sistema operacional de tempo real e a rede de co-\n\nmunica\u00e7\u00e3o.\n\n1Um sistema embarcado \u00e9 um sistema computacional dedicado projetado para uma ou algumas fun\u00e7\u00f5es\nespec\u00edficas, geralmente em real-time (CATSOULIS, 2005).\n\n\n\n1.1 Contextualiza\u00e7\u00e3o: NCS 2\n\n1.1 Contextualiza\u00e7\u00e3o: NCS\n\nSistemas de controle distribu\u00eddo cuja malha \u00e9 fechada atrav\u00e9s de uma rede de comunica\u00e7\u00e3o\n\ns\u00e3o chamados de NCSs, como visto na Figura 1.1. Este tipo de sistema apresenta uma\n\ns\u00e9rie de vantagens j\u00e1 citadas anteriormente. Por\u00e9m, a distribui\u00e7\u00e3o do processamento e\n\na inser\u00e7\u00e3o de uma rede de comunica\u00e7\u00e3o aumentam a complexidade da an\u00e1lise e do seu\n\nprojeto. Al\u00e9m de envolver todas as dificuldades encontradas em uma implementa\u00e7\u00e3o de\n\ncontrole discreto (e.g., aliasing; problemas de aproxima\u00e7\u00f5es; imprecis\u00f5es num\u00e9ricas), h\u00e1\n\ntamb\u00e9m o indeterminismo temporal (e.g. atrasos nos sinais) causados pela din\u00e2mica do\n\nsistema computacional2; al\u00e9m da possibilidade de perdas de dados, especialmente durante\n\na transmiss\u00e3o de mensagens pela rede de comunica\u00e7\u00e3o.\n\n...\n\n...\n\nPlantaPlanta\n\nControladorControlador\n\nAtuadorAtuador SensorSensor\n\nRede de comunica\u00e7\u00e3o\n\nFigura 1.1: Modelo de um NCS.\n\nO hist\u00f3rico de sistemas de controle distribu\u00eddos tem in\u00edcio em meados dos anos 70,\n\nquando sistemas de controle computadorizado3 (Figura 1.2) foram divididos em m\u00f3dulos\n\nde controle conectados entre si. Por\u00e9m, estes m\u00f3dulos eram pouco dependentes uns dos\n\noutros, sendo as tarefas relativas ao controle realizadas individualmente em cada m\u00f3dulo,\n\nonde apenas alguns sinais de monitoramento eram compartilhados.\n\nCom o desenvolvimento e a populariza\u00e7\u00e3o das redes de comunica\u00e7\u00e3o como a Ethernet,\n\ne redes de car\u00e1ter industrial como Fieldbus, CAN-Bus, DeviceNet. etc., al\u00e9m das redes\n\nwireless como Bluetooth e ZigBee, foi poss\u00edvel a descentraliza\u00e7\u00e3o dos sensores, processa-\n\ndores e, conseq\u00fcentemente, o surgimento dos NCSs. Tais sistemas de controle possuem\n\n2Neste trabalho, sistema computacional se refere ao conjunto de software e hardware sobre o qual o\nsistema de controle \u00e9 implantado.\n\n3Sistema de controle computadorizado \u00e9 composto basicamente por: um sistema de convers\u00e3o\nAnal\u00f3gico-Digital (A/D); um sistema computacional onde \u00e9 implementado o controlador em sua forma\ndiscreta; e um sistema de convers\u00e3o Digital-Anal\u00f3gico (D/A).\n\n\n\n1.1 Contextualiza\u00e7\u00e3o: NCS 3\n\nPlanta\n\nControlador\n\nSistema de controle computadorizado\n\nD/A A/D\n\nk ? 1\n\nk ? 1\nk ? 1\n\nk ? 1 k\n\nk\nk\n\nk k + 1\n\nk + 1\nk + 1\n\nk + 1\nt\n\nt\nt\n\nt\n\nu\n\nu y\n\ny\n\nFigura 1.2: Sistema de controle computadorizado composto por: um sistema de\nconvers\u00e3o Anal\u00f3gico-Digital (A/D); um sistema computacional (hardware e software)\nonde \u00e9 implementado o controlador em sua forma discreta; e um sistema de convers\u00e3o\n\nDigital-Anal\u00f3gico (D/A).\n\nas seguintes caracter\u00edsticas:\n\n\u2022 processamento distribu\u00eddo,\n\n\u2022 sensores distribu\u00eddos,\n\n\u2022 atuadores distribu\u00eddos,\n\n\u2022 redes de comunica\u00e7\u00e3o,\n\n\u2022 sistemas operacionais.\n\nAtualmente, para a maior parte da comunidade de controle, o ciclo de controle (com-\n\nposto basicamente pela amostragem do sinal de sa\u00edda, c\u00e1lculo do sinal de controle e\n\natua\u00e7\u00e3o sobre a planta) \u00e9 realizado instantaneamente e nos instantes de amostragem\n\nkh. Entretanto, esta simplifica\u00e7\u00e3o pode n\u00e3o caracterizar bem a realidade do sistema de\n\ncontrole computadorizado, pois \u00e9 necess\u00e1rio um certo tempo para que este ciclo seja execu-\n\ntado. E este tempo pode ainda variar de acordo com os atrasos introduzidos pelo sistema\n\ncomputacional. O trabalho de Chow e Tipsuwan (2003) mostra experimentos onde os\n\natrasos deterioram o desempenho do sistema de controle computadorizado, conduzindo o\n\nsistema para a regi\u00e3o de instabilidade.\n\nPortanto, novas abordagens s\u00e3o necess\u00e1rias para fazer a an\u00e1lise e o projeto de NCSs.\n\nUma delas pode ser observada em Cervin (2003), onde \u00e9 apresentada a metodologia de\n\n\n\n1.1 Contextualiza\u00e7\u00e3o: NCS 4\n\nco-design, na qual o projeto do sistema computacional e do sistema de controle s\u00e3o tra-\n\ntados em conjunto. Este m\u00e9todo vem apresentando bons resultados no que diz respeito \u00e0\n\nmelhora do desempenho de NCS, por\u00e9m, sua implementa\u00e7\u00e3o n\u00e3o \u00e9 trivial, visto que exige\n\nsolu\u00e7\u00f5es no n\u00edvel do kernel do sistema operacional.\n\nDentro do contexto cl\u00e1ssico da teoria de controle, o objetivo principal do projeto\n\n\u00e9 obter um controlador K para gerar o esfor\u00e7o de controle u(t) de forma a fazer com\n\nque o sistema din\u00e2mico tenha um comportamento desejado. Numerosas t\u00e9cnicas de-\n\nsenvolvidas nas \u00faltimas d\u00e9cadas podem ser utilizadas para este fim, como por exemplo:\n\nLQG/LTR (CRUZ, 1996), controle preditivo (CLARKE; MOHTADI; TUFFS, 1987), H? (POS-\n\nTLETHWAITE, 1996), etc. Em qualquer uma dessas t\u00e9cnicas, obt\u00e9m-se o controlador K\n\ndescrito atrav\u00e9s de uma equa\u00e7\u00e3o diferencial ou ainda atrav\u00e9s de um sistema de equa\u00e7\u00f5es\n\ndiferenciais descrevendo um espa\u00e7o de estados (eventualmente controladores se reduzem\n\na constantes).\n\nPara obter um sistema de controle computadorizado \u00e9 necess\u00e1rio transformar as equa-\n\n\u00e7\u00f5es diferenciais do controlador K em equa\u00e7\u00f5es de diferen\u00e7a. Para isto, utiliza-se a teoria\n\ncl\u00e1ssica de controle de tempo discreto: a Transformada Z (\u00c5STR\u00f6M; WITTENMARK, 1997).\n\nUma descri\u00e7\u00e3o do controlador em espa\u00e7o de estados em tempo discreto \u00e9 representada\n\npor\n\nxk+1 = ?xk + ?ek, (1.1)\n\nuk = ?Kxk, (1.2)\n\nonde xk \u00e9 o vetor de estados do controlador; e(k) \u00e9 o vetor de erro do sistema; e u(k)\n\n\u00e9 o vetor do esfor\u00e7o de controle, todos tomados no instante kh com k = 0, 1, 2, . . . ,n.\n\nPortanto para o correto funcionamento do sistema de controle computadorizado, todos os\n\nsub-sistemas devem cumprir a meta estabelecida pelo per\u00edodo de amostragem nominal h,\n\nou seja, a cada per\u00edodo h devem ser realizados uma convers\u00e3o A/D; um c\u00e1lculo do esfor\u00e7o\n\nde controle u(k); e uma convers\u00e3o D/A.\n\nInicialmente esta meta n\u00e3o gerava tantos problemas, visto que os sistemas de con-\n\ntrole possu\u00edam um car\u00e1ter monol\u00edtico, com hardware e software implementados de forma\n\ncustomizada. Posteriormente, a possibilidade de miniaturiza\u00e7\u00e3o de componentes levou ao\n\naparecimento de microcontroladores de baixo custo e com mem\u00f3ria suficiente para rodar\n\num sistema operacional multitarefas (multitasking) onde os recursos computacionais s\u00e3o\n\ncompartilhados entre as tarefas (tasks) em execu\u00e7\u00e3o (vide Figura 1.3). A partir de ent\u00e3o\n\n\n\n1.1 Contextualiza\u00e7\u00e3o: NCS 5\n\nhouve a possibilidade da implementa\u00e7\u00e3o de v\u00e1rias malhas de controle simult\u00e2neas, gra-\n\n\u00e7as a um gerenciamento dos recursos computacionais limitados (atrav\u00e9s de algoritmos de\n\nescalonamento, por exemplo) de uma maneira mais eficiente.\n\nA despeito dessa mudan\u00e7a, a teoria de controle discreto continua sendo utilizada da\n\nmesma forma, e os usu\u00e1rios s\u00e3o obrigados a tentar fazer o software de maneira a cumprir a\n\nmeta para cada controlador, aumentando consideravelmente a sua complexidade. Quando\n\nse aumenta o compartilhamento de recursos computacionais, aumenta-se a probabilidade\n\nde indeterminismo temporal.\n\nNota-se ent\u00e3o que v\u00e1rios fatores podem influenciar no desempenho do sistema de\n\ncontrole multitarefas, como o poder de processamento e a carga da CPU, o per\u00edodo de\n\namostragem nominal requerido para cada controlador, o algoritmo de escalonamento de\n\nprocessos, etc. Em geral, se os requisitos n\u00e3o s\u00e3o cumpridos, considera-se que os recursos\n\ncomputacionais devem ser aumentados.\n\nPlantaControlador D/A\n\nA/D\n11\n\n22\n33\n\nnn\n\nSistema multitarefa M\u00faltiplas plantas\n\nFigura 1.3: M\u00faltiplas plantas sendo controladas por m\u00faltiplos controladores em um\nsistema de processamento multitarefa.\n\nO intervalo entre a leitura das vari\u00e1veis de entrada e a atua\u00e7\u00e3o do esfor\u00e7o de controle\n\n\u00e9 crucial para o desempenho do controle. As varia\u00e7\u00f5es do tempo de execu\u00e7\u00e3o do ciclo de\n\ncontrole causadas pela din\u00e2mica do sistema computacional podem levar a deteriora\u00e7\u00e3o\n\nsubstancial do desempenho do sistema de controle, como visto nos trabalhos de Nils-\n\nson (1998), Cervin et al. (2003), Cervin (2003), Lincoln (2003), \u00c5rz\u00e8n e Cervin (2005),\n\nHenriksson et al. (2006).\n\nOs efeitos do indeterminismo temporal (exemplificado na Figura 1.4) no desempenho\n\ndo sistema de controle \u00e9 de dif\u00edcil avalia\u00e7\u00e3o. O tempo entre o in\u00edcio e o fim do ciclo de\n\ncontrole pode ser modelado como um atraso na entrada do processo. O tempo entre o\n\ninstante de amostragem k e o in\u00edcio do ciclo de controle tamb\u00e9m tem um efeito negativo\n\nno desempenho do sistema de controle que \u00e9 mais acentuado em sistemas com freq\u00fc\u00eancia\n\nde amostragem menor e sistemas com menor margem de fase (HENRIKSSON, 2006). Nesse\n\n\n\n1.1 Contextualiza\u00e7\u00e3o: NCS 6\n\n(k ? 1)h kh (k + 1)h t\n\nInstante de amostragem\n\nIn\u00edcio do ciclo de controle\n\nFim do ciclo de controle\n\nCiclo de controle em execu\u00e7\u00e3o\n\nFigura 1.4: Diagrama de tempo dos ciclos de controle.\n\ncaso, mesmo pequenas varia\u00e7\u00f5es no intervalo de amostragem podem causar instabilidade.\n\nUma an\u00e1lise dos efeitos de atrasos aleat\u00f3rios e intervalos de amostragens em controle\n\n\u00f3timo foi apresentada por Davidson (1973).\n\nE quando se trata de NCSs, deve-se considerar tamb\u00e9m o indeterminismo causado por\n\natrasos vari\u00e1veis e poss\u00edveis perdas de dados durante a transmiss\u00e3o via rede, que dependem\n\nbasicamente do tipo de protocolo de comunica\u00e7\u00e3o e das condi\u00e7\u00f5es do tr\u00e1fego presente\n\nna rede. Dentro deste contexto, a comunidade de sistemas de controle vem abordando\n\nestes problemas, como nos trabalhos de Siljak (1991), Brockett (1995), Ooi et al. (1997),\n\nNilsson (1998), Wong e Brockett (1999). Tais trabalhos modelam as din\u00e2micas dos canais\n\nde comunica\u00e7\u00e3o ou digitaliza\u00e7\u00e3o atrav\u00e9s de modelos determin\u00edsticos ou estoc\u00e1sticos.\n\nNos trabalhos de Montestruque e Antsaklis (2005a, 2005b, 2006) s\u00e3o abordados NCSs\n\nutilizando modelos expl\u00edcitos. Nesta abordagem, \u00e9 utilizado um observador de estados\n\ncom o objetivo de reduzir o volume de informa\u00e7\u00f5es no canal de comunica\u00e7\u00e3o. O sistema\n\nde controle utiliza as estimativas provenientes do observador enquanto n\u00e3o recebe dados\n\natrav\u00e9s da rede. Condi\u00e7\u00f5es de estabilidade do sistema s\u00e3o derivadas considerando diferen-\n\ntes cen\u00e1rios como compensa\u00e7\u00e3o de atraso, intervalos de atualiza\u00e7\u00e3o constantes e vari\u00e1veis,\n\nplantas n\u00e3o-lineares, erros de quantiza\u00e7\u00e3o, etc. A avalia\u00e7\u00e3o de desempenho \u00e9 realizada\n\nutilizando normas modificadas H2 e a teoria de lifting (YAMAMOTO; KHARGONEKAR,\n\n1996), onde o sistema em tempo discreto \u00e9 analisado como se fosse um sistema em tempo\n\ncont\u00ednuo.\n\nPara an\u00e1lise e projeto de NCSs, est\u00e3o em desenvolvimento no Department of Auto-\n\nmatic Control of Lund University dois toolboxes para MATLAB:\n\n\u2022 Jitterburg (CERVIN; LINCOLN, 2006): torna poss\u00edvel a an\u00e1lise estat\u00edstica do impacto\nde lat\u00eancias, jitters, amostras perdidas, computa\u00e7\u00f5es abortadas, etc. sobre o desem-\n\npenho do sistema de controle,\n\n\n\n1.2 Sistema de tempo real (STR) 7\n\n\u2022 TrueTime (ANDERSSON; HENRIKSSON; CERVIN, 2007): simula o comportamento\nde um sistema operacional de tempo real com redes de comunica\u00e7\u00e3o, utilizando\n\nMATLAB / SIMULINK.\n\n1.2 Sistema de tempo real (STR)\n\nUma defini\u00e7\u00e3o de STR \u00e9 dada por Gambier (2004):\n\n\"STR \u00e9 um sistema computacional cujo correto funcionamento n\u00e3o depende\n\nsomente do resultado l\u00f3gico da computa\u00e7\u00e3o, mas tamb\u00e9m do tempo em que\n\nos resultados s\u00e3o produzidos\".\n\nOu seja, o sistema deve entregar o resultado correto dentro de um prazo espec\u00edfico, po-\n\ndendo ser de alguns milisegundos a at\u00e9 segundos. Portanto conclui-se que um sistema de\n\ncontrole computadorizado (inclusive um NCS) tamb\u00e9m \u00e9 um STR.\n\nPara cumprir a sua meta, o sistema deve ser capaz alocar os seus recursos computacio-\n\nnais de forma que seu desempenho seja maximizado. Esta aloca\u00e7\u00e3o de recursos \u00e9 realizada\n\npelo Sistema Operacional de Tempo Real (RTOS -Real-Time Operating System), atrav\u00e9s\n\nde uma opera\u00e7\u00e3o denominada escalonamento de processos (FARINES; PRAGA; OLIVEIRA,\n\n2000).\n\nPara um STR, mais importante que a rapidez de c\u00e1lculo \u00e9 o conceito de previsibilidade.\n\nA previsibilidade \u00e9 o requisito b\u00e1sico no desenvolvimento de um STR. Um STR \u00e9 dito\n\nprevis\u00edvel quando, independentemente de varia\u00e7\u00f5es que ocorrem em n\u00edvel de hardware\n\ne software, seu comportamento pode ser antecipado antes de sua execu\u00e7\u00e3o. A garantia\n\nde previsibilidade envolve an\u00e1lises complexas, visto que depende de conhecimentos da\n\ncarga computacional, da probabilidade de ocorr\u00eancia de falhas (e.g., perda de dados),\n\ndos tempos de computa\u00e7\u00e3o4, do hardware envolvido, etc., que em geral s\u00e3o de car\u00e1ter\n\nn\u00e3o-determin\u00edsticos. Alguns autores analisam a previsibilidade de STR do ponto de vista\n\nestoc\u00e1stico.\n\nOs STRs podem ser classificados em dois tipos, do ponto de vista da seguran\u00e7a (sa-\n\nfety):\n\n4Tempo de computa\u00e7\u00e3o (WCET - Worst Case Execution Time) \u00e9 o tempo gasto, no pior caso, na\nexecu\u00e7\u00e3o de c\u00f3digos da aplica\u00e7\u00e3o.\n\n\n\n1.2 Sistema de tempo real (STR) 8\n\n\u2022 Soft real-time ou sistemas n\u00e3o-cr\u00edticos: quando as conseq\u00fc\u00eancias de uma falha devido\n\u00e0 perda de um deadline n\u00e3o \u00e9 cr\u00edtico para o funcionamento do sistema (e.g., perda\n\nde um frame durante a execu\u00e7\u00e3o de um v\u00eddeo);\n\n\u2022 Hard real-time ou sistemas cr\u00edticos: quando as conseq\u00fc\u00eancias de uma falha devido\n\u00e0 perda de um deadline \u00e9 cr\u00edtico para o funcionamento do sistema (e.g., sistemas de\n\ncontrole de v\u00f4o).\n\nUm outro conceito importante em rela\u00e7\u00e3o ao STR \u00e9 o conceito de processo (tamb\u00e9m\n\nchamado de task ). Processo pode ser definido como um programa em execu\u00e7\u00e3o (DEITEL;\n\nDEITEL; CHOFFNES, 2005). Como dito anteriormente, o RTOS deve assegurar que cada\n\nprocesso receba uma quantidade suficiente de tempo de processamento. Por\u00e9m, em qual-\n\nquer sistema, o n\u00famero de processos verdadeiramente executados em concorr\u00eancia (em\n\nparalelo) \u00e9 obrigatoriamente igual ao n\u00famero de processadores em um sistema. Portanto,\n\na qualquer dado instante, alguns processos podem ser executados, outros n\u00e3o. Durante o\n\nseu tempo de vida um processo passa por uma s\u00e9rie de estados distintos, que de forma\n\nsimplificada pode ser resumido em tr\u00eas estados:\n\n\u2022 estado de execu\u00e7\u00e3o, quando o processo \u00e9 executado em um processador;\n\n\u2022 estado de pronto, quando o processo poderia ser executado se houvesse um proces-\nsador dispon\u00edvel;\n\n\u2022 estado bloqueado, quando o processo est\u00e1 aguardando a ocorr\u00eancia de um evento\n(como a conclus\u00e3o de entrada/sa\u00edda, por exemplo) para prosseguir sua execu\u00e7\u00e3o.\n\nO RTOS mant\u00e9m uma lista de prontos e uma lista de bloqueados. A transi\u00e7\u00e3o de um\n\nprocesso de uma lista para outra \u00e9 representada na Figura 1.5. Quando um usu\u00e1rio executa\n\num programa, processos s\u00e3o criados e inseridos na lista de prontos. A lista de prontos \u00e9\n\norganizada por prioridades, de modo que o pr\u00f3ximo processo a receber o processador ser\u00e1\n\no primeiro da lista (o processo de maior prioridade). Quando o processo chega ao topo\n\nda lista e h\u00e1 processador dispon\u00edvel, aquele processo \u00e9 designado ao processador. Esta\n\ntransi\u00e7\u00e3o \u00e9 chamada de despacho do processo. Para evitar que qualquer um dos processos\n\nmonopolize o sistema, o sistema operacional estabelece um rel\u00f3gio de interrup\u00e7\u00e3o em\n\nhardware (temporizador); se o processo n\u00e3o devolver o processador voluntariamente, a\n\ninterrup\u00e7\u00e3o gerada pelo temporizador faz com que este processo volte para lista de prontos.\n\nSe um processo em execu\u00e7\u00e3o iniciar uma opera\u00e7\u00e3o de entrada/sa\u00edda antes do temporizador\n\n\n\n1.2 Sistema de tempo real (STR) 9\n\natuar, este processo vai para a lista de bloqueados, liberando o processador. Esta transi\u00e7\u00e3o\n\n\u00e9 chamada de bloqueio do processo. Quando o evento pelo qual o processo espera \u00e9\n\nconclu\u00eddo, este processo vai para a lista de pronto. Esta transi\u00e7\u00e3o \u00e9 chamada de despertar\n\ndo processo.\n\nExecu\u00e7\u00e3o\n\nPronto Bloqueado\n\nD\nes\n\npa\nch\n\no\n\nT\nem\n\npo\nri\nza\n\ndo\nr\n\nB\nloqueio\n\nDes\nper\n\ntar\n\nFigura 1.5: Transi\u00e7\u00e3o de estado de processos.\n\nA estrat\u00e9gia utilizada pelo sistema operacional para escolher o processo que executa \u00e9\n\nchamada de pol\u00edtica de escalonamento. Atrav\u00e9s deste escalonamento de processos, o sis-\n\ntema pode alocar mais eficientemente os recursos computacionais para satisfazer alguns\n\ncrit\u00e9rios de desempenho. Para o caso do RTOS, o sistema tem como objetivo garantir\n\na conclus\u00e3o de cada processo dentro do seu prazo estabelecido. As pol\u00edticas de esca-\n\nlonamento podem ser preemptivas ou n\u00e3o-preemptivas. No caso de um escalonamento\n\nn\u00e3o-preemptivo, uma vez que um processo obt\u00e9m um processador, o sistema n\u00e3o pode\n\nretirar este processador deste processo. No caso de escalonamento preemptivo, o sistema\n\npode retirar o processador, realizando o chamado chaveamento de contexto5. O escalo-\n\nnamento preemptivo \u00e9 \u00fatil em sistemas nos quais processos de alta prioridade exigem\n\nresposta r\u00e1pida, como STRs (DEITEL; DEITEL; CHOFFNES, 2005). Algoritmos de escalo-\n\nnamento muitas vezes utilizam prioridades para determinar os processos que devem ser\n\nexecutados. Quando cada processo possui uma prioridade est\u00e1tica, o escalonamento \u00e9\n\nchamado de escalonamento por prioridade fixa (FP - fixed priority).\n\nAs pol\u00edticas de escalonamentos utilizadas em STRs s\u00e3o chamadas de escalonamento\n\nde tempo real. Estas pol\u00edticas tem como objetivo fazer com que os processos gerem as\n\nsa\u00eddas corretas num determinado tempo. Os algoritmos de escalonamento de tempo real\n\n5O sistema operacional realiza um chaveamento de contexto para interromper um processo em execu\u00e7\u00e3o\ne come\u00e7a a executar o processo que est\u00e1 no topo da lista de prontos.\n\n\n\n1.3 Redes de comunica\u00e7\u00e3o 10\n\nmais utilizados s\u00e3o:\n\n\u2022 escalonamento por taxa monot\u00f4nica (RM - rate monotonic) - algoritmo de alter-\nn\u00e2ncia circular, preemptivo, por prioridade, que eleva a prioridade de um processo\n\nlinearmente com a freq\u00fc\u00eancia com a qual ele deve executar;\n\n\u2022 escalonamento por prazo-mais-curto-primeiro (EDF - earliest deadline first) - algo-\nritmo de escalonamento preemptivo que despacha primeiro o processo com o prazo\n\nmais curto.\n\nSob o contexto de NCS, a execu\u00e7\u00e3o dos processos relacionados ao controle introduz um\n\natraso, mesmo que m\u00ednimo, ao ciclo de controle; sendo que em alguns casos este atraso \u00e9 de\n\ncar\u00e1ter estoc\u00e1stico (CERVIN, 2003). Portanto a din\u00e2mica do STR (ou mais precisamente\n\ndo RTOS) deve ser levada em considera\u00e7\u00e3o na an\u00e1lise do desempenho do NCS.\n\n1.3 Redes de comunica\u00e7\u00e3o\n\nAs redes de comunica\u00e7\u00e3o foram introduzidas em sistemas de controle em meados da d\u00e9cada\n\nde 70 na ind\u00fastria automobil\u00edstica para promover a redu\u00e7\u00e3o de custos com cabeamento e\n\na modulariza\u00e7\u00e3o de sistemas. Atualmente \u00e9 crescente a incorpora\u00e7\u00e3o de redes de comu-\n\nnica\u00e7\u00e3o em sistemas de controle, como em avi\u00f5es (o chamado fly by wire6 - FBW) e em\n\ncarros (o chamado drive by wire7 - DBW), por exemplo.\n\nA maioria das redes de comunica\u00e7\u00e3o s\u00e3o organizadas como uma pilha de camadas ou\n\nn\u00edveis, colocadas umas sobre as outras. O n\u00famero de camadas, o nome, o conte\u00fado e a\n\nfun\u00e7\u00e3o de cada camada diferem de uma rede para outra. No entanto, em todas as redes o\n\nobjetivo de cada camada \u00e9 oferecer determinados servi\u00e7os \u00e0s camadas superiores, isolando\n\nessas camadas dos detalhes de implementa\u00e7\u00e3o desses recursos. Em certo sentido, cada\n\ncamada \u00e9 uma esp\u00e9cie de m\u00e1quina virtual, oferecendo determinados servi\u00e7os \u00e0 camada\n\nsituada acima dela.\n\nA camada n de um n\u00f3 da rede (conhecido tamb\u00e9m como host8) se comunica com a\n\ncamada n de outro n\u00f3. Coletivamente, as regras e conven\u00e7\u00f5es utilizadas nesse di\u00e1logo s\u00e3o\n\n6fly by wire se refere ao uso de dispositivos eletr\u00f4nicos em vez de mec\u00e2nicos para interligar os comandos\ndo piloto aos atuadores de controle de v\u00f4o (TISCHLER, 1996).\n\n7drive by wire \u00e9 o dual do fly by wire para ve\u00edculos terrestres.\n8Host um dispositivo conectado a rede capaz de enviar e receber dados pelo canal de comunica\u00e7\u00e3o.\n\n\n\n1.3 Redes de comunica\u00e7\u00e3o 11\n\nconhecidas como o protocolo da camada n. Basicamente, um protocolo \u00e9 um acordo entre\n\nas partes que se comunicam, estabelecendo como se dar\u00e1 a comunica\u00e7\u00e3o. As entidades\n\nque ocupam as camadas correspondentes em diferentes n\u00f3s s\u00e3o chamadas pares (peers).\n\nOs pares podem ser processos, dispositivos de hardware ou mesmo seres humanos. Em\n\noutras palavras, s\u00e3o os pares que se comunicam utilizando o protocolo.\n\nNa realidade, os dados n\u00e3o s\u00e3o transferidos diretamente da camada n de um n\u00f3 para\n\na camada n de outro n\u00f3. Em vez disso, cada camada transfere os dados e as informa\u00e7\u00f5es\n\nde controle para a camada imediatamente abaixo dela, at\u00e9 ser alcan\u00e7ada a camada mais\n\nbaixa. Abaixo da camada 1 encontra-se o meio f\u00edsico atrav\u00e9s do qual se d\u00e1 a transmiss\u00e3o\n\nf\u00edsica dos sinais de comunica\u00e7\u00e3o. Na Figura 1.6, a comunica\u00e7\u00e3o virtual \u00e9 mostrada por\n\nlinhas tracejadas e a comunica\u00e7\u00e3o f\u00edsica por linhas cont\u00ednuas.\n\nCamada\nn\n\nCamada\nn\n\nCamada\n1\n\nCamada\n1\n\nCamada\n2\n\nCamada\n2\n\nMeio f\u00edsico\n\nN\u00f3 1 N\u00f3 2\n\nProtocolo da\n\nProtocolo da\n\nProtocolo da\n\nCamada n\n\nCamada 2\n\nCamada 1\n\nFigura 1.6: Estrutura de rede em camadas.\n\nQuando apenas um \u00fanico canal est\u00e1 dispon\u00edvel, a determina\u00e7\u00e3o do pr\u00f3ximo n\u00f3 que\n\ndeve acessar o meio \u00e9 mais complexa. Existem v\u00e1rios protocolos destinados a solucio-\n\nnar o problema. Estes protocolos pertencem a subcamada chamada MAC (media access\n\ncontrol). Dentre estes protocolos, pode-se destacar:\n\n\u2022 protocolo CSMA/CD - Carrier Sense Multiple Access with Collision Detection O\nsistema identifica quando o meio f\u00edsico est\u00e1 dispon\u00edvel e inicia a transmiss\u00e3o. Caso\n\nhaja uma colis\u00e3o (dois n\u00f3s tentando acessar o meio f\u00edsico ao mesmo tempo), o\n\nsistema a detecta e todas as transmiss\u00f5es s\u00e3o canceladas; e um sinal de colis\u00e3o \u00e9\n\n\n\n1.3 Redes de comunica\u00e7\u00e3o 12\n\n  \n\n \n\n \n\n \n\nTempo\n\nTempo\n\nN\u00f3 i\n\nN\u00f3 j\n\nCaso 1:\nSem colis\u00e3o\n\nCaso 2:\nCom colis\u00e3o\n\ncom prioridade\n\nCaso 3:\nCom colis\u00e3o\n\nsem prioridade\n\nFigura 1.7: Diagrama de tempo para dois n\u00f3s e um acesso aleat\u00f3rio \u00e0 rede, onde: o\nCaso 1 trata de uma situa\u00e7\u00e3o sem colis\u00e3o; o Caso 2 trata de uma situa\u00e7\u00e3o com colis\u00e3o,\nonde o n\u00f3 i tem maior prioridade; e o Caso 3 trata de uma situa\u00e7\u00e3o com colis\u00e3o e sem\nprioridade, onde os dois n\u00f3s retransmitem a mensagem depois de um tempo aleat\u00f3rio.\n\nemitido. Os n\u00f3s esperam um tempo aleat\u00f3rio para retransmiss\u00e3o das mensagens (ou\n\npacotes). Isto pode ser visualizado atrav\u00e9s do Caso 3 da Figura 1.7.\n\n\u2022 protocolo CSMA/AMP - Carrier Sense Multiple Access with Arbitration on Message\nPriority O sistema identifica quando o meio est\u00e1 dispon\u00edvel e inicia a transmiss\u00e3o.\n\nCaso haja uma colis\u00e3o, o sistema a detecta e permite que a mensagem de maior\n\nprioridade continue sua transmiss\u00e3o. Se duas ou mais mensagens de maior prioridade\n\ncolidirem, \u00e9 feita uma escolha aleat\u00f3ria da mensagem que completar\u00e1 a transmiss\u00e3o.\n\nIsto pode ser visualizado atrav\u00e9s do Caso 2 da Figura 1.7.\n\n\u2022 FDMA - Frequency Division Multiple Access A transmiss\u00e3o de cada n\u00f3 \u00e9 feita em\numa determinada banda, sendo independente uma da outra. Neste caso n\u00e3o h\u00e1\n\ncolis\u00f5es.\n\n\u2022 TDMA - Time Division Multiple Access Este protocolo funciona de modo seme-\nlhante ao FDMA, por\u00e9m, cada n\u00f3 tem 100% da banda dispon\u00edvel somente em de-\n\nterminados per\u00edodos de tempo. Se a transmiss\u00e3o n\u00e3o for completada durante um\n\nper\u00edodo, ele deve aguardar o pr\u00f3ximo dispon\u00edvel.\n\n\u2022 WLAN - Wireless Local Area Network Este protocolo \u00e9 definido pela fam\u00edlia de es-\npecifica\u00e7\u00f5es IEEE 802.11, baseado no protocolo CSMA/CA (Carrier Sense Multiple\n\nAccess with Collision Avoidance). Cada n\u00f3 avisa sobre a sua transmiss\u00e3o e o tempo\n\n\n\n1.4 Objetivos e apresenta\u00e7\u00e3o do trabalho 13\n\nprevisto para realizar a tarefa. Assim, os outros n\u00f3s que pretendem enviar mensa-\n\ngens esperam decorrer este tempo para ent\u00e3o iniciar suas transmiss\u00f5es. Nota-se que\n\neste m\u00e9todo n\u00e3o impede que as colis\u00f5es ocorram, mas as evita.\n\nNota-se que a rede de comunica\u00e7\u00e3o \u00e9 uma potencial fonte de atrasos, e de maioria\n\nestoc\u00e1sticos (NILSSON, 1998). Portanto informa\u00e7\u00f5es sobre a rede de comunica\u00e7\u00e3o s\u00e3o\n\nrelevantes na avalia\u00e7\u00e3o do desempenho do NCS.\n\n1.4 Objetivos e apresenta\u00e7\u00e3o do trabalho\n\nNeste trabalho, o objetivo \u00e9 analisar sistemas de controle distribu\u00eddos em redes de co-\n\nmunica\u00e7\u00e3o, mais precisamente a integra\u00e7\u00e3o das din\u00e2micas do sistema computacional e do\n\nsistema de controle, sob o ponto de vista de atrasos e do desempenho e estabilidade do\n\ncontrole, com o intuito de obter uma solu\u00e7\u00e3o de controle do tipo NCS para um ROV. Ar-\n\nquiteturas semelhantes \u00e0 esta s\u00e3o encontradas em ROVs comerciais, como por exemplo o\n\nchamado Distributed Intelligence Control System, implementado no ROV Seaeye Falcon,\n\nda Saab Technologies (SAAB, 2009).\n\nNo Cap\u00edtulo 2 s\u00e3o apresentados dois m\u00e9todos para an\u00e1lise do impacto dos atrasos em\n\nsistemas de controle:\n\n\u2022 utilizando um modelo de sistema com atraso e em tempo discreto, que permite fazer\na an\u00e1lise em freq\u00fc\u00eancia do sistema para o pior caso de atraso (atraso constante);\n\n\u2022 utilizando as ferramentas TrueTime e Jitterbug, que, em conjunto, analisam o im-\npacto de atrasos aleat\u00f3rios sobre o sistema de controle atrav\u00e9s da teoria de Sistemas\n\nLineares com Saltos Markovianos (MJLS) e de uma fun\u00e7\u00e3o de custo que relaciona\n\nenergia na entrada e na sa\u00edda.\n\nNo Cap\u00edtulo 3 s\u00e3o apresentadas tr\u00eas candidatas para redes de comunica\u00e7\u00e3o para NCSs\n\n(chamadas tamb\u00e9m de redes de controle), a saber: Ethernet, ControlNet e DeviceNet.\n\nCada qual com vantagens e desvantagens para sistemas de controle. Um resultado pr\u00e1tico\n\napresentado \u00e9 o uso da rede do tipo Ethernet em NCSs, apesar desta ser considerada\n\n(teoricamente) n\u00e3o-determin\u00edstica (caracter\u00edstica necess\u00e1ria para redes de controle). E\n\nforam comparados par\u00e2metros relevantes para NCS das candidatas. Desta forma mostra-\n\nse que a implementa\u00e7\u00e3o de cada uma depende do contexto em que elas ser\u00e3o inseridas.\n\n\n\n1.4 Objetivos e apresenta\u00e7\u00e3o do trabalho 14\n\nNo Cap\u00edtulo 4 \u00e9 visto um caso semelhante ao apresentado no trabalho de Chow e\n\nTipsuwan (2003). \u00c9 poss\u00edvel observar a deteriora\u00e7\u00e3o do desempenho do NCS conforme\n\no aumento dos atrasos causados pelo sistema computacional. Ao final confirma-se que\n\nexiste uma rela\u00e7\u00e3o de compromisso entre o desempenho do sistema computacional e o\n\ndesempenho do sistema de controle (LIAN; MOYNE; TILBURY, 2002), ou seja, conclui-se que\n\nutilizar as informa\u00e7\u00f5es do sistema computacional na avalia\u00e7\u00e3o do desempenho de NCSs\n\ncontribui para a obten\u00e7\u00e3o de um equil\u00edbrio entre o desempenho do sistema computacional\n\ne o desempenho do controle.\n\nNo Cap\u00edtulo 5 \u00e9 apresentado o modelo matem\u00e1tico do ROV que ser\u00e1 utilizado. Este\n\nmodelo \u00e9 baseado no trabalho de Caccia, Indiveri e Veruggio (2000) e de Avila, Maruyama\n\ne Adamowski (2008), onde os 6 graus de liberdade s\u00e3o desacoplados, sob a hip\u00f3tese de\n\nopera\u00e7\u00f5es com baixas velocidades. \u00c9 apresentada a estrutura de controle hier\u00e1rquica\n\n(CACCIA; VERUGGIO, 2000; SOUZA, 2003), onde n\u00edveis de controle superiores (e.g., guia-\n\ngem) s\u00e3o respons\u00e1veis pela especifica\u00e7\u00e3o de valores de refer\u00eancias para n\u00edveis de controle\n\ninferiores (e.g., estrat\u00e9gia de controle). E por fim mostra-se a estrat\u00e9gia de controle utili-\n\nzando um controlador do tipo PI com estrutura feedback-feedfoward, cujos par\u00e2metros de\n\nprojeto s\u00e3o dados por ?i e ?ni .\n\nNo Cap\u00edtulo 6 mostra-se como s\u00e3o obtidos os par\u00e2metros ?i e ?ni \u00f3timos para alguns\n\ncasos de atraso atrav\u00e9s do TrueTime e do Jitterbug. Estes par\u00e2metros s\u00e3o utilizados\n\nem simula\u00e7\u00f5es com um modelo do ROV em realidade virtual. Nestas simula\u00e7\u00f5es foram\n\nrealizadas simples tarefas de posicionamento do ve\u00edculo. Como resultado observa-se que,\n\ndado que o sistema \u00e9 tipicamente est\u00e1vel, os efeitos do indeterminismo temporal pouco\n\nafetam o desempenho do sistema de controle para esta determinada tarefa.\n\nNo Cap\u00edtulo 7 constam as conclus\u00f5es deste trabalho, bem como as sugest\u00f5es para\n\ntrabalhos futuros.\n\n\n\n15\n\n2 M\u00e9todos de An\u00e1lise\n\nNa teoria cl\u00e1ssica de controle discreto, o ciclo de controle (amostragem do sinal de sa\u00edda,\n\nc\u00e1lculo do sinal de controle e atua\u00e7\u00e3o sobre a planta) \u00e9 considerado ideal, ou seja, sua\n\nexecu\u00e7\u00e3o ocorre instantaneamente nos instantes de amostragem kh, com k = 1, 2, . . .. Po-\n\nr\u00e9m na pr\u00e1tica, em um sistema de controle computadorizado, este ciclo consome um certo\n\ntempo para ser executado devido \u00e0 din\u00e2mica do sistema computacional. O objetivo deste\n\ncap\u00edtulo \u00e9 apresentar os m\u00e9todos utilizados para analisar como a intera\u00e7\u00e3o da din\u00e2mica\n\ndo sistema computacional e da din\u00e2mica sistema de controle impactam no desempenho\n\ndo NCS.\n\n+\n\n-\n\nEntrada\n\nK(s) e??s G(s)\n\nSa\u00edda\n\nFigura 2.1: Modelo de um sistema com atraso em tempo cont\u00ednuo, onde K(s) e G(s)\nrepresentam respectivamente o controlador e a planta.\n\nEm uma primeira aproxima\u00e7\u00e3o, o tempo de execu\u00e7\u00e3o do ciclo de controle pode ser\n\nrepresentado por um atraso constante ? na entrada da planta (Figura 2.1). Assim, dado\n\num sistema SISO cuja resposta em malha aberta no tempo (sem atraso) seja representada\n\npor uma fun\u00e7\u00e3o f(t), cuja Transformada de Laplace (L[f(t)]) \u00e9 F(s), sua a resposta no\ntempo com atraso \u00e9 f(t??)H(t??), onde H(t) \u00e9 a fun\u00e7\u00e3o degrau de Heaviside. Aplicando\nnovamente a Transformada de Laplace, a fun\u00e7\u00e3o de malha aberta do sistema com atraso\n\n\u00e9 dada por\n\nL(s) = L[f(t ? ?)H(t ? ?)] = e??sF(s) (2.1)\n\n(WOLOVICH, 1994). Sabendo que e?j? pode ser escrito como\n\ne?j?? = cos ?? ? j sin ??, (2.2)\n\n\n\n2 M\u00e9todos de An\u00e1lise 16\n\nonde\n\n|e?j??| = 1,\n\n?{e?j??} = ???.\n\nDesta forma a magnitude e a fase do sistema em malha aberta com atraso s\u00e3o dadas por\n\n20 log |L(j?)| = 20 log |F(j?)| (2.3)\n\n?{L(j?)} = ??? + ?{F(j?)}. (2.4)\n\n?1 + 0j\n\nRe\n\nIm\n\nCom atraso\nSem atraso\n\nFigura 2.2: Exemplo de um diagrama de Nyquist de um sistema de segunda ordem\ncom e sem atraso (WOLOVICH, 1994).\n\nPortanto para este caso, o ganho da fun\u00e7\u00e3o de malha aberta n\u00e3o sofre altera\u00e7\u00f5es,\n\npor\u00e9m sua fase sofre um atraso proporcional \u00e0 freq\u00fc\u00eancia, piorando o desempenho do\n\ncontrole em malha fechada principalmente em altas freq\u00fc\u00eancias. O efeito deste atraso\n\npode ser visualizado no Diagrama de Nyquist da Figura 2.2, onde a curva da fun\u00e7\u00e3o de\n\nmalha aberta do sistema com atraso est\u00e1 mais pr\u00f3xima do ponto cr\u00edtico (?1 + 0j) do que\na do sistema sem atraso.\n\nUma poss\u00edvel solu\u00e7\u00e3o para o problema deste atraso \u00e9 consider\u00e1-lo no projeto do con-\n\ntrolador atrav\u00e9s da inclus\u00e3o de um erro de modelagem da planta do sistema. O diagrama\n\nde blocos do novo modelo da planta GR(s) (chamado de aqui de \"modelo real\") \u00e9 mos-\n\ntrado na Figura 2.3, onde h\u00e1 tamb\u00e9m o erro de modelagem ?M (s) (chamado aqui de erro\n\nmultiplicativo) e o modelo nominal da planta GN (s). Desta forma, tem-se que\n\nGR(s) = [1 + ?M (s)]GN (s). (2.5)\n\n\n\n2 M\u00e9todos de An\u00e1lise 17\n\nAdmite-se que este erro multiplicativo possui um limite superior, de forma que\n\n|?M (j?)| ? eM (?) ?? ? R. (2.6)\n\nO comportamento t\u00edpico de eM (?) \u00e9 ilustrado qualitativamente na Figura 2.4. Este com-\n\nportamento sugere que os modelos nominais s\u00e3o fi\u00e9is em baixas freq\u00fc\u00eancias e grosseiros\n\nem altas (CRUZ, 1996). A Figura 2.5 mostra a rela\u00e7\u00e3o de GN (j?), GR(j?) e eM (?) atra-\n\nv\u00e9s do Diagrama de Nyquist, onde os c\u00edrculos tracejados demarcam a \u00e1rea das trajet\u00f3rias\n\nposs\u00edveis da curva de GR(j?). O modelo matem\u00e1tico que deriva esta gr\u00e1fico \u00e9 detalahdo\n\nno Anexo A.\n\n+\n\n+\n\nU(s)\nGN (s)\n\n?M (s)\n\nGR(s)\n\nY (s)\n\nFigura 2.3: Diagrama de blocos do modelo real GR(s) da planta do sistema, composto\npelo erro multiplicativo ?M (s) e pelo modelo nominal GN (s).\n\neM (?)\n\n?\n\n1\n\nFigura 2.4: Ilustra\u00e7\u00e3o qualitativa do comportamento t\u00edpico de eM (?).\n\nMesmo considerando o atraso proveniente do sistema computacional de forma apro-\n\nximada no projeto do controlador robusto, \u00e9 necess\u00e1rio analisar com mais detalhes as\n\nintera\u00e7\u00f5es entre o sistema computacional e o sistema de controle de forma a aumentar a\n\nconfiabilidade do projeto do NCS. Para tanto, neste cap\u00edtulo \u00e9 apresentado na Se\u00e7\u00e3o 2.1\n\no m\u00e9todo de an\u00e1lise que utiliza um modelo de sistema com atraso baseado na teoria cl\u00e1s-\n\nsica de controle que permite fazer a an\u00e1lise em freq\u00fc\u00eancia do sistema considerando o pior\n\ncaso de tempo para execu\u00e7\u00e3o do ciclo de controle (maior atraso poss\u00edvel). Outro poss\u00edvel\n\nm\u00e9todo de an\u00e1lise \u00e9 atrav\u00e9s dos toolboxes TrueTime (ANDERSSON; HENRIKSSON; CERVIN,\n\n2007) e Jitterbug (CERVIN; LINCOLN, 2006), apresentado na Se\u00e7\u00e3o 2.2. Na Se\u00e7\u00e3o 2.3\n\n\n\n2 M\u00e9todos de An\u00e1lise 18\n\n\"\u00c1rea\"de GR(j?)\n\nRe\n\nIm\n\nGN (j?)\n\neM (?)\n\nFigura 2.5: Diagrama de Nyquist mostrando a rela\u00e7\u00e3o entre GN (j?), GR(j?) e eM (?).\nOs c\u00edrculos tracejados demarcam a \u00e1rea das trajet\u00f3rias poss\u00edveis da curva de GR(j?).\n\n\u00e9 apresentado um exemplo que permite mostrar e comparar as an\u00e1lises de um sistema\n\natrav\u00e9s dos dois m\u00e9todos.\n\n\n\n2.1 M\u00e9todo com o Modelo do Sistema com Atraso 19\n\n2.1 M\u00e9todo com o Modelo do Sistema com Atraso\n\nComo visto na se\u00e7\u00e3o anterior, o tempo de execu\u00e7\u00e3o do ciclo de controle pode ser aproxi-\n\nmado por um atraso de transporte do sinal de controle na entrada da planta atrav\u00e9s da\n\ninser\u00e7\u00e3o de um termo exponencial para sistemas em tempo cont\u00ednuo. Por\u00e9m, para sis-\n\ntemas amostrados que utilizam um reconstrutor de ordem zero (ZOH - zero-order-hold ),\n\ncujo sinal de controle \u00e9 constante entre os instantes de amostragem, existe outra forma\n\npara representar este atraso (\u00c5STR\u00f6M; WITTENMARK, 1997), como ser\u00e1 mostrado ao longo\n\ndesta se\u00e7\u00e3o.\n\n{uk} {yk}u(t) y(t)\n\nClock\n\nD/A A/DSistema\n\nFigura 2.6: Diagrama de blocos com um sistema em tempo cont\u00ednuo conectado aos\nconversores D/A e A/D, onde {uk} e {yk} s\u00e3o seq\u00fc\u00eancias do sinal de controle e do sinal\n\nde sa\u00edda, respectivamente, tomados nos instantes de amostragem kh; e Clock \u00e9\nsincronizador do do sistema computacional.\n\nSeja o sistema em tempo cont\u00ednuo da Figura 2.6, cuja representa\u00e7\u00e3o em espa\u00e7o de\n\nestados \u00e9\nx?(t) = Ax(t) + u(t),\n\ny(t) = Cx(t) + Du(t).\n(2.7)\n\nSeu estado no instante t, onde tk ? t ? tk+1, \u00e9 dado por\n\nx(t) = eA(t?tk )xk +\n\n? t\n\ntk\n\neA(t?s)Bu(s)ds, (2.8)\n\nonde xk = x(tk). Como o sinal de controle \u00e9 constante entre os instantes de amostragem,\n\ntem-se que\nx(t) = eA(t?tk )xk +\n\n? t?tk\n0\n\neAsds Buk\n\n= ?(t, tk)xk + ?(t, tk)uk\n, (2.9)\n\nSe os conversores D/A e A/D estiverem perfeitamente sincronizados; os tempos das con-\n\nvers\u00f5es forem desprez\u00edveis; e o per\u00edodo de amostragem for constante, o modelo se torna\n\n\n\n2.1 M\u00e9todo com o Modelo do Sistema com Atraso 20\n\ninvariante no tempo e \u00e9 descrito por\n\nxk+1 = ?xk + ?uk\n\nyk = Cxk + Duk\n, (2.10)\n\nonde\n\n? = eAh\n\n? =\n\n? h\n\n0\n\neAsds B.\n\nPara inserir um atraso constante ? neste modelo, parte-se da seguinte equa\u00e7\u00e3o\n\nx?(t) = Ax(t) + Bu(t ? ?).\n\nNesta representa\u00e7\u00e3o, percebe-se que a atua\u00e7\u00e3o do controle no instante t \u00e9 defasado de um\n\natraso ?. Assumindo que o atraso ? \u00e9 menor que o per\u00edodo de amostragem nominal h, a\n\nintegra\u00e7\u00e3o sobre um per\u00edodo de amostragem \u00e9 dado por\n\nxk+1 = e\nAhxk +\n\n? (k+1)h\n\nkh\n\neA((k+1)h?s\n?)Bu(s? ? ?)ds?.\n\nEsta integral pode ser dividida em duas integrais, de forma que\n\nxk+1 = ?xk + ?0uk + ?1uk?1, (2.11)\n\nonde\n? = eAh,\n\n?0 =\n? h??\n\n0\neAsds B,\n\n?1 = e\nA(h?? )\n\n? ?\n\n0\neAsds B.\n\n(2.12)\n\nFisicamente isto pode ser interpretado como a soma do efeito do sinal de controle uk?1\n\natuando por um per\u00edodo ?, e o efeito do sinal de controle uk atuando por um per\u00edodo\n\nh ? ? (Figura 2.7), entre dois instantes de amostragem. Adotando como vetor de estados\n\nXk =\n\n[\n\nxk\n\nuk?1\n\n]\n\n,\n\nobt\u00e9m-se o espa\u00e7o de estados em tempo discreto dado por\n\nXk+1 =\n\n[\n\n? ?1\n\n0 0\n\n]\n\nXk +\n\n[\n\n?0\n\nI\n\n]\n\nuk,\n\nyk =\n[\n\nC 0\n]\n\nXk + Duk.\n\n(2.13)\n\n\n\n2.1 M\u00e9todo com o Modelo do Sistema com Atraso 21\n\nAmostragem\n\ny(t)\n\nuk?1\nuk\n\nuk+1\n\n(k ? 1)h kh (k + 1)h t\n\n???\n\nFigura 2.7: Diagrama de tempo do modelo do sistema com atraso, onde o sinal de\ncontrole uk?1 atua por um per\u00edodo ?, e o sinal de controle uk atua por um per\u00edodo h ? ?.\n\nPara os casos onde o atraso ? \u00e9 maior do que h, do tipo\n\n? = (d ? 1)h + ? ? 0 &lt;? ? ? h, (2.14)\n\nonde d = ??/h?, a Equa\u00e7\u00e3o (2.11) pode ser escrita como\n\nxk+1 = ?xk + ?0uk?(d?1) + ?1uk?d, (2.15)\n\nonde ?0 e ?1 s\u00e3o dados pela Equa\u00e7\u00e3o (2.12), substituindo-se ? por ? ?. Assim, o novo\n\nsistema \u00e9 dado por:\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\nxk+1\n\nuk?(d?1)\n...\n\nuk?1\n\nuk\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n=\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n? ?1 ?0 \u00b7 \u00b7 \u00b7 0\n0 0 I \u00b7 \u00b7 \u00b7 0\n...\n\n...\n...\n\n. . .\n...\n\n0 0 0 \u00b7 \u00b7 \u00b7 I\n0 0 0 \u00b7 \u00b7 \u00b7 0\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\nxk\n\nuk?d\n...\n\nuk?2\n\nuk?1\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n+\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n0\n\n0\n...\n\n0\n\nI\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\nuk. (2.16)\n\nAtrav\u00e9s desta representa\u00e7\u00e3o \u00e9 poss\u00edvel fazer a an\u00e1lise em freq\u00fc\u00eancia do sistema con-\n\nsiderando o pior caso do tempo de execu\u00e7\u00e3o do ciclo de controle. Para isso, escreve-se o\n\nsistema em espa\u00e7o de estados da Equa\u00e7\u00e3o (2.10) na forma de uma fun\u00e7\u00e3o de transfer\u00eancia\n\nem tempo discreto\n\nH(z) =\nU(z)\n\nY (z)\n= C[zI ? ?]?1? + D. (2.17)\n\nOs p\u00f3los desta fun\u00e7\u00e3o de transfer\u00eancia s\u00e3o os autovalores de ?. A rela\u00e7\u00e3o entre os p\u00f3los\n\nde tempo discreto e de tempo cont\u00ednuo \u00e9 dado por\n\n?i(?) = e\n?i(A)h, (2.18)\n\n\n\n2.2 M\u00e9todo com os Toolboxes Jitterbug e TrueTime 22\n\nonde ?i(A) s\u00e3o autovalores de A e ?i(?) s\u00e3o os autovalores de ?. Esta mudan\u00e7a de\n\nrepresenta\u00e7\u00e3o \u00e9 chamada de mapeamento do plano-s no plano-z, quando z = exp (sh).\n\nPortanto a an\u00e1lise em freq\u00fc\u00eancia \u00e9 obtida atrav\u00e9s da substitui\u00e7\u00e3o de z = ej?h, onde ? \u00e9\n\na freq\u00fc\u00eancia do sinal de entrada.\n\n2.2 M\u00e9todo com os Toolboxes Jitterbug e TrueTime\n\nNesta se\u00e7\u00e3o ser\u00e1 apresentado o m\u00e9todo de an\u00e1lise que utiliza os toolboxes para MATLAB\n\nque est\u00e3o em desenvolvimento no Department of Automatic Control of Lund Univer-\n\nsity: Jitterbug e TrueTime (CERVIN; LINCOLN, 2006; ANDERSSON; HENRIKSSON; CERVIN,\n\n2007).\n\n2.2.1 Jitterbug\n\nNo Jitterbug, o modelo do sistema de controle (chamado aqui de modelo Jitterbug) \u00e9\n\ndescrito por dois modelos paralelos: um modelo de sinal (Figura 2.8a) e um modelo de\n\ntempo (Figura 2.8b). O modelo de sinal \u00e9 dado por um conjunto de sistemas lineares em\n\ntempo cont\u00ednuo e em tempo discreto, conectados entre si. O modelo de tempo consiste\n\nem um conjunto de \"n\u00f3s de tempo\"que descreve quando diferentes sistemas de tempo\n\ndiscreto devem ser atualizados durante o ciclo de controle.\n\nUm exemplo de um modelo Jitterbug \u00e9 mostrado na Figura 2.8, onde um sistema\n\nde controle computadorizado \u00e9 modelado por quatro blocos. A planta \u00e9 descrita por\n\num sistema em tempo cont\u00ednuo G(s), e o controlador \u00e9 descrito por tr\u00eas sistemas em\n\ntempo discreto H1(z), H2(z) e H3(z). O sistema H1(z) pode representar a amostragem\n\nperi\u00f3dica, H2(z) pode representar o c\u00e1lculo do sinal de controle, e H3(z) pode representar\n\na atua\u00e7\u00e3o. O respectivo modelo de tempo mostra que no in\u00edcio de cada ciclo de controle,\n\nH1(z) deve ser executado primeiro. Ent\u00e3o existe um atraso aleat\u00f3rio ?1, antes que H2(z)\n\nseja executado, e um outro atraso aleat\u00f3rio ?2 antes que H3(z) seja executado. Os atrasos\n\nconsideram o tempo de c\u00e1lculo, atrasos de escalonamento ou atrasos introduzidos pela\n\nrede de comunica\u00e7\u00e3o.\n\nPara o modelo de sinal, o sistema em tempo cont\u00ednuo \u00e9 descrito por\n\nx?c(t) = Axc(t) + Bu(t) + vc(t)\n\ny(t) = Cxc(t),\n\n\n\n2.2 M\u00e9todo com os Toolboxes Jitterbug e TrueTime 23\n\nG(s) H1(z)\n\nH2(z)\n\nH3(z)\nu y\n\n(a) Modelo de sinal.\n\n1\n\n2\n\n3\n\nH1(z)\n\nH2(z)\n\nH3(z)\n\n?1\n\n?2\n\n(b) Modelo de tempo.\n\nFigura 2.8: Exemplo de um modelo Jitterbug de um sistema controlado por\ncomputador.\n\nonde A, B e C s\u00e3o matrizes constantes, vc \u00e9 um processo de ru\u00eddo branco em tempo\n\ncont\u00ednuo com covari\u00e2ncia R1c. O custo deste sistema \u00e9 especificado como\n\nJc = lim\nT ??\n\n1\n\nT\n\n? T\n\n0\n\n(\n\nxc(t)\n\nu(t)\n\n)T\n\nQc\n\n(\n\nxc(t)\n\nu(t)\n\n)\n\ndt, (2.19)\n\nonde Qc \u00e9 uma matriz semidefinida positiva. E o modelo em tempo discreto \u00e9 descrito\n\npor\n\nxd(tk+1) = ?xd(tk) + ?u(tk) + vd(tk)\n\ny(tk) = Cxd(tk) + Du(tk) + ed(tk),\n\nonde ?, ?, C e D s\u00e3o matrizes n\u00e3o necessariamente constantes. A covari\u00e2ncia dos pro-\n\ncessos de ru\u00eddo branco em tempo discreto vd e ed \u00e9 dado por\n\nRd = E\n\n?\n\n?\n\n?\n\n(\n\nvd(tk)\n\ned(tk)\n\n)(\n\nvd(tk)\n\ned(tk)\n\n)T\n?\n\n?\n\n?\n\n. (2.20)\n\nO sinal de entrada u \u00e9 amostrado quando o sistema \u00e9 atualizado, e o estado xd e o sinal de\n\nsa\u00edda y s\u00e3o mantidos constantes entre as atualiza\u00e7\u00f5es. O custo deste sistema \u00e9 especificado\n\ncomo\n\nJd = lim\nT ??\n\n1\n\nT\n\n? T\n\n0\n\n(\n\nxd(t)\n\nu(t)\n\n)T\n\nQd\n\n(\n\nxd(t)\n\nu(t)\n\n)\n\ndt, (2.21)\n\nonde Qd \u00e9 uma matriz semidefinida positiva.\n\nO sistema completo \u00e9 obtido atrav\u00e9s das conex\u00f5es entre as entradas e sa\u00eddas dos\n\nsistemas em tempo cont\u00ednuo e em tempo discreto. Formula\u00e7\u00f5es MIMO (multi-input e\n\n\n\n2.2 M\u00e9todo com os Toolboxes Jitterbug e TrueTime 24\n\nmulti-output) s\u00e3o permitidas. O custo total \u00e9 a soma dos custos de todos os subsistemas\n\nJ =\n?\n\nJc +\n?\n\nJd. (2.22)\n\nPercebe-se que tanto Jc quanto Jd refletem uma rela\u00e7\u00e3o de energia do sistema, ou seja,\n\num valor de J elevado indica uma melhor rela\u00e7\u00e3o de energia na entrada e na sa\u00edda do\n\nsistema. Em outros termos, um custo elevado indica que o sistema se encontra pr\u00f3ximo\n\nda regi\u00e3o de instabilidade, onde J ? ?.\n\nNo modelo de tempo, cada n\u00f3 \u00e9 associado com um ou mais sistemas em tempo discreto\n\nque devem ser atualizados quando o n\u00f3 se torna ativo. No instante zero, o primeiro n\u00f3\n\n\u00e9 ativo. O primeiro n\u00f3 tamb\u00e9m pode ser declarado peri\u00f3dico, ou seja, a execu\u00e7\u00e3o ser\u00e1\n\nreiniciada neste n\u00f3 a cada h segundos. Isto \u00e9 \u00fatil para modelar controladores peri\u00f3dicos\n\ne simplifica os c\u00e1lculos dos custos. Cada n\u00f3 \u00e9 associado a um atraso ?, que deve ser\n\ntranscorrido antes que o pr\u00f3ximo n\u00f3 se torne ativo. Um atraso \u00e9 descrito por uma fun\u00e7\u00e3o\n\ndensidade probabilidade discreta\n\nP? = [ P? (1) P? (2) . . . ], (2.23)\n\nonde P? (k) representa a probabilidade de ocorr\u00eancia de um atraso de k? segundos. O\n\npasso da discretiza\u00e7\u00e3o do tempo ? \u00e9 uma constante especificada para todo o modelo.\n\nO mesmo sistema discreto pode ser atualizado em v\u00e1rios n\u00f3s de tempo. \u00c9 poss\u00edvel\n\nespecificar diferentes equa\u00e7\u00f5es de diferen\u00e7as (i.e., diferentes matrizes ?, ?, C e D) nos\n\nv\u00e1rios casos. Isto pode representar controladores com compensa\u00e7\u00e3o de jitter.\n\nO c\u00e1lculo do custo total \u00e9 realizado em tr\u00eas passos:\n\n1. as fun\u00e7\u00f5es de custo, o ru\u00eddo em tempo cont\u00ednuo e os sistemas em tempo cont\u00ednuo\n\ns\u00e3o discretizados utilizando um passo ?;\n\n2. o sistema em malha fechada \u00e9 ent\u00e3o formulado como um Sistema Linear com Sal-\n\ntos Markovianos (Markov Jump Linear Systems \u2013 MJLS), onde s\u00e3o usados n\u00f3s de\n\nMarkov para representar o per\u00edodo entre os n\u00f3s de execu\u00e7\u00e3o;\n\n3. a vari\u00e2ncia estacion\u00e1ria de todos os estados do sistema \u00e9 calculado.\n\nInicialmente, os estados e os custos s\u00e3o considerados no tempo cont\u00ednuo. Os estados\n\nem tempo discreto s\u00e3o tratados como estados em tempo cont\u00ednuo com din\u00e2mica nula. Isto\n\n\n\n2.2 M\u00e9todo com os Toolboxes Jitterbug e TrueTime 25\n\nsignifica que o sistema total pode ser escrito como\n\nx?(t) = Ax(t) + vc(t), (2.24)\n\nonde x representa todos os estados do sistema e vc \u00e9 um processo de ru\u00eddo branco em tempo\n\ncont\u00ednuo com covari\u00e2ncia Rc. Para modelar as mudan\u00e7as em tempo discreto de alguns\n\nestados quando um n\u00f3 de tempo n \u00e9 ativado, o estado \u00e9 transformado instantaneamente\n\npor\n\nx(t+) = Enx(t) + en(t), (2.25)\n\nonde en(t) \u00e9 um processo de ru\u00eddo branco em tempo cont\u00ednuo com covari\u00e2ncia Wn.\n\nPara o primeiro passo, o sistema da Equa\u00e7\u00e3o (2.24) \u00e9 amostrado com um per\u00edodo ?,\n\nobtendo-se\n\nx(k? + ?) = ?x(k?) + v(k?), (2.26)\n\nonde a covari\u00e2ncia de v \u00e9 R. A fun\u00e7\u00e3o de custo para todo o sistema \u00e9 ent\u00e3o definida por\n\nJ = lim\nN??\n\n1\n\nN?\n\nN?1\n?\n\nk=0\n\n(xT (k?)Qx(k?) + q), (2.27)\n\nonde\n\n? = eA? (2.28)\n\nR =\n\n? ?\n\n0\n\neA(??? )Rce\nAT (??? ) d? (2.29)\n\nQ =\n\n? ?\n\n0\n\neA\nT tQce\n\nAt dt (2.30)\n\nq = tr\n\n(\n\nQc\n\n? ?\n\n0\n\n? ?\n\n0\n\neA(t?? )eA\nT (t?? ) d? dt\n\n)\n\n. (2.31)\n\nPara o segundo passo, o sistema \u00e9 modelado como um MJLS (Figura 2.9), onde cada\n\nestado de Markov representa o estado do sistema para cada atraso. Cada n\u00f3 de tempo \u00e9\n\nrepresentado por um n\u00f3 de Markov. N\u00f3s adicionais podem ser inseridos para representar\n\natrasos entre os n\u00f3s de tempo. A covari\u00e2ncia do estado P(k?) = E{x(k?)xT (k?)} pode\nser escrita na forma recursiva como\n\nP(k? + ?) = ?P(k?)?T + R. (2.32)\n\nQuando um novo n\u00f3 de tempo \u00e9 alcan\u00e7ado, os estados mudam de acordo com a Equa-\n\n\n\n2.2 M\u00e9todo com os Toolboxes Jitterbug e TrueTime 26\n\nt\n\n1 1\n\n1\n\n1\n\n1\n\n2 2 2 2\n2\n\nP? = [ 0.2 0.4 0.1 0.3 ]\n\n0.2 0.4\n\n0.1\n\n0.3\n\n0 ? 2? 3?\n\nFigura 2.9: Exemplo de um modelo de tempo e a sua correspondente cadeia de\nMarkov.\n\n\u00e7\u00e3o (2.25). E a covari\u00e2ncia do estado \u00e9 descrita por\n\nP(k?+) = EnP(k?)E\nT\nn + Wn, (2.33)\n\nonde Wn \u00e9 a covari\u00e2ncia do ru\u00eddo en(k?) no n\u00f3 n. Desta forma, define-se:\n\n?n =\n\n{\n\n? se n \u00e9 um n\u00f3 intermedi\u00e1rio,\n\nEn? se n \u00e9 um n\u00f3 de tempo.\n(2.34)\n\nAnalogamente:\n\nRn =\n\n{\n\nR se n \u00e9 um n\u00f3 intermedi\u00e1rio,\n\nEnRE\nT\nn Wn se n \u00e9 um n\u00f3 de tempo.\n\n(2.35)\n\nPara o terceiro passo, toma-se ?n(k?) como a probabilidade do sistema estar no estado\n\nde Markov n no instante k?, e Pn(k?) a covari\u00e2ncia do estado se o sistema est\u00e1 no estado\n\nde Markov n no instante k?. Ent\u00e3o, seja ? a matriz de transi\u00e7\u00e3o da cadeia de Markov,\n\ntal que\n\n?(k? + ?) = ??(k?). (2.36)\n\nPortanto a covari\u00e2ncia do estado \u00e9 dada por\n\nPn(k? + ?) =\n?\n\ni\n\n?ni?i(k?)(?nPi(k?)?\nT\ni + Rn), (2.37)\n\n\n\n2.2 M\u00e9todo com os Toolboxes Jitterbug e TrueTime 27\n\ne o custo no passo k \u00e9 dado por\n\n1\n\n?\n\n?\n\nn\n\n?n(k?)(tr(Pn(k?)Q) + q). (2.38)\n\nO custo total \u00e9 calculado sobre a discretiza\u00e7\u00e3o de um per\u00edodo, para sistemas peri\u00f3dicos.\n\nPara sistemas peri\u00f3dicos, a ferramenta pode tamb\u00e9m calcular a densidade espectral\n\nde todas as sa\u00eddas. Isto pode ser usado para an\u00e1lise em freq\u00fc\u00eancia do sistema em malha\n\nfechada. A densidade espectral de uma sa\u00edda y \u00e9 definida como\n\n?y(?) =\n1\n\n2?\n\n?\n?\n\nk=??\n\nry(k)e\n?j?k, (2.39)\n\nonde ry(k) \u00e9 a fun\u00e7\u00e3o de covari\u00e2ncia de y. Esta fun\u00e7\u00e3o \u00e9 computada como\n\nry(k) = E{y(t)yT (t)(t + kh)}\n= E{Cx(t)xT (t + kh)CT }\n= C?\n\n|k|\nP1(?)CT\n\n, (2.40)\n\nonde ? \u00e9 a matrix de transi\u00e7\u00e3o m\u00e9dia sobre um per\u00edodo e P1(?) \u00e9 a covari\u00e2ncia estaci-\non\u00e1ria em um n\u00f3 peri\u00f3dico. A densidade espectral retorna como um sistema linear F(z)\n\ntal que ?y(?) = F(ej?).\n\nA an\u00e1lise feita com o modelo com atraso apresentado na se\u00e7\u00e3o anterior \u00e9 feita consi-\n\nderando somente o pior caso de atraso. J\u00e1 com o Jitterbug a an\u00e1lise \u00e9 feita para casos\n\nespec\u00edficos de atrasos (ou mais precisamente, de distribui\u00e7\u00f5es de atrasos). O valor da\n\nfun\u00e7\u00e3o de custo \u00e9 utilizado como par\u00e2metro de compara\u00e7\u00e3o de desempenho e estabilidade\n\ndo sistema de controle entre os diferentes casos analisados. A estabilidade aqui citada \u00e9\n\na estabilidade no sentido quadr\u00e1tico m\u00e9dio (Mean Square Stability \u2013 MSS).\n\nUma forma simples de interpretar a an\u00e1lise com o Jitterbug \u00e9 que o desempenho e a\n\nestabilidade do sistema de controle depende tanto do valor do atraso como tamb\u00e9m da\n\nfreq\u00fc\u00eancia que ele ocorre, i.e., podem existir atrasos que deixam o sistema momentanea-\n\nmente inst\u00e1vel, por\u00e9m ele se mant\u00e9m est\u00e1vel na m\u00e9dia. Portanto, este m\u00e9todo \u00e9 menos\n\nconservador que o m\u00e9todo de an\u00e1lise com o modelo com atraso.\n\nPara cada an\u00e1lise com o Jitterbug, \u00e9 necess\u00e1rio fornecer como dado de entrada as\n\ndistribui\u00e7\u00f5es dos atrasos para cada n\u00f3 de tempo. Estas distribui\u00e7\u00f5es podem ser obtidas\n\natrav\u00e9s de experimentos ou simula\u00e7\u00f5es, como por exemplo atrav\u00e9s do TrueTime, toolbox\n\nque ser\u00e1 apresentado na pr\u00f3xima se\u00e7\u00e3o.\n\n\n\n2.2 M\u00e9todo com os Toolboxes Jitterbug e TrueTime 28\n\n2.2.2 TrueTime\n\nO TrueTime \u00e9 um toolbox para MATLAB/SIMULINK que permite a simula\u00e7\u00e3o do com-\n\nportamento temporal de um kernel multi-tarefa de tempo real executando tasks de con-\n\ntrole, sendo poss\u00edvel acrescentar alguns modelos de redes de comunica\u00e7\u00e3o.\n\nFigura 2.10: Biblioteca de blocos do TrueTime.\n\nEsta ferramenta \u00e9 composta por uma biblioteca de blocos TrueTime (Figura 2.10)\n\npara SIMULINK, que se conectam a outros blocos do SIMULINK para formar os mo-\n\ndelos TrueTime, mostrado na Figura 2.11. O bloco TT-Kernel \u00e9 dirigido a eventos e\n\nexecuta c\u00f3digos que modelam tasks. Os modelos de tasks s\u00e3o descritos por arquivos do\n\ntipo \"arquivo.m\"(como por exemplo o C\u00f3digo 2.1), chamados de code functions. O code\n\nfunction \u00e9 dividido em segmentos, e cada segmento \u00e9 composto basicamente por pequenas\n\ntarefas, como por exemplo a leitura de sinais atrav\u00e9s do conversor A/D atrav\u00e9s da fun\u00e7\u00e3o\n\nttAnalogIn(). Uma das caracter\u00edsticas dos code functions (ou das tasks) \u00e9 o seu pior\n\ncaso de tempo de execu\u00e7\u00e3o (exectime), ou simplesmente WCET1 (Worst Case Execu-\n\ntion Time). Al\u00e9m do WCET, as tasks s\u00e3o caracterizadas pelo seu per\u00edodo nominal de\n\namostragem (para tasks peri\u00f3dicas), pelo seu deadline relativo e pela sua prioridade de\n\nexecu\u00e7\u00e3o (para o caso de escalonamento por prioridades). Estes atributos s\u00e3o definidos\n\npelo usu\u00e1rio atrav\u00e9s do script de inicializa\u00e7\u00e3o do TT-Kernel, chamado de initialization\n\nscript (como por exemplo o C\u00f3digo 2.2). Nele tamb\u00e9m \u00e9 definido a pol\u00edtica de esca-\n\nlonamento de tasks utilizada por este kernel. Desta forma, as informa\u00e7\u00f5es do sistema\n\ncomputacional s\u00e3o inseridas na avalia\u00e7\u00e3o de desempenho do NCS.\n\n1O WCET \u00e9 o tempo m\u00e1ximo que uma task demora para ser executada em determinado sistema\ncomputacional.\n\n\n\n2.2 M\u00e9todo com os Toolboxes Jitterbug e TrueTime 29\n\nDos atributos listados, apenas o WCET n\u00e3o \u00e9 definido no projeto do sistema com-\n\nputacional. A estimativa do WCET \u00e9 obtida a partir de medidas do tempo decorrido\n\npara execu\u00e7\u00e3o da task em quest\u00e3o. Outra maneira de obter esta estimativa \u00e9 atrav\u00e9s\n\nde ferramentas de an\u00e1lises de WCET (SANDELL, 2004), como aiT, Bound-T, SWEET e\n\nChronos; que estimam o n\u00famero de ciclos de clock necess\u00e1rio para a execu\u00e7\u00e3o da task,\n\natrav\u00e9s do seu c\u00f3digo Assembler.\n\nu\n\nReference\nGenerator\n\nOut\n\nOutput\n\ns  +s2\n\n1000\n\nDynamic System\n\nR\n\ny\n\nu\n\nComputer\n\nr\n\nu\n\n1\n\nu\nA/D\n\nInterrupts\n\nRcv\n\nD/A\n\nSnd\n\nSchedule\n\nMonitors\n\nP\n\nTrueTime Kernel\n\nTerminator2\n\nTerminator1\n\nTerminator\n\nSchedule\n\nSchedule\n\nGround2\n\nGround1\n\n2\n\ny\n\n1\n\nR\n\nFigura 2.11: Modelo TrueTime do sistema de controle de tempo real de um sistema\ndin\u00e2mico.\n\n\n\n2.2 M\u00e9todo com os Toolboxes Jitterbug e TrueTime 30\n\nC\u00f3digo 2.1: Exemplo de code function (Pcontroller.m) para um controlador\n\nproporcional.\n\n1 function [ exectime , da ta ] = P c o n t r o l l e r ( segment , da ta )\n\n2 s w i t c h segment ,\n\n3 c a s e 1 ,\n\n4 r = t t A n a l o g I n ( 1 ) ; % L e i t u r a do s i n a l de r e f e r \u00ea n c i a\n\n5 y = t t A n a l o g I n ( 2 ) ; % L e i t u r a do s i n a l de s a \u00ed d a\n\n6 da ta . u = da ta .K ?( r?y ) ; % C \u00e1 l c u l o do s i n a l de c o n t r o l e\n7 e x e c t i m e = 0 . 0 0 2 ; % Tempo de ex ecu \u00e7\u00e3o d e s t a t a s k\n\n8 c a s e 2 ,\n\n9 ttAnalogOut ( 1 , da ta . u ) ; % Atua\u00e7\u00e3o do s i n a l de c o n t r o l e\n\n10 e x e c t i m e = ?1; % Fim da t a s k\n11 end\n\nC\u00f3digo 2.2: Exemplo de initialization script (exampleInit.m)\n\n1 function e x a m p l e I n i t ( argument )\n\n2 t t I n i t K e r n e l ( 2 , 1 , \u2019prioFP\u2019) ; % I n i c i a \u00e7 \u00e3 o do Kernel com\n\n3 % p r i o r i d a d e f i x a\n\n4 da ta . u = 0 ; % V alor es i n i c i a i s de\n\n5 da ta .K = 2 ; % v a r i \u00e1 v e i s\n\n6 p e r i o d = 0 . 1 ; % Per\u00edodo da t a s k\n\n7 p r i o = 5 ; % P r i o r i d a d e da t a s k\n\n8 t t C r e a t e P e r i o d i c T a s k ( \u2019ctrl\u2019 , o f f s e t , p e r i o d , p r i o ,\n\n9 \u2019Pcontroller\u2019 , da ta ) ; % Cria a t a s k p e r i \u00f3 d i c a\n\nPara a an\u00e1lise do sistema com rede de comunica\u00e7\u00e3o, utilizam-se os blocos de rede\n\nTrueTime. Estes blocos simulam o acesso ao meio e a transmiss\u00e3o de pacotes em uma\n\nrede local (LAN). Os protocolos de rede suportados s\u00e3o:\n\n\u2022 CSMA/CD, por exemplo Ethernet;\n\n\u2022 CSMA/AMP, por exemplo CAN ;\n\n\u2022 Round Robin, por exemplo Token Bus;\n\n\u2022 FDMA;\n\n\u2022 TDMA;\n\n\u2022 Ethernet comutada;\n\n\u2022 IEEE 802.11b/g (WLAN);\n\n\n\n2.2 M\u00e9todo com os Toolboxes Jitterbug e TrueTime 31\n\n\u2022 IEEE 802.15.4 (ZigBee).\n\n\u00c9 poss\u00edvel definir a taxa de transmiss\u00e3o, o tamanho m\u00ednimo da mensagem, os WCET\u2019s\n\ne a probabilidade de perda da mensagem durante a transmiss\u00e3o. Para o caso com rede\n\nwireless, \u00e9 poss\u00edvel estipular a pot\u00eancia de transmiss\u00e3o, o threshold do sinal receptor e o\n\nlimite de retransmiss\u00e3o.\n\nTempo\n\ni\n\ni + 0.25\n\ni + 0.50\nE\n\nst\nad\n\no\n\nEm execu\u00e7\u00e3o\n\nEm preemp\u00e7\u00e3o\n\nInativo\n\nFigura 2.12: Exemplo de um diagrama de escalonamento, que mostra os 3 estados das\ntasks (escalonamento de tasks) ou dos n\u00f3s da rede (escalonamento da rede), atrav\u00e9s dos\nn\u00edvel de amplitude i (inativo), i + 0.25 (em preemp\u00e7\u00e3o) e i + 0.50 (em execu\u00e7\u00e3o), com\n\ni = 1, . . . ,N, onde N \u00e9 o n\u00fameros de tasks ou de n\u00f3s da rede.\n\nO TrueTime fornece diagramas de escalonamento como exemplificado na Figura 2.12,\n\nnos quais s\u00e3o observados tr\u00eas estados das tasks (ou processos) e/ou dos n\u00f3s da rede, em\n\nfun\u00e7\u00e3o do tempo. Os estados inativo, em preemp\u00e7\u00e3o e em execu\u00e7\u00e3o s\u00e3o representados,\n\nrespectivamente, por n\u00edveis de amplitude i , i + 0.25 e i + 0.50, com i = 1, . . . ,N, onde N\n\n\u00e9 o n\u00famero de tasks ou de n\u00f3s da rede. No estado inativo, a task ou o n\u00f3 n\u00e3o requerem\n\nrecursos computacionais (mem\u00f3ria, CPU, meio f\u00edsico da rede); no estado de preemp\u00e7\u00e3o,\n\neles aguardam a disponibilidade dos recursos; e no estado de execu\u00e7\u00e3o, eles utilizam os\n\nrecursos. Atrav\u00e9s destes diagramas, pode-se avaliar o uso dos recursos computacionais,\n\ndetectando, por exemplo, o fen\u00f4meno de starvation2.\n\nAl\u00e9m dos diagramas, o TrueTime fornece logs3 que fornecem informa\u00e7\u00f5es sobre os\n\natrasos do sistema, que s\u00e3o utilizadas na an\u00e1lise com o Jitterbug (CERVIN et al., 2006).\n\nDesta forma, a an\u00e1lise de desempenho do NCS n\u00e3o fica restrita ao caso de atraso constante,\n\nou mesmo \u00e0 an\u00e1lise do pior caso.\n\n2Starvation ocorre quando um processo nunca \u00e9 executado (\"morre de fome\"), pois processos de\nprioridade maior sempre o impedem de ser executado (TANENBAUM, 2003).\n\n3Logs s\u00e3o registros de atividades das tasks.\n\n\n\n2.3 Exemplo Introdut\u00f3rio 32\n\n2.3 Exemplo Introdut\u00f3rio\n\nPara exemplificar e comparar os m\u00e9todos apresentados durante o cap\u00edtulo, toma-se um\n\nsistema com uma planta\n\nG(s) =\n4\n\ns2 ? 4\ne um controlador\n\nK(s) =\n0.894 104s2 + 4.21 104s + 3.586 104\n\ns3 + 88.2s2 + 3896.0s ? 137.9\n,\n\ncuja forma em tempo discreto \u00e9\n\nKd(z) =\n59.71z?1 ? 108.90z?2 + 49.45z?3\n\n1.00 ? 1.13z?1 + 0.20z?2 ? 0.07z?3\n,\n\ncom per\u00edodo de amostragem h = 30ms.\n\nUtilizando o modelo do sistema com atraso, a planta \u00e9 representada por\n\nG?d(z) =\n[\n\nC 0\n]\n\n(\n\nzI ?\n[\n\n? ?1\n\n0 0\n\n])?1 [\n\n?0\n\n0\n\n]\n\n+ D\n\nonde\n\n? =\n\n[\n\n1.002 0.120\n\n0.030 1.002\n\n]\n\n?0 =\n\n[\n\n0.0090\n\n0.0000\n\n]\n\n?1 =\n\n[\n\n0.0210\n\n0.0004\n\n]\n\n.\n\nO diagrama de Bode do sistema em malha fechada \u00e9 visto na Figura 2.13. O compor-\n\ntamento do sistema com atraso tem maior amplitude de oscila\u00e7\u00e3o, com freq\u00fc\u00eancia de\n\nresson\u00e2ncia ?n ? 8 rad/s. Utilizando a ferramenta TrueTime, \u00e9 poss\u00edvel simular o sis-\ntema composto pelo controlador discreto (Kd(z)) e pela planta cont\u00ednua (G(s)) para o\n\ncaso com e sem atraso. O resultado \u00e9 visto na Figura 2.14, que est\u00e1 de acordo com os\n\nresultados obtidos no diagrama de Bode: movimento oscilat\u00f3rio de freq\u00fc\u00eancia ?n.\n\nUtilizando o toolbox Jitterbug e considerando os casos do sistema sem atraso e com\n\natraso constante, \u00e9 poss\u00edvel obter os espectros de freq\u00fc\u00eancia dos sinais de sa\u00edda como\n\nobservado na Figura 2.15. Nota-se que este resultado apresenta certa semelhan\u00e7a com o\n\n\n\n2.3 Exemplo Introdut\u00f3rio 33\n\n10\n-1\n\n10\n0\n\n10\n1\n\n10\n2\n\n-20\n\n-15\n\n-10\n\n-5\n\n0\n\n5\n\n10\n\n15\n\n20\n\nFreq\u00fc\u00eancia [rad/s]\n\nM\nag\n\nn\nit\n\nu\nd\ne\n\n[d\nB\n\n]\n? = 0\n\n? = 21ms\n\nFigura 2.13: Diagrama de bode do sistema com ? = 0 e ? = 21ms.\n\n0 0.5 1 1.5 2 2.5 3\n0\n\n0.5\n\n1\n\n1.5\n\n2\n\n2.5\n\n0 0.5 1 1.5 2 2.5 3\n\n-20\n\n0\n\n20\n\n40\n\n60\n\nTempo [s]\n\nS\na\u00ed\n\nd\na\n\nC\non\n\ntr\nol\n\ne ? = 0\n\n? = 0\n\n? = 21ms\n\n? = 21ms\n\nFigura 2.14: Resposta no tempo do sistema com e sem atraso ? = 21ms, com a planta\ncont\u00ednua (G(s)) e o controlador discreto (Kd(z)).\n\napresentado na Figura 2.13, indicando a concord\u00e2ncia entre estes dois m\u00e9todos. Para o\n\ncaso sem atraso a fun\u00e7\u00e3o de custo tem valor J = 7.1687; e para o caso com ? = 21ms,\n\nJ = 9.9541, indicando que ambos os sistemas s\u00e3o est\u00e1veis no sentido quadr\u00e1tico m\u00e9dio\n\n(J finito), por\u00e9m o desempenho do sistema com atraso \u00e9 pior. Neste simples caso, n\u00e3o foi\n\nnecess\u00e1rio utilizar o TrueTime para obter a distribui\u00e7\u00e3o do atraso, visto que foi adotado\n\ncomo constante para permitir a compara\u00e7\u00e3o entre os m\u00e9todos. Por\u00e9m como explicado\n\nanteriormente, o Jitterbug n\u00e3o se limita a fazer an\u00e1lise somente para casos com atraso\n\nconstante.\n\n\n\n2.4 Conclus\u00e3o 34\n\n10\n-1\n\n10\n0\n\n10\n1\n\n10\n2\n\n-20\n\n-10\n\n0\n\n10\n\n20\n\n30\n\n40\n\nFreq\u00fc\u00eancia [rad/s]\n\nM\nag\n\nn\nit\n\nu\nd\ne\n\n[d\nB\n\n]\n\n? = 0\n\n? = 21ms\n\nFigura 2.15: Densidade espectral do sinal de sa\u00edda do sistema com e sem atraso\n? = 21ms, obtido atrav\u00e9s do Jitterbug.\n\n2.4 Conclus\u00e3o\n\nNeste cap\u00edtulo foram apresentados os m\u00e9todos que ser\u00e3o utilizados neste trabalho para\n\nanalisar o desempenho de sistemas de controle quando estes sofrem efeitos de atrasos\n\naleat\u00f3rios. O primeiro m\u00e9todo envolve o uso de um modelo de um sistema com atraso,\n\nque permite fazer a an\u00e1lise atrav\u00e9s das teorias cl\u00e1ssicas de controle. Embora este m\u00e9todo\n\nseja mais simples, a an\u00e1lise \u00e9 feita sempre considerando o pior caso de atraso, podendo\n\nassim ser um tanto quanto conservador. J\u00e1 o outro m\u00e9todo envolve o uso de dois toolboxes\n\n(TrueTime e Jitterbug) que, atrav\u00e9s das informa\u00e7\u00f5es do sistema computacional fornecem\n\nas distribui\u00e7\u00f5es dos atrasos aleat\u00f3rios. Estas distribui\u00e7\u00f5es s\u00e3o utilizadas na an\u00e1lise esto-\n\nc\u00e1stica de desempenho e estabilidade do sistema com atrasos aleat\u00f3rios atrav\u00e9s da teoria\n\nde MJLS. Atrav\u00e9s de um exemplo foi poss\u00edvel verificar a efic\u00e1cia e a concord\u00e2ncia entre\n\nos m\u00e9todos.\n\n\n\n35\n\n3 Redes de Comunica\u00e7\u00e3o para\n\nSistemas de Controle\n\nA arquitetura tradicional de redes de comunica\u00e7\u00e3o para sistemas de controle que vem\n\nsendo implantada durante d\u00e9cadas \u00e9 a do tipo ponto-a-ponto (peer-to-peer ), ou seja, um\n\ncabo conecta o computador do controle central a cada sensor e atuador. Entretanto\n\no aumento da complexidade destes sistemas est\u00e1 empurrando este tipo de arquitetura\n\npara o seu limite (LIAN, 2001). Assim, o sistema de controle ponto-a-ponto centralizado\n\nvem sendo substitu\u00eddo por sistemas descentralizados atrav\u00e9s de uma rede de comunica\u00e7\u00e3o\n\ncomum \u00e0 todos os seus componentes.\n\nA introdu\u00e7\u00e3o deste tipo de arquitetura pode aumentar a efici\u00eancia, a flexibilidade e\n\na confiabilidade destas aplica\u00e7\u00f5es integradas e reduzir os custos e o tempo de instala\u00e7\u00e3o,\n\nde reconfigura\u00e7\u00e3o e manuten\u00e7\u00e3o. Entretanto, esta mudan\u00e7a introduz atrasos e perdas nas\n\ntransmiss\u00f5es dos sinais de controle.\n\nOs sinais de controle em NCSs s\u00e3o transmitidos por pequenas por\u00e9m freq\u00fcentes men-\n\nsagens que trafegam entre in\u00fameros n\u00f3s da rede. Em princ\u00edpio, estas mensagens devem\n\nrespeitar os requisitos de tempo de STRs. Esta \u00e9 a principal caracter\u00edstica de redes\n\nde comunica\u00e7\u00e3o utilizadas em sistemas de controle. Em outras aplica\u00e7\u00f5es de redes de\n\ncomunica\u00e7\u00e3o (e.g., Internet), o tamanho, a periodicidade das mensagens e o tempo de\n\nenvio/recebimento n\u00e3o s\u00e3o fatores cr\u00edticos para a correta opera\u00e7\u00e3o do sistema.\n\nA ado\u00e7\u00e3o de redes de comunica\u00e7\u00e3o em sistemas de controle possibilita a distribui\u00e7\u00e3o\n\ndas fun\u00e7\u00f5es de processamento e carga computacional entre algumas pequenas unidades de\n\nprocessamento. Esta distribui\u00e7\u00e3o do processamento pode tornar o sistema mais robusto\n\nvisto que um sistema centralizado est\u00e1 sujeito \u00e0 um \u00fanico ponto de falha. Al\u00e9m disso,\n\na rede permite que o sinal proveniente de um sensor seja disponibilizado para v\u00e1rios\n\ndispositivos ao mesmo tempo sem a necessidade de duplica\u00e7\u00e3o de sensores.\n\n\n\n3 Redes de Comunica\u00e7\u00e3o para Sistemas de Controle 36\n\nhA hB hC\n\nA B C\n\nPer\u00edodo de Amostragem\n\nD\nes\n\nem\np\nen\n\nh\no\n\nMenorMaior\n\nM\nel\n\nh\nor\n\nP\nio\n\nr\n\nNCS\n\nControle Discreto\n\nControle Cont\u00ednuo\n\nSistema Inst\u00e1vel\n\nSistema Est\u00e1vel\nDesempenho N\u00e3o-aceit\u00e1vel\n\nSistema Est\u00e1vel\nDesempenho Aceit\u00e1vel\n\nFigura 3.1: Compara\u00e7\u00e3o de desempenho do controle para os casos de controle\ncont\u00ednuo, controle discreto e NCS em fun\u00e7\u00e3o do per\u00edodo de amostragem adotado.\n\nComo j\u00e1 visto, o objetivo principal do projeto de NCSs \u00e9 garantir que, mesmo com\n\nperdas e atrasos dos sinais de controle, o sistema atenda \u00e0s suas especifica\u00e7\u00f5es de de-\n\nsempenho, que incluem margens de fase e de ganho, m\u00e1ximo sobressinal, erro em regime,\n\nentre outros. E uma forma para atingir (parte) deste objetivo \u00e9 analisar o efeito de atrasos\n\nem NCS, como observado no Cap\u00edtulo 2.\n\nUma forma de apresentar os resultados das an\u00e1lises \u00e9 atrav\u00e9s de um gr\u00e1fico seme-\n\nlhante ao da Figura 3.1. Neste tipo de gr\u00e1fico os desempenhos do sistemas de controle\n\ns\u00e3o dados em fun\u00e7\u00e3o do per\u00edodo de amostragem adotado. Neste gr\u00e1fico, especificamente,\n\ns\u00e3o comparados tr\u00eas casos: sistema de controle em tempo cont\u00ednuo, em tempo discreto e\n\nNCS. No caso cont\u00ednuo, o desempenho do sistema de controle \u00e9 independente do per\u00edodo\n\nde amostragem. J\u00e1 para o caso discreto, percebe-se que um maior per\u00edodo de amostragem\n\ndegrada o desempenho do sistema de controle, podendo levar o sistema para regi\u00e3o de\n\ninstabilidade. No caso de NCS, um maior per\u00edodo de per\u00edodo de amostragem tamb\u00e9m\n\ndegrada o desempenho do sistema de controle. Por\u00e9m, com um menor per\u00edodo de amos-\n\ntragem aumenta-se a carga na rede, aumentando assim a probabilidade de perdas e de\n\natrasos dos sinais de controle. Desta forma, um menor per\u00edodo de amostragem tamb\u00e9m\n\ndegrada o desempenho do sistema de controle.\n\nPara realizar este tipo de an\u00e1lise, \u00e9 necess\u00e1rio conhecer os fatores que impactam o\n\ndesempenho do sistema de controle e como variam em fun\u00e7\u00e3o da rede de comunica\u00e7\u00e3o\n\nadotada. Este \u00e9 o objetivo de trabalhos como Montestruque e Antsaklis (2005a), Lian\n\n(2001) e Nilsson (1998) que analisam este comportamento atrav\u00e9s de modelos de redes de\n\ncomunica\u00e7\u00e3o. Os fatores que impactam no desempenho de sistemas de controle incluem:\n\n\n\n3.1 Candidatas \u00e0 rede de controle 37\n\n\u2022 o atraso para acesso ao meio \u2013 tempo necess\u00e1rio para que o dispositivo tenha acesso\nao meio f\u00edsico da rede;\n\n\u2022 o tempo de transmiss\u00e3o \u2013 tempo necess\u00e1rio para que a mensagem percorra o meio\nf\u00edsico, que depende da velocidade de transmiss\u00e3o e do tamanho das mensagens;\n\n\u2022 porcentagem de colis\u00f5es \u2013 rela\u00e7\u00e3o entre o n\u00famero de mensagens que acessam o meio\nf\u00edsico ao mesmo tempo e o n\u00famero total de mensagens;\n\n\u2022 porcentagem de perda de mensagens \u2013 rela\u00e7\u00e3o entre o n\u00famero de mensagens que\nn\u00e3o s\u00e3o transmitidas com sucesso e o n\u00famero total de mensagens.\n\nPara sistemas de controle, as candidatas \u00e0 rede de comunica\u00e7\u00e3o precisam basicamente\n\natender a dois crit\u00e9rios principais: atrasos limitados e garantia de transmiss\u00e3o. Ou seja,\n\nas mensagens devem ser transmitidas com sucesso em um tempo limitado. A perda de\n\nmensagens e/ou atrasos na transmiss\u00e3o deterioram o desempenho de NCSs e at\u00e9 podem\n\ntorn\u00e1-los inst\u00e1veis (WALSH et al., 2002).\n\nAssim, as redes de comunica\u00e7\u00e3o podem ser classificadas como: redes de controle e redes\n\nde dados. A diferen\u00e7a entre as duas \u00e9 que a rede de controle tem requisitos de tempo\n\nreal (o tempo de resposta pr\u00e9-determinado deve ser obedecido) (LIAN, 2001). Al\u00e9m disso,\n\nem redes de controle as mensagens s\u00e3o, geralemente, pequenas (em n\u00famero de bits) e\n\nperi\u00f3dicas; diferentemente de redes de dados, cujas mensagens s\u00e3o, geralmente, grandes\n\n(em n\u00famero de bits) e aperi\u00f3dicas. O objetivo deste cap\u00edtulo \u00e9 apresentar as principais\n\ncandidatas a rede de controle (Ethernet, ControlNet e DeviceNet) mostrando as vantagens\n\ne as desvantagens de sua implementa\u00e7\u00e3o em NCSs, na Se\u00e7\u00e3o 3.1. Na Se\u00e7\u00e3o 3.2, s\u00e3o\n\ncomparados par\u00e2metros relevantes para NCSs destas poss\u00edveis candidatas.\n\n3.1 Candidatas \u00e0 rede de controle\n\nAs principais candidatas \u00e0 rede de comunica\u00e7\u00e3o para NCSs consideradas neste trabalho s\u00e3o\n\naquelas cuja implementa\u00e7\u00e3o em sistemas de controle tem sido bem sucedida nos \u00faltimos\n\nanos, a saber: Ethernet, ControlNet e DeviceNet. \u00c9 importante salientar que n\u00e3o est\u00e3o\n\nsendo desconsiderados outros tipos de rede para uso em sistemas de controle, apenas\n\nconstata-se que os tr\u00eas tipos citados s\u00e3o os mais aplicados.\n\n\n\n3.1 Candidatas \u00e0 rede de controle 38\n\n3.1.1 Ethernet\n\nA Ethernet \u00e9 tida como a solu\u00e7\u00e3o mais pr\u00e1tica para NCSs devido ao seu baixo custo, a sua\n\nflexibilidade (e.g., facilidade de inclus\u00e3o n\u00f3s na rede) e a suas altas taxas de transmiss\u00e3o.\n\nEm contrapartida, a natureza n\u00e3o-determin\u00edstica do seu mecanismo de detec\u00e7\u00e3o de colis\u00f5es\n\n(CSMA/CD) \u00e9 sua maior desvantagem para este tipo de implementa\u00e7\u00e3o, ou seja, n\u00e3o h\u00e1\n\ngarantias (teoricamente) com rela\u00e7\u00e3o ao tempo de resposta.\n\nPortanto, se os atrasos s\u00e3o n\u00e3o-determin\u00edsticos, por que considera-se a Ethernet\n\ncomo uma candidata a rede de controle? Apesar de teoricamente os atrasos serem n\u00e3o-\n\ndetermin\u00edsticos, na pr\u00e1tica observa-se que, para redes Ethernet com poucos n\u00f3s, as altas\n\ntaxas de transmiss\u00e3o proporcionam ao sistema atrasos relativamente pequenos (OTANEZ\n\net al., 2002).\n\nDado que neste tipo de rede, para cada colis\u00e3o os n\u00f3s esperam um tempo aleat\u00f3rio\n\npara reenviar as mensagens, \u00e9 natural relacionar o aumento do n\u00famero de colis\u00f5es (de-\n\ncorrente de um aumento do tr\u00e1fego) com maiores atrasos e, conseq\u00fcentemente, com pior\n\ndesempenho do sistema de controle. O trabalho de (OTANEZ et al., 2002) mostra atrav\u00e9s\n\nde rela\u00e7\u00f5es emp\u00edricas que os atrasos s\u00e3o diretamente proporcionais a taxa de colis\u00e3o na\n\nrede. E da mesma forma, este mesmo trabalho tamb\u00e9m mostra que, para pequenas cargas\n\nna rede, o desempenho do sistema de controle (medido pelo crit\u00e9rio IAE) \u00e9 diretamente\n\nproporcional ao uso da rede (medido em rela\u00e7\u00e3o \u00e0 sua largura de banda).\n\nAssim conclui-se que o uso da Ethernet em NCSs \u00e9 poss\u00edvel, mesmo que os atrasos\n\nenvolvidos sejam de car\u00e1ter n\u00e3o-determin\u00edsticos. Para tanto, \u00e9 necess\u00e1rio que os atrasos\n\nsejam minimizados atrav\u00e9s do uso mais eficiente da banda da rede e da diminui\u00e7\u00e3o das\n\ncolis\u00f5es das mensagens no meio. Para isto, recomenda-se que o uso da rede n\u00e3o ultrapasse\n\n25% da sua largura de banda (OTANEZ et al., 2002), em sistemas de controle. Outra\n\npossibilidade \u00e9 utilizar a chamada Ethernet Comutada (Switched Ethernet) que permite\n\numa conex\u00e3o direta entre o n\u00f3 emissor e o n\u00f3 receptor, eliminando o problema de colis\u00f5es\n\n(KAPLAN, 2001).\n\n3.1.2 ControlNet\n\nA rede do tipo ControlNet \u00e9 tida como determin\u00edstica pois o tempo de espera de um n\u00f3\n\npara envio da mensagem tem um limite m\u00e1ximo. Este tipo de rede utiliza o mecanismo\n\nde detec\u00e7\u00e3o de colis\u00e3o token bus, onde o n\u00f3 com o token transmite a mensagem at\u00e9 que\n\n\n\n3.1 Candidatas \u00e0 rede de controle 39\n\nesta acabe ou at\u00e9 que o seu per\u00edodo de transmiss\u00e3o acabe. Ent\u00e3o o n\u00f3 passa o token ao\n\nseu sucessor l\u00f3gico (n\u00e3o necessariamente seu \"vizinho\"f\u00edsico). Se o n\u00f3 n\u00e3o tem nenhuma\n\nmensagem para transmitir, ele apenas passa o token para seu sucessor l\u00f3gico. Neste tipo\n\nde rede n\u00e3o ocorrem colis\u00f5es, visto que s\u00f3 um n\u00f3 pode transmitir de cada vez.\n\nPortanto neste caso os atrasos s\u00e3o limitados, tornando a rede determin\u00edstica. E mesmo\n\nque o protocolo token bus seja eficiente e determin\u00edstico para altas cargas na rede, para\n\nbaixas cargas o desempenho da rede \u00e9 menor quando comparado ao desempenho de redes\n\ncom outros protocolos. Em geral, quando h\u00e1 muitos n\u00f3s na rede, uma porcentagem alta\n\ndo tempo de rede (tempo do processo de transmiss\u00e3o de mensagens) \u00e9 consumida no\n\nprocesso de transi\u00e7\u00e3o do token entre os n\u00f3s, para os casos de baixas cargas (KOUBIAS;\n\nPAPADOPOULOS, 1995). Outro problema \u00e9 a transmiss\u00e3o de mensagens grandes, visto\n\nque estas para serem totalmente transmitidas precisam que o token passe algumas vezes\n\npelo n\u00f3 emissor, aumentando consideravelmente o tempo de rede.\n\n3.1.3 DeviceNet (CAN)\n\nCAN \u00e9 um protocolo de comunica\u00e7\u00e3o serial desenvolvido principalmente para aplica\u00e7\u00f5es\n\nna ind\u00fastria automotiva por\u00e9m oferece bom desempenho em aplica\u00e7\u00f5es industriais de\n\ntempo-cr\u00edtico (LIAN; MOYNE; TILBURY, 2002). Este protocolo \u00e9 otimizado para pequenas\n\nmensagens e usa o mecanismo CSMA/AMP para controle de acesso ao meio. Neste caso,\n\no protocolo \u00e9 orientado a mensagem, e cada mensagem tem uma prioridade espec\u00edfica que\n\n\u00e9 usada para ordenar o acesso ao meio em caso de colis\u00f5es. No caso de dois n\u00f3s iniciarem\n\na transmiss\u00e3o de suas mensagens ao mesmo tempo, aquele que tiver maior prioridade vai\n\ndar seguimento no processo de envio. Com isso a transmiss\u00e3o n\u00e3o \u00e9 interrompida.\n\nA rede do tipo DeviceNet \u00e9 de custo relativamente baixo e tem sido bem aceita em\n\naplica\u00e7\u00f5es industriais (LIAN; MOYNE; TILBURY, 2002). Al\u00e9m disso, a vantagem principal\n\ndeste tipo de rede para NCSs \u00e9 o seu determinismo, visto que para mensagens de alta\n\nprioridade, o atraso na transmiss\u00e3o pode ser garantido. Por\u00e9m, a maior desvantagem\n\nda rede CAN \u00e9 sua baixa taxa de transmiss\u00e3o (m\u00e1ximo 500Kbps), que \u00e9 menor do que\n\noutros tipos de rede. Outro fator limitante para a sua aplica\u00e7\u00e3o \u00e9 a dist\u00e2ncia f\u00edsica m\u00e1xima\n\npermitida entre os n\u00f3s (menor do que em outros tipos de rede). E este tipo de rede n\u00e3o\n\n\u00e9 recomendada para transmiss\u00e3o de grandes mensagens.\n\n\n\n3.2 Compara\u00e7\u00e3o entre as Candidatas 40\n\n3.2 Compara\u00e7\u00e3o entre as Candidatas\n\nAlguns par\u00e2metros das candidatas s\u00e3o apresentados na Tabela 3.1. Segundo o trabalho\n\nde Lian (2001), para pequenas mensagens (menor que 10bytes) a rede Ethernet precisa\n\nde mais overhead 1 do que ControlNet e DeviceNet. Entretanto, para mensagens longas,\n\nDeviceNet requer mais bits para transmitir a mesma informa\u00e7\u00e3o.\n\nEthernet ControlNet DeviceNet\nTx. de transmiss\u00e3o [Mbps] 10 5 0.5\n\nM\u00e1x. dist\u00e2ncia [m] 2500 1000 100\nM\u00e1x. tamanho [byte] 1500 504 8\nM\u00e1x. n\u00famero de n\u00f3s > 1000 99 64\n\nTabela 3.1: Par\u00e2metros das redes de controle.\n\nO referido trabalho tamb\u00e9m apresenta o tempo de rede em fun\u00e7\u00e3o do tamanho das\n\nmensagens. Conclui-se que o tempo de rede para DeviceNet \u00e9 maior do que nas outras\n\nredes, independentemente do tamanho das mensagens. Isto pode ser explicado pela sua\n\nbaixa taxa de transmiss\u00e3o. Para pequenas mensagens, o tempo de rede para ControlNet\n\n\u00e9 menor que para Ethernet. E esta situa\u00e7\u00e3o se inverte para mensagens maiores. Isto \u00e9\n\njustificado pelo tamanho dos respectivos overheads.\n\n3.3 Conclus\u00e3o\n\nO aumento da complexidade de sistemas de controle distribu\u00eddos cria necessidades para a\n\nimplanta\u00e7\u00e3o de novas solu\u00e7\u00f5es de rede de comunica\u00e7\u00e3o (diferentes de P2P) que aumentam\n\na efici\u00eancia, a flexibilidade, a confiabilidade, a robustez (contra falhas de hardware), etc\n\ndos sistemas de controle. Por\u00e9m, como visto ao longo deste cap\u00edtulo, para implementa\u00e7\u00e3o\n\nem NCSs, as redes de comunica\u00e7\u00e3o (redes de controle) devem atender \u00e0 requisitos de\n\ntempo real, ou seja, o tempo de resposta pr\u00e9-determinado deve ser obedecido.\n\nNeste cap\u00edtulo foram descritos tr\u00eas poss\u00edveis tipos de rede para NCSs: Ethernet,\n\nControlNet e DeviceNet. Cada qual com suas vantagens e desvantagens. Um resultado\n\npr\u00e1tico visto foi o uso da Ethernet em NCSs, mesmo n\u00e3o sendo considerada (teoricamente)\n\numa rede de comunica\u00e7\u00e3o determin\u00edstica. E comparou-se par\u00e2metros relevantes para NCS\n\n1A informa\u00e7\u00e3o que acompanhada uma mensagem na rede para garantir sua transfer\u00eancia sem erros\npara destino desejado.\n\n\n\n3.3 Conclus\u00e3o 41\n\ndas tr\u00eas candidatas: taxa de transmiss\u00e3o, m\u00e1xima dist\u00e2ncia entre n\u00f3s, tamanho m\u00e1ximo\n\ndos pacotes e n\u00famero m\u00e1ximo de n\u00f3s. Portanto, com estes dados pode-se avaliar qual\n\ntipo de rede \u00e9 melhor para cada situa\u00e7\u00e3o.\n\n\n\n42\n\n4 Estudo de Caso\n\nNormalmente, o controlador \u00e9 projetado e analisado em tempo cont\u00ednuo. Atendendo\n\naos requisitos, o controlador \u00e9 discretizado e analisado atrav\u00e9s de simula\u00e7\u00f5es. Nestas\n\nsimula\u00e7\u00f5es o sistema de controle discreto \u00e9 considerado ideal, i.e., o ciclo de controle\n\n(amostragem, c\u00e1lculo do sinal de controle e atua\u00e7\u00e3o) \u00e9 executado instantaneamente no\n\nmomento que a amostragem \u00e9 efetuada. Esta pode ser uma aproxima\u00e7\u00e3o v\u00e1lida para\n\nsistemas onde o tempo de execu\u00e7\u00e3o do ciclo \u00e9 pequeno quando comparado ao seu per\u00edodo\n\nde amostragem, de forma que n\u00e3o haja risco de perda de desempenho do sistema de\n\ncontrole.\n\nPor\u00e9m, como observado no Cap\u00edtulo 2, existem casos em que \u00e9 necess\u00e1rio considerar\n\neste tempo de execu\u00e7\u00e3o no projeto do sistema de controle. O trabalho de Lian, Moyne e\n\nTilbury (2002) mostra a exist\u00eancia de uma rela\u00e7\u00e3o de compromisso entre o desempenho\n\ndo controlador e o desempenho do sistema computacional, ambas em fun\u00e7\u00e3o do per\u00edodo\n\nde amostragem nominal h. Um maior h tende a diminuir a carga computacional, pro-\n\nmovendo um melhor desempenho do sistema computacional. E um aumento no valor de\n\nh tende a degradar o desempenho do controlador discreto. Portanto no desenvolvimento\n\ndo sistema de controle computadorizado, esta rela\u00e7\u00e3o de compromisso deve ser levada em\n\nconsidera\u00e7\u00e3o na escolha do per\u00edodo de amostragem nominal.\n\nO objetivo deste cap\u00edtulo \u00e9, atrav\u00e9s de um exemplo, mostrar esta rela\u00e7\u00e3o de com-\n\npromisso atrav\u00e9s dos m\u00e9todos apresentados no Cap\u00edtulo 2. Para isso, na Se\u00e7\u00e3o 4.1 \u00e9\n\napresentado o modelo da planta e o controlador PID, assim como sua representa\u00e7\u00e3o em\n\nequa\u00e7\u00f5es de diferen\u00e7as. Na Se\u00e7\u00e3o 4.2 \u00e9 apresentada a an\u00e1lise com modelo com atraso.\n\nNas Se\u00e7\u00f5es 4.3 e 4.4, o sistema \u00e9 analisado atrav\u00e9s dos toolboxes Jitterbug e TrueTime.\n\nNa Se\u00e7\u00e3o 4.5 s\u00e3o apresentadas as conclus\u00f5es obtidas com as an\u00e1lises realizadas ao longo\n\ndo cap\u00edtulo.\n\n\n\n4.1 O Sistema 43\n\n4.1 O Sistema\n\nNeste estudo de caso ser\u00e1 analisado o controle de velocidade de rota\u00e7\u00e3o de um motor de\n\ncorrente cont\u00ednua representado por\n\nG(s) =\n1.5\n\ns2 + 0.6s + 4.55\n=\n\n5\n\n(s ? (?0.3 + i2.11))(s ? (?0.3 ? i2.11))\n, (4.1)\n\ncuja resposta no tempo para uma entrada degrau \u00e9 dada na Figura 4.1.\n\n0 2 4 6 8 10 12 14 16 18\n0\n\n0.1\n\n0.2\n\n0.3\n\n0.4\n\n0.5\n\n0.6\n\n0.7\n\n?\n[r\na\nd\n/\ns\n]\n\nTempo[s]\n\nFigura 4.1: Resposta do motor CC para uma entrada degrau unit\u00e1rio.\n\n\u00c9 adotado para este sistema um controlador do tipo PID, cujo diagrama de blocos \u00e9\n\napresentado na Figura 4.2.\n\n+\n\n-\n\n+\n\n-\n\n?ref (s) u(s) ?(s)\nPI(s)\n\nD(s)\n\nG(s)\n\nFigura 4.2: Diagrama de implementa\u00e7\u00e3o do controlador PID adotado, onde ?ref (s) \u00e9 o\nsinal de refer\u00eancia, u(s) \u00e9 o sinal de controle, ?(s) \u00e9 o sinal de sa\u00edda, PI(s) \u00e9 o termo\n\nproporcional e integral do controlador e D(s) e o termo derivativo do controlador.\n\nO sistema portanto \u00e9 descrito por\n\n?(s)\n\n?ref (s)\n=\n\nG(s)PI(s)\n\n1 + G(s)[PI(s) + D(s)]\n, (4.2)\n\n\n\n4.1 O Sistema 44\n\nonde PI(s) refere-se ao termo proporcional e integral do controlador dado por\n\nPI(s) = K\n\n(\n\n1 +\n1\n\nTis\n\n)\n\n, (4.3)\n\nD(s) refere-se ao termo derivativo dado por\n\nD(s) =\nKTds\n\n1 + Tds\nN\n\n, (4.4)\n\nenquanto que a fun\u00e7\u00e3o de malha aberta \u00e9 dada por\n\nL(s) =\nG(s)PI(s)\n\n1 + G(s)D(s)\n. (4.5)\n\nPara obter um sistema com amortecimento supercr\u00edtico e com uma resposta relativa-\n\nmente r\u00e1pida, adota-se:\n\n\u2022 K = 72,\n\n\u2022 Ti = 4,\n\n\u2022 Td = 0.16,\n\n\u2022 N = 32.\n\nDesta forma, o sistema apresenta margens de ganho Kg = ? e de fase ? = 68.5?. A\nresposta do sistema para entrada degrau no dom\u00ednio do tempo (Figura 4.3) mostra que o\n\nsistema atende aos requisitos, apresentando um tempo de subida1 Tr ? 0.26s.\n\nA representa\u00e7\u00e3o do controlador PID em tempo discreto atrav\u00e9s atrav\u00e9s de equa\u00e7\u00f5es\n\nde diferen\u00e7as (\u00c5STR\u00f6M; H\u00e4GGLUND, 1995) \u00e9 dado por\n\nPk = Kek\n\nIk+1 = Ik + bi1ek+1 + bi2ek\n\nDk = adDk?1 ? bd(yk ? yk?1)\nuk = Pk + Ik + Dk.\n\n(4.6)\n\nNestas equa\u00e7\u00f5es, Pk, Ik e Dk representam as a\u00e7\u00f5es proporcional, integral e derivativa,\n\nrespectivamente, do controlador no instante k. Os coeficientes bi1, bi2, ad e bd s\u00e3o dados\n\nem fun\u00e7\u00e3o do per\u00edodo de amostragem h; dos par\u00e2metros K, Ti, Td e N; e do m\u00e9todo\n\n1Geralmente, para sistemas superamortecidos, o tempo de subida \u00e9 definido como o tempo requerido\npara que a resposta passe de 10% a 90% do seu valor final.\n\n\n\n4.1 O Sistema 45\n\n0 0.1 0.2 0.3 0.4 0.5 0.6\n0\n\n0.2\n\n0.4\n\n0.6\n\n0.8\n\n1\n\n1.2\n\n1.4\n\n \n\n \n?\n\n[r\na\nd\n/\ns\n]\n\nTempo[s]\n\nFigura 4.3: Resposta do sistema em malha fechada dado pela Equa\u00e7\u00e3o (4.2) para uma\nentrada degrau.\n\nDiferen\u00e7as\npara frente\n\nDiferen\u00e7as\npara tr\u00e1s\n\nTustin\n\nbi1 0\nKh\nTi\n\nKh\n2Ti\n\nbi2\nKh\nTi\n\n0 Kh\n2Ti\n\nad 1 ? N hTd\nTd\n\nTd+N h\n2Td?N h\n2Td+N h\n\nbd KN\nKTdN\nTd+N h\n\n2KTdN\n2Td+N h\n\nTabela 4.1: Coeficientes do controlador PID em tempo discreto, dados em fun\u00e7\u00e3o do\nm\u00e9todo de aproxima\u00e7\u00e3o.\n\nde aproxima\u00e7\u00e3o utilizado (diferen\u00e7as para tr\u00e1s, diferen\u00e7as para frente, Tustin, etc.), como\n\nobservado na Tabela 4.1. O sinal de refer\u00eancia \u00e9 rk e o sinal de erro \u00e9 dado por ek = rk ?yk.\n\nO pr\u00f3ximo passo para a implementa\u00e7\u00e3o de controlador em um sistema digital \u00e9 a esco-\n\nlha do per\u00edodo de amostragem h para o ciclo de controle. Existem diversas regras pr\u00e1ticas\n\npara esta escolha. Uma delas apresentada por \u00c5str\u00f6m e H\u00e4gglund (1995), estabelece que\n\no per\u00edodo de amostragem h \u00e9 tal que\n\nh =\nTr\nNr\n, (4.7)\n\nonde Nr \u00e9 o n\u00famero de ciclos de controle por tempo de subida, e pertence ao intervalo de\n\n4 a 10 ciclos. Para este caso, esta regra pr\u00e1tica fornece o intervalo [0.026, 0.065]s para a\n\nescolha do per\u00edodo de amostragem. Nesta escolha nota-se que existe um limite m\u00e1ximo\n\ne um limite m\u00ednimo para h. Isto porque um per\u00edodo de amostragem longo prejudica a\n\nreconstru\u00e7\u00e3o do sinal amostrado deteriorando o desempenho do controlador; e um per\u00edodo\n\n\n\n4.2 An\u00e1lise com Modelo do Sistema com Atraso 46\n\nde amostragem muito curto aumenta a carga de utiliza\u00e7\u00e3o do sistema computacional\n\n(\u00c5STR\u00f6M; WITTENMARK, 1997), aumentando a probabilidade de atrasos na realiza\u00e7\u00e3o\n\nde suas tarefas (WITTENMARK; NILSSON; TORNGREN, 1995). Deste fato, conclui-se que\n\nh\u00e1 uma rela\u00e7\u00e3o de compromisso entre desempenho do controlador e o desempenho do\n\nsistema computacional. Por\u00e9m, este limite m\u00ednimo dado pela regra pr\u00e1tica n\u00e3o considera\n\ndiretamente as informa\u00e7\u00f5es do sistema computacional sobre o qual o controlador ser\u00e1\n\nimplementado, podendo ser uma escolha conservadora ou inadequada. Um exemplo deste\n\nfato pode ser observado no trabalho de Cervin et al. (2006), onde para alguns sistemas, o\n\nper\u00edodo de amostragem m\u00ednimo dado pela regra pr\u00e1tica torna o sistema inst\u00e1vel.\n\nConsiderando que este sistema de controle discreto seja ideal, com per\u00edodo de amos-\n\ntragem h = 0.05s e sem a presen\u00e7a de atrasos, a sua simula\u00e7\u00e3o atrav\u00e9s do SIMULINK\n\noferece a sa\u00edda mostrada na Figura 4.4. Observa-se que o sistema se comporta da maneira\n\nespecificada no projeto. Portanto, neste caso o projeto do sistema de controle poderia\n\nser considerado satisfat\u00f3rio. Por\u00e9m, como se mostrar\u00e1 nas pr\u00f3ximas se\u00e7\u00f5es, a aproxima-\n\n\u00e7\u00e3o por um sistema ideal pode n\u00e3o ser suficiente para garantir um bom desempenho do\n\nsistema de controle computadorizado.\n\n0 1 2 3 4 5 6 7 8 9 10\n?1\n\n?0.5\n\n0\n\n0.5\n\n1\n\n \n\n \n\n \n\n0 1 2 3 4 5 6 7 8 9 10\n?200\n\n?100\n\n0\n\n100\n\n200\n\nRefer\u00eancia\nSa\u00edda\n\nTempo[s]\n\nTempo[s]\n\n?\n[r\na\nd\n/\ns\n]\n\nV\na\n[V\n\n]\n\nFigura 4.4: Sa\u00edda ? e sinal de controle Va para o sistema de controle discreto ideal.\n\n4.2 An\u00e1lise com Modelo do Sistema com Atraso\n\nAssim como o modelo ideal, o modelo do sistema com atraso \u00e9 uma aproxima\u00e7\u00e3o do sis-\n\ntema real pois ele tamb\u00e9m considera que a amostragem ocorre em um tempo infinitesimal\n\ne exatamente nos instantes de amostragem kh. A diferen\u00e7a entre os modelos est\u00e1 no\n\n\n\n4.2 An\u00e1lise com Modelo do Sistema com Atraso 47\n\natraso introduzido para representar o tempo decorrido entre o c\u00e1lculo do sinal de controle\n\ne sua atua\u00e7\u00e3o no sistema, como mostrado na Figura 2.7.\n\nA partir da Equa\u00e7\u00e3o (4.2) e do modelo da planta com atraso\n\nGd(z) =\n[\n\nC 0\n]\n\n[\n\nzI ?\n[\n\n? ?0\n\n0 0\n\n]]?1 [\n\n?0\n\nI\n\n]\n\n, (4.8)\n\ntem-se a fun\u00e7\u00e3o de transfer\u00eancia do sistema em malha fechada em tempo discreto com\n\natraso\n\nGdcl(z) =\nGd(z)PI(z)\n\n1 + Gd(z)[PI(z) + D(z)]\n, (4.9)\n\nonde PId(z) e Dd(z) s\u00e3o as fun\u00e7\u00f5es de transfer\u00eancia que comp\u00f5em o controlador PID em\n\ntempo discreto. Com esta fun\u00e7\u00e3o de transfer\u00eancia, s\u00e3o obtidos os diagramas de Bode em\n\ntempo discreto, ilustrados na Figura 4.5. Foram considerados tr\u00eas casos:\n\n\u2022 h = 0.05s sem atraso;\n\n\u2022 h = 0.05s com atraso d = 0.01s (d = 0.20h);\n\n\u2022 h = 0.05s com atraso d = 0.03s (d = 0.60h).\n\nNestes diagramas observa-se que conforme o atraso aumenta o sistema em malha fechada\n\nadquire um comportamento mais oscilat\u00f3rio; e para o caso com d = 0.03s o sistema apre-\n\nsenta uma freq\u00fc\u00eancia de resson\u00e2ncia ?r ? 21.0 rad/s. Utilizando o modelo SIMULINK\nda Figura 4.6, onde \u00e9 introduzido um atraso de transporte na entrada da planta, estes\n\ncasos s\u00e3o simulados e os resultados s\u00e3o mostrados na Figura 4.7. Nota-se que, assim como\n\nesperado, para um tempo de execu\u00e7\u00e3o do ciclo de controle (ou atraso) pequeno (d = 0.01s)\n\nem rela\u00e7\u00e3o ao seu per\u00edodo de amostragem (h = 0.05s) o sistema se comporta de forma\n\nsemelhante ao sistema dito ideal (sem atraso); e para o caso com d = 0.03s, o sistema\n\noscila na freq\u00fc\u00eancia natural amortecida.\n\nPara fazer a an\u00e1lise em freq\u00fc\u00eancia do sistema para diferentes per\u00edodos de amostragem\n\ncom alguns casos de atraso, parte-se das Equa\u00e7\u00f5es (2.11), (2.12), resultando na fun\u00e7\u00e3o de\n\nmalha aberta em tempo discreto\n\nLd(z) =\nGd(z)PI(z)\n\n1 + Gd(z)D(z)\n.\n\nCom esta fun\u00e7\u00e3o de malha aberta, s\u00e3o obtidos os diagramas de Nyquist em tempo discreto,\n\nilustrados na Figura 4.8. Nele s\u00e3o apresentados os resultados para os casos:\n\n\n\n4.2 An\u00e1lise com Modelo do Sistema com Atraso 48\n\n-50\n\n-40\n\n-30\n\n-20\n\n-10\n\n0\n\n10\n\n20\n\n10\n1\n\n10\n2\n\n-540\n\n-450\n\n-360\n\n-270\n\n-180\n\n-90\n\n0\n\n Freq\u00fc\u00eancia [rad/s]\n\nM\nag\n\nn\nit\n\nu\nd\ne\n\n[d\nB\n\n]\nF\nas\n\ne\n[?\n\n]\n\nh = 0.05s sem atraso\nh = 0.05s e d = 0.20h\nh = 0.05s e d = 0.60h\n\nFigura 4.5: Diagramas de Bode obtido atrav\u00e9s da fun\u00e7\u00e3o de transfer\u00eancia Gdcl(z) com\no h = 0.05s e alguns casos de atrasos. Observa-se tamb\u00e9m no diagrama a freq\u00fc\u00eancia de\n\nNyquist (metade da freq\u00fc\u00eancia de amostragem).\n\nr, y\nReferencia\n\nReconstrutor \n\nde ordem zero\n\nPI (z)\n\n_ PI _d.num {1}\n\n_ PI _d.den {1} (\n\nMotor DC\n\nG.num {1}(s)\n\nG. den {1}(s)\n\nDelay de \n\ntransporte\n\nTi\n\nD(z)\n\n_ D_ d. num {1} (\n\n_ D_ d.den {1}(\n\nConstant\n\ndelay\n\nPID(z)\n\natraso G(s)\n\nFigura 4.6: Modelo SIMULINK do sistema com atraso. O atraso \u00e9 representado por\num atraso de transporte na entrada da planta com um reconstrutor de ordem zero.\n\n0 1 2 3 4 5 6 7 8 9 10\n?1.5\n\n?1\n\n?0.5\n\n0\n\n0.5\n\n1\n\n1.5\n\n \n\n \n\n \n\n?\n[r\na\nd\n/\ns\n]\n\nTempo[s]\n\nRefer\u00eancia\nh = 0.05s sem atraso\nh = 0.05s e d = 0.01s\nh = 0.05s e d = 0.03s\n\nFigura 4.7: Resultado da simula\u00e7\u00e3o com o modelo SIMULINK da Figura 4.6 para os\ncasos com h = 0.05s e atrasos d = 0, 0.20h e 0.60h.\n\n\n\n4.2 An\u00e1lise com Modelo do Sistema com Atraso 49\n\n\u2022 h = 0.026s sem atraso;\n\n\u2022 h = 0.026s com atraso d = 0.01s;\n\n\u2022 h = 0.026s com atraso d = 0.03s;\n\n\u2022 h = 0.05s sem atraso;\n\n\u2022 h = 0.05s com atraso d = 0.01s;\n\n\u2022 h = 0.05s com atraso d = 0.03s.\n\nOs valores aqui adotados para o per\u00edodo de amostragem foram obtidos pela regra pr\u00e1-\n\ntica dada pela Equa\u00e7\u00e3o (4.7). A partir destes diagramas pode-se afirmar que o caso com\n\nh = 0.05s e d = 0.01s apresenta um melhor desempenho do que o caso com h = 0.026s\n\ne d = 0.03s. A resposta no tempo para estes dois casos s\u00e3o observados na Figura 4.9,\n\ncorroborando com a an\u00e1lise em freq\u00fc\u00eancia. Ou seja, mostra-se que um sistema de controle\n\nque apresenta um per\u00edodo de amostragem maior (no caso, h = 0.05s) pode ter um desem-\n\npenho melhor quando comparado ao caso de com um per\u00edodo de amostragem menor (no\n\ncaso, h = 0.026s), dependendo do atraso presente neste sistema.\n\n-1 -0.5 0 0.5\n-1\n\n-0.8\n\n-0.6\n\n-0.4\n\n-0.2\n\n0\n\n0.2\n\n0.4\n\n0.6\n\n0.8\n\n1\n\nEixo Real \n\nE\nix\n\no\n \n\nh = 0.026s sem atraso\n\nh = 0.026s com atraso d = 0.01s\n\nh = 0.026s com atraso d = 0.03s\n\nh = 0.05s sem atraso\n\nh = 0.05s com atraso d = 0.01s\n\nh = 0.05s com atraso d = 0.03s\n\nFigura 4.8: Diagramas de Nyquist da fun\u00e7\u00e3o de malha aberta Ld(z) para 6 situa\u00e7\u00f5es\ndistintas.\n\n\n\n4.3 Simula\u00e7\u00e3o com o TrueTime 50\n\n0 1 2 3 4 5 6 7 8 9 10\n?1.5\n\n?1\n\n?0.5\n\n0\n\n0.5\n\n1\n\n1.5\n\n \n\n \n\n \n\n?\n[r\na\nd\n/\ns\n]\n\nTempo[s]\n\nRefer\u00eancia\nh = 0.026s e d = 0.03s\nh = 0.05s e d = 0.01s\n\nFigura 4.9: Sa\u00eddas do sistema para h = 0.05s e d = 0.01s e para h = 0.026s e\nd = 0.03s.\n\n4.3 Simula\u00e7\u00e3o com o TrueTime\n\nNa se\u00e7\u00e3o anterior foi utilizado um modelo de sistema com atraso na an\u00e1lise em freq\u00fc\u00eancia\n\nde um sistema de controle computadorizado. Adotou-se como hip\u00f3tese que o tempo entre\n\no in\u00edcio e o fim do ciclo de controle \u00e9 definido como uma atraso constante. Por\u00e9m, sob o\n\ncontexto de NCS esta hip\u00f3tese simplificadora podem n\u00e3o ser suficiente (NILSSON, 1998).\n\nNesta se\u00e7\u00e3o mostrar-se-\u00e1 como a presen\u00e7a de atrasos aleat\u00f3rios influencia no desempe-\n\nnho do NCS, concluindo que existe uma rela\u00e7\u00e3o de compromisso entre o desempenho\n\ndo sistema de controle e o desempenho sistema computacional. Para tanto utiliza-se a\n\nferramenta TrueTime e o modelo de NCS observado na Figura 4.10.\n\nMotor\n\nControlador\nN\u00f3\n\nExtra\n\nVa ?\n\n1 task\nperi\u00f3dica\n\n1 task\naperi\u00f3dica\n\n1 task\naperi\u00f3dica\n\n1 task\nperi\u00f3dica\n\n1 task\nperi\u00f3dica\n\nAtuador Sensor\n\nRede de comunica\u00e7\u00e3o\n\nFigura 4.10: Modelo de NCS utilizado nesta se\u00e7\u00e3o.\n\nNesta se\u00e7\u00e3o, o ciclo de controle \u00e9 composto por uma seq\u00fc\u00eancia de tr\u00eas etapas:\n\n\n\n4.3 Simula\u00e7\u00e3o com o TrueTime 51\n\n\u2022 amostragem (ou sensoriamento) e transmiss\u00e3o pela rede de comunica\u00e7\u00e3o;\n\n\u2022 c\u00e1lculo do sinal de controle e transmiss\u00e3o pela rede de comunica\u00e7\u00e3o;\n\n\u2022 atua\u00e7\u00e3o do sinal de controle sobre a planta.\n\nO modelo TrueTime (Figura 4.11) deste caso \u00e9 composto por um NCS para controlar\n\na velocidade do motor CC atrav\u00e9s de uma rede de comunica\u00e7\u00e3o CAN. Nesta rede est\u00e3o\n\nconectados os n\u00f3s do controlador, do atuador, do sensor e um n\u00f3 extra que representa\n\noutros n\u00f3s ligados \u00e0 rede e que n\u00e3o participam diretamente do ciclo de controle. Cada\n\nn\u00f3 \u00e9 composto por um kernel-RT com pol\u00edtica de escalonamento de tasks por prioridade\n\nfixa.\n\nr, y ; u\nStep\n\nRede\n\nsnd1\n\nsnd2\n\nsnd3\n\nsnd4\n\nrcv1\n\nrcv2\n\nrcv3\n\nrcv4\n\nNo 4\n(Sensor)\n\nA/D Snd\n\nNo 3\n(Controlador)\n\nRcv\n\nr\n\nSnd\n\nNo 2\n(Atuador)\n\nRcv D/A\n\nNo 1\n( )\n\nRcvSnd\n\nMotor DC\n\nG.num {1}(s)\n\nG.den {1}(s)\n\nu\ny\n\nu\n\ny\nDisturbio\n\nDisplay\n\n20\n\nClock r, y\n\nu\n\nFigura 4.11: Modelo TrueTime do sistema de controle do motor CC.\n\nPara este caso, adota-se um sistema de controle mono-rate, ou seja, com somente um\n\nper\u00edodo de amostragem nominal h para o ciclo de controle. O ciclo de controle inicia no\n\nsensor, onde uma task peri\u00f3dica faz a leitura do sinal de sa\u00edda ? atrav\u00e9s do conversor\n\nA/D e envia esta informa\u00e7\u00e3o pela rede para o n\u00f3 do controlador. Quando a mensagem\n\nchega no controlador uma interrup\u00e7\u00e3o inicia uma task aperi\u00f3dica que cont\u00e9m as equa\u00e7\u00f5es\n\nde diferen\u00e7as do controlador PID. O sinal de controle ent\u00e3o \u00e9 calculado e enviado para\n\no n\u00f3 do atuador. Quando a mensagem chega no atuador uma interrup\u00e7\u00e3o inicia a task\n\naperi\u00f3dica que transforma a informa\u00e7\u00e3o em sinal de controle Va atrav\u00e9s do conversor\n\nD/A de ordem zero. Como o n\u00f3 extra da rede, \u00e9 inserida uma task extra no kernel\n\ndo controlador representando outras tasks que n\u00e3o participam diretamente do ciclo de\n\ncontrole. Os atributos destas tasks s\u00e3o dados na Tabela 4.2.\n\nDe acordo com o trabalho realizado por Nilsson (1998), numa rede CAN, as mensagens\n\ndo sensor para o controlador e as mensagens do controlador para o atuador s\u00e3o formadas\n\n\n\n4.3 Simula\u00e7\u00e3o com o TrueTime 52\n\nKernel Task Prioridade WCET Per\u00edodo Deadline\n\ncontrolador\nperi\u00f3dica 1 1s 4s \u2013\naperi\u00f3dica 2 0.005s \u2013 100s\n\nsensor peri\u00f3dica 2 0.003s h \u2013\natuador aperi\u00f3dica 2 0.003s \u2013 100s\nextra peri\u00f3dica 1 \u2013 0.001s \u2013\n\nTabela 4.2: Caracter\u00edsticas das tasks do sistema.\n\npor palavras que variam entre 64 a 128 bits, incluindo os bits de endere\u00e7o e os bits de\n\ncontrole. O trabalho de Chow e Tipsuwan (2003) indica que as mensagens do sensor para\n\no controlador s\u00e3o menores (em n\u00fameros de bits) do que as mensagens do controlador para\n\no atuador. Portanto, para este caso estipula-se:\n\n\u2022 mensagens com prioridade 2 e 80 bits, do sensor para o controlador;\n\n\u2022 mensagens com prioridade 3 e 120 bits, do controlador para o atuador;\n\n\u2022 mensagens com prioridade 1 e 80 bits, do n\u00f3 extra para ele mesmo.\n\nAs mensagens do n\u00f3 extra s\u00e3o colocadas na rede de forma a ocupar cerca de 80% da banda\n\nde forma aleat\u00f3ria, sendo definida para esta rede uma taxa de transfer\u00eancia de 80 Kbps,\n\ncom probabilidade nula de perda de dados.\n\nAs grandezas analisadas neste caso s\u00e3o definidas como:\n\n\u2022 LkS - lat\u00eancia do sensor (tempo decorrido entre o in\u00edcio da amostragem e o in\u00edcio do\nc\u00e1lculo);\n\n\u2022 LkC - lat\u00eancia do controlador (tempo decorrido entre o in\u00edcio do c\u00e1lculo e o in\u00edcio da\natua\u00e7\u00e3o);\n\n\u2022 hk - intervalo de amostragem (tempo decorrido entre o final de dois ciclos de controle\nconsecutivos).\n\nEstas grandezas est\u00e3o ilustradas na Figura 4.12.\n\nS\u00e3o analisados cinco casos: h = 0.01s, 0.02s, 0.04s, 0.06s e 0.07s. Como no trabalho\n\nde Lian, Moyne e Tilbury (2002), para avaliar o desempenho do NCS em cada caso,\n\nutiliza-se o crit\u00e9rio ITAE dado por\n\nITAE =\n\n? tf\n\nt0\n\nt|e|dt, (4.10)\n\n\n\n4.3 Simula\u00e7\u00e3o com o TrueTime 53\n\n      \n\n        \n\n(k ? 1)h kh (k + 1)h\n\nIn\u00edcio da task\n\nFinal da task\n\nExecu\u00e7\u00e3o da task\n\nSensor\n\nControlador\n\nAtuador\n\nLS\n\nLC\n\nhk\n\nt\n\nt\n\nt\n\nFigura 4.12: Ilustra\u00e7\u00e3o das grandezas analisadas neste estudo de caso e das tasks\nenvolvidas no ciclo de controle. Nota-se que a task no controlador pode apresentar um\n\nintervalo durante sua execu\u00e7\u00e3o devido \u00e0 preemp\u00e7\u00e3o.\n\nonde t0 e tf s\u00e3o os tempos inicial e final do per\u00edodo avaliado e e \u00e9 a diferen\u00e7a entre o sinal\n\nde refer\u00eancia e o sinal de sa\u00edda. O crit\u00e9rio ITAE \u00e9 uma medida relativa entre desempenho\n\nde sistemas de controle, visto que um valor ITAE maior (em rela\u00e7\u00e3o a um valor ITAE\n\nmenor) indica que o sistema \u00e9 relativamente menos est\u00e1vel que outro, de forma que valores\n\nmuito elevados indicam que o sistema tende a ser inst\u00e1vel.\n\nConsiderando que os WCETs das tasks s\u00e3o independentes do per\u00edodo de amostragem\n\nnominal, tem-se:\n\n\u2022 o tempo de execu\u00e7\u00e3o da task peri\u00f3dica no sensor ETS = 0.004s;\n\n\u2022 o tempo de execu\u00e7\u00e3o da task aperi\u00f3dica no controlador ETC = 0.0065s.\n\nAtribui-se valores relativamente altos para os deadlines das tasks aperi\u00f3dicas para garantir\n\nque sejam sempre executadas, respeitando assim a hip\u00f3tese de n\u00e3o haver perda de dados.\n\nCom estas defini\u00e7\u00f5es, os casos s\u00e3o simulados. A partir destas simula\u00e7\u00f5es s\u00e3o obtidos\n\nos diagramas de escalonamento das tasks do controlador e da rede, mostrados nas Figu-\n\nras 4.13 e 4.14, respectivamente. No diagrama de escalonamento das tasks, \u00e9 observada\n\numa situa\u00e7\u00e3o de preemp\u00e7\u00e3o das tasks de controle. As tasks de controle em preemp\u00e7\u00e3o\n\nformam uma fila (FIFO-First In, First Out) e s\u00e3o executadas conforme disponibilidade\n\n\n\n4.3 Simula\u00e7\u00e3o com o TrueTime 54\n\nde recursos (ANDERSSON; HENRIKSSON; CERVIN, 2007). Quanto mais tasks entram na fila\n\nde preemp\u00e7\u00e3o, mais tempo \u00e9 necess\u00e1rio para sua execu\u00e7\u00e3o (destaque na Figura 4.13), o\n\nque implica em maiores lat\u00eancias. E, juntamente com a execu\u00e7\u00e3o desta fila, ocorre um\n\naumento do tr\u00e1fego na rede (destaque na Figura 4.14), que tende a aumentar os atrasos\n\nentre o envio e recebimento de mensagens. Assim fica evidente duas fontes de aumento\n\ndas lat\u00eancias: a preemp\u00e7\u00e3o das tasks de controle e o aumento do tr\u00e1fego da rede. Portanto\n\nconclui-se que conforme aumenta o per\u00edodo de amostragem h:\n\n\u2022 as lat\u00eancias LkS tendem a diminuir, aproximando-se de ETS = 0.004s;\n\n\u2022 as lat\u00eancias LkC tendem a diminuir, aproximando-se de ETC = 0.0065s);\n\n\u2022 os intervalos hk tendem a se aproximar do per\u00edodo de amostragem nominal h,\n\ncomo observado nos histogramas nas Figuras 4.15, 4.16 e 4.17.\n\nPortanto para maiores per\u00edodos de amostragem nominal h tem-se menores lat\u00eancias,\n\nresultando em um melhor o desempenho do sistema computacional. Por\u00e9m isto dificulta\n\na reconstru\u00e7\u00e3o do sinal, prejudicando o desempenho do sistema de controle. Al\u00e9m disso,\n\ndurante o per\u00edodo entre duas amostragens consecutivas (ou intersample), o sistema de\n\ncontrole discreto opera em malha aberta, sendo sens\u00edvel \u00e0 dist\u00farbios (\u00c5STR\u00f6M; WITTEN-\n\nMARK, 1997). Nas simula\u00e7\u00f5es s\u00e3o introduzidos dist\u00farbios para observar esta sensibilidade\n\nnos intersamples. As sa\u00eddas obtidas nestas simula\u00e7\u00f5es s\u00e3o mostradas na Figura 4.18;\n\ne sobre elas \u00e9 aplicado o crit\u00e9rio ITAE, resultando nos valores contidos na Tabela 4.3.\n\nPercebe-se que o per\u00edodo de amostragem nominal muito curto ou muito longo resulta na\n\npiora do desempenho do NCS. Isto porque o desempenho deste sistema depende tanto\n\ndo desempenho do sistema computacional (melhora com o aumento de h) quanto do de-\n\nsempenho do sistema de controle (piora com o aumento de h). Esta conclus\u00e3o tamb\u00e9m \u00e9\n\napresentada no trabalho de Lian, Moyne e Tilbury (2002), onde esta rela\u00e7\u00e3o de compro-\n\nmisso \u00e9 colocada em evid\u00eancia.\n\nh ITAE Sistema\n0.01 8.997 1013 Inst\u00e1vel\n0.02 6.863 105 Est\u00e1vel\n0.04 7.414 104 Est\u00e1vel\n0.06 9.700 105 Est\u00e1vel\n0.07 1.223 109 Inst\u00e1vel\n\nTabela 4.3: Crit\u00e9rio ITAE aplicados aos resultados obtidos atrav\u00e9s do TrueTime.\n\n\n\n4.3 Simula\u00e7\u00e3o com o TrueTime 55\n\n2 2.5 3 3.5 4 4.5 5 5.5 6\n0\n\n0.5\n\n1\n\n1.5\n\n2\n\n2.5\n\n3\n\nE\ns\nt\na\nd\no\n\nd\na\ns\nt\na\ns\nk\ns\n\nTempo[s]\n\n(a) h = 0.01s\n\n2 2.5 3 3.5 4 4.5 5 5.5 6\n0\n\n0.5\n\n1\n\n1.5\n\n2\n\n2.5\n\n3\n\nE\ns\nt\na\nd\no\n\nd\na\ns\nt\na\ns\nk\ns\n\nTempo[s]\n\n(b) h = 0.02s\n\n2 2.5 3 3.5 4 4.5 5 5.5 6\n0\n\n0.5\n\n1\n\n1.5\n\n2\n\n2.5\n\n3\n\ne\ne\n\nE\ns\nt\na\nd\no\n\nd\na\ns\nt\na\ns\nk\ns\n\nTempo[s]\n\n(c) h = 0.04s\n\n2 2.5 3 3.5 4 4.5 5 5.5 6\n0\n\n0.5\n\n1\n\n1.5\n\n2\n\n2.5\n\n3\n\nE\ns\nt\na\nd\no\n\nd\na\ns\nt\na\ns\nk\ns\n\nTempo[s]\n\n(d) h = 0.06s\n\n2 2.5 3 3.5 4 4.5 5 5.5 6\n0\n\n0.5\n\n1\n\n1.5\n\n2\n\n2.5\n\n3\n\nE\ns\nt\na\nd\no\n\nd\na\ns\nt\na\ns\nk\ns\n\nTempo[s]\n\n(e) h = 0.07s\n\nFigura 4.13: Diagramas de escalonamentos das tasks do controlador, destacando o\nintervalo em que as tasks de controle em preemp\u00e7\u00e3o s\u00e3o executadas.\n\nPortanto, para um per\u00edodo de amostragem nominal h dentro do intervalo [0.02, 0.06]s\n\no NCS \u00e9 est\u00e1vel, segundo o crit\u00e9rio ITAE. E segundo este mesmo crit\u00e9rio, a escolha \u00f3tima\n\n\u00e9 h = 0.04s. As distribui\u00e7\u00f5es das lat\u00eancias obtidas ser\u00e3o utilizadas na an\u00e1lise com o\n\nJitterbug.\n\n\n\n4.3 Simula\u00e7\u00e3o com o TrueTime 56\n\n2 2.5 3 3.5 4 4.5 5 5.5 6\n0\n\n0.5\n\n1\n\n1.5\n\n2\n\n2.5\n\n3\n\n3.5\n\n4\n\n4.5\n\n5\n\nE\ns\nt\na\nd\no\n\nd\na\ns\n\nm\ne\nn\ns\na\ng\ne\nn\ns\n\nTempo[s]\n\n(a) h = 0.01s\n\n2 2.5 3 3.5 4 4.5 5 5.5 6\n0\n\n0.5\n\n1\n\n1.5\n\n2\n\n2.5\n\n3\n\n3.5\n\n4\n\n4.5\n\n5\n\nE\ns\nt\na\nd\no\n\nd\na\ns\n\nm\ne\nn\ns\na\ng\ne\nn\ns\n\nTempo[s]\n\n(b) h = 0.02s\n\n2 2.5 3 3.5 4 4.5 5 5.5 6\n0\n\n0.5\n\n1\n\n1.5\n\n2\n\n2.5\n\n3\n\n3.5\n\n4\n\n4.5\n\n5\n\nE\ns\nt\na\nd\no\n\nd\na\ns\n\nm\ne\nn\ns\na\ng\ne\nn\ns\n\nTempo[s]\n\n(c) h = 0.04s\n\n2 2.5 3 3.5 4 4.5 5 5.5 6\n0\n\n0.5\n\n1\n\n1.5\n\n2\n\n2.5\n\n3\n\n3.5\n\n4\n\n4.5\n\n5\n\nE\ns\nt\na\nd\no\n\nd\na\ns\n\nm\ne\nn\ns\na\ng\ne\nn\ns\n\nTempo[s]\n\n(d) h = 0.06s\n\n2 2.5 3 3.5 4 4.5 5 5.5 6\n0\n\n0.5\n\n1\n\n1.5\n\n2\n\n2.5\n\n3\n\n3.5\n\n4\n\n4.5\n\n5\n\nE\ns\nt\na\nd\no\n\nd\na\ns\n\nm\ne\nn\ns\na\ng\ne\nn\ns\n\nTempo[s]\n\n(e) h = 0.07s\n\nFigura 4.14: Diagrama de escalonamento da rede, destacando o intervalo em que\nocorre um aumento no tr\u00e1fego da rede.\n\n\n\n4.3 Simula\u00e7\u00e3o com o TrueTime 57\n\n0 0.005 0.01 0.015 0.02 0.025 0.03 0.035 0.04 0.045 0.05\n0\n\n2\n\n4\n\n6\n\n8\n\n10\n\n12\n\n14\n\n16\n\n18\n\n20\n\nO\nc\no\nr\nr\n\u00ea\nn\nc\nia\n\ns\n[%\n\n]\n\nL\nk\n\nS\n[s]\n\n(a) h = 0.01s\n\n0 0.005 0.01 0.015 0.02 0.025 0.03 0.035 0.04 0.045 0.05\n0\n\n2\n\n4\n\n6\n\n8\n\n10\n\n12\n\n14\n\n16\n\n18\n\n20\n\nO\nc\no\nr\nr\n\u00ea\nn\nc\nia\n\ns\n[%\n\n]\n\nL\nk\n\nS\n[s]\n\n(b) h = 0.02s\n\n0 0.005 0.01 0.015 0.02 0.025 0.03 0.035 0.04 0.045 0.05\n0\n\n2\n\n4\n\n6\n\n8\n\n10\n\n12\n\n14\n\n16\n\n18\n\n20\n\nO\nc\no\nr\nr\n\u00ea\nn\nc\nia\n\ns\n[%\n\n]\n\nL\nk\n\nS\n[s]\n\n(c) h = 0.04s\n\n0 0.005 0.01 0.015 0.02 0.025 0.03 0.035 0.04 0.045 0.05\n0\n\n2\n\n4\n\n6\n\n8\n\n10\n\n12\n\n14\n\n16\n\n18\n\n20\nO\n\nc\no\nr\nr\n\u00ea\nn\nc\nia\n\ns\n[%\n\n]\n\nL\nk\n\nS\n[s]\n\n(d) h = 0.06s\n\n0 0.005 0.01 0.015 0.02 0.025 0.03 0.035 0.04 0.045 0.05\n0\n\n2\n\n4\n\n6\n\n8\n\n10\n\n12\n\n14\n\n16\n\n18\n\n20\n\nO\nc\no\nr\nr\n\u00ea\nn\nc\nia\n\ns\n[%\n\n]\n\nL\nk\n\nS\n[s]\n\n(e) h = 0.07s\n\nFigura 4.15: Distribui\u00e7\u00e3o das lat\u00eancias LkS.\n\n\n\n4.3 Simula\u00e7\u00e3o com o TrueTime 58\n\n0 0.002 0.004 0.006 0.008 0.01 0.012 0.014 0.016 0.018 0.02\n0\n\n2\n\n4\n\n6\n\n8\n\n10\n\n12\n\n14\n\n16\n\n18\n\n20\n\nO\nc\no\nr\nr\n\u00ea\nn\nc\nia\n\ns\n[%\n\n]\n\n(a) h = 0.01s\n\n0 0.002 0.004 0.006 0.008 0.01 0.012 0.014 0.016 0.018 0.02\n0\n\n2\n\n4\n\n6\n\n8\n\n10\n\n12\n\n14\n\n16\n\n18\n\n20\n\nO\nc\no\nr\nr\n\u00ea\nn\nc\nia\n\ns\n[%\n\n]\n\nL\nk\n\nC\n[s]\n\n(b) h = 0.02s\n\n0 0.002 0.004 0.006 0.008 0.01 0.012 0.014 0.016 0.018 0.02\n0\n\n2\n\n4\n\n6\n\n8\n\n10\n\n12\n\n14\n\n16\n\n18\n\n20\n\nO\nc\no\nr\nr\n\u00ea\nn\nc\nia\n\ns\n[%\n\n]\n\nL\nk\n\nC\n[s]\n\n(c) h = 0.04s\n\n0 0.002 0.004 0.006 0.008 0.01 0.012 0.014 0.016 0.018 0.02\n0\n\n2\n\n4\n\n6\n\n8\n\n10\n\n12\n\n14\n\n16\n\n18\n\n20\nO\n\nc\no\nr\nr\n\u00ea\nn\nc\nia\n\ns\n[%\n\n]\n\nL\nk\n\nC\n[s]\n\n(d) h = 0.06s\n\n0 0.002 0.004 0.006 0.008 0.01 0.012 0.014 0.016 0.018 0.02\n0\n\n2\n\n4\n\n6\n\n8\n\n10\n\n12\n\n14\n\n16\n\n18\n\n20\n\nO\nc\no\nr\nr\n\u00ea\nn\nc\nia\n\ns\n[%\n\n]\n\nL\nk\n\nC\n[s]\n\n(e) h = 0.07s\n\nFigura 4.16: Distribui\u00e7\u00e3o das lat\u00eancias LkC .\n\n\n\n4.3 Simula\u00e7\u00e3o com o TrueTime 59\n\n0 0.02 0.04 0.06 0.08 0.1 0.12 0.14 0.16 0.18 0.2\n0\n\n5\n\n10\n\n15\n\n20\n\n25\n\nO\nc\no\nr\nr\n\u00ea\nn\nc\nia\n\ns\n[%\n\n]\n\nhk[s]\n\n(a) h = 0.01s\n\n0 0.02 0.04 0.06 0.08 0.1 0.12 0.14 0.16 0.18 0.2\n0\n\n5\n\n10\n\n15\n\n20\n\n25\n\nO\nc\no\nr\nr\n\u00ea\nn\nc\nia\n\ns\n[%\n\n]\n\nhk[s]\n\n(b) h = 0.02s\n\n0 0.02 0.04 0.06 0.08 0.1 0.12 0.14 0.16 0.18 0.2\n0\n\n5\n\n10\n\n15\n\n20\n\n25\n\nO\nc\no\nr\nr\n\u00ea\nn\nc\nia\n\ns\n[%\n\n]\n\nhk[s]\n\n(c) h = 0.04s\n\n0 0.02 0.04 0.06 0.08 0.1 0.12 0.14 0.16 0.18 0.2\n0\n\n5\n\n10\n\n15\n\n20\n\n25\n\nO\nc\no\nr\nr\n\u00ea\nn\nc\nia\n\ns\n[%\n\n]\n\nhk[s]\n\n(d) h = 0.06s\n\n0 0.02 0.04 0.06 0.08 0.1 0.12 0.14 0.16 0.18 0.2\n0\n\n5\n\n10\n\n15\n\n20\n\n25\n\nO\nc\no\nr\nr\n\u00ea\nn\nc\nia\n\ns\n[%\n\n]\n\nhk[s]\n\n(e) h = 0.07s\n\nFigura 4.17: Distribui\u00e7\u00e3o dos intervalos de amostragem hk.\n\n0 2 4 6 8 10 12 14 16 18 20\n-2\n\n-1.5\n\n-1\n\n-0.5\n\n0\n\n0.5\n\n1\n\n1.5\n\n2\n\n?\n[r\na\nd\n/\ns\n]\n\nTempo[s]\n\nRefer\u00eancia\n\nh = 0.01\n\nh = 0.02\n\nh = 0.04\n\nh = 0.06\n\nh = 0.07\n\nFigura 4.18: Sa\u00eddas do sistema para h: 0.01s, 0.02s, 0.04s, 0.06s e 0.07s, obtidas com\nTrueTime.\n\n\n\n4.4 An\u00e1lise com o Jitterbug 60\n\n4.4 An\u00e1lise com o Jitterbug\n\nO modelo Jitterbug para este caso \u00e9 semelhante ao modelo da Figura 2.8, onde H1(z) = 1,\n\nH2(z) = PID(z) e H3(z) = 1 representam o n\u00f3 do sensor, do controlador e do atuador,\n\nrespectivamente; e G(s) \u00e9 o modelo do motor. O modelo de tempo \u00e9 dado por ?1 e ?2,\n\nque s\u00e3o LS e LC , respectivamente, obtidos na Se\u00e7\u00e3o 4.3. \u00c9 inserido na sa\u00edda da planta\n\num processo de ru\u00eddo branco em tempo discreto com m\u00e9dia nula e covari\u00e2ncia R = 2?.\n\nEste modelo \u00e9 implementado atrav\u00e9s do C\u00f3digo 4.1 para o c\u00e1lculo da fun\u00e7\u00e3o de custo do\n\ndesempenho do NCS.\n\nC\u00f3digo 4.1: Script em MATLAB para o c\u00e1lculo da fun\u00e7\u00e3o de custo do NCS atrav\u00e9s do\n\nJitterbug.\n\n1 Tau_1 = load ( \u2019L_S\u2019 ) ; % D i s t r i b u i \u00e7 \u00e3 o das l a t \u00ea n c i a s de\n\namostragem\n\n2 Tau_2 = load ( \u2019L_C\u2019 ) ; % D i s t r i b u i \u00e7 \u00e3 o das l a t \u00ea n c i a s de c \u00e1 l c u l o\n\n3 G = load ( \u2019Motor_CC\u2019 ) ; % Plan t a\n\n4 H1 = 1 ; % Amostrador\n\n5 H2 = load ( \u2019Controlador\u2019 ) ; % Con t r olador PID d i s c r e t o\n\n6 H3 = 1 ; % Atuador\n\n7 R = diag ( [ 0 2? pi ] ) ; % Covar i\u00e2n cia do r u \u00ed d o na s a \u00ed d a da\np l a n t a\n\n8 dt = 0 . 0 0 1 ; % Passo de d i s c r e t i z a \u00e7 \u00e3 o do tempo\n\n9\n\n10 N = i n i t j i t t e r b u g ( dt , h ) ; % I n i c i a l i z a \u00e7 \u00e3 o do J i t t e r b u g\n\n11\n\n12 N = a ddtiming no de (N, 1 , Tau_1 , 2 ) ; % Primeiro n\u00f3 de tempo\n\n13 N = a ddtiming no de (N, 2 , Tau_2 , 3 ) ; % Segundo n\u00f3 de tempo\n\n14 N = a ddtiming no de (N, 3 ) ; % T e r c e i r o n\u00f3 de tempo\n\n15\n\n16 N = a d d c o n t s y s (N, 1 ,G, 4 ) ; % I n s e r \u00e7 \u00e3 o da p l a n t a\n\n17 N = a d d d i s c s y s (N, 2 , H1 , 1 , 1 , [ ] , R) ; % Conex\u00e3o do amostrador ao n\u00f3 1\n\n18 N = a d d d i s c s y s (N, 3 , H2 , 2 , 2 , [ ] , R) ; % Conex\u00e3o do c o n t r o l a d o r ao n\u00f3 2\n\n19 N = a d d d i s c s y s (N, 4 , H3 , 3 , 3 ) ; % Conex\u00e3o do at u ador ao n\u00f3 3\n\n20\n\n21 N = c a l c d y n a m i c s (N) ; % C \u00e1 l c u l o das din\u00e2micas i n t e r n a s\n\n22 J = c a l c c o s t (N) ; % C\u00e1culo do c u s t o\n\nOs resultados obtidos com o Jitterbug (Tabela 4.4) est\u00e3o de acordo com os resultados\n\nobtidos na se\u00e7\u00e3o anterior. Verifica-se que existe um intervalo para o per\u00edodo de amostra-\n\ngem nominal do ciclo de controle ([0.02, 0.06]s) para o qual o NCS \u00e9 est\u00e1vel; e existe um\n\n\n\n4.5 Conclus\u00e3o 61\n\nponto \u00f3timo de opera\u00e7\u00e3o (h = 0.04s).\n\nh Custo J Sistema\n0.01s ? Inst\u00e1vel\n0.02s 88.6 Est\u00e1vel\n0.04s 71.0 Est\u00e1vel\n0.06s 88.9 Est\u00e1vel\n0.07s ? Inst\u00e1vel\n\nTabela 4.4: Resultados das simula\u00e7\u00f5es com o Jitterbug para o caso estudado, com h:\n0.01s, 0.02s, 0.04s, 0.06s e 0.07s.\n\n4.5 Conclus\u00e3o\n\nNeste cap\u00edtulo estudou-se o caso de um NCS utilizando os m\u00e9todos apresentados no Ca-\n\np\u00edtulo 2. Os resultados obtidos com o modelo com atraso mostram que um sistema de\n\ncontrole que apresenta um per\u00edodo de amostragem maior pode ter um desempenho me-\n\nlhor quando comparado ao caso de com um per\u00edodo de amostragem menor, dependendo\n\ndo atraso presente neste sistema. Com os resultados obtidos com o TrueTime e o Jit-\n\nterbug \u00e9 poss\u00edvel estender esta afirma\u00e7\u00e3o, chegando \u00e0 conclus\u00e3o que existe uma rela\u00e7\u00e3o\n\nde compromisso entre o desempenho do sistema de controle e o desempenho do sistema\n\ncomputacional com rela\u00e7\u00e3o \u00e0 escolha do per\u00edodo de amostragem nominal h, como tamb\u00e9m\n\nmostra o trabalho de Lian, Moyne e Tilbury (2002). Foi apresentado um intervalo para\n\no per\u00edodo de amostragem nominal h (0.02s a 0.06s) no qual o NCS \u00e9 est\u00e1vel, bem como\n\num ponto \u00f3timo de opera\u00e7\u00e3o (h = 0.04s).\n\n\n\n62\n\n5 O ROV\n\nO objetivo deste cap\u00edtulo \u00e9 apresentar o modelo do ROV considerado neste trabalho\n\n(Figura 5.1), al\u00e9m da arquitetura de controle e a estrutura de controle. A descri\u00e7\u00e3o deta-\n\nlhada deste ve\u00edculo (conhecido por VSOR \u2013 Ve\u00edculo Submarino Operado Remotamente)\n\nest\u00e1 contida no trabalho de Avila (2008).\n\nFigura 5.1: Modelo CAD de um ROV.\n\nSob a hip\u00f3tese de opera\u00e7\u00f5es com baixas velocidades, o ve\u00edculo pode ser modelado atra-\n\nv\u00e9s de 6 equa\u00e7\u00f5es diferenciais desacopladas referentes aos seus 6 graus de liberdade (GLs),\n\ncomo visto na Se\u00e7\u00e3o 5.1. Com rela\u00e7\u00e3o ao controle do ve\u00edculo, existem n\u00edveis hier\u00e1rquicos\n\nde controle, onde o n\u00edvel superior gera sinais de refer\u00eancia para o n\u00edvel imediatamente\n\ninferior, como visto na Se\u00e7\u00e3o 5.2. Particularmete, este trabalho est\u00e1 focado no controle\n\nde velocidade do ve\u00edculo atrav\u00e9s controladores do tipo proporcional-integral (PI), como\n\nvisto na Se\u00e7\u00e3o 5.3.\n\n\n\n5.1 Modelo do VSOR 63\n\n5.1 Modelo do VSOR\n\nAssim como em Fossen (1994), utiliza-se dois sistemas de coordenadas (o referencial iner-\n\ncial e o referencial m\u00f3vel) observados na Figura 5.2 para descrever os movimentos dos\n\nve\u00edculos marinhos nos 6 graus de liberdade. O sistema de coordenadas fixo ao ve\u00edculo\n\n(OmXmYmZm) \u00e9 o referencial m\u00f3vel, e a origem Om \u00e9 usualmente escolhida coincidente\n\nao centro de gravidade (CG) do ve\u00edculo. O referencial inercial (O0X0Y0Z0) \u00e9 tomado em\n\num ponto fixo na superf\u00edcie da Terra. Usualmente, as vari\u00e1veis de posi\u00e7\u00e3o e orienta\u00e7\u00e3o1\n\ns\u00e3o descritas em rela\u00e7\u00e3o ao referencial inercial; e as vari\u00e1veis de velocidade (linear e an-\n\ngular) e acelera\u00e7\u00e3o (linear e angular) em rela\u00e7\u00e3o ao referencial m\u00f3vel. Estas vari\u00e1veis e\n\nsua representa\u00e7\u00e3o est\u00e3o listadas na Tabela 5.1.\n\nReferencial M\u00f3vel\n\nReferencial Fixo\nX0\n\nY0\n\nZ0\n\nXm\nYm\n\nZm O0\n\nOm\n\nr0\n\nu\n\np\nq\n\nv\nr\n\nw\n\nFigura 5.2: Sistema de coordenadas para ve\u00edculos marinhos, com 6 graus de liberdade\n(FOSSEN, 1994).\n\nPara definir a rela\u00e7\u00e3o das vari\u00e1veis no referencial m\u00f3vel no referencial inercial, adotam-\n\nse os vetores:\n\n? = [?T1 ,?\nT\n2 ]\n\nT ; ?1 = [x,y,z]\nT ; ?2 = [?,?,?]\n\nT .\n\n? = [?T1 ,?\nT\n2 ]\n\nT ; ?1 = [u,v,w]\nT ; ?2 = [p,q,r]\n\nT .\n\n?GL = [?GLL\nT\n,?GLA\n\nT\n]T ; ?GLL = [X,Y,Z]\n\nT ; ?GLA = [K,M,N]\nT .\n\nEstas nota\u00e7\u00f5es ser\u00e3o utilizadas ao longo deste trabalho e est\u00e3o de acordo com as encon-\n\n1Em engenharia naval, a orienta\u00e7\u00e3o \u00e9 usualmente representada pelos \u00c2ngulos de Euler (FOSSEN, 1994).\n\n\n\n5.1 Modelo do VSOR 64\n\nGL Movimento\nFor\u00e7as e Velocidades Posi\u00e7\u00f5es e\n\nMomentos (linear e angular) \u00c2ngulos de Euler\n1 Surge - transla\u00e7\u00e3o em x X u x\n2 Sway - transla\u00e7\u00e3o em y Y v y\n3 Heave - transla\u00e7\u00e3o em z Z w z\n4 Roll - rota\u00e7\u00e3o em x K p ?\n5 Pitch - rota\u00e7\u00e3o em y M q ?\n6 Yaw - rota\u00e7\u00e3o em z N r ?\n\nTabela 5.1: Nota\u00e7\u00f5es definidas pela SNAME (The Society of Naval Architects and\nMarine Engineers) utilizadas para ve\u00edculos marinhos.\n\ntradas em Fossen (1994). A velocidade de ve\u00edculo no referencial inercial \u00e9 dada por\n\n??1 = J1(?2)?1, (5.1)\n\nonde J1(?2) \u00e9 composi\u00e7\u00e3o de tr\u00eas rota\u00e7\u00f5es consecutivas dada por\n\nJ1(?2) =\n\n?\n\n?\n\n?\n\n?\n\ncos ? cos ? ? sin ? cos ? + cos ? sin ? sin ? sin ? sin ? + cos ? cos ? sin ?\nsin ? cos ? cos ? cos ? + sin ? sin ? sin ? ? cos ? sin ? + sin ? sin ? cos ?\n? sin ? cos ? sin ? cos ? cos ?\n\n?\n\n?\n\n?\n\n?\n\n.\n\n(5.2)\n\nSua inversa \u00e9 dada pela sua transposta (J?11 (?2) = J\nT\n1 (?2)).\n\nAnalogamente, tem-se que\n\n??2 = J2(?2)?2, (5.3)\n\nonde\n\nJ2(?2) =\n\n?\n\n?\n\n?\n\n?\n\n1 sin ? tan ? cos ? tan ?\n\n0 cos ? ? sin ?\n0 ?sin ?\n\ncos ?\ncos ?\ncos ?\n\n?\n\n?\n\n?\n\n?\n\n. (5.4)\n\nPor\u00e9m, J?12 (?2) 6= JT2 (?2). A matriz inversa de J2(?2) \u00e9 dada por\n\nJ?12 (?2) =\n\n?\n\n?\n\n?\n\n?\n\n1 0 ? sin ?\n0 cos ? cos ? sin ?\n\n0 ? sin ? cos ? cos ?\n\n?\n\n?\n\n?\n\n?\n\n. (5.5)\n\nO modelo do VSOR \u00e9 baseado nos modelos utilizados em Caccia, Indiveri e Veruggio\n\n(2000) e em Avila (2008), onde os 6 GLs s\u00e3o representados por 6 equa\u00e7\u00f5es diferenciais\n\ndesacopladas sob a hip\u00f3tese de opera\u00e7\u00f5es com baixas velocidades. Uma modelagem mais\n\ncompleta, considerando o sistema acoplado, pode ser encontrado em Fossen (1994) e em\n\n\n\n5.2 Arquitetura de Controle 65\n\nSouza (2003), por exemplo.\n\nPara os GLs Surge, Sway, Heave e Yaw, a equa\u00e7\u00e3o \u00e9 dada por\n\n?i(t) = mix?i(t) + dLixi(t) + dQixi(t)|xi(t)| + bi, (5.6)\n\nonde xi \u00e9 a velocidade do ve\u00edculo no GL i dado em rela\u00e7\u00e3o ao referencial m\u00f3vel; ?i \u00e9 a\n\nfor\u00e7a/torque aplicada ao ve\u00edculo no GL i; mi \u00e9 a in\u00e9rcia/massa virtual2 referente ao GL\n\ni; dLi \u00e9 o coeficiente de arrasto linear e dQi \u00e9 o coeficiente de arrasto quadr\u00e1tico referentes\n\nao GL i e bi \u00e9 o modelo de dist\u00farbio para o GL i.\n\nPara ve\u00edculos com geometria indefinida, do tipo open frame, os GLs Roll e Pitch s\u00e3o\n\nbasicamente est\u00e1veis, sendo estes modelados por\n\n?i(t) = mix?i(t) + dQixi(t)|xi(t)| + BzB sin ? + bi, (5.7)\n\nonde xi \u00e9 a velocidade do ve\u00edculo no GL i dado em rela\u00e7\u00e3o ao referencial m\u00f3vel; ?i \u00e9 a\n\nfor\u00e7a/torque aplicada ao ve\u00edculo no GL i; mi \u00e9 a in\u00e9rcia/massa virtual referente ao GL i;\n\ne o termo B \u00e9 a resultante do empuxo e da for\u00e7a peso, zB \u00e9 a altura referente ao centro\n\nde flutua\u00e7\u00e3o e ? = ?,?.\n\nOs valores das constantes citadas nesta se\u00e7\u00e3o est\u00e3o contidos no Ap\u00eandice A.\n\n5.2 Arquitetura de Controle\n\nA arquitetura do sistema de controle do ROV utilizada atualmente \u00e9 mostrada na Fi-\n\ngura 5.3, tamb\u00e9m conhecida como arquitetura centralizada. Ela \u00e9 composta basicamente\n\npor dois m\u00f3dulos: o sistema computacional de superf\u00edcie e o sistema computacional em-\n\nbarcado. O sistema computacional de superf\u00edcie consiste de um laptop executando o\n\nsistema operacional Windows XP, sendo respons\u00e1vel pelas tarefas de alto-n\u00edvel. Ele se co-\n\nmunica com o sistema computacional embarcado atrav\u00e9s da rede com protocolo Ethernet\n\nTCP/IP, usando um cabo 4-26 AWG. O sistema embarcado consiste numa placa padr\u00e3o\n\nPC-104 que executa o RTOS VxWorks da Windriver. Esta placa \u00e9 composta por um\n\nprocessador NS Geode de 300MHz, com baixo consumo de energia; portas A/Ds; portas\n\nD/As; e portas seriais. Os programas s\u00e3o desenvolvidos e compilados no computador\n\nde superf\u00edcie atrav\u00e9s do sistema de desenvolvimento Windriver Tornado e enviados atra-\n\n2In\u00e9rcia virtual se refere \u00e0 soma da in\u00e9rcia do ve\u00edculo com a in\u00e9rcia resultante do fen\u00f4meno de massa\nadicionada.\n\n\n\n5.2 Arquitetura de Controle 66\n\nVari\u00e1vel Sensor (fabricante) Precis\u00e3o Taxa de aquisi\u00e7\u00e3o Sa\u00edda\n\nYaw Compasso TCM2 (PNI) \u00b11? 13Hz Digital\nRoll e pitch Tilt Series 757 (Applied Geomechanics) \u00b12? 20Hz Anal\u00f3gica\n\nProfundidade Sensor de press\u00e3o, MPX5100DP (Motorola) 3.5cm 20Hz Anal\u00f3gica\nTaxa de yaw Fiber Optic Gyro, E-Core 2000 (KVH) Bias&lt;2?/h 10Hz Digital\n\nAltura Alt\u00edmetro, PA200 (Tritech) 1mm 10Hz Digital\nAcelera\u00e7\u00e3o linear Central inercial, VG700A (Crossbow) Bias&lt;12mg 100Hz Digital\n\nVelocidade angular Central inercial, VG700A (Crossbow) Bias&lt;20?/h 100Hz Digital\nVelocidade linear Sensor Doppler (NavQuest 600 Micro) 1mm/s 5Hz Digital\n\nTabela 5.2: Sistema sensorial do ROV (AVILA; MARUYAMA; ADAMOWSKI, 2008).\n\nv\u00e9s da rede Ethernet para o sistema embarcado. As informa\u00e7\u00f5es sobre o movimento do\n\nve\u00edculo s\u00e3o obtidas atrav\u00e9s de sensores listados na Tabela 5.2. Estas informa\u00e7\u00f5es s\u00e3o\n\nprocessadas e utilizadas no c\u00e1lculo do sinal de controle. Este sinal de controle age sobre o\n\nsistema atrav\u00e9s do sistema de propuls\u00e3o, composto por oito propulsores modelo 1021 da\n\nTecnadyne Inc e seus respectivos drivers de acionamento.\n\nComputador de\nsuperf\u00edcie\n\nE\nth\n\ner\nn\net\n\nPC-104\n\nPortas\nA/Ds\n\nPortas\nseriais\n\nPortas\nD/As\n\nSensor de\npress\u00e3o\n\nInclin\u00f4metro\n\nCompasso\n\nCentral\ninercial\n\nGirosc\u00f3pio\n(taxa de yaw )\n\nDriver do\npropulsor 1\n\nDriver do\npropulsor 2\n\nDriver do\npropulsor 8\n\nSensor\nDoppler\n\nFigura 5.3: Diagrama esquem\u00e1tico da arquitetura atual do sistema de controle do\nROV.\n\nO controle do ve\u00edculo \u00e9 estruturado hierarquicamente (CACCIA; VERUGGIO, 2000;\n\nSOUZA, 2003), onde n\u00edveis de controle superiores s\u00e3o respons\u00e1veis pela especifica\u00e7\u00e3o de\n\nvalores de refer\u00eancias para n\u00edveis de controle inferiores. Por exemplo, no caso de uma ta-\n\nrefa de posicionamento, o usu\u00e1rio (o operador humano ou um sistema aut\u00f4nomo) fornece\n\na posi\u00e7\u00e3o/orienta\u00e7\u00e3o desejada para o ve\u00edculo ao n\u00edvel de controle mais alto, chamado de\n\n\n\n5.2 Arquitetura de Controle 67\n\n\"guiagem\". A guiagem \u00e9 respons\u00e1vel por controlar a trajet\u00f3ria do ve\u00edculo que resultar\u00e1\n\nna desejada posi\u00e7\u00e3o/orienta\u00e7\u00e3o atrav\u00e9s da especifica\u00e7\u00e3o de valores de refer\u00eancia de veloci-\n\ndades para o pr\u00f3ximo n\u00edvel de controle, chamado de \"estrat\u00e9gia de controle\". A estrat\u00e9gia\n\nde controle \u00e9 respons\u00e1vel por controlar as velocidades do ve\u00edculo atrav\u00e9s de especifica\u00e7\u00e3o\n\nde valores de refer\u00eancia de for\u00e7a/torque aplicados nos 6 graus de liberdade. O sistema\n\nde propuls\u00e3o \u00e9 respons\u00e1vel por fornecer torque/for\u00e7a nos 6 graus de liberdade atrav\u00e9s do\n\ncontrole dos propulsores. Esta hierarquia de controle pode ser vista na Figura 5.4. No\n\ncaso da arquitetura de controle atual, todos os n\u00edveis da estrutura hier\u00e1rquica de controle\n\ns\u00e3o implementados no sistema embarcado.\n\n+ - + - + -\n\n?ref ?ref ?GLref ?GL ?\n\n?\nGuiagem\n\nEstrat\u00e9gia\nde controle\n\nSistema de\npropuls\u00e3o ROV\n\nFigura 5.4: Estrutura hier\u00e1rquica do controle do ve\u00edculo. As vari\u00e1veis com \u00edndice ref\nse referem aos valores de refer\u00eancia.\n\nA guiagem e a estrat\u00e9gia de controle calculam o(a) torque/for\u00e7a em cada grau de\n\nliberdade para realizar os movimentos definidos pelo usu\u00e1rio. Estes torques/for\u00e7as dos\n\ngraus de liberdade precisam ser mapeados nas for\u00e7as axiais dos propulsores. Isto \u00e9 feito\n\natrav\u00e9s de uma matriz de aloca\u00e7\u00e3o de empuxo, obtida em fun\u00e7\u00e3o do posicionamento dos\n\npropulsores em rela\u00e7\u00e3o ao referencial m\u00f3vel (Figura 5.5).\n\n          \n\n          \n\n          \n\n12\n\n3\n\n4\n\n5\n67\n\n8\n\na\n\nb\n\nd\n\ne\n\n?\n\n(a) Vista superior do ve\u00edculo.\n\nc\nf\n\n(b) Vista frontal do ve\u00edculo.\n\nFigura 5.5: Posicionamento dos propulsores em rela\u00e7\u00e3o ao referencial m\u00f3vel (sistema\nde coordenadas verde), considerando que o CG do ROV \u00e9 o ponto de intersec\u00e7\u00e3o dos\n\nplanos de simetria. As for\u00e7as axiais produzidas pelos propulsores s\u00e3o representadas pelas\nflechas em vermelho. Os propulsores s\u00e3o identificados por n\u00fameros de 1 a 8.\n\n\n\n5.2 Arquitetura de Controle 68\n\nSeja Ti a for\u00e7a axial gerada pelo propulsor i, e considerando a simetria do ve\u00edculo e o\n\nposicionamento dos propulsores, as for\u00e7as nos graus de liberdade s\u00e3o dadas por\n\nX = (?T1 + T2 ? T6 + T7) sin (?); (5.8)\n\nY = (?T1 ? T2 + T6 + T7) cos (?); (5.9)\n\nZ = ?T3 ? T4 ? T5 ? T8; (5.10)\n\nK = (T1 + T2 ? T6 ? T7) cos (?)c + (?T3 + T4 ? T5 + T8)e; (5.11)\n\nM = (T1 ? T2 + T6 ? T7) sin (?)c + (?T3 + T4 ? T5 + T8)d; (5.12)\n\nN = (?T1 + T2 + T6 ? T7)\n?\na2 + b2. (5.13)\n\nNa forma matricial, tem-se que\n\n?GL = B T, (5.14)\n\nonde B \u00e9 a matriz de controle e T =\n[\n\nT1 T2 T3 T4 T5 T6 T7 T8\n\n]T\n\n\u00e9 o vetor de\n\npropuls\u00e3o. A matriz de controle \u00e9, portanto\n\nB =\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n? sin (?) sin (?) 0 0 0 ? sin (?) sin (?) 0\n? cos (?) ? cos (?) 0 0 0 cos (?) cos (?) 0\n\n0 0 ?1 ?1 ?1 0 0 ?1\ncos (?)c cos (?)c ?e e ?e ? cos (?)c ? cos (?)c e\nsin (?)c ? sin (?)c ?d ?d d sin (?)c ? sin (?)c d\n\n?\n?\na2 + b2\n\n?\na2 + b2 0 0 0\n\n?\na2 + b2 ?\n\n?\na2 + b2 0\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n?\n\n. (5.15)\n\nPercebe-se que a matriz de controle n\u00e3o \u00e9 quadrada, visto que ela apresenta mais entradas\n\nde controle (8) do que graus de liberdade (6), ou seja, h\u00e1 mais de uma forma de se obter\n\ndeterminados(as) torques/for\u00e7as nos GLs. Uma solu\u00e7\u00e3o poss\u00edvel para fazer a aloca\u00e7\u00e3o\n\nde empuxo \u00e9 utilizar a matriz pseudo-inversa de Moore-Penrose (FOSSEN, 1994), que\n\nminimiza a energia inserida no sistema. Esta matriz, denominada matriz de aloca\u00e7\u00e3o de\n\nempuxo, \u00e9 dada por\n\nB\u2020 = BT (B BT )?1. (5.16)\n\nAssim, o mapeamento dos(as) torques/for\u00e7as dos GLs nas for\u00e7as axiais dos propulsores \u00e9\n\ndado por\n\nT = B\u2020 ?GL. (5.17)\n\nUma poss\u00edvel arquitetura do tipo NCS para o ROV \u00e9 mostrada na Figura 5.6. Nota-\n\nse que o sistema embarcado \u00e9 dividido em tr\u00eas m\u00f3dulos interligados atrav\u00e9s de rede\n\n\n\n5.2 Arquitetura de Controle 69\n\nde comunica\u00e7\u00e3o: o controle central, a fus\u00e3o sensorial e o sistema de propuls\u00e3o. Cada\n\nm\u00f3dulo possui um n\u00facleo de processamento. O controle central \u00e9 respons\u00e1vel pela guiagem\n\ne pela estrat\u00e9gia de controle. O sistema de propuls\u00e3o \u00e9 respons\u00e1vel pelo controle dos\n\npropulsores. A fus\u00e3o sensorial \u00e9 respons\u00e1vel por adquirir e processar os sinais provenientes\n\ndos sensores, disponibilizando para o sistema a estima\u00e7\u00e3o das vari\u00e1veis de estado do ve\u00edculo\n\n(posi\u00e7\u00e3o/orienta\u00e7\u00e3o, velocidades e acelera\u00e7\u00f5es).\n\nArquiteturas deste tipo j\u00e1 s\u00e3o empregadas em ROVs comerciais, como o chamado\n\nDistributed Intelligence Control System, implementado no ROV Seaeye Falcon, da Saab\n\nTechnologies (SAAB, 2009). Al\u00e9m disso, este tipo de arquitetura proporciona a distribui-\n\n\u00e7\u00e3o do processamento, a redu\u00e7\u00e3o de custo e de peso, al\u00e9m de facilitar o diagn\u00f3stico e\n\nmanuten\u00e7\u00e3o do sistema e de aumentar a sua flexibilidade e agilidade (WALSH et al., 2002).\n\nRaz\u00f5es estas para motivar o desenvolvimento deste tipo de arquitetura para o VSOR.\n\nComputador de\nsuperf\u00edcie\n\nE\nth\n\ner\nn\net\n\nN\u00facleo de\nprocessamento\n\nN\u00facleo de\nprocessamento\n\nN\u00facleo de\nprocessamento\n\nRede\n\nPortas\nA/Ds\n\nPortas\nseriais\n\nPortas\nD/As\n\nSensor de\npress\u00e3o\n\nInclin\u00f4metro\n\nCompasso\n\nCentral\ninercial\n\nGirosc\u00f3pio\n(taxa de yaw )\n\nDriver do\npropulsor 1\n\nDriver do\npropulsor 2\n\nDriver do\npropulsor 8Sensor\n\nDoppler\n\nControle\n\ncentral\n\nFus\u00e3o\n\nsensorial\n\nSistema de\n\npropuls\u00e3o\n\nFigura 5.6: Diagrama esquem\u00e1tico da poss\u00edvel arquitetura de controle do tipo NCS\npara o VSOR.\n\n\n\n5.3 Estrat\u00e9gia de Controle 70\n\n5.3 Estrat\u00e9gia de Controle\n\nO controle de velocidade (ou estrat\u00e9gia de controle) corresponde \u00e0 malha de controle na\n\nFigura 5.4 que recebe com entrada ?ref ? ? e fornece como sa\u00edda ?ref . Neste trabalho, o\ncontrole de velocidade do GL i \u00e9 realizado atrav\u00e9s de um controlador PI com estrutura\n\nfeedback-feedfoward (CACCIA; VERUGGIO, 2000; SOUZA, 2003). Devido a n\u00e3o-linearidade\n\nda equa\u00e7\u00e3o que representa a din\u00e2mica do GL i, os ganhos do controlador variam de acordo\n\ncom o ponto de opera\u00e7\u00e3o.\n\nReorganizando os termos da Equa\u00e7\u00e3o (5.6), tem-se a equa\u00e7\u00e3o diferencial\n\nx?i = ?\ndLi\nmi\n\nxi ?\ndQi\nmi\n\nxi|xi| ?\nbi\nmi\n\n+\n1\n\nmi\n?i, (5.18)\n\ncuja lineariza\u00e7\u00e3o em torno do ponto de opera\u00e7\u00e3o x?i fornece\n\nx?i? = a(x\n?\ni )xi? +\n\n1\n\nmi\n?i?, (5.19)\n\nonde\n\na(x?i ) = ?\ndLi\nmi\n\n? 2\ndQi\nmi\n\n|x?i |, (5.20)\n\n?i = ?i? + ?i, (5.21)\n\n?i = dLix\n?\ni + dQix\n\n?\ni |x?i | + bi. (5.22)\n\nComo pode ser observado, o sinal de controle ?i \u00e9 composto por dois termos: o termo\n\nfeedback ?i? e o termo feedfoward ?i.\n\nComo citado anteriormente, os GLs Roll e Pitch s\u00e3o em geral est\u00e1veis. Portanto, para\n\na lineariza\u00e7\u00e3o da Equa\u00e7\u00e3o (5.7) considera-se que os \u00e2ngulos ? e ? s\u00e3o pr\u00f3ximos de zero.\n\nAssim, o modelo linearizado para estes 2 GLs \u00e9 dado tamb\u00e9m pela Equa\u00e7\u00e3o (5.19), por\u00e9m\n\nexcluindo-se o termo referente ao arrasto linear.\n\nDesta forma, para cada ponto de opera\u00e7\u00e3o desejado h\u00e1 uma fun\u00e7\u00e3o de transfer\u00eancia\n\nde primeira ordem para cada GL, do tipo\n\nGi(s) =\n1\n\nmi\n\ns ? a(x?i )\n. (5.23)\n\nSeja o controlador PI com estrutura\n\nPIi(s) = KPi +\nKIi\ns\n, (5.24)\n\n\n\n5.4 Conclus\u00e3o 71\n\nonde KPi refere-se ao ganho proporcional e KIi refere-se ao ganho integral para o GL i.\n\nDesta forma, a equa\u00e7\u00e3o caracter\u00edstica do sistema controlado em malha fechada \u00e9 dada por\n\ns2 +\n\n(\n\n1\n\nmi\nKPi ? a(x?i )\n\n)\n\ns +\n1\n\nmi\nKIi. (5.25)\n\nSeja a equa\u00e7\u00e3o caracter\u00edstica desejada para o sistema linearizado em malha fechada\n\ndada por\n\ns2 + 2?i?ni + ?\n2\nni\n,\n\nonde ?i \u00e9 o coeficiente de amortecimento para o GL i e ?ni a freq\u00fc\u00eancia natural para o\n\nGL i, ambos par\u00e2metros de projeto. Por compara\u00e7\u00e3o, os ganhos do controlador s\u00e3o dados\n\npor\n\nKPi =\n2?i?ni + a(x\n\n?\ni )\n\n1\nmi\n\n, (5.26)\n\nKIi =\n?2ni\n\n1\nmi\n\n. (5.27)\n\nNa forma discreta, este controlador PI pode ser representado por\n\nPk = KPiek\n\nIk+1 = Ik + bi1ek+1 + bi2ek\n\nbi1 = KIi\nh\n2\n\nbi2 = KIi\nh\n2\n\nuk = Pk + Ik.\n\n(5.28)\n\nPercebe-se que o termo integral \u00e9 composto por uma integral num\u00e9rica do sinal de erro,\n\nconsiderando o passo constante (h constante). Ou seja, em uma situa\u00e7\u00e3o real em que\n\neste passo varia, o valor do sinal de controle pode n\u00e3o ser o valor esperado para um\n\ndeterminado instante.\n\n5.4 Conclus\u00e3o\n\nNeste cap\u00edtulo foi descrito o ROV utilizado neste trabalho. Foi mostrada a modelagem da\n\ndin\u00e2mica do ve\u00edculo atrav\u00e9s de 6 equa\u00e7\u00f5es diferenciais n\u00e3o-acopladas, considerando ope-\n\nra\u00e7\u00f5es de baixas velocidades. O modelo cinem\u00e1tico relaciona as velocidades e posi\u00e7\u00f5es/o-\n\nrienta\u00e7\u00f5es nos sistemas de coordenada inercial e m\u00f3vel. Foram descritas a arquitetura de\n\n\n\n5.4 Conclus\u00e3o 72\n\ncontrole atual e uma poss\u00edvel arquitetura do tipo NCS, al\u00e9m da matriz de aloca\u00e7\u00e3o de\n\nempuxo utilizada. E por fim mostrou-se a estrat\u00e9gia de controle utilizando um controla-\n\ndor do tipo PI com estrutura feedback-feedfoward, cujos par\u00e2metros de projeto s\u00e3o dados\n\npor ?i e ?ni .\n\n\n\n73\n\n6 Resultados\n\nO objetivo deste cap\u00edtulo \u00e9 utilizar o TrueTime e o Jitterbug no projeto dos controlado-\n\nres apresentados no Cap\u00edtulo 5; e, implementar estes controladores no modelo do ROV\n\ndescrito no Cap\u00edtulo 5 para observar o seu comportamento no tempo.\n\nComo visto no cap\u00edtulo anterior, as constantes dos controladores (KPi e KIi ) foram\n\nobtidas em fun\u00e7\u00e3o de dois par\u00e2metros de projeto: ?i e ?ni . Estes par\u00e2metros podem\n\nser obtidos a partir de requisitos de projeto, como tempo de subida, m\u00e1ximo sobre-sinal,\n\ntempo de assentamento, etc. O que se mostrar\u00e1 ao longo do cap\u00edtulo \u00e9 que a escolha dos\n\nvalores destes par\u00e2metros tamb\u00e9m dependem das condi\u00e7\u00f5es do sistema computacional\n\nutilizado. Por exemplo, supondo que para um dado sistema seja desej\u00e1vel uma resposta\n\nr\u00e1pida (menor constante de tempo), o que no caso corresponderia, para um dado valor\n\nde ?, um valor de ?n maior. Por\u00e9m, como visto no Cap\u00edtulo 4, quanto menor a constante\n\nde tempo do sistema, menor deve ser o per\u00edodo de amostragem nominal h para o ciclo\n\nde controle. E tamb\u00e9m foi observado neste cap\u00edtulo que, quanto menor o per\u00edodo de\n\namostragem, mais recursos computacionais s\u00e3o requeridos. Portanto, para uma situa\u00e7\u00e3o\n\nonde os recursos computacionais s\u00e3o consideravelmente limitados, a escolha de par\u00e2metros\n\npoderia ser inadequada para o caso de respostas r\u00e1pidas.\n\nPrimeiramente s\u00e3o realizadas simula\u00e7\u00f5es com o TrueTime (Se\u00e7\u00e3o 6.1), sob algumas\n\nhip\u00f3teses simplificadoras, para estima\u00e7\u00e3o das fun\u00e7\u00f5es densidades probabilidade (FDPs)\n\ndos atrasos inseridos pelo sistema computacional. Estas FDPs s\u00e3o utilizadas para criar\n\nmodelos de Sistemas Lineares de Saltos Markovianos. No Jitterbug, estes modelos s\u00e3o\n\nutilizados no c\u00e1lculo da fun\u00e7\u00e3o de custo, que por sua vez ser\u00e1 utilizada para avaliar\n\nqualitativamente o desempenho e a estabilidade (no sentido quadr\u00e1tico m\u00e9dio) para um\n\ndado GL (Se\u00e7\u00e3o 6.2). Na Se\u00e7\u00e3o 6.3 \u00e9 feita a an\u00e1lise temporal do comportamento do ROV\n\nutilizando um modelo em realidade virtual do ve\u00edculo.\n\n\n\n6.1 An\u00e1lise com o TrueTime 74\n\n6.1 An\u00e1lise com o TrueTime\n\nO modelo TrueTime do ROV \u00e9 semelhante ao utilizado no Cap\u00edtulo 4, por\u00e9m existem\n\nagora 6 plantas a serem controladas, ou seja, existem 6 tasks de controle no controle\n\ncentral.\n\nPara as simula\u00e7\u00f5es s\u00e3o adotadas algumas hip\u00f3teses de forma a simplificar as an\u00e1lises:\n\n\u2022 n\u00e3o h\u00e1 perda de dados,\n\n\u2022 as amostragens ocorrem sempre nos instantes de amostragem kh;\n\n\u2022 ser\u00e3o considerados apenas os atrasos referentes ao transporte dos dados pela rede e\nao escalonamento das tasks no controle central;\n\n\u2022 as plantas s\u00e3o consideradas id\u00eanticas na forma de uma fun\u00e7\u00e3o de transfer\u00eancia de\nprimeira ordem.\n\nUma forma de escolha de per\u00edodo de amostragem nominal do ciclo de controle \u00e9\n\natrav\u00e9s da regra pr\u00e1tica apresentada em \u00c5str\u00f6m e Wittenmark (1997), na qual o per\u00edodo\n\nde amostragem deve estar contido no intervalo\n\n0.2 ? ?nh ? 0.6. (6.1)\n\nPara estas simula\u00e7\u00f5es, o per\u00edodo de amostragem \u00e9 parametrizado por\n\nh ?\n0.4\n\n?n\n. (6.2)\n\nPercebe-se nesta parametriza\u00e7\u00e3o que o per\u00edodo de amostragem aumenta com o inverso da\n\nfreq\u00fc\u00eancia natural do sistema, o que reflete a rela\u00e7\u00e3o entre o per\u00edodo de amostragem e o\n\ntempo de resposta do sistema citada anteriormente.\n\nSer\u00e3o analisados 4 casos de opera\u00e7\u00e3o:\n\n1. sistema somente com as tasks de controle;\n\n2. sistema com as tasks de controle e com um n\u00f3 extra na rede para que 80% da banda\n\nda rede seja utilizada de forma aleat\u00f3ria, representando uma situa\u00e7\u00e3o de maior\n\ntr\u00e1fego na rede;\n\n\n\n6.1 An\u00e1lise com o TrueTime 75\n\n3. sistema com as tasks de controle e com uma task peri\u00f3dica extra no controle central\n\ncom WCET uniformemente vari\u00e1vel no intervalo [0, 500]ms, com per\u00edodo 1000ms e\n\nprioridade 1, representando outras poss\u00edveis tasks sendo executadas no sistema;\n\n4. sistema com as tasks de controle, o n\u00f3 extra na rede e a task extra especificados\n\nanteriormente.\n\nO primeiro caso servir\u00e1 como refer\u00eancia para as compara\u00e7\u00f5es com outros casos, visto\n\nque este \u00e9 o caso mais pr\u00f3ximo do funcionamento ideal. O objetivo do caso 2 \u00e9 analisar a\n\ninflu\u00eancia dos atrasos devido \u00e0 concorr\u00eancia pelo recurso da rede de comunica\u00e7\u00e3o. Analo-\n\ngamente, o caso 3 tem por objetivo analisar a influ\u00eancia dos atrasos devido \u00e0 concorr\u00eancia\n\ndas tasks no controle central. E por fim, o caso 4 refere-se \u00e0 an\u00e1lise da influ\u00eancia de todos\n\nos atrasos citados anteriormente.\n\nCada caso pode ser subdividido em tr\u00eas conjuntos de simula\u00e7\u00f5es, onde para cada\n\numa varia-se o par\u00e2metro ?ni = {1, 2, 3}rad/s. Para estes par\u00e2metros, escolhe-se h =\n{400, 200, 130}ms, respectivamente. Para todos os casos as tasks de controle possuem o\nmesmo WCET (10ms) e a mesma prioridade (2). Os n\u00f3s do controlador, do sensor e do\n\natuador tamb\u00e9m s\u00e3o interligados por uma rede CAN. As mensagens possuem a mesma\n\nprioridade e o mesmo n\u00famero de bits (80 bits), por simplifica\u00e7\u00e3o.\n\nAs grandezas avaliadas s\u00e3o as mesmas descritas no Cap\u00edtulo 4:\n\n\u2022 LkS - lat\u00eancia do sensor;\n\n\u2022 LkC - lat\u00eancia do controlador;\n\n\u2022 hk - intervalo de amostragem.\n\n6.1.1 Caso 1\n\nEste pode ser considerado o caso ideal, onde os atrasos s\u00e3o constantes. O pior caso da\n\nlat\u00eancia do sensor \u00e9\n\nLkS =\n80bits\n\n80 bits\nms\n\n+ 5 \u00d7 10 = 51ms,\n\nreferente ao tempo de transporte da mensagem pela rede somado ao tempo em que a\n\ntask demora para iniciar o c\u00e1lculo do sinal de controle (ou seja, o tempo em que a task\n\nespera para que as outras cinco tasks sejam executadas). Desta an\u00e1lise pr\u00e9via, conclui-se\n\n\n\n6.1 An\u00e1lise com o TrueTime 76\n\n0 0.05 0.1 0.15 0.2\n0\n\n20\n\n40\n\n60\n\n80\n\n100\n\nL\ns\n Task1 [s]\n\nO\nco\n\nrr\n\u00ea\n\nn\nci\n\na\n [\n\n%\n]\n\n0 0.05 0.1 0.15 0.2\n0\n\n20\n\n40\n\n60\n\n80\n\n100\n\nL\ns\n Task2 [s]\n\nO\nco\n\nrr\n\u00ea\n\nn\nci\n\na\n [\n\n%\n]\n\n0 0.05 0.1 0.15 0.2\n0\n\n20\n\n40\n\n60\n\n80\n\n100\n\nL\ns\n Task3 [s]\n\nO\nco\n\nrr\n\u00ea\n\nn\nci\n\na\n [\n\n%\n]\n\n0 0.05 0.1 0.15 0.2\n0\n\n20\n\n40\n\n60\n\n80\n\n100\n\nL\ns\n Task4 [s]\n\nO\nco\n\nrr\n\u00ea\n\nn\nci\n\na\n [\n\n%\n]\n\n0 0.05 0.1 0.15 0.2\n0\n\n20\n\n40\n\n60\n\n80\n\n100\n\nL\ns\n Task5 [s]\n\nO\nco\n\nrr\n\u00ea\n\nn\nci\n\na\n [\n\n%\n]\n\n0 0.05 0.1 0.15 0.2\n0\n\n20\n\n40\n\n60\n\n80\n\n100\n\nL\ns\n Task6 [s]\n\nO\nco\n\nrr\n\u00ea\n\nn\nci\n\na\n [\n\n%\n]\n\nFigura 6.1: Histogramas das lat\u00eancias do sensor das tasks de controle para o caso com\nh = 400ms.\n\nque o atraso devido \u00e0 rede, neste caso, \u00e9 pequeno (2%) em rela\u00e7\u00e3o ao atraso gerado pela\n\npreemp\u00e7\u00e3o das tasks. Os histogramas das lat\u00eancias do sensor para cada task de controle\n\nobtidas atrav\u00e9s das simula\u00e7\u00f5es com h = 400ms s\u00e3o apresentados na Figura 6.1. Percebe-se\n\nque os histogramas refletem o resultado anal\u00edtico do pior caso de lat\u00eancia do sensor.\n\nA lat\u00eancia do controlador \u00e9 id\u00eantica para todos os casos, sendo dada por\n\nLkC = 10 +\n80bits\n\n80 bits\nms\n\n= 11ms,\n\nreferente ao tempo de execu\u00e7\u00e3o da task somado ao tempo de transporte da mensagem\n\npela rede. Novamente, o atraso referente \u00e0 rede, neste caso, \u00e9 pequeno (10%) em rela\u00e7\u00e3o\n\nao atraso devido ao tempo de execu\u00e7\u00e3o da task. Os histogramas das lat\u00eancias do con-\n\ntrolador para cada task de controle obtidas atrav\u00e9s das simula\u00e7\u00f5es com h = 400ms s\u00e3o\n\napresentados na Figura 6.2. Percebe-se que os histogramas refletem o resultado anal\u00edtico\n\ndo pior caso de lat\u00eancia do controlador.\n\nPara o pior caso (a task que precisa esperar as outras cinco serem executadas), o\n\ntempo de execu\u00e7\u00e3o do ciclo completo (51 + 11 = 62ms) n\u00e3o ultrapassa nenhum dos\n\nvalores dos per\u00edodos de amostragem nominal adotados. Assim, espera-se que os intervalos\n\nde amostragem sejam constantes e igual ao per\u00edodo de amostragem nominal (h = hk).\n\n\n\n6.1 An\u00e1lise com o TrueTime 77\n\n0 0.02 0.04 0.06 0.08 0.1 0.12\n0\n\n20\n\n40\n\n60\n\n80\n\n100\n\nL\nc\n Task1 [s]\n\nO\nco\n\nrr\n\u00ea\n\nn\nci\n\na\n [\n\n%\n]\n\n0 0.02 0.04 0.06 0.08 0.1 0.12\n0\n\n20\n\n40\n\n60\n\n80\n\n100\n\nL\nc\n Task2 [s]\n\nO\nco\n\nrr\n\u00ea\n\nn\nci\n\na\n [\n\n%\n]\n\n0 0.02 0.04 0.06 0.08 0.1 0.12\n0\n\n20\n\n40\n\n60\n\n80\n\n100\n\nL\nc\n Task3 [s]\n\nO\nco\n\nrr\n\u00ea\n\nn\nci\n\na\n [\n\n%\n]\n\n0 0.02 0.04 0.06 0.08 0.1 0.12\n0\n\n20\n\n40\n\n60\n\n80\n\n100\n\nL\nc\n Task4 [s]\n\nO\nco\n\nrr\n\u00ea\n\nn\nci\n\na\n [\n\n%\n]\n\n0 0.02 0.04 0.06 0.08 0.1 0.12\n0\n\n20\n\n40\n\n60\n\n80\n\n100\n\nL\nc\n Task5 [s]\n\nO\nco\n\nrr\n\u00ea\n\nn\nci\n\na\n [\n\n%\n]\n\n0 0.02 0.04 0.06 0.08 0.1 0.12\n0\n\n20\n\n40\n\n60\n\n80\n\n100\n\nL\nc\n Task6 [s]\n\nO\nco\n\nrr\n\u00ea\n\nn\nci\n\na\n [\n\n%\n]\n\nFigura 6.2: Histogramas das lat\u00eancias do controlador das tasks de controle para\nh = 400ms, para o Caso 1.\n\nEste resultado anal\u00edtico corrobora com os histogramas dos intervalos de amostragem para\n\ncada task de controle obtidos atrav\u00e9s das simula\u00e7\u00f5es com h = 400ms, apresentados na\n\nFigura 6.3.\n\nAs distribui\u00e7\u00f5es das lat\u00eancias para as simula\u00e7\u00f5es com h = {200, 130}ms s\u00e3o id\u00eanticas\n\u00e0s encontradas para o caso em que h = 400ms. A diferen\u00e7a est\u00e1 na carga1 na CPU, como\n\npode ser observado nos gr\u00e1ficos da Figura 6.4. Nota-se que quanto menor o per\u00edodo de\n\namostragem, menos tempo o processador ficar\u00e1 ocioso.\n\n1Porcentagem referente ao tempo m\u00e9dio no qual o processador est\u00e1 sendo utilizado.\n\n\n\n6.1 An\u00e1lise com o TrueTime 78\n\n0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8\n0\n\n20\n\n40\n\n60\n\n80\n\n100\n\nh\nk\n Task1 [s]\n\nO\nco\n\nrr\n\u00ea\n\nn\nci\n\na\n [\n\n%\n]\n\n0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8\n0\n\n20\n\n40\n\n60\n\n80\n\n100\n\nh\nk\n Task2 [s]\n\nO\nco\n\nrr\n\u00ea\n\nn\nci\n\na\n [\n\n%\n]\n\n0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8\n0\n\n20\n\n40\n\n60\n\n80\n\n100\n\nh\nk\n Task3 [s]\n\nO\nco\n\nrr\n\u00ea\n\nn\nci\n\na\n [\n\n%\n]\n\n0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8\n0\n\n20\n\n40\n\n60\n\n80\n\n100\n\nh\nk\n Task4 [s]\n\nO\nco\n\nrr\n\u00ea\n\nn\nci\n\na\n [\n\n%\n]\n\n0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8\n0\n\n20\n\n40\n\n60\n\n80\n\n100\n\nh\nk\n Task5 [s]\n\nO\nco\n\nrr\n\u00ea\n\nn\nci\n\na\n [\n\n%\n]\n\n0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8\n0\n\n20\n\n40\n\n60\n\n80\n\n100\n\nh\nk\n Task6 [s]\n\nO\nco\n\nrr\n\u00ea\n\nn\nci\n\na\n [\n\n%\n]\n\nFigura 6.3: Histogramas dos intervalos de amostragem das tasks de controle para\nh = 400ms, para o Caso 1.\n\n\n\n6.1 An\u00e1lise com o TrueTime 79\n\n0 5 10 15 20 25 30 35 40 45 50\n0\n\n10\n\n20\n\n30\n\n40\n\n50\n\n60\n\n70\n\n80\n\n90\n\n100\n\nTempo [s]\n\nC\na\n\nrg\na\n\n [\n%\n\n]\n\n(a) h = 400ms\n\n0 5 10 15 20 25 30 35 40 45 50\n0\n\n10\n\n20\n\n30\n\n40\n\n50\n\n60\n\n70\n\n80\n\n90\n\n100\n\nTempo [s]\n\nC\na\n\nrg\na\n\n [\n%\n\n]\n\n(b) h = 200ms\n\n0 5 10 15 20 25 30 35 40 45 50\n0\n\n10\n\n20\n\n30\n\n40\n\n50\n\n60\n\n70\n\n80\n\n90\n\n100\n\nTempo [s]\n\nC\na\n\nrg\na\n\n [\n%\n\n]\n\n(c) h = 130ms\n\nFigura 6.4: Carga na CPU em fun\u00e7\u00e3o do tempo para h = {400, 200, 130}ms, para o\nCaso 1.\n\n\n\n6.1 An\u00e1lise com o TrueTime 80\n\n6.1.2 Caso 2\n\nO intuito agora \u00e9 verificar a influ\u00eancia do aumento de carga2 na rede. Para isso acrescenta-\n\nse um n\u00f3 extra na rede de forma que 80% de sua banda seja utilizada aleatoriamente.\n\nComo as lat\u00eancias agora possuem um termo de car\u00e1ter aleat\u00f3rio (atraso no envio e recebi-\n\nmento de mensagens pela rede), descri\u00e7\u00f5es formais n\u00e3o s\u00e3o feitas. E por isso n\u00e3o \u00e9 poss\u00edvel\n\npredizer o comportamento dos intervalos de amostragem sem recorrer aos resultados das\n\nsimula\u00e7\u00f5es.\n\nPara este caso, as lat\u00eancias apresentadas correspondem \u00e0 simula\u00e7\u00e3o que adota h =\n\n130ms. Este ser\u00e1 considerado o pior caso visto que, pressup\u00f5e-se que os atrasos ser\u00e3o\n\nmaiores quanto mais escassos forem os recursos computacionais. Entretanto, s\u00e3o tomadas\n\ntamb\u00e9m as estat\u00edsticas das lat\u00eancias para h = {400, 200}ms na an\u00e1lise com o Jitterbug\nna pr\u00f3xima se\u00e7\u00e3o.\n\nO resultado da simula\u00e7\u00e3o para a lat\u00eancia do sensor \u00e9 mostrado na Figura 6.5. \u00c9\n\nposs\u00edvel observar que neste caso, ainda existem os atrasos constantes devido ao escalona-\n\nmento das tasks de controle. Percebe-se que a rede de comunica\u00e7\u00e3o deu \u00e0 estas lat\u00eancias\n\num car\u00e1ter aleat\u00f3rio, cujas ocorr\u00eancias se concentram pr\u00f3ximo aos valores obtidos para\n\no Caso 1. E ainda, quanto maior o atraso referente ao escalonamento, mais distribu\u00eddas\n\ns\u00e3o as lat\u00eancias do sensor.\n\nResultados semelhantes podem ser observados na Figura 6.6, onde as distribui\u00e7\u00f5es\n\ndas lat\u00eancias LkC tamb\u00e9m apresentam um car\u00e1ter aleat\u00f3rio e concentram-se pr\u00f3ximo aos\n\nvalores obtidos para o Caso 1. E ainda, quanto maior o atraso referente ao escalonamento,\n\nmais distribu\u00eddas s\u00e3o as lat\u00eancias do controlador.\n\nEstas varia\u00e7\u00f5es das lat\u00eancias resultam na varia\u00e7\u00e3o dos intervalos de amostragem,\n\nvisto na Figura 6.7. Percebe-se que estes intervalos de amostragem s\u00e3o normalmente\n\ndistribu\u00eddos em torno do per\u00edodo de amostragem nominal h = 130ms, e quanto maior\n\no atraso referente ao escalonamento, mais disperso \u00e9 a distribui\u00e7\u00e3o, como verificado na\n\nTabela 6.1.\n\nNovamente, para cada h existe uma diferente carga na CPU, como pode ser obser-\n\nvado nos gr\u00e1ficos da Figura 6.8. A varia\u00e7\u00e3o das lat\u00eancias causa uma clara varia\u00e7\u00e3o na\n\ncarga somente para o pior caso, com h = 130ms, cujos recursos computacionais s\u00e3o mais\n\nescassos.\n\n2Porcentagem referente ao tempo m\u00e9dio no qual a rede est\u00e1 sendo utilizada\n\n\n\n6.1 An\u00e1lise com o TrueTime 81\n\n0 0.01 0.02 0.03 0.04 0.05 0.06\n0\n\n10\n\n20\n\n30\n\n40\n\n50\n\nL\ns\n Task1 [s]\n\nO\nco\n\nrr\n\u00ea\n\nn\nci\n\na\n [\n\n%\n]\n\n0 0.01 0.02 0.03 0.04 0.05 0.06\n0\n\n10\n\n20\n\n30\n\n40\n\n50\n\nL\ns\n Task2 [s]\n\nO\nco\n\nrr\n\u00ea\n\nn\nci\n\na\n [\n\n%\n]\n\n0 0.01 0.02 0.03 0.04 0.05 0.06\n0\n\n10\n\n20\n\n30\n\n40\n\n50\n\nL\ns\n Task3 [s]\n\nO\nco\n\nrr\n\u00ea\n\nn\nci\n\na\n [\n\n%\n]\n\n0 0.01 0.02 0.03 0.04 0.05 0.06\n0\n\n10\n\n20\n\n30\n\n40\n\n50\n\nL\ns\n Task4 [s]\n\nO\nco\n\nrr\n\u00ea\n\nn\nci\n\na\n [\n\n%\n]\n\n0 0.01 0.02 0.03 0.04 0.05 0.06\n0\n\n10\n\n20\n\n30\n\n40\n\n50\n\nL\ns\n Task5 [s]\n\nO\nco\n\nrr\n\u00ea\n\nn\nci\n\na\n [\n\n%\n]\n\n0 0.01 0.02 0.03 0.04 0.05 0.06\n0\n\n10\n\n20\n\n30\n\n40\n\n50\n\nL\ns\n Task6 [s]\n\nO\nco\n\nrr\n\u00ea\n\nn\nci\n\na\n [\n\n%\n]\n\nFigura 6.5: Histogramas das lat\u00eancias do sensor das tasks de controle para h = 130ms,\npara o Caso 2.\n\n0 0.005 0.01 0.015 0.02 0.025 0.03 0.035 0.04\n0\n\n10\n\n20\n\n30\n\n40\n\n50\n\nL\nc\n Task1 [s]\n\nO\nco\n\nrr\n\u00ea\n\nn\nci\n\na\n [\n\n%\n]\n\n0 0.005 0.01 0.015 0.02 0.025 0.03 0.035 0.04\n0\n\n10\n\n20\n\n30\n\n40\n\n50\n\nL\nc\n Task2 [s]\n\nO\nco\n\nrr\n\u00ea\n\nn\nci\n\na\n [\n\n%\n]\n\n0 0.005 0.01 0.015 0.02 0.025 0.03 0.035 0.04\n0\n\n10\n\n20\n\n30\n\n40\n\n50\n\nL\nc\n Task3 [s]\n\nO\nco\n\nrr\n\u00ea\n\nn\nci\n\na\n [\n\n%\n]\n\n0 0.005 0.01 0.015 0.02 0.025 0.03 0.035 0.04\n0\n\n10\n\n20\n\n30\n\n40\n\n50\n\nL\nc\n Task4 [s]\n\nO\nco\n\nrr\n\u00ea\n\nn\nci\n\na\n [\n\n%\n]\n\n0 0.005 0.01 0.015 0.02 0.025 0.03 0.035 0.04\n0\n\n10\n\n20\n\n30\n\n40\n\n50\n\nL\nc\n Task5 [s]\n\nO\nco\n\nrr\n\u00ea\n\nn\nci\n\na\n [\n\n%\n]\n\n0 0.005 0.01 0.015 0.02 0.025 0.03 0.035 0.04\n0\n\n10\n\n20\n\n30\n\n40\n\n50\n\nL\nc\n Task6 [s]\n\nO\nco\n\nrr\n\u00ea\n\nn\nci\n\na\n [\n\n%\n]\n\nFigura 6.6: Histogramas das lat\u00eancias do controlador das tasks de controle para\nh = 130ms, para o Caso 2.\n\n\n\n6.1 An\u00e1lise com o TrueTime 82\n\n0 0.05 0.1 0.15 0.2 0.25\n0\n\n2\n\n4\n\n6\n\n8\n\n10\n\nh\nk\n Task1 [s]\n\nO\nco\n\nrr\n\u00ea\n\nn\nci\n\na\n [\n\n%\n]\n\n0 0.05 0.1 0.15 0.2 0.25\n0\n\n2\n\n4\n\n6\n\n8\n\n10\n\nh\nk\n Task2 [s]\n\nO\nco\n\nrr\n\u00ea\n\nn\nci\n\na\n [\n\n%\n]\n\n0 0.05 0.1 0.15 0.2 0.25\n0\n\n2\n\n4\n\n6\n\n8\n\n10\n\nh\nk\n Task3 [s]\n\nO\nco\n\nrr\n\u00ea\n\nn\nci\n\na\n [\n\n%\n]\n\n0 0.05 0.1 0.15 0.2 0.25\n0\n\n2\n\n4\n\n6\n\n8\n\n10\n\nh\nk\n Task4 [s]\n\nO\nco\n\nrr\n\u00ea\n\nn\nci\n\na\n [\n\n%\n]\n\n0 0.05 0.1 0.15 0.2 0.25\n0\n\n2\n\n4\n\n6\n\n8\n\n10\n\nh\nk\n Task5 [s]\n\nO\nco\n\nrr\n\u00ea\n\nn\nci\n\na\n [\n\n%\n]\n\n0 0.05 0.1 0.15 0.2 0.25\n0\n\n2\n\n4\n\n6\n\n8\n\n10\n\nh\nk\n Task6 [s]\n\nO\nco\n\nrr\n\u00ea\n\nn\nci\n\na\n [\n\n%\n]\n\nFigura 6.7: Histogramas dos intervalos de amostragem das tasks de controle para\nh = 130ms, para o Caso 2.\n\nTask 1 2 3 4 5 6\nM\u00e9dia[ms] 130 130 130 130 130 130\n\nDesvio padr\u00e3o[ms] 9.4 10.7 14.4 16.1 17.7 20.0\n\nTabela 6.1: M\u00e9dias e desvios padr\u00e3o dos intervalos de amostragem das tasks de\ncontrole para h = 130ms, para o Caso 2.\n\n\n\n6.1 An\u00e1lise com o TrueTime 83\n\n0 5 10 15 20 25 30 35 40 45 50\n0\n\n10\n\n20\n\n30\n\n40\n\n50\n\n60\n\n70\n\n80\n\n90\n\n100\n\nTempo [s]\n\nC\na\n\nrg\na\n\n [\n%\n\n]\n\n(a) h = 400ms\n\n0 5 10 15 20 25 30 35 40 45 50\n0\n\n10\n\n20\n\n30\n\n40\n\n50\n\n60\n\n70\n\n80\n\n90\n\n100\n\nTempo [s]\n\nC\na\n\nrg\na\n\n [\n%\n\n]\n\n(b) h = 200ms\n\n0 5 10 15 20 25 30 35 40 45 50\n0\n\n10\n\n20\n\n30\n\n40\n\n50\n\n60\n\n70\n\n80\n\n90\n\n100\n\nTempo [s]\n\nC\na\n\nrg\na\n\n [\n%\n\n]\n\n(c) h = 130ms\n\nFigura 6.8: Carga na CPU em fun\u00e7\u00e3o do tempo para h = {400, 200, 130}ms, para o\nCaso 2.\n\n\n\n6.1 An\u00e1lise com o TrueTime 84\n\n6.1.3 Caso 3\n\nO intuito agora \u00e9 verificar a influ\u00eancia do aumento de carga na CPU. Para isso acrescenta-\n\nse uma task peri\u00f3dica extra no controle central com WCET uniformemente vari\u00e1vel no\n\nintervalo [0, 500]ms, com per\u00edodo 1000ms e prioridade 1. Nota-se que as lat\u00eancias possuem\n\num termo de car\u00e1ter aleat\u00f3rio (atraso no escalonamento das tasks). E novamente, as\n\nlat\u00eancias apresentadas correspondem \u00e0 simula\u00e7\u00e3o que adota h = 130ms pela mesma\n\nhip\u00f3tese anterior. Entretanto, s\u00e3o tomadas tamb\u00e9m as estat\u00edsticas das lat\u00eancias para\n\nh = {400, 200}ms na an\u00e1lise com o Jitterbug na pr\u00f3xima se\u00e7\u00e3o.\n\nO escalonamento das tasks no controle central est\u00e1 representado no diagrama de\n\nescalonamento da Figura 6.9. Nota-se que a task extra nunca fica no estado de preemp\u00e7\u00e3o,\n\ndevido \u00e0 sua maior prioridade.\n\nO resultado da simula\u00e7\u00e3o para a lat\u00eancia do sensor \u00e9 mostrado na Figura 6.10.\n\nPercebe-se que aproximadamente metade das ocorr\u00eancias se concentram perto dos va-\n\nlores obtidos no Caso1, por\u00e9m, outros 50% est\u00e3o mais dispersos que no Caso 2.\n\nO resultado da simula\u00e7\u00e3o para a lat\u00eancia do controlador \u00e9 mostrado na Figura 6.11.\n\nDiferentemente do Caso 2, as distribui\u00e7\u00f5es, neste caso, n\u00e3o experimentam muita varia\u00e7\u00e3o,\n\nse concentrando pr\u00f3ximo aos valores obtidos no Caso 1.\n\nPela Figura 6.12 nota-se que os intervalos de amostragem ficam concentrados princi-\n\npalmente em dois valores, sendo um deles equivalente ao per\u00edodo de amostragem nominal.\n\nA carga na CPU para cada caso \u00e9 dada na Figura 6.13. Percebe-se que a carga\n\ncomputacional \u00e9 vari\u00e1vel. As m\u00e9dias e os desvios padr\u00e3o s\u00e3o dados na Tabela 6.2. Nota-\n\nse que a diminui\u00e7\u00e3o dos per\u00edodos de amostragem causam um aumento na m\u00e9dia da carga,\n\nmas n\u00e3o altera o desvio padr\u00e3o.\n\nh h = 400ms h = 200ms h = 130ms\nM\u00e9dias [%] 43.1 55.6 71.7\n\nDesvios padr\u00e3o [%] 14.9 14.6 14.9\n\nTabela 6.2: M\u00e9dias e desvios padr\u00e3o da carga na CPU, para h = {400, 200, 130}ms,\npara o Caso 3.\n\n\n\n6.1 An\u00e1lise com o TrueTime 85\n\n0 5 10 15 20 25 30 35 40 45 50\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n8\n\nTempo [s]\n\nE\nst\n\na\nd\n\no\n d\n\na\ns \n\nta\nsk\n\ns\n\n \n\n Task 1\nTask 2\nTask 3\nTask 4\nT\task 5\nTask 6\nTask\nExtra\n\nFigura 6.9: Diagrama de escalonamento das tasks do controle central para h = 130ms,\npara o Caso 3.\n\n0 0.01 0.02 0.03 0.04 0.05 0.06\n0\n\n20\n\n40\n\n60\n\n80\n\n100\n\nL\ns\n Task1 [s]\n\nO\nco\n\nrr\n\u00ea\n\nn\nci\n\na\n [\n\n%\n]\n\n0 0.01 0.02 0.03 0.04 0.05 0.06\n0\n\n20\n\n40\n\n60\n\n80\n\n100\n\nL\ns\n Task2 [s]\n\nO\nco\n\nrr\n\u00ea\n\nn\nci\n\na\n [\n\n%\n]\n\n0 0.01 0.02 0.03 0.04 0.05 0.06\n0\n\n20\n\n40\n\n60\n\n80\n\n100\n\nL\ns\n Task3 [s]\n\nO\nco\n\nrr\n\u00ea\n\nn\nci\n\na\n [\n\n%\n]\n\n0 0.01 0.02 0.03 0.04 0.05 0.06\n0\n\n20\n\n40\n\n60\n\n80\n\n100\n\nL\ns\n Task4 [s]\n\nO\nco\n\nrr\n\u00ea\n\nn\nci\n\na\n [\n\n%\n]\n\n0 0.01 0.02 0.03 0.04 0.05 0.06\n0\n\n20\n\n40\n\n60\n\n80\n\n100\n\nL\ns\n Task5 [s]\n\nO\nco\n\nrr\n\u00ea\n\nn\nci\n\na\n [\n\n%\n]\n\n0 0.01 0.02 0.03 0.04 0.05 0.06\n0\n\n20\n\n40\n\n60\n\n80\n\n100\n\nL\ns\n Task6 [s]\n\nO\nco\n\nrr\n\u00ea\n\nn\nci\n\na\n [\n\n%\n]\n\nFigura 6.10: Histogramas das lat\u00eancias do sensor das tasks de controle para\nh = 130ms, para o Caso 3.\n\n\n\n6.1 An\u00e1lise com o TrueTime 86\n\n0 0.005 0.01 0.015 0.02 0.025 0.03 0.035 0.04\n0\n\n20\n\n40\n\n60\n\n80\n\n100\n\nL\nc\n Task1 [s]\n\nO\nco\n\nrr\n\u00ea\n\nn\nci\n\na\n [\n\n%\n]\n\n0 0.005 0.01 0.015 0.02 0.025 0.03 0.035 0.04\n0\n\n20\n\n40\n\n60\n\n80\n\n100\n\nL\nc\n Task2 [s]\n\nO\nco\n\nrr\n\u00ea\n\nn\nci\n\na\n [\n\n%\n]\n\n0 0.005 0.01 0.015 0.02 0.025 0.03 0.035 0.04\n0\n\n20\n\n40\n\n60\n\n80\n\n100\n\nL\nc\n Task3 [s]\n\nO\nco\n\nrr\n\u00ea\n\nn\nci\n\na\n [\n\n%\n]\n\n0 0.005 0.01 0.015 0.02 0.025 0.03 0.035 0.04\n0\n\n20\n\n40\n\n60\n\n80\n\n100\n\nL\nc\n Task4 [s]\n\nO\nco\n\nrr\n\u00ea\n\nn\nci\n\na\n [\n\n%\n]\n\n0 0.005 0.01 0.015 0.02 0.025 0.03 0.035 0.04\n0\n\n20\n\n40\n\n60\n\n80\n\n100\n\nL\nc\n Task5 [s]\n\nO\nco\n\nrr\n\u00ea\n\nn\nci\n\na\n [\n\n%\n]\n\n0 0.005 0.01 0.015 0.02 0.025 0.03 0.035 0.04\n0\n\n20\n\n40\n\n60\n\n80\n\n100\n\nL\nc\n Task6 [s]\n\nO\nco\n\nrr\n\u00ea\n\nn\nci\n\na\n [\n\n%\n]\n\nFigura 6.11: Histogramas das lat\u00eancias do controlador das tasks de controle para\nh = 130ms, para o Caso 3.\n\n0 0.05 0.1 0.15 0.2 0.25\n0\n\n20\n\n40\n\n60\n\n80\n\n100\n\nh\nk\n Task1 [s]\n\nO\nco\n\nrr\n\u00ea\n\nn\nci\n\na\n [\n\n%\n]\n\n0 0.05 0.1 0.15 0.2 0.25\n0\n\n20\n\n40\n\n60\n\n80\n\n100\n\nh\nk\n Task2 [s]\n\nO\nco\n\nrr\n\u00ea\n\nn\nci\n\na\n [\n\n%\n]\n\n0 0.05 0.1 0.15 0.2 0.25\n0\n\n20\n\n40\n\n60\n\n80\n\n100\n\nh\nk\n Task3 [s]\n\nO\nco\n\nrr\n\u00ea\n\nn\nci\n\na\n [\n\n%\n]\n\n0 0.05 0.1 0.15 0.2 0.25\n0\n\n20\n\n40\n\n60\n\n80\n\n100\n\nh\nk\n Task4 [s]\n\nO\nco\n\nrr\n\u00ea\n\nn\nci\n\na\n [\n\n%\n]\n\n0 0.05 0.1 0.15 0.2 0.25\n0\n\n20\n\n40\n\n60\n\n80\n\n100\n\nh\nk\n Task5 [s]\n\nO\nco\n\nrr\n\u00ea\n\nn\nci\n\na\n [\n\n%\n]\n\n0 0.05 0.1 0.15 0.2 0.25\n0\n\n20\n\n40\n\n60\n\n80\n\n100\n\nh\nk\n Task6 [s]\n\nO\nco\n\nrr\n\u00ea\n\nn\nci\n\na\n [\n\n%\n]\n\nFigura 6.12: Histogramas dos intervalos de amostragem das tasks de controle para\nh = 130ms, para o Caso 3.\n\n\n\n6.1 An\u00e1lise com o TrueTime 87\n\n0 5 10 15 20 25 30 35 40 45 50\n0\n\n10\n\n20\n\n30\n\n40\n\n50\n\n60\n\n70\n\n80\n\n90\n\n100\n\nTempo [s]\n\nC\na\n\nrg\na\n\n [\n%\n\n]\n\n(a) h = 400ms\n\n0 5 10 15 20 25 30 35 40 45 50\n0\n\n10\n\n20\n\n30\n\n40\n\n50\n\n60\n\n70\n\n80\n\n90\n\n100\n\nTempo [s]\n\nC\na\n\nrg\na\n\n [\n%\n\n]\n\n(b) h = 200ms\n\n0 5 10 15 20 25 30 35 40 45 50\n0\n\n10\n\n20\n\n30\n\n40\n\n50\n\n60\n\n70\n\n80\n\n90\n\n100\n\nTempo [s]\n\nC\na\n\nrg\na\n\n [\n%\n\n]\n\n(c) h = 130ms\n\nFigura 6.13: Carga na CPU em fun\u00e7\u00e3o do tempo para h = {400, 200, 130}ms, para o\nCaso 3.\n\n6.1.4 Caso 4\n\nNos Casos 2 e 3, o problema dos atrasos devido ao tr\u00e1fego na rede de comunica\u00e7\u00e3o e ao es-\n\ncalonamento de tasks foi tratado separadamente. Neste Caso 4, estas duas fontes de atraso\n\n\n\n6.1 An\u00e1lise com o TrueTime 88\n\n0 5 10 15 20 25 30 35 40 45 50\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n8\n\nTempo [s]\n\nE\nst\n\na\nd\n\no\n d\n\na\ns \n\nta\nsk\n\ns\n\n \n\n \nTask 1\nTask 2\nTask 3\nTask 4\nTask 5\nTask 6\nTask\nExtra\n\nFigura 6.14: Diagrama de escalonamento das tasks do controle central para\nh = 130ms, para o Caso 4.\n\nagem em conjunto. Novamente, as lat\u00eancias apresentadas correspondem \u00e0 simula\u00e7\u00e3o que\n\nadota h = 130ms.\n\nPercebe-se atrav\u00e9s das Figuras 6.14, 6.15, 6.16 e 6.17 que tanto os efeitos do Caso 2\n\ncomo os efeitos do Caso 3 est\u00e3o contidos neste Caso 4. Estes efeitos agindo em conjunto,\n\ncomo visto na Figura 6.18, aumenta a dispers\u00e3o da distribui\u00e7\u00e3o intervalo de amostra-\n\ngem de forma que esta se aproxima mais de uma distribui\u00e7\u00e3o uniforme (com intervalo de\n\naproximadamente [50, 150]ms) do que uma distribui\u00e7\u00e3o normal. O impacto maior desta\n\ndistribui\u00e7\u00e3o uniforme, do ponto de vista de controle, \u00e9 no termo integral do controlador\n\ndiscreto, que, como visto no Cap\u00edtulo 5, considera o intervalo de integra\u00e7\u00e3o (h) cons-\n\ntante. Na an\u00e1lise com o Jitterbug ser\u00e1 poss\u00edvel analisar esse impacto no que se refere \u00e0\n\nestabilidade (no sentido quadr\u00e1tico m\u00e9dio) e ao desempenho do sistema de controle.\n\n\n\n6.1 An\u00e1lise com o TrueTime 89\n\n0 0.01 0.02 0.03 0.04 0.05 0.06\n0\n\n10\n\n20\n\n30\n\n40\n\n50\n\nL\ns\n Task1 [s]\n\nO\nco\n\nrr\n\u00ea\n\nn\nci\n\na\n [\n\n%\n]\n\n0 0.01 0.02 0.03 0.04 0.05 0.06\n0\n\n10\n\n20\n\n30\n\n40\n\n50\n\nL\ns\n Task2 [s]\n\nO\nco\n\nrr\n\u00ea\n\nn\nci\n\na\n [\n\n%\n]\n\n0 0.01 0.02 0.03 0.04 0.05 0.06\n0\n\n10\n\n20\n\n30\n\n40\n\n50\n\nL\ns\n Task3 [s]\n\nO\nco\n\nrr\n\u00ea\n\nn\nci\n\na\n [\n\n%\n]\n\n0 0.01 0.02 0.03 0.04 0.05 0.06\n0\n\n10\n\n20\n\n30\n\n40\n\n50\n\nL\ns\n Task4 [s]\n\nO\nco\n\nrr\n\u00ea\n\nn\nci\n\na\n [\n\n%\n]\n\n0 0.01 0.02 0.03 0.04 0.05 0.06\n0\n\n10\n\n20\n\n30\n\n40\n\n50\n\nL\ns\n Task5 [s]\n\nO\nco\n\nrr\n\u00ea\n\nn\nci\n\na\n [\n\n%\n]\n\n0 0.01 0.02 0.03 0.04 0.05 0.06\n0\n\n10\n\n20\n\n30\n\n40\n\n50\n\nL\ns\n Task6 [s]\n\nO\nco\n\nrr\n\u00ea\n\nn\nci\n\na\n [\n\n%\n]\n\nFigura 6.15: Histogramas das lat\u00eancias do sensor das tasks de controle para\nh = 130ms, para o Caso 4.\n\n0 0.005 0.01 0.015 0.02 0.025 0.03 0.035 0.04\n0\n\n10\n\n20\n\n30\n\n40\n\n50\n\nL\nc\n Task1 [s]\n\nO\nco\n\nrr\n\u00ea\n\nn\nci\n\na\n [\n\n%\n]\n\n0 0.005 0.01 0.015 0.02 0.025 0.03 0.035 0.04\n0\n\n10\n\n20\n\n30\n\n40\n\n50\n\nL\nc\n Task2 [s]\n\nO\nco\n\nrr\n\u00ea\n\nn\nci\n\na\n [\n\n%\n]\n\n0 0.005 0.01 0.015 0.02 0.025 0.03 0.035 0.04\n0\n\n10\n\n20\n\n30\n\n40\n\n50\n\nL\nc\n Task3 [s]\n\nO\nco\n\nrr\n\u00ea\n\nn\nci\n\na\n [\n\n%\n]\n\n0 0.005 0.01 0.015 0.02 0.025 0.03 0.035 0.04\n0\n\n10\n\n20\n\n30\n\n40\n\n50\n\nL\nc\n Task4 [s]\n\nO\nco\n\nrr\n\u00ea\n\nn\nci\n\na\n [\n\n%\n]\n\n0 0.005 0.01 0.015 0.02 0.025 0.03 0.035 0.04\n0\n\n10\n\n20\n\n30\n\n40\n\n50\n\nL\nc\n Task5 [s]\n\nO\nco\n\nrr\n\u00ea\n\nn\nci\n\na\n [\n\n%\n]\n\n0 0.005 0.01 0.015 0.02 0.025 0.03 0.035 0.04\n0\n\n10\n\n20\n\n30\n\n40\n\n50\n\nL\nc\n Task6 [s]\n\nO\nco\n\nrr\n\u00ea\n\nn\nci\n\na\n [\n\n%\n]\n\nFigura 6.16: Histogramas das lat\u00eancias do controlador das tasks de controle para\nh = 130ms, para o Caso 4.\n\n\n\n6.1 An\u00e1lise com o TrueTime 90\n\n0 5 10 15 20 25 30 35 40 45 50\n0\n\n10\n\n20\n\n30\n\n40\n\n50\n\n60\n\n70\n\n80\n\n90\n\n100\n\nTempo [s]\n\nC\na\n\nrg\na\n\n [\n%\n\n]\n\n(a) h = 400ms\n\n0 5 10 15 20 25 30 35 40 45 50\n0\n\n10\n\n20\n\n30\n\n40\n\n50\n\n60\n\n70\n\n80\n\n90\n\n100\n\nTempo [s]\n\nC\na\n\nrg\na\n\n [\n%\n\n]\n\n(b) h = 200ms\n\n0 5 10 15 20 25 30 35 40 45 50\n0\n\n10\n\n20\n\n30\n\n40\n\n50\n\n60\n\n70\n\n80\n\n90\n\n100\n\nTempo [s]\n\nC\na\n\nrg\na\n\n [\n%\n\n]\n\n(c) h = 130ms\n\nFigura 6.17: Carga na CPU em fun\u00e7\u00e3o do tempo para h = {400, 200, 130}ms, para o\nCaso 4.\n\n\n\n6.1 An\u00e1lise com o TrueTime 91\n\n0 0.05 0.1 0.15 0.2 0.25\n0\n\n10\n\n20\n\n30\n\n40\n\n50\n\nh\nk\n Task1 [s]\n\nO\nco\n\nrr\n\u00ea\n\nn\nci\n\na\n [\n\n%\n]\n\n0 0.05 0.1 0.15 0.2 0.25\n0\n\n10\n\n20\n\n30\n\n40\n\n50\n\nh\nk\n Task2 [s]\n\nO\nco\n\nrr\n\u00ea\n\nn\nci\n\na\n [\n\n%\n]\n\n0 0.05 0.1 0.15 0.2 0.25\n0\n\n10\n\n20\n\n30\n\n40\n\n50\n\nh\nk\n Task3 [s]\n\nO\nco\n\nrr\n\u00ea\n\nn\nci\n\na\n [\n\n%\n]\n\n0 0.05 0.1 0.15 0.2 0.25\n0\n\n10\n\n20\n\n30\n\n40\n\n50\n\nh\nk\n Task4 [s]\n\nO\nco\n\nrr\n\u00ea\n\nn\nci\n\na\n [\n\n%\n]\n\n0 0.05 0.1 0.15 0.2 0.25\n0\n\n10\n\n20\n\n30\n\n40\n\n50\n\nh\nk\n Task5 [s]\n\nO\nco\n\nrr\n\u00ea\n\nn\nci\n\na\n [\n\n%\n]\n\n0 0.05 0.1 0.15 0.2 0.25\n0\n\n10\n\n20\n\n30\n\n40\n\n50\n\nh\nk\n Task6 [s]\n\nO\nco\n\nrr\n\u00ea\n\nn\nci\n\na\n [\n\n%\n]\n\nFigura 6.18: Histogramas dos intervalos de amostragem das tasks de controle para\nh = 130ms, para o Caso 4.\n\n\n\n6.2 An\u00e1lise com o Jitterbug 92\n\n6.2 An\u00e1lise com o Jitterbug\n\nO modelo Jitterbug \u00e9 o mesmo adotado no Cap\u00edtulo 4, onde H1(z) = 1, H2(z) = PI(z) e\n\nH3(z) = 1 representam o n\u00f3 do sensor, do controlador e do atuador, respectivamente; e\n\nG(s) \u00e9 o modelo de um GL i (surge,sway,heave e yaw ) representado por uma fun\u00e7\u00e3o de\n\ntransfer\u00eancia de primeira ordem, do tipo\n\nG(s) =\nb\n\ns + a\n,\n\nonde\n\na(x?i ) = ?\ndLi\nmi\n\n? 2\ndQi\nmi\n\n|x?i |,\n\nb =\n1\n\nmi\n.\n\nPortanto, para cada ponto de opera\u00e7\u00e3o existe uma fun\u00e7\u00e3o de transfer\u00eancia. No caso de\n\nroll e pitch h\u00e1 o controle passivo (ou seja, a resultante do empuxo) que mant\u00e9m estes dois\n\nGLs est\u00e1veis (SOUZA, 2003), por isso n\u00e3o foram considerados nesta an\u00e1lise.\n\nO c\u00e1lculo da fun\u00e7\u00e3o de custo \u00e9 feito fixando-se wni (o que \u00e9 equivalente \u00e0 fixar h pela\n\nparametriza\u00e7\u00e3o adotada); adotando os pontos de opera\u00e7\u00e3o x?1 = 0.5m/s, x\n?\n2 = 0.5m/s,\n\nx?3 = 0.5m/s e x\n?\n6 = 1.4rad/s; e variando-se o coeficiente de amortecimento ?i. Desta\n\nforma, \u00e9 poss\u00edvel obter o conjunto de par\u00e2metros de projeto \u00f3timos, que proporciona o\n\nmenor custo J. Faz-se isso para cada caso visto na se\u00e7\u00e3o anterior, atrav\u00e9s das distribui\u00e7\u00f5es\n\ndas lat\u00eancias obtidas.\n\nSabendo que para um dado coeficiente de amortecimento, o sistema responde mais\n\nrapidamente para uma freq\u00fc\u00eancia natural maior, espera-se que quanto mais r\u00e1pida a\n\nresposta, maior ser\u00e1 o impacto das lat\u00eancias sobre desempenho e estabilidade (no sentido\n\nquadr\u00e1tico m\u00e9dio) do sistema. Isto pode ser verificado nas Figuras 6.19, 6.20 e 6.21, onde\n\nas curvas dos custos referentes aos Casos 2, 3 e 4 est\u00e3o relativamente mais distantes da\n\ncurva do custo referente ao Caso 1 conforme aumenta-se ?ni .\n\nPelos gr\u00e1ficos tamb\u00e9m \u00e9 poss\u00edvel notar que existem valores m\u00ednimos para as fun\u00e7\u00f5es\n\nde custo, que, segundo o crit\u00e9rio de avalia\u00e7\u00e3o utilizado, correspondem aos pares (?i,?ni )\n\n\u00f3timos para cada caso e situa\u00e7\u00e3o de atraso.\n\nNota-se tamb\u00e9m que mesmo para os piores casos de atraso, existem intervalos relativa-\n\nmente grandes para a escolha dos par\u00e2metros (?i,?ni ) que resultam num custo limitado (J\n\n\n\n6.2 An\u00e1lise com o Jitterbug 93\n\nfinito), ou seja, o sistema \u00e9 considerado est\u00e1vel no sentido quadr\u00e1tico m\u00e9dio. Isto porque\n\nos sistemas adotados (G(s)) s\u00e3o sistemas de primeira ordem com p\u00f3los no SPE (semiplano\n\nesquerdo) do plano-s, ou seja, sistemas tipicamente est\u00e1veis. Se fossem adotados sistemas\n\ntipicamente inst\u00e1veis (como visto no trabalho de (CERVIN et al., 2006)), provavelmente os\n\nintervalos para escolha de (?i,?ni ) seriam relativamente menores.\n\n0 0.5 1 1.5 2 2.5\n1.64\n\n1.645\n\n1.65\n\n1.655\n\n1.66\n\n1.665\n\n?\n1\n\nC\nu\n\nst\no\n\n J\n\n \n\n \n\nCaso 1\nCaso 2\nCaso 3\nCaso 4\n\n(a) Surge\n\n0 0.5 1 1.5 2 2.5\n1.24\n\n1.25\n\n1.255\n\n1.245\n\n?\n2\n\nC\nu\n\nst\no\n\n J\n\n \n\n \n\nCaso 1\nCaso 2\nCaso 3\nCaso 4\n\n(b) Sway\n\n0 0.5 1 1.5 2 2.5\n0.794\n\n0.796\n\n0.798\n\n0.8\n\n0.802\n\n0.804\n\n0.806\n\n0.808\n\n?\n3\n\nC\nu\n\nst\no\n\n J\n\n \n\n \n\nCaso 1\nCaso 2\nCaso 3\nCaso 4\n\n(c) Heave\n\n0 0.5 1 1.5 2 2.5\n\n2.28\n\n2.3\n\n2.32\n\n2.34\n\n2.36\n\n?\n6\n\nC\nu\n\nst\no\n\n J\n\n \n\n \n\nCaso 1\nCaso 2\nCaso 3\nCaso 4\n\n(d) Heave\n\nFigura 6.19: Custo J em fun\u00e7\u00e3o de ?i, para os Casos {1, 2, 3, 4}, considerando\n?ni = 1rad/s, o que corresponde a h = 400ms.\n\n0 0.5 1 1.5 2 2.5\n6.53\n\n6.54\n\n6.55\n\n6.56\n\n6.57\n\n6.58\n\n?\n1\n\nC\nu\n\nst\no\n\n J\n\n \n\n \n\nCaso 1\nCaso 2\nCaso 3\nCaso 4\n\n(a) Surge\n\n0 0.5 1 1.5 2 2.5\n\n4.945\n\n4.95\n\n4.955\n\n4.96\n\n4.965\n\n4.97\n\n4.975\n\n4.98\n\n4.985\n\n?\n2\n\nC\nu\n\nst\no\n\n J\n\n \n\n \n\nCaso 1\nCaso 2\nCaso 3\nCaso 4\n\n(b) Sway\n\n0 0.5 1 1.5 2 2.5\n3.15\n\n3.155\n\n3.16\n\n3.165\n\n3.17\n\n3.175\n\n3.18\n\n?\n3\n\nC\nu\n\nst\no\n\n J\n\n \n\n \n\nCaso 1\nCaso 2\nCaso 3\nCaso 4\n\n(c) Heave\n\n0 0.5 1 1.5 2 2.5\n8.8\n\n8.9\n\n9\n\n9.1\n\n9.2\n\n9.3\n\n?\n6\n\nC\nu\n\nst\no\n\n J\n\n \n\n \n\nCaso 1\nCaso 2\nCaso 3\nCaso 4\n\n(d) Yaw\n\nFigura 6.20: Custo J em fun\u00e7\u00e3o de ?i, para os Casos {1, 2, 3, 4}, considerando\n?ni = 2rad/s, o que corresponde a h = 200ms.\n\nNo entanto, \u00e9 importante salientar que a fun\u00e7\u00e3o de custo J reflete a rela\u00e7\u00e3o de energia\n\n\n\n6.3 Simula\u00e7\u00f5es com o Modelo do ROV 94\n\n0 0.5 1 1.5 2 2.5\n14.65\n\n14.7\n\n14.75\n\n14.8\n\n14.85\n\n?\n1\n\nC\nu\n\nst\no\n\n J\n\n \n\n \n\nCaso 1\nCaso 2\nCaso 3\nCaso 4\n\n(a) Surge\n\n0 0.5 1 1.5 2 2.5\n11.1\n\n11.12\n\n11.14\n\n11.16\n\n11.18\n\n11.2\n\n?\n2\n\nC\nu\n\nst\no\n\n J\n\n \n\n \n\nCaso 1\nCaso 2\nCaso 3\nCaso 4\n\n(b) Sway\n\n0 0.5 1 1.5 2 2.5\n7.08\n\n7.09\n\n7.1\n\n7.11\n\n7.12\n\n7.13\n\n7.14\n\n?\n3\n\nC\nu\n\nst\no\n\n J\n\n \n\n \n\nCaso 1\nCaso 2\nCaso 3\nCaso 4\n\n(c) Heave\n\n0 0.5 1 1.5 2 2.5\n19.8\n\n20\n\n20.2\n\n20.4\n\n20.6\n\n20.8\n\n?\n6\n\nC\nu\n\nst\no\n\n J\n\n \n\n \n\nCaso 1\nCaso 2\nCaso 3\nCaso 4\n\n(d) Yaw\n\nFigura 6.21: Custo J em fun\u00e7\u00e3o de ?i, para os Casos {1, 2, 3, 4}, considerando\n?ni = 3rad/s, o que corresponde a h = 130ms.\n\ndo sistema (Equa\u00e7\u00f5es (2.19) e (2.21)). Portanto, o desempenho \u00f3timo se refere \u00e0 melhor\n\nrela\u00e7\u00e3o de energia para determinados par\u00e2metros (?ni,?i) e casos de atrasos.\n\n6.3 Simula\u00e7\u00f5es com o Modelo do ROV\n\nAtrav\u00e9s das simula\u00e7\u00f5es que envolvem o modelo din\u00e2mico do ROV descrito no Cap\u00edtulo 5\n\nem conjunto com o TrueTime, verifica-se o comportamento do sistema no tempo, compa-\n\nrando com os resultados da se\u00e7\u00e3o anterior. Foram acrescentados nestas simula\u00e7\u00f5es ru\u00eddo\n\nbranco gaussiano nos sinais adquiridos pelos sensores e sinais de dist\u00farbio na entrada das\n\nplantas a fim de aproximar a simula\u00e7\u00e3o de situa\u00e7\u00f5es encontradas na pr\u00e1tica.\n\nA Figura 6.22 mostra a resposta do sistema no tempo nos GLs surge, sway, heave e\n\nyaw considerando wn1 = wn2 = wn3 = wn6 = 3[rad/s] para o Caso 4. Foram considera-\n\ndos dois sistemas: um com par\u00e2metros (?i,?ni ) \u00f3timos referentes aos menores valores da\n\nfun\u00e7\u00e3o de custo J, de acordo com a Figura 6.21; e outro diferente deste. Visualmente \u00e9\n\nposs\u00edvel notar que, embora ambos os sistemas sejam est\u00e1veis, aquele com os coeficientes\n\nde amortecimento ditos \u00f3timos para este caso apresenta menores amplitudes de oscila\u00e7\u00e3o.\n\nA Figura 6.23 mostra a resposta no tempo do sistema no GL surge para (?n1,?1) =\n\n{(1, 0.7), (2, 1.2), (3, 1.7)} (referentes aos menores valores de J) para o Caso 4. Nota-se\nque, conforme ?n1 aumenta, o sistema responde mais rapidamente, por\u00e9m, as amplitudes\n\n\n\n6.3 Simula\u00e7\u00f5es com o Modelo do ROV 95\n\n0 5 10 15 20 25 30 35 40 45 50\n?1\n\n?0.5\n\n0\n\n0.5\n\n1\n\n1.5\n\n2\n\nTempo [s]\n\nu\n [\nm\n\n/s\n]\n\n \n\n \n\nRefer\u00eancia\n?\n\n1\n = 1.7\n\n?\n1\n = 0.5\n\n(a) Surge\n\n0 5 10 15 20 25 30 35 40 45 50\n?0.2\n\n0\n\n0.2\n\n0.4\n\n0.6\n\n0.8\n\n1\n\n1.2\n\nTempo [s]\n\nv \n[m\n\n/s\n]\n\n \n\n \n\nRefer\u00eancia\n?\n\n2\n = 1.3\n\n?\n2\n = 0.5\n\n(b) Sway\n\n0 5 10 15 20 25 30 35 40 45 50\n?1\n\n?0.5\n\n0\n\n0.5\n\n1\n\n1.5\n\n2\n\nTempo [s]\n\nw\n [\nm\n\n/s\n]\n\n \n\n \n\nRefer\u00eancia\n?\n\n3\n = 0.7\n\n?\n3\n = 1.5\n\n(c) Heave\n\n0 5 10 15 20 25 30 35 40 45 50\n?2\n\n?1\n\n0\n\n1\n\n2\n\n3\n\n4\n\nTempo [s]\n\nr \n[r\n\na\nd\n\n/s\n]\n\n \n\n \n\nRefer\u00eancia\n?\n\n6\n = 0.7\n\n?\n6\n = 1.5\n\n(d) Yaw\n\nFigura 6.22: Resposta do sistema no tempo nos GLs surge, sway, heave e yaw\nconsiderando wn1 = wn2 = wn3 = wn6 = 3[rad/s] para o Caso 4.\n\nde oscila\u00e7\u00e3o s\u00e3o maiores.\n\nPara visualizar a influ\u00eancia do comportamento temporal de cada GL na realiza\u00e7\u00e3o de\n\ntarefas, como por exemplo o deslocamento do ve\u00edculo sobre uma trajet\u00f3ria pr\u00e9-definida,\n\ncriou-se um modelo do VSOR em realidade virtual (Figura 6.24) atrav\u00e9s do SIMULINK.\n\nCom este modelo simulou-se tr\u00eas situa\u00e7\u00f5es envolvendo o deslocamento do m\u00f3vel no plano\n\nXY (correspondente aos GLs surge, sway e yaw ), cujos resultados s\u00e3o observados nas\n\nFiguras 6.25, 6.26 e 6.27.\n\nNestes gr\u00e1ficos s\u00e3o comparados os Casos 1 e 4, para os par\u00e2metros \u00f3timos obtidos\n\nna se\u00e7\u00e3o anterior. Nota-se que o efeito dos atrasos n\u00e3o comprometeram o desempenho\n\ndo sistema de controle na realiza\u00e7\u00e3o desta tarefa espec\u00edfica, para os par\u00e2metros aqui\n\navaliados.\n\nO sistema com menor tempo de resposta (maior ?ni e, conseq\u00fcentemente menor h)\n\nconseguiu se manter mais pr\u00f3ximo da trajet\u00f3ria de refer\u00eancia do que os outros sistemas.\n\nDo ponto de vista de controle, era esperado este comportamento. Por\u00e9m, como visto\n\nno Cap\u00edtulo 4, existe uma rela\u00e7\u00e3o de compromisso entre o desempenho do sistema de\n\ncontrole e o desempenho do sistema computacional. Portanto, \u00e9 prov\u00e1vel que para valores\n\nde ?ni maiores que 3rad/s (ou seja, h > 130ms) os efeitos dos atrasos inseridos pelo\n\nsistema computacional sejam mais relevantes no desempenho do sistema de controle para\n\nrealiza\u00e7\u00e3o desta tarefa.\n\n\n\n6.3 Simula\u00e7\u00f5es com o Modelo do ROV 96\n\n0 10 20 30 40 50\n0\n\n0.1\n\n0.2\n\n0.3\n\n0.4\n\n0.5\n\n0.6\n\n0.7\n\n0.8\n\nTempo [s]\n\nu\n [\nm\n\n/s\n]\n\n \n\n \n\nRefer\u00eancia\n?\n\nn\n1\n\n = 1.0 rad/s\n\n?\n1\n = 0.7\n\n?\nn\n\n1\n\n = 2 rad/s\n\n?\n1\n = 1.2\n\n?\nn\n\n1\n\n = 3 rad/s\n\n?\n1\n = 1.7\n\nFigura 6.23: Resposta do sistema no GL surge para\n(?n1,?1) = {(1, 0.7), (2, 1.2), (3, 1.7)} para o Caso 4.\n\nFigura 6.24: Modelo do VSOR em realidade virtual.\n\n\n\n6.3 Simula\u00e7\u00f5es com o Modelo do ROV 97\n\n?1 0 1 2 3 4 5 6\n?1\n\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\nx [m]\n\ny \n[m\n\n]\n\n \n\n \n\nRefer\u00eancia\nCaso 1\nCaso 4\n\nFigura 6.25: Deslocamento no plano XY do ve\u00edculo para (?n1,?1) = (1, 0.7),\n(?n2,?2) = (1, 0.8), (?n3,?3) = (1, 0.8) e (?n6,?6) = (1, 0.9), para o Caso 1 e para o Caso\n\n4.\n\n?1 0 1 2 3 4 5 6\n?1\n\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\nx [m]\n\ny \n[m\n\n]\n\n \n\n \n\nRefer\u00eancia\nCaso 1\nCaso 4\n\nFigura 6.26: Deslocamento no plano XY do ve\u00edculo para (?n1,?1) = (2, 1.2),\n(?n2,?2) = (2, 1.0), (?n3,?3) = (2, 0.8) e (?n6,?6) = (2, 0.8), para o Caso 1 e para o Caso\n\n4.\n\n\n\n6.4 Conclus\u00f5es 98\n\n?1 0 1 2 3 4 5 6\n?1\n\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\nx [m]\n\ny \n[m\n\n]\n\n \n\n \n\nRefer\u00eancia\nCaso 1\nCaso 4\n\nFigura 6.27: Deslocamento no plano XY do ve\u00edculo para (?n1,?1) = (3, 1.7),\n(?n2,?2) = (3, 1.3), (?n3,?3) = (2, 1.0) e (?n6,?6) = (2, 0.8), para o Caso 1 e para o Caso\n\n4.\n\n6.4 Conclus\u00f5es\n\nOs resultados obtidos foram parametrizados em fun\u00e7\u00e3o dos par\u00e2metros de projeto do\n\ncontrolador, de forma que estes podem ser escolhidos dentre um conjunto (?ni,?i) tal\n\nque o sistema seja est\u00e1vel (no sentido quadr\u00e1tico m\u00e9dio) e apresente um comportamento\n\ndesejado (desempenho), mesmo em presen\u00e7a de atrasos devido ao sistema computacional.\n\nOs resultados obtidos com o TrueTime permitem avaliar como as lat\u00eancias se compor-\n\ntam em fun\u00e7\u00e3o da carga na rede, da carga na CPU e da freq\u00fc\u00eancia natural (?ni ) desejada\n\npara o sistema, ou mais precisamente do per\u00edodo de amostragem nominal h do ciclo de\n\ncontrole. O comportamento das lat\u00eancias s\u00e3o descritas por suas respectivas FDPs.\n\nEstas FDPs foram utilizadas na formula\u00e7\u00e3o de Modelos Lineares de Saltos Marko-\n\nvianos para os GLs surge, sway, heave e yaw. E estes modelos foram utilizados para o\n\nc\u00e1lculo da fun\u00e7\u00e3o de custo J atrav\u00e9s do Jitterbug para cada caso de atraso e para cada\n\npar (?ni,?i), com ?ni = {1, 2, 3}rad/s e ?i variando no intervalo [0.1,2.1]. Os valores m\u00ed-\nnimos de J indicam os par\u00e2metros (?ni,?i) \u00f3timos (pontos de melhor rela\u00e7\u00e3o de energia\n\ndo sistema) para cada caso.\n\nCom os par\u00e2metros \u00f3timos obtidos com o Jitterbug, implementou-se os controladores\n\n\n\n6.4 Conclus\u00f5es 99\n\nno modelo do VSOR em realidade virtual para visualiza\u00e7\u00e3o do comportamento temporal\n\ndo sistema em presen\u00e7a de atrasos. Foi poss\u00edvel constatar que, para os valores de ?ni e para\n\na tarefa adotados, os atrasos devido ao sistema computacional n\u00e3o s\u00e3o os determinantes\n\npara o bom desempenho do sistema no tempo, ou seja, a sensibilidade do sistema aos\n\natrasos \u00e9 baixa. O melhor desempenho no tempo para a realiza\u00e7\u00e3o da tarefa foi obtido\n\npara o sistema com menor tempo de resposta. Uma poss\u00edvel explica\u00e7\u00e3o \u00e9 que o modelo do\n\nVSOR envolve plantas tipicamente est\u00e1veis (fun\u00e7\u00f5es de transfer\u00eancia de primeira ordem\n\ncom p\u00f3los no SPE), diferentemente das adotadas no trabalho de Cervin et al. (2006) onde\n\na sensibilidade do sistema aos atrasos \u00e9 alta.\n\nO modelo do sistema com atraso em tempo discreto mostrado no Cap\u00edtulo 2, embora\n\nn\u00e3o utilizado neste presente cap\u00edtulo, poderia ser \u00fatil na an\u00e1lise me freq\u00fc\u00eancia da sen-\n\nsibilidade do sistema frente aos atrasos (utilizando o pior caso de atraso obtido atrav\u00e9s\n\ndo TrueTime). Com isso seria poss\u00edvel criar barreiras de desempenho e estabilidade em\n\nfreq\u00fc\u00eancia para uso em t\u00e9cnicas de projeto de controladores robustos.\n\n\n\n100\n\n7 Conclus\u00f5es\n\nEste trabalho teve como foco o estudo de uma nova classe de sistemas de controle (sis-\n\ntemas de controle distribu\u00eddos em redes de comunica\u00e7\u00e3o \u2013 NCS), tendo como objetivo o\n\ndesenvolvimento de uma solu\u00e7\u00e3o de controle para um ROV (VSOR), utilizando a referida\n\narquitetura. Neste trabalho, foi abordado o problema da presen\u00e7a de atrasos inseridos\n\npelo sistema computacional, mais especificamente atrasos devido ao escalonamento de\n\nprocessos e ao tr\u00e1fego de mensagens na rede. Discutiu-se tamb\u00e9m poss\u00edveis candidatas\n\npara rede de controle para NCSs.\n\nPara an\u00e1lise do impacto destes atrasos em sistemas de controle, foram apresentados\n\ndois m\u00e9todos:\n\n\u2022 utilizando um modelo de sistema com atraso e em tempo discreto, que permite fazer\na an\u00e1lise em freq\u00fc\u00eancia do sistema para o pior caso (atraso constante);\n\n\u2022 utilizando as ferramentas TrueTime e Jitterbug, que, em conjunto, analisam o im-\npacto de atrasos aleat\u00f3rios sobre o sistema de controle atrav\u00e9s da teoria de Sistemas\n\nLineares com Saltos Markovianos (MJLS).\n\nE aplicando estes m\u00e9todos em um caso de estudo, foi poss\u00edvel constatar que existe uma\n\nrela\u00e7\u00e3o de compromisso entre o desempenho do sistema de controle e o desempenho do sis-\n\ntema computacional: um per\u00edodo de amostragem longo para o ciclo de controle prejudica\n\no sistema de controle e ao mesmo tempo beneficia o sistema computacional, e vice-versa.\n\nFoi apresentado tamb\u00e9m o modelo do ROV em quest\u00e3o, onde o sistema \u00e9 descrito\n\npor 6 equa\u00e7\u00f5es diferenciais desacompladas n\u00e3o-lineares referentes aos GLs do ve\u00edculo, sob\n\na hip\u00f3tese de opera\u00e7\u00f5es de baixas velocidades. O modelo inclui ainda uma matriz de\n\naloca\u00e7\u00e3o de empuxo dada em fun\u00e7\u00e3o da geometria do ve\u00edculo e controladores do tipo PI\n\ncom estrutura feedback-feedfoward, parametrizados em fun\u00e7\u00e3o de duas vari\u00e1veis de projeto:\n\n?ni e ?i.\n\n\n\n7.1 Sugest\u00f5es para Trabalhos Futuros 101\n\nO desempenho e estabilidade do sistema para alguns valores de (?ni,?i) foram anali-\n\nsados atrav\u00e9s do TreuTime e Jitterbug, sob alguns casos de atrasos. Para cada um destes\n\ncasos foram obtidos pontos \u00f3timos (considerados pontos de melhor rela\u00e7\u00e3o de energia na\n\nentrada e na sa\u00edda do sistema), que foram testados no modelo do ROV em realidade\n\nvirtual. Os resultados mostram que para os intervalos de (?ni,?i) analisados, os atra-\n\nsos devido ao sistema computacional n\u00e3o influem muito no desempenho e estabilidade\n\ndo sistema de controle na realiza\u00e7\u00e3o de uma determinada tarefa. Atribui-se isto ao fato\n\ndo modelo do ve\u00edculo envolver plantas tipicamente est\u00e1veis (fun\u00e7\u00f5es de transfer\u00eancia de\n\nprimeira ordem com p\u00f3los no SPE).\n\nMostrou-se que, do ponto de vista de desempenho e estabilidade de sistemas com\n\natrasos, \u00e9 vi\u00e1vel a implanta\u00e7\u00e3o do NCS proposto sob as condi\u00e7\u00f5es de opera\u00e7\u00e3o citadas\n\npara o controle do VSOR, proporcionando ao sistema a redu\u00e7\u00e3o de custo e do peso; a\n\nfacilidade de diagn\u00f3stico e manuten\u00e7\u00e3o do sistema; e maior agilidade e flexibilidade.\n\n7.1 Sugest\u00f5es para Trabalhos Futuros\n\nSugere-se para trabalhos futuros o uso de dados experimentais para simula\u00e7\u00f5es com o Tru-\n\neTime de forma que a simula\u00e7\u00e3o se aproxime mais das situa\u00e7\u00f5es encontradas na pr\u00e1tica.\n\nComo por exemplo a medi\u00e7\u00e3o do WCET atrav\u00e9s de ferramentas espec\u00edficas. A an\u00e1lise\n\nneste trabalho considerou que todas as tasks de controle possuem o mesmo per\u00edodo de\n\namostragem. Sugere-se que combina\u00e7\u00f5es de diferentes per\u00edodos de amostragem sejam es-\n\ntudados, com especial aten\u00e7\u00e3o no problema da aloca\u00e7\u00e3o de empuxo. Outros par\u00e2metros\n\npodem ser alterados, como o algoritmo de escalonamento de processos e o tipo de rede.\n\nNeste trabalho tratou-se apenas do problema dos atrasos inseridos pelo sistema com-\n\nputacional. Por\u00e9m outro problema que pode ser encontrado, especialmente em se tratando\n\nde redes de comunica\u00e7\u00e3o, \u00e9 a perda de dados. Sugere-se que sejam estudados os efeitos\n\nda perda de dados durante o ciclo de controle.\n\nPode-se tamb\u00e9m aplicar outras t\u00e9cnicas de projeto de controladores, como por exemplo\n\nt\u00e9cnicas de controle robusto. E tamb\u00e9m estudar a aplica\u00e7\u00e3o de t\u00e9cnicas para diminuir o\n\nimpacto de atrasos e perdas de dados, como visto em Montestruque e Antsaklis (2005a),\n\natrav\u00e9s da t\u00e9cnica de model-based.\n\n\n\n102\n\nAnexo A -- Robustez de Sistemas SISO\n\n+\n\n-\n\n+\n+\n\n+\n\n+\n\nr(s) e(s)\n\nK(s)\n\nu(s)\n\nGR(s)\n\nd(s)\n\ny(s)\n\nn(s)\n\nFigura A.1: Diagrama do sistema em malha fechada e em tempo cont\u00ednuo.\n\nO modelo real de um sistema de controle t\u00edpico \u00e9 representado pelo diagrama de blocos\n\nna Figura A.1. Nele s\u00e3o apresentados em freq\u00fc\u00eancia:\n\n\u2022 o sinal de refer\u00eancia r(s),\n\n\u2022 o sinal de erro e(s),\n\n\u2022 o controlador K(s),\n\n\u2022 o sinal de controle u(s),\n\n\u2022 o modelo real da planta GR(s),\n\n\u2022 o sinal de dist\u00farbio d(s),\n\n\u2022 o sinal de ru\u00eddo n(s),\n\n\u2022 o sinal de sa\u00edda y(s).\n\nPara este sistema, o sinal de sa\u00edda \u00e9 representado por\n\ny(s) = S(s)L(s)r(s) + S(s)d(s) ? S(s)L(s)n(s), (A.1)\n\n\n\nAnexo A -- Robustez de Sistemas SISO 103\n\ne o sinal de erro \u00e9 representado por\n\ne(s) = S(s)r(s) ? S(s)d(s) ? S(s)n(s), (A.2)\n\nonde S(s) \u00e9 a chamada fun\u00e7\u00e3o de sensibilidade do sistema definida por\n\nS(s) =\n1\n\n1 + L(s)\n, (A.3)\n\ne L(s) \u00e9 a chamada fun\u00e7\u00e3o de malha aberta do sistema definida por\n\nL(s) = GR(s)K(s). (A.4)\n\nSobre este modelo real aplica-se a t\u00e9cnica de controle robusto1 (CRUZ, 1996). O\n\nobjetivo neste caso \u00e9 garantir a estabilidade e o desempenho do sistema de controle mesmo\n\nsob o efeito das varia\u00e7\u00f5es provocadas pela din\u00e2mica do sistema computacional. Para\n\ngarantir a estabilidade robusta deste sistema, utiliza-se o Crit\u00e9rio de Nyquist que permite\n\nafirmar que a malha fechada \u00e9 dada por\n\nCR(s) =\nGR(s)K(s)\n\n1 + GR(s)K(s)\n(A.5)\n\n\u00e9 est\u00e1vel se e somente se o n\u00famero de envolvimentos no sentido anti-hor\u00e1rio do Diagrama\n\nde Nyquist de L(j?) em torno do ponto ?1 + j0 \u00e9 igual ao n\u00famero de p\u00f3los inst\u00e1veis de\nL(s). Esta condi\u00e7\u00e3o pode ser expressa por\n\n[1 + ??M (j?)]GN (j?)K(j?) 6= ?1 + j0, para ? ? [0, 1]. (A.6)\n\nOu seja, a \u00e1rea demarcada pelos c\u00edrculos tracejados na Figura 2.5 n\u00e3o deve conter o ponto\n\n?1 + j0. Por sua vez, esta condi\u00e7\u00e3o pode ser expressa por\n?\n\n?\n\n?\n\n?\n\nGN (j?)K(j?)\n\n1 + GN (j?)K(j?)\n\n?\n\n?\n\n?\n\n?\n\n<\n1\n\neM (?)\n, (A.7)\n\nchamada por Cruz (1996) de Condi\u00e7\u00e3o de Robustez de Estabilidade. Adotando novamente\n\na hip\u00f3tese de que os efeitos deste erro de modelagem sejam mais percept\u00edveis em altas\n\nfreq\u00fc\u00eancias (ou seja, eM (?) ? 1), a condi\u00e7\u00e3o pode ser aproximada para\n\n|GN (j?)K(j?)|&lt;\n1\n\neM (?)\n, para {? | eM (?) ? 1}. (A.8)\n\n1Robustez \u00e9 a caracter\u00edstica que permite ao sistema de controle obter um desempenho satisfat\u00f3rio,\nmesmo em condi\u00e7\u00f5es de opera\u00e7\u00e3o n\u00e3o explicitadas no projeto do controlador.\n\n\n\nAnexo A -- Robustez de Sistemas SISO 104\n\nDesta forma o ganho da fun\u00e7\u00e3o de malha aberta nominal deve ser \"pequeno\"(ou seja,\n\n|GN (j?)K(j?)| ? 1) em altas freq\u00fc\u00eancias para garantir a estabilidade do sistema.\n\n\n\n105\n\nRefer\u00eancias\n\nANDERSSON, M.; HENRIKSSON, D.; CERVIN, A. TRUETIME 1.5 - Reference\nManual. [S.l.], June 2007.\n\nAVILA, J. P. J. Modelagem e identifica\u00e7\u00e3o de par\u00e2metros hidrodin\u00e2micos de um ve\u00edculo\nrob\u00f3tico submarino. Tese (Doutorado) \u2014 Escola Polit\u00e9cnica da Universidade de S\u00e3o\nPaulo, 2008.\n\nAVILA, J. P. J.; MARUYAMA, N.; ADAMOWSKI, J. C. Hydrodynamic parameter\nestimation of an open frame unmanned underwater vehicle. In: Proceedings of the 17th\nWorld Congress. The International Federation of Automatic Control, Seoul, Korea. [S.l.:\ns.n.], 2008.\n\nBROCKETT, R. W. Stabilization of motor networks. In: Proc. 34th IEEE Conf. on\nDec. and Control. [S.l.: s.n.], 1995. p. 1484\u20131488.\n\nCACCIA, M.; INDIVERI, G.; VERUGGIO, G. Modeling and identification of\nopen-frame variable configuration unmanned underwater vehicles. Oceanic Engineering,\nIEEE Journal of, v. 25, n. 2, p. 227\u2013240, 2000. ISSN 0364-9059.\n\nCACCIA, M.; VERUGGIO, G. Guidance and control of a reconfigurable unmanned\nunderwater vehicle. Control Engineering Practice, v. 8, n. 1, p. 21\u201337, jan. 2000.\nDispon\u00edvel em:&lt;http://www.sciencedirect.com/science/article/B6V2H-3Y51H01-\n4/2/fd60b2e613260d7e5c02eddca88abe8f>.\n\nCATSOULIS, J. Designing Embedded Hardware. [S.l.]: O\u2019Reilly, 2005.\n\nCERVIN, A. Integrated Control and Real-Time Scheduling. Tese (Doutorado) \u2014\nDepartment of Automatic Control, Lund University, Sweden, abr. 2003.\n\nCERVIN, A.; ARZEN, K.-E.; HENRIKSSON, D.; LLUESMA, M.; BALBASTRE, P.;\nRIPOLL, I.; CRESPO, A. Control loop timing analysis using truetime and jitterbug. In:\nComputer-Aided Control Systems Design, 2006 IEEE International Symposium on. [S.l.:\ns.n.], 2006. p. 1194\u20131199.\n\nCERVIN, A.; HENRIKSSON, D.; LINCOLN, B.; EKER, J.; ARZEN, K.-E. How does\ncontrol timing affect performance? analysis and simulation of timing using jitterbug and\ntruetime. Control Systems Magazine, IEEE, v. 23, n. 3, p. 16\u201330, 2003. ISSN 0272-1708.\n\nCERVIN, A.; LINCOLN, B. Jitterbug 1.21 Reference Manual. Box 118, SE 221 00 Lund,\nSweden, February 2006.\n\n\n\nRefer\u00eancias 106\n\nCHOW, M.-Y.; TIPSUWAN, Y. Gain adaptation of networked dc motor controllers\nbased on qos variations. Industrial Electronics, IEEE Transactions on, v. 50, n. 5, p.\n936\u2013943, 2003. ISSN 0278-0046.\n\nCLARKE, D. W.; MOHTADI, C.; TUFFS, P. S. Generalized predictive control - part\ni. the basic algorithm. Automatica, Pergamon Press, Inc., Tarrytown, NY, USA, v. 23,\nn. 2, p. 137\u2013148, 1987. ISSN 0005-1098.\n\nCRUZ, J. J. Controle Robusto Multivari\u00e1vel. [S.l.]: Edusp, 1996.\n\nDAVIDSON, C. Random sampling and random delays in optimal control systems. Tese\n(Doutorado) \u2014 Royal Institute of Technology, 1973.\n\nDEITEL, H. M.; DEITEL, P. J.; CHOFFNES, D. R. Sistemas Operacionais. [S.l.]:\nPrentice Hall, 2005.\n\nFARINES, J.-M.; PRAGA, J. da S.; OLIVEIRA, R. da Silva de. Sistemas de Tempo\nReal. [S.l.]: IME-USP, 2000.\n\nFOSSEN, T. I. Guidance and control of ocean vehicles. [S.l.]: John Wiley &amp; Sons, 1994.\n\nGAMBIER, A. Real-time control systems: a tutorial. In: Control Conference, 2004. 5th\nAsian. [S.l.: s.n.], 2004. v. 2, p. 1024\u20131031 Vol.2.\n\nHENRIKSSON, D. Resource-Constrained Embedded Control and Computing Systems.\nTese (Doutorado) \u2014 Department of Automatic Control, Lund Institute of Technology,\nSweden, jan. 2006.\n\nHENRIKSSON, D.; CERVIN, A.; ANDERSSON, M.; \u00c5RZ\u00e8N, K.-E. Truetime:\nSimulation of networked computer control systems. In: Proceedings of the 2nd IFAC\nConference on Analysis and Design of Hybrid Systems. Alghero, Italy: [s.n.], 2006.\nInvited talk.\n\nKAPLAN, G. Ethernet\u2019s winning ways. Spectrum, IEEE, v. 38, n. 1, p. 113\u2013115, 2001.\nISSN 0018-9235.\n\nKOUBIAS, S. A.; PAPADOPOULOS, G. D. Modern fieldbus commu-\nnication architectures for real-time industrial applications. Computers in\nIndustry, v. 26, n. 3, p. 243\u2013252, ago. 1995. ISSN 0166-3615. Dispon\u00ed-\nvel em:&lt;http://www.sciencedirect.com/science/article/B6V2D-3YF4GSB-\n5/2/e84f92c5abb6b6ef05dce1fb90aa4738>.\n\nLIAN, F.-L. Analysis, Design, Modeling, and Control of Networked Control Systems.\nTese (Doutorado) \u2014 University of Michigan, 2001.\n\nLIAN, F.-L.; MOYNE, J.; TILBURY, D. Network design consideration for distributed\ncontrol systems. Control Systems Technology, IEEE Transactions on, v. 10, n. 2, p.\n297\u2013307, 2002. ISSN 1558-0865.\n\nLINCOLN, B. Dynamic programming and time-varying delay systems. Tese (Doutorado)\n\u2014 Lund Institute of Technology, 2003.\n\n\n\nRefer\u00eancias 107\n\nMONTESTRUQUE, L.; ANTSAKLIS, P. Networked control systems: a model-based\napproach. In: IAESTED International Conference on Networks and Communication\nSystems, Thailand. [S.l.: s.n.], 2005.\n\nMONTESTRUQUE, L.; ANTSAKLIS, P. Quantization in model based networked\ncontrol systems. In: Proceedings of the 16th IFAC World Congress, Prague. [S.l.: s.n.],\n2005.\n\nMONTESTRUQUE, L.; ANTSAKLIS, P. Performance Evaluation for Model-Based\nNetworked Control Systems. 2006. 231\u2013249 p.\n\nNILSSON, J. Real-time control systems with delays. Tese (Doutorado) \u2014 Lund Institute\nof Technology, 1998.\n\nOOI, J.; VERBOUT, S.; LUDWIG, J.; WORNELL, G. A separation theorem for\nperiodic sharing information patterns in decentralized control. IEEE Trans. Autom.\nControl, Vol 42, p. pp. 1546\u20131550., 1997.\n\nOTANEZ, P. G.; PARROTT, J. T.; MOYNE, J. R.; TILBURY, D. M. The implications\nof ethernet as a control network. In: Global Powertrain Conference. [S.l.: s.n.], 2002.\n\nPOSTLETHWAITE, S. Multivariable Feedback Control. [S.l.]: Wiley, 1996.\n\n\u00c5RZ\u00e8N, K.-E.; CERVIN, A. Control and embedded computing: Survey of research\ndirections. In: Proc. 16th IFAC World Congress. Prague, Czech Republic: [s.n.], 2005.\n\nSAAB, T. Site acessado em Jan 2009. Http://www.seaeye.com/.\n\nSANDELL, D. Evaluating Static Worst-Case Execution-Time Analysis for a Commercial\nReal-Time Operating System. Disserta\u00e7\u00e3o (Mestrado) \u2014 Dept. of Computer Science -\nM\u00e4lardalen University, 2004.\n\nSILJAK, D. Decentralized control of complex systems. [S.l.]: Academic Press, 1991.\n\nSOUZA, E. C. Modelagem e controle de ve\u00edculos submarinos n\u00e3o tripulados. Disserta\u00e7\u00e3o\n(Mestrado) \u2014 Escola Polit\u00e9cnica da Universidade de S\u00e3o Paulo, 2003.\n\n\u00c5STR\u00f6M, K. J.; H\u00e4GGLUND, T. PID Controllers: Theory, Design, and Tuning. [S.l.]:\nInternational Society for Measurement and Con, 1995.\n\n\u00c5STR\u00f6M, K. J.; WITTENMARK, B. Computer-controlled systems: theory and design.\n[S.l.]: Prentice Hall, 1997.\n\nTANENBAUM, A. S. Sistemas Operacionais Modernos. [S.l.]: Prentice Hall, 2003.\n\nTISCHLER, M. B. Advances In Aircraft Flight Control. [S.l.]: Taylor&amp;Francis, 1996.\n\nWALSH, G.; WALSH, G.; YE, H.; BUSHNELL, L. Stability analysis of networked\ncontrol systems. Control Systems Technology, IEEE Transactions on, v. 10, n. 3, p.\n438\u2013446, 2002. ISSN 1063-6536.\n\n\n\nRefer\u00eancias 108\n\nWITTENMARK, B.; NILSSON, J.; TORNGREN, M. Timing problems in real-time\ncontrol systems. In: American Control Conference, 1995. Proceedings of the. [S.l.: s.n.],\n1995. v. 3, p. 2000\u20132004 vol.3.\n\nWOLOVICH, W. A. Automatic control systems. Basic analysis and design. [S.l.]:\nHarcourt Brace College Publishers, 1994.\n\nWONG, W.; BROCKETT, R. Systems with finite comunnication bandwidth constraints\nii: Stabilization with limited information feedback. IEEE Trans. Autom. Control, Vol 44,\np. pp. 1049\u20131053, 1999.\n\nYAMAMOTO, Y.; KHARGONEKAR, P. Frequency response of sampled-data systems.\nAutomatic Control, IEEE Transactions on, v. 41, n. 2, p. 166\u2013176, 1996. ISSN 0018-9286.\n\n\n\n109\n\nAp\u00eandice A -- Par\u00e2metros do VSOR\n\nOs valores das vari\u00e1veis citadas no Cap\u00edtulo 5 do VSOR s\u00e3o apresentados na Tabela A.1.\n\nGL i mi dLi dQi bi\nSurge (1) 841.93Kg 82.3Kg/s 309.07Kg/m ?0.05N\nSway (2) 841.93Kg 8.5Kg/s 505.45Kg/m ?0.14N\nHeave (3) 839.37Kg 50.4Kg/s 759.73Kg/m ?0.85N\nRoll (4) 70.51Kg.m2/rad 0Kg.m2/(rad.s) 174.82Kg.m2 0.16N.m\nPitch (5) 70.51Kg.m2/rad 0Kg.m2/(rad.s) 174.82Kg.m2 0.16N.m\nYaw (6) 206.74Kg.m2/rad 18.21Kg.m2/(rad.s) 94.72Kg.m2 ?2.53N.m\n\nTabela A.1: Dados do VSOR referentes aos GLs (AVILA, 2008).\n\nPara o c\u00e1lculo das for\u00e7as restaurativas , adotou-se:\n\n\u2022gravidade g = 10m/s2,\n\n\u2022densidade do meio (\u00e1gua) ? = 1000Kg/m3,\n\n\u2022volume deslocado ? = 0.19265m3 (AVILA, 2008),\n\n\u2022altura do centro de flutua\u00e7\u00e3o zB = 0.09m (AVILA, 2008),\n\n\u2022massa do ve\u00edculo m = 188.6Kg (AVILA, 2008).\n\nPortanto, a for\u00e7a de flutua\u00e7\u00e3o \u00e9 dada por\n\nB = mg ? ?g? = 40.5N.\n\nPara a aloca\u00e7\u00e3o de empuxo, adotou-se:\n\n\u2022a = 0.40m,\n\n\n\nAp\u00eandice A -- Par\u00e2metros do VSOR 110\n\n\u2022b = 0.50m,\n\n\u2022c = 0.15m,\n\n\u2022d = 0.65m,\n\n\u2022e = 0.45m,\n\n\u2022? = ?/4."}]}}}