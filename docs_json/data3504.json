{"add": {"doc": {"field": [{"@name": "docid", "#text": "BR-TU.08354"}, {"@name": "filename", "#text": "13188_Danilo.pdf"}, {"@name": "filetype", "#text": "PDF"}, {"@name": "text", "#text": "i\n\nResumo \n\n \n\n MINHONI, D. C. R.(2006). Detec\u00e7\u00e3o de movimento de objetos em tempo real \n\nutilizando dispositivos de l\u00f3gica program\u00e1vel complexa. Disserta\u00e7\u00e3o (Mestrado) \u2013 Escola \n\nde Engenharia de S\u00e3o Carlos, Universidade de S\u00e3o Paulo. \n\n \n\n Um sistema que realiza a detec\u00e7\u00e3o de movimento procura, numa seq\u00fc\u00eancia de \n\nimagens, sinais que confirmem a exist\u00eancia de movimenta\u00e7\u00e3o no ambiente monitorado. \n\nUma vez realizada a detec\u00e7\u00e3o do movimento, pode-se realizar o rastreamento (\u201ctracking\u201d) \n\ndo objeto na cena em quest\u00e3o. \n\n \n\n A detec\u00e7\u00e3o e o rastreamento de objetos, em tempo real, s\u00e3o t\u00e9cnicas que est\u00e3o \n\ndespertando grande interesse por parte de pesquisadores e empresas pois, estas t\u00e9cnicas, \n\npodem ser utilizadas em diversas \u00e1reas que se estendem desde a engenharia e computa\u00e7\u00e3o \n\nat\u00e9 \u00e1reas como a geologia e medicina. Sendo assim, seguindo-se a id\u00e9ia b\u00e1sica de detec\u00e7\u00e3o \n\ne rastreamento, encontram-se diversas aplica\u00e7\u00f5es para estas t\u00e9cnicas como: sistemas de \n\nvigil\u00e2ncia, an\u00e1lise de movimentos humanos, sistemas de detec\u00e7\u00e3o e rastreamento de \n\npedestres ou ve\u00edculos, dentre outras. \n\n \n\n Neste trabalho \u00e9 mostrado um sistema que foi desenvolvido para armazenamento de \n\nimagens em tons de cinza de uma seq\u00fc\u00eancia de v\u00eddeo e um posterior processamento dessas \n\nimagens para detec\u00e7\u00e3o de caracter\u00edsticas que indiquem movimento. O processamento se \n\nresume em integrar o sinal de v\u00eddeo, que est\u00e1 armazenado nas mem\u00f3rias, nas dire\u00e7\u00f5es \n\n\n\n ii\n\nhorizontal e vertical gerando os histogramas de intensidade horizontal e vertical. \n\nComparando os histogramas de quadros diferentes da seq\u00fc\u00eancia de v\u00eddeo ser\u00e1 poss\u00edvel \n\ndetectar a presen\u00e7a de movimento e a regi\u00e3o da imagem onde este ocorreu. Devido \u00e0 \n\nnecessidade de um processamento r\u00e1pido das imagens e no interesse de produzir um \n\nsistema dedicado com hardware reduzido, utilizou-se de dispositivos de l\u00f3gica program\u00e1vel \n\ncomplexa (CPLDs).  \n\n \n\n PALAVRAS CHAVE: detec\u00e7\u00e3o de movimento, rastreamento, integra\u00e7\u00e3o, CPLDs. \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n\n\n iii\n\nAbstract \n\n \n\n MINHONI, D. C. R. (2006). Real time detection of moving objects using \n\nprogrammable logic devices. MSc dissertation \u2013 S\u00e3o Carlos Engineering School, \n\nUniversity of S\u00e3o Paulo. \n\n \n\n A system that performs movement detection in a sequence of images looks for signs \n\nthat confirm the occurrence of the movement in the controlled environment. Once the \n\nmovement of the object is detected it is possible to perform the tracking of the object. \n\n \n\n Real time object detection and tracking techniques are of great interests to \n\nresearchers and industries because these techniques can be used in several areas going from \n\nengineering and computing to geology and medicine. There is a wide field of applications \n\nof detection and tracking techniques, such as: surveillance systems, human movement \n\nanalysis, pedestrians or vehicle detection. \n\n \n\n This work presents an implementation able to store a gray level image from a video \n\nsequence and from these images detect in real time a object movement in the scene. The \n\ndetection will be performed integrating an image from the video sequence in the horizontal \n\nand vertical directions in order to obtain the intensities histograms in these directions. \n\nComparing the histograms with those of a different frame of the video sequence it will be \n\npossible to detect the presence of movement and locate where in the image the movement \n\n\n\n iv\n\noccurs. Due to real time digital image processing requirements and in order to produce a \n\nreduce dedicated hardware, Complex Programmable Logic Devices (CPLDs) were used. \n\n \n\n KEY WORDS: movement detection, tracking, integration, Complex Programmable \n\nLogic Devices (CPLDs). \n\n  \n\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n\n\n\n v\n\n \n \n\u00cdndice \n \n \nResumo.............................................................................................. i \nAbstract........................................................................................... iii \n\u00cdndice................................................................................................ v \nLista de Figuras............................................................................. vii \nLista de Tabelas .............................................................................. x \nLista de Abreviaturas e Siglas ...................................................... xi \n1 Introdu\u00e7\u00e3o ................................................................................. 1 \n\n1.1 Motiva\u00e7\u00e3o ............................................................................................................... 1 \n1.2 Objetivo ................................................................................................................ 10 \n1.3 Organiza\u00e7\u00e3o.......................................................................................................... 11 \n\n2 Dispositivos L\u00f3gicos Program\u00e1veis (PLDs) .......................... 12 \n2.1 A Evolu\u00e7\u00e3o dos Dispositivos L\u00f3gicos Program\u00e1veis........................................... 17 \n\n2.1.1 Arquiteturas B\u00e1sicas ..................................................................................... 17 \n2.1.2 PROM (Programmable Read-Only Memory) .............................................. 19 \n2.1.3 PLA (Programmable Logic Array) .............................................................. 21 \n2.1.4 PAL (Programmable Array Logic) .............................................................. 22 \n\n2.2 Elementos de Programa\u00e7\u00e3o .................................................................................. 24 \n2.2.1 Fus\u00edvel (Fuse) ............................................................................................... 25 \n2.2.2 Antifus\u00edvel (Antifuse)................................................................................... 26 \n2.2.3 C\u00e9lulas SRAM (SRAM Cells)....................................................................... 27 \n2.2.4 EPROM e EEPROM .................................................................................... 28 \n\n2.3 CPLDs (Complex PLDs)...................................................................................... 34 \n2.3.1 CPLDs da Altera........................................................................................... 36 \n2.3.2 A Tecnologia FPGA ..................................................................................... 38 \n2.3.3 Arquiteturas das FPGAs ............................................................................... 41 \n2.3.4 Arquitetura Cyclone ..................................................................................... 43 \n2.3.5 Aplica\u00e7\u00f5es de FPGAs ................................................................................... 47 \n\n3 Capta\u00e7\u00e3o, Digitaliza\u00e7\u00e3o e Exibi\u00e7\u00e3o de Imagens \nMonocrom\u00e1ticas ............................................................................ 48 \n\n3.1 Considera\u00e7\u00f5es Iniciais .......................................................................................... 48 \n3.1.1 O Sinal de V\u00eddeo Composto ......................................................................... 48 \n\n3.2 Circuito de Capta\u00e7\u00e3o, Digitaliza\u00e7\u00e3o, e Exibi\u00e7\u00e3o de Imagens Monocrom\u00e1ticas... 56 \n3.2.1 Capta\u00e7\u00e3o, Digitaliza\u00e7\u00e3o e Exibi\u00e7\u00e3o de Imagens Monocrom\u00e1ticas............... 57 \n\n3.2.1.1 Separador de Sincronismo ........................................................................ 58 \n3.2.1.2 Conversor A/D.......................................................................................... 59 \n3.2.1.3 Buffer........................................................................................................ 60 \n3.2.1.4 Conversor D/A.......................................................................................... 61 \n3.2.1.5 Sa\u00edda de V\u00eddeo.......................................................................................... 62 \n\n\n\n vi\n\n4 Armazenamento de Imagens Monocrom\u00e1ticas .................... 63 \n4.1 Controle para Armazenamento de Imagens Monocrom\u00e1ticas ............................. 63 \n\n4.1.1 Mem\u00f3rias ...................................................................................................... 64 \n4.1.2 Unidade de Controle ..................................................................................... 65 \n\n4.1.2.1 Unidade de Exclus\u00e3o de Pulsos de Sincronismo ...................................... 69 \n4.1.2.2 Unidade de Controle Interna..................................................................... 70 \n4.1.2.3 Unidade de Controle das Mem\u00f3rias ......................................................... 71 \n\n4.2 Considera\u00e7\u00f5es Finais ............................................................................................ 73 \n5 Integra\u00e7\u00e3o do Sinal de V\u00eddeo ................................................. 75 \n\n5.1 Considera\u00e7\u00f5es Iniciais .......................................................................................... 75 \n5.1.1 Integra\u00e7\u00e3o do Sinal de V\u00eddeo na Dire\u00e7\u00e3o Horizontal ................................... 78 \n5.1.2 Integra\u00e7\u00e3o do Sinal de V\u00eddeo na Dire\u00e7\u00e3o Vertical ....................................... 81 \n\n6 Testes e Resultados ................................................................. 88 \n6.1 Considera\u00e7\u00f5es Iniciais .......................................................................................... 88 \n\n6.1.1 Materiais ....................................................................................................... 89 \n6.1.2 Simula\u00e7\u00e3o da unidade de controle ................................................................ 90 \n6.1.3 Simula\u00e7\u00e3o e Teste do somador de pixels horizontais ................................... 91 \n6.1.4 Simula\u00e7\u00e3o e teste do somador de pixels verticais....................................... 100 \n\n6.2 Considera\u00e7\u00f5es Finais .......................................................................................... 106 \n7 Conclus\u00f5es ............................................................................. 108 \n\n7.1 Considera\u00e7\u00f5es Iniciais ........................................................................................ 108 \n7.2 An\u00e1lise dos Resultados....................................................................................... 110 \n7.3 Propostas para Trabalhos Futuros ...................................................................... 112 \n\nAp\u00eandice A................................................................................... 117 \nAp\u00eandice B................................................................................... 118 \nAp\u00eandice C................................................................................... 119 \nAp\u00eandice D................................................................................... 120 \nAp\u00eandice E................................................................................... 121 \nAp\u00eandice F ................................................................................... 123 \nAp\u00eandice G .................................................................................. 125 \nAp\u00eandice H .................................................................................. 127 \n\n \n\n\n\n vii\n\nLista de Figuras \n \n \nFigura 2-1 Metodologias de projeto ..................................................................................... 13 \nFigura 2-2 Dispositivos de l\u00f3gica program\u00e1vel (\u201cPLDs\u201d) comerciais ................................. 16 \nFigura 2-3 Representa\u00e7\u00e3o PLDs ........................................................................................... 18 \nFigura 2-4 Circuito simplificado de uma PROM ................................................................. 20 \nFigura 2-5 Circuito simplificado de um PLA ....................................................................... 22 \nFigura 2-6 Circuito simplificado de um PAL ....................................................................... 23 \nFigura 2-7 Foto antifus\u00edvel. (a) Antes da programa\u00e7\u00e3o. (b) Ap\u00f3s programa\u00e7\u00e3o. (c) Vista de \n\ncima, um antifus\u00edvel \u00e9 aproximadamente do mesmo tamanho que um contato. .......... 27 \nFigura 2-8 Tecnologia de programa\u00e7\u00e3o SRAM ................................................................... 28 \nFigura 2-9 (a) Se\u00e7\u00e3o de corte e (b) S\u00edmbolo do circuito do transistor de porta flutuante \n\nusado como c\u00e9lula ........................................................................................................ 29 \nFigura 2-10 Ilustra\u00e7\u00e3o do deslocamento na caracter\u00edstica iD \u2013 vGS de um transistor de porta \n\nflutuante como resultado da programa\u00e7\u00e3o.................................................................... 30 \nFigura 2-11 O transistor de porta flutuante durante a programa\u00e7\u00e3o..................................... 32 \nFigura 2-12 Estrutura de um CPLD...................................................................................... 35 \nFigura 2-13 Arquitetura de um LAB .................................................................................... 37 \nFigura 2-14 Macroc\u00e9lula MAX7000 .................................................................................... 38 \nFigura 2-15 Arquiteturas de FPGAs ..................................................................................... 42 \nFigura 2-16 Diagrama em blocos da arquitetura Cyclone EP1C12...................................... 45 \nFigura 2-17 Estrutura de um LAB da Cyclone..................................................................... 46 \nFigura 3-1 Processo de varredura entrela\u00e7ada. De A a B tem-se o tra\u00e7o horizontal. De B a C \n\ntem-se o retra\u00e7o horizontal. De D a E e de F a A tem-se o retra\u00e7o vertical, enquanto \nque o tra\u00e7o vertical corresponde \u00e0 a\u00e7\u00e3o de deslocamento do feixe de baixo para cima.\n...................................................................................................................................... 50 \n\nFigura 3-2 Formato de uma linha de sinal de v\u00eddeo composto............................................. 54 \nFigura 3-3 Formato do sinal padr\u00e3o de v\u00eddeo composto ...................................................... 56 \nFigura 3-4 Diagrama em blocos do circuito de capta\u00e7\u00e3o, digitaliza\u00e7\u00e3o e exibi\u00e7\u00e3o de \n\nimagens monocrom\u00e1ticas. ............................................................................................ 57 \nFigura 3-5 Sinais extra\u00eddos do separador de sincronismo. Em (a), tem-se o sinal de entrada \n\n(v\u00eddeo composto padr\u00e3o). Em (b), tem-se o sinal de sincronismo composto (cs). Em \n(c), tem-se o sinal de sincronismo vertical (vs). Em (d), tem-se o sinal de tipo de \ncampo (par/\u00edmpar) que ser\u00e1 baixo quando o campo for par e alto quando o campo for \n\u00edmpar. E em (e), tem-se o sinal de p\u00f3rtico posterior (bp). ............................................ 59 \n\nFigura 3-6 Diagrama de tempos do conversor A/D TLC5540. O sinal \u00e9 amostrado na borda \nde descida do clock e os dados ficam dispon\u00edveis a partir da quarta borda de subida do \nclock ............................................................................................................................. 60 \n\nFigura 3-7 Diagrama de tempo do conversor D/A TLC5602............................................... 61 \nFigura 4-1 M\u00f3dulo de armazenamento e controle de imagens monocrom\u00e1ticas ................. 63 \nFigura 4-2 Diagrama de tempo da mem\u00f3ria. (a)  ciclo de leitura, (b) ciclo de escrita ......... 65 \nFigura 4-3 Unidade de controle ............................................................................................ 67 \nFigura 4-4 Diagrama esquem\u00e1tico da unidade de controle .................................................. 68 \nFigura 4-5 Bloco l\u00f3gico da unidade de exclus\u00e3o de pulsos eq\u00fcalizadores e serrilhados ..... 69 \n\n\n\n viii\n\nFigura 4-6 Diagrama esquem\u00e1tico da unidade de exclus\u00e3o de pulsos eq\u00fcalizadores e \nserrilhados..................................................................................................................... 70 \n\nFigura 4-7 Bloco l\u00f3gico da unidade de controle interna ...................................................... 71 \nFigura 4-8 Bloco l\u00f3gico da unidade de controle das mem\u00f3rias ........................................... 72 \nFigura 4-9 Diagrama esquem\u00e1tico da unidade de controle das mem\u00f3rias ........................... 73 \nFigura 4-10 Diagrama em blocos dos dois m\u00f3dulos propostos............................................ 74 \nFigura 5-1 Quadros sucessivos de imagem com o deslocamento de um objeto. \u00c0 direita de \n\ncada quadro aparece o valor m\u00e9dio de cada linha ........................................................ 76 \nFigura 5-2 Quadros sucessivos de imagem com o deslocamento de um objeto. Abaixo de \n\ncada quadros aparece o valor m\u00e9dio do sinal de linha ................................................. 77 \nFigura 5-3 Diagrama em bloco da etapa de integra\u00e7\u00e3o do sinal de v\u00eddeo ............................ 77 \nFigura 5-4 Bloco l\u00f3gico do somador de pixels horizontais .................................................. 78 \nFigura 5-5 Diagrama esquem\u00e1tico do somador de pixels horizontais .................................. 79 \nFigura 5-6 Matriz 4x4, com os valores dos bits em bin\u00e1rio ................................................. 82 \nFigura 5-7 Leitura seq\u00fcencial dos bits da matriz 4x4........................................................... 82 \nFigura 5-8 Matriz 4x4 transposta ......................................................................................... 83 \nFigura 5-9 Leitura seq\u00fc\u00eancia dos bits da matriz 4x4 transposta .......................................... 83 \nFigura 5-10 Contadores para a transposi\u00e7\u00e3o dos endere\u00e7os das mem\u00f3rias .......................... 84 \nFigura 5-11 Diagrama esquem\u00e1tico da unidade de controle das mem\u00f3rias com a etapa para \n\nrealizar a transposi\u00e7\u00e3o dos endere\u00e7os das mem\u00f3rias.................................................... 85 \nFigura 5-12 Bloco l\u00f3gico do somador de pixels verticais .................................................... 86 \nFigura 5-13 Diagrama esquem\u00e1tico do somador de pixels verticais .................................... 87 \nFigura 6-1 Hardware implementado para obten\u00e7\u00e3o dos dados............................................. 89 \nFigura 6-2 Simula\u00e7\u00e3o da Unidade de Controle .................................................................... 90 \nFigura 6-3 Simula\u00e7\u00e3o do somador de pixels horizontais com dezessete bits de resolu\u00e7\u00e3o .. 92 \nFigura 6-4 Simula\u00e7\u00e3o do somador de pixels horizontais. Os oito bits mais significativos \n\nest\u00e3o representados no canal S ..................................................................................... 93 \nFigura 6-5 Simula\u00e7\u00e3o do somador de pixels horizontais com os oito bits mais significativos\n\n...................................................................................................................................... 93 \nFigura 6-6 Clock do circuito (CK1), dados obtidos da mem\u00f3ria (A0) e dados obtidos na \n\nsa\u00edda do \"ff_horiz1\" (A1) ............................................................................................. 94 \nFigura 6-7 Imagem filmada para obten\u00e7\u00e3o do histograma ................................................... 95 \nFigura 6-8 Dados da mem\u00f3ria (A0), dados do \"ff_horiz1\" e histograma da imagem .......... 95 \nFigura 6-9 Imagem  com o objeto deslocado na cena .......................................................... 96 \nFigura 6-10 Dados da mem\u00f3ria (A0), dados do \"ff_horiz1\" (A1) e histograma da imagem \n\ncom o objeto deslocado na cena ................................................................................... 96 \nFigura 6-11 Clock do circuito (CK1), dados das mem\u00f3rias (A0), dados na sa\u00edda do \n\n\"ff_horiz1\" (A1) e oito bits mais significativos do resultado da sa\u00edda do acumulador \nhorizontal (A2) ............................................................................................................. 97 \n\nFigura 6-12 Dados amostrados em forma de ondas e lista ................................................... 98 \nFigura 6-13 Dados amostrados. Canal A2: sa\u00edda do acumulador horizontal. Canal A3: sa\u00edda \n\ndo registrador, com o valor da soma truncada no final de uma linha ativa de v\u00eddeo ... 99 \nFigura 6-14 Simula\u00e7\u00e3o dos endere\u00e7os transpostos ............................................................. 100 \nFigura 6-15 Simula\u00e7\u00e3o dos endere\u00e7os transpostos ............................................................. 101 \nFigura 6-16 Simula\u00e7\u00e3o do somador de pixels na dire\u00e7\u00e3o vertical com dezessete bits de \n\nresolu\u00e7\u00e3o..................................................................................................................... 101 \n\n\n\n ix\n\nFigura 6-17 Simula\u00e7\u00e3o do somador de pixels verticais mostrando os oito bits mais \nsignificativos na sa\u00edda................................................................................................. 102 \n\nFigura 6-18 Dados lidos diretamente das mem\u00f3rias (A0) e \"carry out\" (CK1) ................. 103 \nFigura 6-19 Leitura de dados das mem\u00f3rias (A0) e leitura de dados do \"ff_vert1\" (A1) .. 104 \nFigura 6-20 Dados obtido da uma imagem de um objeto escuro em um fundo claro........ 105 \nFigura 6-21 Dados obtidos de um objeto escuro deslocado na cena .................................. 106 \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n\n\n\n x\n\nLista de Tabelas \n \n \nTabela 2-1 Tecnologias de programa\u00e7\u00e3o.............................................................................. 33 \nTabela 2-2 Compara\u00e7\u00e3o de FPGAs com rela\u00e7\u00e3o \u00e0 capacidade, arquitetura, c\u00e9lula b\u00e1sica e \n\nm\u00e9todos de programa\u00e7\u00e3o. ............................................................................................. 42 \nTabela 2-3 Caracter\u00edsticas das arquiteturas da fam\u00edlia Cyclone........................................... 44 \nTabela 2-4 Recursos dos dispositivos da fam\u00edlia Cyclone ................................................... 45 \n \n\n \n \n \n \n \n \n \n \n \n \n \n \n \n\n \n \n \n \n \n\n \n\n \n\n \n\n \n\n \n \n \n \n \n \n \n\n\n\n xi\n\nLista de Abreviaturas e Siglas \n \n \nAHDL \u2013 Altera Hardware Description Language \n\nASIC \u2013 Application Specific Integrated Circuits \n\nCAD \u2013 Computer Aided Design \n\nCCD \u2013 Charge-Coupled Device \n\nCLB \u2013 Complex Logic Block \n\nCMOS \u2013 Complementary Metal Oxide Semiconductor \n\nCPLD \u2013 Complex Programmable Logic Device \n\nDDR \u2013 Double Data Rating \n\nDSL \u2013 Digital Subscriber Line \n\nDSP \u2013 Digital Signal Processing  \n\nECL \u2013 Emitter Coupled Logic \n\nEECMOS \u2013 Electrically Erasable CMOS \n\nEEPROM \u2013 Electrically Erasable PROM \n\nEPLD \u2013 Erasable Programmable Logic Device \n\nEPROM \u2013 Erasable Programmable Read Only Memory \n\nFPGA \u2013 Field Programmable Gate Array \n\nGAL \u2013 Generic Array Logic \n\nHCPLD \u2013 High Capacity Programmable Logic Device \n\nHDL \u2013 Hardware Description Language \n\nIC \u2013 Integrated Circuit \n\nIOB \u2013 Input Output Block \n\nIOE \u2013 Input Output Element \n\n\n\n xii\n\nISP \u2013 In System Programmability \n\nJTAG \u2013 Joint Test Action Group \n\nLAB \u2013 Logic Array Block \n\nLE \u2013 Logic Element \n\nMOS \u2013 Metal Oxide Semiconductor \n\nMOSFET \u2013 Metal Oxide Semiconductor Field Effect Transistor \n\nMPGA \u2013 Mask Programmable Gate Array \n\nMSPS \u2013 Mega Samples Per Second \n\nNTSC \u2013 National Television Systems Committee \n\nOTP \u2013 One Time Programmable \n\nPAL \u2013 Programmable Array Logic \n\nPCI \u2013 Personal Computer Interface \n\nPIA \u2013 Programmable Interconnection Array \n\nPLA \u2013 Programmable Logic Array \n\nPLD \u2013 Programmable Logic Device \n\nPLE \u2013 Programmable Logic Element \n\nPLL \u2013 Phase-Locked Loop \n\nPROM \u2013 Programmable Read Only Memory \n\nRAM \u2013 Random Access Memory \n\nROM \u2013 Read Only Memory \n\nSMD \u2013 Surface Mounted Device \n\nSRAM \u2013 Static Random Access Memory  \n\nTTL \u2013 Transistor-Transistor Logic \n\nUVCMOS \u2013 Ultraviolet Complementary Metal Oxide Semiconductor \n\n\n\n xiii\n\nVHDL \u2013 Very high speed integrated circuit Hardware Description Language \n\nVHF \u2013 Very High Frequency \n\nVLSI \u2013 Very Large Scale Integration\n\n\n\n 1\n\nCap\u00edtulo 1 \n\n \n\n \n\n1 Introdu\u00e7\u00e3o \n\n \n\n1.1  Motiva\u00e7\u00e3o \n\n \n\n A capacidade de detectar movimento constitui parte fundamental do sistema de \n\nvis\u00e3o de animais. O desenvolvimento de sistemas, capazes de fazer com que m\u00e1quinas \n\npossuam capacidade semelhante, vem recebendo maior aten\u00e7\u00e3o a cada dia (Kr\u00fcger, S.; \n\nCalway, A.; 1996). \n\n \n\n Dentre as v\u00e1rias linhas de pesquisa nesta \u00e1rea, podem-se citar aquelas que utilizam \n\nseq\u00fc\u00eancias de imagens para detectar e rastrear um ou v\u00e1rios objetos na cena. Existem v\u00e1rias \n\nmaneiras de se realizar esse rastreamento (\u201ctracking\u201d). Algumas possuem informa\u00e7\u00f5es \n\npr\u00e9vias sobre os objetos a serem rastreados e, a partir dessas informa\u00e7\u00f5es, constroem-se \n\nmodelos matem\u00e1ticos para serem utilizados na detec\u00e7\u00e3o e rastreamento de objetos. Outras, \n\nn\u00e3o possuem informa\u00e7\u00f5es pr\u00e9vias sobre o objeto de interesse e por isso baseiam-se \n\nexclusivamente em regi\u00f5es da imagem ou da cena em quest\u00e3o. O que existe em comum \n\nentre essas abordagens \u00e9 a restri\u00e7\u00e3o do processamento em tempo real, exigindo que se \n\nfocalize aten\u00e7\u00e3o para o desempenho dos m\u00e9todos implementados. \n\n \n\n\n\n 2\n\n A detec\u00e7\u00e3o e o rastreamento de objetos s\u00e3o t\u00e9cnicas que est\u00e3o sendo desenvolvidas \n\ne empregadas em diversas \u00e1reas, como na engenharia e computa\u00e7\u00e3o, que por sua vez podem \n\noferecer subs\u00eddios \u00e0 medicina, geologia, dentre outras. \n\n \n\n Seguindo o conceito de detec\u00e7\u00e3o e rastreamento de objetos, encontram-se diversas \n\naplica\u00e7\u00f5es onde estas t\u00e9cnicas podem ser empregadas, tais como: \n\n \n\n1- Sistemas de vigil\u00e2ncia: Neste tipo de aplica\u00e7\u00e3o, o sistema utiliza os dados, obtidos \n\npor uma c\u00e2mera digital, para procurar continuamente ind\u00edcios de movimento na \u00e1rea \n\napontada pela c\u00e2mera. \n\n \n\n2- An\u00e1lise de movimentos humanos: Esta t\u00e9cnica al\u00e9m de utilizar conceitos de \n\nprocessamento de imagens, em particular morfologia matem\u00e1tica (Wren, \n\nC.;Azarbayejani, A.; Darrell, T.; Pentland, A,; 1997), utiliza a aplica\u00e7\u00e3o de \n\nrastreamento dos movimentos humanos, atrav\u00e9s da an\u00e1lise de seq\u00fc\u00eancia de imagens \n\ndigitais. \n\n \n\n Na literatura encontram-se outras aplica\u00e7\u00f5es dessas t\u00e9cnicas em diferentes situa\u00e7\u00f5es \n\ne prop\u00f3sitos.  \n\n \n\n A percep\u00e7\u00e3o de movimento e o rastreamento de objetos m\u00f3veis (1 e 2) atrav\u00e9s de \n\num sistema formado por um grupo de rob\u00f4s dotados de c\u00e2meras (denominados de \n\nAgentes Visuais M\u00f3veis) \u00e9 um problema a ser resolvido utilizando-se a t\u00e9cnica de \n\nrastreamento de objetos m\u00f3veis. Neste caso (Pio, J. L. S.; Campos, M. F. M.; 2002), o \n\n\n\n 3\n\nproblema \u00e9 dividido em duas etapas: a primeira consiste na detec\u00e7\u00e3o do alvo e, a \n\nsegunda, no rastreamento do mesmo que, por sua vez, \u00e9 formada por sete est\u00e1gios: \n\naquisi\u00e7\u00e3o da imagem, detec\u00e7\u00e3o da presen\u00e7a do objeto na cena, rastreamento do objeto \n\nna cena, filtragens, reconhecimento, ajustes e efetiva\u00e7\u00e3o dos ajustes no sensor. Tr\u00eas \n\nalgoritmos s\u00e3o propostos para a detec\u00e7\u00e3o e rastreamento de objetos. O primeiro consiste \n\nna captura de movimento com a subtra\u00e7\u00e3o do fundo da cena, que \u00e9 a forma mais \n\nsimples de detec\u00e7\u00e3o de movimento por\u00e9m, n\u00e3o indica a dire\u00e7\u00e3o em que o movimento \n\nocorreu. O segundo realiza a captura do movimento sobre a regi\u00e3o, que tem como \n\nobjetivo acelerar o processo de rastreamento. O processamento \u00e9 realizado numa janela \n\nobtida dinamicamente na seq\u00fc\u00eancia de imagens. Este ainda realiza a adequa\u00e7\u00e3o do \n\nprimeiro m\u00e9todo, calculando a diferen\u00e7a de imagens com dois quadros consecutivos \n\nsobre uma regi\u00e3o. O \u00faltimo algoritmo realiza a extra\u00e7\u00e3o do objeto ou seja, ele detecta o \n\nobjeto e faz o rastreamento a partir de uma base m\u00f3vel, e ainda tenta detectar o mesmo \n\nobjeto em movimento em cada imagem. \n\n \n\n De acordo com (Ghiasi, S.; Moon, H. J.; Sarrafazdeh, M.; 2004), o desenvolvimento \n\nde um sistema para rastreamento de objeto em tempo real reconfigur\u00e1vel e colaborativo \n\nfoi proposto a fim de tornar o mesmo capaz de adaptar-se aos eventos externos. \n\nLevando em considera\u00e7\u00e3o a dificuldade de se prever esses eventos a solu\u00e7\u00e3o encontrada \n\nseria a utiliza\u00e7\u00e3o de um hardware reconfigur\u00e1vel, uma vez que este fornece \n\nflexibilidade e adaptabilidade para o sistema proposto. O sistema \u00e9 composto por \n\nc\u00e2meras, que permitem a aquisi\u00e7\u00e3o e o processamento da imagem, por um computador \n\nque, atua como uma central e comanda o processamento, e por uma rede, que permite a \n\ncomunica\u00e7\u00e3o dos dados. O sistema \u00e9 implementado para detectar continuamente e \n\n\n\n 4\n\nrastrear objetos em movimento que estejam dentro do campo de vis\u00e3o da c\u00e2mera. Se o \n\nobjeto sair do campo de vis\u00e3o a c\u00e2mera dever\u00e1 busc\u00e1-lo ou o controle dever\u00e1 passar \n\npara outra c\u00e2mera. Um FPGA \u00e9 utilizado para selecionar os pontos caracter\u00edsticos da \n\ncena (cantos abruptos, varia\u00e7\u00e3o de intensidade na imagem). Essas caracter\u00edsticas s\u00e3o \n\npassadas para um algoritmo de rastreamento. Como o n\u00famero de pontos caracter\u00edsticos \n\nmuda na cena, um algoritmo foi desenvolvido para detectar essas mudan\u00e7as e adapt\u00e1-las \n\npara compensar as mudan\u00e7as no ambiente. Sendo assim, o n\u00famero de pontos \n\ncaracter\u00edsticos assegura a exatid\u00e3o do rastreamento. Isto pode ser melhorado atrav\u00e9s da \n\nreconfigura\u00e7\u00e3o do FPGA. \n\n \n\n Uma t\u00e9cnica para rastreamento de objeto baseado na aproxima\u00e7\u00e3o da Hip\u00f3tese \n\nM\u00faltipla Bayesiana de Rastreamento (MHT) utiliza dois algoritmos combinados para \n\ngerar o rastreador do objeto. O primeiro \u00e9 empregado para a segmenta\u00e7\u00e3o do contorno, \n\nbaseado num mapa de borda. O segundo \u00e9 usado no rastreamento temporal de um \n\nobjeto selecionado de um quadro inicial. Um objeto \u00e9 representado por pontos \n\ncaracter\u00edsticos, que s\u00e3o extra\u00eddos dele. Tais pontos s\u00e3o obtidos usando informa\u00e7\u00f5es do \n\nmapa de bordas. Esses pontos s\u00e3o rastreados atrav\u00e9s da seq\u00fc\u00eancia de imagens. Para \n\nconfirmar o rastreamento correto desses pontos, a posi\u00e7\u00e3o de cada ponto na trajet\u00f3ria \u00e9 \n\ncomparada com o objeto segmentado em cada quadro (Tissainayagam, P.; Suter, D.; \n\n2000). \n\n \n\n Segundo (Br\u00e9mond, F.; Thonnat, M.; 1998), um m\u00e9todo para rastrear m\u00faltiplos \n\nobjetos n\u00e3o r\u00edgidos em uma seq\u00fc\u00eancia de v\u00eddeo \u00e9 desenvolvido com o intuito de se ter \n\num sistema de interpreta\u00e7\u00e3o para ser usado em inspe\u00e7\u00f5es autom\u00e1ticas de cenas internas \n\n\n\n 5\n\ne externas por uma c\u00e2mera. Dada a seq\u00fc\u00eancia de uma cena, o sistema de interpreta\u00e7\u00e3o \n\nanalisa o comportamento dos objetos reais (humanos ou n\u00e3o). Esse sistema de \n\ninterpreta\u00e7\u00e3o \u00e9 composto por tr\u00eas m\u00f3dulos. Um m\u00f3dulo de processamento de imagem, \n\nque detecta regi\u00f5es de movimento, um de rastreamento, que associa essas regi\u00f5es para \n\nrastrear os alvos que correspondem ao objeto real e, um m\u00f3dulo de reconhecimento do \n\ncen\u00e1rio, que identifica os alvos como objetos reais e reconhece o cen\u00e1rio relativo ao \n\ncomportamento deles. O problema de rastreamento est\u00e1 na ordem de interpreta\u00e7\u00e3o da \n\ncena pois, a perda do objeto rastreado impossibilita a an\u00e1lise do comportamento. Este \n\nm\u00e9todo \u00e9 baseado no rastreamento da apar\u00eancia, ou seja, \u00e9 rastreada a percep\u00e7\u00e3o do \n\nmovimento do objeto na cena e n\u00e3o o objeto em real. \n\n                                                                                                                                                                          \n\n O rastreamento de ve\u00edculos em tempo real, atrav\u00e9s do processamento de imagem de \n\nv\u00eddeo pode ser uma solu\u00e7\u00e3o promissora para congestionamento de tr\u00e1fego. Este m\u00e9todo \n\npode fornecer par\u00e2metros do tr\u00e1fego como o fluxo e velocidade, bem como mudan\u00e7as \n\nde ruas e trajet\u00f3rias dos ve\u00edculos. Para que essa ferramenta seja eficiente, um sistema de \n\nprocessamento de imagem de v\u00eddeo deve possuir algumas exig\u00eancias, tais como: \n\nsegmenta\u00e7\u00e3o autom\u00e1tica de cada ve\u00edculo, do fundo e dos outros ve\u00edculos que s\u00e3o \n\ndetectados; detec\u00e7\u00e3o de todos os tipos de ve\u00edculos; suporte para varia\u00e7\u00f5es de condi\u00e7\u00f5es \n\nde ilumina\u00e7\u00e3o e, por fim, opera\u00e7\u00e3o em tempo real. O sistema proposto utiliza v\u00eddeo, \n\nobtido atrav\u00e9s de c\u00e2meras, e processa-os. Ent\u00e3o, o dado \u00e9 transmitido para localiza\u00e7\u00e3o \n\ncentral, como se fosse um Centro de Gerenciamento de Tr\u00e1fego, para compara\u00e7\u00e3o e \n\nc\u00e1lculo dos par\u00e2metros. O processo ocorre em tr\u00eas est\u00e1gios: segmenta\u00e7\u00e3o da cena em \n\nve\u00edculos individuais e rastreamento de cada ve\u00edculo dentro de uma zona para refinar e \n\natualizar a posi\u00e7\u00e3o e velocidade em coordenadas 3D; processamento dos dados da \n\n\n\n 6\n\ntrajet\u00f3ria para o c\u00e1lculo dos par\u00e2metros do tr\u00e1fego local e, no Centro de Gerenciamento, \n\nos par\u00e2metros de cada lugar s\u00e3o comparados e, as informa\u00e7\u00f5es de sinais das c\u00e2meras \n\nvizinhas s\u00e3o processadas para calcular os par\u00e2metros da se\u00e7\u00e3o (Coifman, B.; Beymer, \n\nD.; 1998). \n\n \n\n Em (Kakadiaris, I.; Metaxas, D.; 2000), s\u00e3o apresentadas t\u00e9cnicas e formula\u00e7\u00f5es \n\npara estima\u00e7\u00e3o de movimento humano atrav\u00e9s de m\u00faltiplas c\u00e2meras. Este m\u00e9todo \u00e9 \n\nbaseado na an\u00e1lise espa\u00e7o temporal da silhueta da pessoa, n\u00e3o sendo necess\u00e1rio o uso \n\nde marcadores ou similares. O rastreamento de movimento humano em imagens 3D \n\nest\u00e1 dando suporte a in\u00fameras aplica\u00e7\u00f5es, tais como: an\u00e1lise de postura e modo de \n\nandar de atletas, anima\u00e7\u00f5es do corpo humano, m\u00e3os e faces e, anota\u00e7\u00f5es autom\u00e1ticas de \n\natividades humanas em base de dados de v\u00eddeo. Algumas informa\u00e7\u00f5es s\u00e3o importantes \n\npara certas aplica\u00e7\u00f5es como, por exemplo, o centr\u00f3ide da silhueta e, informa\u00e7\u00f5es \n\ndetalhadas de forma e movimento. Em certos casos, mesmo os modelos mais pr\u00e1ticos e \n\nanima\u00e7\u00f5es n\u00e3o s\u00e3o capazes de reproduzir exatamente as formas e movimentos \n\nnecess\u00e1rios, sendo ent\u00e3o, preciso criar atores virtuais para o estudo do movimento. O \n\nrastreamento do movimento pode ser executado usando t\u00e9cnicas mec\u00e2nicas eletro-\n\nmagn\u00e9ticas e baseadas em imagens. Sistemas baseados em imagens podem ser tratados \n\nem tr\u00eas categorias: T\u00e9cnicas que utilizam marcadores ativos, passivos e que n\u00e3o \n\nutilizam marcadores. O m\u00e9todo prefer\u00edvel \u00e9 o m\u00e9todo de sensoriamento n\u00e3o intrusivo \n\nbaseado em vis\u00e3o. Neste trabalho a oclus\u00e3o \u00e9 computada, baseada no movimento \n\npreditivo e o rastreamento \u00e9 baseado nos contornos oclusos. Para superar problemas do \n\nuso de modelos aproximados para a estima\u00e7\u00e3o do movimento 3D, um m\u00e9todo que \n\nestima a forma das partes do corpo foi proposto. O m\u00e9todo \u00e9 baseado na fus\u00e3o da \n\n\n\n 7\n\nobserva\u00e7\u00e3o (de v\u00e1rias c\u00e2meras) de um conjunto das performances do indiv\u00edduo de \n\nacordo com um protocolo designado para revelar a estrutura do corpo humano. \n\n \n\n Aplica\u00e7\u00f5es em seguran\u00e7a e inspe\u00e7\u00e3o necessitam de monitoramento de \u00e1reas com \n\nvis\u00e3o de 360\u00ba. Tradicionalmente s\u00e3o usadas tanto c\u00e2meras rotacionadas ou um n\u00famero \n\nde c\u00e2meras com pequena \u00e1rea de vis\u00e3o. No entanto, ambas apresentam desvantagens. \n\nPor exemplo, c\u00e2meras com rota\u00e7\u00e3o apresentam problemas com imagens n\u00e3o est\u00e1ticas e \n\ncom campo de cobertura n\u00e3o permanente. Solu\u00e7\u00f5es com m\u00faltiplas c\u00e2meras levam a \n\nproblemas com fronteiras quando o objeto em movimento rastreado esta se movendo do \n\ncampo de vis\u00e3o de uma c\u00e2mera para outro. Por outro lado, ambas as solu\u00e7\u00f5es s\u00e3o caras, \n\npois s\u00e3o necess\u00e1rias plataformas de rota\u00e7\u00e3o ou c\u00e2meras \u00f3pticas. Em (F\u00f6ldesy, P.; \n\nSzatm\u00e1ri, I.; Zar\u00e1ndy, \u00c1.; 2002) um modo eficiente e barato para solucionar estes \n\nproblemas \u00e9 apresentado. Duas tecnologias foram combinadas. A primeira \u00e9 o sistema \n\nde Lentes Panor\u00e2micas Anelares (PAL), o qual projeta o campo de vis\u00e3o de 360\u00ba dentro \n\nde uma imagem em forma de disco. A segunda tecnologia \u00e9 o Computador Visual \n\nAladdin (computador de alta performance), o qual \u00e9 equipado pelo chip ACE4K 64x64 \n\nCNNUN 1 (I. Szatm\u00e1ri, 2000). A combina\u00e7\u00e3o dessas duas tecnologias leva a um sistema \n\nde monitoramento por uma \u00fanica c\u00e2mera com \u00e2ngulo de vis\u00e3o de 360\u00baem tempo real. \n\n \n\n \n\n \n\n_______________________ \n\n1 Processador para Rede Neural Universal (CNNUN \u2013 Cellular Neural Network Universal), com arranjo \nde c\u00e9lulas de 64 x 64. \n \n\n\n\n 8\n\n Tem havido um aumento repentino no n\u00famero de c\u00e2meras de inspe\u00e7\u00e3o nos \u00faltimos \n\nanos. Circuitos fechados de televis\u00e3o t\u00eam crescido significativamente, sendo usados por \n\ncompanhias para prote\u00e7\u00e3o pessoal, tornando-se uma ferramenta usada por autoridades \n\npara a inspe\u00e7\u00e3o de \u00e1reas p\u00fablicas. Entretanto, v\u00e1rias quest\u00f5es importantes devem ser \n\nconsideradas antes de se confiar na inspe\u00e7\u00e3o por v\u00eddeo como uma ferramenta efetiva \n\npara preven\u00e7\u00e3o de crimes. Em (Niu, W.; Jiao, L.; Han. D.; Wang, Y.; 2004) \u00e9 dada uma \n\nvis\u00e3o sobre uma estrutura de um sistema de inspe\u00e7\u00e3o de v\u00eddeo com multi-c\u00e2meras que \n\nabrange esquemas para a fus\u00e3o de dados espa\u00e7os-temporais, representa\u00e7\u00e3o de eventos e \n\nreconhecimento. Este sistema pode ainda rastrear m\u00faltiplos carros e detectar h\u00e1bitos \n\nsuspeitos de dire\u00e7\u00e3o (dirigir em zig-zag). Esse sistema de inspe\u00e7\u00e3o de ve\u00edculos por \n\nv\u00eddeo reconhece tipos de manobras pela an\u00e1lise das trajet\u00f3rias. V\u00e1rias c\u00e2meras s\u00e3o \n\ncolocadas em um estacionamento para aumentar a cobertura do espa\u00e7o. Cada c\u00e2mera \u00e9 \n\ncalibrada e registrada para um quadro comum de refer\u00eancia. A trajet\u00f3ria do ve\u00edculo \u00e9 \n\nintegrada do resultado do rastreamento de v\u00e1rias c\u00e2meras. Com a ajuda da informa\u00e7\u00e3o \n\ndo registro da c\u00e2mera, a trajet\u00f3ria pode ser fundida no sistema de coordenadas. O \n\nalgoritmo de reconhecimento, que utiliza as trajet\u00f3rias como entrada, consiste de duas \n\netapas: a primeira transfere os dados num\u00e9ricos da trajet\u00f3ria em descri\u00e7\u00f5es sem\u00e2nticas, \n\ntais como curvas e paradas; e o segundo reconhece os padr\u00f5es de movimentos. O \n\nsistema \u00e9 focado na generaliza\u00e7\u00e3o dessa estrutura para o reconhecimento de a\u00e7\u00e3o \n\nhumana. Enquanto o fluxo de processamento de detec\u00e7\u00e3o \u2013 representa\u00e7\u00e3o \u2013 \n\nreconhecimento pode ser v\u00e1lido para o reconhecimento de atividades humanas e \n\nveiculares, o rastreamento detalhado, esquemas de representa\u00e7\u00e3o e reconhecimento \n\ndevem ser adaptados para silhuetas deform\u00e1veis e figuras humanas. A segmenta\u00e7\u00e3o e o \n\nrastreamento de m\u00faltiplas pessoas em tempo real \u00e9 um desafio. Por isso, nesse sistema \n\n\n\n 9\n\nde inspe\u00e7\u00e3o, pode-se detectar automaticamente objetos em movimento e classificar o \n\nmovimento dos mesmos em categorias sem\u00e2nticas como carros e/ou humanos. Se o \n\nobjeto rastreado \u00e9 uma pessoa, um \u00fanico r\u00f3tulo ser\u00e1 referenciado a essa pessoa. \n\nInforma\u00e7\u00f5es como centr\u00f3ide, altura e o valor m\u00e9dio da intensidade da regi\u00e3o ocupada \n\npela pessoa rastreada ser\u00e3o gravados como uma assinatura. Um filtro de Kalman \u00e9 \n\nusado para rastrear cada pessoa. Como resultado, m\u00faltiplas pessoas podem entrar e sair \n\nda cena aleatoriamente. A irregularidade, como fus\u00e3o de silhuetas, \u00e9 manuseada e \n\nindiv\u00edduos podem ser rastreados corretamente depois que um grupo de pessoas se \n\ndividirem. Se a mesma pessoa entrar novamente no campo de vis\u00e3o, em um per\u00edodo de \n\ntempo consideravelmente curto, o sistema reconhece e assimila o mesmo r\u00f3tulo para a \n\npessoa. \n\n \n\n Um dos maiores desafios na \u00e1rea de vis\u00e3o computacional \u00e9 o desenvolvimento de \n\nsistemas capazes de realizar o processamento de imagens digitais em tempo real a um \n\ncusto baixo. Para isso, faz-se o uso de computadores de uso geral, que permitem uma \n\nr\u00e1pida implementa\u00e7\u00e3o de sistemas e de v\u00e1rios tipos de algoritmos. Sabe-se, no entanto, \n\nque existem v\u00e1rias limita\u00e7\u00f5es para esses computadores e, uma maneira pra contornar \n\nesses problemas, seria o uso de uma arquitetura dedicada, projetada em hardware, para \n\nexecutar os algoritmos em tempo real. O uso de dispositivos program\u00e1veis CPLDs e \n\nFPGAs possibilita um r\u00e1pido desenvolvimento, an\u00e1lise e implementa\u00e7\u00e3o de projetos \n\nmais complexos a um custo mais baixo.  \n\n  \n\n Esta primeira parte da disserta\u00e7\u00e3o faz uma revis\u00e3o da literatura sobre detec\u00e7\u00e3o de \n\nmovimento e rastreamento de objetos em tempo real. \n\n\n\n 10\n\n1.2  Objetivo \n\n \n\n O objetivo deste trabalho \u00e9 desenvolver um sistema capaz de detectar o movimento \n\nde objetos em tempo real a partir do sinal de v\u00eddeo padr\u00e3o, proveniente de uma c\u00e2mera de \n\nv\u00eddeo monocrom\u00e1tica CCD (Charge-Coupled Device). O sistema proposto ser\u00e1 composto \n\npor um m\u00f3dulo de capta\u00e7\u00e3o, digitaliza\u00e7\u00e3o e exibi\u00e7\u00e3o do sinal de v\u00eddeo e, por um segundo \n\nm\u00f3dulo respons\u00e1vel pelo armazenamento das imagens digitalizadas e, tamb\u00e9m pela \n\nintegra\u00e7\u00e3o do sinal de v\u00eddeo. O sistema dever\u00e1 ser capaz de detectar o movimento de \n\nobjetos nas dire\u00e7\u00f5es horizontal e vertical. Para a detec\u00e7\u00e3o de movimento pode-se utilizar a \n\ninforma\u00e7\u00e3o m\u00e9dia de cada linha da imagem assim, processando a informa\u00e7\u00e3o m\u00e9dia de \n\ncada linha e comparando a informa\u00e7\u00e3o de quadros sucessivos ser\u00e1 poss\u00edvel detectar se \n\nocorreram varia\u00e7\u00f5es na dire\u00e7\u00e3o. Para deslocamentos na dire\u00e7\u00e3o horizontal, que \n\ncorrespondem a maior parte dos movimentos, a integra\u00e7\u00e3o ter\u00e1 de ser realizada nas linhas \n\nda imagem correspondentes \u00e0 posi\u00e7\u00e3o vertical do objeto na cena j\u00e1, para deslocamentos na \n\ndire\u00e7\u00e3o vertical a integra\u00e7\u00e3o ser\u00e1 realizada nas linhas da imagem correspondentes \u00e0 posi\u00e7\u00e3o \n\nhorizontal do objeto na cena. O sistema de detec\u00e7\u00e3o de movimento conta com um m\u00f3dulo \n\nde aquisi\u00e7\u00e3o, armazenamento e exibi\u00e7\u00e3o de imagens monocrom\u00e1ticas, que ser\u00e1 detalhado \n\nmais adiante. \n\n \n\n \n\n \n\n \n\n\n\n 11\n\n1.3  Organiza\u00e7\u00e3o \n\n \n\nEssa disserta\u00e7\u00e3o \u00e9 composta por sete cap\u00edtulos: \n\n \n\nNeste primeiro cap\u00edtulo, \u00e9 feita uma introdu\u00e7\u00e3o ao assunto, apresentando algumas \n\naplica\u00e7\u00f5es e suas import\u00e2ncias, onde foram apresentados alguns assuntos relacionados aos \n\ntemas, encontrados na literatura e, por \u00faltimo apresentou-se o objetivo desse trabalho. No \n\ncap\u00edtulo 2, ser\u00e1 apresentada uma vis\u00e3o geral sobre dispositivos de l\u00f3gica program\u00e1vel \n\ncomplexa (CPLDs), incluindo sua arquitetura e funcionamento. No cap\u00edtulo 3 ser\u00e1 feita \n\numa explica\u00e7\u00e3o detalhada sobre o sinal de v\u00eddeo composto e sobre a arquitetura \n\ndesenvolvida para a capta\u00e7\u00e3o, digitaliza\u00e7\u00e3o e exibi\u00e7\u00e3o de imagens monocrom\u00e1ticas. A \n\netapa de armazenamento da imagem digitalizada, utilizando CPLDs, ser\u00e1 apresentada de \n\nmaneira detalhada no cap\u00edtulo 4. \n\n \n\nNo cap\u00edtulo 5, ser\u00e1 descrito o processo de integra\u00e7\u00e3o dos pixels, tanto na dire\u00e7\u00e3o \n\nhorizontal quanto na dire\u00e7\u00e3o vertical. Os testes e resultados do circuito implementado ser\u00e3o \n\napresentados no cap\u00edtulo 6. Por fim, no cap\u00edtulo 7, ser\u00e3o apresentadas as conclus\u00f5es e \n\nalgumas propostas para trabalhos futuros. \n\n                                                                                                                                                                          \n\n\n\n 12\n\nCap\u00edtulo 2 \n\n \n\n \n\n2 Dispositivos L\u00f3gicos Program\u00e1veis (PLDs) \n\n \n\nO projeto de sistemas digitais tem sofrido grandes mudan\u00e7as nos \u00faltimos anos \n\ndevido ao desenvolvimento dos dispositivos l\u00f3gicos program\u00e1veis (PLDs). \n\nConseq\u00fcentemente, os projetistas t\u00eam se deparado com uma grande quantidade de novos \n\ndispositivos e com seus respectivos softwares. A fim de amenizar a dificuldade na hora da \n\nescolha do dispositivo mais eficiente para o projeto \u00e9 necess\u00e1rio que o projetista tenha um \n\nconhecimento s\u00f3lido das bases de funcionamento tanto do componente quanto do software \n\nque ser\u00e1 utilizado (Jenkins, J. H., 1994). \n\n \n\nSegundo (Chan e Mourad; 1994), com os componentes dos circuitos evoluindo de \n\ntransistores a circuitos integrados em larga escala [VLSI (Very Large Scale Integration)] e \n\ncom as ferramentas CAD (Computer Aided Design) o ciclo de projeto de circuitos digitais \n\ntornou-se mais simples e mais r\u00e1pido. Al\u00e9m disso, n\u00e3o \u00e9 mais necess\u00e1rio montar diferentes \n\ncomponentes ou desenhar portas l\u00f3gicas individuais, uma vez que as linguagens de \n\ndescri\u00e7\u00e3o de hardware [Hardware Description Languages (HDL)] t\u00eam facilitado a descri\u00e7\u00e3o \n\nde projetos em um n\u00edvel hier\u00e1rquico mais complexo. Ferramentas de s\u00edntese l\u00f3gica \n\nautom\u00e1tica tamb\u00e9m est\u00e3o dispon\u00edveis para mapear circuitos em diversas tecnologias.  \n\nDevido \u00e0s r\u00e1pidas mudan\u00e7as na tecnologia e t\u00e9cnicas de projeto de VLSI, o ciclo de vida \n\n\n\n 13\n\ndos produtos modernos est\u00e1 se tornando cada vez menor em rela\u00e7\u00e3o ao tempo necess\u00e1rio \n\npara o projeto e desenvolvimento do mesmo, tornando-se necess\u00e1rio uma prototipa\u00e7\u00e3o mais \n\nr\u00e1pida. \n\n \n\nCircuitos integrados digitais (ICs) podem ser implementados em diferentes \n\ntecnologias, dependendo do seu tamanho e de sua fun\u00e7\u00e3o no sistema. A implementa\u00e7\u00e3o de \n\ncircuitos digitais pode ser agrupada em duas categorias: totalmente customizados e \n\nsemicustomizados, como pode ser visto na figura que se segue. \n\n \n\n \n \n\nFigura 2-1 Metodologias de projeto \n \n\nDe acordo com a figura 2-1, a \u00faltima categoria (L\u00f3gica Program\u00e1vel), subdivide-se \n\nem PLDs e FPGAs. Estas duas subcategorias t\u00eam facilitado o projeto e a produ\u00e7\u00e3o de \n\ncircuitos integrados para aplica\u00e7\u00f5es espec\u00edficas [ASICs (Application Specific Integrated \n\nCircuits)]. Ainda, de acordo com a figura anterior tem-se: \n\n\n\n 14\n\n CIs totalmente customizados ou ASICs (Application Specific Integrated \n\nCircuits): Estes CIs s\u00e3o criados usando m\u00e1scaras para todas as camadas durante o \n\nprocesso de fabrica\u00e7\u00e3o, uma vez que neste tipo de projeto cada fun\u00e7\u00e3o l\u00f3gica \u00e9 \n\nmanualmente projetada e otimizada. Al\u00e9m disso, o projetista controla todos os \n\nest\u00e1gios do \u201clayout\u201d do chip possibilitando assim m\u00e1xima flexibilidade e alta \n\nperformance. Conseq\u00fcentemente, o CI \u00e9 mais compacto e oferece um maior \n\ndesempenho com um baixo consumo de energia. Para aplica\u00e7\u00f5es que necessitem de \n\ngrande volume de produ\u00e7\u00e3o, estes CIs customizados fornecem uma alternativa de \n\nbaixo custo. \n\n \n\n MPGAs (Mask-Programmable Gate Arrays): Neste tipo de implementa\u00e7\u00e3o, a \n\nespecifica\u00e7\u00e3o das fun\u00e7\u00f5es l\u00f3gicas deve ser feita antes do processo de fabrica\u00e7\u00e3o do \n\nCI. Esta especifica\u00e7\u00e3o \u00e9 feita atrav\u00e9s de um mapeamento de transistores pr\u00e9-\n\nfabricados numa pastilha. Para o processo de fabrica\u00e7\u00e3o s\u00e3o utilizadas m\u00e1scaras \n\ngen\u00e9ricas de m\u00f3dulos pr\u00e9-projetados, para a metaliza\u00e7\u00e3o das camadas. Essas \n\nm\u00e1scaras criam um arranjo modular de blocos funcionais. Para a interconex\u00e3o \n\ndesses blocos funcionais o processo necessita de m\u00e1scaras espec\u00edficas. O projeto \n\ndestes CIs \u00e9 usualmente facilitado pelo uso de uma biblioteca de c\u00e9lulas, fazendo \n\ncom que a pouca habilidade do projetista n\u00e3o seja um fator cr\u00edtico, como no caso \n\ndas metodologias totalmente customizadas. Os MPGAs oferecem um tempo de \n\ndesenvolvimento mais curto e custos mais baixos do que os CIs customizados. \n\n \n\n Standard Cells: Assim como na implementa\u00e7\u00e3o das MPGAs, este tipo de projeto \u00e9 \n\nfacilitado pelo uso de m\u00f3dulos pr\u00e9-projetados. Os m\u00f3dulos, standard cells, s\u00e3o \n\n\n\n 15\n\ngeralmente salvos em uma base de dados. Os projetistas selecionam as c\u00e9lulas da \n\nbase de dados para realizar seus projetos. Estas c\u00e9lulas s\u00e3o dispostas em colunas e \n\ninterligadas. O roteamento \u00e9 feito dentro de canais que podem ter tamanhos \n\nvari\u00e1veis. Sendo assim, percebe-se que se trata de um processo totalmente \n\nautomatizado aonde as etapas descritas de fabrica\u00e7\u00e3o s\u00e3o realizadas com o aux\u00edlio \n\nde ferramentas CAD. Comparando com os CIs customizados, os circuitos \n\nimplementados em standard cells s\u00e3o menos eficientes em tamanho e desempenho; \n\npor\u00e9m, o custo de fabrica\u00e7\u00e3o \u00e9 mais baixo e seu tempo de projeto \u00e9 menor. \n\n \n\n PLDs (Programmable Logic Devices): Dispositivos l\u00f3gicos program\u00e1veis, s\u00e3o \n\ndispositivos utilizados para implementar fun\u00e7\u00f5es l\u00f3gicas onde o chip pode ser \n\nprogramado (pelo usu\u00e1rio) via software. Este software geralmente \u00e9 espec\u00edfico para \n\no dispositivo em quest\u00e3o e \u00e9 fornecido pelo fabricante do mesmo. Com essa \n\ncapacidade de configura\u00e7\u00e3o e reconfigura\u00e7\u00e3o esta tecnologia elimina o processo de \n\nfabrica\u00e7\u00e3o ou seja, o projetista pode produzir CIs de aplica\u00e7\u00f5es espec\u00edficas (ASICs) \n\nem um curto per\u00edodo de tempo e com um custo reduzido. Os PLDs podem ser \n\nencontrados no mercado com caracter\u00edsticas de densidade, performance e custo \n\nequivalente ao de um dispositivo n\u00e3o program\u00e1vel (ASIC). Estes fatores, aliados \n\ncom o tempo de produ\u00e7\u00e3o e flexibilidade na programa\u00e7\u00e3o ajudam a manter o \n\ncrescimento desta tecnologia, de alta densidade, no desenvolvimento de sistemas \n\ndigitais. \n\n \n\nComo mostrado na figura 2-2, a seguir, os dispositivos de l\u00f3gica program\u00e1vel se \n\ndividem em dois tipos, s\u00e3o eles: \n\n\n\n 16\n\n1. SPLDs (Simple PLDs): Esses PLDs usam tecnologia CMOS e \n\noferecem elementos de mem\u00f3ria do tipo EPROM, EEPROM e \n\nFLASH e englobam os PALs, GALs e os obsoletos PLAs. \n\n \n\n2. HCPLDs (High Capacity PLDs): Os dispositivos l\u00f3gicos de alta \n\ncapacidade tamb\u00e9m utilizam tecnologia CMOS com mem\u00f3ria \n\nEPROM, EEPROM, FLASH, SRAM e antifus\u00edvel. Nesta fam\u00edlia \n\nencaixam-se os CPLDs (Complex PLDs) e os FPGAs (Field \n\nProgrammable Gate Arrays). \n\n \n\n \n \n\nFigura 2-2 Dispositivos de l\u00f3gica program\u00e1vel (\u201cPLDs\u201d) comerciais \n\n \n\n \n\n \n\n \n\n\n\n 17\n\n2.1 A Evolu\u00e7\u00e3o dos Dispositivos L\u00f3gicos Program\u00e1veis \n\n \n\n2.1.1  Arquiteturas B\u00e1sicas \n\n \n\n As arquiteturas da primeira gera\u00e7\u00e3o de PLDs baseiam-se no conceito de soma de \n\nprodutos, que representa uma fun\u00e7\u00e3o seja ela combinacional ou seq\u00fcencial. Para essa \n\nmanipula\u00e7\u00e3o l\u00f3gica s\u00e3o usadas as leis de De Morgan e teoremas da \u00e1lgebra booleana. \n\nBasicamente, esses componentes s\u00e3o formados por dois arranjos de portas l\u00f3gicas: uma \n\nmatriz de portas l\u00f3gicas AND (array AND), que \u00e9 conectada aos sinais de entrada do CI, e \n\npor uma matriz de portas l\u00f3gicas OR (array OR), que fornece os sinais de sa\u00edda do circuito. \n\nEnt\u00e3o, combinando-se as entradas no arranjo AND, os termos produtos s\u00e3o gerados, e estes, \n\npor sua vez, s\u00e3o enviados ao arranjo OR, sendo somados, resultando na soma de produtos, \n\nrespons\u00e1veis pela implementa\u00e7\u00e3o da l\u00f3gica requerida. \n\n \n\nDependendo do tipo de PLD, uma ou ambas as matrizes de portas l\u00f3gicas podem ser \n\nprogram\u00e1veis sendo assim, de acordo com a programa\u00e7\u00e3o das matrizes l\u00f3gicas AND e/ou \n\nOR, os PLDs podem ser classificados da seguinte forma: \n\n \n\n PROM: apresenta a matriz AND fixa e a matriz OR program\u00e1vel; \n\n PAL: apresenta a matriz AND program\u00e1vel e a matriz OR fixa; \n\n PLA: apresenta ambas as matrizes AND e OR program\u00e1veis. \n\n \n\n\n\n 18\n\nUma representa\u00e7\u00e3o simb\u00f3lica foi criada para um melhor entendimento dos PLDs. \n\nEsta representa\u00e7\u00e3o segue o conceito de linha de produto e linha de soma, aonde tanto as \n\nentradas das portas l\u00f3gicas AND e OR s\u00e3o representadas apenas por uma linha, como \n\nmostradas na figura seguinte. \n\n \n\n \n \n\nFigura 2-3 Representa\u00e7\u00e3o PLDs \n\n \n\nInicialmente, os PLDs permitiam a implementa\u00e7\u00e3o de circuitos de baixa \n\ncomplexidade (em torno de 1.000 portas equivalentes) no entanto, hoje em dia, os PLDs \n\npodem alcan\u00e7ar densidades de at\u00e9 250.000 portas (para os mais modernos), tornando \n\nposs\u00edvel projetar subsistemas inteiramente digitais com um \u00fanico dispositivo. Sabe-se que, \n\nno in\u00edcio, os PLDs possu\u00edam apenas um bloco l\u00f3gico que realizava globalmente as \n\nopera\u00e7\u00f5es, conectado aos pinos de entrada e sa\u00edda do dispositivo. Por\u00e9m, com o \n\naperfei\u00e7oamento das tecnologias de fabrica\u00e7\u00e3o, os PLDs receberam uma estrutura interna \n\nde interconex\u00f5es program\u00e1veis (como mostrado na figura 2-3), flexibilizando ainda mais a \n\nprograma\u00e7\u00e3o. \n\n\n\n 19\n\n2.1.2  PROM (Programmable Read-Only Memory) \n\n \n\n As formas de implementa\u00e7\u00e3o de circuitos customizados (ASICs), personaliz\u00e1veis \n\nap\u00f3s o encapsulamento, ou PLDs, surgiram em meados da d\u00e9cada de 70, e o primeiro tipo \n\nde chip program\u00e1vel pelo usu\u00e1rio, que poderia implementar circuitos l\u00f3gicos, foi a PROM \n\n(Programmable Read-Only Memory), desenvolvido pela Monolithic Memories Inc.. Estes \n\ncomponentes podem ser usados eficientemente tanto como mem\u00f3ria de alta velocidade, \n\npara a armazenagem de dados, como para a implementa\u00e7\u00e3o de circuitos l\u00f3gicos, onde as \n\nlinhas de endere\u00e7amento podem ser usadas como entradas do circuito l\u00f3gico e as linhas de \n\ndados como sa\u00eddas. \n\n \n\nQuando uma PROM \u00e9 utilizada como mem\u00f3ria o arranjo AND, que decodifica o \n\nendere\u00e7o da mem\u00f3ria, \u00e9 predefinido em f\u00e1brica e, somente o arranjo OR, que fornece o \n\nvalor na sa\u00edda, \u00e9 program\u00e1vel. A figura 2-4, mostra uma PROM que funciona como um tipo \n\nde PLD. \n\n\n\n 20\n\n \n\n \n\nFigura 2-4 Circuito simplificado de uma PROM \n \n\nSegundo (Monolithic Memories Inc. 1984), quando um componente PROM for \n\nutilizado para substitui\u00e7\u00e3o de l\u00f3gica aleat\u00f3ria (l\u00f3gica que n\u00e3o segue um padr\u00e3o r\u00edgido de \n\nroteamento) este passa a ser chamado de PLE (\u201cProgrammable Logic Element\u201d). Neste tipo \n\nde aplica\u00e7\u00e3o, cada porta l\u00f3gica do arranjo AND corresponde a um termo produto, com \n\nvari\u00e1veis fixas, previamente decodificadas neste arranjo. As sa\u00eddas s\u00e3o as somas dos \n\nprodutos, definidos pelo usu\u00e1rio, no arranjo program\u00e1vel OR. Sabe-se que as equa\u00e7\u00f5es \n\nbooleanas, que descrevem o funcionamento de um circuito l\u00f3gico, possuem um n\u00famero \n\nlimitado de termos produto e, com a flexibilidade do arranjo program\u00e1vel OR nas PROMs \n\nesta arquitetura torna-se desnecess\u00e1ria e ineficiente para a implementa\u00e7\u00e3o de circuitos \n\nl\u00f3gicos, sendo raramente empregadas na pr\u00e1tica. \n\n \n\n\n\n 21\n\n2.1.3  PLA (Programmable Logic Array) \n\n \n\n Os PLAs s\u00e3o os componentes que apresentam maior flexibilidade na implementa\u00e7\u00e3o \n\nde soma de produtos, uma vez que ambas as matrizes de portas l\u00f3gicas AND e OR s\u00e3o \n\nprogram\u00e1veis. Esses dispositivos foram os primeiros a serem criados especificamente para \n\na implementa\u00e7\u00e3o de circuitos l\u00f3gicos. Foram introduzidos no mercado pela Philips, no \n\nin\u00edcio dos anos 70. A arquitetura do PLA cont\u00e9m um dispositivo de programa\u00e7\u00e3o por \n\nfun\u00e7\u00e3o l\u00f3gica a mais do que as arquiteturas PAL e PROM, correspondendo a um acr\u00e9scimo \n\nem \u00e1rea de pastilha e uma diminui\u00e7\u00e3o da velocidade. Um dispositivo PLA \u00e9 estruturado de \n\ntal forma que cada sa\u00edda da matriz AND pode corresponder a qualquer termo produto das \n\nentradas. Da mesma forma, cada sa\u00edda da matriz OR pode ser configurada para produzir a \n\nsoma l\u00f3gica de quaisquer sa\u00eddas do plano AND. A figura 2-5 mostra o esquema de um \n\ndispositivo PLA. Os principais problemas apresentados por esses dispositivos eram o alto \n\ncusto de fabrica\u00e7\u00e3o e o fraco desempenho de velocidade, devido principalmente aos dois \n\nn\u00edveis de l\u00f3gica reconfigur\u00e1vel, pois os planos l\u00f3gicos eram dif\u00edceis de se fabricar e \n\nintroduziam atrasos significantes de propaga\u00e7\u00e3o dos sinais el\u00e9tricos. Para superar essas \n\ndefici\u00eancias foi desenvolvida a tecnologia PAL (Programmable Array Logic). \n\n\n\n 22\n\n \n \n\nFigura 2-5 Circuito simplificado de um PLA \n\n \n\n \n\n2.1.4  PAL (Programmable Array Logic) \n\n \n\n Os PALs foram desenvolvidos pela Monolithic Memories Inc., em 1978. Estes \n\ndispositivos possuem uma matriz de portas l\u00f3gicas AND, program\u00e1vel, seguido por uma \n\nmatriz de portas l\u00f3gicas OR fixas. O fato de estes dispositivos possu\u00edrem a matriz AND \n\nprogram\u00e1vel torna poss\u00edvel que estes tenham um maior n\u00famero de entradas e, juntamente \n\ncom a matriz OR, fixa, o dispositivo tende a ser menor (o que acarreta um custo reduzido) e \n\nmais r\u00e1pido, por\u00e9m com um n\u00famero limitado de termos produto por sa\u00edda (AMD \u2013 \n\nAdvanced Micro Device, June 1993). Os PALs podem ser encontrados em diversas \n\ntecnologias, tais como TTL, CMOS e ECL (Emitter Coupled Logic). Os componentes \n\nCMOS permitem as mesmas fun\u00e7\u00f5es dos TTLs e podem ser utilizados com a mesma \n\n\n\n 23\n\nconfigura\u00e7\u00e3o de pinos, com um menor consumo de pot\u00eancia. Permitem ainda que sejam \n\nreprogramados, pois podem ser configurados com dispositivos EPROM ou EEPROM. Os \n\nPALs TTL s\u00e3o mais r\u00e1pidos e est\u00e3o dispon\u00edveis apenas em tecnologia PROM. J\u00e1, por sua \n\nvez, os componentes ECL, destinam-se a aplica\u00e7\u00f5es de alta velocidade e necessitam de \n\nconsidera\u00e7\u00f5es de projeto completamente diferentes dos dispositivos com tecnologia CMOS \n\ne TTL, n\u00e3o podendo ser substitu\u00eddos por componentes desta tecnologia. Na figura 2-6, tem-\n\nse um exemplo de um dispositivo PAL. \n\n \n\n \n\n \n\nFigura 2-6 Circuito simplificado de um PAL \n\n \n Todos os PLDs, incluindo PLAs, PALs e similares s\u00e3o agrupados na categoria dos \n\nSPLDs (Simple PLDs), como mostrado anteriormente na figura 2-2. Esta categoria tem \n\ncomo principais caracter\u00edsticas o baixo custo e o alto desempenho. No entanto, uma das \n\ndificuldades encontradas seria com rela\u00e7\u00e3o ao aumento da capacidade da arquitetura destes \n\n\n\n 24\n\ndispositivos, uma vez que a estrutura das matrizes l\u00f3gicas program\u00e1veis aumenta muito \n\nrapidamente com o aumento do n\u00famero de entradas. Uma solu\u00e7\u00e3o seria integrar v\u00e1rios \n\nSPLDs em um \u00fanico chip, e prover interconex\u00f5es program\u00e1veis para a conex\u00e3o dos \n\ndiversos PLDs. Com o avan\u00e7o da tecnologia foi poss\u00edvel esta solu\u00e7\u00e3o, surgindo assim os \n\nCPLDs (Complex CPLDs), que ser\u00e3o descritos mais adiante. \n\n \n\n \n\n2.2 Elementos de Programa\u00e7\u00e3o \n\n \n\n A programa\u00e7\u00e3o dos dispositivos PLDs \u00e9 feita atrav\u00e9s de \u201cchaves\u201d que permitem \n\nconectar, ou n\u00e3o, dois pontos das matrizes program\u00e1veis, definindo assim os caminhos de \n\nroteamento de sinais e/ou as fun\u00e7\u00f5es dos blocos l\u00f3gicos configur\u00e1veis. Estes elementos \n\n(chaves) s\u00e3o a base para a constru\u00e7\u00e3o de componentes personaliz\u00e1veis ap\u00f3s o \n\nencapsulamento pois, atrav\u00e9s da sua programa\u00e7\u00e3o, configura-se o PLD para que ele realize \n\ndeterminadas fun\u00e7\u00f5es l\u00f3gicas. \n\n  \n\n Para um bom entendimento do funcionamento e efici\u00eancia dos PLDs \u00e9 importante \n\ntomar conhecimento de duas caracter\u00edsticas que s\u00e3o de grande import\u00e2ncia para a \n\ncompreens\u00e3o das vantagens de certas fam\u00edlias de componentes e sua aplicabilidade; s\u00e3o \n\nelas: \n\n \n\n\u2022 Volatilidade: refere-se \u00e0 depend\u00eancia do componente em manter sua \n\nconfigura\u00e7\u00e3o na aus\u00eancia do sinal de alimenta\u00e7\u00e3o; \n\n\n\n 25\n\n \n\n\u2022 Reprogramabilidade: refere-se \u00e0 possibilidade de reconfigura\u00e7\u00e3o das \n\n\u201cchaves\u201d do componente mesmo ap\u00f3s ele ter sido configurado \n\nanteriormente. \n\n \n\nOs PLDs, dispon\u00edveis comercialmente, apresentam como elementos de programa\u00e7\u00e3o \n\n(chaves) fus\u00edveis (PROM), antifus\u00edveis, c\u00e9lulas SRAM, dispositivos EPROM ou EEPROM. \n\n \n\n \n\n2.2.1 Fus\u00edvel (Fuse) \n\n \n\n O fus\u00edvel [PROM (Programmable Read-Only Memory)] foi o primeiro tipo de \n\ncomutador program\u00e1vel pelo usu\u00e1rio final. S\u00e3o formados por material condutivo de baixo \n\nponto de fus\u00e3o e mant\u00eam conectados dois pontos, a menos que sejam queimados, \n\nprovocando seu rompimento e isolando estes pontos. Esta tecnologia \u00e9 denominada OTP \n\n(One Time Programmable) sendo portanto, program\u00e1vel uma \u00fanica vez. Ocupam uma \n\npequena \u00e1rea da pastilha, suficiente para colocar o material a ser queimado e garantir a \n\nisola\u00e7\u00e3o dos pontos ap\u00f3s a programa\u00e7\u00e3o. Estes elementos s\u00e3o constru\u00eddos com tecnologia \n\nbipolar, que por sua vez, n\u00e3o permite a alta integra\u00e7\u00e3o de transistores, como acorre com a \n\ntecnologia MOS. \n\n  \n\n Os fus\u00edveis foram, por muito tempo, os respons\u00e1veis pela exist\u00eancia dos PLDs da \n\nprimeira gera\u00e7\u00e3o, como os PALs e ainda hoje s\u00e3o utilizados para a fabrica\u00e7\u00e3o de SPLDs \n\n\n\n 26\n\nbipolares. Por\u00e9m, pelo fato de serem n\u00e3o reprogram\u00e1veis, e serem fabricados com \n\ntecnologia bipolar de menor densidade de transistores do que a tecnologia MOS, estes \n\nelementos n\u00e3o acompanham a evolu\u00e7\u00e3o dos componentes program\u00e1veis. \n\n \n\n \n\n2.2.2 Antifus\u00edvel (Antifuse) \n\n \n\n Este tipo de comutador program\u00e1vel, assim como os fus\u00edveis s\u00e3o OTP, sendo \n\nprogram\u00e1vel apenas uma \u00fanica vez, figura 2-7 (Greene, J. , 1993). O antifus\u00edvel (antifuse), \n\n\u00e9 um dispositivo de dois terminais, que quando programados oferecem uma baixa \n\nresist\u00eancia, e quando n\u00e3o, apresentam uma alta imped\u00e2ncia entre seus terminais, \n\ncomportando-se como um circuito aberto. Para a programa\u00e7\u00e3o deste elemento \u00e9 necess\u00e1rio \n\nque uma tens\u00e3o entre 11 e 20 volts seja aplicada ao antifus\u00edvel que \u00e9 ent\u00e3o \u201cqueimado\u201d, \n\ncriando uma conex\u00e3o de baixa imped\u00e2ncia. Al\u00e9m disso, para a programa\u00e7\u00e3o, \u00e9 necess\u00e1ria a \n\npresen\u00e7a de transistores com larga \u00e1rea, a fim de suportar as correntes de programa\u00e7\u00e3o \n\n(~5mA). Uma vantagem dos antifus\u00edveis com rela\u00e7\u00e3o aos fus\u00edveis \u00e9 que eles s\u00e3o fabricados \n\ncom tecnologia MOS, justificando a necessidade de transistores em larga \u00e1rea, como dito \n\nanteriormente. \u00c9 interessante ressaltar que este elemento de programa\u00e7\u00e3o ocupa uma \n\npequena \u00e1rea, a qual \u00e9 um pouco maior do que dois segmentos transversais de fios \n\nmet\u00e1licos. Esta vantagem \u00e9 reduzida pela larga \u00e1rea necess\u00e1ria para os transistores de \n\nprograma\u00e7\u00e3o e pela inclus\u00e3o de transistores de isolamento, que s\u00e3o necess\u00e1rios para a \n\nisola\u00e7\u00e3o dos circuitos de programa\u00e7\u00e3o, j\u00e1 que os mesmos trabalham com tens\u00e3o de at\u00e9 20V. \n\n \n\n\n\n 27\n\n \nFigura 2-7 Foto antifus\u00edvel. (a) Antes da programa\u00e7\u00e3o. (b) Ap\u00f3s programa\u00e7\u00e3o. (c) \n\nVista de cima, um antifus\u00edvel \u00e9 aproximadamente do mesmo tamanho que um contato. \n\n \n\n \n\n2.2.3 C\u00e9lulas SRAM (SRAM Cells) \n\n \n\n Esta tecnologia de programa\u00e7\u00e3o utiliza c\u00e9lulas SRAM (Static Random Access \n\nMemory) que controlam transistores de passagem ou multiplexadores que, por sua vez, \n\nrealizam as conex\u00f5es dos pontos para a configura\u00e7\u00e3o do PLD. Os transistores de passagem \n\npermitem conectar ou isolar dois pontos, de acordo com o dado armazenado na c\u00e9lula \n\nSRAM, enquanto que o uso de multiplexadores permite in\u00fameras combina\u00e7\u00f5es poss\u00edveis \n\nentre os pontos. Os multiplexadores s\u00e3o \u00fateis para selecionar qual sinal ser\u00e1 utilizado como \n\nvari\u00e1vel de entrada, dentre os diversos que chegam a uma c\u00e9lula l\u00f3gica configur\u00e1vel. \n\n \n\n A c\u00e9lula SRAM consiste de dois inversores realimentados sendo assim, um \n\ndispositivo vol\u00e1til, facilmente reconfigur\u00e1vel e que ocupa uma \u00e1rea equivalente a de seis \n\ntransistores MOS, ou seja: cinco transistores de c\u00e9lula SRAM, mais a chave de conex\u00e3o \n\n(transistor de passagem). Devido \u00e0 sua volatilidade, as configura\u00e7\u00f5es das c\u00e9lulas devem ser \n\nrestabelecidas sempre que o dispositivo for religado, necessitando-se portanto de um \n\ndispositivo de mem\u00f3ria externo do tipo PROM, EPROM, EEPROM ou disco magn\u00e9tico. A \n\n\n\n 28\n\ngrande desvantagem desta tecnologia de programa\u00e7\u00e3o \u00e9 a extensa \u00e1rea ocupada no chip. No \n\nentanto, existem duas grandes vantagens: uma \u00e9 a r\u00e1pida reprogramabilidade e a outra \u00e9 que \n\nrequer somente tecnologia padr\u00e3o de processos de circuitos integrados. A figura 2-8 mostra \n\num exemplo da tecnologia de programa\u00e7\u00e3o SRAM. \n\n \n\n \n \n\nFigura 2-8 Tecnologia de programa\u00e7\u00e3o SRAM \n \n\n \n\n2.2.4 EPROM e EEPROM \n\n \n\n Segundo (Sedra, A. S.; Smith, K. C.; 2005), as EPROMs (Erasable Programmable \n\nRead-Only Memory) utilizam variantes de c\u00e9lula de mem\u00f3ria cuja se\u00e7\u00e3o transversal est\u00e1 \n\nmostrada na figura 2-9. A c\u00e9lula \u00e9 basicamente um MOSFET canal n com duas portas feitas \n\nde sil\u00edcio policristalino. Uma das portas n\u00e3o \u00e9 eletricamente conectada a nenhuma outra \n\n\n\n 29\n\nparte do circuito; em vez disso, \u00e9 deixada flutuante e \u00e9 apropriadamente chamada de porta \n\nflutuante. A outra porta, chamada de porta de sele\u00e7\u00e3o, funciona do mesmo modo que a \n\nporta de um MOSFET tipo enriquecimento normal. \n\n \n\nO transistor MOS da figura 2-9 (a) \u00e9 conhecido como transistor de porta flutuante \n\ne \u00e9 representado pelo s\u00edmbolo de circuito mostrado na figura 2-9 (b). Nesse s\u00edmbolo, a linha \n\ntracejada representa a porta flutuante. A c\u00e9lula de mem\u00f3ria \u00e9 conhecida como c\u00e9lula de \n\nportas empilhadas. \n\n \n\n \n\nFigura 2-9 (a) Se\u00e7\u00e3o de corte e (b) S\u00edmbolo do circuito do transistor de porta flutuante \nusado como c\u00e9lula \n\n \n\nAntes de a c\u00e9lula ser programada, n\u00e3o h\u00e1 cargas na porta flutuante e o dispositivo \n\nfunciona como um MOSFET canal n enriquecimento normal. Portanto, ele exibe a \n\ncaracter\u00edstica iD \u2013 vGS, mostrada como curva (a) na figura 2-10. \n\n \n\nObserve que, nesse caso, a tens\u00e3o de limiar (Vt) \u00e9 muito baixa. Esse estado do \n\ntransistor \u00e9 conhecido como estado n\u00e3o programado. Esse \u00e9 um dos dois estados em que \n\n\n\n 30\n\no transistor de porta flutuante pode-se encontrar. Tomar-se \u00e1 o estado n\u00e3o\u2013programado para \n\nrepresentar um \u201c1\u201d armazenado. Isto \u00e9, o transistor de porta flutuante cuja caracter\u00edstica iD \n\n\u2013 vGS est\u00e1 mostrada como a curva (a) na figura 2-10 \u00e9 dito estar armazenando um \u201c1\u201d. \n\n \n\nPara programar o transistor de porta flutuante, \u00e9 aplicada uma tens\u00e3o elevada (cerca \n\nde 16 a 20V) entre o dreno e a fonte. Ao mesmo tempo, \u00e9 aplicada uma tens\u00e3o elevada \n\n(cerca de 25V) em sua porta de sele\u00e7\u00e3o. A figura 2-11 mostra um MOSFET de porta \n\nflutuante durante a programa\u00e7\u00e3o. Na aus\u00eancia de cargas na porta flutuante, o dispositivo se \n\nencontra como um MOSFET de canal n tipo enriquecimento normal. Uma camada de \n\ninvers\u00e3o tipo n (canal) \u00e9 criada na superf\u00edcie da l\u00e2mina como resultado da tens\u00e3o positiva \n\nelevada aplicada \u00e0 porta de sele\u00e7\u00e3o. Devido \u00e0 aplica\u00e7\u00e3o da tens\u00e3o positiva elevada no \n\ndreno, o canal adquire uma forma afunilada. \n\n \n\n \n\nFigura 2-10 Ilustra\u00e7\u00e3o do deslocamento na caracter\u00edstica iD \u2013 vGS de um transistor de \nporta flutuante como resultado da programa\u00e7\u00e3o \n\n \n\n\n\n 31\n\nA tens\u00e3o dreno-fonte acelera os el\u00e9trons atrav\u00e9s do canal. Quando esses el\u00e9trons \n\nalcan\u00e7am o dreno no final do canal, eles adquirem energia cin\u00e9tica suficientemente alta e \n\ns\u00e3o chamados de el\u00e9trons quentes. A tens\u00e3o positiva elevada na porta de sele\u00e7\u00e3o (maior do \n\nque a tens\u00e3o de dreno) estabelece um campo el\u00e9trico no \u00f3xido isolante. Esse campo el\u00e9trico \n\natrai os el\u00e9trons quentes e os acelera em dire\u00e7\u00e3o \u00e0 porta flutuante. Desse modo, a porta \n\nflutuante fica carregada e a carga nela acumulada fica aprisionada. \n\n \n\nFelizmente, esse processo de carregamento da porta flutuante \u00e9 autolimitante. A \n\ncarga negativa que se acumula na porta flutuante reduz a intensidade do campo el\u00e9trico no \n\n\u00f3xido at\u00e9 o ponto em que, eventualmente, ele se torna incapaz de continuar acelerando os \n\nel\u00e9trons quentes. \n\n \n\nA carga negativa aprisionada na porta flutuante far\u00e1 com que os el\u00e9trons sejam \n\nrepelidos da superf\u00edcie do substrato. Isso significa que, para formar o canal, a tens\u00e3o \n\npositiva que \u00e9 aplicada \u00e0 porta de sele\u00e7\u00e3o ser\u00e1 maior do que aquela necess\u00e1ria quando a \n\nporta flutuante n\u00e3o est\u00e1 com carga. Em outras palavras, a tens\u00e3o de limiar Vt do transistor \n\nprogramado ser\u00e1 maior do que a do transistor n\u00e3o-programado. Na realidade, a \n\nprograma\u00e7\u00e3o faz com que a caracter\u00edstica iD \u2013 vGS se desloque para o ponto denominado (b) \n\nna figura 2-11. \n\n \n\n\n\n 32\n\n            \n\nFigura 2-11 O transistor de porta flutuante durante a programa\u00e7\u00e3o \n \n\nNesse estado, conhecido como estado programado, a c\u00e9lula \u00e9 dita estar \n\narmazenando um 0. \n\n \n\nUma vez programado, o dispositivo de porta flutuante ret\u00e9m esse deslocamento na \n\ncaracter\u00edstica i \u2013 v (curva b), mesmo quando a fonte de alimenta\u00e7\u00e3o \u00e9 desligada. De fato, \n\nresultados experimentais indicam que o dispositivo pode permanecer no estado programado \n\npor um tempo muito longo. \n\n \n\nA leitura do conte\u00fado da c\u00e9lula empilhada \u00e9 f\u00e1cil: uma tens\u00e3o VGS, entre os valores \n\ndas tens\u00f5es de limiar baixa e alta (figura 2-10), \u00e9 aplicada \u00e0 porta de sele\u00e7\u00e3o. Enquanto um \n\ndispositivo programado n\u00e3o conduz, um dispositivo n\u00e3o-programado conduzir\u00e1 \n\nplenamente. \n\n \n\nPara retornar o MOSFET de porta flutuante para seu estado n\u00e3o-programado, a \n\ncarga armazenada na porta flutuante deve retornar ao substrato. Esse processo de \n\n\n\n 33\n\napagamento pode ser conseguido iluminando-se a c\u00e9lula com uma luz ultravioleta de \n\ncomprimento de onda correto (253,7 nm) por um tempo determinado. A luz ultravioleta \n\nfornece energia suficiente aos el\u00e9trons aprisionados, permitindo que esses el\u00e9trons ven\u00e7am \n\na barreira de energia existente e passem atrav\u00e9s do \u00f3xido, voltando ao substrato. Para \n\npermitir esse processo de apagamento, a EPROM tem uma janela de quartzo em seu \n\nencapsulamento. Finalmente, deve ser observado que o dispositivo \u00e9 extremamente dur\u00e1vel \n\ne pode ser apagado e programado v\u00e1rias vezes. \n\n \n\nUma ROM program\u00e1vel mais vers\u00e1til \u00e9 a PROM apag\u00e1vel eletricamente \n\n(electrically - erasable PROM - EEPROM). Como o pr\u00f3prio nome sugere, uma EEPROM \n\npode ser eletricamente apagada e programada sem a necessidade de ilumina\u00e7\u00e3o ultravioleta. \n\nAs EEPROMs utilizam uma variante do MOSFET com porta flutuante. \n\n \n\n A tabela 2-1 resume as caracter\u00edsticas mais importantes dos elementos de \n\nprograma\u00e7\u00e3o. \n\n \n\nTabela 2-1 Tecnologias de programa\u00e7\u00e3o \n \n\n LEMENTOS   VOLATIL REPROGRAM\u00c1VEL TECNOLOGIA \n      Fus\u00edvel        N\u00e3o               N\u00e3o        Bipolar \n  Anti-Fus\u00edvel        N\u00e3o               N\u00e3o        CMOS+ \n      SRAM        Sim               Sim        CMOS \n     EPROM        N\u00e3o               Sim      UVCMOS \n    EEPROM        N\u00e3o               Sim      EECMOS \n\n \n\n \n\n                                                                                                                                                                                \n\n\n\n 34\n\n2.3  CPLDs (Complex PLDs) \n\n \n\n Os CPLDs consistem de m\u00faltiplos blocos l\u00f3gicos, que se assemelham aos SPLDs \n\n(especialmente as PALs). Entretanto, os CPLDs s\u00e3o muito mais sofisticados, em rela\u00e7\u00e3o \u00e0 \n\nestrutura interna , dos que os SPLDs. Estes dispositivos foram introduzidos no mercado \n\npela Altera Corp. e, inicialmente, esta fam\u00edlia de chips foi chamada de EPLDs (Erasable \n\nPLDs), e ent\u00e3o seguida de tr\u00eas s\u00e9ries adicionais de dispositivos, chamadas MAX5000, \n\nMAX7000 e MAX9000. O princ\u00edpio de funcionamento dos primeiros CPLDs tem origem \n\nnos PALs, a \u00fanica diferen\u00e7a \u00e9 que enquanto no PAL existe apenas uma matriz AND \n\nprogram\u00e1vel, no CPLD existem v\u00e1rios sub-circuitos, com arquitetura e capacidade \n\nsemelhante a um PAL, interconectados por uma matriz program\u00e1vel de interconex\u00e3o \n\nglobal. A estes sub-circuitos d\u00e1-se o nome de Logic Array Blocks (LABs). Cada LAB \n\ncont\u00e9m de 4 a 16 macroc\u00e9lulas (dependendo da sua arquitetura), blocos de I/O e um \n\ncircuito de expans\u00e3o de termos produtos. Cada macroc\u00e9lula \u00e9 formada por uma matriz \n\nAND conectada a uma matriz OR, para a implementa\u00e7\u00e3o de soma de produtos, mais flip-\n\nflops que, em alguns casos, s\u00e3o respons\u00e1veis pela realimenta\u00e7\u00e3o de sinais na matriz AND. \n\n \n\nOs blocos de I/O funcionam independentes da macroc\u00e9lula devido ao uso de uma \n\nc\u00e9lula tri-state entre o bloco de I/O e a macroc\u00e9lula. O circuito de expans\u00e3o de termos \n\nproduto corresponde a uma matriz extra de portas l\u00f3gicas AND, que pode ser usado para \n\nsuprir a falta de termos produto na matriz da macroc\u00e9lula ou para a implementa\u00e7\u00e3o de flip-\n\nflops, para a armazenagem de dados. Como dito anteriormente, os LABs s\u00e3o interligados \n\natrav\u00e9s de uma matriz de interconex\u00e3o program\u00e1vel (PIA \u2013 Programmable Interconnection \n\n\n\n 35\n\nArray), formados por dispositivos EPROM ou EEPROM e trilha de metal fixas. Esta matriz \n\nde interconex\u00e3o \u00e9 respons\u00e1vel pela alta capacidade de integra\u00e7\u00e3o permitida pelos CPLDs. \n\n \n\n Segundo (Pedrino C. E.; 2003), algumas caracter\u00edsticas na arquitetura diferenciam \n\nos CPLDs tais como o n\u00famero de termos produto por macroc\u00e9lula, se estes podem ser \n\nemprestados para outras macroc\u00e9lulas e se a matriz program\u00e1vel pode ser totalmente ou \n\nparcialmente conectada.  Se o n\u00famero de termos produto exceder a capacidade de uma \n\nmacroc\u00e9lula, termos adicionais de outras macroc\u00e9lulas s\u00e3o emprestados, no entanto, isto \n\npode aumentar o atraso interno de propaga\u00e7\u00e3o. \n\n \n\n \n \n\nFigura 2-12 Estrutura de um CPLD \n\n \n\n \n\n\n\n 36\n\n2.3.1 CPLDs da Altera \n\n \n\nComo dito anteriormente, a Altera desenvolveu tr\u00eas fam\u00edlias de chips que se \n\nencaixam dentro da categoria dos CPLDs: MAX5000, MAX7000 e MAX9000. A \n\narquitetura escolhida para o desenvolvimento deste trabalho foi a MAX7000, por ser uma \n\ndas mais popularizadas e possuir caracter\u00edsticas similares \u00e0s outras arquiteturas de CPLDs. \n\n \n\nA arquitetura geral da s\u00e9rie MAX7000 da altera est\u00e1 ilustrada na figura 2-12. Ela \n\ninclui os seguintes elementos: um arranjo de blocos l\u00f3gicos (LABs \u2013 Logic Array Blocks), \n\nmacroc\u00e9lulas, expansor de termos produtos, blocos de entrada e sa\u00edda (I/Os) e de uma \n\nmatriz de interconex\u00e3o program\u00e1vel (PIA \u2013 Programmable Interconnect Array). O PIA \u00e9 \n\ncapaz de conectar qualquer entrada e sa\u00edda de um LAB a qualquer outro LAB. Tamb\u00e9m, as \n\nentradas e sa\u00eddas (I/Os) do chip s\u00e3o conectadas diretamente ao PIA e aos LABs. \n\n \n\nUm LAB pode ser imaginado como sendo uma estrutura complexa similar a um \n\nSPLD, sendo assim, todo o chip pode ser considerado com sendo um arranjo de SPLDs. Os \n\ndispositivos da s\u00e9rie MAX7000 est\u00e3o dispon\u00edveis nas tecnologias EPROM e EEPROM. \n\nAt\u00e9 recentemente, os dispositivos com tecnologia EEPROM podiam ser programados \n\napenas fora do circuito, em um programador especial. Em 1996, a Altera lan\u00e7ou a s\u00e9rie \n\n7000S, a qual permite a reprograma\u00e7\u00e3o no pr\u00f3prio circuito. A estrutura de um LAB pode \n\nser vista na figura 2-13. \n\n \n\n\n\n 37\n\n \n \n\nFigura 2-13 Arquitetura de um LAB \n \n\n Cada LAB consiste de dois conjuntos de oito macroc\u00e9lulas (figura 2-13), onde cada \n\nmacroc\u00e9lula compreende um conjunto de termos produto program\u00e1veis que alimentam uma \n\nporta OR e um flip-flop. Os flip-flops podem ser configurados como tipo D, JK, T SR ou \n\npodem ser transparentes. Como ilustrado na figura 2-14, o n\u00famero de entradas para a porta \n\nOR, em uma macroc\u00e9lula, \u00e9 vari\u00e1vel. A porta OR pode ser alimentada por quaisquer ou por \n\ntodos os termos produto dentro da macroc\u00e9lula, e ainda pode ter at\u00e9 15 termos produto \n\nextras de outras macroc\u00e9lulas dentro do mesmo LAB. Esta flexibilidade de termos produto \n\npermite que essa s\u00e9rie de dispositivos tenha uma maior efici\u00eancia em termos de \u00e1rea de \n\nchip, uma vez que as fun\u00e7\u00f5es l\u00f3gicas n\u00e3o necessitam de mais do que cinco termos produto, \n\ne a arquitetura suporta fun\u00e7\u00f5es mais complexas quando necess\u00e1rio. \n\n \n\n\n\n 38\n\n Al\u00e9m da Altera, v\u00e1rios outros fabricantes produzem dispositivos que podem ser \n\ncategorizados como CPLDs. Por exemplo, AMD (Mach Family), Lattice (s\u00e9rie pLSI e \n\nispLSI), Xilinx (XC7000) e ICT (PEEL array) (Brown, S.; Rose, J; 1996). \n\n \n\n \n\nFigura 2-14 Macroc\u00e9lula MAX7000 \n \n\n \n\n2.3.2 A Tecnologia FPGA \n\n \n\n Os FPGAs (Field Programmable Gate Array) e, os CPLDs (Complex \n\nProgrammable Logic Device) s\u00e3o circuitos integrados que podem ser configurados via \n\nsoftware para implementar circuitos digitais, como processadores, controladores e \n\ndecodificadores. Basicamente, um FPGA consiste em uma matriz de tr\u00eas tipos de elementos \n\nprogram\u00e1veis. O primeiro consiste de v\u00e1rios circuitos id\u00eanticos, compostos por alguns flip-\n\nflops e l\u00f3gica combinacional extra, sendo conhecidos por CLBs (Configuration Logic \n\n\n\n 39\n\nBlocks), e que formam um arranjo bi-dimensional. \u00c9 com o aux\u00edlio dos CLBs que se projeta \n\na l\u00f3gica seq\u00fcencial da m\u00e1quina a ser implementada. O segundo consiste de circuitos de \n\ninterfaceamento das sa\u00eddas dos CLBs com o exterior do FPGA, chamados de IOBs (Input \n\nOutput Blocks). Estes IOBs s\u00e3o constitu\u00eddos por buffers bidirecionais com sa\u00edda em alta \n\nimped\u00e2ncia. Atrav\u00e9s de uma programa\u00e7\u00e3o adequada de um IOB, configura-se um pino do \n\nFPGA para funcionar como entrada ou sa\u00edda. O terceiro grupo \u00e9 composto pelas \n\ninterconex\u00f5es (chaves) entre os CLBs e os IOBs. Estas chaves de interconex\u00e3o s\u00e3o \n\norganizadas como canais de roteamento horizontal e vertical entre as linhas e colunas dos \n\nCLBs e IOBs. O processo de escolha das interconex\u00f5es \u00e9 chamado de roteamento. \n\n \n\n Os FPGAs dispon\u00edveis comercialmente podem ser divididos em dois grupos, \n\nsegundo as tecnologias de programa\u00e7\u00e3o mais comumente utilizadas para se implementar os \n\ncomutadores program\u00e1veis, s\u00e3o elas: FPGA com c\u00e9lulas SRAM e FPGA com Antifuse. \n\n \n\n Quanto \u00e0 arquitetura, os blocos l\u00f3gicos dos FPGAs podem ser classificados em \n\nblocos de granulosidade grossa e blocos de granulosidade fina. A granulosidade pode ser \n\ndefinida de diversas formas com por exemplo: n\u00famero de fun\u00e7\u00f5es booleanas \n\nimplement\u00e1veis por blocos l\u00f3gicos, n\u00famero equivalente de portas NAND ou XOR de duas \n\nentradas, n\u00famero total de transistores, \u00e1rea total normalizada, n\u00famero de entradas e sa\u00eddas. \n\nSendo assim, a granulosidade grossa \u00e9 designada aos blocos l\u00f3gicos maiores e mais \n\ncomplexos enquanto que a granulosidade fina aos blocos l\u00f3gicos menores e mais simples. \n\n \n\n \n\n \n\n\n\n 40\n\nBlocos de Granulosidade Grossa \n\n \n\n Geralmente, estes blocos s\u00e3o formados por um ou mais flip-flops e duas ou mais \n\nlook-up tables (LUTs). Uma look-up table \u00e9 um tipo de bloco l\u00f3gico que cont\u00e9m c\u00e9lulas de \n\narmazenamento que s\u00e3o utilizadas para implementar pequenas fun\u00e7\u00f5es l\u00f3gicas. Essas \n\nc\u00e9lulas de armazenamento podem ser vistas como uma mem\u00f3ria SRAM sendo assim, a \n\ntabela verdade para uma fun\u00e7\u00e3o l\u00f3gica de K-entradas \u00e9 armazenada em uma SRAM 2K x 1. \n\nAs linhas de endere\u00e7o da SRAM funcionam como entradas e, a sa\u00edda fornece o valor da \n\nfun\u00e7\u00e3o l\u00f3gica. A vantagem das look-up tables \u00e9 sua grande funcionalidade. Uma LUT pode \n\nimplementar qualquer fun\u00e7\u00e3o de K entradas, sendo assim, v\u00e3o existir 2n fun\u00e7\u00f5es, onde \n\nn=2K. A desvantagem \u00e9 que um n\u00famero maior do que 5 entradas acarretariam em um \n\ntamanho inaceit\u00e1vel da LUT. Enquanto o n\u00famero de fun\u00e7\u00f5es implement\u00e1veis cresce, estas \n\nfun\u00e7\u00f5es adicionais s\u00e3o raramente utilizadas em projetos, e s\u00e3o muito dif\u00edceis de serem \n\nexploradas por ferramentas de s\u00edntese de l\u00f3gica. Desta forma, uma LUT grande \u00e9 sub \n\nutilizada. \n\n \n\n A granulosidade pode acarretar efeitos na performance e na densidade dos blocos \n\nl\u00f3gicos. Um estudo realizado mostrou que para otimizar a \u00e1rea do FPGA, o bloco l\u00f3gico \n\ndeve possuir cerca de 4 entradas (K=4) e, com rela\u00e7\u00e3o \u00e0 performance, uma LUT de 5 \n\nentradas apresenta um melhor desempenho. \n\n \n\n \n\n \n\n \n\n\n\n 41\n\nBlocos de Granulosidade Fina \n\n \n\n Os blocos l\u00f3gicos de granulosidade fina s\u00e3o mais simples do que os de \n\ngranulosidade grossa. Geralmente s\u00e3o formados por portas l\u00f3gicas b\u00e1sicas ou \n\nmultiplexadores de quatro entradas e um flip-flop. O melhor exemplo para um bloco l\u00f3gico \n\nde granulosidade fina seria um bloco contendo alguns transistores interconect\u00e1veis ou \n\nportas l\u00f3gicas b\u00e1sicas. A principal vantagem de se utilizar blocos de granulosidade fina \u00e9 \n\nque os blocos s\u00e3o totalmente utilizados. A desvantagem desta arquitetura \u00e9 que ela \n\nnecessita de muitos segmentos de liga\u00e7\u00e3o e chaves program\u00e1veis para as interconex\u00f5es e, \n\nnestes casos, ser\u00e1 preciso mais c\u00e9lulas l\u00f3gicas para se implementar uma fun\u00e7\u00e3o que seria \n\nimplementada com menos c\u00e9lulas em uma arquitetura de granulosidade grossa. Isto \n\ntamb\u00e9m sobrecarrega o roteador, tornando-o lento e ocupando uma grande \u00e1rea no chip. \n\nCom isso, a tecnologia antifuse \u00e9 a mais indicada para a fabrica\u00e7\u00e3o deste tipo de FPGA, \n\ndevido ao tamanho reduzido dos comutadores antifuse. Portanto, os FPGAs de \n\ngranulosidade fina apresentam uma menor densidade do que os blocos l\u00f3gicos de \n\ngranulosidade grossa. \n\n \n\n \n\n2.3.3 Arquiteturas das FPGAs \n\n \n\n Existem v\u00e1rias ind\u00fastrias, no ramo de semicondutores, que est\u00e3o desenvolvendo \n\ndispositivos FPGAs. Atualmente h\u00e1 uma grande variedade desses dispositivos dispon\u00edveis \n\ncomercialmente, como pode ser visto na tabela 2-2. \n\n\n\n 42\n\nTabela 2-2 Compara\u00e7\u00e3o de FPGAs com rela\u00e7\u00e3o \u00e0 capacidade, arquitetura, c\u00e9lula \nb\u00e1sica e m\u00e9todos de programa\u00e7\u00e3o. \n\n \n    Fabricante \n \n\n   Capacidade    Arquitetura  C\u00e9lula B\u00e1sica     M\u00e9todo de  \n  Programa\u00e7\u00e3o \n\n       Actel   2.000 - 8.000    Gate Array         MUX       Antifuse \n    Concurrent   3.000 - 5.000        Matriz    XOR, AND        SRAM \n    Crosspoint               5.000    Gate Array    Transistores       Antifuse \n       Plessey  2.000 - 40.000  Mar-de-portas         NAND        SRAM \n    QuickLogic   1.200 - 1.800        Matriz         MUX       Antifuse \n        Xilinx  2.000 - 10.000        Matriz         RAM        SRAM \n \n\n De acordo com a tabela acima, v\u00ea-se que os FPGAs possuem arquiteturas que \n\npermitem uma classifica\u00e7\u00e3o \u00e0 parte. Sendo assim, esses dispositivos podem ser \n\nclassificados em: arranjo sim\u00e9trico, arranjo em linhas, mar de portas l\u00f3gicas e PLD \n\nhier\u00e1rquico. A figura 2-15 exemplifica cada classe de arquitetura. \n\n  \n\n \n \n\nFigura 2-15 Arquiteturas de FPGAs \n\n\n\n 43\n\n2.3.4 Arquitetura Cyclone \n\n \n\nUma das fam\u00edlias de FPGAs de mais baixo custo e que possui uma alta densidade \n\ndesenvolvida pela Altera \u00e9 a fam\u00edlia de FPGAs Cyclone. Al\u00e9m de possuir uma alta \n\ndensidade essa fam\u00edlia se destaca por possuir um custo mais baixo do que as outras fam\u00edlias \n\nde altas densidades.(ALTERA, Cyclone Device Handbook, 2003) A seguir ser\u00e1 feita uma \n\nbreve descri\u00e7\u00e3o sobre a arquitetura desta fam\u00edlia pois, esta foi utilizada no projeto proposto \n\nnesse trabalho. \n\n \n\nPrimeiramente ser\u00e1 feita uma descri\u00e7\u00e3o funcional sobre esse dispositivo. \n\nEsta fam\u00edlia possui um arranjo sim\u00e9trico bidimensional - linhas x colunas. Este tipo \n\nde arquitetura \u00e9 baseada em c\u00e9lulas de armazenamento do tipo SRAM, fabricada com \n\ninterconex\u00f5es internas em cobre, o que aumenta muito a velocidade de opera\u00e7\u00e3o. A \n\narquitetura em quest\u00e3o \u00e9 similar \u00e0 da fam\u00edlia Stratix, com algumas modifica\u00e7\u00f5es para \n\nreduzir o custo do componente (maior objetivo). A arquitetura Cyclone \u00e9 baseada em LABs \n\ne, cada LAB (Logic Array Blocks) cont\u00e9m 10 LEs (Logic Elements). As linhas e colunas \n\ns\u00e3o interconectadas com velocidade variadas, fornecendo interconex\u00f5es eficientes entre \n\nLABs e LEs. As caracter\u00edsticas das arquiteturas da fam\u00edlia Cyclone podem ser observadas \n\nna tabela 2-3. \n\n \n\n \n\n \n\n \n\n\n\n 44\n\nTabela 2-3 Caracter\u00edsticas das arquiteturas da fam\u00edlia Cyclone \n\nCARACTER\u00cdSTICAS EP1C3 EP1C4 EP1C6 EP1C12 EP1C20 \n\nLEs 2.910 4.000 5.980 12.060 20.060 \n\nRAM M4K (128x36 bits) 13 17 20 52 64 \n\nTotal bits (RAM) 59.904 78.336 92.160 239.616 294.912 \n\nPLLs 1 2 2 2 2 \n\nPinos I/O 104 301 185 249 301 \n\n \n\nOs blocos de mem\u00f3rias M4K RAM s\u00e3o agrupados nas colunas, entre alguns LABs. \n\nOs pinos de I/O suportam diferentes padr\u00f5es como o padr\u00e3o PCI (Personal Computer \n\nInterface) e o padr\u00e3o para interface de mem\u00f3ria externa DDR (Double Data Rating). Essas \n\narquiteturas suportam como  modo de configura\u00e7\u00e3o os modos Passive Serial, JTAG e \n\nActive Serial. A figura 2-16 apresenta o diagrama em blocos da arquitetura Cyclone \n\nEP1C12. \n\n \n\n\n\n 45\n\n \n\nFigura 2-16 Diagrama em blocos da arquitetura Cyclone EP1C12 \n\n \n\nO n\u00famero de M4K RAM , PLLs (Phase-Locked Loops), colunas e linhas (de LABs) \n\nvariam entre os dispositivos Cyclone. O dispositivo EP1C6, utilizado no projeto, possui 20 \n\nblocos de RAM, 32 colunas de LABs e 20 linhas de LABs. A tabela 2-4 mostra os recursos \n\ndos dispositivos desta fam\u00edlia. \n\n \n\nTabela 2-4 Recursos dos dispositivos da fam\u00edlia Cyclone \n\n \n\n\n\n 46\n\nCada LAB (Logic Array Block) consiste de 10 LEs (Logic Element), LE carry, \n\ninterconex\u00f5es locais, LUT e registradores. A estrutura interna de um LAB da Cyclone pode \n\nser vista na figura abaixo. \n\n \n\n          \n\nFigura 2-17 Estrutura de um LAB da Cyclone \n\n \n\nAs interconex\u00f5es locais fazem a interconex\u00e3o dos LEs dentro de um LAB j\u00e1, as \n\ninterconex\u00f5es diretas minimizam o uso de linhas e colunas, permitindo uma maior \n\nperformance e flexibilidade. Cada LE est\u00e1 diretamente conectado a outros 30 LEs atrav\u00e9s \n\nde uma conex\u00e3o direta. \n\n \n\nUm LE \u00e9 a menor unidade l\u00f3gica da arquitetura Cyclone, cada LE cont\u00e9m uma LUT \n\n(Look Up Table) de quatro entradas, um registrador program\u00e1vel e um carry. Cada LE \n\n\n\n 47\n\npossui os seguintes tipos de interconex\u00e3o: local, linha, coluna, registrador program\u00e1vel e \n\nlink direto. \n\n \n\n Todo o sistema de desenvolvimento para os componentes desta fam\u00edlia \u00e9 gratuito, \n\npodendo ser \u201cbaixado\u201d da Internet e utilizado sem nenhum custo. A ferramenta utilizada \n\nneste projeto \u00e9 o Quartus II.vers\u00e3o 5.1. \n\n \n\n A Cyclone possui o menor pre\u00e7o do mercado para as densidades dispon\u00edveis. Seu \n\ndesempenho chega a ser 75% mais r\u00e1pido do que produtos de baixo custo similares \n\ndispon\u00edveis no mercado. \n\n \n\n \n\n2.3.5 Aplica\u00e7\u00f5es de FPGAs \n\n \n\n Os FPGAs t\u00eam conquistado uma grande aceita\u00e7\u00e3o e um grande desenvolvimento \n\nnesses \u00faltimos anos devido \u00e0 sua grande aplica\u00e7\u00e3o em diversas \u00e1reas. Dentre essas \n\naplica\u00e7\u00f5es pode-se citar a integra\u00e7\u00e3o de m\u00faltiplos SPLDs, controladores de dispositivos, \n\nprototipa\u00e7\u00e3o de projetos, processamento de sinais (DSP), processamento de imagens, \n\nprocessamento de v\u00eddeo em tempo real, sistemas de comunica\u00e7\u00e3o, entre outros [Vass\u00e1nyi, \n\n(1997); Thomas et al. (1999); Chan &amp; Mourad (1994); Brown &amp; Rose (1996); Hauck \n\n(1998)]. \n\n \n\n \n\n\n\n 48\n\nCap\u00edtulo 3 \n\n \n\n \n\n3 Capta\u00e7\u00e3o, Digitaliza\u00e7\u00e3o e Exibi\u00e7\u00e3o de Imagens \n\nMonocrom\u00e1ticas \n\n \n\n3.1 Considera\u00e7\u00f5es Iniciais \n\n \n\n Neste cap\u00edtulo ser\u00e1 apresentado o funcionamento de um sistema capaz de realizar a \n\naquisi\u00e7\u00e3o, digitaliza\u00e7\u00e3o e exibi\u00e7\u00e3o de imagens monocrom\u00e1ticas. As imagens ser\u00e3o obtidas \n\natrav\u00e9s de uma c\u00e2mera monocrom\u00e1tica CCD (Charge-Coupled Device). O sistema contar\u00e1 \n\nainda com mem\u00f3rias, respons\u00e1veis pela etapa de armazenamento das informa\u00e7\u00f5es \n\ndigitalizadas do sinal de v\u00eddeo, e um CPLD, que ser\u00e1 respons\u00e1vel pelo controle de todo o \n\nsistema. \n\n \n\n \n\n3.1.1 O Sinal de V\u00eddeo Composto \n\n \n\n Inicialmente \u00e9 importante o entendimento do sinal de v\u00eddeo composto, gerado pela \n\nc\u00e2mera CCD, uma vez que o mesmo apresenta v\u00e1rias caracter\u00edsticas que ser\u00e3o de extrema \n\nimport\u00e2ncia para o sistema a ser implementado. \n\n\n\n 49\n\n A adi\u00e7\u00e3o, ao sinal de v\u00eddeo, dos impulsos de extin\u00e7\u00e3o horizontal e vertical, dos \n\nimpulsos de sincronismo vertical e dos dois trens de impulsos de equaliza\u00e7\u00e3o, produz o \n\nsinal de v\u00eddeo composto (Schure, A.; 1958). O sinal de v\u00eddeo utilizado neste trabalho segue \n\nas especifica\u00e7\u00f5es do padr\u00e3o convencional NTSC (National Television Systems Committee). \n\nEste padr\u00e3o foi definido por uma associa\u00e7\u00e3o entre um comit\u00ea, emissoras de TV e \n\nfabricantes de receptores, nos EUA, no in\u00edcio dos anos 50, originalmente especificando \n\nimagens em n\u00edveis de cinza, que deveriam ser transmitidas analogicamente de um ponto a \n\noutro.  O espectro de altas freq\u00fc\u00eancias VHF havia sido dividido em 13 canais, em 1945, \n\npelo US Federal Communications Commission, determinando com isso um tamanho \n\nm\u00e1ximo de banda para cada um. Sendo assim, tiveram de ser criadas especifica\u00e7\u00f5es que \n\nfizessem com que a quantidade de informa\u00e7\u00e3o transmitida coubesse no espa\u00e7o destinado a \n\ncada canal. \n\n \n\n Com isso, foi estabelecido que a freq\u00fc\u00eancia de troca de quadros (freq\u00fc\u00eancia de \n\nvarredura vertical) na imagem seria de 60 campos por segundo (30 quadros por segundo), \n\nigual aos 60Hz (ciclos/seg.) utilizados na corrente el\u00e9trica nos EUA, a quantidade de linhas \n\nseria de 525 linhas por quadro, ou seja 262,5 linhas por campo, mostradas alternadamente a \n\ncada 1/60seg, pois a largura de banda dispon\u00edvel n\u00e3o era suficiente para transmitir uma \n\nimagem completa, com todas as linhas 60 vezes por segundo \u2013 conceito esse denominado \n\nde varredura entrela\u00e7ada (2:1). Tendo-se a freq\u00fc\u00eancia de varredura vertical (fv), a \n\nfreq\u00fc\u00eancia de varredura horizontal (fh) pode ser obtida multiplicando-se o n\u00famero de linhas \n\npor quadro pela freq\u00fc\u00eancia de quadros por segundo: 525x30=15,75 KHz. Ou seja, para \n\nvarrer cada linha horizontal s\u00e3o necess\u00e1rios 63,5?s. A unidade de tempo necess\u00e1ria para \n\n\n\n 50\n\nvarrer uma linha horizontal, incluindo o retorno, \u00e9 universalmente denominada por \u201cH\u201d. A \n\nfigura 3-1 ilustra o processo de varredura entrela\u00e7ada onde as linhas s\u00f3lidas correspondem \n\nao campo \u00edmpar e as tracejadas ao campo par. \n\n \n\n \nFigura 3-1 Processo de varredura entrela\u00e7ada. De A a B tem-se o tra\u00e7o horizontal. De \n\nB a C tem-se o retra\u00e7o horizontal. De D a E e de F a A tem-se o retra\u00e7o vertical, \nenquanto que o tra\u00e7o vertical corresponde \u00e0 a\u00e7\u00e3o de deslocamento do feixe de baixo \n\npara cima. \n\n \n\n De acordo com a figura acima, o processo de varredura entrela\u00e7ada pode ser \n\nentendido da seguinte maneira: o processo de deflex\u00e3o dirige o feixe eletr\u00f4nico sobre a \n\nsuperf\u00edcie a ser varrida da esquerda para a direita. Essa trajet\u00f3ria \u00e9 chamada de desenho de \n\nvarredura ao longo da superf\u00edcie. Para que o deslocamento do feixe eletr\u00f4nico ocorra deve-\n\nse aplicar \u00e0 bobina defletora horizontal do cinesc\u00f3pio uma tens\u00e3o dente de serra adequada. \n\nAo mesmo tempo, o mesmo processo deve ocorrer \u00e0 bobina de deflex\u00e3o vertical, para que o \n\nfeixe possa mover-se de cima para baixo. \n\n \n\n\n\n 51\n\n Para a varredura do primeiro campo, o feixe eletr\u00f4nico de varredura da c\u00e2mera \n\ncome\u00e7a a mover-se ao longo da tela. Devido \u00e0 disposi\u00e7\u00e3o dos sistemas vertical e horizontal \n\nde deflex\u00e3o e \u00e0s tens\u00f5es aplicadas, a posi\u00e7\u00e3o inicial do feixe \u00e9 apontada para a margem \n\nesquerda da faixa de informa\u00e7\u00e3o de imagem. A primeira faixa corresponde \u00e0 linha 1 da \n\nsuperf\u00edcie a ser varrida. Gra\u00e7as \u00e0 forma e \u00e0 amplitude da tens\u00e3o defletora horizontal, as \n\ntrajet\u00f3rias horizontais do feixe descrevem as faixas de n\u00fameros \u00edmpares, omitindo as de \n\nn\u00fameros pares. Quando o feixe atinge o lado direito da tela, perfazendo uma linha, ele deve \n\nvoltar ao lado esquerdo para recome\u00e7ar uma nova linha. Durante esse intervalo de tempo, o \n\nfeixe n\u00e3o deve ser vis\u00edvel portanto, \u00e9 aplicado \u00e0 grade da v\u00e1lvula de imagem um pulso de \n\napagamento horizontal, que \u00e9 mais preto que o preto. Nesta primeira etapa, o feixe de \n\nel\u00e9trons cobre 247,5 linhas ativas e o retorno vertical desse campo cobre 15 linhas inativas \n\nque permanecer\u00e3o apagadas no monitor. \n\n \n\n Uma vez varridas as linhas \u00edmpares da imagem, chega-se \u00e0 extremidade final da \n\nsuperf\u00edcie. A informa\u00e7\u00e3o de imagem, tal como foi produzida durante a varredura das faixas \n\n\u00edmpares \u00e9 transmitida aos receptores ponto por ponto. Com isso, tem-se que a varredura \n\ncompleta das linhas \u00edmpares da imagem \u00e9 a varredura de um campo (campo impar). \n\n \n\n Ap\u00f3s completar o primeiro campo, o feixe de varredura volta \u00e0 parte superior do \n\nalvo, no qual existe a imagem completa. Agora, por\u00e9m, gra\u00e7as \u00e0 posi\u00e7\u00e3o de partida do feixe \n\nde varredura, as faixas pares \u00e9 que ser\u00e3o varridas, para fornecerem a informa\u00e7\u00e3o de v\u00eddeo, \n\nenquanto que as de n\u00famero \u00edmpares ser\u00e3o puladas. Igualmente ao que ocorreu com o \n\nprimeiro campo, o feixe cobre um total de 262,5 linhas (247,5 + 15). \n\n \n\n\n\n 52\n\n Ao terminar de varrer as linhas pares o segundo campo fica completo (campo par). \n\nIgualmente ao primeiro campo, a informa\u00e7\u00e3o fornecida ponto a ponto \u00e9 transmitida como \n\num trem de sinais. Com o segundo campo transmitido, a figura vis\u00edvel na tela do monitor \u00e9 \n\na imagem completa, tal como se apresentava inicialmente no alvo da v\u00e1lvula da capta\u00e7\u00e3o de \n\nimagem. \n\n \n\n Na reconstitui\u00e7\u00e3o da imagem as faixas pares do segundo campo est\u00e3o intercaladas \n\nentre as \u00edmpares, que formavam o primeiro campo. O espa\u00e7o para a intercala\u00e7\u00e3o ficou \n\nreservado pelas correntes que atuaram no sistema de deflex\u00e3o. \n\n \n\n Observa-se que o processo de varredura n\u00e3o altera a localiza\u00e7\u00e3o das faixas de \n\ninforma\u00e7\u00e3o de imagem; apenas selecionam, na c\u00e2mera, as faixas \u00edmpares para o primeiro \n\ncampo e as pares para o segundo. Sendo assim, fica claro que a imagem \u00e9 enviada em duas \n\npartes. \n\n \n\n \u00c9 interessante notar que s\u00f3 se v\u00ea a figura completa quando aparecem os dois \n\ncampos consecutivos intercalados. Quando esses dois campos s\u00e3o transmitidos diz-se que \n\nfoi transmitido um quadro. \n\n \n\n Para que esse tipo de varredura possa se realizar, \u00e9 necess\u00e1rio que a freq\u00fc\u00eancia de \n\nvarredura horizontal seja 262,5 vezes maior que a vertical, assegurando que a \n\nproporcionalidade entre as freq\u00fc\u00eancias seja um n\u00famero fracion\u00e1rio de modo a garantir meia \n\nlinha no final e no in\u00edcio de campos consecutivos. \n\n \n\n\n\n 53\n\n Voltando ao sinal de v\u00eddeo, sabe-se que sua forma pura traz informa\u00e7\u00f5es referentes \n\napenas \u00e0 luz e sombra de uma imagem e, que estas informa\u00e7\u00f5es s\u00e3o insuficientes. Se um \n\nfeixe eletr\u00f4nico descreve uma linha em uma imagem, como mostrada na figura 3-1, as \n\ninforma\u00e7\u00f5es da imagem s\u00e3o recolhidas e, a amplitude desta est\u00e1 situada entre o n\u00edvel de \n\npreto e o n\u00edvel de branco. A tens\u00e3o correspondente \u00e0 determinada linha horizontal come\u00e7a \n\nno ponto em que o feixe come\u00e7a a varrer a imagem horizontalmente e termina aonde \n\ntermina a varredura e come\u00e7a o retorno horizontal de extin\u00e7\u00e3o. Considerando que a a\u00e7\u00e3o de \n\nvarredura \u00e9 cont\u00ednua (linha por linha), tem-se que o pr\u00e9-amplificador de v\u00eddeo, na c\u00e2mera, \n\nestar\u00e1 recebendo um trem de tens\u00f5es de v\u00eddeo com intervalos de extin\u00e7\u00e3o intercalados. Esse \n\nintervalo de extin\u00e7\u00e3o ocorre quando o feixe chega \u00e0 extremidade de uma linha e precisa \n\nretornar ao come\u00e7o da linha subseq\u00fcente para recome\u00e7ar a varredura. Por\u00e9m, no final da \n\nlinha a intensidade luminosa do ponto explorado pode ser qualquer, inclusive a mais clara. \n\nPara que o feixe recomece a varredura, \u00e9 necess\u00e1rio acrescentar aos sinais de v\u00eddeo e \n\nextin\u00e7\u00e3o o impulso de sincronismo horizontal. Este impulso \u00e9 muito breve, com uma \n\ndura\u00e7\u00e3o de apenas 5?s. Sua polaridade \u00e9 a mesma do impulso de extin\u00e7\u00e3o horizontal, \n\npermitindo assim a separa\u00e7\u00e3o do sinal de v\u00eddeo no receptor. O tempo de sua apari\u00e7\u00e3o \u00e9 tal \n\nque o impulso coincide com a chegada do feixe no fim da varredura horizontal para a \n\ndireita e for\u00e7a o sistema da gera\u00e7\u00e3o de deflex\u00e3o horizontal a iniciar a por\u00e7\u00e3o de retorno do \n\nciclo de varredura horizontal. Em outras palavras, o impulso de sincronismo horizontal \n\naparece no fim de cada varredura horizontal. Esse impulso ocorre na regi\u00e3o abaixo do n\u00edvel \n\nde preto, conhecida como mais preto que o preto. A figura 3-2 mostra o formato de uma \n\nlinha de sinal de v\u00eddeo juntamente com os pulsos de extin\u00e7\u00e3o e de sincronismo horizontal. \n\nO n\u00edvel de preto corresponde a uma tens\u00e3o de 0 volt e o n\u00edvel de branco tem amplitude de \n\n\n\n 54\n\n0,7 volts. Os n\u00edveis de cinza situam-se entre esses dois extremos. O impulso de sincronismo \n\npossui uma amplitude de \u20130,3 volts e, este impulso \u00e9 programado para aparecer \n\nligeiramente ap\u00f3s o in\u00edcio do impulso de extin\u00e7\u00e3o horizontal de 10?s, que surge no fim de \n\ncada varredura horizontal. Com dura\u00e7\u00e3o de apenas 5?s, o impulso de sincronismo termina \n\nantes do impulso de extin\u00e7\u00e3o. Conseq\u00fcentemente, o impulso de sincronismo ocorre dentro \n\ndo per\u00edodo de dura\u00e7\u00e3o do impulso de extin\u00e7\u00e3o. Uma vez que a amplitude do impulso de \n\nsincronismo \u00e9 maior que a do impulso de extin\u00e7\u00e3o, aquele primeiro estende-se al\u00e9m da base \n\ndo impulso de extin\u00e7\u00e3o, posi\u00e7\u00e3o em que ambos aparecem reunidos, tornando poss\u00edvel a \n\nretirada do impulso de sincronismo e do impulso de extin\u00e7\u00e3o, e us\u00e1-lo como um sinal de \n\ncontrole de tempo. \n\n \n\n \n \n\nFigura 3-2 Formato de uma linha de sinal de v\u00eddeo composto \n \n\n Quando o feixe termina a varredura da \u00faltima linha da parte inferior da imagem o \n\nmesmo deve ser apagado e levado \u00e0 parte superior da tela. Nesse instante s\u00e3o aplicados \n\npulsos de extin\u00e7\u00e3o e de sincronismo vertical. O impulso de sincronismo vertical \u00e9 aplicado \n\nao gerador de deflex\u00e3o vertical, onde provoca a repentina invers\u00e3o da dire\u00e7\u00e3o da corrente \n\n\n\n 55\n\nde deflex\u00e3o vertical. Com isso tem in\u00edcio o movimento do feixe de varredura para cima em \n\ndeterminado momento do ciclo de varredura completo. \n\n \n\n O retorno vertical do feixe de varredura ocorre uma vez em cada campo: \u00e9 quando o \n\nfeixe, tendo varrido a \u00faltima linha horizontal, est\u00e1 pronto para voltar \u00e0 margem superior da \n\ntela que est\u00e1 sendo explorada, come\u00e7ando a varredura do campo seguinte. O impulso de \n\nsincronismo vertical aparece em cada intervalo de 1/60 segundos, ou 60 vezes por segundo. \n\nO intervalo do impulso \u00e9 de 190?s, podendo-se dizer que \u00e9 um impulso de longa dura\u00e7\u00e3o, \n\nem rela\u00e7\u00e3o ao impulso horizontal. Os impulsos de sincronismo vertical s\u00e3o precedidos e \n\nsucedidos por 6 impulsos de dura\u00e7\u00e3o menor, denominados de impulsos eq\u00fcalizadores. Os \n\nimpulsos eq\u00fcalizadores possuem a mesma polaridade do impulso de sincronismo vertical. \n\nS\u00e3o formados de modo que o intervalo entre dois impulsos consecutivos corresponda a um \n\nciclo de varredura horizontal, fornecendo assim, o equivalente a tr\u00eas impulsos de \n\nsincronismo horizontal imediatamente antes de aparecer o retorno vertical e outros tr\u00eas \n\nimpulsos de sincronismo horizontal imediatamente depois do impulso de sincronismo \n\nvertical. Assim, mant\u00e9m em freq\u00fc\u00eancia o gerador de deflex\u00e3o horizontal durante o per\u00edodo \n\nem que o gerador de deflex\u00e3o vertical se apronta para a invers\u00e3o da corrente de deflex\u00e3o; \n\ndando in\u00edcio ao retorno vertical. \n\n \n\n A necessidade de um intervalo de espera prov\u00e9m do fato de cada campo conter uma \n\nmeia linha. O instante de partida do retorno vertical de cada um dos campos, de linhas \n\n\u00edmpares e pares, difere de uma meia linha horizontal. A \u00faltima dessas linhas no campo \n\n\u00edmpar termina no meio da margem inferior da superf\u00edcie sujeita a varredura, completando a \n\n\n\n 56\n\n\u00faltima linha horizontal do campo par, que termina no canto direito da margem inferior. Os \n\nimpulsos eq\u00fcalizadores em cada campo encarregam-se da diferen\u00e7a de tempo e d\u00e3o partida \n\nao retorno vertical dos campos sucessivos nos momentos pr\u00f3prios, de modo a se realizar a \n\ncorreta intercala\u00e7\u00e3o das linhas de varredura horizontal. \n\n \n\n O formato final do sinal de v\u00eddeo composto padr\u00e3o \u00e9 ilustrado na figura 3-3. \n\n \n\n \n \n\nFigura 3-3 Formato do sinal padr\u00e3o de v\u00eddeo composto \n\n \n\n \n\n3.2 Circuito de Capta\u00e7\u00e3o, Digitaliza\u00e7\u00e3o, e Exibi\u00e7\u00e3o de Imagens \n\nMonocrom\u00e1ticas \n\n \n\nNesta se\u00e7\u00e3o ser\u00e1 descrito como foi desenvolvido o circuito de capta\u00e7\u00e3o, \n\ndigitaliza\u00e7\u00e3o, e exibi\u00e7\u00e3o de imagens monocrom\u00e1ticas. \u00c9 importante ressaltar que, \n\nprimeiramente, o circuito foi montado e testado em um \u201cproto-board\u201d. Isto foi feito para \n\nque cada parte fosse testada separadamente, facilitando a depura\u00e7\u00e3o e ajustes do circuito. \n\n \n\n\n\n 57\n\n3.2.1 Capta\u00e7\u00e3o, Digitaliza\u00e7\u00e3o e Exibi\u00e7\u00e3o de Imagens Monocrom\u00e1ticas \n\n \n\n  O diagrama em blocos do m\u00f3dulo de capta\u00e7\u00e3o, digitaliza\u00e7\u00e3o e exibi\u00e7\u00e3o de imagens \n\nmonocrom\u00e1ticas est\u00e1 ilustrado na figura 3-4. \n\n \n\n \nFigura 3-4 Diagrama em blocos do circuito de capta\u00e7\u00e3o, digitaliza\u00e7\u00e3o e exibi\u00e7\u00e3o de \n\nimagens monocrom\u00e1ticas. \n\n \n\n De acordo com o diagrama em blocos apresentado acima, pode-se descrever a \n\nfun\u00e7\u00e3o que cada bloco executa. O hardware desenvolvido para esta etapa do projeto \n\nconstitui-se de dois m\u00f3dulos; um m\u00f3dulo de aquisi\u00e7\u00e3o, digitaliza\u00e7\u00e3o e exibi\u00e7\u00e3o e um outro \n\nde armazenamento e controle, que ser\u00e1 descrito mais adiante. No ap\u00eandice A tem-se o \n\nesquem\u00e1tico do circuito referente ao m\u00f3dulo de aquisi\u00e7\u00e3o, digitaliza\u00e7\u00e3o e exibi\u00e7\u00e3o de \n\nimagens monocrom\u00e1ticas. \n\n\n\n 58\n\n O circuito do m\u00f3dulo de aquisi\u00e7\u00e3o, digitaliza\u00e7\u00e3o e exibi\u00e7\u00e3o, gerado pela ferramenta \n\nOrcad, pode ser visto no ap\u00eandice D. \n\n \n\n A seguir, ser\u00e3o descritas as caracter\u00edsticas, e suas respectivas fun\u00e7\u00f5es, de cada \n\ncomponente que comp\u00f5e o circuito apresentado na figura 3-4. \n\n \n\n \n\n3.2.1.1  Separador de Sincronismo \n\n \n\n O separador de sincronismo utilizado foi o EL4581C da Elantec, cuja fun\u00e7\u00e3o \u00e9 \n\nextrair as informa\u00e7\u00f5es de sincronismo vertical, horizontal, p\u00f3rtico posterior e de tipo de \n\ncampo de um sinal padr\u00e3o de v\u00eddeo composto. Estes sinais ser\u00e3o importantes porque \n\natrav\u00e9s deles a unidade de controle (CPLD) poder\u00e1 fazer a identifica\u00e7\u00e3o do in\u00edcio de uma \n\nnova linha de v\u00eddeo ou de um novo campo, gerando os sinais de controle e os endere\u00e7os \n\npara as mem\u00f3rias. A figura 3.5 mostra os sinais de sa\u00edda do EL4581C, quando um sinal de \n\nv\u00eddeo composto padr\u00e3o \u00e9 aplicado na sua entrada. \n\n \n\n\n\n 59\n\n \n  \n\nFigura 3-5 Sinais extra\u00eddos do separador de sincronismo. Em (a), tem-se o sinal de \nentrada (v\u00eddeo composto padr\u00e3o). Em (b), tem-se o sinal de sincronismo composto \n\n(cs). Em (c), tem-se o sinal de sincronismo vertical (vs). Em (d), tem-se o sinal de tipo \nde campo (par/\u00edmpar) que ser\u00e1 baixo quando o campo for par e alto quando o campo \n\nfor \u00edmpar. E em (e), tem-se o sinal de p\u00f3rtico posterior (bp). \n\n \n\n \n\n3.2.1.2 Conversor A/D \n\n \n\n O conversor A/D utilizado nesse projeto \u00e9 o TLC5540 de 8 bits de resolu\u00e7\u00e3o com \n\numa taxa de convers\u00e3o de 40MSPS (Texas Instruments, 2004). A escolha desse conversor \n\ndeu-se devido \u00e0s caracter\u00edsticas do sinal de v\u00eddeo. Sabe-se que a informa\u00e7\u00e3o de uma linha \n\nde v\u00eddeo \u00e9 de aproximadamente 53\u00b5s e, para se obter 512 amostras nesse tempo \u00e9 \n\nnecess\u00e1rio que o conversor seja capaz de realizar a convers\u00e3o em aproximadamente 100ns, \n\no que equivale a 10 milh\u00f5es de amostras por segundo. Na figura 3-6 \u00e9 apresentado o \n\ndiagrama de tempo do conversor A/D TLC5540. \n\n \n\n\n\n 60\n\n \n \n\nFigura 3-6 Diagrama de tempos do conversor A/D TLC5540. O sinal \u00e9 amostrado na \nborda de descida do clock e os dados ficam dispon\u00edveis a partir da quarta borda de \n\nsubida do clock \n\n \n\n \n\n3.2.1.3 Buffer \n\n \n\nO buffer \u00e9 uma unidade intermedi\u00e1ria entre dois ou mais componentes, neste caso o \n\nbuffer est\u00e1 entre o conversor A/D e o conversor D/A e mem\u00f3rias. Internamente, o buffer \n\ncont\u00e9m uma \u00e1rea de mem\u00f3ria que \u00e9 utilizada para armazenamento tempor\u00e1rio de \n\ninforma\u00e7\u00f5es. Normalmente um buffer oferece opera\u00e7\u00f5es adicionais que permitem consultar \n\nse existem dados dispon\u00edveis para leitura, no buffer de entrada, ou para solicitar que os \n\ndados presentes no buffer de sa\u00edda sejam enviados imediatamente para o dispositivo de \n\nsa\u00edda. \n\n \n\nO buffer utilizado nesse circuito foi o SN74LV244AT (Texas Instruments, 2004). \n\n \n\n \n\n\n\n 61\n\n3.2.1.4 Conversor D/A \n\n \n\n O conversor D/A que foi utilizado \u00e9 o TLC5602C de 8 bits de resolu\u00e7\u00e3o com uma \n\ntaxa de opera\u00e7\u00e3o de 30MSPS (Texas Instruments, 2002). \n\n \n\n Dentre as condi\u00e7\u00f5es de opera\u00e7\u00e3o recomendadas pelo fabricante o conversor \n\nTLC5602C apresenta uma tens\u00e3o de refer\u00eancia anal\u00f3gica (Vref) de valor nominal igual a \n\n4V. Para a obten\u00e7\u00e3o dessa tens\u00e3o de refer\u00eancia, fez-se uso de um regulador de tens\u00e3o. Este \n\nregulador de tens\u00e3o foi projetado para que sua sa\u00edda apresentasse uma tens\u00e3o de 4V \n\nenquanto sua entrada estivesse recebendo a tens\u00e3o de alimenta\u00e7\u00e3o padr\u00e3o do sistema, 5V. O \n\nregulador de tens\u00e3o utilizado foi o LM317LZ (National Semiconductor, 2000). O projeto \n\ndo regulador junto ao conversor pode ser visto no ap\u00eandice A. \n\n \n\nO diagrama de tempos do conversor D/A pode ser observado na figura seguinte. \n\n \n\n \n\nFigura 3-7 Diagrama de tempo do conversor D/A TLC5602 \n \n\n\n\n 62\n\n3.2.1.5 Sa\u00edda de V\u00eddeo  \n\n \n\n  Nesta etapa final o sinal de v\u00eddeo composto \u00e9 reconstru\u00eddo, utilizando os dados do \n\nconversor D/A e do separador de sincronismo. \n\n \n\n A foto do circuito desenvolvido para esta etapa pode ser observada no ap\u00eandice D. \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n\n\n 63\n\nCap\u00edtulo 4 \n\n \n\n \n\n4 Armazenamento de Imagens Monocrom\u00e1ticas \n\n \n\n4.1 Controle para Armazenamento de Imagens Monocrom\u00e1ticas \n\n \n\nO armazenamento de imagens monocrom\u00e1ticas ser\u00e1 realizado em duas mem\u00f3rias e, a \n\nUnidade de Controle I, ser\u00e1 a respons\u00e1vel pelo \u201cgerenciamento\u201d dessa etapa. A seguir, ser\u00e1 \n\ndescrito o funcionamento, de forma detalhada, do m\u00f3dulo respons\u00e1vel pelo controle e \n\narmazenamento de imagens monocrom\u00e1ticas. A figura 4-1, ilustra esse m\u00f3dulo e seus \n\ncomponentes. \n\n \n\n \n\nFigura 4-1 M\u00f3dulo de armazenamento e controle de imagens monocrom\u00e1ticas \n\n\n\n 64\n\n4.1.1 Mem\u00f3rias  \n\n \n\n As mem\u00f3rias fazem parte do m\u00f3dulo de armazenamento e controle do sistema. \n\nComo as mem\u00f3rias utilizadas s\u00e3o SMD (Surface Mount Devices), desenvolveu-se um \n\nsoquete para que fosse poss\u00edvel a utiliza\u00e7\u00e3o das mesmas nos dois m\u00f3dulos de \n\narmazenamento e controle que foram desenvolvidos. Assim, n\u00e3o seria necess\u00e1rio que as \n\nmem\u00f3rias fossem soldadas \u00e0s placas, o que restringiria a sua utiliza\u00e7\u00e3o. \n\n \n\n Uma vez que o sinal de v\u00eddeo \u00e9 entrela\u00e7ado, ser\u00e1 necess\u00e1rio o uso de duas mem\u00f3rias \n\npara armazenar um quadro da imagem. Uma das mem\u00f3rias armazenar\u00e1 o campo par e a \n\noutra o campo \u00edmpar. \n\n \n\n A mem\u00f3ria adotada foi a SRAM BS62LV1024SC-70. Esta mem\u00f3ria \u00e9 de alta \n\nperformance e de baixo consumo; possui um tempo de acesso de aproximadamente 70ns e \u00e9 \n\norganizada com 131072 palavras de 8 bits (128K x 8). A figura 3-7 mostra os diagramas de \n\ntempo para os ciclos de leitura e escrita (Brilliance Semiconductor, INC; 2001). O controle \n\ndos endere\u00e7os das mem\u00f3rias ser\u00e1 gerado pela unidade de controle, respeitando os tempos \n\ndos diagramas da figura 4-2 onde, as siglas OE, CE, WE, Dout e Din representam, \n\nrespectivamente, os sinais \u201cOutpu Enable\u201d, \u201cChip Enable\u201d, \u201cWrite Enable\u201d, \u201cData Out\u201d \n\ne \u201cData In\u201d. \n\n \n\n\n\n 65\n\n \n \n\n(a) Ciclo de leitura \n \n\n \n \n\n(b) Ciclo de escrita \n \n\nFigura 4-2 Diagrama de tempo da mem\u00f3ria. (a)  ciclo de leitura, (b) ciclo de escrita \n\n \n\n \n\n4.1.2 Unidade de Controle \n\n \n\n A unidade de controle ser\u00e1 implementada utilizando o CPLD EPM7128SLC84-7 da \n\nfam\u00edlia MAX 7000S da Altera. Para a programa\u00e7\u00e3o do CPLD ser\u00e1 utilizado o software \n\nQuartus II, tamb\u00e9m da Altera. De acordo com (PEDRINO, E. C., 2003), esta unidade ser\u00e1 \n\n\n\n 66\n\ncomposta por outras sub-unidades, tais como: unidade de exclus\u00e3o de pulsos de \n\nsincronismo, unidade de controle interna e unidade de controle das mem\u00f3rias. \n\n O software Quartus II (e MAX+plus II) apresenta uma hierarquia para representa\u00e7\u00e3o \n\nde projetos. Sendo assim, a unidade de controle est\u00e1 representada o topo dessa hierarquia e, \n\nsuas sub-unidades, est\u00e3o representando os n\u00edveis mais baixos, que n\u00e3o s\u00e3o vis\u00edveis at\u00e9 que \n\no projeto seja compilado ou simulado. \n\n  \n\n De acordo com o projeto desenvolvido, o componente padr\u00e3o - unidade de controle \n\n\u2013 representando o topo da hierarquia, ser\u00e1 o respons\u00e1vel pelo armazenamento dos quadros \n\nda imagem nas mem\u00f3rias SRAM. A figura 4-3 mostra o referido componente. \n\n \n\n\n\n 67\n\n \n\nFigura 4-3 Unidade de controle \n A seguir, na figura 4-4 tem-se o diagrama esquem\u00e1tico da \u201cunidade de controle\u201d. \n\nPor este diagrama, \u00e9 poss\u00edvel identificar todos os blocos l\u00f3gicos que o constituem os quais, \n\nser\u00e3o descritos com mais detalhes nas se\u00e7\u00f5es que se seguem. \n\n \n\n\n\n 68\n\n \n\nFigura 4-4 Diagrama esquem\u00e1tico da unidade de controle \n\n Todas as subunidades foram implementadas utilizando a linguagem de programa\u00e7\u00e3o \n\ndesenvolvida pela Altera, AHDL (Altera HDL). A seguir, ser\u00e1 apresentado cada bloco \n\nl\u00f3gico que constitui a unidade de controle e, ser\u00e1 feita uma breve descri\u00e7\u00e3o das fun\u00e7\u00f5es \n\ndesenvolvidas por cada bloco. \n\n\n\n 69\n\n \n\n \n\n4.1.2.1 Unidade de Exclus\u00e3o de Pulsos de Sincronismo \n\n \n\n A unidade de exclus\u00e3o de pulsos de sincronismo tem como objetivo a exclus\u00e3o dos \n\npulsos eq\u00fcalizadores e serrilhados fornecidos pelo sinal de sincronismo composto (cs). Esta \n\nunidade esta representada pelo bloco l\u00f3gico \u201cexclusao_pulsos_sinc\u201d, representada na \n\nfigura 4-5. Este bloco l\u00f3gico \u00e9 composto por um contador e por um uma m\u00e1quina de \n\nestados. O contador \u00e9 respons\u00e1vel pela contagem dos pulsos de sincronismo logo ap\u00f3s o \n\nin\u00edcio de cada campo da imagem e, a m\u00e1quina de estados, por sua vez, \u00e9 respons\u00e1vel por \n\nenviar um sinal \u00e0 unidade de controle interna (que ser\u00e1 vista mais adiante), indicando que \n\nos pulsos eq\u00fcalizadores e serrilhados foram exclu\u00eddos. \n\n \n\n \n\nFigura 4-5 Bloco l\u00f3gico da unidade de exclus\u00e3o de pulsos eq\u00fcalizadores e serrilhados \n O diagrama esquem\u00e1tico desta unidade est\u00e1 representado na figura 4-6 e, os c\u00f3digos \n\ndesenvolvidos em AHDL, podem ser vistos no ap\u00eandice H. \n\n \n\n\n\n 70\n\n \n\nFigura 4-6 Diagrama esquem\u00e1tico da unidade de exclus\u00e3o de pulsos eq\u00fcalizadores e \nserrilhados \n\n \n\n \n\n \n\n \n\n4.1.2.2 Unidade de Controle Interna \n\n \n\n A unidade de controle interna possui uma fun\u00e7\u00e3o respons\u00e1vel pela gera\u00e7\u00e3o de um \n\nsinal de disparo que vai habilitar as mem\u00f3rias para as opera\u00e7\u00f5es de leitura e escrita. \u00c9 \n\n\n\n 71\n\nimportante ressaltar que as mem\u00f3rias ficar\u00e3o habilitadas apenas nos per\u00edodos de linha ativa \n\ndo sinal de v\u00eddeo. \n\n \n\n O bloco l\u00f3gico que representa esta unidade \u00e9 o bloco \u201cunid_contr_int\u201d, mostrado na \n\nfigura 4-7. Este bloco \u00e9 composto por um contador de pulsos e por dois flip-flops tipo D. \n\n O c\u00f3digo, em AHDL, da unidade de controle interna pode ser visto no ap\u00eandice H. \n\n \n\n \n\nFigura 4-7 Bloco l\u00f3gico da unidade de controle interna \n\n \n\n \n\n4.1.2.3 Unidade de Controle das Mem\u00f3rias \n\n \n\n Por \u00faltimo tem-se a unidade de controle das mem\u00f3rias, que \u00e9 respons\u00e1vel pela \n\ngera\u00e7\u00e3o dos endere\u00e7os para as mesmas e pelo controle de desabilita\u00e7\u00e3o no final de cada \n\nlinha. Esta unidade \u00e9 composta por dois contadores e por dois flip-flops tipo D. \n\nUm dos contadores ser\u00e1 respons\u00e1vel pela contagem dos 512 pixels de cada linha da \n\nimagem e, o outro contador, contar\u00e1 as 256 linhas de cada campo da imagem. \u00c9 importante \n\nressaltar que a cada final de contagem, tanto do contador de pixels (\u201ccontador_pixels\u201d) \n\nquanto do contador de linhas (\u201ccontador_linhas\u201d), um sinal de controle, denominado \n\n\n\n 72\n\n\u201cfim_pixel\u201d e outro denominado \u201cfim_linha\u201d ser\u00e1 enviado, \u201cdizendo\u201d que ambas as \n\ncontagens atingiram seus valores m\u00e1ximos. Estes sinais ser\u00e3o importantes para o controle \n\nda etapa de integra\u00e7\u00e3o das linhas e colunas do sinal de v\u00eddeo; etapa esta que ser\u00e1 explicada \n\nadiante com mais detalhes. \n\n \n\nNa figura 4-8 est\u00e1 representado o bloco l\u00f3gico \u201ccontrole_memorias\u201d enquanto, que \n\nna figura 4-9 tem-se o diagrama esquem\u00e1tico da unidade de controle das mem\u00f3rias. \n\n \n\nOs c\u00f3digos dos contadores, escritos em AHDL, podem ser vistos no ap\u00eandice H. \n\n \n\n \n\nFigura 4-8 Bloco l\u00f3gico da unidade de controle das mem\u00f3rias \n \n\n\n\n 73\n\n           \n\nFigura 4-9 Diagrama esquem\u00e1tico da unidade de controle das mem\u00f3rias \n \n\n  \n\n4.2 Considera\u00e7\u00f5es Finais \n\n \n\n Como dito anteriormente, o CPLD e as mem\u00f3rias foram projetados separadamente \n\nda unidade de digitaliza\u00e7\u00e3o do sinal de v\u00eddeo. Um dos motivos pelo qual se optou por esta \n\nalternativa foi pela possibilidade de se utilizar um dispositivo de controle mais denso do \n\nque o CPLD EPM7128SLC84-7, caso fosse necess\u00e1rio pois, dependendo da l\u00f3gica o CPLD \n\npoderia ser insuficiente. \n\n \n\n Para a confec\u00e7\u00e3o de um novo m\u00f3dulo de armazenamento e controle fez-se uso de \n\num FPGA EP1C6Q240CB, pertencente \u00e0 fam\u00edlia Cyclone II da Altera. O diagrama \n\n\n\n 74\n\nesquem\u00e1tico est\u00e1 representado no ap\u00eandice C e, m\u00f3dulo contendo o FPGA pode ser visto \n\nno ap\u00eandice F. \n\n \n\n Al\u00e9m dos dois m\u00f3dulos desenvolvidos um terceiro foi projetado contendo dois \n\nCPLDs e duas mem\u00f3rias. O intuito ao projetar esse m\u00f3dulo foi o de utilizar um CPLD para \n\ncontrole de armazenamento de imagens e o outro para controle da etapa de integra\u00e7\u00e3o do \n\nsinal de v\u00eddeo. \n\n \n\n O diagrama esquem\u00e1tico e o circuito do m\u00f3dulo contendo os CPLDs, gerado pelo \n\nOrcad, podem ser vistos nos ap\u00eandices B e E respectivamente. \n\n \n\n Com base no que foi proposto, um diagrama em blocos contendo os dois m\u00f3dulos \u00e9 \n\napresentado na figura 4-10. O circuito, contendo os dois m\u00f3dulos pode ser visto no \n\nap\u00eandice G. \n\n \n\n \n\nFigura 4-10 Diagrama em blocos dos dois m\u00f3dulos propostos \n\n\n\n 75\n\nCap\u00edtulo 5 \n\n \n\n \n\n5 Integra\u00e7\u00e3o do Sinal de V\u00eddeo \n\n \n\n Como dito, no cap\u00edtulo anterior, o sistema de detec\u00e7\u00e3o de movimento ser\u00e1 composto \n\npor um circuito respons\u00e1vel pela capta\u00e7\u00e3o, digitaliza\u00e7\u00e3o e exibi\u00e7\u00e3o de imagens \n\nmonocrom\u00e1ticas, por um circuito que realizar\u00e1 o controle e armazenamento e por um outro \n\nrespons\u00e1vel pela integra\u00e7\u00e3o do sinal de v\u00eddeo. \n\n \n\nNeste cap\u00edtulo, ser\u00e1 feita uma descri\u00e7\u00e3o detalhada da etapa de integra\u00e7\u00e3o do sinal de \n\nv\u00eddeo tanto na dire\u00e7\u00e3o horizontal como na vertical. \n\n \n\n \n\n5.1 Considera\u00e7\u00f5es Iniciais \n\n \n\n De acordo com a figura 3-5, os sinais fornecidos pelo separador de sincronismo, \n\n\u201ccs\u201d (sincronismo composto) e \u201codd/even\u201d (campo par e campo \u00edmpar) ser\u00e3o importantes \n\npois, atrav\u00e9s destes, ser\u00e1 poss\u00edvel distinguir qual campo da imagem est\u00e1 sendo adquirido \n\n(par ou \u00edmpar) e tamb\u00e9m controlar o in\u00edcio e o final do per\u00edodo de integra\u00e7\u00e3o de cada linha \n\nde v\u00eddeo (sincronismo composto). \n\n \n\n\n\n 76\n\n Para a detec\u00e7\u00e3o de movimento em apenas uma dire\u00e7\u00e3o pode-se utilizar a informa\u00e7\u00e3o \n\nm\u00e9dia de cada linha da imagem (imagem = 525 linhas). Se for considerado que a imagem \n\nde v\u00eddeo \u00e9 composta por linhas horizontais e, processando a informa\u00e7\u00e3o m\u00e9dia de cada \n\nlinha, ao inv\u00e9s da informa\u00e7\u00e3o pontual, ser\u00e1 poss\u00edvel detectar varia\u00e7\u00f5es na dire\u00e7\u00e3o \n\nperpendicular \u00e0s linhas horizontais, ap\u00f3s uma compara\u00e7\u00e3o das informa\u00e7\u00f5es de quadros \n\nsucessivos (n\u00e3o necessariamente seq\u00fcenciais), correspondendo a um deslocamento de \n\nobjetos no sentido vertical da imagem. A figura 5-1 ilustra o caso. \n\n \n\n \n\n \n\nFigura 5-1 Quadros sucessivos de imagem com o deslocamento de um objeto. \u00c0 direita \nde cada quadro aparece o valor m\u00e9dio de cada linha \n\n \n\n Para a detec\u00e7\u00e3o de movimento no sentido horizontal, que normalmente corresponde \n\na maior parte dos movimentos que ocorrem na cena, a integra\u00e7\u00e3o ser\u00e1 realizada nas linhas \n\nda imagem correspondentes \u00e0 posi\u00e7\u00e3o vertical dos objetos da cena. A figura 5-2 ilustra o \n\ndeslocamento descrito. \n\n \n\n\n\n 77\n\n \n\nFigura 5-2 Quadros sucessivos de imagem com o deslocamento de um objeto. Abaixo \nde cada quadros aparece o valor m\u00e9dio do sinal de linha \n\n \n\n O diagrama em blocos apresentado na figura 5-3 apresenta, de forma simplificada, a \n\nopera\u00e7\u00e3o de integra\u00e7\u00e3o que ser\u00e1 realizada no sinal de v\u00eddeo obtido atrav\u00e9s da c\u00e2mera CCD. \n\n \n\n \n\nFigura 5-3 Diagrama em bloco da etapa de integra\u00e7\u00e3o do sinal de v\u00eddeo \n\n\n\n 78\n\n5.1.1 Integra\u00e7\u00e3o do Sinal de V\u00eddeo na Dire\u00e7\u00e3o Horizontal \n\n \n\n Como dito no t\u00f3pico anterior, a integra\u00e7\u00e3o ser\u00e1 realizada nas dire\u00e7\u00f5es horizontal e \n\nvertical. Primeiramente, ser\u00e1 descrito o m\u00e9todo desenvolvido para a integra\u00e7\u00e3o (soma) dos \n\npixels na dire\u00e7\u00e3o horizontal, ou seja, ser\u00e1 realizada uma soma de todos os pixels que uma \n\nlinha ativa de v\u00eddeo cont\u00e9m (512 no total). \n\n \n\n O programa que realizar\u00e1 esta opera\u00e7\u00e3o foi desenvolvido no software Quartus II e o \n\nbloco l\u00f3gico padr\u00e3o recebeu o nome de \u201csomador_pixels_horizontais\u201d e pode ser visto na \n\nfigura 5-4. \n\n \n\n \n\nFigura 5-4 Bloco l\u00f3gico do somador de pixels horizontais \n\n \n\n O diagrama esquem\u00e1tico, referente ao bloco \u201csomador_pixels_horizontais\u201d, est\u00e1 \n\nrepresentado na figura 5-5. \n\n\n\n 79\n\n \n\nFigura 5-5 Diagrama esquem\u00e1tico do somador de pixels horizontais \n  \n\n De acordo com o diagrama esquem\u00e1tico, para que a soma dos pixels nas linhas \n\nhorizontais fosse realizada fez-se uso de tr\u00eas registradores de oito bits, constitu\u00eddos por flip-\n\nflops tipo D, um acumulador e um latch. O acumulador possui entrada para oito bits de \n\ndados e sa\u00edda pra dezessete bits (figura 5-5). O intuito para a utiliza\u00e7\u00e3o de uma sa\u00edda com \n\ndezessete bits no acumulador \u00e9 para que durante a soma truncada os bits mais significativos \n\nsejam mantidos, caso que n\u00e3o aconteceria se a sa\u00edda do acumulador fosse de apenas oito \n\nbits. Uma vez que os dados da sa\u00edda do acumulador j\u00e1 estejam dispon\u00edveis, pode-se ent\u00e3o, \n\ntrabalhar com os oito bits mais significativos, os quais ser\u00e3o suficientes para a an\u00e1lise dos \n\n\n\n 80\n\nresultados. Sendo assim, os demais componentes podem ser ajustados para operarem com \n\noito apenas bits de resolu\u00e7\u00e3o (os mais significativos). \n\n \n\n Para o controle desse bloco, foi necess\u00e1ria a utiliza\u00e7\u00e3o de alguns sinais fornecidos \n\npela unidade de controle (CPLD I). Estes sinais s\u00e3o: clock, representado pelo sinal \u201csa\u00edda \n\n[0]\u201d, fim da contagem de pixels, representado pelo sinal \u201cfim_pixel\u201d, leitura das mem\u00f3rias, \n\nrepresentado pelo sinal \u201ccontr_le\u201d e pelos dados, obtidos da leitura das mem\u00f3rias, \n\nrepresentado pelo sinal \u201cdados [7..0]\u201d. \n\n \n\n O primeiro flip-flop, denominado \u201cff_horiz1\u201d, tem como fun\u00e7\u00e3o segurar os dados \n\nque chegam das mem\u00f3rias por um per\u00edodo de um ciclo de clock e, s\u00f3 ent\u00e3o esses dados s\u00e3o \n\nliberados (borda de subida do clock) para o acumulador, denominado \u201cacum_horizontal\u201d. \n\nUma vez estando com os dados na entrada, o acumulador come\u00e7a a operar sincronizado \n\ncom o clock. Inicialmente seu valor \u00e9 zero e, a partir do primeiro ciclo de clock, a cada \n\nborda de subida do mesmo, sua sa\u00edda apresenta o valor da soma do dado anterior com o \n\natual, caracterizando uma soma truncada dos dados, que nesse caso s\u00e3o os valores dos \n\npixels. Este acumulador possui dois sinais de controle: um deles permite que o mesmo seja \n\nhabilitado para a opera\u00e7\u00e3o (clken = clock enable) e, um outro sinal permite com que o \n\nconte\u00fado do acumulador seja \u201czerado\u201d quando este sinal estiver em n\u00edvel alto. Sendo assim, \n\nfaz-se uso dos sinais \u201ccontr_le\u201d, para que o componente em quest\u00e3o seja habilitado apenas \n\nno momento em que os sinais de controle das mem\u00f3rias habilitam a leitura de dados nas \n\nportas das mesmas e \u201cfim_pixel\u201d, que \u201climpar\u00e1\u201d o acumulador a cada final de contagem de \n\npixels da linha ativa de v\u00eddeo. O segundo flip-flop, denominado \u201cff_horiz2\u201d, realiza a \n\nmesma tarefa do primeiro, retendo os dados por um per\u00edodo de um ciclo de clock. J\u00e1, o \n\n\n\n 81\n\nregistrador denominado \u201creg_horiz\u201d, recebe os dados do segundo flip-flop e libera apenas \n\no \u00faltimo dado ou seja, o dado que \u00e9 o resultado da soma truncada dos pixels da referida \n\nlinha de v\u00eddeo. Devido \u00e0s v\u00e1rias etapas dessa opera\u00e7\u00e3o, valores indesejados podem aparecer \n\natrapalhando os resultados, por isso foi necess\u00e1ria a utiliza\u00e7\u00e3o de v\u00e1rios flip-flops. O \u00faltimo \n\nflip-flop, denominado \u201cff_horiz3\u201d, armazena somente o valor desejado e ent\u00e3o pode envi\u00e1-\n\nlo a um dispositivo de armazenamento, como por exemplo as mem\u00f3rias SRAMs utilizados \n\nnesse mesmo projeto. \n\n \n\n Algumas das simula\u00e7\u00f5es realizadas para o desenvolvimento dessa etapa, assim \n\ncomo os resultados obtidos utilizando um analisador l\u00f3gico poder\u00e3o ser vistas no cap\u00edtulo \n\nreferente aos testes e resultados. \n\n \n\n \n\n5.1.2 Integra\u00e7\u00e3o do Sinal de V\u00eddeo na Dire\u00e7\u00e3o Vertical \n\n \n\n A integra\u00e7\u00e3o do sinal de v\u00eddeo na dire\u00e7\u00e3o vertical requer uma aten\u00e7\u00e3o especial na \n\netapa de leitura dos dados a serem somados. Isso se deve ao fato de que quando a soma \u00e9 \n\nfeita na dire\u00e7\u00e3o horizontal (t\u00f3pico anterior) os dados podem ser lidos e somados \n\ndiretamente conforme sua ordem de chegada. Para exemplificar melhor pode-se imaginar \n\numa imagem, como sendo uma matriz 4x4, com seus valores de pixels (em bin\u00e1rio), \n\nmostrados conforme a figura 5-6. \n\n \n\n\n\n 82\n\n \n\nFigura 5-6 Matriz 4x4, com os valores dos bits em bin\u00e1rio \n \n\n Para a etapa de integra\u00e7\u00e3o dos pixels na dire\u00e7\u00e3o horizontal, os dados que est\u00e3o \n\narmazenados nas mem\u00f3rias s\u00e3o lidos e enviados ao primeiro flip-flop (vide figura 5-5) de \n\nmaneira seq\u00fcencial ou seja, os dados s\u00e3o enviados conforme mostrado na figura 5-7. \n\n \n\nFigura 5-7 Leitura seq\u00fcencial dos bits da matriz 4x4 \n \n\n Sendo assim, a leitura e conseq\u00fcentemente a integra\u00e7\u00e3o (soma) pode ser feita de \n\nmaneira seq\u00fcencial, linha por linha. \n\n \n\n Para o segundo caso, a integra\u00e7\u00e3o ter\u00e1 de ser feita nas colunas da imagem. Em \n\noutras palavras, os pixels a serem somados ser\u00e3o os primeiros pixels de cada linha a seguir \n\nser\u00e3o somados os segundos pixels de cada linha e assim por diante, at\u00e9 completar o total de \n\nlinhas do campo da imagem e pixels das linhas (256 linhas por campo e 512 pixels por \n\nlinha). Para que essa opera\u00e7\u00e3o fosse realizada fez-se o uso de um recurso que torna a matriz \n\nda imagem em uma matriz transposta ou seja, as linhas da imagem original s\u00e3o trocadas \n\n\n\n 83\n\npelas colunas e vice-versa. Para exemplificar de uma melhor maneira imagine a mesma \n\nmatriz 4x4 utilizada anteriormente. A matriz transposta 4x4, da matriz mostrada na figura \n\n5-6, \u00e9 apresentada na figura 5-8. \n\n \n\n \n\nFigura 5-8 Matriz 4x4 transposta \n \n\n Desse modo, os dados podem ser lidos de modo seq\u00fcencial, como no exemplo \n\nanterior por\u00e9m, os valores dos pixels ser\u00e3o referentes aos valores dos pixels das colunas da \n\nimagem. A figura 5-9 mostra como os dados chegam ao primeiro flip-flop e, logo depois ao \n\nacumulador. \n\n \n\n \n\nFigura 5-9 Leitura seq\u00fc\u00eancia dos bits da matriz 4x4 transposta \n\n \n\n Para que fosse poss\u00edvel a leitura dos dados na forma transposta realizaram-se alguns \n\ntestes para se observar como os valores seriam apresentados para a integra\u00e7\u00e3o. Para tal fez-\n\nse uso de dois contadores: um contador de oito bits e um outro de nove bits. A maneira \n\n\n\n 84\n\ncomo os contadores foram interligados pode ser observada na figura 5-10, aonde o contador \n\ndenominado \u201ccont_vert\u201d \u00e9 alimentado com os endere\u00e7os mais significativos, gerados pelo \n\nbloco l\u00f3gico \u201ccontrole_memorias\u201d. Quando a contagem do contador \u201ccont_vert\u201d atingir \n\nseu valor m\u00e1ximo a contagem estoura e um bit \u201ccarry out\u201d \u00e9 enviado ao segundo contador, \n\n\u201ccont_vert1\u201d , como sendo \u201ccarry in\u201d, complementando assim a contagem do segundo \n\ncontador. Com isso, a concatena\u00e7\u00e3o das sa\u00eddas dos dois contadores fornece os novos \n\nendere\u00e7os para que os dados possam ser lidos das mem\u00f3rias de forma transposta. \n\n \n\n \n\nFigura 5-10 Contadores para a transposi\u00e7\u00e3o dos endere\u00e7os das mem\u00f3rias \n \n\n Para aproveitar as mesmas linhas de endere\u00e7os, utilizadas na etapa de integra\u00e7\u00e3o das \n\nlinhas horizontais, optou-se por alocar a etapa de transposi\u00e7\u00e3o dos endere\u00e7os no mesmo \n\nbloco l\u00f3gico \u201ccontrole_memorias\u201d . Sendo assim a mesma sa\u00edda do bloco l\u00f3gico poder\u00e1 \n\nser usada para a leitura dos dados tanto na forma normal quanto na forma transposta. Para \n\nrealizar essa tarefa utilizou-se um multiplexador de duas entradas cada uma com dezessete \n\nbits de resolu\u00e7\u00e3o. Para que a sele\u00e7\u00e3o das entradas pudesse ser realizada nos tempos \n\nadequados, utilizou-se um contador de dezessete bits. Ao t\u00e9rmino da contagem desse \n\n\n\n 85\n\ncontador, o mesmo envia um sinal \u201ccout\u201d a um flip-flop tipo D. Este \u00faltimo, por sua vez, \n\nhabilita a entrada de sele\u00e7\u00e3o do multiplexador. Dependendo do n\u00edvel do sinal gerado pelo \n\nflip-flop uma das entradas do multiplexador ser\u00e1 habilitada O diagrama esquem\u00e1tico dessa \n\netapa pode ser observado na figura 5-11. \n\n \n\n \n\nFigura 5-11 Diagrama esquem\u00e1tico da unidade de controle das mem\u00f3rias com a etapa \npara realizar a transposi\u00e7\u00e3o dos endere\u00e7os das mem\u00f3rias \n\n\n\n 86\n\n Uma vez que a sa\u00edda do multiplexador endere\u00e7a as mem\u00f3rias com os valores \n\ntranspostos, os dados a serem integrados s\u00e3o lidos das mem\u00f3rias e ent\u00e3o enviados ao CPLD \n\nrespons\u00e1vel pela etapa de integra\u00e7\u00e3o. No entanto, um novo bloco l\u00f3gico foi desenvolvido \n\nde modo que este seja respons\u00e1vel apenas pela integra\u00e7\u00e3o do sinal de v\u00eddeo na dire\u00e7\u00e3o \n\nvertical. O bloco l\u00f3gico referente a esta etapa pode ser visto na figura 5-12. \n\n \n\n \n\nFigura 5-12 Bloco l\u00f3gico do somador de pixels verticais \n \n\n O princ\u00edpio de opera\u00e7\u00e3o do bloco l\u00f3gico \u201csomador_pixels_verticais\u201d \u00e9 id\u00eantico ao \n\nda etapa de soma dos pixels horizontais. Este bloco l\u00f3gico tamb\u00e9m apresenta tr\u00eas flip-flops, \n\num acumulador e um registrador, todos com oito bits de resolu\u00e7\u00e3o. \n\n \n\n A figura 5-13 apresenta o diagrama esquem\u00e1tico do bloco l\u00f3gico \n\n\u201csomador_pixels_verticais\u201d. \n\n\n\n 87\n\n \n\nFigura 5-13 Diagrama esquem\u00e1tico do somador de pixels verticais \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n\n\n 88\n\nCap\u00edtulo 6 \n\n \n\n \n\n6 Testes e Resultados \n\n \n\n6.1 Considera\u00e7\u00f5es Iniciais \n\n \n\n Neste cap\u00edtulo ser\u00e3o apresentados alguns resultados obtidos atrav\u00e9s do circuito \n\nimplementado. \n\n \n\n Devido \u00e0s v\u00e1rias etapas do projeto ser\u00e3o apresentadas tamb\u00e9m as simula\u00e7\u00f5es de \n\nalgumas delas. Todas as simula\u00e7\u00f5es foram feitas utilizando os softwares Max-Plus II 9.4 e, \n\nQuartus II 5.1, ambos da Altera. Essas simula\u00e7\u00f5es servir\u00e3o como base para compara\u00e7\u00f5es \n\ncom os resultados obtidos do circuito implementado. Para a obten\u00e7\u00e3o dos dados do circuito \n\nimplementado, utilizou-se o analisador l\u00f3gico da empresa Tektronix, modelo TLA613. O \n\narranjo, utilizado para a obten\u00e7\u00e3o dos dados, est\u00e1 mostrado na figura 6-1. \n\n\n\n 89\n\n \n\nFigura 6-1 Hardware implementado para obten\u00e7\u00e3o dos dados \n\n \n\n \n\n6.1.1 Materiais \n\n \n\nPara a montagem de todo o hardware proposto, assim como o suporte para o \n\nfuncionamento do mesmo, foram necess\u00e1rios os seguintes recursos: \n\n \n\n Uma c\u00e2mera monocrom\u00e1tica CCD; \n\n Kit da Altera (University Program UP2 Development Kit); \n\n Placa de prototipagem do tipo Proto Board; \n\n\n\n 90\n\n Oscilosc\u00f3pio; \n\n Fontes de alimenta\u00e7\u00e3o; \n\n Analisador L\u00f3gico Tecktronix, modelo TLA 613; \n\n Microcomputador, para simula\u00e7\u00f5es e programa\u00e7\u00e3o do CPLD; \n\n Ferramentas de desenvolvimento MAX + Plus II e Quartus II, da empresa Altera. \n\n \n\n \n\n6.1.2 Simula\u00e7\u00e3o da unidade de controle \n\n \n\nA simula\u00e7\u00e3o da unidade de controle, descrita no cap\u00edtulo 4, pode ser observada a \n\nseguir, para um caso hipot\u00e9tico de um sinal de v\u00eddeo com cinco linhas. \n\n \n\n \n \n\nFigura 6-2 Simula\u00e7\u00e3o da Unidade de Controle \n\n\n\n 91\n\n Como pode ser visto na figura 6-2, a simula\u00e7\u00e3o da unidade de controle foi realizada \n\nno software MAX + Plus II 9.4. Sendo assim, observa-se que os canais de entrada \u201cclk\u201d, \n\n\u201csinc_comp\u201d e \u201csinc_vert\u201d, que representam os sinais de clock, sincronismo composto e \n\nsincronismo vertical, respectivamente, est\u00e3o de acordo com os sinais que ser\u00e3o transmitidos \n\nao CPLD, pelo separador de sincronismo. Com isso, alguns sinais de sa\u00edda como por \n\nexemplo, o sinal \u201cstart\u201d, que representa o in\u00edcio das linhas ativas de v\u00eddeo, pode ser visto \n\nde maneira clara na simula\u00e7\u00e3o. Al\u00e9m do mais, o sinal \u201clinha_ativa\u201d,que representa as cinco \n\nlinhas de v\u00eddeo, tem seu in\u00edcio na borda de descida do sinal \u201cstart\u201d. Outros sinais podem \n\nser observados pela simula\u00e7\u00e3o, como \u00e9 o caso dos sinais \u201cfim_pixel\u201d, que apresenta um \n\npulso a cada contagem de 512, e os sinais de endere\u00e7amento das mem\u00f3rias representados \n\npelos nomes \u201cout[16..0]\u201d e \u201cendere\u00e7os_transpostos[16..0]\u201d. \n\n \n\n \n\n6.1.3 Simula\u00e7\u00e3o e Teste do somador de pixels horizontais \n\n \n\nAs simula\u00e7\u00f5es dessa etapa foram realizadas no software Quartus II 5.1 e, os \n\nresultados podem ser observados nas figuras que se seguem. \n\n \n\n\n\n 92\n\n \n\nFigura 6-3 Simula\u00e7\u00e3o do somador de pixels horizontais com dezessete bits de \nresolu\u00e7\u00e3o \n\n \n\n Observando a figura 6-3, nota-se que como a sa\u00edda do \u201cacum_horiz\u201d \u00e9 de dezessete \n\nbits, quando a contagem ultrapassa o valor de 256 (oito bits de dados), os bits mais \n\nsignificativos n\u00e3o s\u00e3o perdidos, o que n\u00e3o aconteceria se a sa\u00edda do acumulador fosse de \n\noito bits. Foram utilizados dezessete bits de resolu\u00e7\u00e3o devido aos n\u00fameros de pixels por \n\nlinha, 29 = 512, e \u00e0 quantidade de linhas da imagem, 28 = 256. Ainda observando a figura 6-\n\n3, para um valor arbitr\u00e1rio da entrada \u201cfim_pixel\u201d, quando ocorre um pulso nesse sinal, \n\nindicando que a contagem de pixels de uma linha de v\u00eddeo atingiu seu valor m\u00e1ximo, o \n\nacumulador horizontal \u00e9 zerado e, concomitantemente o bloco l\u00f3gico \u201creg_horiz\u201d libera \n\napenas o \u00faltimo valor do acumulador horizontal. Para garantir que apenas esse dado seja \n\ncapturado, sem a presen\u00e7a de \u201clixos\u201d um \u00faltimo bloco l\u00f3gico denominado \u201cff_horiz3\u201d \u00e9 \n\nutilizado liberando assim, apenas o valor de interesse. \n\n \n\n Como dito anteriormente, o acumulador horizontal possui uma sa\u00edda de dezessete \n\nbits no entanto, apenas os oito bits mais significativos s\u00e3o de interesse, pois com essa \n\n\n\n 93\n\nresolu\u00e7\u00e3o consegue-se a representa\u00e7\u00e3o de qualquer imagem em tons de cinza . Sendo assim \n\nrealizaram-se mais duas simula\u00e7\u00f5es. Uma apresenta os oito bits mais significativos apenas \n\nna sa\u00edda do \u00faltimo bloco l\u00f3gico (\u201cff_horiz3\u201d), e a outra realiza as opera\u00e7\u00f5es com os oito \n\nbits mais significativos a partir da sa\u00edda do acumulador horizontal (\u201cacum_horiz\u201d). Ambas \n\nas simula\u00e7\u00f5es podem ser vistas nas figuras 6-4 e 6-5 respectivamente. \n\n \n\n \n\nFigura 6-4 Simula\u00e7\u00e3o do somador de pixels horizontais. Os oito bits mais significativos \nest\u00e3o representados no canal S  \n\n \n\n \n\nFigura 6-5 Simula\u00e7\u00e3o do somador de pixels horizontais com os oito bits mais \nsignificativos \n\n \n\n\n\n 94\n\n Os testes realizados com o hardware apresentaram resultados que ser\u00e3o mostrados e \n\ndescritos a seguir. Lembrando que, para a obten\u00e7\u00e3o desses resultados, utilizou-se um \n\nanalisador l\u00f3gico de cento e dois canais da Tektronix, modelo TLA613. \n\n A figura 6-6 apresenta o resultado obtido dos valores dos dados armazenados nas \n\nmem\u00f3rias (canal A0) e os mesmos dados capturados na sa\u00edda do bloco l\u00f3gico denominado \n\n\u201cff_horiz1\u201d (canal A1). O intuito dessa etapa foi mostrar que os dados que ser\u00e3o enviados \n\nao acumulador horizontal (\u201cacum_horiz\u201d) est\u00e3o livres de ru\u00eddo, o que poderia prejudicar na \n\nopera\u00e7\u00e3o de soma. O canal CK1 est\u00e1 representando o clock do circuito. \n\n \n\n \n\nFigura 6-6 Clock do circuito (CK1), dados obtidos da mem\u00f3ria (A0) e dados obtidos \nna sa\u00edda do \"ff_horiz1\" (A1) \n\n \n\n A figura 6-8 est\u00e1 representando os dados obtidos diretamente da mem\u00f3ria (canal \n\nA0) os dados obtidos da sa\u00edda do \u201cff_horiz1\u201d e tamb\u00e9m um histograma da imagem filmada \n\nque, no caso, era uma imagem com um fundo claro homog\u00eaneo e uma figura quadrada, \n\ncomo apresentada na figura 6-7. \n\n \n\n\n\n 95\n\n \n\nFigura 6-7 Imagem filmada para obten\u00e7\u00e3o do histograma \n\n \n\n \n\nFigura 6-8 Dados da mem\u00f3ria (A0), dados do \"ff_horiz1\" e histograma da imagem \n \n\n As figuras 6-9 e 6-10 representam, respectivamente, a imagem filmada com o objeto \n\ndeslocado na cena e os dados obtidos da mem\u00f3ria , da sa\u00edda do \u201cff_horiz1\u201d e o histograma \n\nda imagem filmada. \n\n\n\n 96\n\n \n\nFigura 6-9 Imagem  com o objeto deslocado na cena  \n\n \n\n \n\nFigura 6-10 Dados da mem\u00f3ria (A0), dados do \"ff_horiz1\" (A1) e histograma da \nimagem com o objeto deslocado na cena \n\n \n\nA figura 6-11 apresenta, no canal CK1 o clock do circuito, no canal A0 os dados \n\nobtidos diretamente das mem\u00f3rias (durante o ciclo de leitura das mesmas), no canal A1 \n\n\n\n 97\n\nest\u00e3o representados os dados obtidos na sa\u00edda do \u201cff_horiz1\u201d e, por \u00faltimo, no canal A2 \n\nest\u00e3o representados os oito bits mais significativos resultantes da sa\u00edda do acumulador \n\nhorizontal (\u201cs_acum [16..9]\u201d, vide figura 5-5). Os dados obtidos da sa\u00edda do acumulador \n\nser\u00e3o enviados a outros blocos l\u00f3gicos, que ser\u00e3o descritos mais adiante. \n\n \n\n \n\nFigura 6-11 Clock do circuito (CK1), dados das mem\u00f3rias (A0), dados na sa\u00edda do \n\"ff_horiz1\" (A1) e oito bits mais significativos do resultado da sa\u00edda do acumulador \n\nhorizontal (A2) \n\n \n\nA figura 6-12 apresenta a mesma situa\u00e7\u00e3o mostrada na figura 6-10 por\u00e9m com os \n\ndados apresentados em forma de lista e em forma de ondas. \n\n \n\n\n\n 98\n\n \n\nFigura 6-12 Dados amostrados em forma de ondas e lista \n \n\nUma vez que os valores da soma truncada foram obtidos, lembrando que apenas os \n\noito bits mais significativos est\u00e3o sendo levados em conta, esses valores s\u00e3o enviados a um \n\nregistrador de oito bits (constitu\u00eddo por oito flip-flops tipo D) denominado \u201cff_horiz2\u201d cuja \n\nfun\u00e7\u00e3o \u00e9 armazenar esses dados por um per\u00edodo de clock e ent\u00e3o envi\u00e1-los a um latch de \n\noito bits (\u201creg_horiz\u201d) que ir\u00e1 liberar os dados apenas quando o gate receber um pulso. \n\nEste pulso ser\u00e1 respons\u00e1vel pela libera\u00e7\u00e3o do dado que ir\u00e1 para a \u00faltima etapa, constitu\u00edda \n\npelo registrador composto de oito flip-flops tipo D, denominado \u201cff_horiz3\u201d. O sinal \n\nrespons\u00e1vel pela libera\u00e7\u00e3o dos dados do \u201creg_horiz\u201d ser\u00e1 o sinal enviado pela unidade de \n\ncontrole, mais especificamente o bloco l\u00f3gico \u201ccontrole_memorias\u201d que possui um \n\ncontador de nove bits, respons\u00e1vel pela contagem dos pixels de uma linha ativa de v\u00eddeo. \n\nSendo assim, a cada final de contagem o contador libera um pulso (\u201cfim_pixel\u201d) e este, por \n\n\n\n 99\n\nsua vez, aciona o gate do \u201creg_horiz\u201d liberando assim, o dado correspondente \u00e0 soma \n\ntruncada no final de uma linha ativa de v\u00eddeo. A figura 6-13 representa os oito bits mais \n\nsignificantes na sa\u00edda do acumulador horizontal (\u201cacum_horiz\u201d), representados pelo canal \n\nA2 e o dado resultante da sa\u00edda do registrador (\u201creg_horiz\u201d), no canal A3. Nota-se tamb\u00e9m \n\nque o sinal \u201cfim_pixel\u201d \u00e9 respons\u00e1vel por \u201czerar\u201d o acumulador horizontal a cada fim de \n\ncontagem dos pixels de cada linha ativa de v\u00eddeo. \n\n \n\n \n\nFigura 6-13 Dados amostrados. Canal A2: sa\u00edda do acumulador horizontal. Canal A3: \nsa\u00edda do registrador, com o valor da soma truncada no final de uma linha ativa de \n\nv\u00eddeo \n \n\nComo pode ser observado na figura 6-13, o resultado de interesse \u00e9 o dado \u201cAC\u201d, \n\nrepresentado na forma hexadecimal. Este dado pode ser armazenado em uma mem\u00f3ria, \n\njuntamente com os dados resultantes da soma dos pixels das demais linhas e ent\u00e3o, \n\nenviados a um microprocessador para uma futura compara\u00e7\u00e3o dos dados. \n\n \n\n  \n\n\n\n 100\n\n6.1.4 Simula\u00e7\u00e3o e teste do somador de pixels verticais \n\n \n\nV\u00e1rias simula\u00e7\u00f5es foram realizadas para a etapa de soma dos pixels verticais. \n\n \n\nA figura 6-14 mostra a simula\u00e7\u00e3o realizada para a gera\u00e7\u00e3o dos endere\u00e7os \n\ntranspostos que ser\u00e3o utilizados para a leitura das mem\u00f3rias na etapa da integra\u00e7\u00e3o dos \n\npixels na dire\u00e7\u00e3o vertical. O diagrama esquem\u00e1tico desta etapa est\u00e1 representado na figura \n\n5-10 do Cap\u00edtulo 5. \n\n \n\n \n\nFigura 6-14 Simula\u00e7\u00e3o dos endere\u00e7os transpostos \n \n\nPela simula\u00e7\u00e3o apresentada, observa-se que a sa\u00edda \u201cs_cont_vert\u201d apresenta os \n\nvalores correspondentes dos endere\u00e7os dos pixels na dire\u00e7\u00e3o vertical ou seja, o valor \u201c0\u201d \n\ncorresponde ao endere\u00e7o do primeiro pixel da primeira linha de v\u00eddeo e, por sua vez, o \n\nvalor \u201c512\u201d corresponde ao endere\u00e7o do primeiro pixel da segunda linha e assim por diante. \n\n \n\n Quando a contagem atingir seu valor m\u00e1ximo, que nesse caso ser\u00e1 de 256, o \n\n\u201ccont_vert\u201d (figura 5-10) produz um bit de \u201ccarry out\u201d esse bit ser\u00e1 enviado a um outro \n\n\n\n 101\n\ncontador,denominado \u201ccont_vert1\u201d (figura 5-10) como sendo um bit de \u201ccarry in\u201d, \n\ncomplementando assim a contagem. Assim, ao t\u00e9rmino de cada ciclo de contagem, os \n\nvalores dos endere\u00e7os dos pixels v\u00e3o sendo incrementados, como pode ser observado na \n\nfigura 6-15. \n\n \n\n \n\nFigura 6-15 Simula\u00e7\u00e3o dos endere\u00e7os transpostos \n \n\n Realizou-se tamb\u00e9m, a simula\u00e7\u00e3o da unidade respons\u00e1vel pela soma dos pixels na \n\ndire\u00e7\u00e3o vertical. A figura 6-16 representa o comportamento desta etapa. \n\n \n\n \n\nFigura 6-16 Simula\u00e7\u00e3o do somador de pixels na dire\u00e7\u00e3o vertical com dezessete bits de \nresolu\u00e7\u00e3o \n\n\n\n 102\n\n Na simula\u00e7\u00e3o, representada na figura 6-16, as entradas \u201cendere\u00e7os\u201d, \u201cdados\u201d e \n\n\u201cfim_pixel\u201d s\u00e3o aleat\u00f3rias. Os valores obtidos nas sa\u00eddas \u201cs_reg_vert\u201d e \u201cs\u201d representam o \n\nvalor da soma truncada dos valores dos pixels na dire\u00e7\u00e3o vertical da imagem. \n\n Uma outra simula\u00e7\u00e3o foi realizada mostrando na sa\u00edda \u201cs\u201d apenas o valor \n\ncorrespondente aos oito bits mais significativos dos dezessetes que comp\u00f5es os dados na \n\nsa\u00edda do acumulador, denominado \u201cacum_vert\u201d. Esta simula\u00e7\u00e3o pode ser vista na figura 6-\n\n17. \n\n \n\n \n\nFigura 6-17 Simula\u00e7\u00e3o do somador de pixels verticais mostrando os oito bits mais \nsignificativos na sa\u00edda. \n\n \n\n Para os testes realizados no hardware foram adotados os mesmos procedimentos do \n\nsomador de pixels horizontais. \n\n \n\n \u00c9 importante ressaltar que, observando-se a figura 5-11 (Cap\u00edtulo 5), os endere\u00e7os \n\nque ser\u00e3o ativados para a leitura dos dados das mem\u00f3rias ser\u00e3o os endere\u00e7os transpostos, \n\n\n\n 103\n\ngerados pelos contadores descritos anteriormente. Para ativar os contadores, que produzem \n\nos endere\u00e7os transpostos, utilizou-se um contador de dezessete bits. Quando esse contador \n\natinge seu valor m\u00e1ximo um bit \u201ccarry out\u201d \u00e9 enviado ao contador principal da etapa de \n\ntransposi\u00e7\u00e3o de endere\u00e7os, com o objetivo de habilitar esse contador e, assim come\u00e7ar a \n\ngera, os endere\u00e7os transpostos. Outra fun\u00e7\u00e3o do bit \u201ccarry out\u201d \u00e9 servir como clock de um \n\nflip-flop tipo D que ir\u00e1 manter o sinal de sa\u00edda desse flip-flop em n\u00edvel alto durante o tempo \n\nde contagem do contador de dezessete bits possibilitando assim, que a soma dos pixels na \n\nvertical seja realizada no tempo adequado. \n\n \n\n Alguns testes realizados s\u00e3o representados pelas figuras que se seguem. \n\n \n\n \n\nFigura 6-18 Dados lidos diretamente das mem\u00f3rias (A0) e \"carry out\" (CK1) \n \n\n Na figura 6-18 o canal CK1 representa quando o contador de dezessete bits atinge \n\nseu valor m\u00e1ximo, gerando um pulso. A partir desse momento o multiplex \u00e9 habilitado, \n\natrav\u00e9s de um flip-flop tipo D e apenas os endere\u00e7os transpostos s\u00e3o lidos nas mem\u00f3rias. \n\nNo canal (A0) os valores a partir do pulso representado em CK1 s\u00e3o os valores transpostos \n\nlidos das mem\u00f3rias. \n\n\n\n 104\n\n A pr\u00f3xima figura apresenta os dados obtidos das mem\u00f3rias (A0) e na sa\u00edda do \n\nprimeiro registrador, denominado \u201cff_vert1\u201d (A1). \n\n \n\n \n\nFigura 6-19 Leitura de dados das mem\u00f3rias (A0) e leitura de dados do \"ff_vert1\" (A1) \n \n\n Tomando a imagem mostrada na figura 6-7 obtiveram-se os resultados apresentados \n\nna figura 6-19. \n\n \n\n\n\n 105\n\n \n\nFigura 6-20 Dados obtido da uma imagem de um objeto escuro em um fundo claro \n\n \n\n Na figura acima, o canal CK1 est\u00e1 representando o \u201ccarry out\u201d do contador de \n\ndezessete bits, o canal A0 representa os dados na sa\u00edda do \u201cff_vert1\u201d e, o canal A2 est\u00e1 \n\nmostrando o dado resultante da soma dos pixels de uma coluna vertical. Na figura tamb\u00e9m \n\nest\u00e3o representados os dados na foram de lista e um histograma da imagem. \n\n \n\n A figura 6-21 mostra os dados na forma de ondas e lista e tamb\u00e9m um histograma \n\nda imagem filmada. Neste caso a imagem foi a mesma representada na figura 6-9. \n\n \n\n\n\n 106\n\n \n\nFigura 6-21 Dados obtidos de um objeto escuro deslocado na cena \n \n\n \n\n6.2 Considera\u00e7\u00f5es Finais  \n\n \n\nDurante os testes com o hardware, todos os n\u00edveis de tens\u00e3o utilizados foram \n\ncompat\u00edveis com o n\u00edvel TTL. Todas as informa\u00e7\u00f5es t\u00e9cnicas dos dispositivos e aparelhos, \n\nem especial o analisador l\u00f3gico TLA 613, podem ser encontradas em manuais e datasheets \n\nespec\u00edficos de cada fabricante. As imped\u00e2ncias de entrada e sa\u00edda do sinal de v\u00eddeo \n\ncomposto s\u00e3o de 75 ohms. \n\n\n\n 107\n\n A freq\u00fc\u00eancia do clock do circuito \u00e9 de 10 MHz e, para a obten\u00e7\u00e3o dessa freq\u00fc\u00eancia \n\nfoi realizada uma divis\u00e3o por 2 da freq\u00fc\u00eancia fornecida por um oscilador de cristal de 20 \n\nMHz. Para realizar essa opera\u00e7\u00e3o de divis\u00e3o utilizou-se o bit menos significativo de um \n\ncontador de nove bits. \n\n \n\n Para a programa\u00e7\u00e3o dos CPLDs utilizou-se a interface JTAG (Joint Test Action \n\nGroup), desenvolvida nos anos 80, segundo o padr\u00e3o IEEE 1149.1-1990. Esta interface \n\npermite testar e programar um CPLD pela porta serial ou paralela. A conex\u00e3o com o chip \u00e9 \n\nfeita por quatro pinos dedicados: TCK (Test Clock), TMS (Test Mode Select Input), TDI \n\n(Test Data Input) e TDO (Test Data Output). \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n\n\n 108\n\nCap\u00edtulo 7 \n\n \n\n \n\n7 Conclus\u00f5es \n\n \n\n7.1 Considera\u00e7\u00f5es Iniciais \n\n \n\nO processamento de v\u00eddeo e a vis\u00e3o computacional s\u00e3o \u00e1reas que est\u00e3o crescendo \n\nmuito rapidamente nos \u00faltimos anos e, possuem aplica\u00e7\u00f5es em diversas \u00e1reas, tais como: \n\nvis\u00e3o de m\u00e1quina, sistemas de vigil\u00e2ncia, an\u00e1lise de movimentos humanos, sistemas de \n\ndetec\u00e7\u00e3o e rastreamento de pedestres e ve\u00edculos, dentre outras. \n\n \n\nMuitas das aplica\u00e7\u00f5es de processamento de v\u00eddeo e vis\u00e3o computacional requerem \n\nprocessamento em tempo real. Uma das maneiras de se obter altas taxas de processamento \n\nnestas aplica\u00e7\u00f5es \u00e9 pela utiliza\u00e7\u00e3o de arquiteturas e estruturas de hardware especializadas e \n\ndedicadas. Levando-se em considera\u00e7\u00e3o essa abordagem, foi desenvolvido e implementado \n\nneste trabalho um sistema dedicado, com o objetivo de detectar a exist\u00eancia de \n\nmovimentos, em seq\u00fc\u00eancias de v\u00eddeo, obtidas do sinal fornecido por uma c\u00e2mera CCD \n\n(Charge-Coupled Device), monocrom\u00e1tica. A implementa\u00e7\u00e3o do sistema foi feita \n\nutilizando dispositivos de l\u00f3gica program\u00e1vel complexa (CPLDs). \n\n \n\n\n\n 109\n\nTodo o hardware desenvolvido foi projetado e confeccionado no Laborat\u00f3rio de \n\nInstrumenta\u00e7\u00e3o Virtual Microprocessada, na Escola de Engenharia da USP de S\u00e3o Carlos. \n\nPara a confec\u00e7\u00e3o das placas de circuito impresso utilizou- se um equipamento (fresadora \n\nLPKF para circuitos impressos) que permite a confec\u00e7\u00e3o de placas de circuito impresso de \n\ndupla face. \n\n \n\nComo dito anteriormente, no cap\u00edtulo 4, utilizaram-se dois CPLDs para realizar o \n\nprocessamento do sinal de v\u00eddeo. Isto foi necess\u00e1rio pois somente a unidade de controle, \n\nrespons\u00e1vel pelo armazenamento da imagem nas mem\u00f3rias, utilizou 66 pinos de I/O de um \n\ntotal de 68 (97%) e, 65 macroc\u00e9lulas sendo, que esta fam\u00edlia de CPLDs possui um total de \n\n128 ou seja, 51% das macroc\u00e9lulas estavam sendo utilizadas. Para a etapa de integra\u00e7\u00e3o das \n\nlinhas utilizou-se um segundo CPLD no entanto, os testes foram realizados separadamente \n\npara a integra\u00e7\u00e3o das linhas horizontais e verticais. \n\n \n\nDurante a integra\u00e7\u00e3o das linhas na dire\u00e7\u00e3o horizontal foi utilizado um total de 75 \n\nmacroc\u00e9lulas (59 % da capacidade) e 55 pinos de I/O (81%). Para a integra\u00e7\u00e3o na dire\u00e7\u00e3o \n\nvertical os mesmos n\u00fameros e porcentagens foram observados. \u00c9 importante ressaltar que o \n\nn\u00famero total de pinos utilizados , para cada dire\u00e7\u00e3o de integra\u00e7\u00e3o \u00e9 alto devido ao fato da \n\nnecessidade de se observar os dados na sa\u00edda de cada bloco l\u00f3gico. Sendo assim, uma vez \n\nque o sistema de integra\u00e7\u00e3o esteja funcionando corretamente pode interligar as sa\u00eddas e \n\nentradas dos blocos l\u00f3gicos diminuindo assim o n\u00famero total de pinos utilizados. \n\n \n\nUma alternativa encontrada foi a utiliza\u00e7\u00e3o de um dispositivo mais denso que \n\nsuportaria toda a etapa de controle e integra\u00e7\u00e3o. Para tal utilizou-se o FPGA \n\n\n\n 110\n\nEP1C6Q240CB, pertencente \u00e0 fam\u00edlia Cyclone II da Altera. No entanto, devido a \n\nproblemas de funcionamento, n\u00e3o foi poss\u00edvel realizar os testes a tempo. \n\n \n\n \n\n7.2 An\u00e1lise dos Resultados \n\n \n\nOs resultados obtidos, tanto os realizados atrav\u00e9s da simula\u00e7\u00e3o, utilizando os \n\nsoftwares MAX + Plus II e Quartus II, quanto os obtido atrav\u00e9s do hardware implementado \n\nforam apresentados no cap\u00edtulo anterior. De acordo com a simula\u00e7\u00e3o realizada para a \n\nunidade de controle (MAX + Plus II), que pode ser observada na figura 6-1 observou-se \n\nque, mesmo com as entradas aleat\u00f3rias impostas, os resultados apresentaram-se coerentes e \n\nquando programadas na CPLD (interface JTAG) seu desempenho foi como o esperado, \n\npois as imagens capturadas pela c\u00e2mera CCD foram armazenadas nas mem\u00f3rias. \n\n \n\nCom rela\u00e7\u00e3o \u00e0s etapas de integra\u00e7\u00e3o do sinal de v\u00eddeo tanto na dire\u00e7\u00e3o horizontal \n\nquanto na vertical, as simula\u00e7\u00f5es realizadas apresentaram resultados satisfat\u00f3rios ao que se \n\nesperava tanto quando realizadas com os dezessete bits de resolu\u00e7\u00e3o quanto quando \n\nrealizadas apenas os oito bits mais significativos. V\u00e1rias simula\u00e7\u00f5es foram realizadas para a \n\netapa de endere\u00e7amento das mem\u00f3rias, para a leitura dos dados, durante a etapa de \n\nintegra\u00e7\u00e3o do sinal de v\u00eddeo na dire\u00e7\u00e3o vertical. Os resultados dessas simula\u00e7\u00f5es est\u00e3o de \n\nacordo com o que foi proposto. \n\n \n\n\n\n 111\n\n Os resultados obtidos diretamente do hardware, utilizando-se o analisador l\u00f3gico, se \n\ncomportaram de maneira semelhante aos resultados das simula\u00e7\u00f5es, demonstrando que o \n\nprop\u00f3sito de se adquirir o valor da soma truncada no final de cada linha ativa de v\u00eddeo foi \n\natingido. A maior dificuldade at\u00e9 ent\u00e3o havia sido a aquisi\u00e7\u00e3o desses valores quando a \n\nintegra\u00e7\u00e3o acontecia na dire\u00e7\u00e3o vertical, pois como o tempo de atualiza\u00e7\u00e3o dos dados no \n\nanalisador l\u00f3gico \u00e9 da ordem de alguns segundos, o processamento dos dados obtidos \n\ndiretamente do hardware apresentava um per\u00edodo de atraso. Sendo assim, o tempo para \n\ncome\u00e7ar a adquirir os valores da integra\u00e7\u00e3o nessa dire\u00e7\u00e3o apresentava um atraso de \n\naproximadamente tr\u00eas segundos. \n\n \n\n O sistema desenvolvido gera para cada imagem armazenada na mem\u00f3ria os \n\nhistogramas de intensidade vertical e horizontal atrav\u00e9s da integra\u00e7\u00e3o dos pixels da \n\nimagem. Estes histogramas ficam dispon\u00edveis para serem enviados a um sistema de \n\nprocessamento simples, como um microcontrolador, que ficar\u00e1 encarregado de process\u00e1-los \n\npara fornecer dados da ocorr\u00eancia de movimento nas seq\u00fc\u00eancias de imagens adquiridas. \n\n \n\n Como resultado do trabalho desenvolvido pode-se concluir que a metodologia \n\nproposta para detec\u00e7\u00e3o de movimento \u00e9 vi\u00e1vel, por\u00e9m grande esfor\u00e7o ainda \u00e9 necess\u00e1rio \n\npara produzir um sistema completo e dedicado para a detec\u00e7\u00e3o de movimentos em \n\nseq\u00fc\u00eancias de imagens. \n\n \n\n \n\n \n\n \n\n\n\n 112\n\n7.3 Propostas para Trabalhos Futuros \n\n \n\nCom rela\u00e7\u00e3o ao projeto desenvolvido nesse trabalho, algumas melhorias podem ser \n\nfeitas. Primeiramente poder-se-ia utilizar um dispositivo de l\u00f3gica program\u00e1vel de maior \n\ncapacidade, tornando, dessa maneira, o hardware mais compacto. \n\n \n\nA etapa seguinte, n\u00e3o realizada, \u00e9 a utiliza\u00e7\u00e3o de um microcontrolador para realizar o \n\nprocessamento que determine a exist\u00eancia de movimento a partir dos histogramas de \n\nintensidade das imagens. \n\n \n\nUma outra proposta para trabalhos futuros seria a implementa\u00e7\u00e3o de um sistema que, \n\na partir da informa\u00e7\u00e3o dos dados da integra\u00e7\u00e3o do sinal de v\u00eddeo, este pudesse realizar o \n\nrastreamento (\u201ctracking\u201d) do objeto na cena. Por\u00e9m sabe-se que essa n\u00e3o \u00e9 uma tarefa \n\nmuito f\u00e1cil pois v\u00e1rias medidas teriam que ser levadas em considera\u00e7\u00e3o como por exemplo: \n\no fundo da imagem, tamanho e textura do objeto, oclus\u00e3o, parcial ou total, entre outras. \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n\n\n 113\n\nRefer\u00eancias Bibliogr\u00e1ficas \n\n \n\nALTERA, Corp. (1998). Advantages of ISP-Based PLDs over Tradicional PLDs. Product \nInformation Bulletin, n. 24. \n \nALTERA, Corp. (2002). CPLDs x FPGAs, Comparing High-Capacity  Programmable \nLogic. Product Information Bulletin, n.18. \n \nALTERA, Corp. (2003). Cyclone Devices Handbook, 2003. Dispon\u00edvel em \nwww.altera.com. \n \nANALOG DEVICES, (2005). AD5424, 8bit, High Bandwidth, 20.4MSPS DIGITAL-TO-\nANALOG CONVERTER (Datasheet). \n \nARANDA, J.; CLIMENT, J.; GRAU, A. (1998). A FPGA Implementation of a Video Rate \nMulti-Target Tracking System. IEEE Computer Society \u2013 Digital Library, (\u00faltimo acesso: \n10 Agosto, 2005). \n \nBOURIDANE, A. et al. (1999). A high level FPGA-based abstract machine for image \nprocessing. Journal of System Architecture, v.45, p. 809-824. \n \nBR\u00c9MOND, F.; THONNAT, M. (1998). Tracking Multiple Nonrigid Objects in V\u00eddeo \nSequences. IEEE Transactions On Circuits And Systems For Video Tecnology, v.8, n.5, \nSeptember. \n \nBROWN, S.; ROSE, J. (1996). FPGA and CPLD Architectures : A Tutorial. IEEE Design \n&amp; Test Of Computers, v.13, n.2, p. 42-57. \n \nBUENAPOSADA, J. M.; BAUMELA, L. (2002). Real-Time Tracking and Estimation of \nPlane Pose. Proc. ICPR 2002, v. 2, p. 697-700, IEEE. Quebec, Canada, August. \n \nBULLOCK, D.; ZELEK, J. (2002). Real-Time Tracking for Visual Interface Applications \nin Cluttered and Occluding Situations. http://www.cipprs.org/vi2002/pdf/s2-3.pdf  (\u00faltimo \nacesso: 10 Agosto, 2005). \n \nCHAN, P. K.; MOURAD, S. (1994). Digital Design Using Field Programmable Gate \nArrays. Prentice Hall. \n \nCLARKE, J. C.; ZISSERMAN, A. (1996). Detection and Tracking of Independent Motion. \nImage and Vision Computing, v. 14, p. 565-572. \n \n\nhttp://www.cipprs.org/vi2002/pdf/s2-3.pdf\n\n\n 114\n\nCOIFMAN, B.; BEYMER, D. (1998). A Real-Time Computer Vision System for Vehicle \nTracking. http://www.ceegs.ohio-state.edu/~coifman/documents/TR-Crw.pdf  (\u00faltimo \nacesso: 10 Agosto, 2005). \n \nCONEXANT (1999). 20 MSPS Monolithic CMOS 8-bit Flash Video A/D Converter \n(Datasheet). \n \nELANTEC (1993). EL4581C Sync Separator, 50% Slice, S-H, Filter (Datasheet). \n \nERDEM, \u00c7. E.; TEKALP, A. M.; SANKUR, B. (2003). V\u00eddeo Object Tracking With \nFeedback of Performance Measures. IEEE Transactions On Circuits And Systems For \nVideo Technology, v. 13, n. 4, p.310-324, April. \n \nFENG, Y.; HARVEY, A. L.; JENNINGS, A. (2003). Background Modeling For Tracking \nObject Movement. http://www.aprs.org.au/wdic2003/CDROM/123.pdf  (\u00faltimo acesso: 10 \nAgosto, 2005). \n \nF\u00d6LDESY, P.; SZATM\u00c1RI, I.; ZAR\u00c1NDY, \u00c1. (2002). Moving Object Tracking on \nPanoramic I mages. http://www.sztaki.hu/~szatmari/CNNA2002_PAL_camera.pdf \n(\u00faltimo acesso: 10 Agosto, 2005). \n \nFORESTI, G. L. (1998). A Real-Time System for Video Surveillance of Unattended \nOutdoor Environments. IEEE Transactions On Circuits And Systems For Video \nTechnology, v. 8, n. 6, p. 697-704, October. \n \nGARDNER, W. F.; LAWTON, D. T. (1996). Interactive Model-Based Vehicle Tracking. \nIEEE Transactions On Pattern Analysis And Machine Intelligence, v.18, n.11, November. \n \nGHIASI, S.; MOON, H. J.; SARRAFZADEH, M. (2004). Collaborative and \nReconfigurable Object Tracking. The Journal Of Supercomputing, v.30, p. 213-238. \n \nGREENE, J. et al. (1993). Antifuse Field Programmable Gate Arrays. Proceedings Of The \nIEEE, v.81, n.7, July. \n \nGU\u0160TIN, V. (1998). An FPGA extension to ALU functions. Microprocessors and \nMicrosystems, v.22, p. 501-508, December. \n \nHAUCK, S. (1998). The Roles of FPGA\u2019s in Reprogrammable Systems. Proceedings Of \nThe IEEE, v.86, n.4, p. 615-638, April. \n \nI. SZATM\u00c1RI (2000). The implementation of a Nonlinear Wave Metric for Image Analysis \nand Classification on the 64x64 I/O CNN-UM Chip. CNNA 2000, 6th IEEE International \nWorkshop on Cellular Neural Networks and their Applications, May 23-25, 2000, \nUniversity of Catania, Italy. \n \nJENKINS, J. H. (1994). Designing With FPGAs and CPLDs. Prentice Hall. \n \n\nhttp://www.aprs.org.au/wdic2003/CDROM/123.pdf\nhttp://www.sztaki.hu/%7Eszatmari/CNNA2002_PAL_camera.pdf\n\n\n 115\n\nKAKADIARIS, I.; METAXAS, D. (2000). Model-Based Estimation of 3D Human Motion. \nIEEE Transactions On Pattern Analysis And Machine Intelligence, v.22, n.12, December. \n \nKR\u00dcEGER, S.; CALWAY, A. (1996). Multiresolution Motion Estimation Using an Affine \nModel. CSTR 96-002, University of Bristol \u2013 Departament of Computer Science, February. \n \nMARQUES FILHO, O.; VIEIRA NETO, H. (1999). Processamento Digital de Imagens. \nRio de Janeiro, Brasport. \n \nMINHONI, D. C. R.; RODA, V. . Detec\u00e7\u00e3o de Movimento de Objetos em Tempo Real \nutilizando Dispositivos de L\u00f3gica Program\u00e1vel Complexa. II Southern Conference on \nProgrammable Logic \u2013 Mar Del Plata, Argentina (2005). \n \nNINCE, U. S. (1991). Sistemas de Televis\u00e3o e V\u00eddeo \u2013 C\u00e2meras, V\u00eddeo-Teipes, Televis\u00e3o. \n2. ed. Livros T\u00e9cnicos e Cient\u00edficos Editora. \n \nNIU, W.; JIAO, L.; HAN, D.; WANG, Y. F. (2004). Real-Time Multi-person Tracking in \nVideo Surveillance. http://www.cs.ucsb.edu/~yfwang/papers/PCM03.pdf  (\u00faltimo acesso: \n10 Agosto, 2005). \n \nOLDFIELD, J. V.; DORF, R. C, (1995). Field Programmable Gate Array \u2013 Reconfigurable \nLogic for Rapid Prototypying and Implementation of Digital Systems. 1. ed. John Wiley &amp; \nSons, Inc \u2013 Wiley Interscience. \n \nOLIVEIRA, I. N. S. (2003). Metodologia para Detec\u00e7\u00e3o R\u00e1pida de Movimento em \nSequ\u00eancias de Imagens. Tese (Doutorado) \u2013 Universidade de S\u00e3o Paulo, S\u00e3o Carlos, Brasil. \n \nPARK, J.; YAGI, N.; ENAMI, K.; AIZAWA, K.; HATORI, M. (1994). Estimation of \nCamera Parameters from Image Sequence for Model-Based Video Coding. IEEE \nTransactions On Circuits And Systems For Video Technology, v. 4, n. 3, p. 288-296, June. \n \nPEDRINO, E. C. (2003). Arquitetura Pipeline para Processamento Morfol\u00f3gico de \nImagens Bin\u00e1rias em Tempo Real utilizando Dispositivos de L\u00f3gica Program\u00e1vel \nComplexa. Disserta\u00e7\u00e3o (Mestrado) \u2013 Universidade de S\u00e3o Paulo, S\u00e3o Carlos, Brasil. \n \nHEIKKIL\u00c4, J.; SILV\u00c9N, O. (2004). A Real-Time System for Monitoring of Ciclists and \nPedestrians. Image and Vision Computing, v. 22, p. 563-570. \n \nPIO, J. L. S.; CAMPOS, M. F. M. (2002). Percep\u00e7\u00e3o do Movimento por Agentes Visuais \nM\u00f3veis. Belo Horizonte, Brasil, Universidade Federal de Minas Gerais. Relat\u00f3rio T\u00e9cnico. \n30. \n \nRICQUEBOURG, Y.; BOUTHEMY, P. (2000). Real-Time Tracking of Moving Persons by \nExploiting Spatio-Temporal Image Slices. IEEE Transactions On Pattern Analysis And \nMachine Intelligence, v. 22, n. 8, p. 797-808, August. \n \n\nhttp://www.cs.ucsb.edu/%7Eyfwang/papers/PCM03.pdf\n\n\n 116\n\nROMA, N. F. V. (2001). Processadores Dedicados para Estima\u00e7\u00e3o de Movimento em \nSeq\u00fc\u00eancias de V\u00eddeo. Disserta\u00e7\u00e3o (Mestrado) \u2013 Universidade T\u00e9cnica de Lisboa, Portugal. \n \nROSE, J. et al. (1993). Architecture of Field-Programmable Gate Arrays. Proceedings Of \nThe IEEE, v.81, n.7, p. 1013-1029, July. \n \nSCHOEPFLIN, T.; CHALANA, V.; HAYNOR, D. R.; KIM, Y. (2001). Video Object \nTracking With a Sequential Hierarchy of Template Deformations. IEEE Transactions On \nCircuits And Systems For Video Technology, v. 11, n. 11, p. 1171-1182, November. \nSCHURE, A. (1964). Televis\u00e3o B\u00e1sica. Rio de Janeiro, Livraria Freitas Bastos. \n \nSEDRA, A. S.; SMITH, K. C. Microeletr\u00f4nica, 4\u00aa edi\u00e7\u00e3o, Makron Books, 2005. \n \nSENATORI, N. O. B.; SUKYS, F. (1987). Introdu\u00e7\u00e3o \u00e0 Televis\u00e3o e ao Sistema PAL-M. \nRio de Janeiro, Guanabara. \n \nSOLDEK, J.; MANTIUK, R. (1999). A reconfigurable processor based on FPGAs for \npattern recognition, processing, analysis and synthesis of images. Pattern Recognition \nLetters, v.20, p. 667-674. \n \nTEKALP, A. M. (1995). Digital Video Processing. Prentice-Hall. \n \nTEXAS  INSTRUMENTS, (2004). TLC5540, 8 bit, High-Speed, 40MSPS ANALOG-TO-\nDIGITAL CONVERTER (Datasheet). \n \nTISSAINAYAGAM, P.; SUTER, D. Object Tracking in Images Sequences using Point \nFeatures. http://www.aprs.org.au/wdic2003/CDROM/69.pdf (\u00faltimo acesso: 10 Agosto, \n2005). \n \nTHOMAS, F. et al. (1999). A hardware/software codesign for improved data acquisition in \na processor based embedded system. Microprocessors and Microsystems, v.24, p. 129-134,  \nSeptember. \n \nVASS\u00c1NYI, I. (1997). FPGAs and cellular algorithms : Two implementation examples. \nJournal of System Architecture, v.43, p. 23-26. \n \nWANG, D. (1998). Unsupervised Video Segmentation Based on Watersheds an Temporal \nTracking. IEEE Transactions On Circuits And Systems For Video Technology, v. 8, n. 5, p. \n539-546, September. \n \nWANG, Y.; DOHERTY, J.; VAN DYCK, R. E. (2000). Moving Object Tracking in Video. \nIEEE Computer Society,  Imagery Pattern Recognition Workshop, p. 95. \n \n \n \n \n \n\nhttp://www.aprs.org.au/wdic2003/CDROM/69.pdf\n\n\n 117\n\nAp\u00eandice A \n \n\n \n\nM\n\u00f3dulo de C\n\napta\u00e7\u00e3o, D\nigitaliza\u00e7\u00e3o e Exibi\u00e7\u00e3o de Im\n\nagens M\nonocrom\n\n\u00e1ticas\n\nB\n\n1\n1\n\nThursday, M\narch 02, 2006\n\nTitle\n\nSize\nD\n\nocum\nent N\n\num\nber\n\nR\nev\n\nD\nate:\n\nSheet\nof\n\n-5V\n+5V\n\nD\n0\n\nD\n1\n\nD\n2\n\nD\n3\n\nD\n4\n\nD\n5\n\nD\n6\n\nD\n7\n\n+5V\n\nvs csbpodd/even\n\ncr\n\n+5V\n\ncr\n\nclk\n+5V\n\nB 0\n\nB 1\n\nB 2\n\nB 3\n\nB 5\n\nB 6\n\nB 7\n\nB 4\n\nanalog out\nout\n\nB0B1B2B3B4B5B6B7r/w\n\nB0B1B2B3B4B5B6B7r/w\n\n+5V\n\nM\n2\n\nM\n0\n\nM\n6\n\nM\n1\n\nC\nLKd/a\n\nM\n3\n\nM\n5\n\nM\n7\n\nM\n4\n\nanalog out\n\nvout\n\nvout\n\nanalog out\n\nM\n0\n\nM\n1\n\nM\n2\n\nM\n3\n\nM\n4\n\nM\n5\n\nM\n6\n\nM\n7\n\nC\nLKd/a\n\nout1\nout\nout2\n\nclk\nclk\nclk\n\nB0B1B2B3B4B5B6B7\n\nvs\nodd/even\n\nbp\n\n+5V\ncs\n\nin\n\nD\n3\n\nD\n6\n\nD\n6\n\nC\nLKa/d\n\nD\n1\n\nD\n7\n\nD\n2\n\nin D0\nD\n\n0\n\nD\n2\n\nD\n3\n\nD\n4\n\nD\n5\n\n+5V\n\nD\n7\n\n+5V\n\nD\n1\n\n+5V\n\nin\n\nC\nLKa/d\n\n+5V\n\n+5V\n\nD\n4\n\nD\n5\n\n+5V\n\n+5V\n\n-5v\n\ncscs out1\n\nU\n1\n\nEl4581\n\n1234\n\n8765\n\ncsinvsgnd\n\nvcc\nodd/even\n\nrset\nbp\n\nU\n2\n\nC\nR\n\nISTAL\n\n17\n814\n\nN\nC\n\nG\nN\n\nD\nC\n\nLK\nVC\n\nC\n\nC\n20.1u\n\nC\n1\n\n0.1u\n\nR\n2\n\n680k\n\nH\nEAD\n\nER\n 9\n\n123456789\n\nD\n0 (LSB)\n\nD\n1\n\nD\n2\n\nD\n3\n\nD\n4\n\nD\n5\n\nD\n6\n\nD\n7 (M\n\nSB)\nR\n\n/W\n\nJ1RC\nA in1\n\n2\n\nU\n9\n\nBot\u00e3o\n\n41\n32\n\n41\n32\n\nU\n6\n\nN\nand-SN\n\n74AH\nC\n\nT00Q\n\n7 1234\n\n1413121110\n56\n\n8 9\n\nG\nN\n\nD\n\n1A1B1Y2A\n\nVC\nC4B4A4Y3B\n\n2B2Y\n3Y 3A\n\nJP8\n\nH\nEAD\n\nER\n 3\n\n123\n\nR\n22\n\n10k\nR\n\n21\n10k\n\nR\n20\n\n10k\nR\n\n19\n10k\n\nR\n18\n\n10k\nR\n\n17\n10k\n\nR\n16\n\n10k\nR\n\n15\n10k\n\nJP7\n\nH\nEAD\n\nER\n 5X2 Fonte\n\n1\n2\n\n3\n4\n\n5\n6\n\n7\n8\n\n9\n10\n\nU\n7\n\nLM\n317LZ\n\n31\n2\n\nVIN\nAD\n\nJ\nVO\n\nU\nT\n\nU\n5\n\nD\n/A-TLC\n\n5602\n\n29 581107203\n\n619181711\n\n4\n12 16151413\n\nD\nIG\n\n VD\nD\n\n1\n\nD\nIG\n\n VD\nD\n\n2\n\nAN\nLG\n\n VD\nD\n\n1\n\nAN\nLG\n\n VD\nD\n\n2\n\nD\nIG\n\n G\nN\n\nD\n\nAN\nLG\n\n G\nN\n\nD\n\nN\nC\n\nN\nC\n\nC\nO\n\nM\nP\n\nO\nU\n\nT\n\nD\n0 (LSB)\n\nD\n1\n\nD\n2\n\nC\nLK\n\nR\nEF\n\nD\n7 (M\n\nSB)\n\nD\n3\n\nD\n4\n\nD\n5\n\nD\n6\n\nU\n3\n\nA/D\n-TLC\n\n5540\n\n3456789101113224\n\n1214 15 18 16 17 20 21 22 23 19 1\nD\n\n0 (LSB)\nD\n\n1\nD\n\n2\nD\n\n3\nD\n\n4\nD\n\n5\nD\n\n6\nD\n\n7 (M\nSB)\n\nVD\nD\n\nD\nVD\n\nD\nD\n\nD\nG\n\nN\nD\n\nD\nG\n\nN\nD\n\nC\nLK\n\nVD\nD\n\nA\nVD\n\nD\nA\n\nVD\nD\n\nA\nR\n\nEFTS\nR\n\nEFT\nAG\n\nN\nD\n\nAG\nN\n\nD\nR\n\nEFBS\nR\n\nEFB\nAN\n\nALO\nG\n\n IN\n/O\n\nE\n\nJP3\n\nH\nEAD\n\nER\n 10\n\n12345678910\n\nJP2\n\nH\nEAD\n\nER\n 3\n\n123\n\n+\nC\n\n3\n4.7u\n\n+\nC\n\n12\n4.7u\n\n+\nC\n\n16\n4.7u\n\n+\nC\n\n10\n4.7u\n\n+\nC\n\n11\n4.7u\n\n+\nC\n\n7\n4.7u\n\nU\n4\n\nBuffer-SN\n74LV244AT\n\n246813151720 1110\n19 31 95 7 12 14 16 18\n\n1A1\n1A2\n1A3\n1A4\n\n2A2\n2A3\n2A4\nVC\n\nC\n\n2A1\n\nG\nN\n\nD\n2/O\n\nE\n\n2Y\n4\n\n1/O\nE\n\n2Y\n1\n\n2Y\n3\n\n2Y\n2\n\n1Y\n4\n\n1Y\n3\n\n1Y\n2\n\n1Y\n1\n\nC\n33\n\n0.1u\n\nC\n24\n\n0.1u\nC\n\n25\n0.1u\n\nC\n26\n\n0.1u\nC\n\n27\n0.1u\n\nC\n31\n\n0.1u\nC\n\n32\n0.1u\n\nC\n18\n\n1u\n\nC\n30\n\n0.1u\n\nC\n17\n\n10n\n\nC\n29\n\n0.1u\n\nR\n11\n\n240\n\nR\n13\n\n560\n\nC\n28\n\n1u\n\nC\n14\n\n0.1u\n\nC\n8\n\n0.1u\n\nC\n9\n\n0.1u\n\nC\n13\n\n0.1u\nC\n\n15\n0.1u\n\nC\n5\n\n0.1u\n\nR\n14\n\n18R\n\nR\n23\n\n130R\n\nU\n8\n\nBot\u00e3o\n\n41\n32\n\n41\n32\n\nJP6\n\nH\nEAD\n\nER\n 10\n\n12345678910\n\n+\nC\n\n19\n4.7u\n\n+\nC\n\n21\n4.7u\n\n+\nC\n\n20\n4.7u\n\n+\nC\n\n22\n4.7u\n\n+\nC\n\n23\n4.7u\n\nJP5\n\nH\nEAD\n\nER\n 8\n\n12345678\n\nR\n91k\n\nR\n12\n\n10k R8\n10k\n\nJP1\n\nH\nEAD\n\nER\n 4\n\n1234\n\nJH\n2\n\nH\nEAD\n\nER\n 1\n\n1\n1\n\nR\n10\n\n1k\n\nC\n6\n\n0.1u\n\nQ\n4\n\nBC\n548\n\n1\n2\n\n3\nR\n\n4PO\nT\n\nG S\n\nD\n\nQ\n2\n\nBC\n548\n\n1\n2\n\n3R\n7\n\nr>100\nR\n\n6\n5r\n\n+\nC\n\n4\n4.7u\n\nR\n1\n\n75r\n\nR\n5\n\nr\n\nJH\n1\n\nH\nEAD\n\nER\n 1\n\n1\n1\n\nR\n3\n\n1k\n\nQ\n3\n\nBC\n548\n\n1\n2\n\n3\n\nD\n1\n\nJ2RC\nA  out\n\n1\n\n2\nQ\n\n1\n\nBC\n548\n\n1\n2\n\n3\n\nQ\n5\n\nBC\n548\n\n1\n2\n\n3\n\n\n\n 118\n\nAp\u00eandice B \n \n\n \n\n<D\noc>\n\n<R\nev\n\nC\node>\n\n<Title>\n\nC\n\n1\n1\n\nM\nonday\n\n, A\npril 24, 2006\n\nTitle\n\nS\nize\n\nD\nocum\n\nent N\num\n\nber\nR\n\nev\n\nD\nate:\n\nS\nheet\n\nof\n\nA\n16\n\nA\n14\n\nA\n12\n\nA\n7\n\nA\n6\n\nA\n5\n\nA\n4\n\nA\n3\n\nA\n2\n\nA\n1\n\nA\n0\n\nD\nQ\n\n0\n\nD\nQ\n\n2\nD\n\nQ\n1\n\n+5V\nA\n\n15\nce2i\nr/w\nA\n\n13\nA\n\n8\nA\n\n9\nA\n\n11\n/oe\nA\n\n10\nclkm\n\nem\nD\n\nQ\n7\n\nD\nQ\n\n6\nD\n\nQ\n5\n\nD\nQ\n\n4\nD\n\nQ\n3\n\nA\n16\n\nA\n14\n\nA\n12\n\nA\n7\n\nA\n6\n\nA\n5\n\nA\n4\n\nA\n3\n\nA\n2\n\nA\n1\n\nA\n0\n\nD\nQ\n\n0\n\nD\nQ\n\n2\nD\n\nQ\n1\n\n+5V\nA\n\n15\nce2p\nr/w\nA\n\n13\nA\n\n8\nA\n\n9\nA\n\n11\n/oe\nA\n\n10\nclkm\n\nem\nD\n\nQ\n7\n\nD\nQ\n\n6\nD\n\nQ\n5\n\nD\nQ\n\n4\nD\n\nQ\n3\n\ntck1\ntck\n\ntdi1\ntdi\n\ntm\ns1\n\ntm\ns\n\ntck\ntdo\ntm\n\ns\n\ntdi\n\n+5V\n+5V\n\n+5V\n\nC\nLK\n\n+5V\nC\n\nLK\nC\n\nLK\n\nZ\n4\n\nZ\n5\n\nZ\n6\n\nZ\n8\n\nZ\n9\n\nZ\n10\n\nZ\n11\n\nZ\n12\n\nZ\n15\n\nZ\n16\n\nZ\n17\n\nZ\n18\n\nZ\n20\n\nZ\n21\n\nZ\n22\n\nZ\n24\n\nZ\n25\n\nZ\n27\n\nZ\n28\n\nZ\n29\n\nZ\n30\n\nZ\n31\n\nZ\n33\n\nZ\n34\n\nZ\n35\n\nZ\n36\n\nZ\n37\n\nZ\n39\n\nZ\n40\n\nZ\n41\n\nZ\n44\n\nZ\n45\n\ntm\ns2\n\ntdo2\ntdi2\ntck2\n\nZ\n81\n\nZ\n80\n\nZ\n79\n\nZ\n77\n\nZ\n76\n\nZ\n75\n\nZ\n74\n\nZ\n73\n\nZ\n70\n\nZ\n69\n\nZ\n68\n\nZ\n67\n\nZ\n65\n\nZ\n64\n\nZ\n63\n\nZ\n61\n\nZ\n60\n\nZ\n58\n\nZ\n57\n\nZ\n56\n\nZ\n55\n\nZ\n54\n\nZ\n52\n\nZ\n51\n\nZ\n50\n\nZ\n49\n\nZ\n48\n\nZ\n46\n\nG\nN\n\nD\n\nG\nN\n\nD\n\nG\nN\n\nD\n\nG\nN\n\nD\n\nG\nN\n\nD\n\nG\nN\n\nD\n\nZ\n12\n\nZ\n14\n\nZ\n16\n\nZ\n18\n\nZ\n20\n\nZ\n22\n\nZ\n24\n\n+5V\nZ\n\n28\n\n+5V\nZ\n\n15\nZ\n\n17\n\nZ\n21\n\nZ\n23\n\nZ\n25\n\nZ\n27\n\nZ\n29\n\nZ\n31\n\nZ\n30\n\nZ\n56\n\nZ\n62\n\nZ\n64\n\nZ\n57\n\nZ\n68\n\nZ\n61\n\nZ\n71\n\nZ\n69\n\nZ\n73\n\nZ\n65\n\nZ\n63\n\nZ\n54\n\nZ\n70\n\nZ\n67\n\nZ\n60\n\nZ\n58\n\nZ\n74\n\nZ\n55\n\nZ\n80\n\nZ\n5\n\nZ\n81\n\nZ\n6\n\nZ\n76\n\nZ\n9\n\nZ\n77\n\nZ\n75\n\n+5V\n\nZ\n8\n\nZ\n4\n\nZ\n10\n\nZ\n11\n\nZ\n79\n\nG\nN\n\nD\nG\n\nN\nD\n\nG\nN\n\nD GN\nD\n\nG\nN\n\nD\n\nG\nN\n\nD\n\nG\nN\n\nD\n\nG\nN\n\nD\n\nG\nN\n\nD\n\nG\nN\n\nD\n\nX9\n\nA\n11\n\nX55\n\nX60\n\nX74\n\ntdi1\n\nX28\n\nA\n13\n\nX22\n\nA\n10\n\nA\n12\n\nA\n16\n\nX67\nX68\n\nX25\nX27\n\nA\n1\n\nA\n6\n\nX57\n\nX76\n\nX8X10\n\nX18\nX61\n\nX81\n\ntck1\n\nX5A2\n\nX63\n\nA\n8\n\nX64\n\nX80\n\ntm\ns1\n\nX17\n\nA\n14\n\nA\n15\n\nX70\n\nX75\n\nA\n7\n\nX58\n\nX4X11\n\nX65\n\ntdo\n\nX12\n\nX15\n\nX20\n\nX56\n\nX77\nX79\n\nX24\n\nX30\n\nX6A3\n\nX69\n\nX16\n\nX29\n\nA\n5\n\nA\n9\n\nX21\n\nX31\nA\n\n0\n\nA\n4\n\nX73\n\n+5V\n\n+5V\n\nG\nN\n\nD\n+5V\n\nG\nN\n\nD\n\ntm\ns2\n\ntck2\n+5V\n\ntm\ns3\n\ntdi3tdi3\n\ntdo2\n\ntck3\ntdi2\n\ntck3\n\n+5V\nG\n\nN\nD\n\ntm\ns3\n\nG\nN\n\nD\n\nG\nN\n\nD\n+5V\n\nZ\n35\n\nZ\n37\n\nZ\n41\n\n+5V\n\nG\nN\n\nD\n\nZ\n49\n\nZ\n52\n\nZ\n39\n\nZ\n45\n\nZ\n46\n\nZ\n33\n\nZ\n40\n\n+5V\n\n+5V\nZ\n\n44\n\nZ\n34\n\nZ\n36\n\nZ\n48\n\nZ\n50\n\nZ\n51\n\nG\nN\n\nD\n\nX70\n\ntck1\nX64\n\nX55\nX57\n\nX67\n\nX61\nX60\n\ntdo\n\nX58\nG\n\nN\nD\n\nX74\n\nX68\n\nG\nN\n\nD\n\nX69\n\nX73\n\nX65\nX63\n\n+5V\n\nA\n16\n\nX56\n\n+5V\n\nG\nN\n\nD\nA\n\n11\n\n+5V\n\nG\nN\n\nD\nG\n\nN\nD\n\nG\nN\n\nD\n\nX16\n\n+5V\n\nG\nN\n\nD\n\nA\n2\n\nX79\n\nX75\n\nG\nN\n\nD\n\n+5V\n\nA\n7\n\nA\n9\n\nA\n10\n\nX11\n\nG\nN\n\nD\n\nX77\n\nX30\nX31\n\nX21\n\nX24\n\nA\n5\n\nA\n15\n\n+5V\n\nX27\n\n+5V\n\nA\n4\n\nA\n8\n\nA\n12\n\nX6\n\nX9\n\nX15\nX12\n\n+5V\n\nA\n0\n\n+5V\n\nX8GN\nD\n\nX81\nX80\n\nX76\n\nX18\n\nX25\n\nG\nN\n\nD\n\nA\n13\n\nX5\n\nX28\n\nA\n1\n\nA\n3\n\nA\n6\n\nG\nN\n\nD\n\nX22\ntm\n\ns1\n\nA\n14\n\nG\nN\n\nD\n\nX29\n\nG\nN\n\nD\n\nX10\n\nG\nN\n\nD\n\n+5V\n\ntdi1\nX17\n\nX20\n\n+5V\n\nG\nN\n\nD\n\nX4JP\n16\n\nH\nE\n\nA\nD\n\nE\nR\n\n 3\n\n123\n\nJP\n17\n\nH\nE\n\nA\nD\n\nE\nR\n\n 3\n\n123\n\nJP\n18\n\nH\nE\n\nA\nD\n\nE\nR\n\n 3\n\n123\n\nJP\n14\n\nH\nE\n\nA\nD\n\nE\nR\n\n 5X2 - JTA\nG\n\n - C\nP\n\nLD\n1\n\n1\n2\n\n3\n4\n\n5\n6\n\n7\n8\n\n9\n10\n\nJP\n2\n\nH\nE\n\nA\nD\n\nE\nR\n\n 16\n\n12345678910111213141516\n\n12345678910111213141516\n\nJP\n3\n\nH\nE\n\nA\nD\n\nE\nR\n\n 16\n\n12345678910111213141516\n\n32313029282726252423222120191817\n\nU\n1\n\nC\nR\n\nIS\nTA\n\nL\n\n17\n814\n\nN\nC\n\nG\nN\n\nD\nC\n\nLK\nV\n\nC\nC\n\nC\n1\n\n0.1U\nU\n\n2\n\nE\nP\n\nM\n7128S\n\n/LC\nC\n\n - C\nP\n\nLD\n1\n\n45689101112151617182021222425272829303133343536373940414445\n\n46484950515254555657586061636465676869707374757677798081\n\n184283132638536678\n\n62147123\n\nI/O\nI/O\nI/O\nI/O\nI/O\nI/O\nI/O\nI/O\n\nI/O\nI/O\nI/O\nI/O\nI/O\nI/O\nI/O\nI/O\n\nI/O\nI/O\nI/O\nI/O\nI/O\nI/O\nI/O\nI/O\n\nI/O\nI/O\nI/O\nI/O\nI/O\nI/O\nI/O\nI/O\n\nI/O\nI/O\nI/O\nI/O\nI/O\nI/O\nI/O\nI/O\n\nI/O\nI/O\nI/O\nI/O\nI/O\nI/O\nI/O\nI/O\n\nI/O\nI/O\nI/O\nI/O\nI/O\nI/O\nI/O\nI/O\n\nI/O\nI/O\nI/O\nI/O\n\nIN\nP\n\nU\nT/G\n\nC\nLR\n\nN\nIN\n\nP\nU\n\nT/O\nE\n\n1\nIN\n\nP\nU\n\nT/O\nE\n\n2/G\nC\n\nLK\n2\n\nIN\nP\n\nU\nT/G\n\nC\nLK\n\n1\n\nV\nC\n\nC\nIO\n\nV\nC\n\nC\nIO\n\nV\nC\n\nC\nIO\n\nV\nC\n\nC\nIO\n\nV\nC\n\nC\nIO\n\nV\nC\n\nC\nIO\n\nI/O\n(TC\n\nK\n)\n\nI/O\n(TD\n\nI)\nI/O\n\n(TD\nO\n\n)\nI/O\n\n(TM\nS\n\n)\n\nU\n3\n\nE\nP\n\nM\n7128S\n\n/LC\nC\n\n - C\nP\n\nLD\n2\n\n45689101112151617182021222425272829303133343536373940414445\n\n46484950515254555657586061636465676869707374757677798081\n\n184283132638536678\n\n62147123\n\nI/O\nI/O\nI/O\nI/O\nI/O\nI/O\nI/O\nI/O\n\nI/O\nI/O\nI/O\nI/O\nI/O\nI/O\nI/O\nI/O\n\nI/O\nI/O\nI/O\nI/O\nI/O\nI/O\nI/O\nI/O\n\nI/O\nI/O\nI/O\nI/O\nI/O\nI/O\nI/O\nI/O\n\nI/O\nI/O\nI/O\nI/O\nI/O\nI/O\nI/O\nI/O\n\nI/O\nI/O\nI/O\nI/O\nI/O\nI/O\nI/O\nI/O\n\nI/O\nI/O\nI/O\nI/O\nI/O\nI/O\nI/O\nI/O\n\nI/O\nI/O\nI/O\nI/O\n\nIN\nP\n\nU\nT/G\n\nC\nLR\n\nN\nIN\n\nP\nU\n\nT/O\nE\n\n1\nIN\n\nP\nU\n\nT/O\nE\n\n2/G\nC\n\nLK\n2\n\nIN\nP\n\nU\nT/G\n\nC\nLK\n\n1\n\nV\nC\n\nC\nIO\n\nV\nC\n\nC\nIO\n\nV\nC\n\nC\nIO\n\nV\nC\n\nC\nIO\n\nV\nC\n\nC\nIO\n\nV\nC\n\nC\nIO\n\nI/O\n(TC\n\nK\n)\n\nI/O\n(TD\n\nI)\nI/O\n\n(TD\nO\n\n)\nI/O\n\n(TM\nS\n\n)\n\nJP\n15\n\nH\nE\n\nA\nD\n\nE\nR\n\n 5X2 - JTA\nG\n\n - C\nP\n\nLD\n2\n\n1\n2\n\n3\n4\n\n5\n6\n\n7\n8\n\n9\n10\n\nJP\n5\n\nH\nE\n\nA\nD\n\nE\nR\n\n 16\n\n12345678910111213141516\n\n32313029282726252423222120191817\n\nJP\n4\n\nH\nE\n\nA\nD\n\nE\nR\n\n 16\n\n12345678910111213141516\n\n12345678910111213141516\n\nJP\n1\n\nH\nE\n\nA\nD\n\nE\nR\n\n 2\n\n12\n\nJP\n8\n\nH\nE\n\nA\nD\n\nE\nR\n\n 11x2/S\nM\n\n1\n2\n\n3\n4\n\n5\n6\n\n7\n8\n\n9\n10\n\n11\n12\n\n13\n14\n\n15\n16\n\n17\n18\n\n19\n20\n\n21\n22\n\n12\n13\n\n14\n15\n\n16\n17\n\n18\n19\n\n20\n21\n\n22\n23\n\n24\n25\n\n26\n27\n\n28\n29\n\n30\n31\n\n32\nX\n\nJP\n12\n\nH\nE\n\nA\nD\n\nE\nR\n\n 11x2/S\nM\n\n1\n2\n\n3\n4\n\n5\n6\n\n7\n8\n\n9\n10\n\n11\n12\n\n13\n14\n\n15\n16\n\n17\n18\n\n19\n20\n\n21\n22\n\n33\n34\n\n35\n36\n\n37\n38\n\n39\n40\n\n41\n42\n\n43\n44\n\n45\n46\n\n47\n48\n\n49\n50\n\n51\n52\n\n53\nX\n\nJP\n6\n\nH\nE\n\nA\nD\n\nE\nR\n\n 11x2/S\nM\n\n1\n2\n\n3\n4\n\n5\n6\n\n7\n8\n\n9\n10\n\n11\n12\n\n13\n14\n\n15\n16\n\n17\n18\n\n19\n20\n\n21\n22\n\nX\n11\n\n10\n9\n\n8\n7\n\n6\n5\n\n4\n3\n\n2\n1\n\n84\n83\n\n82\n81\n\n80\n79\n\n78\n77\n\n76\n75\n\nJP\n9\n\nH\nE\n\nA\nD\n\nE\nR\n\n 11x2/S\nM\n\n1\n2\n\n3\n4\n\n5\n6\n\n7\n8\n\n9\n10\n\n11\n12\n\n13\n14\n\n15\n16\n\n17\n18\n\n19\n20\n\n21\n22\n\nX\n74\n\n73\n72\n\n71\n70\n\n69\n68\n\n67\n66\n\n65\n64\n\n63\n62\n\n61\n60\n\n59\n58\n\n57\n56\n\n55\n54\n\nJP\n21\n\nH\nE\n\nA\nD\n\nE\nR\n\n 3\n\n123\n\nJP\n20\n\nH\nE\n\nA\nD\n\nE\nR\n\n 3\n\n123\n\nJP\n19\n\nH\nE\n\nA\nD\n\nE\nR\n\n 3\n\n123\n\nJP\n10\n\nH\nE\n\nA\nD\n\nE\nR\n\n 11x2/S\nM\n\n1\n2\n\n3\n4\n\n5\n6\n\n7\n8\n\n9\n10\n\n11\n12\n\n13\n14\n\n15\n16\n\n17\n18\n\n19\n20\n\n21\n22\n\n12\n13\n\n14\n15\n\n16\n17\n\n18\n19\n\n20\n21\n\n22\n23\n\n24\n25\n\n26\n27\n\n28\n29\n\n30\n31\n\n32\nX\n\nJP\n13\n\nH\nE\n\nA\nD\n\nE\nR\n\n 11x2/S\nM\n\n1\n2\n\n3\n4\n\n5\n6\n\n7\n8\n\n9\n10\n\n11\n12\n\n13\n14\n\n15\n16\n\n17\n18\n\n19\n20\n\n21\n22\n\n33\n34\n\n35\n36\n\n37\n38\n\n39\n40\n\n41\n42\n\n43\n44\n\n45\n46\n\n47\n48\n\n49\n50\n\n51\n52\n\n53\nX\n\nJP\n11\n\nH\nE\n\nA\nD\n\nE\nR\n\n 11x2/S\nM\n\n1\n2\n\n3\n4\n\n5\n6\n\n7\n8\n\n9\n10\n\n11\n12\n\n13\n14\n\n15\n16\n\n17\n18\n\n19\n20\n\n21\n22\n\nX\n74\n\n73\n72\n\n71\n70\n\n69\n68\n\n67\n66\n\n65\n64\n\n63\n62\n\n61\n60\n\n59\n58\n\n57\n56\n\n55\n54\n\nJP\n7\n\nH\nE\n\nA\nD\n\nE\nR\n\n 11x2/S\nM\n\n1\n2\n\n3\n4\n\n5\n6\n\n7\n8\n\n9\n10\n\n11\n12\n\n13\n14\n\n15\n16\n\n17\n18\n\n19\n20\n\n21\n22\n\nX\n11\n\n10\n9\n\n8\n7\n\n6\n5\n\n4\n3\n\n2\n1\n\n84\n83\n\n82\n81\n\n80\n79\n\n78\n77\n\n76\n75\n\nJ1\n\nF\nO\n\nN\nTE\n\n123\n\nC\n3\n\n0.1u\n1 2\n\nC\n2\n\n0.1u\n1 2\n\n\n\n 119\n\nAp\u00eandice C \n \n\n \n \n \n\nM\n\u00f3dulo - C\n\ny\nclone/M\n\nem\n\u00f3ria\n\nC\n\n1\n1\n\nThursday\n, M\n\narch 02, 2006\n\nTitle\n\nS\nize\n\nD\nocum\n\nent N\num\n\nber\nR\n\nev\n\nD\nate:\n\nS\nheet\n\nof\n\n+1.5V\nD\n\nA\nTA\n\n0\n+1.5V\nM\n\nS\nE\n\nL0\n+1.5V\nD\n\nC\nLK\n\n+1.5V\nM\n\nS\nE\n\nL1\n\nTD\nI1\n\nTC\nK\n\nTD\nO\n\nTM\nS\n\nTD\nI\n\n+5V\n\nTM\nS\n\n1\nTC\n\nK\n1\n\nTC\nK\n\n+1.5V\n\nTD\nI\n\n+1.5V\n\nTM\nS\n\nX1X2X3X4X5CE\n2P\n\nX7X8+1.5V\n\nX11\nC\n\nE\n2I\n\nX13\nX14\n\nX16\n\n/O\nE\n\nX21\n\nR\n/W\n\nX24\n\nX25\n\n+1.5V\nC\n\nLK\nC\n\nLK\n\nX32\n\nM\nS\n\nE\nL0\n\nX37\nX38\nX39\n\nX41\n\nA\n1\n\nA\n2\n\nA\n3\n\nA\n4\n\nA\n7\n\nA\n8\n\nA\n9\n\nA\n10\n\nA\n11\n\nA\n13\n\nA\n14\n\nA\n15\n\nA\n16\n\nX61\nX62\nX63\n\nX65\nC\n\nLK\nM\n\nE\nM\n\nX67\nX68\n\n+1.5V\n\n+1.5V\n\nX73\nX74\nX75\nX76\nX77\nX78\nX79\nX80\n\nX81\nX82\nX83\nX84\nX85\nX86\nX87\nX88\n\n+1.5V\n\n+1.5V\nX93\nX94\nX95\n\nX97\nX98\nX99\nX100\nX101\nX102\nX103\nX104\n\nX105\nX106\nX107\nX108\n\n+1.5V\n\n+1.5V\n\nX114\nX115\nX116\nX117\nX118\nX119\nX120\n\nX121\nX122\nX123\nX124\nX125\nX126\nX127\nX128\n\n+1.5V\nX131\nX132\nX133\n\nX135\nX136\n\nX137\nX138\nX139\nX140\nX141\n\nX143\nX144\n\nTD\nO\n\nC\nLK\n\nC\nLK\n\n+1.5V\n\n+1.5V\nX158\n\nX160\n\nX161\nX162\nX163\nX164\n\nX166\nX167\nX168\n\nX169\nX170\n\n+1.5V\nX173\nX174\nX175\n\nX177\nX178\nX179\nX180\nX181\nX182\nX183\nX184\n\nX186\nX187\nX188\n+1.5V\n\n+1.5V\n\nX193\nX194\nX195\nX196\nX197\nX198\nX199\nX200\n\nX201\nX202\n\nX204\nX205\nX206\nX207\nX208\n\n+1.5V\n\n+1.5V\n\nX213\nX214\nX215\nX216\n\nX217\nX218\nX219\nX220\nX221\nX222\nX223\nX224\n\nX225\nX226\nX227\nX228\n+1.5V\n\n+1.5V\n\nX233\nX234\nX235\nX236\nX237\nX238\nX239\nX240\n\n+1.5V\n\n+1.5V\n+1.5V\n\n+1.5V\n\nTD\nI1\n\n+1.5V\n\nN\nC\n\nA\n16\n\nA\n14\n\nA\n12\n\nA\n7\n\nA\n6\n\nA\n5\n\nA\n4\n\nA\n3\n\nA\n2\n\nA\n1\n\nA\n0\n\nD\nQ\n\n0\nD\n\nQ\n1\n\nD\nQ\n\n2\n\n+5V\nA\n\n15\nC\n\nE\n2I\n\nR\n/W\n\nA\n13\n\nA\n8\n\nA\n9\n\nA\n11\n\n/O\nE\n\nA\n10\n\n/C\nE\n\n1\nD\n\nQ\n7\n\nD\nQ\n\n6\nD\n\nQ\n5\n\nD\nQ\n\n4\nD\n\nQ\n3\n\n+1.5V\n\nX17\nX18\nX19\n\n+1.5V\n\nA\n5\n\nA\n0\n\nA\n6\n\n+1.5V\n\nA\n12\n\nX64\n\nX96\n\nX113\n\nX134\n\nX156\n\nX159\n\nX165\n\nX176\n\nX185\n\nX203\n\nM\nS\n\nE\nL1\n\nX36\n\nN\nC\n\nA\n16\n\nA\n14\n\nA\n12\n\nA\n7\n\nA\n6\n\nA\n5\n\nA\n4\n\nA\n3\n\nA\n2\n\nA\n1\n\nA\n0\n\nD\nQ\n\n0\nD\n\nQ\n1\n\nD\nQ\n\n2\n\n+5V\nA\n\n15\nC\n\nE\n2I\n\nR\n/W\n\nA\n13\n\nA\n8\n\nA\n9\n\nA\n11\n\n/O\nE\n\nA\n10\n\n/C\nE\n\n1\nD\n\nQ\n7\n\nD\nQ\n\n6\nD\n\nQ\n5\n\nD\nQ\n\n4\nD\n\nQ\n3\n\nX1+1.5V\nX11\nX13\n+1.5V\n\nX19\n\nR\n/W\n\n+1.5V\nC\n\nLK\nC\n\nLK\n\nX24\n+1.5V\n/O\n\nE\nX18\nX16\nX14\n\nX8 CE\n2P\n\nX4 X2\n\nX39\n\nA\n1\n\nA\n5\n\nA\n7\n\n+1.5V\nA\n\n9\nA\n\n11\nA\n\n13\nA\n\n15\nA\n\n16\nA\n\n14\nA\n\n12\n\nA\n8\n\nA\n6\n\nA\n4\n\nA\n2\n\nA\n0\n\nX38\nX36\nM\n\nS\nE\n\nL0\nX32\n\nX65\nX67\n\nX73\nX75\n\nX81\nX79\nX83\nX85\nX87\n\n+1.5V\nX88\nX86\nX84\n\nX80\nX78\nX76\nX74\n+1.5V\n+1.5V\nX68\nC\n\nLK\nM\n\nE\nM\n\nX64\nX62\n\nX99\n\nX103\n\nX107\n\nX113\nX115\nX117\nX119\n\nX120\nX118\nX116\nX114\n+1.5V\n+1.5V\nX108\nX106\nX104\nX102\nX100\nX98\nX96\n\n+1.5V\n\nC\nLK\n\nTD\nI1\n\n+1.5V\nX159\nX161\nX163\n\nX162\nX160\nX158\nX156\n\nC\nLK\n\nX3X5X7X17\n\nX21\n\nX25\n\nC\nE\n\n2I\n\n+1.5V\n\nM\nS\n\nE\nL1\n\nX37\n\nA\n3\n\nA\n10\n\nX61\nX63\n\nX77\n\nX82\n\nX93\nX95\nX97\n\nX101\n\nX105\n\nX94\n\nX164\n\n+1.5V\n\n+5V\n\nX205\n\nX182\nX183\n\nX195\n\n+1.5V\n\nX193\n\nX235\n\nX185\n\nX236\n\nX187\n\nX237\n\nX228\nX225\n\nX239\n\nX214\n\n+1.5V\n+1.5V\n\nX233\n\nX226\n\nX200\n\nX213\n\nX227\n\nX240\n\nX222\n\nX198\n\nX215\n\n+1.5V\n\nX223\n\n+1.5V\n\nX238\n\nX216\nX218\n\nX181\n\nX197\nX196\n\nX217\n\nX208\n\nX194\n\nX219\n\nX234\n\nX199\n\nX207\n\nX224\n\nX206\n\nX201\n\nX221\n\nX202\n\n+1.5V\n\nX220\n\nX186\n\nX203\nX204\n\nX184\n\nX188\n\nX175\n\nX166\n\nX141\nX144\n+1.5V\n\nX174\n\nX177\n\nX140\n\nTM\nS\n\n1\n\nX179\nX180\n\nX123\n\nTC\nK\n\n1\n\nX132\n\nTC\nK\n\n1\n\nX125\n\nX138\n\nTM\nS\n\n1\nTD\n\nO\n\nX128\n+1.5V\n\nX127\n\nX136\n\nX143\n\nX121\n\nX167\n\nX126\n\nX131\nX134\n\n+1.5V\n\nX124\n\nX178\n\nX169\n\nX137\n\nX122\n\n+1.5V\n\nX176\n\nX133\n\nX139\n\nX165\nX168\nX170\n\nX135\n\nX173\n\nX41\n\n+5V\nC\n\nLK\n\n+5V\n\n+5V\n+1.5V\n\nU\n3\n\nC\nR\n\nIS\nTA\n\nL\n\n17\n814\n\nN\nC\n\nG\nN\n\nD\nC\n\nLK\nV\n\nC\nC\n\nU\n2\n\nE\nP\n\n1C\n6\n\n240\n239\n238\n237\n236\n235\n234\n233\n\n209\n\n192\n191\n190\n189\n188\n187\n186\n185\n\n176\n175\n174\n173\n172\n171\n170\n169\n\n144\n143\n142\n141\n140\n139\n138\n137\n\n12345678910111213141516171819202122232425262728293031323334353637383940\n\n232\n231\n230\n229\n228\n227\n226\n225\n\n224\n223\n222\n221\n220\n219\n218\n217\n\n216\n215\n214\n213\n212\n211\n210\n\n208\n207\n206\n205\n204\n203\n202\n201\n\n200\n199\n198\n197\n196\n195\n194\n193\n\n41424344454647484950515253545556\n\n184\n183\n182\n181\n180\n179\n178\n177\n\n57585960616263646566676869707172\n\n168\n167\n166\n165\n164\n163\n162\n161\n\n160\n159\n158\n157\n156\n155\n154\n153\n\n152\n151\n150\n149\n148\n147\n146\n145\n\n136\n135\n134\n133\n132\n131\n130\n129\n\n128\n127\n126\n125\n124\n123\n122\n121\n\n737475767778798081828384858687888990919293949596979899\n100\n101\n102\n103\n104\n\n105\n106\n107\n108\n109\n110\n111\n112\n\n113\n114\n115\n116\n117\n118\n119\n120\n\nI/O\nI/O\nI/O\nI/O\nI/O\nI/O\nI/O\nI/O\n\nV\nC\n\nC\nIO\n\n2\n\nG\nN\n\nD\nV\n\nC\nC\n\nIN\nT\n\nG\nN\n\nD\nV\n\nC\nC\n\nIO\n2\n\nI/O\nI/O\nI/O\nI/O\n\nI/O\nI/O\nI/O\nI/O\n\nV\nC\n\nC\nIO\n\n3\nG\n\nN\nD\n\nI/O\nI/O\n\nI/O\nI/O\n\nG\nN\n\nD\nI/O\nI/O\nI/O\nI/O\nI/O\n\nI/O\nI/O\nI/O\nI/O\nI/O\nI/O\nI/O\nI/O\n\nV\nC\n\nC\nIO\n\n1\nG\n\nN\nD\n\nI/O\nI/O\nI/O\nI/O\nI/O\nI/O\n\nI/O\nI/O\nI/O\nI/O\nI/O\nV\n\nC\nC\n\nIO\n1\n\nI/O\nI/O\n\nD\nA\n\nTA\n0\n\nnC\nO\n\nN\nF\n\nIG\nV\n\nC\nC\n\nA\n_P\n\nLL1\nC\n\nLK\n0\n\nC\nLK\n\n1\nG\n\nN\nD\n\nA\n_P\n\nLL1\nG\n\nN\nD\n\nG\n_P\n\nLL1\nnC\n\nE\n0\n\nnC\nE\n\nM\nS\n\nE\nL0\n\nM\nS\n\nE\nL1\n\nD\nC\n\nLK\nI/O\nI/O\nI/O\nG\n\nN\nD\n\nG\nN\n\nD\nV\n\nC\nC\n\nIO\n2\n\nG\nN\n\nD\nV\n\nC\nC\n\nIN\nT\n\nI/O\nI/O\nI/O\nI/O\n\nI/O\nI/O\nI/O\nI/O\nI/O\nI/O\nI/O\nI/O\n\nI/O\nI/O\nI/O\nI/O\n\nG\nN\n\nD\nV\n\nC\nC\n\nIN\nT\n\nG\nN\n\nD\n\nI/O\nI/O\nI/O\nI/O\nI/O\nI/O\nI/O\nI/O\n\nI/O\nI/O\nI/O\nI/O\nI/O\nI/O\nI/O\nI/O\n\nI/O\nI/O\nI/O\nI/O\nI/O\nI/O\nI/O\nI/O\n\nI/O\nI/O\nV\n\nC\nC\n\nIO\n1\n\nG\nN\n\nD\nI/O\nI/O\nI/O\nI/O\n\nI/O\nI/O\nI/O\nI/O\nI/O\nI/O\nI/O\nI/O\n\nI/O\nI/O\nI/O\nI/O\nI/O\nI/O\nI/O\nI/O\n\nI/O\nI/O\nI/O\nI/O\nG\n\nN\nD\n\nV\nC\n\nC\nIO\n\n4\nG\n\nN\nD\n\nV\nC\n\nC\nIN\n\nT\n\nI/O\nI/O\nI/O\nI/O\nI/O\nI/O\nI/O\nI/O\n\nI/O\nI/O\nI/O\n\nV\nC\n\nC\nIO\n\n3\nI/O\nTD\n\nI\nV\n\nC\nC\n\nA\n_P\n\nLL2\nC\n\nLK\n2\n\nC\nLK\n\n3\nG\n\nN\nD\n\nA\n_P\n\nLL2\nG\n\nN\nD\n\nG\n_P\n\nLL2\nTD\n\nO\nTM\n\nS\nTC\n\nK\nnS\n\nTA\nTU\n\nS\nC\n\nO\nN\n\nF\nIG\n\n_D\nO\n\nN\nE\n\nI/O\nI/O\nI/O\nI/O\nI/O\nI/O\n\nV\nC\n\nC\nIO\n\n3\nG\n\nN\nD\n\nI/O\nI/O\nI/O\nI/O\nI/O\nI/O\nI/O\nI/O\n\nI/O\nI/O\nI/O\nI/O\nI/O\nI/O\nI/O\nI/O\n\nI/O\nI/O\nI/O\nI/O\nI/O\nI/O\nI/O\nI/O\n\nG\nN\n\nD\nV\n\nC\nC\n\nIN\nT\n\nG\nN\n\nD\nV\n\nC\nC\n\nIO\n4\n\nI/O\nI/O\nI/O\nI/O\n\nI/O\nI/O\nI/O\nI/O\nI/O\nI/O\nI/O\nI/O\n\nI/O\nI/O\nI/O\nI/O\nG\n\nN\nD\n\nV\nC\n\nC\nIN\n\nT\nG\n\nN\nD\n\nV\nC\n\nC\nIO\n\n4\n\nI/O\nI/O\nI/O\nI/O\nI/O\nI/O\nI/O\nI/O\n\nR\n7\n\n10k\n\nR\n1\n\n100R\n\nR\n2\n\n510R\n\nJP\n18\n\nH\nE\n\nA\nD\n\nE\nR\n\n 5X2 - F\nO\n\nN\nTE\n\n1\n2\n\n3\n4\n\n5\n6\n\n7\n8\n\n9\n10\n\nJP\n6\n\nH\nE\n\nA\nD\n\nE\nR\n\n 15X2\n\n1\n2\n\n3\n4\n\n5\n6\n\n7\n8\n\n9\n10\n\n11\n12\n\n13\n14\n\n15\n16\n\n17\n18\n\n19\n20\n\n21\n22\n\n23\n24\n\n25\n26\n\n27\n28\n\n29\n30\n\n31\n32\n\n33\n34\n\n35\n36\n\n37\n38\n\n39\n40\n\n41\n42\n\n43\n44\n\n45\n46\n\n47\n48\n\n49\n50\n\n51\n52\n\n53\n54\n\n55\n56\n\n57\n58\n\n59\n60\n\nR\n4\n\n10k\n\nJP\n9\n\nH\nE\n\nA\nD\n\nE\nR\n\n 15X2\n\n1\n2\n\n3\n4\n\n5\n6\n\n7\n8\n\n9\n10\n\n11\n12\n\n13\n14\n\n15\n16\n\n17\n18\n\n19\n20\n\n21\n22\n\n23\n24\n\n25\n26\n\n27\n28\n\n29\n30\n\n61\n62\n\n63\n64\n\n65\n66\n\n67\n68\n\n69\n70\n\n71\n72\n\n73\n74\n\n75\n76\n\n77\n78\n\n79\n80\n\n81\n82\n\n83\n84\n\n85\n86\n\n87\n88\n\n89\n90\n\nR\n5\n\n10k\n\nJP\n12\n\nH\nE\n\nA\nD\n\nE\nR\n\n 15X2\n\n1\n2\n\n3\n4\n\n5\n6\n\n7\n8\n\n9\n10\n\n11\n12\n\n13\n14\n\n15\n16\n\n17\n18\n\n19\n20\n\n21\n22\n\n23\n24\n\n25\n26\n\n27\n28\n\n29\n30\n\n91\n92\n\n93\n94\n\n95\n96\n\n97\n98\n\n99\n100\n\n101\n102\n\n103\n104\n\n105\n106\n\n107\n108\n\n109\n110\n\n111\n112\n\n113\n114\n\n115\n116\n\n117\n118\n\n119\n120\n\nC\n3\n\n0.1u\n\nJP\n17\n\nH\nE\n\nA\nD\n\nE\nR\n\n 15X2\n\n1\n2\n\n3\n4\n\n5\n6\n\n7\n8\n\n9\n10\n\n11\n12\n\n13\n14\n\n15\n16\n\n17\n18\n\n19\n20\n\n21\n22\n\n23\n24\n\n25\n26\n\n27\n28\n\n29\n30\n\n121\n122\n\n123\n124\n\n125\n126\n\n127\n128\n\n129\n130\n\n131\n132\n\n133\n134\n\n135\n136\n\n137\n138\n\n139\n140\n\n141\n142\n\n143\n144\n\n145\n146\n\n147\n148\n\n149\n150\n\nJP\n3\n\nH\nE\n\nA\nD\n\nE\nR\n\n 16 12345678910111213141516\n\n32313029282726252423222120191817\n\nJP\n2\n\nH\nE\n\nA\nD\n\nE\nR\n\n 16\n\n12345678910111213141516\n\n12345678910111213141516\n\nJP\n16\n\nH\nE\n\nA\nD\n\nE\nR\n\n 5x2/S\nM\n\n - JTA\nG\n\n1\n2\n\n3\n4\n\n5\n6\n\n7\n8\n\n9\n10\n\nJP\n15\n\nH\nE\n\nA\nD\n\nE\nR\n\n 3\n\n123\n\nJP\n14\n\nH\nE\n\nA\nD\n\nE\nR\n\n 3\n\n123\n\nJP\n13\n\nH\nE\n\nA\nD\n\nE\nR\n\n 3\n\n123\n\nJP\n11\n\nH\nE\n\nA\nD\n\nE\nR\n\n 3\n\n123\n\nJP\n10\n\nH\nE\n\nA\nD\n\nE\nR\n\n 3\n\n123\n\nJP\n8\n\nH\nE\n\nA\nD\n\nE\nR\n\n 3\n\n123\n\nJP\n7\n\nH\nE\n\nA\nD\n\nE\nR\n\n 3\n\n123\n\nJP\n19\n\nH\nE\n\nA\nD\n\nE\nR\n\n 15X2\n\n1\n2\n\n3\n4\n\n5\n6\n\n7\n8\n\n9\n10\n\n11\n12\n\n13\n14\n\n15\n16\n\n17\n18\n\n19\n20\n\n21\n22\n\n23\n24\n\n25\n26\n\n27\n28\n\n29\n30\n\n151\n152\n\n153\n154\n\n155\n156\n\n157\n158\n\n159\n160\n\n161\n162\n\n163\n164\n\n165\n166\n\n167\n168\n\n169\n170\n\n171\n172\n\n173\n174\n\n175\n176\n\n177\n178\n\n179\n180\n\nR\n3\n\n10k\n\nR\n8\n\n10k\n\nJP\n20\n\nH\nE\n\nA\nD\n\nE\nR\n\n 15X2\n\n1\n2\n\n3\n4\n\n5\n6\n\n7\n8\n\n9\n10\n\n11\n12\n\n13\n14\n\n15\n16\n\n17\n18\n\n19\n20\n\n21\n22\n\n23\n24\n\n25\n26\n\n27\n28\n\n29\n30\n\n181\n182\n\n183\n184\n\n185\n186\n\n187\n188\n\n189\n190\n\n191\n192\n\n193\n194\n\n195\n196\n\n197\n198\n\n199\n200\n\n201\n202\n\n203\n204\n\n205\n206\n\n207\n208\n\n209\n210\n\nR\n6\n\n10k\n\nU\n1\n\nLM\n317_T\n\n3\n2\n\n1\n\nV\nIN\n\nV\nO\n\nU\nT\n\nAD J\n\nC\n1\n\n0.1u\n1 2\n\nC\n2\n\n0.1u\n1 2\n\nJP\n21\n\nH\nE\n\nA\nD\n\nE\nR\n\n 15X2\n\n1\n2\n\n3\n4\n\n5\n6\n\n7\n8\n\n9\n10\n\n11\n12\n\n13\n14\n\n15\n16\n\n17\n18\n\n19\n20\n\n21\n22\n\n23\n24\n\n25\n26\n\n27\n28\n\n29\n30\n\n211\n212\n\n213\n214\n\n215\n216\n\n217\n218\n\n219\n220\n\n221\n222\n\n223\n224\n\n225\n226\n\n227\n228\n\n229\n230\n\n231\n232\n\n233\n234\n\n235\n236\n\n237\n238\n\n239\n240\n\nJP\n4\n\nH\nE\n\nA\nD\n\nE\nR\n\n 16\n\n12345678910111213141516\n\n12345678910111213141516\n\nJP\n5\n\nH\nE\n\nA\nD\n\nE\nR\n\n 16 12345678910111213141516\n\n32313029282726252423222120191817\n\nJP\n1\n\nH\nE\n\nA\nD\n\nE\nR\n\n 15X2\n\n1\n2\n\n3\n4\n\n5\n6\n\n7\n8\n\n9\n10\n\n11\n12\n\n13\n14\n\n15\n16\n\n17\n18\n\n19\n20\n\n21\n22\n\n23\n24\n\n25\n26\n\n27\n28\n\n29\n30\n\n1\n2\n\n3\n4\n\n5\n6\n\n7\n8\n\n9\n10\n\n11\n12\n\n13\n14\n\n15\n16\n\n17\n18\n\n19\n20\n\n21\n22\n\n23\n24\n\n25\n26\n\n27\n28\n\n29\n30\n\n\n\n 120\n\nAp\u00eandice D \n \n\n Circuito final da placa de capta\u00e7\u00e3o, digitaliza\u00e7\u00e3o e exibi\u00e7\u00e3o de imagens \n\nmonocrom\u00e1ticas. \n\n \n\n \n \n \n\n \n \n\n\n\n 121\n\nAp\u00eandice E \n \n\n Circuito final do m\u00f3dulo de armazenamento e controle utilizando dois CPLDs \n\nEPM7128SLC84-7 \n\n \n\n \n\n \n\n \n\n\n\n 122\n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n\n\n 123\n\nAp\u00eandice F \n \n\n Circuito do m\u00f3dulo de armazenamento e controle utilizando um FPGA \n\nEP1C6Q240CB. \n\n \n\n \n\n \n \n \n \n \n \n \n \n \n\n \n\n\n\n 124\n\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n\n\n\n 125\n\nAp\u00eandice G \n \nFotos do hardware implementado, proposto no cap\u00edtulo 4 \n \n\n \n \n\n \n \n \n \n \n \n \n \n \n \n \n\n\n\n 126\n\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n\n\n\n 127\n\nAp\u00eandice H \n\n \n\nC\u00f3digos das subunidades, da Unidade de Controle; escritos em AHDL \n\n \n\nPer\u00edodo Inicial de Linhas Ativas \n\n \n\n% Periodo Inicial das Linhas Ativas % \n% Mar\u00e7o 2006 % \n% Danilo Carlos Rossetto Minhoni % \n \nSUBDESIGN inicio_linhas_ativas \n \n( \n  clk, clr, enb: INPUT; \n  out[7..0], maximo: OUTPUT; \n) \n \nVARIABLE \n \n    count[7..0]: DFF; \n \nBEGIN \n \n    count[].clk = clk; \n    count[].clrn = clr; \n \n    IF enb THEN \n       count[].d = count[].q+1; \n    ELSE \n       count[].d = count[].q; \n    END IF; \n \n    out[] = count[]; \n    maximo = (out[]==H\"32\"); \n \nEND; \n \n \n \n\n\n\n 128\n\nContador de Pulsos Serrilhados e Equalizadores \n\n \n\n% Contador de Pulsos Serrilhados e Equalizadores % \n% Mar\u00e7o 2006 % \n% Danilo Carlos Rossetto Minhoni % \n \nSUBDESIGN contador_pulsos_serrilhados \n \n( \n  clk,clr,enb,o_e: INPUT; \n  out[4..0], maximo: OUTPUT; \n) \n \nVARIABLE  \n \n    count[4..0]: DFF; \n \nBEGIN \n \n    count[].clk=clk; \n    count[].clrn=clr; \n     \n    IF enb THEN \n    \n           count[].d=count[].q+1; \n \n           IF (count[].q==H\"10\") &amp; (o_e==1) THEN \n \n               maximo=B\"1\"; \n \n           ELSIF  \n \n                (count[].q==H\"f\") &amp; (o_e==0) THEN  \n \n                maximo=B\"1\"; \n \n           ELSE \n \n                maximo=B\"0\"; \n \n           END IF; \n \n    ELSE \n \n\n\n\n 129\n\n        count[].d=count[].q; \n \n    END IF; \n    out[]=count[]; \n \nEND; \n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n\n\n 130\n\nUnidade de Controle Interna \n\n \n\n% Unidade de Controle Interna % \n% Mar\u00e7o 2006 % \n% Danilo Carlos Rossetto Minhoni % \n \nSUBDESIGN unid_contr_int \n \n( \n  start, clk, reset, sinc_comp, contr_le: INPUT; \n  inlinhativa, sin_le: OUTPUT; \n) \n \nVARIABLE \n \n    estado: MACHINE OF BITS (q1, q0) WITH STATES ( \n                                                    i_ap_vert,  % inicio do apagamento vertical % \n                                                    ap_vert,     % apagamento vertical % \n                                                    i_linha       % inicio da linha % \n                                                  ); \n \nBEGIN \n \n    estado.clk=clk; \n    estado.reset=reset; \n \n    IF contr_le THEN \n \n                    sin_le=B\"1\"; \n \n    ELSE \n \n                    sin_le=B\"0\"; \n \n    END IF; \n \n    TABLE \n \n         estado, start, sinc_comp => estado, inlinhativa; \n \n            i_ap_vert, 0, X => i_ap_vert, 0; \n            i_ap_vert, 1, X => ap_vert, 0; \n            ap_vert, 0, X => i_linha, 0; \n            i_linha, 0, 0 => i_linha, 1; \n\n\n\n 131\n\n            i_linha, 0, 1 => i_linha, 0; \n \n     END TABLE; \n \nEND; \n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n\n\n 132\n\nControle de Exclus\u00e3o de Pulsos Serrilhados e Equalizadores \n\n \n\n% Controle de Exclusao dos Pulsos Serrilhados e Equalizadores % \n% Mar\u00e7o 2006 % \n% Danilo Carlos Rossetto Minhoni % \n \nSUBDESIGN controle_exclusao_pulsos \n( \n maximo_in, clk, reset : INPUT; \n start : OUTPUT; \n) \n \nVARIABLE \n estado : MACHINE OF BITS (q1,q0) \n    WITH STATES ( \n \n       inicio_exclusao, % inicio exclusao % \n       exclusao,            % exclusao % \n       fim_exclusao     % fim exclusao % \n    \n   ); \n \nBEGIN \n estado.clk=clk; \n estado.reset=reset; \n  \n TABLE \n  estado, maximo_in => estado, start; \n   \n        inicio_exclusao, 0 => exclusao, 0; \n  exclusao, 0 => exclusao, 1; \n  exclusao, 1 => fim_exclusao, 0;   \n \n END TABLE; \n \n \nEND; \n \n\n \n\n \n\n \n\n\n\n 133\n\nContador de Linhas de V\u00eddeo \n\n \n\n% Contador de Linhas de Video % \n% Mar\u00e7o 2006 % \n% Danilo Carlos Rossetto Minhoni % \n \nSUBDESIGN contador_de_linhas \n \n( \n  clk, clr, enb, fim_pixel: INPUT; \n  out[16..9], fim_linha: OUTPUT; \n) \n \nVARIABLE \n \n    count[16..9]: DFF; \n \nBEGIN \n \n    count[].clk=clk; \n    count[].clrn=clr; \n \n    IF enb THEN \n \n           count[].d=count[].q+1; \n \n    ELSE \n \n           count[].d=count[].q; \n \n    END IF; \n \n    out[]=count[]; \n    fim_linha=(out[]==H\"ff\")&amp;(fim_pixel==1); \n \nEND; \n \n\n \n\n \n\n \n\n\n\n 134\n\nContador de Pixels \n\n \n\n% Contador de Pixels % \n% Mar\u00e7o 2006 % \n% Danilo Carlos Rossetto Minhoni % \n \nSUBDESIGN contador_de_pixels \n \n( \n  clk, clr, enb: INPUT; \n  out[8..0], fim_pixel: OUTPUT; \n) \n \nVARIABLE \n \n    count[8..0]: DFF; \n \nBEGIN \n \n    count[].clk=clk; \n    count[].clrn=clr; \n    \n    IF enb THEN \n \n           count[].d=count[].q+1; \n \n    ELSE \n   \n           count[].d=count[].q; \n \n    END IF; \n \n    out[]=count[]; \n    fim_pixel=(out[]==H\"1ff\") % &amp;(!clk) %; \n \nEND; \n \n\n\n\tResumo\n\tAbstract\n\t\u00cdndice\n\t Lista de Figuras\n\tLista de Tabelas\n\tLista de Abreviaturas e Siglas\n\t1 Introdu\u00e7\u00e3o\n\t1.1  Motiva\u00e7\u00e3o\n\t1.2  Objetivo\n\t1.3  Organiza\u00e7\u00e3o\n\n\t2 Dispositivos L\u00f3gicos Program\u00e1veis (PLDs)\n\t2.1 A Evolu\u00e7\u00e3o dos Dispositivos L\u00f3gicos Program\u00e1veis\n\t2.1.1  Arquiteturas B\u00e1sicas\n\t2.1.2  PROM (Programmable Read-Only Memory)\n\t2.1.3  PLA (Programmable Logic Array)\n\t2.1.4  PAL (Programmable Array Logic)\n\n\t2.2 Elementos de Programa\u00e7\u00e3o\n\t2.2.1 Fus\u00edvel (Fuse)\n\t2.2.2 Antifus\u00edvel (Antifuse)\n\t2.2.3 C\u00e9lulas SRAM (SRAM Cells)\n\t2.2.4 EPROM e EEPROM\n\n\t2.3  CPLDs (Complex PLDs)\n\t2.3.1 CPLDs da Altera\n\t2.3.2 A Tecnologia FPGA\n\t2.3.3 Arquiteturas das FPGAs\n\t2.3.4 Arquitetura Cyclone\n\t2.3.5 Aplica\u00e7\u00f5es de FPGAs\n\n\n\t3 Capta\u00e7\u00e3o, Digitaliza\u00e7\u00e3o e Exibi\u00e7\u00e3o de Imagens Monocrom\u00e1ticas\n\t3.1 Considera\u00e7\u00f5es Iniciais\n\t3.1.1 O Sinal de V\u00eddeo Composto\n\n\t3.2 Circuito de Capta\u00e7\u00e3o, Digitaliza\u00e7\u00e3o, e Exibi\u00e7\u00e3o de Imagens Monocrom\u00e1ticas\n\t3.2.1 Capta\u00e7\u00e3o, Digitaliza\u00e7\u00e3o e Exibi\u00e7\u00e3o de Imagens Monocrom\u00e1ticas\n\t3.2.1.1  Separador de Sincronismo\n\t3.2.1.2 Conversor A/D\n\t3.2.1.3 Buffer\n\t3.2.1.4 Conversor D/A\n\t3.2.1.5 Sa\u00edda de V\u00eddeo \n\n\n\n\t4 Armazenamento de Imagens Monocrom\u00e1ticas\n\t4.1 Controle para Armazenamento de Imagens Monocrom\u00e1ticas\n\t4.1.1 Mem\u00f3rias \n\t4.1.2 Unidade de Controle\n\t4.1.2.1 Unidade de Exclus\u00e3o de Pulsos de Sincronismo\n\t4.1.2.2 Unidade de Controle Interna\n\t4.1.2.3 Unidade de Controle das Mem\u00f3rias\n\n\n\t4.2 Considera\u00e7\u00f5es Finais\n\n\t5 Integra\u00e7\u00e3o do Sinal de V\u00eddeo\n\t5.1 Considera\u00e7\u00f5es Iniciais\n\t5.1.1 Integra\u00e7\u00e3o do Sinal de V\u00eddeo na Dire\u00e7\u00e3o Horizontal\n\t5.1.2 Integra\u00e7\u00e3o do Sinal de V\u00eddeo na Dire\u00e7\u00e3o Vertical\n\n\n\t6 Testes e Resultados\n\t6.1 Considera\u00e7\u00f5es Iniciais\n\t6.1.1 Materiais\n\t6.1.2 Simula\u00e7\u00e3o da unidade de controle\n\t6.1.3 Simula\u00e7\u00e3o e Teste do somador de pixels horizontais\n\t6.1.4 Simula\u00e7\u00e3o e teste do somador de pixels verticais\n\n\t6.2 Considera\u00e7\u00f5es Finais \n\n\t7 Conclus\u00f5es\n\t7.1 Considera\u00e7\u00f5es Iniciais\n\t7.2 An\u00e1lise dos Resultados\n\t7.3 Propostas para Trabalhos Futuros\n\n\tAp\u00eandice A\n\tAp\u00eandice B\n\tAp\u00eandice C\n\tAp\u00eandice D\n\tAp\u00eandice E\n\tAp\u00eandice F\n\tAp\u00eandice G\n\tAp\u00eandice H"}]}}}