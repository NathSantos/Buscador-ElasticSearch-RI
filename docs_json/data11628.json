{"add": {"doc": {"field": [{"@name": "docid", "#text": "BR-TU.15171"}, {"@name": "filename", "#text": "21565_296291.pdf"}, {"@name": "filetype", "#text": "PDF"}, {"@name": "text", "#text": "NICOLE BEATRIZ PORTILLA CONSTAIN \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n\nINTEGRA\u00c7\u00c3O DE SISTEMAS SCADA COM A  \nIMPLEMENTA\u00c7\u00c3O DE CONTROLE SUPERVIS\u00d3RIO EM CLP \n\nPARA SISTEMAS DE MANUFATURA \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n\nFLORIAN\u00d3POLIS \n2011 \n\n\n\n  \n\n\n\nUNIVERSIDADE FEDERAL DE SANTA CATARINA \n \n\nPROGRAMA DE P\u00d3S-GRADUA\u00c7\u00c3O  \nEM ENGENHARIA DE AUTOMA\u00c7\u00c3O E SISTEMAS \n\n \n \n \n \n \n\nINTEGRA\u00c7\u00c3O DE SISTEMAS SCADA COM A \n IMPLEMENTA\u00c7\u00c3O DE CONTROLE SUPERVIS\u00d3RIO EM CLP \n\nPARA SISTEMAS DE MANUFATURA \n \n \n \n \n \n \n \nDisserta\u00e7\u00e3o submetida ao Progra-\nma de P\u00f3s-Gradua\u00e7\u00e3o em Enge-\nnharia de Automa\u00e7\u00e3o e Sistemas e \nda Universidade Federal de Santa \nCatarina para a obten\u00e7\u00e3o do Grau \nde Mestrado em Engenharia de Au-\ntoma\u00e7\u00e3o e Sistemas \nOrientador: Prof. Dr. Max Hering \nde Queiroz \n\n \n \n \n \n \n\nNicole Beatriz Portilla Constain \n \n\n \n \n \n \n \n\nFlorian\u00f3polis, Setembro de 2011 \n\n\n\n \n  \n\n\n\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \nDedico este trabalho humildemente a \nDeus e seu filho Jesus Cristo, a meus \nprofessores, fam\u00edlia e amigos por to-\ndos os ensinamentos, apoio e confian-\n\u00e7a que depositaram em mim para a re-\naliza\u00e7\u00e3o desse trabalho, o que me im-\npulsiona a continuar seguindo em fren-\nte. \n\n\n\n \n\n \n\n  \n\n\n\n \n\n \n\nAGRADECIMENTOS \n \n \n\nAgrade\u00e7o primeiramente a Deus pelas b\u00ean\u00e7\u00e3os da vida e capaci-\ndade intelectual, que me permitiram concluir este trabalho. \n\nAos meus amados pais Nicol\u00e1s e Beatriz e minhas irm\u00e3s Sandra e \nAlejandra por seu amor incondicional e porque sempre me apoiaram e \nimpulsionaram a continuar seguindo em frente, mesmo sob press\u00f5es e \ndesgaste f\u00edsico e emocional;  \n\nAo meu orientador, Max Hering de Queiroz e meu co-orientador \nJose Eduardo Ribeiro Cury pelo apoio, compreens\u00e3o, paci\u00eancia e conhe-\ncimentos transmitidos. Levo-os como exemplo para a minha nova etapa \nprofissional. \n\nAos professores Carlos Barros Montez e Marcelo Stemmer pela \ninstru\u00e7\u00e3o no \u00e2mbito pr\u00e1tico da doc\u00eancia. \n\nA todos os professores do DAS pela instru\u00e7\u00e3o que me capacitou a \ndesenvolver este trabalho.  \n\n\u00c0 Universidade Federal de Santa Catarina pela oportunidade de \natuar como aluna bolsista do Programa de P\u00f3s-gradua\u00e7\u00e3o. O meu respei-\nto por esta grande e importante universidade.  \n\nAgrade\u00e7o \u00e0 Coordena\u00e7\u00e3o de Aperfei\u00e7oamento de Pessoal de N\u00ed-\nvel Superior (CAPES) pela concess\u00e3o da bolsa de estudo que viabilizou \no pleno desenvolvimento de meu Mestrado. \n\n\u00c0 todos os meus amigos que vivenciaram todas as dificuldades e \nsempre me incentivaram nesta longa e dif\u00edcil jornada. \n\nEnfim, agrade\u00e7o a todos os envolvidos, que direta ou indireta-\nmente, contribu\u00edram para que eu pudesse alcan\u00e7ar mais este est\u00e1gio em \nminha vida.  \n \nA todos, muito obrigada! \n \n \n \n \n \n \n \n \n \n \n \n\n\n\n \n\n \n\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n  \n\n\n\n \n\n \n\nRESUMO \n \n \nOs sistemas SCADA (Supervisory Control and Data Acquisition) s\u00e3o \nsistemas que utilizam tecnologias de computa\u00e7\u00e3o e comunica\u00e7\u00e3o para \nautomatizar a monitora\u00e7\u00e3o e o controle de processos industriais, efetu-\nando coleta de dados, os quais s\u00e3o apresentados de modo amig\u00e1vel para \no operador, atrav\u00e9s de interfaces homem-m\u00e1quina (IHM). Dentre esses \nprocessos encontram-se os sistemas de manufatura, cuja din\u00e2mica, sob a \n\u00f3tica do problema de coordena\u00e7\u00e3o, os enquadra na classe de Sistemas a \nEventos Discretos (SED). A Teoria de Controle Supervis\u00f3rio (TCS) \nbaseia-se em modelos de aut\u00f4matos e linguagens para s\u00edntese de super-\nvisores \u00f3timos para SED que podem ser traduzidos em c\u00f3digo estrutura-\ndo para controladores l\u00f3gicos program\u00e1veis (CLP). Este trabalho apre-\nsenta uma proposta de metodologia para o desenvolvimento integrado \nde sistemas SCADA com a programa\u00e7\u00e3o de controle supervis\u00f3rio em \nCLP para sistemas de manufatura. A metodologia proposta est\u00e1 consti-\ntu\u00edda de 8 fases: projeto informacional; s\u00edntese de controle supervis\u00f3rio \nseguindo a abordagem modular local da TCS; emula\u00e7\u00e3o da atua\u00e7\u00e3o dos \nsupervisores na planta; implementa\u00e7\u00e3o estruturada do controle supervi-\ns\u00f3rio em CLP; implementa\u00e7\u00e3o de funcionalidades b\u00e1sicas do sistema \nSCADA; avalia\u00e7\u00e3o de funcionamento do sistema real;  implementa\u00e7\u00e3o \nde funcionalidades gerais do sistema SCADA e, por \u00faltimo, valida\u00e7\u00e3o \ndo sistema integrado. Esta metodologia \u00e9 aplicada ao controle e supervi-\ns\u00e3o de uma c\u00e9lula flex\u00edvel de manufatura do LAI-UFSC. Os resultados \nobtidos demonstram sistematiza\u00e7\u00e3o, flexibilidade e efici\u00eancia na reali-\nza\u00e7\u00e3o do projeto de controle e supervis\u00e3o do sistema, al\u00e9m de permitir \nestrutura\u00e7\u00e3o e valida\u00e7\u00e3o do programa do CLP e do sistema SCADA. \n \nPalavras-chave: sistemas SCADA; controle supervis\u00f3rio; controladores \nl\u00f3gicos program\u00e1veis, sistemas a eventos discretos; sistemas de manufa-\ntura. \n \n \n \n \n \n \n \n \n \n\n\n\n \n\n \n\n \n \n \n \n \n \n \n \n \n \n \n  \n\n\n\n \n\n \n\nABSTRACT \n \n \n\nSCADA systems (Supervisory Control and Data Acquisition) are \nsystems using computing and communication technologies to automate the \nmonitoring and control of industrial processes, making data collection, \nwhich are presented in a friendly form for the operator, through Human \nMachine Interface (HMI). Among these processes are the manufacturing \nsystems, whose dynamics, from the perspective of the coordination prob-\nlem, include them in the class of discrete event systems (DES). The Super-\nvisory Control Theory (SCT) is based on models of automata and languages \nfor optimal synthesis of supervisors for DES, which can be translated into \nstructured code for programmable logic controllers (PLC). This work \npresents a proposal of methodology for integrated development of SCADA \nsystems with the programming of supervisory control in PLC for manufac-\nturing systems. The proposed methodology is comprised of eight phases: \ninformational design; synthesis of supervisory control, following the local \nmodular approach of TCS; emulation of the performance of supervisors in \nthe plant; structured implementation of supervisory control in the PLC; \nimplementation of basic functionality of SCADA system, evaluation of \noperation of the real system; implementation of the overall functionality of \nthe SCADA system and, finally, validation of the integrated system. This \nmethodology is applied to the control and supervision of a flexible manu-\nfacturing cell of the LAI-UFSC. The results demonstrate systematic, flex-\nibility and efficiency in carrying out the project control and supervision \nsystem, and allows structuring and validation of the program PLC and \nSCADA system. \n \nKeywords: SCADA systems; supervisory control; programmable logic \ncontrollers; discrete event systems; manufacturing systems.  \n \n \n \n \n \n \n  \n\n\n\n \n\n \n\n  \n\n\n\n \n\n \n\nLISTA DE FIGURAS \n \n\nFigura 1.1 Pir\u00e2mide da automa\u00e7\u00e3o ......................................................... 1 \nFigura 2.1 Arquitetura t\u00edpica de um sistema SCADA ............................ 8 \nFigura 2.2 Layout geral de um sistema SCADA .................................. 10 \nFigura 3.1 Visualiza\u00e7\u00e3o gr\u00e1fica de um gerador .................................... 22 \nFigura 3.2 Estrutura em malha fechada do controle supervis\u00f3rio ........ 24 \nFigura 3.3 Exemplifica\u00e7\u00e3o para obten\u00e7\u00e3o de supervisores locais .........26 \nFigura 3.4 C\u00e9lula flex\u00edvel de manufatura (SILVA, 2010) .................... 28 \nFigura 3.5 Geradores para os subsistemas da CFM (SILVA, 2010) .... 31 \nFigura 3.6 Especifica\u00e7\u00f5es para a CFM (SILVA, 2010) ....................... 34 \nFigura 3.7 Arquitetura de Controle Supervis\u00f3rio (QUEIROZ e CURY,  \n                 2002) ...................................................................................  38 \nFigura 3.8 Exemplo da estrutura do c\u00f3digo de implementa\u00e7\u00e3o em  \n                 Ides2ST ................................................................................ 40 \nFigura 4.1 Metodologia ........................................................................ 44 \nFigura 4.2 Sin\u00f3tico para a CFM ........................................................... 53 \nFigura 4.3 SFC Main (VIEIRA et al, 2007) ......................................... 55 \nFigura 4.4 Implementa\u00e7\u00e3o de hist\u00f3rico de eventos .............................. 58 \nFigura 4.5 Passo 1: Cria\u00e7\u00e3o da fila ....................................................... 59 \nFigura 4.6 Trecho de c\u00f3digo do sistema produto ................................. 59 \nFigura 4.7 Passo 2: Cria\u00e7\u00e3o de ponteiro para retirar elementos da fila..60 \nFigura 4.8 Passo 3: C\u00e1lculo da posi\u00e7\u00e3o que deve ser lida .................... 61 \nFigura 4.9 Passo 4: Atualiza\u00e7\u00e3o de ponteiro com a nova posi\u00e7\u00e3o a ser  \n                  lida ...................................................................................... 62 \nFigura 4.10 Passo 5: Gera\u00e7\u00e3o de hist\u00f3rico de eventos alfanum\u00e9rico \n                    para a CFM ....................................................................... 62 \nFigura 4.11 Trecho de c\u00f3digo do evento control\u00e1vel e_afur ................ 63 \nFigura 4.12 C\u00f3digo que implementa alarmes gerais ............................ 64 \nFigura 4.13 Gr\u00e1fico de tend\u00eancia para a CFM ..................................... 65 \nFigura 4.14 C\u00f3digo que implementa a receita para a CFM .................. 66 \nFigura 4.15 Representa\u00e7\u00e3o gr\u00e1fica da receita para a CFM ................... 66 \nFigura 4.16 Relat\u00f3rio do hist\u00f3rico de eventos para a CFM .................. 67 \nFigura 4.17 Scripts para implementar n\u00famero de pe\u00e7as de entrada ..... 68 \nFigura 5.1 CFM sistema RHINO ......................................................... 72 \nFigura 5.2 Conjunto final ..................................................................... 73 \nFigura 5.3 Arquitetura sistema RHINO ............................................... 75 \nFigura 5.4 Geradores alimentadores (a) ??, (b) ??, (c) ?? e (d) ?? ..... 79 \nFigura 5.5 Geradores do torno e usinagem (a) ?? e (b) ?? .................. 80 \nFigura 5.6 Gerador do teste ?? ............................................................. 80 \nFigura 5.7 Gerador do rob\u00f4 XR4 ?\t .................................................... 81 \n\n\n\n \n\n \n\nFigura 5.8 Gerador da esteira de alimenta\u00e7\u00e3o ?\n.................................. 81 \nFigura 5.9 Gerador da aduana ??? ........................................................ 82 \nFigura 5.10 Gerador do rob\u00f4 SCARA ??? ........................................... 82 \nFigura 5.11 Gerador da esteira de sa\u00edda ??? ......................................... 83 \nFigura 5.12 Especifica\u00e7\u00e3o de coordena\u00e7\u00e3o dos alimentadores com o \n                   rob\u00f4 XR4 (a) ??\n, (b) ??? (c) ??? e (d) ???  ...................... 83 \nFigura 5.13 Especifica\u00e7\u00e3o do buffer do torno (a) ??\n e sistema de  \n                   vis\u00e3o ??? ............................................................................ 84 \nFigura 5.14 Especifica\u00e7\u00e3o do buffer do centro de usinagem ??? ......... 84 \nFigura 5.15 Especifica\u00e7\u00f5es de coordena\u00e7\u00e3o do rob\u00f4 XR4 com o \n                    torno (a) ??\n e (c) ??? e centro de usinagem (b) ??? ....... 85 \nFigura 5.16 Especifica\u00e7\u00f5es de coordena\u00e7\u00e3o do torno e centro de \n                   usinagem com o rob\u00f4 XR4 (a) ??\n, (b) ??? e (c) ??? ........85 \nFigura 5.17 Especifica\u00e7\u00f5es de coordena\u00e7\u00e3o do rob\u00f4 XR4 com o  \n                    sistema de vis\u00e3o (a) ??\n, (b) ??? e (c) ??? ....................... 85 \nFigura 5.18 Especifica\u00e7\u00f5es de coordena\u00e7\u00e3o do sistema de vis\u00e3o  \n                   com o rob\u00f4 XR4 (a) ??\n, (b) ???, (c) ??? e (d) ???  .......... 86 \nFigura 5.19 Especifica\u00e7\u00f5es gen\u00e9ricas para a coordena\u00e7\u00e3o do rob\u00f4  \n                   XR4 com a esteira de alimenta\u00e7\u00e3o ??\n e com a aduana  \n                    ??? .................................................................................... 87 \nFigura 5.20 Sequ\u00eancia de opera\u00e7\u00f5es relacionada \u00e0 especifica\u00e7\u00e3o \n                    ??\n .................................................................................... 88 \nFigura 5.21 Especifica\u00e7\u00e3o do avan\u00e7o da esteira ?\t .............................. 89 \nFigura 5.22 Especifica\u00e7\u00f5es do mutex do rob\u00f4 XR4 e SCARA com a  \n                   esteira de alimenta\u00e7\u00e3o (a) ?\n\n, (b) ?\n? e da aduana com  \n                   a esteira de alimenta\u00e7\u00e3o (c) ?\n? ......................................... 90 \nFigura 5.23 Especifica\u00e7\u00f5es de montagem de conjuntos na posi\u00e7\u00e3o 1                  \n\n(a) ???\n e na posi\u00e7\u00e3o 2 (b) ???? da mesa de montagem ..90 \nFigura 5.24 Especifica\u00e7\u00e3o da prioridade das bases sobre os an\u00e9is e  \n                   os cilindros ???  ................................................................. 91 \nFigura 5.25 Especifica\u00e7\u00e3o de limite de duas bases ??? ........................ 92 \nFigura 5.26 Especifica\u00e7\u00e3o esteira de sa\u00edda ??? .................................... 93 \nFigura 5.27 Sin\u00f3tico para o sistema RHINO ....................................... 99 \nFigura 5.28 Tela de comandos estado Manual ................................... 101 \nFigura 5.29 Hist\u00f3rico de eventos gerado para o sistema RHINO ...... 101 \nFigura 5.30 Trecho de c\u00f3digo do evento control\u00e1vel I_tor_C ........... 102 \nFigura 5.31 C\u00f3digo que implementa o alarme da esteira de \n                    alimenta\u00e7\u00e3o .................................................................... 103 \nFigura 5.32 C\u00f3digo que implementa uma receita no sistema  \n                    RHINO ........................................................................... 103 \n\n\n\n \n\n \n\nFigura 5.33 Tela da receita ................................................................. 104 \nFigura 5.34 Trecho de c\u00f3digo contagem de an\u00e9is aprovados e  \n                     reprovados ..................................................................... 104 \nFigura 5.35 Tend\u00eancias de aprova\u00e7\u00e3o e reprova\u00e7\u00e3o de pe\u00e7as ............ 105 \nFigura 5.36 Relat\u00f3rio do hist\u00f3rico de eventos do sistema RHINO .... 105 \n \n \n\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n  \n\n\n\n \n\n \n\n  \n\n\n\n \n\n \n\nLISTA DE TABELAS \n \nTabela 3.1 Eventos da C\u00e9lula Flex\u00edvel de Manufatura \u2026\u2026.\u2026\u2026\u2026...  30 \nTabela 3.2 Plantas locais para a CFM (SILVA, 2010) ........................  35 \nTabela 3.3 N\u00famero de estados dos geradores da s\u00edntese de supervisores \n                (SILVA, 2010) .....................................................................  36 \nTabela 4.1 Descri\u00e7\u00e3o dos estados relevantes dos supervisores para o  \n                sin\u00f3tico da CFM ..................................................................  52 \nTabela 4.2 C\u00f3digo em ST para implementar comandos ......................  56 \nTabela 5.1 Eventos do sistema RHINO ................................................ 76 \nTabela 5.2 Plantas locais para o sistema RHINO ................................. 94 \nTabela 5,3 N\u00famero de estados dos geradores da s\u00edntese dos supervi- \n                sores .......................................................................................95  \nTabela 5.4 Descri\u00e7\u00e3o dos estados relevantes de supervisores para o  \n                sin\u00f3tico do sistema RHINO .................................................  98 \n \n \n  \n\n\n\n \n\n \n\n  \n\n\n\n \n\n \n\nLISTA DE ABREVIATURAS \n \nCFM c\u00e9lula flex\u00edvel de manufatura  \nCLP controlador l\u00f3gico program\u00e1vel  \ne.r.a em rela\u00e7\u00e3o a \nERP       enterprise resource planning (planejamento dos recursos da  \n              empresa) \nIHM human machine interface (interface humano m\u00e1quina)  \nIED dispositivo eletr\u00f4nico inteligente \nLAN local area network (rede de \u00e1rea local)  \nMES       manufacturing execution systems (sistemas de execu\u00e7\u00e3o da \n              manufatura) \nMMI man machine interface (interface homem m\u00e1quina) \nMTU unidade terminal mestre  \nRTU unidade terminal remota  \nSCADA supervisory control and data adquisition (controle superviso- \n                rio e aquisi\u00e7\u00e3o de dados) \nSED sistema a eventos discretos  \nTCS teoria de controle supervis\u00f3rio  \nWAN wide area network (rede de longa dist\u00e2ncia)  \n \n \n \n \n \n  \n\n\n\n \n\n \n\n  \n\n\n\n \n\n \n\nLISTA DE S\u00cdMBOLOS \n \n \n? operador de produto s\u00edncrono \n?  conjunto vazio \n?, ?  linguagens \n?  alfabeto \n??   conjunto de eventos control\u00e1veis \n??   conjunto de eventos n\u00e3o control\u00e1veis \n??   conjunto de todas as cadeias finitas de ? \n?                         cadeia vazia \nG  gerador \n????  linguagem gerada por G \n?? ???  linguagem marcada por G \n?  especifica\u00e7\u00e3o \n?  supervisor \n?? ?  supervisor local \n?!\"?  supervisor reduzido \n?/?  supervisor S controlando G \n?$%&amp;??, ?? suprema sublinguagem de K control\u00e1vel e.r.a G \n \n  \n\n\n\n \n\n \n\n  \n\n\n\n \n\n \n\n \n \n \n \n\nSUM\u00c1RIO \n \n1. INTRODU\u00c7\u00c3O .................................................................................. 1 \n\n2. SISTEMAS SCADA ........................................................................... 7 \n\n2.1 DEFINI\u00c7\u00c3O DE SCADA ......................................................... 7 \n\n2.2 ARQUITETURA DE UM SISTEMA SCADA ......................... 8 \n\n2.2.1 Operador ................................................................................... 9 \n\n2.2.2 Interface Homem M\u00e1quina (IHM) ............................................ 9 \n\n2.2.3 Esta\u00e7\u00e3o central ou unidade terminal mestre (MTU) ................. 9 \n\n2.2.4 Rede de comunica\u00e7\u00e3o ............................................................. 10 \n\n2.2.5 Esta\u00e7\u00e3o Remota ....................................................................... 11 \n\n2.2.6 Dispositivos de campo ............................................................ 12 \n\n2.2.7 Processo f\u00edsico ........................................................................ 12 \n\n2.3 FUN\u00c7\u00d5ES DO SISTEMA SCADA ............................................. 12 \n\n2.4 SOFTWARE DE SUPERVIS\u00c3O ................................................. 13 \n\n2.4.1 Funcionalidades de um sistema SCADA ................................ 14 \n\n2.4.2 ScadaBR.................................................................................. 16 \n\n2.5 METODOLOGIAS PARA DESENVOLVIMENTO DE \nSISTEMAS SCADA ............................................................................. 17 \n\n2.6 CONCLUS\u00c3O DO CAP\u00cdTULO .................................................. 18 \n\n3. TEORIA DE CONTROLE SUPERVIS\u00d3RIO DE SISTEMAS A \nEVENTOS DISCRETOS ...................................................................... 21 \n\n3.1 SISTEMAS A EVENTOS DISCRETOS (SED) .......................... 21 \n\n3.2 TEORIA DE CONTROLE SUPERVIS\u00d3RIO (TCS) .................. 23 \n\n3.3 C\u00c9LULA FLEX\u00cdVEL DE MANUFATURA ............................... 27 \n\n3.3.1 Descri\u00e7\u00e3o do sistema ............................................................... 28 \n\n\n\n \n\n \n\n3.3.2 Modelagem da planta .............................................................. 29 \n\n3.3.3 Modelagem das especifica\u00e7\u00f5es ............................................... 32 \n\n3.3.4 S\u00edntese de supervisores modulares locais da CFM ................. 34 \n\n3.4 ARQUITETURA DE CONTROLE SUPERVIS\u00d3RIO ............... 36 \n\n3.5 FERRAMENTAS PARA SIMULA\u00c7\u00c3O E IMPLEMENTA\u00c7\u00c3O\n 37 \n\n3.5.1 IDES ....................................................................................... 38 \n\n3.5.2 TCT ......................................................................................... 38 \n\n3.5.3 Supremica ............................................................................... 38 \n\n3.5.4 Ides2ST ................................................................................... 39 \n\n3.6 CONCLUS\u00c3O DO CAP\u00cdTULO .................................................. 41 \n\n4. METODOLOGIA PARA DESENVOLVIMENTO INTEGRADO DE \nSISTEMAS SCADA COM CONTROLE SUPERVIS\u00d3RIO ............... 43 \n\n4.1 METODOLOGIA ........................................................................ 43 \n\n4.1.1 Fase I \u2013 Projeto informacional ................................................ 45 \n\n4.1.2 Fase II \u2013 S\u00edntese de controle supervis\u00f3rio .............................. 45 \n\n4.1.3 Fase III - Emula\u00e7\u00e3o ................................................................. 47 \n\n4.1.4 Fase IV - Implementa\u00e7\u00e3o do controle supervis\u00f3rio em CLP .. 47 \n\n4.1.5 Fase V - Implementa\u00e7\u00e3o de funcionalidades b\u00e1sicas do sistema   \nSCADA 48 \n\n4.1.6 Fase VI - Avalia\u00e7\u00e3o de funcionamento do sistema real .......... 49 \n\n4.1.7 Fase VII - Implementa\u00e7\u00e3o de funcionalidades gerais do sistema \nSCADA 49 \n\n4.1.8 Fase VIII - Valida\u00e7\u00e3o.............................................................. 50 \n\n4.2 IMPLEMENTA\u00c7\u00c3O DE FUNCIONALIDADES DO SISTEMA \nSCADA ................................................................................................. 50 \n\n4.2.1 Sin\u00f3tico ................................................................................... 50 \n\n4.2.2 Envio de Comandos .............................................................. 54 \n\n4.2.3 Hist\u00f3rico de Eventos ............................................................. 57 \n\n4.2.4 Gera\u00e7\u00e3o de alarmes cr\u00edticos .................................................. 63 \n\n\n\n \n\n \n\n4.2.5 Gera\u00e7\u00e3o de alarmes gerais ..................................................... 64 \n\n4.2.6 Gr\u00e1ficos de tend\u00eancias .......................................................... 64 \n\n4.2.7 Receitas ................................................................................. 65 \n\n4.2.8 Relat\u00f3rios .............................................................................. 67 \n\n4.2.9 Gera\u00e7\u00e3o de informa\u00e7\u00e3o para n\u00edveis gerenciais ...................... 67 \n\n4.3 CONCLUS\u00c3O DO CAP\u00cdTULO .................................................. 69 \n\n5. APLICA\u00c7\u00c3O DA METODOLOGIA A UMA C\u00c9LULA FLEX\u00cdVEL \nDE MANUFATURA ............................................................................ 71 \n\n5.1 FASE I: PROJETO INFORMACIONAL .................................... 71 \n\n5.2 FASE II: S\u00cdNTESE DE CONTROLE SUPERVIS\u00d3RIO ............. 76 \n\n5.2.1 Etapa 2.1 Modelagem dos subsistemas da CFM ..................... 76 \n\n5.2.2 Etapa 2.2 Modelagem das especifica\u00e7\u00f5es ............................. 83 \n\n5.2.3 Etapa 2.3 S\u00edntese de Supervisores ......................................... 93 \n\n5.3 FASE III: EMULA\u00c7\u00c3O ............................................................... 96 \n\n5.4 FASE IV: IMPLEMENTA\u00c7\u00c3O DO CONTROLE \nSUPERVIS\u00d3RIO EM CLP ................................................................... 96 \n\n5.5 FASE V: IMPLEMENTA\u00c7\u00c3O DE FUNCIONALIDADES \nB\u00c1SICAS DO SISTEMA SCADA ....................................................... 97 \n\n5.6 FASE VI: AVALIA\u00c7\u00c3O DO FUNCIONAMENTO DO \nSISTEMA REAL ................................................................................ 102 \n\n5.7 VII: IMPLEMENTA\u00c7\u00c3O DE FUNCIONALIDADES DO \nSISTEMA SCADA ............................................................................. 102 \n\n5.8 FASE VIII: VALIDA\u00c7\u00c3O ......................................................... 106 \n\n5.9 AN\u00c1LISE DE RESULTADOS .................................................. 106 \n\n6. CONCLUS\u00d5ES ............................................................................... 109 \n\nREFER\u00caNCIAS .................................................................................. 113 \n\n \n \n \n \n \n \n\n\n\n \n\n \n\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n  \n\n\n\n1. INTRODU\u00c7\u00c3O \n\n \nCom o aumento da competi\u00e7\u00e3o no mercado, torna-se obrigat\u00f3rio \n\nreduzir continuamente os custos e melhorar o processo produtivo sem-\npre que poss\u00edvel. O sucesso depende muito da habilidade para acessar, \nentender e interpretar o grande volume de informa\u00e7\u00f5es geradas pela \nopera\u00e7\u00e3o do processo. Por isso, surge nas ind\u00fastrias a necessidade de \nagregar tecnologia da informa\u00e7\u00e3o aos processos de automa\u00e7\u00e3o industri-\nal, abrangendo tamb\u00e9m a automa\u00e7\u00e3o do neg\u00f3cio. Em geral a integra\u00e7\u00e3o \nentre as diversas tecnologias de informa\u00e7\u00e3o \u00e9 organizada em n\u00edveis hie-\nr\u00e1rquicos conforme a pir\u00e2mide da automa\u00e7\u00e3o (MORAES e CASTRUC-\nCI, 2008), apresentada na Figura 1.1. \n\nN\u00edvel 5:\n\nGerenciamento \n\nCorporativo\n\nN\u00edvel 4: \n\nGerenciamento de Planta\n\nWorkstation\n\nN\u00edvel 3:\n\nSCADA\n\nWorkstation, PC, IHM\n\nN\u00edvel 2:\n\nControle\n\nCLP, RTU, PC, SDCD, CNC\n\nN\u00edvel 1:\n\nDispositivos de campo (sensores e atuadores)\n\n \nFigura 1.1 Pir\u00e2mide da automa\u00e7\u00e3o  \nFonte: Adaptado de Moraes e Castrucci (2008) \n \n\nObserva-se, na Figura 1.1, os 5 n\u00edveis da pir\u00e2mide da automa\u00e7\u00e3o. \nO n\u00edvel 1, tamb\u00e9m chamado \u201cch\u00e3o de f\u00e1brica\u201d, por ser o n\u00edvel em que \nest\u00e3o as m\u00e1quinas diretamente respons\u00e1veis pela produ\u00e7\u00e3o, \u00e9 composto \n\n\n\n \n2 Introdu\u00e7\u00e3o \n\n \n\n \n\npelos dispositivos de campo: sensores e atuadores. O n\u00edvel 2 \u00e9 respons\u00e1-\nvel pelo controle de todos os equipamentos de automa\u00e7\u00e3o do n\u00edvel 1 e \nengloba os Controladores L\u00f3gicos Program\u00e1veis (CLP), os Sistemas de \nControle Distribu\u00eddo (SDCD), Unidades Terminais Remotas (RTU), e \nDispositivos Eletr\u00f4nicos Inteligentes (IED), entre outros. Esses equipa-\nmentos tamb\u00e9m s\u00e3o respons\u00e1veis por repassar os comandos dos n\u00edveis \nsuperiores para as m\u00e1quinas da planta da f\u00e1brica (n\u00edvel 1). No n\u00edvel 3, \nencontram-se os sistemas supervis\u00f3rios, comumente conhecidos como \nsistemas SCADA (Supervisory Control and Data Acquisition), os quais \nconcentram as informa\u00e7\u00f5es passadas pelos equipamentos dos n\u00edveis 1 e \n2 em banco de dados e as repassam para os n\u00edveis administrativos (n\u00ed-\nveis 4 e 5). O n\u00edvel 4 \u00e9 respons\u00e1vel pelo planejamento e programa\u00e7\u00e3o da \nplanta fabril, passando as tarefas que devem ser realizadas para o n\u00edvel 3 \nque, por sua vez, distribui o trabalho para os n\u00edveis inferiores. Tamb\u00e9m \n\u00e9 o n\u00edvel respons\u00e1vel pelo controle e log\u00edstica de suprimentos. J\u00e1 a ad-\nministra\u00e7\u00e3o de todos os recursos da empresa est\u00e1 no n\u00edvel 5, no qual \u00e9 \ngerenciado todo o sistema. Neste n\u00edvel encontram-se os softwares para \ngest\u00e3o de vendas financeiras (MORAES e CASTRUCCI, 2008). \n\nOs sistemas SCADA, podem ser definidos como uma tecnologia \nque permite que seja monitorada e rastreada a informa\u00e7\u00e3o de um proces-\nso produtivo ou instala\u00e7\u00e3o f\u00edsica. Tais informa\u00e7\u00f5es s\u00e3o coletadas atrav\u00e9s \nde equipamentos de aquisi\u00e7\u00e3o de dados e, em seguida, manipuladas, \nanalisadas, armazenadas e, posteriormente, apresentadas ao usu\u00e1rio. \nEstes sistemas s\u00e3o tipicamente compostos por esta\u00e7\u00f5es terminais mes-\ntres (MTU), unidades remotas como: CLP, RTU ou IED, dispositivos de \ncampo como: sensores e atuadores e toda a tecnologia de comunica\u00e7\u00e3o \nenvolvida para interconex\u00e3o desses componentes (SILVA e SALVA-\nDOR, 2005). \n\nDentro das funcionalidades dos sistemas SCADA, encontram-se: \n\u2022 Configura\u00e7\u00e3o da interface de comunica\u00e7\u00e3o, das vari\u00e1veis de en-\n\ntrada e de sa\u00edda e dos operadores que ter\u00e3o acesso ao sistema;  \n\u2022 Constru\u00e7\u00e3o de sin\u00f3ticos, que representam graficamente os pro-\n\ncessos industriais;  \n\u2022 Gera\u00e7\u00e3o de gr\u00e1ficos de tend\u00eancias, que acompanham a evolu-\n\n\u00e7\u00e3o das vari\u00e1veis do sistema; \n\u2022 Gera\u00e7\u00e3o de alarmes, que avisam ao usu\u00e1rio do sistema quando \n\numa vari\u00e1vel ou condi\u00e7\u00e3o do processo de produ\u00e7\u00e3o est\u00e1 fora \ndos valores previstos; \n\n\u2022 Gera\u00e7\u00e3o de hist\u00f3ricos, que registram os eventos relevantes;  \n\n\n\n \nIntrodu\u00e7\u00e3o 3 \n\n \n\n \n\n\u2022 Produ\u00e7\u00e3o de relat\u00f3rios a partir dos dados da planta, dos alarmes \nocorridos em um intervalo de tempo e dos acessos ao sistema \npor parte dos operadores; \n\n\u2022 Gera\u00e7\u00e3o de scripts ou programas, que desenvolvem alguma l\u00f3-\ngica para o controle do processo;  \n\n\u2022 Cria\u00e7\u00e3o de receitas, que configuram os equipamentos da planta \npara que essa passe a produzir determinado(s) produto(s); e \n\n\u2022 Gera\u00e7\u00e3o de informa\u00e7\u00e3o para n\u00edveis gerenciais. \n \n\nEstas funcionalidades tornam a maioria dos sistemas SCADA, \nhoje instalados, uma parte essencial da estrutura de gest\u00e3o das informa-\n\u00e7\u00f5es corporativas e do ch\u00e3o de f\u00e1brica, os quais s\u00e3o vistos pela ger\u00eancia, \nn\u00e3o simplesmente como ferramentas operacionais, mas como recurso \nimportante de informa\u00e7\u00e3o. O presente trabalho aplica essas funcionali-\ndades para a supervis\u00e3o e controle de sistemas de manufatura.  \n\nUm sistema de manufatura \u00e9 normalmente composto por um \ngrande n\u00famero de subsistemas, cuja principal fun\u00e7\u00e3o \u00e9 desempenhar \numa s\u00e9rie de atividades, nas quais se desenvolvem opera\u00e7\u00f5es de monta-\ngem e processamento sobre uma mat\u00e9ria-prima, pe\u00e7a ou conjunto de \npe\u00e7as de modo a obter-se um produto final (GROOVER, 2001).  \n\n\u00c9 desej\u00e1vel que esses sistemas sejam flex\u00edveis e modulares, de \nforma a poder absorver as mudan\u00e7as na demanda, al\u00e9m de serem facil-\nmente aperfei\u00e7oados. No entanto, \u00e9 natural que isso implique aumento \nda complexidade nas opera\u00e7\u00f5es desenvolvidas. A flexibilidade adv\u00e9m \ndo elevado n\u00famero de tarefas poss\u00edveis de serem realizadas e a comple-\nxidade \u00e9 resultado das a\u00e7\u00f5es de coordena\u00e7\u00e3o dos subsistemas de forma \nque uma s\u00e9rie de tarefas individuais e conjuntas sejam atendidas garan-\ntindo o correto funcionamento global e o alcance dos objetivos de pro-\ndu\u00e7\u00e3o (BALIEIRO, 2007). \n\nSob a \u00f3tica do problema de coordena\u00e7\u00e3o, a din\u00e2mica dos sistemas \nde manufatura pode ser considerada como dirigida por eventos discretos \no que os enquadra na classe de Sistemas a Eventos Discretos (SED). Um \nSED \u00e9 um sistema de estados discretos e dirigido a eventos, isto \u00e9, a \nevolu\u00e7\u00e3o dos seus estados depende, na sua totalidade, da ocorr\u00eancia de \neventos discretos ass\u00edncronos ao longo do tempo (CASSANDRAS e \nLAFORTUNE, 1999). Al\u00e9m dos sistemas de manufatura, os exemplos \nde aplica\u00e7\u00f5es de SED s\u00e3o diversas (RAMADGE e WONHAM, 1989; \nCASSANDRAS e LAFORTUNE, 1999; CURY, 2001), dentre as quais \npodem ser ressaltadas: controle de tr\u00e1fego, telecomunica\u00e7\u00f5es, transpor-\nte, log\u00edstica e computa\u00e7\u00e3o.  \n\n\n\n \n4 Introdu\u00e7\u00e3o \n\n \n\n \n\nNum SED, a fun\u00e7\u00e3o de coordena\u00e7\u00e3o \u00e9 executada pelo sistema de \ncontrole que, muitas vezes, \u00e9 projetado de forma intuitiva ou sustentado \npela experi\u00eancia de profissionais que, em sua grande maioria, n\u00e3o fazem \nuso de ferramentas que possibilitem uma estrutura\u00e7\u00e3o do projeto \n(GOUYON et al., 2004). A n\u00e3o utiliza\u00e7\u00e3o de t\u00e9cnicas baseadas em fer-\nramentas formais para o projeto l\u00f3gico de controladores conduz a difi-\nculdades no entendimento, manuten\u00e7\u00e3o, altera\u00e7\u00e3o e detec\u00e7\u00e3o de erros no \nprograma de controle, sendo de grande import\u00e2ncia aqueles relacionados \n\u00e0 seguran\u00e7a operacional do processo (CHANDRA et al., 2003). \n\nNesse sentido tem ocorrido o desenvolvimento de muitos traba-\nlhos voltados ao estudo e an\u00e1lise de SEDs.  Dentre as op\u00e7\u00f5es formais \nexistentes para a an\u00e1lise e s\u00edntese de controle para SEDs encontram-se: \nl\u00f3gica temporal, redes de Petri, max-plus e teoria de controle supervis\u00f3-\nrio. Para avaliar desempenho destes modelos t\u00eam-se cadeias de markov, \nprocessos semi-markovianos generalizados, redes de filas e simula\u00e7\u00e3o \n(CASSANDRAS e LAFORTUNE, 1999). \n\nA Teoria de Controle Supervis\u00f3rio (TCS) proposta por Ramadge \ne Wonham (1989), propicia um processo autom\u00e1tico de s\u00edntese de con-\ntroladores \u00f3timos para o sistema. Seu objetivo \u00e9 projetar um supervisor \nque, em malha fechada com a planta, gere um comportamento que res-\npeite as especifica\u00e7\u00f5es de controle, garantindo que o sistema funcione \nconforme o desejado. O sistema final projetado \u00e9 minimamente restriti-\nvo e n\u00e3o bloqueante, ou seja, o supervisor desabilita apenas os eventos \nda planta que violam as restri\u00e7\u00f5es impostas a esta de forma a atribuir um \nmaior grau de liberdade ao sistema controlado.  \n\nDentre as diversas extens\u00f5es da TCS, est\u00e1 \u00e0 abordagem modular \nlocal (QUEIROZ e CURY, 2002) que possibilita a obten\u00e7\u00e3o de v\u00e1rios \nsupervisores ou elementos de controle menores, os quais oferecem mais \nclareza na l\u00f3gica de controle tornando f\u00e1cil sua interpreta\u00e7\u00e3o, alem de \nmais confi\u00e1vel ao projetista. Normalmente esses supervisores s\u00e3o menos \ncomplexos, uma vez que restringem parcialmente o processo, exploran-\ndo, portanto, a modularidade da planta e das especifica\u00e7\u00f5es. Como re-\nsultado, novos controladores podem ser r\u00e1pida e automaticamente proje-\ntados, o que facilita altera\u00e7\u00f5es no programa do CLP, sempre que \u00e9 feita \nalguma modifica\u00e7\u00e3o (inclus\u00e3o/exclus\u00e3o de equipamentos ou altera\u00e7\u00e3o \nno layout) no sistema de manufatura.  \n\nEsta abordagem tende a diminuir a complexidade computacional \nda s\u00edntese, al\u00e9m de facilitar a implementa\u00e7\u00e3o do sistema de controle. \nEssa implementa\u00e7\u00e3o \u00e9 baseada numa Arquitetura de Controle Supervi-\ns\u00f3rio (ACS) de tr\u00eas n\u00edveis: supervisores modulares, sistema produto e \nsequ\u00eancias operacionais, proposta por Queiroz e Cury (2002), a qual \u00e9 \n\n\n\n \nIntrodu\u00e7\u00e3o 5 \n\n \n\n \n\naplicada a uma c\u00e9lula de manufatura real controlada por CLP. Trabalhos \nrecentes t\u00eam buscado estender essa estrutura para controle distribu\u00eddo \nem m\u00faltiplos CLPs (Vieira, 2007).  O trabalho de Busseti e Santos \n(2006) trata da sistematiza\u00e7\u00e3o da implementa\u00e7\u00e3o gradativa de sistemas \nautomatizados e integrados de manufatura comandados por CLP, de \nacordo com ACS. Este trabalho mostra um ciclo de desenvolvimento \npara sistemas re-configur\u00e1veis quando novas aplica\u00e7\u00f5es forem necess\u00e1-\nrias, o qual \u00e9 caracterizado por tr\u00eas etapas: modelagem, s\u00edntese e imple-\nmenta\u00e7\u00e3o at\u00e9 o atendimento da aplica\u00e7\u00e3o demandada para o sistema \nreal.  \n\nComo suporte \u00e0 etapa de implementa\u00e7\u00e3o deste ciclo de desenvol-\nvimento e com o objetivo de validar com agilidade a ACS implementada \nnum CLP central e v\u00e1rios CLP locais, Diogo et al. (2008) prop\u00f5em o \ndesenvolvimento de uma aplica\u00e7\u00e3o chamada Ambiente Din\u00e2mico (AD), \ncapaz de coletar eventos gerados pela ACS e envi\u00e1-los a uma plataforma \nde simula\u00e7\u00e3o e vice-versa.  O AD \u00e9 uma aplica\u00e7\u00e3o instalada num com-\nputador que \u00e9 composto por um software SCADA, que desempenha \nv\u00e1rias fun\u00e7\u00f5es como fazer a liga\u00e7\u00e3o entre o CLP (central e local) e a \nplataforma de simula\u00e7\u00e3o; implementar uma biblioteca de modelos de \nsubsistemas reutiliz\u00e1veis juntamente com um canal de comunica\u00e7\u00e3o \npara comandos e outro para respostas; promover o encapsulamento dos \nsinais reais e virtuais numa base de dados para serem usados na simula-\n\u00e7\u00e3o. O SCADA possui ainda uma interface com o usu\u00e1rio por cada sub-\nsistema, para a escolha entre o modo de Simula\u00e7\u00e3o ou modo Ambiente \nReal onde a simula\u00e7\u00e3o deve ocorrer paralelamente \u00e0 execu\u00e7\u00e3o do subsis-\ntema f\u00edsico real.  \n\n A revis\u00e3o bibliogr\u00e1fica n\u00e3o aponta estudos que abordem o de-\nsenvolvimento integrado de sistemas SCADA que explorem a arquitetu-\nra do controle supervis\u00f3rio em CLP. \n\nA integra\u00e7\u00e3o pode trazer vantagens tanto para o desenvolvimento \ne aplica\u00e7\u00e3o da ACS em CLP quanto para a estrutura\u00e7\u00e3o de sistemas \nSCADA. As primeiras est\u00e3o relacionadas \u00e0s funcionalidades do sistema \nSCADA, as quais oferecem ao controle supervis\u00f3rio: visualiza\u00e7\u00e3o do \ncomportamento e modos de opera\u00e7\u00e3o do sistema por meio de um sin\u00f3ti-\nco; condu\u00e7\u00e3o do sistema ao estado inicial, supervisionado e manual, \natrav\u00e9s de comandos; gera\u00e7\u00e3o seletiva de eventos control\u00e1veis no estado \nmanual; gera\u00e7\u00e3o de receitas e; gera\u00e7\u00e3o de tend\u00eancias e relat\u00f3rios dos \neventos control\u00e1veis e n\u00e3o control\u00e1veis para o tratamento de falhas, \nentre outras. J\u00e1 as segundas, referem-se, \u00e0 estrutura\u00e7\u00e3o da l\u00f3gica de \ncontrole na forma de geradores, a qual permite que informa\u00e7\u00f5es do sis-\ntema real, sejam coletadas a partir dos estados dos modelos das plantas e \n\n\n\n \n6 Introdu\u00e7\u00e3o \n\n \n\n \n\nsupervisores, em forma de sin\u00f3tico, de alarmes e de hist\u00f3rico de even-\ntos.  \n\nAssim, o objetivo geral desta disserta\u00e7\u00e3o \u00e9 desenvolver uma me-\ntodologia de implementa\u00e7\u00e3o de Sistemas SCADA integrada \u00e0 progra-\nma\u00e7\u00e3o do controle supervis\u00f3rio em CLP para sistemas de manufatura. \nComo objetivos espec\u00edficos deste trabalho encontram-se:  \n\n \n\u2022 Desenvolver uma implementa\u00e7\u00e3o preliminar de SCADA apli-\n\ncada a um problema de controle solucionado por Silva e Quei-\nroz (2009) de uma c\u00e9lula flex\u00edvel de manufatura (CFM), utili-\nzando a abordagem modular local;  \n\n\u2022 Propor um m\u00e9todo de implementa\u00e7\u00e3o de funcionalidades de \nSCADA que fazem proveito da estrutura de implementa\u00e7\u00e3o de \ncontrole supervis\u00f3rio modular local. \n\n\u2022 Desenvolver uma metodologia de desenvolvimento de controle \nsupervis\u00f3rio em CLP integrado ao SCADA. \n\n\u2022 Aplicar a metodologia proposta ao controle de CFM no labora-\nt\u00f3rio de Automa\u00e7\u00e3o e Inform\u00e1tica Industrial do Departamento \nde Automa\u00e7\u00e3o e Sistemas (DAS) da UFSC.  \n\n \nO presente trabalho est\u00e1 dividido em 6 cap\u00edtulos, sendo o Cap\u00edtu-\n\nlo 1 a introdu\u00e7\u00e3o que j\u00e1 foi apresentada. A partir deste ponto, \u00e9 organi-\nzado como segue. No Cap\u00edtulo 2 apresentam-se a defini\u00e7\u00e3o, arquitetura, \nfun\u00e7\u00f5es, funcionalidades e o software SCADA que implementa as apli-\nca\u00e7\u00f5es  dos Cap\u00edtulos 4 e 5, assim como uma revis\u00e3o bibliogr\u00e1fica de \nmetodologias de implementa\u00e7\u00e3o de sistemas SCADA em processos \nprodutivos. No Cap\u00edtulo 3 s\u00e3o descritos conceitos fundamentais da TCS \nque depois \u00e9 exemplificada a partir de um problema real de controle \nsolucionado por Silva e Queiroz (2009) para uma CFM; ap\u00f3s este e-\nxemplo, \u00e9 explicada a arquitetura de controle supervis\u00f3rio (ACS) s\u00e3o \ndescritas as ferramentas computacionais para realizar a modelagem, \ns\u00edntese e implementa\u00e7\u00e3o da estrutura gen\u00e9rica de controle em CLP. No \nCap\u00edtulo 4, \u00e9 proposta a metodologia, objeto deste trabalho, para o de-\nsenvolvimento integrado de sistemas de SCADA com controle supervi-\ns\u00f3rio, ao tempo que \u00e9 proposto um m\u00e9todo de implementa\u00e7\u00e3o de fun-\ncionalidades de SCADA que fazem proveito da estrutura de implemen-\nta\u00e7\u00e3o de controle supervis\u00f3rio modular local. A aplica\u00e7\u00e3o da metodolo-\ngia a uma CFM \u00e9 apresentada no Cap\u00edtulo 5. Finalmente, no Cap\u00edtulo 6, \nas conclus\u00f5es e perspectivas futuras s\u00e3o apresentadas. \n  \n\n\n\n \n\n2. SISTEMAS SCADA  \n\n \nOs sistemas SCADA s\u00e3o sistemas que utilizam tecnologias de \n\ncomputa\u00e7\u00e3o e comunica\u00e7\u00e3o para automatizar o monitoramento e o con-\ntrole de processos industriais. Estes sistemas s\u00e3o parte integrante da \nmaioria dos ambientes industriais complexos ou geograficamente dis-\npersos, na medida em que podem coletar rapidamente os dados de uma \nquantidade grande de fontes, para depois serem apresentados a um ope-\nrador de uma forma amig\u00e1vel. Os sistemas SCADA melhoram a efic\u00e1cia \ndo processo de monitoramento e controle, fornecendo a informa\u00e7\u00e3o \noportuna para poder tomar decis\u00f5es operacionais apropriadas (PINHEI-\nRO, 2006). \n\nNeste cap\u00edtulo s\u00e3o apresentadas as principais caracter\u00edsticas e \nfuncionalidades de um sistema SCADA, al\u00e9m de serem descritos os \nrequisitos comuns a estes sistemas, tanto de software quanto de hardwa-\nre. Finalmente, s\u00e3o apresentadas metodologias para desenvolvimento e \nimplementa\u00e7\u00e3o de sistemas SCADA. \n\n2.1 DEFINI\u00c7\u00c3O DE SCADA \n\nO termo SCADA vem do ingl\u00eas \u201cSupervisory Control And Data \nAcquisition\u201d, ou Controle Supervis\u00f3rio e Aquisi\u00e7\u00e3o de Dados e se defi-\nne como um sistema que permite supervisionar e controlar um processo \nprodutivo ou instala\u00e7\u00e3o f\u00edsica, atrav\u00e9s da troca de informa\u00e7\u00e3o entre uma \nesta\u00e7\u00e3o central (chamada tamb\u00e9m de Unidade Terminal Mestre, MTU), \ne uma ou mais unidades remotas (CLP, RTU, IED). Atrav\u00e9s desses e-\nquipamentos \u00e9 feita a aquisi\u00e7\u00e3o de dados dos dispositivos de campo, \nfazendo-se necess\u00e1rio a utiliza\u00e7\u00e3o de redes de comunica\u00e7\u00e3o para atingir \neste objetivo. As informa\u00e7\u00f5es coletadas s\u00e3o manipuladas, analisadas, \narmazenadas e, posteriormente apresentadas ao operador em multiplici-\ndade de formas, atrav\u00e9s de uma interface de alto n\u00edvel (COELHO, \n2010).  \n\n\n\n \n8 Sistemas SCADA  \n\n \n\n \n\n2.2 ARQUITETURA DE UM SISTEMA SCADA \n\nA arquitetura t\u00edpica de um sistema SCADA est\u00e1 relacionada com \nseus componentes (KRUTZ, 2006), os quais s\u00e3o esquematicamente \napresentados na Figura 2.1, os quais s\u00e3o explicados a seguir. \n\nInterface Humano M\u00e1quina (IHM)\n\nEsta\u00e7\u00e3o Central /\n\nUnidade Terminal Mestre (MTU)\n\nEsta\u00e7\u00f5es Remotas\n\n(RTU, CLP, IED)\n\nOperador\n\nRede de comunica\u00e7\u00e3o\n\n(Relativamente, baixa taxa de dados, \n\nnormalmente controle em malha aberta)\n\nRede de comunica\u00e7\u00e3o\n\n(Relativamente, alta taxa de dados, \n\nnormalmente controle em malha fechada)\n\nDispositivos de campo: \n\n(sensores e atuadores)\n\nProcesso f\u00edsico\n\n \n\nFigura 2.1 Arquitetura t\u00edpica de um sistema SCADA \nFonte: Adaptado de Krutz (2006) \n\n\n\n \nSistemas SCADA 9 \n\n \n\n \n\n2.2.1 Operador \n\nO operador humano monitora e interage com o sistema SCADA e \nexecuta remotamente as fun\u00e7\u00f5es de controle supervis\u00f3rio. \n\n2.2.2 Interface Homem M\u00e1quina (IHM) \n\nA intera\u00e7\u00e3o entre os operadores e a esta\u00e7\u00e3o central, \u00e9 efetuada a-\ntrav\u00e9s de uma Interface Homem-M\u00e1quina (IHM). Esta interface \u00e9 cons-\ntitu\u00edda por software e hardware, que permite aos operadores monitorar o \nestado de um processo, modificar os valores de refer\u00eancia (setpoint), e \nsuspender manualmente as opera\u00e7\u00f5es de controle autom\u00e1tico em casos \nde emerg\u00eancia.  \n\nA IHM, apresenta graficamente as informa\u00e7\u00f5es do processo na \nforma de sin\u00f3ticos onde o operador pode visualizar um diagrama es-\nquem\u00e1tico da planta que \u00e9 controlada, a representa\u00e7\u00e3o gr\u00e1fica das esta-\n\u00e7\u00f5es remotas, os valores atuais dos instrumentos fabris e a apresenta\u00e7\u00e3o \ndos alarmes ativos. \n\nDado que \u00e9 ligada com o banco de dados do sistema SCADA, a \nIHM promove registros, diagn\u00f3stico de dados e informa\u00e7\u00e3o de adminis-\ntra\u00e7\u00e3o como: procedimentos de manuten\u00e7\u00e3o, informa\u00e7\u00e3o de log\u00edstica, \ndetalhes de agendamento e guias para resolu\u00e7\u00f5es de problemas.  \n\n2.2.3 Esta\u00e7\u00e3o central ou unidade terminal mestre (MTU)  \n\nA esta\u00e7\u00e3o central ou MTU \u00e9 a unidade principal do sistema \nSCADA sendo equivalente a uma unidade mestre numa arquitetura \nmestre-escravo e respons\u00e1vel principalmente por coletar, armazenar e \nprocessar as informa\u00e7\u00f5es geradas pelas esta\u00e7\u00f5es remotas, para depois \nserem colocadas \u00e0 disposi\u00e7\u00e3o dos diversos clientes ou operadores que \npossam requer\u00ea-las atrav\u00e9s da IHM e dessa forma agir em conformidade \ncom os eventos detectados. A taxa de transmiss\u00e3o de dados entre a MTU \ne a esta\u00e7\u00e3o remota \u00e9 relativamente baixa e o controle \u00e9 usualmente em \nmalha aberta devido a poss\u00edveis atrasos de comunica\u00e7\u00e3o ou interrup\u00e7\u00e3o \nno fluxo dos dados (KRUTZ, 2006). \n\nA MTU pode estar centralizada em um \u00fanico computador (servi-\ndor SCADA) ou distribu\u00edda em uma rede de computadores ou clientes, \nde modo a permitir a partilha de informa\u00e7\u00f5es proveniente do servidor \nSCADA (BOARETTO, 2008). A MTU pode conter tamb\u00e9m, dispositi-\n\n\n\n \n10 Sistemas SCADA  \n\n \n\n \n\nvos auxiliares como impressoras e registradores e um ou mais servidores \nredundantes, para os casos de falha. \n\nA MTU agrupa o conjunto de dados (entrada e sa\u00edda (I/O), hist\u00f3-\nricos, alarmes, entre outros) e informa\u00e7\u00f5es em um Banco de Dados \n(BD). Normalmente este BD est\u00e1 contido no servidor (SCADA) ou pode \npertencer a v\u00e1rios servidores conectados em rede. Na maioria das \naplica\u00e7\u00f5es, \u00e9 requerido que a MTU envie informa\u00e7\u00f5es de contabilidade \nou de gest\u00e3o para outros computadores ou sistemas financeiros dentro \nda empresa.  \n\nAs conex\u00f5es entre a MTU e outros sistemas podm ser feitas \natrav\u00e9s de links de comunica\u00e7\u00e3o dedicados ou redes de \u00e1rea local \n(LAN). A Figura 2.2, mostra os componentes e a configura\u00e7\u00e3o de um \nsistema SCADA distribu\u00eddo, o qual est\u00e1 constitu\u00eddo de uma esta\u00e7\u00e3o \ncentral composta por um servidor SCADA, IHMs e BD entre outros \ncomponentes, conectados por uma rede LAN; diveros tipos de rede de \ncomunica\u00e7\u00e3o (cabos, sem fio, linhas telef\u00f4nicas dedicadas, etc) e v\u00e1rias \nesta\u00e7\u00f5es remotas (CLP, RTU, IED), os quais s\u00e3o explicados nas \npr\u00f3ximas se\u00e7\u00f5es. \n\n \nFigura 2.2\u00a1Error! No hay texto con el estilo especificado en el documento. \nLayout geral de um sistema SCADA \nFonte: Adaptado de Stouffer, Falco e Kent (2006) \n\n2.2.4 Rede de comunica\u00e7\u00e3o  \n\n\u00c9 a plataforma atrav\u00e9s da qual as informa\u00e7\u00f5es de um sistema \nSCADA s\u00e3o transferidas. A fim de comunicar a MTU com as esta\u00e7\u00f5es \nremotas, que est\u00e3o localizadas a dist\u00e2ncia, ou com os diferentes compu-\ntadores e sistemas que est\u00e3o localizados dentro da rede corporativa, um \nlink de comunica\u00e7\u00e3o deve existir para transferir dados de um local para \n\n\n\n \nSistemas SCADA 11 \n\n \n\n \n\noutro. Considerando os requisitos do sistema e as dist\u00e2ncias a cobrir, as \nredes de comunica\u00e7\u00e3o podem ser implementadas atrav\u00e9s dos seguintes \nmeios f\u00edsicos: Internet, cabos el\u00e9tricos ou cabos de fibra \u00f3ptica (serial, \nethernet), redes sem fio, linhas telef\u00f4nicas dedicadas e discadas, micro-\nondas, r\u00e1dio, sat\u00e9lite, entre outros (PINHEIRO, 2006).  \n\nEm geral, a troca de dados \u00e9 estabelecida atrav\u00e9s de protocolos de \ncomunica\u00e7\u00e3o padr\u00e3o como o MODBUS nas vers\u00f5es RTU (Padr\u00e3o serial \nRS232/RS485) e TCP (Padr\u00e3o Ethernet), HDLC (High level Data Link \nControl), DNP3 e IEC 60870. \u00c9 comum existir uma interface de \ncomunica\u00e7\u00e3o padr\u00e3o chamada OPC (OLE for Process Control) usada no \nsetor de controle de processo, que garante a interoperabilidade entre \nequipamentos de diferentes fabricantes a qual \u00e9 baseada em padr\u00f5es \nMicrosoft OLE, DCOM e RPC. O tipo de esquema de comunica\u00e7\u00e3o ir\u00e1 \ndeterminar a confiabilidade e desempenho do sistema SCADA (PENIN, \n2007).  \n\n2.2.5 Esta\u00e7\u00e3o Remota  \n\nUma esta\u00e7\u00e3o remota \u00e9 um conjunto de elementos afastados da \nMTU e dedicados a tarefas de controle e/ou leitura dos valores atuais \ndos dispositivos a quem est\u00e3o associados. Nesta classifica\u00e7\u00e3o, podem \nencontrar-se v\u00e1rios elementos mais ou menos diferenciados: \n\n \n\u2022 RTU: especializados em comunica\u00e7\u00e3o. \n\u2022 CLP: especializados em tarefas gerais de controle. \n\u2022 IED: especializados em tarefas espec\u00edficas de controle. \n\n \nA RTU, tamb\u00e9m chamada de unidade terminal remota, \u00e9 um dis-\n\npositivo eletr\u00f4nico frequentemente equipado com interface de r\u00e1dio sem \nfio, que tem a responsabilidade de coletar dados de campo atrav\u00e9s de \nsuas portas de entrada e sa\u00edda anal\u00f3gica e digital, que s\u00e3o conectadas aos \nsensores e atuadores. A RTU tamb\u00e9m pode controlar equipamentos, \ncomo por exemplo, abrindo ou fechando uma chave ou uma v\u00e1lvula, ou \ndefinindo a velocidade de uma bomba. A quantidade de dados obtidos \npela RTU depender\u00e1 do tamanho do sistema a ser controlado e ser\u00e3o \nenviados para a MTU utilizando o sistema de comunica\u00e7\u00e3o. A RTU \u00e9 \nespecialmente indicada para situa\u00e7\u00f5es adversas onde a comunica\u00e7\u00e3o \u00e9 \ndif\u00edcil (BAILEY e WRIGHT, 2003). \n\nOs CLPs s\u00e3o dispositivos digitais que permitem controlar o \nprocesso fabril mediante uma mem\u00f3ria program\u00e1vel que re\u00fane as instru-\n\n\n\n \n12 Sistemas SCADA  \n\n \n\n \n\n\u00e7\u00f5es que devem ser repassadas para as m\u00e1quinas e os equipamentos \nrespons\u00e1veis pela produ\u00e7\u00e3o industrial.  A grande vantagem dos CLPs \nsobre as RTUs \u00e9 que os primeiros podem ser utilizados em tarefas sim-\nples e podem ser facilmente configurados para efetuar v\u00e1rias fun\u00e7\u00f5es, \nal\u00e9m de serem compactos, ocupando pouco espa\u00e7o (BAILEY e WRI-\nGHT, 2003). Atualmente, nota-se uma converg\u00eancia no sentido de reu-\nnir as melhores caracter\u00edsticas desses dois equipamentos: a facilidade de \nprograma\u00e7\u00e3o e controle dos CLPs e as capacidades de comunica\u00e7\u00e3o dos \nRTUs (BOARETTO, 2008). \n\nOs IEDs s\u00e3o dispositivos eletr\u00f4nicos que possuem algum tipo de \nintelig\u00eancia local. No entanto, especificamente sobre a ind\u00fastria de \nautoma\u00e7\u00e3o de sistemas de pot\u00eancia e prote\u00e7\u00e3o, o termo realmente veio a \nexistir para descrever um dispositivo vers\u00e1til que tem fun\u00e7\u00f5es de \nprote\u00e7\u00e3o el\u00e9trica, controle avan\u00e7ado de intelig\u00eancia local, habilidades de \nmonitoramento e capacidade de comunica\u00e7\u00e3o extensiva diretamente \ncom um sistema SCADA (STOUFFER, FALCO E KENT, 2006).  \n\n2.2.6 Dispositivos de campo \n\n Os dispositivos de campo referem-se aos sensores e atuadores que est\u00e3o \ndiretamente interligados \u00e0 planta ou equipamento a ser controlado e \nmonitorado pelo sistema SCADA. Os primeiros convertem par\u00e2metros \nf\u00edsicos, tais como velocidade, n\u00edveis de \u00e1gua e temperatura, para sinais \nanal\u00f3gicos e digitais leg\u00edveis pela esta\u00e7\u00e3o remota, e os segundos s\u00e3o \nusados para atuar sobre o sistema, ligando e desligando determinados \nequipamentos. \n\n2.2.7 Processo f\u00edsico \n\nO processo f\u00edsico \u00e9 tanto o elemento que se deseja monitorar e/ou con-\ntrolar quanto o objeto da automa\u00e7\u00e3o, onde informa\u00e7\u00f5es deste elemento \ns\u00e3o capturadas atrav\u00e9s de instrumentos, tanto para o controle do proces-\nso quanto para a ger\u00eancia de dados. \n\n2.3 FUN\u00c7\u00d5ES DO SISTEMA SCADA \n\nAtualmente os principais sistemas de supervis\u00e3o oferecem tr\u00eas \nfun\u00e7\u00f5es b\u00e1sicas (VIANNA, 2008): \n\n \n\n\n\n \nSistemas SCADA 13 \n\n \n\n \n\n1. Fun\u00e7\u00f5es de supervis\u00e3o: Inclui todas as fun\u00e7\u00f5es de monitoramento do \nprocesso tais como: sin\u00f3ticos animados, gr\u00e1ficos de tend\u00eancia de va-\nri\u00e1veis anal\u00f3gicas e digitais, relat\u00f3rios em v\u00eddeo e impressos, etc.  \n\n  \n2. Fun\u00e7\u00f5es de opera\u00e7\u00e3o: Inclui a a\u00e7\u00e3o direta sobre os atuadores permi-\n\ntindo enviar comandos como ligar e desligar equipamentos e sequ\u00ean-\ncia de equipamentos, opera\u00e7\u00e3o de malhas com controle PID, mudan\u00e7a \nde modo de opera\u00e7\u00e3o de equipamentos, etc. \n\n \n3. Fun\u00e7\u00f5es de controle: Alguns sistemas possuem op\u00e7\u00f5es espec\u00edficas \n\npara atua\u00e7\u00e3o autom\u00e1tica sobre o sistema em determinadas situa\u00e7\u00f5es \npr\u00e9-programadas de acordo com a necessidade e possibilidade de ter \nesse tipo de automatismo sobre o processo supervisionado.  \n\n2.4 SOFTWARE DE SUPERVIS\u00c3O \n\nUm software de supervis\u00e3o \u00e9 um pacote de software constitu\u00eddo \nde um ambiente de desenvolvimento e um programa de execu\u00e7\u00e3o. O \nambiente de desenvolvimento inclui utilidades relacionadas com a cria-\n\u00e7\u00e3o e edi\u00e7\u00e3o de janelas de aplicativos diversos e suas caracter\u00edsticas \n(textos, desenhos, cores, propriedades de objetos, programas, etc). J\u00e1 o \nprograma de execu\u00e7\u00e3o ou run-time permite executar a aplica\u00e7\u00e3o criada \ncom o programa de desenvolvimento (na ind\u00fastria \u00e9 entregue como \nproduto final o run-time e a aplica\u00e7\u00e3o). Esse pacote tamb\u00e9m inclui os \ncontroladores ou drivers que permitem a comunica\u00e7\u00e3o do software \nSCADA com os dispositivos de controle da planta e com a rede de ges-\nt\u00e3o da empresa (PENIN, 2007).  \n\nO software SCADA identifica os tags, que s\u00e3o vari\u00e1veis num\u00e9ri-\ncas ou alfanum\u00e9ricas envolvidas na aplica\u00e7\u00e3o, podendo executar fun\u00e7\u00f5es \ncomputacionais (opera\u00e7\u00f5es matem\u00e1ticas, l\u00f3gicas, com vetores ou s-\ntrings, etc) ou representar pontos de entrada/sa\u00edda de dados do processo \nque est\u00e1 sendo controlado. Neste caso, correspondem \u00e0s vari\u00e1veis do \nprocesso real (ex: temperatura, n\u00edvel, vaz\u00e3o etc), se comportando como \na liga\u00e7\u00e3o entre o controlador e o sistema. \u00c9 com base nos valores das \ntags que os dados coletados s\u00e3o apresentados ao usu\u00e1rio (SILVA e \nSALVADOR, 2005). \n\nO software de supervis\u00e3o pode ser propriet\u00e1rio ou livre. Geral-\nmente os propriet\u00e1rios s\u00e3o desenvolvidos para se comunicar com os \nequipamentos desenvolvidos por eles pr\u00f3prios e por isso precisa-se ad-\nquirir a solu\u00e7\u00e3o completa de hardware e software de um s\u00f3 fornecedor. \n\n\n\n \n14 Sistemas SCADA  \n\n \n\n \n\nPor outro lado existem os de c\u00f3digo aberto que utilizam os protocolos \npadr\u00f5es de comunica\u00e7\u00e3o com as RTUs e ou CLPs possibilitando a utili-\nza\u00e7\u00e3o de RTUs fornecidas por fabricantes diferentes proporcionando \numa liberdade maior na escolha de novas RTUs ou CLPs obedecendo a \ncrit\u00e9rios de funcionalidade e pre\u00e7o (ALMEIDA, 2009).  \n\n2.4.1 Funcionalidades de um sistema SCADA \n\nOs sistemas SCADA possuem um ambiente integrado de desen-\nvolvimento que possui editor de gr\u00e1ficos, editor para banco de dados, \nrelat\u00f3rios, receitas e editor de scripts. A seguir s\u00e3o descritas as funciona-\nlidades mais implementadas em um software SCADA:  \n\n \n\u2022 Configura\u00e7\u00e3o \n\nPermite definir o ambiente de trabalho para atender \u00e0s necessi-\ndades da aplica\u00e7\u00e3o. S\u00e3o configurados tanto o protocolo de co-\nmunica\u00e7\u00e3o, quanto os pontos de I/O ou tags. A estrutura de te-\nlas \u00e9 organizada da forma mais conveniente. Os usu\u00e1rios s\u00e3o \nclassificados de acordo com sua import\u00e2ncia, com privil\u00e9gios \nque definem a sua influ\u00eancia sobre o sistema. \n \n\n\u2022 Sin\u00f3tico ou interface gr\u00e1fica \nOs sin\u00f3ticos permitem a elabora\u00e7\u00e3o de telas de usu\u00e1rio com \nm\u00faltiplas combina\u00e7\u00f5es de imagens e/ou textos, definindo assim \nas fun\u00e7\u00f5es de controle e supervis\u00e3o da planta. Cada sin\u00f3tico re-\npresenta uma \u00e1rea do processo em certo n\u00edvel de detalhe, inclu-\nindo o valor em tempo real das vari\u00e1veis presentes na planta. \n \n\n\u2022 Gr\u00e1ficos de Tend\u00eancias \nS\u00e3o gr\u00e1ficos X-Y dos valores das tags armazenadas que permi-\ntem representar de forma f\u00e1cil a evolu\u00e7\u00e3o de vari\u00e1veis do siste-\nma, cont\u00ednuas ou discretas. \u00c9 poss\u00edvel, em um gr\u00e1fico, repre-\nsentar v\u00e1rios valores de forma simult\u00e2nea. Os per\u00edodos de a-\nmostragem que variam tipicamente de 100 ms a 1 hora devem \nser escolhidos de acordo com a velocidade real do processo. \nQuando se deseja armazenar valores de vari\u00e1veis em disco por \nlongos per\u00edodos de tempo (at\u00e9 1 ano) se recorre ao registro his-\nt\u00f3rico.  \n \n \n\n\n\n \nSistemas SCADA 15 \n\n \n\n \n\n\u2022 Alarmes  \nEste m\u00f3dulo est\u00e1 presente em todos os sistemas SCADA. Ele \nrecebe os eventos excepcionais do processo e os registra identi-\nficando: data e hora do evento, vari\u00e1vel alarmada, valor no \nmomento do alarme, descri\u00e7\u00e3o do evento, data e hora de norma-\nliza\u00e7\u00e3o do evento e status do evento (alarmado, normalizado). \nUma janela de alarmes exibe os alarmes mais recentes. Quando \num alarme ocorre o operador \u00e9 avisado atrav\u00e9s de uma buzina, \nm\u00fasica ou por um speech maker. O operador deve declarar que \nest\u00e1 ciente do problema, reconhecendo o alarme mais recente \nou todos os alarmes simultaneamente. \n \n\n\u2022 Hist\u00f3ricos \nRegistram em arquivos todos os eventos relevantes de opera-\n\u00e7\u00e3o, com data, hora, descri\u00e7\u00e3o do evento e operador \u201clogado\u201d \nna hora do evento, assim como tamb\u00e9m as ocorr\u00eancias de alar-\nmes, gr\u00e1ficos de tend\u00eancias, etc. Os eventos de interesse geral-\nmente s\u00e3o de configura\u00e7\u00e3o da base de dados, de opera\u00e7\u00e3o cr\u00edti-\ncos (a\u00e7\u00e3o sobre malhas de controle, partida e parada da planta) \ne de equipamentos cr\u00edticos, etc. \n \n\n\u2022 Relat\u00f3rios \nCada vez \u00e9 mais comum a tend\u00eancia a complementar as funcio-\nnalidades de aquisi\u00e7\u00e3o, registro de dados e gera\u00e7\u00e3o de alarmes \ncom a capacidade de gerar informa\u00e7\u00e3o, em forma de relat\u00f3rios, \ncapaz de ajudar na tomada de decis\u00f5es. Por exemplo, pode ser \ninteressante dispor de informa\u00e7\u00e3o referente \u00e0 situa\u00e7\u00e3o da planta \n(estado, incid\u00eancias), produ\u00e7\u00e3o em tempo real, gera\u00e7\u00e3o e regis-\ntro de alarmes, aquisi\u00e7\u00e3o de dados para an\u00e1lises hist\u00f3ricas, de \ncontrole de qualidade, c\u00e1lculo de custos, manuten\u00e7\u00e3o preventi-\nva, etc. O usu\u00e1rio deve definir as vari\u00e1veis que far\u00e3o parte do \nrelat\u00f3rio e o seu per\u00edodo (ou instante) de amostragem. \n \n\n\u2022 Controle de processo atrav\u00e9s de scripts \nLinguagens de programa\u00e7\u00e3o de alto n\u00edvel, como Visual Basic, \nC ou Java, incorporados nos software SCADA, permitem pro-\ngramar tarefas que respondam a eventos do sistema, como envi-\nar comandos ao sistema de controle para ligar ou desligar equi-\npamentos em fun\u00e7\u00e3o dos valores das vari\u00e1veis adquiridas, envi-\nar um e-mail ao ativar-se um alarme concreto ou simplesmente \n\n\n\n \n16 Sistemas SCADA  \n\n \n\n \n\niniciar rotinas no dispositivo de controle (CLP, RTU, etc), asso-\nciadas, por exemplo, ao in\u00edcio do sistema de controle e modos \nde funcionamento. \n \n\n\u2022 Receitas \nTrata-se de arquivos que salvam os dados de configura\u00e7\u00e3o dos \ndiferentes elementos do sistema (velocidade do processo, pres-\ns\u00f5es, temperatura, n\u00edveis de alarme, quantidade de pe\u00e7as produ-\nzidas, etc.). Dessa forma, o procedimento de mudar a configu-\nra\u00e7\u00e3o de trabalho de toda uma planta ficar\u00e1 reduzido ao simples \nfato de clicar um bot\u00e3o ap\u00f3s confirmar os dados de acesso (usu-\n\u00e1rio, senha e n\u00famero ou nome de receita, por exemplo). O sis-\ntema SCADA ser\u00e1 respons\u00e1vel por enviar os dados aos corres-\npondentes controladores, ficando a planta pronta para as novas \ncondi\u00e7\u00f5es de trabalho. \n \n\n\u2022 Gera\u00e7\u00e3o de informa\u00e7\u00e3o para n\u00edveis gerenciais \nEsta funcionalidade permite gerar informa\u00e7\u00f5es como volumes e \ntaxas de produ\u00e7\u00e3o, n\u00famero de produtos com defeito, entre ou-\ntras, que auxiliem na tomada de decis\u00f5es em n\u00edveis mais altos \nda pir\u00e2mide de automa\u00e7\u00e3o, como sistemas MES e ERP. \n\n2.4.2 ScadaBR \n\nConforme mencionado, os softwares SCADA est\u00e3o dispon\u00edveis \nem pacotes comerciais ou propriet\u00e1rios com um custo muito elevado, o \nque muitas vezes inviabiliza sua utiliza\u00e7\u00e3o para automa\u00e7\u00e3o de sistemas. \nPor\u00e9m, no final da d\u00e9cada de 90 surgiram as primeiras iniciativas em \nsoftware livre com algumas funcionalidades de SCADA, e recentemente \no movimento tomou mais for\u00e7a, especialmente nos \u00faltimos 5 anos com \ntecnologias mais recentes e projetos de maior porte (ROCHA, 2011). \nNeste trabalho adota-se um dos softwares de c\u00f3digo aberto dispon\u00edveis, \no ScadaBR, para objetivar a aplica\u00e7\u00e3o da metodologia proposta. \n\nO software ScadaBR foi desenvolvido em modelo \"open-source\", \npela Funda\u00e7\u00e3o Centros de Refer\u00eancia em Tecnologias Inovadoras \n(CERTI), possuindo licen\u00e7a gratuita. Toda a documenta\u00e7\u00e3o e o c\u00f3digo-\nfonte do sistema est\u00e3o \u00e0 disposi\u00e7\u00e3o (http://www.scadabr.com.br/), inclu-\nsive sendo permitido modificar e re-distribuir o software se necess\u00e1rio. \n\nO ScadaBR \u00e9 uma aplica\u00e7\u00e3o multiplataforma baseada em Java, \nou seja, \u00e9 poss\u00edvel execut\u00e1-la usando o Windows, Linux ou outros sis-\n\n\n\n \nSistemas SCADA 17 \n\n \n\n \n\ntemas operacionais, a partir de um servidor de aplica\u00e7\u00f5es (sendo o Apa-\nche Tomcat a escolha padr\u00e3o). Ao executar o aplicativo, ele pode ser \nacessado a partir de um navegador de Internet, preferencialmente o Fire-\nfox ou o Chrome. A interface principal do ScadaBR \u00e9 de f\u00e1cil utiliza\u00e7\u00e3o \ne j\u00e1 oferece visualiza\u00e7\u00e3o das vari\u00e1veis, gr\u00e1ficos, estat\u00edsticas, configura-\n\u00e7\u00e3o dos protocolos, alarmes, constru\u00e7\u00e3o de telas tipo IHM e uma s\u00e9rie \nde op\u00e7\u00f5es de configura\u00e7\u00e3o. Este software oferece comunica\u00e7\u00e3o em mais \nde 20 protocolos incluindo: OPC, Modbus, ASCII, DNP3, IEC101, \nBacnet. \n\n2.5 METODOLOGIAS PARA DESENVOLVIMENTO DE SISTE-\nMAS SCADA \n\nQuando uma empresa decide desenvolver e implementar um sis-\ntema SCADA \u00e9 necess\u00e1rio seguir uma metodologia que permita uma \nintegra\u00e7\u00e3o de todas as \u00e1reas envolvidas no processo produtivo, da me-\nlhor forma poss\u00edvel. Observam-se na literatura acad\u00eamica, metodologias \nonde somente \u00e9 concebido o desenvolvimento da IHM, mas existem \noutras, que abrangem desde o planejamento da arquitetura do SCADA \nat\u00e9 a realiza\u00e7\u00e3o de testes finais de funcionamento, as quais ser\u00e3o apre-\nsentadas de forma sucinta, na sequ\u00eancia. \n\nSegundo Moraes e Castrucci (2001) as etapas que devem compor \no planejamento de um Sistema Supervis\u00f3rio s\u00e3o: entendimento do pro-\ncesso a ser automatizado; tomada de dados (vari\u00e1veis); planejamento do \nbanco de dados; planejamento dos alarmes; planejamento da hierarquia \nde navega\u00e7\u00e3o entre telas da IHM; desenho de telas; gr\u00e1fico de tend\u00ean-\ncias dentro das telas; planejamento de um sistema de seguran\u00e7a e esco-\nlha de uma plataforma como Windows ou Linux. Esta metodologia n\u00e3o \nenfatiza o planejamento de hardware e software, assim como os testes \noperacionais do sistema.  \n\nPor outro lado, C\u00e1bus, et al. (2004) define cinco fases de imple-\nmenta\u00e7\u00e3o: (i) design da arquitetura do sistema (MTU, dispositivos de \ncontrole, de campo, tipo de rede, dist\u00e2ncias, n\u00famero de E/S, protocolos, \ndrivers, etc.); (ii) defini\u00e7\u00e3o das RTUs necess\u00e1rias, comunica\u00e7\u00f5es, dispo-\nsitivos IHM e hardware em geral, assim como tamb\u00e9m a aquisi\u00e7\u00e3o de \num pacote de software SCADA apropriado \u00e0 arquitetura dos sistemas da \nplanta; (iii) instala\u00e7\u00e3o do equipamento de comunica\u00e7\u00e3o e MTU; (iv) \nprograma\u00e7\u00e3o, tanto dos equipamentos de comunica\u00e7\u00f5es, quanto dos \nequipamentos IHM e software SCADA; e por \u00faltimo (v) teste do siste-\n\n\n\n \n18 Sistemas SCADA  \n\n \n\n \n\nma como um todo, durante o qual os problemas de programa\u00e7\u00e3o de \ncomunica\u00e7\u00f5es com o software SCADA s\u00e3o solucionados. \n\nDe acordo com Reyes (2007), o desenvolvimento e implementa-\n\u00e7\u00e3o de um sistema SCADA deve ser realizado em tr\u00eas fases: defini\u00e7\u00e3o, \nespecifica\u00e7\u00e3o e implementa\u00e7\u00e3o do sistema. Cada fase tem duas etapas. \nA primeira fase, determina as necessidades e objetivos do processo e \nposteriormente, define os requerimentos do sistema a implementar. J\u00e1 na \nsegunda fase, s\u00e3o elaboradas as especifica\u00e7\u00f5es funcionais para depois \nselecionar a arquitetura do sistema e seus componentes. Por fim, na \nterceira fase, \u00e9 realizada a configura\u00e7\u00e3o final do sistema e a instala\u00e7\u00e3o \u00e9 \ncolocada em opera\u00e7\u00e3o.  \n\nFinalmente, uma metodologia melhor estruturada, \u00e9 a proposta \npela (IEEE, 2008), cujo desenvolvimento do sistema requer v\u00e1rias \netapas e provavelmente ir\u00e1 exigir v\u00e1rias itera\u00e7\u00f5es por parte do projetista. \nInicialmente, deve definir-se os requerimentos funcionais do sistema a \ncurto e longo prazo como: medi\u00e7\u00e3o e monitora\u00e7\u00e3o do estado do \nprocesso, controle, servi\u00e7os auxiliares, sincroniza\u00e7\u00e3o de tempo e a \nl\u00f3gica a ser programada. O maior benef\u00edcio dessa defini\u00e7\u00e3o ser\u00e1 obtido \natrav\u00e9s de uma an\u00e1lise a partir do n\u00edvel empresarial de tal forma que os \npadr\u00f5es corporativos possam ser desenvolvidos. Esta defini\u00e7\u00e3o deve ser \nbaseada na infra-estrutura existente ou prevista e na percep\u00e7\u00e3o das \nnecessidades atuais e antecipa\u00e7\u00e3o das necessidades futuras. \n\nPosteriormente, deve realizar-se a sele\u00e7\u00e3o de dispositivos de con-\ntrole como CLPs, IEDs, RTUs, a sele\u00e7\u00e3o da IHM (software e hardware) \ne o desenvolvimento de telas (sin\u00f3ticos, alarmes, tend\u00eancias e hist\u00f3rico \nde alarmes), a defini\u00e7\u00e3o de requerimentos de seguran\u00e7a, a sele\u00e7\u00e3o da \narquitetura e protocolos de comunica\u00e7\u00e3o (interna e externa ao processo) \nbem como defini\u00e7\u00e3o de disponibilidade de requerimentos para fun\u00e7\u00f5es \ndo sistema. Por outro lado, a sele\u00e7\u00e3o de componentes e arquiteturas \u00e9 \ngeralmente limitada por v\u00e1rios elementos, tais como equipamentos pr\u00e9-\nexistentes, normas de procedimento, custos, etc. Portanto, o projeto do \nsistema pode redefinir requisitos anteriormente estabelecidos, resultando \nem um processo iterativo. Por \u00faltimo, s\u00e3o realizados testes do sistema \nem geral, para verificar e avaliar o seu funcionamento a fim de chegar a \num compromisso satisfat\u00f3rio. \n\n2.6 CONCLUS\u00c3O DO CAP\u00cdTULO \n\nUm sistema SCADA permite monitorar e rastrear informa\u00e7\u00f5es de \num processo produtivo ou instala\u00e7\u00e3o f\u00edsica. Essas informa\u00e7\u00f5es s\u00e3o cole-\n\n\n\n \nSistemas SCADA 19 \n\n \n\n \n\ntadas atrav\u00e9s de equipamentos de aquisi\u00e7\u00e3o de dados e meios de comu-\nnica\u00e7\u00e3o e, em seguida, s\u00e3o manipuladas, analisadas, armazenadas e, \nposteriormente apresentadas ao usu\u00e1rio. Tamb\u00e9m, o sistema SCADA, \npode exercer controle atrav\u00e9s de a\u00e7\u00f5es, que podem efetuar-se remota-\nmente sobre os equipamentos controlados pelo sistema, como por e-\nxemplo, abrir e fechar uma v\u00e1lvula, ligar ou desligar um motor, entre \noutras. \n\nNeste cap\u00edtulo foram expostas as caracter\u00edsticas e fun\u00e7\u00f5es princi-\npais de um sistema SCADA, assim como o hardware, software, sistema \nde comunica\u00e7\u00e3o e funcionalidades associadas a este. Por \u00faltimo, foram \napresentadas algumas metodologias referentes ao desenvolvimento e \nimplementa\u00e7\u00e3o de sistemas SCADA. Cabe mencionar que, na literatura \nacad\u00eamica, n\u00e3o foi encontrada uma metodologia para desenvolver sis-\ntemas SCADA para sistemas a eventos discretos (SED), que estivesse \nbaseada numa arquitetura de controle supervis\u00f3rio programada num \nequipamento de controle como o CLP. \n  \n\n\n\n \n20 Sistemas SCADA  \n\n \n\n \n\n  \n \n\n \n\n\n\n  \n\n3. TEORIA DE CONTROLE SUPERVIS\u00d3RIO DE SISTEMAS A \nEVENTOS DISCRETOS \n\n \nNeste cap\u00edtulo, inicialmente s\u00e3o explicados os conceitos funda-\n\nmentais da TCS (RAMADGE e WONHAM, 1989) e da abordagem \nmodular local (QUEIROZ e CURY, 2002). Em seguida, para exemplifi-\ncar a teoria, \u00e9 apresentada de forma resumida, a solu\u00e7\u00e3o de um problema \nreal de controle supervis\u00f3rio de uma c\u00e9lula flex\u00edvel de manufatura \n(CFM) (SILVA e QUEIROZ, 2009) que ser\u00e1 aproveitada para realizar a \nimplementa\u00e7\u00e3o preliminar da metodologia proposta no cap\u00edtulo 4. Poste-\nriormente, \u00e9 descrita uma arquitetura de controle supervis\u00f3rio (QUEI-\nROZ e CURY, 2000) utilizada para a implementa\u00e7\u00e3o do sistema de \ncontrole em CLP, na qual s\u00e3o preservadas as caracter\u00edsticas originais da \nTCS e cuja estrutura de controle est\u00e1 dividida em tr\u00eas n\u00edveis: Superviso-\nres Modulares, Sistema Produto e Sequ\u00eancias Operacionais. Finalmente, \ns\u00e3o apresentadas as ferramentas computacionais que auxiliam o proces-\nso de s\u00edntese de supervisores. \n\n3.1 SISTEMAS A EVENTOS DISCRETOS (SED) \n\nUm Sistema a Eventos Discretos (SED) \u00e9 um sistema din\u00e2mico \nque evolui de acordo com a ocorr\u00eancia abrupta, possivelmente em inter-\nvalos irregulares imprevis\u00edveis, de eventos f\u00edsicos (RAMADGE e WO-\nNHAM, 1989).  \n\nComo a din\u00e2mica dos SEDs \u00e9 regida pela ocorr\u00eancia de eventos, \n\u00e9 conveniente que seu comportamento seja representado por linguagens. \nAs linguagens s\u00e3o conjuntos de cadeias, ou palavras, que s\u00e3o sequ\u00eancias \nde eventos. Define-se que uma linguagem ? definida sobre um alfabeto \n?, \u00e9 um conjunto de cadeias ou palavras formadas por s\u00edmbolos perten-\ncentes a esse alfabeto ?. Define-se ainda ??como o conjunto de todas as \ncadeias finitas de elementos do conjunto ? poss\u00edveis de ocorrer, incluin-\ndo a cadeia vazia ? (CURY, 2001). \n\nNo contexto das linguagens, um SED pode ser modelado atrav\u00e9s \nde geradores. Um gerador \u00e9 definido como uma qu\u00edntupla ? '\n(?, ), *, +?,)? ,, sendo que os elementos dessa estrutura, respectivamen-\nte, s\u00e3o: alfabeto de eventos; conjunto de estados; *: ? . Q 0 Q a fun\u00e7\u00e3o \nde transi\u00e7\u00e3o, \u00e9 uma fun\u00e7\u00e3o parcial definida em cada estado de Q para \n\n\n\n \n22 Teoria de controle supervis\u00f3rio de sistemas a eventos discretos  \n\n \n\n \n\num subconjunto de ?; +? 1 ), estado inicial e )? 2 ), conjunto de \nestados marcados. Um gerador est\u00e1 associado a duas linguagens: a gera-\nda ???? que representa o comportamento livre da planta, ou todas as \ncadeias que podem ser seguidas no gerador, partindo-se do estado inici-\nal, e a marcada ?? ???, que representa as sequ\u00eancias que a partir do \nestado inicial chegam a um estado marcado, o que significa conclus\u00e3o \nde uma tarefa. \n\nOs geradores podem ser graficamente visualizados por diagramas \nde transi\u00e7\u00e3o de estado, que s\u00e3o grafos direcionados. Os n\u00f3s representam \nos estados, por exemplo, os estados poss\u00edveis de uma m\u00e1quina. E os \narcos desse grafo s\u00e3o identificados com os eventos respons\u00e1veis pela \ntransi\u00e7\u00e3o de estados. Um exemplo de grafo pode ser visto na Figura 3.1. \n\n \nFigura 3.1 Visualiza\u00e7\u00e3o gr\u00e1fica de um gerador \n\n \nO gerador da Figura 3.1 pode significar o funcionamento de uma \n\nm\u00e1quina ou o de uma planta, sendo que o estado inicial, representado \npor um c\u00edrculo de borda dupla e com uma flecha apontando a ele, desig-\nna m\u00e1quina em repouso, e o estado, representado por um c\u00edrculo sim-\nples, m\u00e1quina em opera\u00e7\u00e3o. A transi\u00e7\u00e3o rotulada com o evento ? dita o \nin\u00edcio de funcionamento da m\u00e1quina, enquanto que a transi\u00e7\u00e3o ?, o fim \nde opera\u00e7\u00e3o. \n\nUm estado de G \u00e9 acess\u00edvel se pode ser alcan\u00e7ado atrav\u00e9s de al-\nguma sequ\u00eancia de eventos tendo como origem o estado inicial +?, as-\nsim G \u00e9 acess\u00edvel se todos os seus estados s\u00e3o acess\u00edveis; por outro lado, \num estado de G \u00e9 co-acess\u00edvel ou n\u00e3o bloqueante se sempre for poss\u00edvel \na partir deste, alcan\u00e7ar um estado marcado com a ocorr\u00eancia de eventos \npertencentes ao alfabeto ?, portanto G \u00e9 co-acess\u00edvel se todos os seus \nestados s\u00e3o co-acess\u00edveis. Um gerador acess\u00edvel e co-acess\u00edvel \u00e9 dito \nTrim. Ele representa a aus\u00eancia de bloqueios no sistema, isto \u00e9, a partir \ndo estado inicial +? ou de qualquer outro estado, sempre existir\u00e1 um \ncaminho que conduz a um estado marcado. \n\nO bloqueio se d\u00e1 quando um gerador n\u00e3o consegue avan\u00e7ar at\u00e9 \num estado marcado, ou porque mesmo progrediu at\u00e9 um estado n\u00e3o \nmarcado onde n\u00e3o h\u00e1 transi\u00e7\u00f5es de sa\u00edda, deadlock, ou porque a evolu-\n\u00e7\u00e3o do sistema fica confinada a um conjunto de estados n\u00e3o marcados a \n\n\n\n \nTeoria de controle supervis\u00f3rio de sistemas a eventos discretos 23 \n\n \n\n \n\npartir dos quais n\u00e3o existe uma sequ\u00eancia de eventos que leve a um \nestado marcado, livelock. \n\nSegundo a TCS, um SED pode ser visto como a composi\u00e7\u00e3o de \nsubsistemas sendo regidos por um controlador que restringe o compor-\ntamento do sistema de acordo com as especifica\u00e7\u00f5es impostas no proje-\nto. Assim, a composi\u00e7\u00e3o s\u00edncrona de dois ou mais geradores (CAS-\nSANDRAS e LAFORTUNE, 1999) \u00e9 uma opera\u00e7\u00e3o que permite repre-\nsentar a evolu\u00e7\u00e3o paralela dos mesmos, com todas as sequ\u00eancias poss\u00ed-\nveis e tarefas que podem ser completadas pelo sistema. Esta opera\u00e7\u00e3o \nsincroniza os eventos compartilhados, enquanto que os n\u00e3o comparti-\nlhados pelos geradores podem executar a qualquer momento. A compo-\nsi\u00e7\u00e3o s\u00edncrona entre dois geradores ?? e ?? \u00e9 simbolizada por ?? ? ?? \nsendo que \u00e9 uma opera\u00e7\u00e3o comutativa (?? ? ?? '  ?? ? ??) e associati-\nva ??? ? ??? ? ?? ' ?? ? ??? ? ??? e quando se precisa compor v\u00e1rios \ngeradores a opera\u00e7\u00e3o pode ser feita repetidas vezes aos pares. \n\n3.2 TEORIA DE CONTROLE SUPERVIS\u00d3RIO (TCS) \n\nA TCS proposta por Ramadge e Wonham (1989) prop\u00f5e um de-\nsenvolvimento de modelos formais de sistemas de controle baseado na \nteoria de aut\u00f4matos e linguagens, a qual \u00e9 dotada de procedimentos de \ns\u00edntese autom\u00e1tica de supervisores que atendem de forma menos restri-\ntiva poss\u00edvel as especifica\u00e7\u00f5es de controle. A TCS faz uma distin\u00e7\u00e3o \nclara entre o sistema a ser controlado, denominado planta, e a entidade \nque o controla. A planta \u00e9 representada por um gerador que reflete o \ncomportamento fisicamente poss\u00edvel dos subsistemas que a comp\u00f5em. O \npapel do supervisor \u00e9, ent\u00e3o, o de exercer uma a\u00e7\u00e3o de controle restriti-\nva sobre os subsistemas, de modo a confinar seus comportamentos aque-\nles que correspondem a uma dada especifica\u00e7\u00e3o.  \n\nDentro desta abordagem, considera-se que o supervisor S, repre-\nsentado por um gerador e cujos eventos est\u00e3o contidos no alfabeto de G, \ninterage com este (planta), numa estrutura em malha fechada, onde S \nobserva os eventos ocorridos e define de acordo com o estado atual da \nplanta, quais eventos fisicamente poss\u00edveis s\u00e3o habilitados. Sob esse \naspecto, a forma de controle \u00e9 dita permissiva, no sentido de que even-\ntos inibidos n\u00e3o podem ocorrer, e, os autorizados, n\u00e3o precisam obriga-\ntoriamente ocorrer. O conjunto de eventos habilitados num dado instante \npelo supervisor define uma entrada de controle, que \u00e9 atualizada a cada \nnova ocorr\u00eancia de evento observada em G. A Figura 3.2 ilustra a inte-\n\n\n\n \n24 Teoria de controle supervis\u00f3rio de sistemas a eventos discretos  \n\n \n\n \n\nra\u00e7\u00e3o do supervisor com a planta que ocorre atrav\u00e9s da estrutura em \nmalha fechada. \n\n \nFigura 3.2 Estrutura em malha fechada do controle supervis\u00f3rio \n \n\nDe modo a modelar um sistema de controle, Ramadge e Wonham \n(1989) particionam o conjunto de eventos ? em dois subconjuntos, dos \neventos control\u00e1veis ??? ? e dos eventos n\u00e3o control\u00e1veis ??? ?, de modo \nque ? ' ?? 3 ??. Os eventos em ?? podem ser desabilitados ou habili-\ntados em qualquer momento pelo supervisor S, ao passo que os eventos \nem ?? n\u00e3o s\u00e3o afetados pela a\u00e7\u00e3o do supervisor. Os eventos control\u00e1veis \ns\u00e3o representados por um tra\u00e7o no arco de transi\u00e7\u00e3o. Quando estes even-\ntos s\u00e3o desabilitados, \u00e9 porque s\u00e3o omitidos nas respectivas transi\u00e7\u00f5es \nde estado de S, quando habilitados \u00e9 devido a que est\u00e3o expl\u00edcitos nas \ntransi\u00e7\u00f5es de estado do supervisor S.  \n\nO comportamento do sistema composto pela planta G, sujeita \u00e0 \na\u00e7\u00e3o de um supervisor S, \u00e9 denotada por ?? 4 ?? de acordo com Ramad-\nge e Wonham (1989). Um supervisor S \u00e9 dito ser n\u00e3o bloqueante para \num gerador G se ?? ?? 4 ??5555555555555 ' ??? 4 ??, sendo ?5 o conjunto de todas as \ncadeias de ?* que s\u00e3o prefixos de cadeias de L (prefixo-fechamento). \nIsto implica que, as palavras ou sequ\u00eancias de eventos geradas pelo \nsistema sob supervis\u00e3o sempre podem evoluir no sentido de concluir-se \numa tarefa imposta pelo sistema. \n\nDe um modo geral, um problema de s\u00edntese de supervisores su-\np\u00f5e que se represente o comportamento fisicamente poss\u00edvel e as restri-\n\u00e7\u00f5es impostas ao sistema, sendo o objetivo construir um supervisor n\u00e3o \nbloqueante para a planta de forma que o comportamento do sistema em \nmalha fechada se limite ao comportamento desejado. Para a realiza\u00e7\u00e3o \ndo supervisor e tendo como base o comportamento em malha aberta da \nplanta G, \u00e9 obtida uma especifica\u00e7\u00e3o K, a partir da composi\u00e7\u00e3o s\u00edncrona \nde G e as especifica\u00e7\u00f5es gen\u00e9ricas E. \n\n\n\n \nTeoria de controle supervis\u00f3rio de sistemas a eventos discretos 25 \n\n \n\n \n\nA condi\u00e7\u00e3o necess\u00e1ria e suficiente para a exist\u00eancia de um super-\nvisor n\u00e3o bloqueante S que satisfa\u00e7a uma dada especifica\u00e7\u00e3o ? '\n?? ?? 4 ?? 2 ?? ??? \u00e9 a controlabilidade de ? (RAMADGE e WO-\nNHAM, 1989). K \u00e9 control\u00e1vel (e.r.a G) se ?6?? 7 ???? 2 ?6, ou seja, a \nocorr\u00eancia de um evento n\u00e3o control\u00e1vel em G n\u00e3o gera uma sequ\u00eancia \nde eventos que desrespeite a especifica\u00e7\u00e3o. Seja C(K,G) o conjunto de \ntodas as sublinguagens de K control\u00e1veis e.r.a G. Existe um elemento \nsupremo, chamado SupC(K,G), que cont\u00e9m a m\u00e1xima sublinguagem de \nK que \u00e9 control\u00e1vel e.r.a G (WONHAM, 2008). Assim, quando K n\u00e3o \u00e9 \ninteiramente control\u00e1vel, SupC(K,G) representa o comportamento me-\nnos restritivo poss\u00edvel. \n\nNos problemas de controle mais complexos os SED s\u00e3o modela-\ndos por m\u00faltiplos subsistemas que devem ser coordenados para atender \na um conjunto de especifica\u00e7\u00f5es. O controle \u00e9 monol\u00edtico quando h\u00e1 um \n\u00fanico supervisor atuando sobre a planta que atenda todas as especifica-\n\u00e7\u00f5es. Uma desvantagem no uso desta abordagem \u00e9 o crescimento expo-\nnencial do n\u00famero de estados do gerador obtido pela composi\u00e7\u00e3o s\u00edn-\ncrona de um grande n\u00famero de subsistemas que comp\u00f5e a planta G com \num grande n\u00famero de especifica\u00e7\u00f5es, requerendo um esfor\u00e7o computa-\ncional muito grande para tratar do problema, al\u00e9m de ser dif\u00edcil de ser \nimplementado no CLP. \n\nComo alternativa, foi desenvolvida uma extens\u00e3o \u00e0 abordagem \nmonol\u00edtica, chamada de Controle Modular Local (Queiroz e Cury, \n2000), a qual permite explorar a modularidade das especifica\u00e7\u00f5es e da \nplanta, de forma a diminuir a complexidade computacional da s\u00edntese de \nsupervisores e o tamanho das solu\u00e7\u00f5es. Nesta abordagem, al\u00e9m de de-\ncompor o sistema f\u00edsico em subsistemas modelados por geradores que \nrepresentam o seu comportamento, existe um diferencial no que diz \nrespeito a que cada especifica\u00e7\u00e3o imposta para o sistema tem uma planta \nlocal, que consiste na composi\u00e7\u00e3o s\u00edncrona dos geradores que comparti-\nlham ao menos um evento com esta especifica\u00e7\u00e3o. Posteriormente, s\u00e3o \nobtidas as especifica\u00e7\u00f5es locais, que consiste na composi\u00e7\u00e3o s\u00edncrona da \nplanta local com a especifica\u00e7\u00e3o que deu origem a esta. Por fim, a a\u00e7\u00e3o \nde controle \u00e9 dividida em v\u00e1rios supervisores chamados de supervisores \nlocais, os quais s\u00e3o obtidos pelo c\u00e1lculo da m\u00e1xima linguagem control\u00e1-\nvel para cada planta local. Assim cada supervisor coordena uma parte do \nsistema global. \n\nConforme Queiroz (2000) e Queiroz e Cury (2000a, 2000b), cada \nsubsistema \u00e9 representado por um gerador da estrutura ?8 '\n??8 , )8 , *8 , +?8 , )?8 ?, 9 1 : ' ;1, \u2026 . , ?@, sendo n o n\u00famero de subsiste-\n\n\n\n \n26 Teoria de controle supervis\u00f3rio de sistemas a eventos discretos  \n\n \n\n \n\nmas. Cada especifica\u00e7\u00e3o gen\u00e9rica \u00e9 representada por um gerador ?A , cuja \nlinguagem est\u00e1 contida em ?A  com ?A 2 ? para B 1 C ' ;1, \u2026 . , D@ sendo \nm o n\u00famero de especifica\u00e7\u00f5es. Assim, cada planta local ?? ?A '\n(?? ?A , )? ?E, *? ?A , +?? ?A , )?? ?A ,, para B ' 1, \u2026 , D, referente a especi-\nfica\u00e7\u00e3o ?A , \u00e9 representada por ?? ?A ' ?81FGHIJ ?8  para, :? ?A 'KL 1\n?|?N 7 ?A O ?@. \n\nNa Figura 3.3 \u00e9 mostrada uma ilustra\u00e7\u00e3o da metodologia usada \npara a obten\u00e7\u00e3o dos supervisores locais.  Sejam ? , ??, ?? P ?? os gera-\ndores que representam os subsistemas da planta e ? , ?? P ?? as especi-\nfica\u00e7\u00f5es gen\u00e9ricas de um determinado sistema. Cada especifica\u00e7\u00e3o ge-\nn\u00e9rica est\u00e1 associada a um conjunto :? ?A  formado pelos \u00edndices dos \nsubsistemas que compartilham ao menos um evento com esta especifi-\nca\u00e7\u00e3o. Desta forma, ?  est\u00e1 associada ao conjunto :? ?QR ' ;??, ??@, ?? \nao conjunto :? ?QS ' ;??, ??@ e ?? ao conjunto :? ?QT ' ;??, ??@. Assim, \nas plantas locais referentes a cada especifica\u00e7\u00e3o s\u00e3o obtidas realizando o \nproduto s\u00edncrono dos elementos de cada conjunto. Desta forma, o com-\nportamento desejado pode ser expresso por uma linguagem alvo denota-\ndo por ?? ?A ' ?A ? ?? (?? ?A ,. A partir disso, obt\u00eam-se os supervisores \nmodulares locais ?? ?A, j = 1,..n, calculando as m\u00e1ximas linguagens con-\ntrol\u00e1veis locais ??U&amp;(?? ?A , ?? ?A ,, sendo n o n\u00famero de supervisores \nlocais, que neste exemplo, s\u00e3o tr\u00eas, os quais atuando em conjunto coor-\ndenam o comportamento do sistema.                                              \n\nFigura 3.3 Exemplifica\u00e7\u00e3o para obten\u00e7\u00e3o de supervisores locais \n\nN\u00e3o obstante, deseja-se que o comportamento conjunto e concor-\nrente dos supervisores modulares tenha a mesma a\u00e7\u00e3o de controle que a \nde um supervisor monol\u00edtico, ou seja, \u00e9 necess\u00e1rio assegurar a modula-\nridade local do conjunto de supervisores locais, garantindo que a a\u00e7\u00e3o \n\n\n\n \nTeoria de controle supervis\u00f3rio de sistemas a eventos discretos 27 \n\n \n\n \n\nconjunta de todos os supervisores seja n\u00e3o bloqueante, conforme de-\nmonstrado por Queiroz, et. al, (2001). A verifica\u00e7\u00e3o da modularidade \nlocal consiste em realizar a composi\u00e7\u00e3o s\u00edncrona de todos os superviso-\nres modulares locais, chamado de teste de modularidade. Caso o gerador \nresultante dessa composi\u00e7\u00e3o n\u00e3o tenha estados bloqueantes, ou seja, \u00e9 \ntrim, pode-se afirmar que os supervisores locais s\u00e3o modulares entre si. \nCaso contr\u00e1rio, h\u00e1 conflito entre os supervisores e, como consequ\u00eancia, \nn\u00e3o \u00e9 mais garantida a propriedade de n\u00e3o bloqueio dos supervisores \nmodulares locais. Para resolver o conflito pode-se descartar a solu\u00e7\u00e3o \nmodular e calcular um supervisor monol\u00edtico; como tamb\u00e9m o uso de \num supervisor monol\u00edtico em conjunto com os supervisores locais que \natue como coordenador dos supervisores que est\u00e3o gerando o conflito \n(QUEIROZ, 2004).  \n\nComo pode ser observado, a solu\u00e7\u00e3o modular local \u00e9 vantajosa \nem rela\u00e7\u00e3o \u00e0 abordagem monol\u00edtica, por aproveitar tanto a modularidade \ndas especifica\u00e7\u00f5es quanto da planta. Isso torna o projeto do sistema de \ncontrole mais flex\u00edvel, j\u00e1 que permite a altera\u00e7\u00e3o de um supervisor local \nseparadamente.  \n\nEntretanto, conforme destacado por Queiroz (2000), a complexi-\ndade do teste da modularidade local, por exigir a composi\u00e7\u00e3o de todos \nos supervisores locais, acaba crescendo exponencialmente com o n\u00fame-\nro de especifica\u00e7\u00f5es e subsistemas envolvidos, visto que o problema de \nconflito \u00e9 um problema global que ocorre pela intera\u00e7\u00e3o de todos os \nsupervisores com toda a planta. Al\u00e9m disso, a verifica\u00e7\u00e3o da modulari-\ndade local ser\u00e1 necess\u00e1ria sempre que uma modifica\u00e7\u00e3o for feita no \nsistema de controle. Novos m\u00e9todos mais eficientes t\u00eam sido desenvol-\nvidos para que a modularidade possa ser verificada em sistemas com-\nplexos (PENA et al, 2009).  \n\n3.3 C\u00c9LULA FLEX\u00cdVEL DE MANUFATURA \n\nNesta se\u00e7\u00e3o \u00e9 exemplificada a s\u00edntese de controle supervis\u00f3rio \npara um problema de controle de uma c\u00e9lula flex\u00edvel de manufatura \n(CFM) conforme resolvido por Silva e Queiroz (2009) e Klinge (2007). \n\nA CFM \u00e9 uma bancada experimental que pertence ao Laborat\u00f3rio \nde Automa\u00e7\u00e3o Industrial (LAI) do Departamento de Automa\u00e7\u00e3o e Sis-\ntemas (DAS) da Universidade Federal de Santa Catarina, sendo uma \nplataforma para simula\u00e7\u00e3o de processos automatizados.  \n\n\n\n \n28 Teoria de controle supervis\u00f3rio de sistemas a eventos discretos  \n\n \n\n \n\n3.3.1 Descri\u00e7\u00e3o do sistema \n\nA CFM, Figura 3.4, \u00e9 composta por quatro esta\u00e7\u00f5es operacionais \nque s\u00e3o conectadas atrav\u00e9s de uma mesa girat\u00f3ria, operando no sentido \nhor\u00e1rio, e um manipulador rob\u00f3tico. Estas esta\u00e7\u00f5es realizam a fura\u00e7\u00e3o, a \nsoldagem, o teste de qualidade e o retrabalho de pe\u00e7as. A CFM foi pro-\njetada para realizar a fura\u00e7\u00e3o e soldagem de pe\u00e7as que chegam ao buffer \nde entrada.  Por\u00e9m, quando as pe\u00e7as n\u00e3o s\u00e3o fabricadas corretamente \nt\u00eam que ser reparadas. Assim, a esta\u00e7\u00e3o de retrabalho funciona como \nentrada de pe\u00e7as manualmente restauradas. \n\nA retirada de pe\u00e7as da mesa girat\u00f3ria pelo manipulador rob\u00f3tico \nse d\u00e1 ap\u00f3s o resultado do teste de qualidade. Tr\u00eas destinos s\u00e3o poss\u00edveis \npara o dep\u00f3sito de cada pe\u00e7a: armaz\u00e9m de aprovadas, de reprovadas e de \npe\u00e7as danificadas, que necessitam de retrabalho.  \n\n \nFigura 3.4 C\u00e9lula flex\u00edvel de manufatura (SILVA, 2010) \n\nConforme o comportamento proposto para a CFM, as pe\u00e7as que \nchegam ao buffer de entrada devem ser transportadas pelo manipulador \nrob\u00f3tico at\u00e9 a mesa girat\u00f3ria, na posi\u00e7\u00e3o S1. Uma vez ali, ela \u00e9 conduzi-\nda por meio da mesa girat\u00f3ria \u00e0s esta\u00e7\u00f5es de fura\u00e7\u00e3o, soldagem e teste \nde qualidade onde as pe\u00e7as s\u00e3o testadas e retornadas \u00e0 posi\u00e7\u00e3o S1. Se o \nteste for positivo, as pe\u00e7as devem ser depositadas no armaz\u00e9m de pe\u00e7as \naprovadas, caso contr\u00e1rio, no armaz\u00e9m de pe\u00e7as danificadas. Estas \u00falti-\nmas ser\u00e3o restauradas na esta\u00e7\u00e3o de retrabalho. Ap\u00f3s serem retrabalha-\ndas, as pe\u00e7as entram no sistema novamente por esta esta\u00e7\u00e3o e o manipu-\nlador rob\u00f3tico as deposita na mesa girat\u00f3ria, na posi\u00e7\u00e3o S1. Estas pe\u00e7as \nn\u00e3o devem ser furadas nem soldadas, s\u00f3 precisam ser testadas. Pe\u00e7as \naprovadas devem ser depositadas no armaz\u00e9m de aprovadas. Se uma \n\n\n\n \nTeoria de controle supervis\u00f3rio de sistemas a eventos discretos 29 \n\n \n\n \n\npe\u00e7a \u00e9 reprovada pela segunda vez, esta n\u00e3o ser\u00e1 restaurada novamente e \n\u00e9 depositada no armaz\u00e9m de pe\u00e7as reprovadas.  \n\nA CFM apresenta sensores para indicar a chegada de pe\u00e7as nas \nesta\u00e7\u00f5es de fura\u00e7\u00e3o, soldagem e teste. Por\u00e9m, a modelagem do sistema \u00e9 \nfeita para que a presen\u00e7a de pe\u00e7as sobre a mesa seja deduzida a partir do \nhist\u00f3rico de eventos (SILVA, 2010). \n\nSegundo Silva (2010), a CFM foi projetada para poder fabricar \npe\u00e7as utilizando o limite m\u00e1ximo dos slots da mesa simultaneamente. \nPara atingir este objetivo, devem-se evitar alguns problemas que poderi-\nam acontecer durante a fabrica\u00e7\u00e3o de v\u00e1rias pe\u00e7as ao mesmo tempo, \ncomo: \n\n  \n\u2022 Girar a mesa nos casos seguintes: se n\u00e3o houver pelo menos \n\numa pe\u00e7a sobre ela; ou enquanto qualquer das esta\u00e7\u00f5es estiver \nrealizando uma tarefa; ou caso existam pe\u00e7as esperando para \nserem furadas, soldadas, testadas ou removidas pelo manipula-\ndor rob\u00f3tico; \n\n\u2022 Efetuar as opera\u00e7\u00f5es de fura\u00e7\u00e3o, soldagem, teste e manipula\u00e7\u00e3o \nrob\u00f3tica se n\u00e3o houver pe\u00e7a esperando pela realiza\u00e7\u00e3o das tare-\nfas citadas no slot correspondente; \n\n\u2022 Executar a mesma opera\u00e7\u00e3o por duas vezes consecutivas em \numa pe\u00e7a; \n\n\u2022 Furar e soldar pe\u00e7as que chegam da esta\u00e7\u00e3o de retrabalho; \n\u2022 Sobrepor pe\u00e7as na posi\u00e7\u00e3o S1; \n\u2022 Acionar o manipulador rob\u00f3tico para pegar pe\u00e7as nas entradas \n\ndo sistema sem haver pe\u00e7a nas mesmas. \n\n3.3.2 Modelagem da planta \n\nA modelagem da planta tem como objetivo a obten\u00e7\u00e3o dos mode-\nlos dos subsistemas que representam a planta a ser controlada. Esta eta-\npa come\u00e7a com a identifica\u00e7\u00e3o do conjunto de subsistemas envolvidos \nno problema, que no caso da CFM s\u00e3o: o manipulador rob\u00f3tico, buffer \nde entrada, esta\u00e7\u00f5es de retrabalho, fura\u00e7\u00e3o, soldagem e teste de qualida-\nde. Em seguida, os subsistemas s\u00e3o modelados separadamente por gera-\ndores, cuja estrutura de controle \u00e9 definida mediante a identifica\u00e7\u00e3o de \neventos control\u00e1veis e n\u00e3o control\u00e1veis. Na tabela 3.1, s\u00e3o apresentados \nos eventos utilizados para a modelagem dos geradores dos subsistemas e \ndas especifica\u00e7\u00f5es para a CFM. Observa-se que os eventos t\u00eam dois \nnomes, o primeiro em ingl\u00eas e o segundo em portugu\u00eas. Este \u00faltimo foi \n\n\n\n \n30 Teoria de controle supervis\u00f3rio de sistemas a eventos discretos  \n\n \n\n \n\nutilizado na implementa\u00e7\u00e3o do controle supervis\u00f3rio em CLP, a qual \nfar\u00e1 parte do conte\u00fado do cap\u00edtulo 4. Os modelos dos geradores dos \nsubsistemas da CFM s\u00e3o visualizados na Figura 3.5 \n \n\nTabela 3.1 Eventos da C\u00e9lula Flex\u00edvel de Manufatura \n\nG Equipamento Evento Descri\u00e7\u00e3o \n1 Sensor do Buf-\n\nfer de Entrada \nsen_ib/asen Sinaliza a chegada de pe\u00e7a no buffer de \n\nentrada. \n\n2 Sensor da Esta-\n\u00e7\u00e3o de Retraba-\n\nlho \n\nsen_rw/asenret Sinaliza a chegada de pe\u00e7a atrav\u00e9s da \nesta\u00e7\u00e3o de retrabalho. \n\n3 \n\nManipulador \nRob\u00f3tico \n\nst_grabib/acolm Pega pe\u00e7a do buffer de entrada e coloca \nna posi\u00e7\u00e3o S1. \n\nfi_grabib/bcolm Sinaliza o fim desta opera\u00e7\u00e3o. \nst_grabrw/acolmre Pega pe\u00e7a da esta\u00e7\u00e3o de retrabalho e \n\ncoloca na posi\u00e7\u00e3o S1. \nfi_grabrw/bcolmre Sinaliza o fim desta opera\u00e7\u00e3o. \nst_putgood/aretok Retira pe\u00e7a da posi\u00e7\u00e3o S1 e coloca no \n\ncompartimento de pe\u00e7as aprovadas. \nfi_putgood/bretok Sinaliza o fim desta opera\u00e7\u00e3o. \nst_putbad/aretnok Retira pe\u00e7a da posi\u00e7\u00e3o S1 e coloca no \n\ncompartimento de pe\u00e7as reprovadas. \nfi_putbad/bretnok Sinaliza o fim desta opera\u00e7\u00e3o. \nst_putdmd/aretret Retira pe\u00e7a da posi\u00e7\u00e3o S1 e coloca no \n\ncompartimento de pe\u00e7as danificadas. \nfi_putdmdg/bretret Sinaliza o fim desta opera\u00e7\u00e3o. \n\n \n4 \n\n \nMesa Girat\u00f3ria \n\nst_turn/ames \n \n\nGira a mesa em 90 graus no sentido \nhor\u00e1rio. \n\nfi_turn/bmes Sinaliza o fim do giro da mesa. \n\n5 \n \n\nFuradeira \nst_drill/afur Inicia a fura\u00e7\u00e3o. \nfi_drill/bfur Sinaliza o fim da fura\u00e7\u00e3o. \n\nst_skdrill/apfur N\u00e3o realiza a fura\u00e7\u00e3o. \nfi_skdrill/bpfur Sinaliza a n\u00e3o realiza\u00e7\u00e3o da fura\u00e7\u00e3o. \n\n6 Soldadeira st_weld/asol Inicia a soldagem. \nfi_weld/bsol Sinaliza o fim da soldagem. \n\nst_skweld/apsol N\u00e3o realiza a soldagem. \nfi_skweld/bpsol Sinaliza a n\u00e3o realiza\u00e7\u00e3o da soldagem. \n\n7 Teste st_tes1/ates1 Inicia o teste das pe\u00e7as brutas. \nst_tes2/ates2 Inicia o teste das pe\u00e7as retrabalhadas. \n\nfi_ok/bok Sinaliza a aprova\u00e7\u00e3o no teste. \nfi_nok1/bnok1 Sinaliza a primeira rejei\u00e7\u00e3o no teste. \nfi_nok2/bnok2 Sinaliza a segunda rejei\u00e7\u00e3o no teste. \n\n \nDado que os problemas de controle mencionados na se\u00e7\u00e3o 3.3.1 relatam \nsitua\u00e7\u00f5es que poderiam ocorrer durante a intera\u00e7\u00e3o dos subsistemas, \nestes podem ser modelados em forma abstrata, envolvendo basicamente \n\n\n\n \nTeoria de controle supervis\u00f3rio de sistemas a eventos discretos 31 \n\n \n\n \n\no in\u00edcio e fim de opera\u00e7\u00f5es, o que n\u00e3o interfere no desempenho do con-\ntrolador (SILVA, 2010). \n\n \n\nFigura 3.5 Geradores para os subsistemas da CFM (SILVA, 2010) \n\nO buffer de entrada (G1) e a esta\u00e7\u00e3o de retrabalho (G2) t\u00eam sen-\nsores que sinalizam a chegada de pe\u00e7as atrav\u00e9s dos eventos n\u00e3o contro-\nl\u00e1veis sen_ib e sen_rw respectivamente, os quais podem ocorrer em \nqualquer momento. O manipulador rob\u00f3tico executa 5 diferentes a\u00e7\u00f5es. \nEle pode pegar pe\u00e7as do buffer de entrada, st_grabib ou da esta\u00e7\u00e3o de \nretrabalho, st_grabrw e depositar as pe\u00e7as nos tr\u00eas compartimentos de \narmazenamento: de pe\u00e7as aprovadas, st_putgood, reprovadas, \nst_put_bad e danificadas, st_putdmgd. A mesa girat\u00f3ria (G4) come\u00e7a a \ngirar pelo comando st_turn e quando termina a rota\u00e7\u00e3o, o sinal fi_turn \u00e9 \nenviado. As esta\u00e7\u00f5es de fura\u00e7\u00e3o (G5) e soldagem (G6) funcionam de \nforma semelhante \u00e0 mesa girat\u00f3ria, exceto para a possibilidade de n\u00e3o \nrealizar as opera\u00e7\u00f5es de fura\u00e7\u00e3o e soldagem para pe\u00e7as vindo da esta\u00e7\u00e3o \nde retrabalho pelos eventos st_skdrill e st_skweld, assim conforme foi \nmencionado na se\u00e7\u00e3o 3.3.1. Um modelo diferente foi proposto para o \nteste para avisar ao sistema quantas vezes uma pe\u00e7a foi rejeitada. Assim, \na esta\u00e7\u00e3o de teste (G7) executa, logicamente, dois testes diferentes. O \nteste 1, iniciado atrav\u00e9s do evento st_teste1, \u00e9 aplicado a pe\u00e7as proveni-\nentes do buffer de entrada, e tem como resposta uma aprova\u00e7\u00e3o, median-\nte o evento fi_ok ou a primeira rejei\u00e7\u00e3o com fi_nok1. O teste 2, iniciado \n\n\n\n \n32 Teoria de controle supervis\u00f3rio de sistemas a eventos discretos  \n\n \n\n \n\natrav\u00e9s do evento st_teste2 \u00e9 para aquelas pe\u00e7as que chegam da esta\u00e7\u00e3o \nde retrabalho e o seu resultado indica uma aprova\u00e7\u00e3o pelo evento fi_ok \nou a segunda rejei\u00e7\u00e3o pelo evento fi_nok2. \n\n3.3.3 Modelagem das especifica\u00e7\u00f5es \n\nAs especifica\u00e7\u00f5es modelam o comportamento desejado para a \nplanta, mediante a constru\u00e7\u00e3o de geradores para cada restri\u00e7\u00e3o de coor-\ndena\u00e7\u00e3o do sistema a ser controlado. Para a CFM, foram modeladas 11 \nespecifica\u00e7\u00f5es que podem ser visualizadas na Figura 3.6, as quais resol-\nvem os problemas de intera\u00e7\u00e3o entre os subsistemas, mencionados na \nse\u00e7\u00e3o 3.3.1.  \n\nA especifica\u00e7\u00e3o E1 preocupa-se em n\u00e3o permitir que a mesa gire \nsem ter pe\u00e7as em algum de seus slots. Isto \u00e9 feito permitindo o comando \nst_turn, somente ap\u00f3s a conclus\u00e3o de a\u00e7\u00f5es que garantem pelo menos a \nexist\u00eancia de uma pe\u00e7a sobre a mesa, ou seja, ap\u00f3s ocorrer pelo menos \num dos eventos fi_grabrw, fi_grabib, fi_drill, fi_skdrill, fi_weld, \nfi_skweld, fi_ok, fi_nok1 ou fi_nok2. Essa especifica\u00e7\u00e3o cont\u00e9m um \nauto-la\u00e7o no estado 2. Isso significa a habilita\u00e7\u00e3o dos eventos \nmencionados anteriormente mais de uma vez e assim a possibilidade de \nexecutar estas tarefas concorrentemente.  \n\nPara lidar com a exclus\u00e3o m\u00fatua que deve existir entre a mesa e \nas esta\u00e7\u00f5es, foram modelados quatro geradores, ??\n, ???, ??? e ??? . A \npartir delas pode-se afirmar que uma vez a mesa est\u00e1 girando, n\u00e3o deve \nhaver a execu\u00e7\u00e3o de tarefas pela respectiva esta\u00e7\u00e3o, at\u00e9 que o evento \nfi_turn seja sinalizado e vice-versa. \n\nAs especifica\u00e7\u00f5es ??\n, ???, ??? e ???  cuidam da sincroniza\u00e7\u00e3o \nentre as esta\u00e7\u00f5es. Cada gerador foca na resolu\u00e7\u00e3o de coordena\u00e7\u00e3o entre \nduas esta\u00e7\u00f5es sequ\u00eanciais. Os estados dos geradores s\u00e3o definidos por \ndois n\u00fameros que indicam a presen\u00e7a de uma pe\u00e7a num slot, se diferente \nde 0, e os n\u00fameros 1, 2 e 3 indicam uma qualidade para a pe\u00e7a. Assim, \nnas especifica\u00e7\u00f5es ??\n, ??? e ???, o n\u00famero 1 simboliza pe\u00e7as vindas \ndo buffer de entrada e, o n\u00famero 2 pe\u00e7as vindas da esta\u00e7\u00e3o de retraba-\nlho. O teste pode resultar em tr\u00eas respostas. Portanto, os n\u00fameros 1, 2 e \n3 dos estados da especifica\u00e7\u00e3o ???  representam uma aprova\u00e7\u00e3o, uma \nprimeira rejei\u00e7\u00e3o e uma segunda rejei\u00e7\u00e3o, respectivamente. \n\n\n\n \nTeoria de controle supervis\u00f3rio de sistemas a eventos discretos 33 \n\n \n\n \n\na) E2a, b) E2b, c) E2c e d) E2d\n\nE1\n\nE3a, E3b, E3c\n\nE3d\n\na) E4a e b) E4b\n\n \n\nFigura 3.6 Especifica\u00e7\u00f5es para a CFM (SILVA, 2010) \n \n\n\n\n \n34 Teoria de controle supervis\u00f3rio de sistemas a eventos discretos  \n\n \n\n \n\nOs eventos fi_<a\u00e7\u00e3o_ib> nas especifica\u00e7\u00f5es ??\n, ??? e ??? cor-\nrespondem aos sinais de fim de opera\u00e7\u00e3o do subsistema anterior sobre \numa pe\u00e7a vinda do buffer de entrada e, os eventos st_<prox_a\u00e7\u00e3o> \nrepresentam o in\u00edcio das opera\u00e7\u00f5es sobre as pe\u00e7as vindas do buffer de \nentrada pelo subsistema seguinte ao que sinalizou o evento \nfi_<a\u00e7\u00e3o_ib>. O mesmo aplica-se aos eventos fi_<a\u00e7\u00e3o_rw> e \nst_<prox_a\u00e7\u00e3o_rw> em rela\u00e7\u00e3o \u00e0s pe\u00e7as provenientes da esta\u00e7\u00e3o de \nretrabalho.  \n\nPor exemplo, em ??? fi_<a\u00e7\u00e3o_ib> \u00e9 fi_drill, prox_a\u00e7\u00e3o_ib \u00e9 \nst_weld, fi_<a\u00e7\u00e3o_rw> \u00e9 fi_skdrill e prox_a\u00e7\u00e3o_ib \u00e9 fi_skweld. A es-\npecifica\u00e7\u00e3o ??\n responde pelo manipulador rob\u00f3tico, slot S1, e a esta\u00e7\u00e3o \nde fura\u00e7\u00e3o e ??? pelas esta\u00e7\u00f5es de soldagem e de teste. A especifica\u00e7\u00e3o \n???  responde pela esta\u00e7\u00e3o de teste e o manipulador rob\u00f3tico e segue o \nmesmo padr\u00e3o de constru\u00e7\u00e3o das especifica\u00e7\u00f5es ??\n, ??? e ???, mas \ndifere em tamanho. Isso acontece porque a esta\u00e7\u00e3o de teste oferece tr\u00eas \npossibilidades de resposta fi_ok, fi_nok1 e fi_nok2.  Por \u00faltimo, as espe-\ncifica\u00e7\u00f5es ??\n e ??? estabelecem que o manipulador rob\u00f3tico deposita \npe\u00e7a na mesa girat\u00f3ria ap\u00f3s a ativa\u00e7\u00e3o dos sensores sen_ib e sen_rw, \nrespectivamente. O auto-la\u00e7o no estado 2, permite a ativa\u00e7\u00e3o dos senso-\nres em qualquer momento. Para os leitores que desejam maiores deta-\nlhes da modelagem da CFM podem ser encontrados em Silva (2010). \n\n3.3.4 S\u00edntese de supervisores modulares locais da CFM \n\nA s\u00edntese de supervisores para a CFM foi feita usando a aborda-\ngem modular local, apresentada na se\u00e7\u00e3o 3.2, onde cada um dos super-\nvisores locais representa a m\u00e1xima linguagem control\u00e1vel para cada \nplanta local. Dessa forma, cada supervisor local coordena uma parte do \nsistema global. \n\nConforme foi apresentado na se\u00e7\u00e3o 3.2, deve-se obter as plantas \nlocais para cada especifica\u00e7\u00e3o, compondo-se os subsistemas que possu-\nem eventos em comum com a especifica\u00e7\u00e3o em quest\u00e3o. Por exemplo, a \nconstru\u00e7\u00e3o da planta local ?? ??\n, referente \u00e0 especifica\u00e7\u00e3o ??\n, com o \nalfabeto ?Q?\n '{st_turn, st_drill, st_skdrill, fi_turn, fi_drill, fi_skdrill}, \nobt\u00e9m-se mediante a composi\u00e7\u00e3o s\u00edncrona dos geradores ?? e ??, j\u00e1 que \ncompartilham eventos com esta especifica\u00e7\u00e3o, como pode ser obtido, a \npartir da tabela 3.1. As plantas locais restantes podem ser visualizadas \nna tabela 3.2. Na sequ\u00eancia, \u00e9 obtida a linguagem alvo para cada planta \nlocal, atrav\u00e9s do produto s\u00edncrono da planta local com sua respectiva \nespecifica\u00e7\u00e3o, ?? ?E ' ?E ? ??? ?E?, para j ? {1, 2a, 2b, 2c, 2d, 3a, 3b, \n\n\n\n \nTeoria de controle supervis\u00f3rio de sistemas a eventos discretos 35 \n\n \n\n \n\n3c, 3d, 4a, 4b}. Por \u00faltimo, \u00e9 computada a m\u00e1xima linguagem control\u00e1-\nvel contida em cada linguagem alvo, ??U&amp;??? ?E , ?? ?E ?. Para a CFM \nforam obtidos 11 supervisores locais, Slocx, x ? {1, 2a, 2b, 2c, 2d, 3a, 3b, \n3c, 3d, 4a, 4b}. Em seguida, foi verificada a modularidade, calculando o \ngerador S = Sloc1 || Sloc2a || Sloc2b || Sloc2c || Sloc2d || Sloc3a || Sloc3b || Sloc3c || \nSloc3d || Sloc4a || Sloc4b com 19180 estados. Dado que o gerador S \u00e9 trim, \ndiz-se que comportamento obtido pela supervis\u00e3o das plantas locais \u00e9 \nn\u00e3o bloqueante e equivalente ao comportamento obtido por supervis\u00e3o \nmonol\u00edtica. O n\u00famero de estados de todos os geradores envolvidos na \ns\u00edntese de supervisores modulares locais \u00e9 visualizado na tabela 3.3. \nPercebe-se que, apesar de ter sido projetado um controle modular, al-\nguns supervisores possuem um n\u00famero de estados bem elevado, como o \nSloc1, que tem 648 estados. Isso torna sua implementa\u00e7\u00e3o pouco pr\u00e1tica \ne, portanto, faz sentido tentar reduzir os supervisores obtidos. Estes \nsupervisores modulares reduzidos ter\u00e3o um n\u00famero menor ou igual de \nestados, por\u00e9m possuem a mesma a\u00e7\u00e3o de controle sobre o comporta-\nmento da planta livre local, que os correspondentes supervisores modu-\nlares locais. Um algoritmo formal para minimiza\u00e7\u00e3o de supervisores \u00e9 \napresentado em Su e Wonham (2004). A s\u00edntese dos supervisores locais \ne sua posterior redu\u00e7\u00e3o foram realizadas na ferramenta computacional \nTCT (se\u00e7\u00e3o 3.5.2).  \n\n \nTabela 3.2 Plantas locais para a CFM (SILVA, 2010) \n\nGlocx || Gx \nGloc1 G4 || G5 || G6 || G7 || G3 \nGloc2a G4 || G5 \nGloc2b G4 || G6 \nGloc2c G4 || G7 \nGloc2d G4 || G3 \nGloc3a G4 || G5 || G3 \nGloc3b G4 || G5 || G6 \nGloc3c G4 || G6 || G7 \nGloc3d G4 || G7 || G3 \nGloc4a G1 || G3 \nGloc4b G2 || G3 \n\n \n  \n\n\n\n \n36 Teoria de controle supervis\u00f3rio de sistemas a eventos discretos  \n\n \n\n \n\nTabela 3.3 N\u00famero de estados dos geradores da s\u00edntese de supervisores (SIL-\nVA, 2010) \n\nX Ex Glocx Elocx Slocx RSlocx \n1 2 324 648 648 2 \n\n2\n , 2? , 2? 2 6 4 4 2 \n2? 2 12 7 7 2 \n3\n 9 36 324 252 9 \n\n3? , 3? 9 18 162 90 9 \n3? 16 36 576 288 16 \n\n4\n , 4? 2 6 12 12 2 \n\n3.4 ARQUITETURA DE CONTROLE SUPERVIS\u00d3RIO \n\nDe acordo com Ramadge e Wonham (1989) uma arquitetura de \ncontrole constitui-se de duas estruturas: uma chamada planta, que gera \nos eventos de forma espont\u00e2nea e ass\u00edncrona no tempo, e a outra consti-\ntu\u00edda pelos supervisores, os quais exercem a a\u00e7\u00e3o de controle sobre o \ncomportamento livre da planta. Por\u00e9m, nos sistemas de manufatura, a \nmaioria de eventos control\u00e1veis s\u00e3o executados atrav\u00e9s de comandos \nenviados pelo sistema de controle. Todos os eventos, control\u00e1veis e n\u00e3o \ncontrol\u00e1veis, devem estar associados as suas pr\u00f3prias sequ\u00eancias opera-\ncionais, uma vez que n\u00e3o representam entradas diretas ou sa\u00eddas do \nCLP. \n\nCom o objetivo de implementar a abordagem modular local, nu-\nma estrutura organizada, com supervisores reduzidos, o sistema de con-\ntrole \u00e9 programado em tr\u00eas n\u00edveis hier\u00e1rquicos (Queiroz e Cury, 2002), \nFigura 3.7, de modo que h\u00e1 uma interface entre os supervisores modula-\nres e o sistema real: o sistema produto e as sequ\u00eancias operacionais. Esta \narquitetura, cuja din\u00e2mica \u00e9 explicada a seguir, pode ser implementada \nem linguagem de Controladores L\u00f3gicos Program\u00e1veis (IEC 61131-3, \n1998), em linguagens de PC (C++, Java, etc.) ou mesmo diretamente em \nhardware (circuito el\u00e9trico, pneum\u00e1tico ou hidr\u00e1ulico) (Queiroz e Cury, \n2002). \n\n\n\n \nTeoria de controle supervis\u00f3rio de sistemas a eventos discretos 37 \n\n \n\n \n\n \n\nFigura 3.7 Arquitetura de Controle Supervis\u00f3rio (QUEIROZ e CURY, 2002) \n \nA a\u00e7\u00e3o de controle no n\u00edvel dos Supervisores Modulares (SM) se \n\nbaseia nos estados ativos dos supervisores, que s\u00e3o atualizados de acor-\ndo com a ocorr\u00eancia de eventos gerados na planta. Sendo assim, em \ncada estado ocorrer\u00e1 uma a\u00e7\u00e3o de desabilita\u00e7\u00e3o de eventos control\u00e1veis \nque n\u00e3o ser\u00e3o permitidos de ocorrer na planta. \n\n O n\u00edvel do Sistema Produto (SP) tem como principal fun\u00e7\u00e3o exe-\ncutar os comandos que s\u00e3o permitidos e n\u00e3o s\u00e3o desabilitados pelo su-\npervisor e, receber respostas enviadas pelas sequ\u00eancias operacionais, \nsinalizando, ent\u00e3o, as mudan\u00e7as de estado para os supervisores. Os su-\npervisores s\u00e3o atualizados, toda vez que o SP envia comandos ou recebe \nrespostas. \n\nO n\u00edvel Sequ\u00eancias Operacionais (SO), s\u00e3o procedimentos de \nbaixo n\u00edvel, que traduzem os comandos dos modelos abstratos do SP \npara gerar os sinais de sa\u00edda do sistema de controle (entradas do sistema \nreal) e por sua vez, l\u00ea os sinais de entrada (sa\u00eddas do sistema real), ge-\nrando respostas l\u00f3gicas ao SP, associadas a eventos n\u00e3o control\u00e1veis. \n\n3.5 FERRAMENTAS PARA SIMULA\u00c7\u00c3O E IMPLEMENTA\u00c7\u00c3O \n\nDurante o processo de s\u00edntese dos supervisores, a utiliza\u00e7\u00e3o de \nferramentas computacionais como TCT (WONHAM, 1999), SUPRE-\nMICA (AKESSON, 2002), IDES (GRIGOROV, 2007), I-\nDES2ST(KLINGE, 2007), DESCO (FABIAN; HELLGREN, 2000), \n\n\n\n \n38 Teoria de controle supervis\u00f3rio de sistemas a eventos discretos  \n\n \n\n \n\nGRAIL (RAYMOND e WOOD, 1994, CURY, 2001, REISER, 2005) \nUKDES (CHANDRA et al., 2002) e VER (BALEMI et al., 1993) torna \nesta metodologia de projeto diferenciada das tradicionais t\u00e9cnicas ma-\nnuais e intuitivas, utilizadas como ferramentas nos trabalhos atuais de \nprojeto l\u00f3gico. Existem, naturalmente, mais programas ou ferramentas, \nque tratam os sistemas a eventos discretos. Dado que nesta disserta\u00e7\u00e3o \nforam usadas apenas IDES, TCT, Supremica e Ides2St, s\u00f3 ser\u00e3o intro-\nduzidas estas quatro ferramentas. \n\n3.5.1 IDES \n\nIDES \u00e9 uma ferramenta f\u00e1cil de usar, baseada em Java e desen-\nvolvida pelo laborat\u00f3rio DES da Universidade de Queen. Ela permite \numa aproxima\u00e7\u00e3o visual permitindo criar e editar geradores por meio de \nde um mouse. Tamb\u00e9m permite realizar opera\u00e7\u00f5es sobre os geradores \ncomo composi\u00e7\u00e3o s\u00edncrona, minimiza\u00e7\u00e3o, c\u00e1lculo da m\u00e1xima linguagem \ncontrol\u00e1vel, c\u00e1lculo do trim, entre outras e, importar e exportar arquivos \nGRAIL e TCT (GRIGOROV, 2007).  \n\n3.5.2 TCT \n\nTCT foi desenvolvida pelo Grupo de Controle de Sistemas da  \nUniversidade de Toronto no Canad\u00e1. \u00c9 uma ferramenta para s\u00edntese de \ncontrole supervis\u00f3rio para sistemas a eventos discretos. Permite a cria-\n\u00e7\u00e3o de modelos para geradores e realizar com estes, opera\u00e7\u00f5es como \nproduto s\u00edncrono, calcular a m\u00e1xima linguagem control\u00e1vel e os eventos \ndesabilitados de um supervisor, reduzir supervisores, entre outras. Para \nWindows e Linux, a ferramenta pode ser descarregada da p\u00e1gina web do \nprofessor W. M. Wonham (FENG e WONHAM, 2006). \n\n3.5.3 Supremica \n\nSupremica \u00e9 uma ferramenta para verifica\u00e7\u00e3o, simula\u00e7\u00e3o e s\u00edntese \nde controladores para sistemas a eventos discretos. Supremica foi criada \ninicialmente como suporte ao trabalho de doutorado \u201cM\u00e9todos e ferra-\nmentas em teoria de controle supervis\u00f3rio\u201d do Knut Akesson da Univer-\nsidade T\u00e9cnica Chalmers na Su\u00e9cia. Um projeto Supremica consiste de \nm\u00faltiplos geradores que juntos definem o problema principal. Esta fer-\nramenta tem uma interface gr\u00e1fica, a qual permite realizar facilmente a \n\n\n\n \nTeoria de controle supervis\u00f3rio de sistemas a eventos discretos 39 \n\n \n\n \n\ns\u00edntese de supervisores e verifica\u00e7\u00e3o, onde s\u00e3o testadas propriedades do \nsistema por meio de m\u00e9todos formais. Al\u00e9m disso, possui uma interface \npara simula\u00e7\u00e3o do comportamento das plantas sob a\u00e7\u00e3o dos superviso-\nres, o que permite avaliar a fase de modelagem e s\u00edntese de supervisores \nde um sistema de controle (AKESSON, 2002). \n\n3.5.4 Ides2ST \n\nIdes2ST \u00e9 uma ferramenta desenvolvida por Klinge (2007), a \nqual gera automaticamente c\u00f3digo em linguagem de texto estruturado \n(IEC-61131-3) da estrutura de controle hierarquizada apresentada na \nse\u00e7\u00e3o 3.4.  A ferramenta precisa ter como entrada duas pastas. A primei-\nra deve conter os modelos em IDES dos supervisores modulares reduzi-\ndos e, a segunda, os geradores do sistema produto tamb\u00e9m em IDES.  Se \no controle supervis\u00f3rio foi sintetizado a partir GRAIL ou TCT, os ar-\nquivos nessas ferramentas podem ser importados a IDES e depois con-\nvertidos em ST (KLINGE, 2007). Na Figura 3.8, \u00e9 apresentado um e-\nxemplo da estrutura de c\u00f3digo de implementa\u00e7\u00e3o em Ides2ST. \n\nIdes2St atribui uma vari\u00e1vel de mem\u00f3ria do CLP a cada gerador e \na cada evento. Durante a inicializa\u00e7\u00e3o do programa, todos os superviso-\nres e subsistemas s\u00e3o definidos para seus estados iniciais, Figura 3.8 (a), \nse a vari\u00e1vel auxiliar ilc_inited n\u00e3o est\u00e1 setada. Isto, para garantir que a \nl\u00f3gica de inicializa\u00e7\u00e3o seja executada s\u00f3 uma vez, dado que a varredura \nde um programa de CLP \u00e9 sequ\u00eancial. Por outro lado, Ides2St utiliza a \nvari\u00e1vel auxiliar evt_blk, que quando ativa, significa uma atualiza\u00e7\u00e3o de \nestado no sistema produto e nos supervisores, para evitar a situa\u00e7\u00e3o \nindesej\u00e1vel de computar duas transi\u00e7\u00f5es subsequentes sem atualizar os \nsupervisores. Isso n\u00e3o significa que os eventos subsequentes ser\u00e3o igno-\nrados pelo programa, mas adiados. Suas vari\u00e1veis s\u00e3o definidas em 1, \nmas elas s\u00e3o executadas em um estado conveniente, nos supervisores. \n\nO c\u00f3digo do programa relacionado ao n\u00edvel de supervisores \u00e9 di-\nvidido em duas partes. A primeira, Figura. 3.8 (b), especifica os supervi-\nsores como geradores, os quais descrevem o estado atual e o evento de \ntransi\u00e7\u00e3o que leva para o pr\u00f3ximo estado. Cada supervisor \u00e9 composto \npor um grupo de instru\u00e7\u00f5es tipo IF que definem o n\u00famero do estado \natual e o n\u00famero do estado alvo quando uma transi\u00e7\u00e3o ocorre. A segun-\nda parte, Figura 3.8 (c), refere-se \u00e0 desabilita\u00e7\u00e3o de eventos que \u00e9 feita \natrav\u00e9s da defini\u00e7\u00e3o de uma vari\u00e1vel chamada De_<evento>. Esta parte \n\u00e9 composta por instru\u00e7\u00f5es tipo CASE no qual a vari\u00e1vel De_<evento> \u00e9 \n\n\n\n \n40 Teoria de controle supervis\u00f3rio de sistemas a eventos discretos  \n\n \n\n \n\ndefinida como 1 quando os estados das vari\u00e1veis dos supervisores que \ndesabilitam esse eventos est\u00e3o ativos.  \n\nSupervisor\n\nPlantas Locais\n\nM1 M2\n\n(*Inicializa\u00e7\u00e3o de estados*)\n\nIF (NOT ilc_inited) THEN\n\nS_REDUZIDO_St:=0;\n\np_M1_St:=0;\n\np_M2_St:=0;\n\nilc_inited:=1;\n\nEND_IF;\n\nREDUZIDO\n\na)\n\n(*Supervisores*)\n\n(*s_REDUZIDO)\n\nevt_blk:=0;\n\nIF (NOT evt_blk AND s_REDUZIDO_St=1 AND e_b1) THEN\n\nevt_blk:=1;\n\nS_REDUZIDO_St:=2;\n\nEND_IF;\n\nF (NOT evt_blk AND s_REDUZIDO_St=2 AND e_b1) THEN\n\nevt_blk:=1;\n\nS_REDUZIDO_St:=1;\n\nEND_IF;\n\n(*Libera\u00e7\u00e3o de eventos*)\n\nevt_blk:=0;\n\n(*Reinicia todos os eventos*)\n\ne_a2:=0;\n\ne_b1:=0;\n\ne_b2:=0;\n\n(*Eventos n\u00e3o control\u00e1veis de M2*)\n\nIF (NOT evt_blk AND p_M2_St=2 AND Ae_b2) THEN\n\ne_b2:=1;\n\nAe_b2:=0;\n\nevt_blk:=1;\n\np_M2_St:=1;\n\nEND_IF;\n\n(*Eventos n\u00e3o control\u00e1veis de M1*)\n\nIF (NOT evt_blk AND p_M1_St=1 AND Ae_b1) THEN\n\ne_b1:=1;\n\nAe_b1:=0;\n\nevt_blk:=1;\n\np_M1_St:=1;\n\nEND_IF;\n\n(*Eventos control\u00e1veis de M2*)\n\nIF (NOT evt_blk AND p_M2_St=1 AND NOT De_a2) THEN\n\ne_a2:=1;\n\nevt_blk:=1;\n\np_M2_St:=2;\n\nEND_IF;\n\n(*Eventos desabilitados*)\n\n(*e_a2*)\n\nDe_a2:=0; \n\nCASE s_REDUZIDO_St OF\n\n1:= De_a2:=1;    \n\nEND_CASE;\n\nb) e)\n\nd)\n\nc)\n\nFigura 3.8 Exemplo da estrutura c\u00f3digo de implementa\u00e7\u00e3o em Ides2ST \n\nO sistema produto tamb\u00e9m \u00e9 implementado como geradores, se-\nmelhante aos supervisores, e seu c\u00f3digo \u00e9 dividido em duas partes. O \nc\u00f3digo de eventos n\u00e3o control\u00e1veis, Figura. 3.8 (d), e eventos control\u00e1-\nveis, Figura. 3.8 (e). A primeira parte deve preceder a \u00faltima em conse-\nqu\u00eancia da sua imprevisibilidade. Assim, antes que qualquer evento \ncontrol\u00e1vel possa ser acionado, o c\u00f3digo ir\u00e1 verificar se h\u00e1 um bit de um \nevento n\u00e3o control\u00e1vel definido como 1. Se assim for, o subsistema \u00e9 \natualizado e a vari\u00e1vel do evento de resposta e_<evento> \u00e9 definido \ncomo 1, para atualizar o supervisor. Se n\u00e3o fosse assim, e o subsistema \n\n\n\n \nTeoria de controle supervis\u00f3rio de sistemas a eventos discretos 41 \n\n \n\n \n\nest\u00e1 em um estado no qual um evento control\u00e1vel n\u00e3o est\u00e1 desabilitado, \no bit da vari\u00e1vel e_<evento> \u00e9 definido como 1, ou seja, um comando \u00e9 \nenviado para iniciar uma sub-rotina e para atualizar o supervisor, ap\u00f3s \neste subsistema o faz. Quando um evento est\u00e1 definido em m\u00faltiplas \ntransi\u00e7\u00f5es do mesmo gerador, pode acontecer que o processamento da \nprimeira transi\u00e7\u00e3o desative o sinal de ocorr\u00eancia desse evento, mesmo \nque a transi\u00e7\u00e3o n\u00e3o esteja ativa. Para evitar este bloqueio nas transi\u00e7\u00f5es \ndo sistema produto, s\u00e3o zeradas todas as vari\u00e1veis e_<evento> e a vari-\n\u00e1vel evt_blk, no in\u00edcio do c\u00f3digo do sistema produto / final dos supervi-\nsores. \n\nNo n\u00edvel de sequ\u00eancias operacionais, Ides2ST envia os comandos \npara iniciar a execu\u00e7\u00e3o de procedimentos de baixo n\u00edvel associados ao \nsistema de controle, assim como o encaminhamento de respostas para o \nsistema produto. Ides2ST deixa um espa\u00e7o de mem\u00f3ria em branco para \nser associado com as sub-rotinas de in\u00edcio e fim implementadas pelo \nprojetista. Quando uma sub-rotina termina, ele define como 1 o bit da \nvari\u00e1vel Ae_<evento>.  \n\n3.6 CONCLUS\u00c3O DO CAP\u00cdTULO \n\nA Teoria de Controle Supervis\u00f3rio usada para Sistemas a Eventos \nDiscretos permite a modelagem de subsistemas de manufatura e seus \nrespectivos supervisores mediante a abordagem Modular Local que ser\u00e1 \nobjeto de utiliza\u00e7\u00e3o no desenvolvimento deste trabalho, a qual possibili-\nta a utiliza\u00e7\u00e3o de elementos de controle reduzidos, uma vez que conside-\nra plantas locais, que envolvem um n\u00famero menor de subsistemas. Ao \ninv\u00e9s de um \u00fanico supervisor, obt\u00eam-se v\u00e1rios supervisores menores, \nsendo um para cada especifica\u00e7\u00e3o, mas que em conjunto possuem a \nmesma a\u00e7\u00e3o de controle, caso a sua modularidade seja verificada.  \n\nA implementa\u00e7\u00e3o do sistema de controle, realiza-se em controla-\ndores l\u00f3gicos program\u00e1veis, com base na arquitetura de controle super-\nvis\u00f3rio, proposta por Queiroz e Cury (2002) constitu\u00edda de tr\u00eas n\u00edveis \nhier\u00e1rquicos: supervisores modulares, sistema produto e sequ\u00eancias \noperacionais.  Por \u00faltimo, foram apresentadas as ferramentas computa-\ncionais que auxiliam na modelagem dos subsistemas da planta, simula-\n\u00e7\u00e3o e valida\u00e7\u00e3o da l\u00f3gica de controle proposta para um sistema. \n\nNo cap\u00edtulo 4, \u00e9 introduzida formalmente a metodologia, objeto \ndesde trabalho, terminando com a exemplifica\u00e7\u00e3o da aplica\u00e7\u00e3o de fun-\ncionalidades do sistema SCADA na programa\u00e7\u00e3o do controle supervis\u00f3-\n\n\n\n \n42 Teoria de controle supervis\u00f3rio de sistemas a eventos discretos  \n\n \n\n \n\nrio da CFM estudada na se\u00e7\u00e3o 3.3. Esta arquitetura ser\u00e1 utilizada para \ndesenvolver o estudo de caso do cap\u00edtulo 5. \n  \n\n\n\n \n\n4. METODOLOGIA PARA DESENVOLVIMENTO INTEGRADO \nDE SISTEMAS SCADA COM CONTROLE SUPERVIS\u00d3RIO \n\n \nEste cap\u00edtulo prop\u00f5e uma metodologia para desenvolvimento de \n\nsistemas SCADA, aplicada a sistemas de manufatura, a qual \u00e9 baseada \nna arquitetura de controle supervis\u00f3rio (QUEIROZ e CURY, 2002) \nexplicada no cap\u00edtulo 3 e implementada em dispositivos de controle \nCLP.  \n\nO cap\u00edtulo est\u00e1 dividido em tr\u00eas se\u00e7\u00f5es: na se\u00e7\u00e3o 4.1, \u00e9 descrita, \npasso a passo, uma metodologia de implementa\u00e7\u00e3o de Sistemas de Su-\npervis\u00e3o e Aquisi\u00e7\u00e3o de Dados integrada \u00e0 programa\u00e7\u00e3o do controle \nsupervis\u00f3rio em CLP; na se\u00e7\u00e3o 4.2, \u00e9 descrita a implementa\u00e7\u00e3o de fun-\ncionalidades que oferece o sistema SCADA a partir do exemplo do cap\u00ed-\ntulo 3 e finalmente na se\u00e7\u00e3o 4.3, s\u00e3o apresentadas as conclus\u00f5es. \n\n4.1 METODOLOGIA \n\nConforme uma metodologia adotada no trabalho de Silva e Quei-\nroz (2009), a qual segue as seguintes etapas: modelagem da planta e \nespecifica\u00e7\u00f5es, s\u00edntese de supervisores, emula\u00e7\u00e3o de geradores e imple-\nmenta\u00e7\u00e3o segundo a ACS, \u00e9 realizado um estudo de caso para explorar a \nintegra\u00e7\u00e3o de funcionalidades do sistema SCADA com o controle su-\npervis\u00f3rio, dando como resultado uma implementa\u00e7\u00e3o preliminar que d\u00e1 \norigem \u00e0 metodologia proposta neste cap\u00edtulo.  \n\nA Figura 4.1 apresenta essa metodologia, que \u00e9 desenvolvida em \noito fases: projeto informacional; s\u00edntese de controle supervis\u00f3rio; emu-\nla\u00e7\u00e3o; implementa\u00e7\u00e3o de controle supervis\u00f3rio em CLP; implementa\u00e7\u00e3o \nde funcionalidades b\u00e1sicas do SCADA; avalia\u00e7\u00e3o de funcionamento do \nsistema real; implementa\u00e7\u00e3o de funcionalidades gerais do sistema \nSCADA; e valida\u00e7\u00e3o. Cada uma dessas fases \u00e9 explicada a seguir. \n\n \n\n\n\n \n44 Metodologia para desenvolvimento integrado de sistemas \n\nSCADA com controle supervis\u00f3rio  \n \n\n \n\nFase I Projeto Informacional\n\nFase II S\u00edntese de Controle Supervis\u00f3rio\n\nEtapa \n\n2.1\nModelagem de Planta\n\nEtapa \n\n2.2\nModelagem de Especifica\u00e7\u00f5es\n\nFase IV\nImplementa\u00e7\u00e3o de Controle Supervis\u00f3rio em \n\nCLP\n\nComportamento do \n\nSistema Real correto?\nn\u00e3o\n\nImplementa\u00e7\u00e3o de Funcionalidades Gerais do \n\nSistema SCADA\nFase VII\n\nValida\u00e7\u00e3o\n\nsim\n\nPara Fase II ou Fase IV\n\nTestes Finais OK? Para Fase II ou Fase IVn\u00e3o\n\nsim\n\nSistema Real sob SupervIs\u00e3o \n\noperando em conformidade \n\ncom o esperado \n\nEtapa \n\n2.3\nS\u00edntese de Supervisores\n\nEtapa \n\n4.1\n\nImplementa\u00e7\u00e3o dos Supervisores Modulares e \n\nSistema Produto\n\nEtapa \n\n4.2\nImplementa\u00e7\u00e3o de Sequ\u00eancias Operacionais\n\nEtapa \n\n4.3\nTeste Inicial do Funcionamento do Sistema\n\nModelagem correta ?\n\nsim\n\nn\u00e3o Para Fase II\n\nImplementa\u00e7\u00e3o de Funcionalidades B\u00e1sicas do \n\nSistema SCADA\n\nEtapa \n\n5.1\n\nInstala\u00e7\u00e3o e Configura\u00e7\u00e3o do Software SCADA\n\nEtapa \n\n5.2\nImplementa\u00e7\u00e3o de Funcionalidades B\u00e1sicas \n\nFase V\n\nFase VIII\n\nFase VI Avalia\u00e7\u00e3o de Funcionamento do Sistema Real\n\nFase III Emula\u00e7\u00e3o\n\n \n \n\nFigura 4.1 Metodologia \n\n\n\n \nMetodologia para desenvolvimento integrado de sistemas \n\nSCADA com controle supervis\u00f3rio  \n45 \n\n \n\n \n\n4.1.1 Fase I \u2013 Projeto informacional  \n \n\nO projeto informacional \u00e9 a primeira fase da metodologia propos-\nta. Aqui s\u00e3o levantadas as especifica\u00e7\u00f5es t\u00e9cnicas do projeto de integra-\n\u00e7\u00e3o, mediante a obten\u00e7\u00e3o das informa\u00e7\u00f5es relevantes do processo a ser \ncontrolado e supervisionado. Essas informa\u00e7\u00f5es facilitam an\u00e1lise e \ncompreens\u00e3o do sistema e auxiliam ao projetista na fase de modelagem.  \n\nNesta fase descreve-se o comportamento fisicamente poss\u00edvel do \nsistema, identificando os subsistemas ou equipamentos que o comp\u00f5em, \nbem como o problema de controle em s\u00ed, definindo as restri\u00e7\u00f5es do \ncomportamento e coordena\u00e7\u00e3o desejados para o sistema. Tamb\u00e9m, defi-\nnem-se os dispositivos de campo: sensores e atuadores, que devem fazer \nparte do sistema sob controle, mediante a implementa\u00e7\u00e3o das sequ\u00eancias \noperacionais, as quais s\u00e3o programadas nos equipamentos de controle.  \n\nOutro fator importante \u00e9 a defini\u00e7\u00e3o das tecnologias a serem utili-\nzadas no desenvolvimento do projeto. Esta etapa envolve os equipamen-\ntos ou dispositivos que executam o controle autom\u00e1tico das atividades \nda planta, como por exemplo: CLP, RTU, microcontrolador, etc. Envol-\nve ainda,  a rede de comunica\u00e7\u00e3o e protocolo a serem usados, para esta-\nbelecer a comunica\u00e7\u00e3o entre o equipamento de controle e a esta\u00e7\u00e3o de \nsupervis\u00e3o. Apesar de serem v\u00e1rios os tipos de dispositivos de controle \npresentes nos sistemas de manufatura, esta metodologia est\u00e1 mais foca-\nda na implementa\u00e7\u00e3o de CLP cuja programa\u00e7\u00e3o \u00e9 realizada em lingua-\ngens como ladder e texto estruturado (IEC-61131-3).  \n\nPor \u00faltimo, esta fase define as ferramentas que permitem a s\u00edntese \ndo controle supervis\u00f3rio segundo a TCS; o software de configura\u00e7\u00e3o e \nprograma\u00e7\u00e3o do CLP e o software que permite o desenvolvimento da \naplica\u00e7\u00e3o SCADA. Este \u00faltimo, pode ser propriet\u00e1rio ou de c\u00f3digo aber-\nto, desde que possua os m\u00f3dulos que implementem as funcionalidades \napresentadas na se\u00e7\u00e3o 2.5.1 e forne\u00e7am uma interface de comunica\u00e7\u00e3o \ncompat\u00edvel com os equipamentos de controle e dispositivos de campo \ndefinidos para o projeto. O software SCADA deve possuir drivers de \ncomunica\u00e7\u00e3o compat\u00edveis com os protocolos oferecidos pelo CLP. \n\n4.1.2 Fase II \u2013 S\u00edntese de controle supervis\u00f3rio \n\nEsta fase compreende a modelagem da planta a ser controlada, \nmodelagem das especifica\u00e7\u00f5es de controle, s\u00edntese de supervisores \u00f3ti-\nmos, teste de modularidade e redu\u00e7\u00e3o de supervisores. As etapas de \n\n\n\n \n46 Metodologia para desenvolvimento integrado de sistemas \n\nSCADA com controle supervis\u00f3rio  \n \n\n \n\nmodelagem devem atender os requisitos de projeto novo ou de re-\nprojeto (melhoramento). O re-projeto se d\u00e1 quando s\u00e3o necess\u00e1rias mo-\ndifica\u00e7\u00f5es \u00e0s leis de controle existentes ou quando s\u00e3o inseridos ou reti-\nrados equipamentos do sistema.  \n \nEtapa 2.1 \u2013 Modelagem da planta  \n \n\nNesta etapa, s\u00e3o constru\u00eddos os geradores que representam o \ncomportamento independente de cada subsistema. \u00c9 importante conside-\nrar na modelagem a maior abstra\u00e7\u00e3o poss\u00edvel das atividades referentes \naos modelos, considerando apenas os eventos relevantes que sejam ne-\ncess\u00e1rios \u00e0s tarefas de coordena\u00e7\u00e3o entre os subsistemas, para evitar a \nexplos\u00e3o do espa\u00e7o de estados e facilitar o processo de s\u00edntese dos su-\npervisores. Este procedimento resulta em modelos menores e, por con-\nsequ\u00eancia, em menor custo computacional. \n\n \nEtapa 2.2 - Modelagem das especifica\u00e7\u00f5es \n \n\nNesta etapa, realiza-se constru\u00e7\u00e3o dos geradores de cada especifi-\nca\u00e7\u00e3o isoladamente. As especifica\u00e7\u00f5es determinam como a opera\u00e7\u00e3o \ncoordenada dos subsistemas deve ocorrer de acordo com o comporta-\nmento desejado pelo projetista. Poss\u00edveis altera\u00e7\u00f5es neste comportamen-\nto, decorrentes da inser\u00e7\u00e3o de novos produtos, de modifica\u00e7\u00f5es em pro-\ncessos e produtos existentes, de novas necessidades de demanda, da \nmoderniza\u00e7\u00e3o tecnol\u00f3gica, dentre outros, podem estar restritas \u00e0 apenas \numa especifica\u00e7\u00e3o. \n\n \nEtapa 2.3 - S\u00edntese de supervisores  \n \n\nA etapa de s\u00edntese segue a abordagem modular local (QUEIROZ \ne CURY, 2000), apresentada no cap\u00edtulo anterior. Primeiro, obt\u00eam-se a \nplanta local para cada especifica\u00e7\u00e3o compondo-se os subsistemas que \npossuem eventos em comum com a especifica\u00e7\u00e3o em quest\u00e3o; depois, \ncalcula-se a especifica\u00e7\u00e3o para cada planta local, atrav\u00e9s do produto \ns\u00edncrono da planta local com sua respectiva especifica\u00e7\u00e3o; em seguida, \ncalcula-se a m\u00e1xima linguagem control\u00e1vel contida em cada linguagem \nalvo; e por \u00faltimo, verifica-se a modularidade local (n\u00e3o conflito) dos \nsupervisores resultantes; se forem modulares, implementar-se um super-\nvisor local reduzido para cada linguagem control\u00e1vel; se n\u00e3o forem \nmodulares, resolver-se o conflito.  \n\n\n\n \nMetodologia para desenvolvimento integrado de sistemas \n\nSCADA com controle supervis\u00f3rio  \n47 \n\n \n\n \n\n4.1.3 Fase III - Emula\u00e7\u00e3o \n\nNa fase de emula\u00e7\u00e3o, s\u00e3o realizados testes da l\u00f3gica de controle \nproposta, por meio da ferramenta definida na Fase I.  A emula\u00e7\u00e3o per-\nmite acompanhar a atua\u00e7\u00e3o dos supervisores na planta sequencialmente, \npossibilitando identificar erros ocorridos na modelagem. Caso o proje-\ntista encontre erros de modelagem, permite-se realizar previamente mu-\ndan\u00e7as no projeto, voltando \u00e0 fase dois da metodologia proposta, caso \ncontr\u00e1rio, os supervisores e o sistema produto podem ser implementa-\ndos. \n\n4.1.4 Fase IV - Implementa\u00e7\u00e3o do controle supervis\u00f3rio em CLP \n\nEsta fase \u00e9 constitu\u00edda de duas etapas, cujo objetivo \u00e9 a imple-\nmenta\u00e7\u00e3o do sistema de controle conforme a hierarquia de tr\u00eas n\u00edveis: \nsupervisores modulares, sistema produto e sequ\u00eancias operacionais, \n(QUEIROZ, CURY, 2002), a qual foi discutida na se\u00e7\u00e3o 3.4.  Para atin-\ngir este prop\u00f3sito, cada n\u00edvel \u00e9 implementado atrav\u00e9s de um c\u00f3digo no \nCLP.  \n \nEtapa 4.1 - Implementa\u00e7\u00e3o dos supervisores modulares e sistema \nproduto \n \n\nNesta etapa, s\u00e3o implementados na linguagem de texto estrutura-\ndo os supervisores modulares, em suas vers\u00f5es reduzidas conforme \napresentado na se\u00e7\u00e3o 3.3.4, e o sistema produto mediante a ferramenta \nde gera\u00e7\u00e3o autom\u00e1tica de c\u00f3digo IDES2St (KLINGE, 2007), apresenta-\nda na se\u00e7\u00e3o 3.5. Esta ferramenta gera um c\u00f3digo associado a cada n\u00edvel, \nque \u00e9 implementado atrav\u00e9s de m\u00f3dulos de procedimento no CLP. \n \nEtapa 4.2 - Implementa\u00e7\u00e3o de sequ\u00eancias operacionais \n\nNesta etapa, s\u00e3o implementadas as rotinas operacionais em qual-\nquer linguagem de programa\u00e7\u00e3o, mas suportada pelo CLP de acordo \ncom IEC 61131 (ladder, texto estruturado, blocos funcionais, SFC, etc.). \n\u00c9 recomend\u00e1vel, se poss\u00edvel, programar cada sequ\u00eancia operacional \ncomo uma m\u00e1quina de estados, para tornar mais f\u00e1cil a manuten\u00e7\u00e3o e \nentendimento do c\u00f3digo implementado por parte dos projetistas e man-\ntenedores dos sistemas. \n\n \n\n\n\n \n48 Metodologia para desenvolvimento integrado de sistemas \n\nSCADA com controle supervis\u00f3rio  \n \n\n \n\nEtapa 4.3 - Teste inicial do funcionamento do sistema \nNesta etapa \u00e9 feita uma verifica\u00e7\u00e3o inicial para encontrar poss\u00ed-\n\nveis inconsist\u00eancias na l\u00f3gica programada. Por conveni\u00eancia no momen-\nto do teste, o projetista pode associar a cada sequ\u00eancia operacional roti-\nnas de temporiza\u00e7\u00e3o que simulem o tempo de execu\u00e7\u00e3o de opera\u00e7\u00e3o de \num determinado subsistema, pois nesta etapa ainda n\u00e3o foram inseridos \nos dispositivos de campo que s\u00e3o aqueles que implementam as sequ\u00ean-\ncias operacionais. Esta verifica\u00e7\u00e3o pode n\u00e3o ser exaustiva, deixando \npara as fases seguintes a valida\u00e7\u00e3o final da solu\u00e7\u00e3o proposta. \n\n4.1.5 Fase V - Implementa\u00e7\u00e3o de funcionalidades b\u00e1sicas do sistema   \nSCADA \n\nEsta fase destina-se \u00e0 implementa\u00e7\u00e3o de quatro funcionalidades \nb\u00e1sicas fornecidas por um sistema SCADA. As funcionalidades chama-\ndas de b\u00e1sicas s\u00e3o aquelas que fornecem informa\u00e7\u00e3o gr\u00e1fica e textual da \nplanta que est\u00e1 sendo controlada a partir da programa\u00e7\u00e3o de controle \nsupervis\u00f3rio obtida na fase IV, permitindo interagir com o processo. \nInclusive, tornam poss\u00edvel a visualiza\u00e7\u00e3o e an\u00e1lise de erros na modela-\ngem e na programa\u00e7\u00e3o das sequ\u00eancias operacionais que n\u00e3o puderam ser \nverificados nas fases II e IV respectivamente. Essas funcionalidades s\u00e3o: \no sin\u00f3tico, o envio de comandos, o hist\u00f3rico de eventos e a gera\u00e7\u00e3o de \nalarmes cr\u00edticos. Esta fase compreende duas etapas: \n\n \nEtapa 5.1 \u2013 Instala\u00e7\u00e3o e configura\u00e7\u00e3o do software SCADA \n\n \nInicia-se com a configura\u00e7\u00e3o do servidor SCADA, respons\u00e1vel \n\npor armazenar e trocar informa\u00e7\u00f5es com os clientes e onde est\u00e1 contido \no BD do processo. Isto \u00e9 realizado a trav\u00e9s de uma chave de hardware \nou hardkey em softwares propriet\u00e1rios, a qual \u00e9 conectada ao computa-\ndor servidor; ou mediante a instala\u00e7\u00e3o de um aplicativo como acontece, \npor exemplo, com o servidor de aplica\u00e7\u00f5es Tomcat integrado ao softwa-\nre ScadaBR. Feito isso, o software SCADA \u00e9 instalado no servidor. Em \nseguida, \u00e9 configurado o protocolo de comunica\u00e7\u00e3o tanto no CLP, quan-\nto na aplica\u00e7\u00e3o SCADA, definindo assim, as \u00e1reas do CLP que poder\u00e3o \nser manipuladas atrav\u00e9s da rede de comunica\u00e7\u00e3o. Finalmente, \u00e9 verifi-\ncado o envio de dados entre eles at\u00e9 que a comunica\u00e7\u00e3o seja validada. A \ninstala\u00e7\u00e3o do software n\u00e3o \u00e9 necess\u00e1ria a cada novo projeto, sempre que \n\n\n\n \nMetodologia para desenvolvimento integrado de sistemas \n\nSCADA com controle supervis\u00f3rio  \n49 \n\n \n\n \n\nseja utilizado o mesmo computador servidor no qual foi implementada \numa aplica\u00e7\u00e3o anterior. \n\n \nEtapa 5.2 \u2013 Implementa\u00e7\u00e3o de funcionalidades b\u00e1sicas \n \n\nNesta etapa, s\u00e3o implementadas funcionalidades como: o sin\u00f3ti-\nco, envio de comandos, hist\u00f3rico de eventos e alarmes cr\u00edticos no soft-\nware SCADA, a partir de c\u00f3digo gerado na programa\u00e7\u00e3o do controle \nsupervis\u00f3rio em CLP. \n\n4.1.6 Fase VI - Avalia\u00e7\u00e3o de funcionamento do sistema real \n\nEsta fase tem o prop\u00f3sito de avaliar se o comportamento do sis-\ntema real est\u00e1 de acordo com o inicialmente planejado. Aqui s\u00e3o reali-\nzados novos testes, desta vez, integrando os dispositivos de campo ao \nCLP. Se houver problemas de funcionamento e coordena\u00e7\u00e3o do sistema \nreal, associados \u00e0 modelagem incorreta e/ou programa\u00e7\u00e3o de sequ\u00eancias \noperacionais inapropriadas, ser\u00e3o visualizados atrav\u00e9s das funcionalida-\ndes implementadas na etapa 5.2. Portanto, se o resultado dos testes \u00e9 \nnegativo, deve-se iniciar uma nova itera\u00e7\u00e3o da metodologia a partir da \nfase dois ou tr\u00eas, se for por modelagem ou programa\u00e7\u00e3o de sequ\u00eancias \noperacionais, respectivamente.  N\u00e3o obstante, se o resultado dos testes \u00e9 \npositivo, deve-se continuar com a execu\u00e7\u00e3o da fase seguinte. \n\n4.1.7 Fase VII - Implementa\u00e7\u00e3o de funcionalidades gerais do sistema \nSCADA \n\nEsta fase destina-se \u00e0 implementa\u00e7\u00e3o de funcionalidades gerais \nno software SCADA. As funcionalidades chamadas de gerais s\u00e3o aque-\nlas que ampliam e complementam a informa\u00e7\u00e3o gerada pelos processos \nexecutados no ch\u00e3o de f\u00e1brica, alimentando todas as \u00e1reas gestoras pro-\nvendo base para conhecimento a \u00e1reas estrat\u00e9gicas como marketing, \nvendas e a financeira.  Por exemplo, a informa\u00e7\u00e3o gerada nesta fase \npode auxiliar na tomada de decis\u00f5es quando h\u00e1 falhas em algum equi-\npamento, mudan\u00e7as nas ordens de produ\u00e7\u00e3o, inser\u00e7\u00e3o ou remo\u00e7\u00e3o de \nequipamentos, etc. As funcionalidades implementadas nesta fase s\u00e3o: \ngera\u00e7\u00e3o de alarmes gerais, gr\u00e1ficos de tend\u00eancias, receitas, relat\u00f3rios e \ngera\u00e7\u00e3o de informa\u00e7\u00e3o para n\u00edveis gerenciais. \n\n\n\n \n50 Metodologia para desenvolvimento integrado de sistemas \n\nSCADA com controle supervis\u00f3rio  \n \n\n \n\n4.1.8 Fase VIII - Valida\u00e7\u00e3o \n\nEsta fase, a \u00faltima da metodologia proposta, tem a finalidade de \nrealizar os testes finais que permitam validar e certificar o funcionamen-\nto \u00f3timo do sistema real e da aplica\u00e7\u00e3o SCADA para o sistema de manu-\nfatura. Caso o resultado seja negativo, ser\u00e1 identificada a causa e da \nmesma forma como na fase VI, o projetista dever\u00e1 iniciar uma nova \nitera\u00e7\u00e3o de metodologia a partir da fase II ou IV. No entanto, se o teste \nfor positivo, a valida\u00e7\u00e3o do sistema est\u00e1 completa e, portanto o sistema \nSCADA est\u00e1 implementado.  Esta fase \u00e9 realizada tantas vezes quantas \nforem necess\u00e1rias, at\u00e9 conseguir que o sistema se comporte conforme o \ndesejado.  \n\n4.2 IMPLEMENTA\u00c7\u00c3O DE FUNCIONALIDADES DO SISTEMA \nSCADA \n\nNas pr\u00f3ximas se\u00e7\u00f5es, \u00e9 descrita a implementa\u00e7\u00e3o das fases cinco \ne sete da metodologia proposta utilizando a programa\u00e7\u00e3o do controle \nsupervis\u00f3rio da CFM apresentada no cap\u00edtulo 3 e o software ScadaBR \npara o desenvolvimento da aplica\u00e7\u00e3o SCADA. \n\n4.2.1 Sin\u00f3tico \n\nUm sin\u00f3tico ou representa\u00e7\u00e3o gr\u00e1fica cumpre sua fun\u00e7\u00e3o quando \no operador consegue acompanhar o comportamento e atuar de forma \ncerta sobre o processo. Para alcan\u00e7ar esse prop\u00f3sito, \u00e9 necess\u00e1rio um \nm\u00e9todo para realizar uma intera\u00e7\u00e3o humano-m\u00e1quina de forma concisa e \nconfi\u00e1vel.  \n\nEste m\u00e9todo projeta o sin\u00f3tico da planta a partir das vari\u00e1veis de-\nfinidas no c\u00f3digo do CLP (Etapa 4.1) que representam os estados dos \ngeradores dos supervisores e do sistema produto. Entretanto, \u00e9 importan-\nte definir quais desses estados fornecem informa\u00e7\u00e3o relevante de ser \nexibida: muita informa\u00e7\u00e3o pode sobrecarregar o operador, e muito \npouca, pode confundi-lo e induzi-lo a erros. \n\nPara isso, realiza-se uma an\u00e1lise da sem\u00e2ntica dos estados do sis-\ntema produto e dos supervisores, estabelecendo assim, quantos e quais \nestados s\u00e3o necess\u00e1rios e suficientes para visualizar corretamente o fun-\ncionamento da planta. Em seguida, estas vari\u00e1veis s\u00e3o configuradas \ncomo tags no software SCADA, para ser inseridas na tela do sin\u00f3tico \n\n\n\n \nMetodologia para desenvolvimento integrado de sistemas \n\nSCADA com controle supervis\u00f3rio  \n51 \n\n \n\n \n\npor meio de imagens ou objetos gr\u00e1ficos. Quando \u00e9 necess\u00e1rio imple-\nmentar combina\u00e7\u00f5es ou condi\u00e7\u00f5es entre vari\u00e1veis associadas \u00e0 ocorr\u00ean-\ncia de eventos ou de estados, s\u00e3o configurados tags internos que s\u00e3o \nexecutados mediante scripts de programa\u00e7\u00e3o. O sin\u00f3tico obtido por este \nm\u00e9todo permite dar clareza e confiabilidade ao operador sobre o com-\nportamento e funcionamento do processo, conhecendo o estado atual do \nsistema. \n\nA tela do sin\u00f3tico pode ser representada atrav\u00e9s de uma fotografia \nquando os processos s\u00e3o pequenos. Por\u00e9m, quando grandes \u00e9 mais apro-\npriado utilizar desenhos esquem\u00e1ticos que simbolizam de forma padro-\nnizada diversos processos industriais (motor, queimador, v\u00e1lvulas, bom-\nbas, etc). Os desenhos gr\u00e1ficos colocados sobre a tela do sin\u00f3tico bem \ncomo as cores utilizadas para ilustrar estados operacionais do processo, \ns\u00e3o de livre escolha pelo projetista/analista do sistema e tamb\u00e9m depen-\nde da pasta de gr\u00e1ficos disponibilizados pelo software SCADA. Por \nexemplo, uma forma gen\u00e9rica quanto ao uso de cores sobre a tela seria: \nverde piscando representando o sistema em opera\u00e7\u00e3o, vermelho cont\u00ed-\nnuo representando o sistema em repouso, azul piscando identificando a \nexist\u00eancia de pe\u00e7a em determinada posi\u00e7\u00e3o e transparente identificando \ninexist\u00eancia de pe\u00e7a na referida posi\u00e7\u00e3o. \n\n \n\u2022 Exemplo CFM \n\n \nA implementa\u00e7\u00e3o do sin\u00f3tico da CFM (Figura 4.2) inicia-se com \n\na an\u00e1lise do significado dos estados dos sete subsistemas que comp\u00f5em \na planta. Por exemplo, o gerador ?? da esta\u00e7\u00e3o de teste, Figura 3.5, tem \ntr\u00eas estados que podem ser assim descritos: o estado 0, significa em \nrepouso; o estado 1, testando pe\u00e7a vinda do buffer de entrada; e o por \n\u00faltimo, o estado 2, testando pe\u00e7a vinda da esta\u00e7\u00e3o de retrabalho. Da \nmesma forma, a descri\u00e7\u00e3o \u00e9 feita para os demais geradores.  \n\nAp\u00f3s a an\u00e1lise, conclui-se, que os estados dos geradores do sis-\ntema produto s\u00e3o necess\u00e1rios, mas n\u00e3o suficientes para representar gra-\nficamente, na tela do sin\u00f3tico, o comportamento geral da planta. Isso \nporque, a partir dessa informa\u00e7\u00e3o n\u00e3o se consegue visualizar o percurso \nde uma pe\u00e7a de uma esta\u00e7\u00e3o de trabalho a outra. Ent\u00e3o, s\u00e3o analisados \nos estados dos 11 supervisores, cujos significados revelam que os esta-\ndos 3 e 4 dos supervisores 3A, 3B e 3C e os estados 4, 5 e 6 do supervi-\nsor 3D, tabela 4.1, fornecem essa informa\u00e7\u00e3o. Observa-se que os super-\nvisores reduzidos s\u00e3o muito semelhantes \u00e0s especifica\u00e7\u00f5es na Figura \n3.6, o que facilita a compreens\u00e3o do significado de seus estados. \n\n\n\n \n52 Metodologia para desenvolvimento integrado de sistemas \n\nSCADA com controle supervis\u00f3rio  \n \n\n \n\nTabela 4.1. Descri\u00e7\u00e3o dos estados relevantes dos supervisores para o sin\u00f3tico da \nCFM  \n\nSupervisor Estado Significado \n3A 3 Pe\u00e7a oriunda do buffer de entrada indo da posi-\n\n\u00e7\u00e3o S1 para S2. \n3A 4 Pe\u00e7a oriunda da esta\u00e7\u00e3o de retrabalho indo da \n\nposi\u00e7\u00e3o S1 para S2. \n3B 3 Pe\u00e7a oriunda da esta\u00e7\u00e3o de retrabalho indo da \n\nposi\u00e7\u00e3o S2 para S3. \n3B 4 Pe\u00e7a oriunda do buffer de entrada indo da posi-\n\n\u00e7\u00e3o S2 para S3. \n3C 3 Pe\u00e7a oriunda da esta\u00e7\u00e3o de retrabalho indo da \n\nposi\u00e7\u00e3o S3 para S4. \n3C 4 Pe\u00e7a que chega do buffer de entrada indo da \n\nposi\u00e7\u00e3o S3 para S4. \n3D 4/5/6 Pe\u00e7a para retrabalho/aprovada/reprovada indo \n\nda posi\u00e7\u00e3o S4 para S1. \n \nObserva-se na Figura 4.2, o sin\u00f3tico para a CFM que ilustra atra-\n\nv\u00e9s de quadros brancos pontilhados onde \u00e9 distribu\u00edda a informa\u00e7\u00e3o \ncoletada anteriormente. Os nomes G1, G2, G3, G4, G5, G6 e G7 identi-\nficam os geradores que representam os subsistemas da planta. J\u00e1 os \nnomes S3A, S3B, S3C e S3D identificam os supervisores, apresentados \nna tabela 4.1.  \n\nOs c\u00edrculos com letras BE e ER associados aos quadros G1e G2 \nilustram a presen\u00e7a de uma pe\u00e7a oriunda do buffer de entrada ou da \nesta\u00e7\u00e3o de retrabalho respectivamente. Estes c\u00edrculos ou objetos gr\u00e1ficos \naparecem quando o sistema est\u00e1 em funcionamento no espa\u00e7o associado \naos quadros S3A, G5, S3B, G6, S3C e G7. Para exemplificar esta situa-\n\u00e7\u00e3o, suponha que o sistema est\u00e1 em funcionamento e uma pe\u00e7a vinda do \nbuffer de entrada chega \u00e0 esta\u00e7\u00e3o de fura\u00e7\u00e3o (gerador ??). Ent\u00e3o, um \nc\u00edrculo com letras BE aparece nesse lugar e o led que est\u00e1 em cima da \nfuradeira pisca em cor verde quando est\u00e1 realizando a fura\u00e7\u00e3o, associado \nao estado 1 do gerador ??. Caso contr\u00e1rio, fica est\u00e1tico em cor verme-\nlha. Uma vez terminada a fura\u00e7\u00e3o, esta pe\u00e7a \u00e9 conduzida \u00e0 esta\u00e7\u00e3o de \nsoldagem (gerador ??). \n\n\n\n \nMetodologia para desenvolvimento integrado de sistemas \n\nSCADA com controle supervis\u00f3rio  \n53 \n\n \n\n \n\nComandos \n\nModo \n\nManual\nComandos \n\nModos de \n\nOpera\u00e7\u00e3o\n\nSensor\nBE\n\nG5 ER\n\nG\n6\n\nBE S3B\n\nS3D\nG7\n\nBE G1\n\nE\nR\n\nG\n2\n\nB\nE\n\nE\nR\n\nA\n\nR\n\nR\nT\n\nG\n3\n\nG\n3\n\nG3\n\nG3\n\nG\n3\n\nEsta\u00e7\u00e3o de \n\nFura\u00e7\u00e3o \n\noperando\n\nG3\nComando \n\npara \n\ninicializar \n\no sistema\n\nG4\n\n \nFigura4.2  Sin\u00f3tico para a CFM \n\n \nO percurso da pe\u00e7a entre as duas esta\u00e7\u00f5es est\u00e1 representado pelo \n\nmesmo c\u00edrculo associado ao estado 3 do supervisor S3B. A representa-\n\u00e7\u00e3o gr\u00e1fica \u00e9 a mesma para uma pe\u00e7a vinda da esta\u00e7\u00e3o de retrabalho, s\u00f3 \nque com letras ER. Por outro lado, as a\u00e7\u00f5es do manipulador rob\u00f3tico \n(gerador ??) est\u00e3o representadas mais uma vez por c\u00edrculos com letras \nBE, ER, A, R, e RT, ilustrando transporte de pe\u00e7as do buffer de entrada e \nda esta\u00e7\u00e3o de retrabalho para o slot S1, e deste \u00faltimo para o dep\u00f3sito de \naprovadas, reprovadas ou de retrabalho respectivamente. Al\u00e9m disso, os \nc\u00edrculos verdes com flechas ficam girando quando o manipulador rob\u00f3-\ntico est\u00e1 realizando suas opera\u00e7\u00f5es. O c\u00edrculo verde maior, associado ao \nestado 1 do gerador ??, tamb\u00e9m gira quando a mesa est\u00e1 funcionando. O \n\n\n\n \n54 Metodologia para desenvolvimento integrado de sistemas \n\nSCADA com controle supervis\u00f3rio  \n \n\n \n\nsin\u00f3tico mostra ainda os sinais dos sensores e tamb\u00e9m exibe informa\u00e7\u00e3o \nadequada do estado de opera\u00e7\u00e3o do sistema de controle, os comandos \nque os ativam e os alarmes associados ao funcionamento geral do siste-\nma por meio de objetos gr\u00e1ficos, os quais est\u00e3o associados ao c\u00f3digo em \nCLP que ser\u00e1 discutido nas pr\u00f3ximas se\u00e7\u00f5es. \n\n4.2.2 Envio de Comandos  \n\nA Figura 4.3 caracteriza a estrutura do programa principal (SFC \nMain) proposta por Vieira et al.(2007), implementada em SFC (Sequen-\ntial Function Chart) e a qual estabelece o modo de opera\u00e7\u00e3o do sistema \nde controle. Este programa tem seis modos distintos de opera\u00e7\u00e3o: \n\n\u2022 Software Initialization (SI); \n\u2022 Physical System Initialization (PSI); \n\u2022 Manual (Man); \n\u2022 Supervised (Sup); \n\u2022 Emergency (Emg); \n\u2022 Idle ( Init e PSIted). \n \n\nConsidera-se que o passo init \u00e9 ativado na primeira execu\u00e7\u00e3o do \nprograma. Quando o usu\u00e1rio ou operador ativa Sinit, o passo SI \u00e9 ativa-\ndo, significando que o programa est\u00e1 no modo de inicializa\u00e7\u00e3o do siste-\nma de controle. PSinit \u00e9 uma entrada f\u00edsica que permite a inicializa\u00e7\u00e3o \ndo sistema, a ser controlado atrav\u00e9s do passo PSI. Quando a inicializa-\n\u00e7\u00e3o est\u00e1 pronta, a vari\u00e1vel PSReady fica ativa, fazendo que o SFC evo-\nlua para o passo PSIted, conduzindo o sistema de controle ao modo Idle. \nEnquanto o sistema de controle estiver no modo de opera\u00e7\u00e3o Idle, exis-\ntem duas formas poss\u00edveis de se controlar o sistema f\u00edsico: Uma \u00e9 atra-\nv\u00e9s da ativa\u00e7\u00e3o do modo Manual (Man) e a outra forma \u00e9 pelo modo \nSupervisionado (Sup). \n\nNo modo Manual, o operador conduz a realiza\u00e7\u00e3o das atividades \na serem executadas pelo sistema f\u00edsico, atrav\u00e9s de uma determinada \nsequ\u00eancia de eventos. Quando esta sequ\u00eancia est\u00e1 dentro do comporta-\nmento desejado, o sistema pode passar para o modo Sup. Caso contr\u00e1rio, \no sistema deve passar logo para o modo SI. J\u00e1 no modo Supervisionado \n(passo Sup ativado), a coordena\u00e7\u00e3o das a\u00e7\u00f5es a serem desenvolvidas \npelo sistema f\u00edsico \u00e9 de acordo com o estado ativo do conjunto de su-\npervisores. Isto \u00e9 realizado atrav\u00e9s da ativa\u00e7\u00e3o do sinal de desabilita\u00e7\u00e3o \nassociado aos eventos control\u00e1veis. Por fim, a ativa\u00e7\u00e3o do modo Emer-\n\n\n\n \nMetodologia para desenvolvimento integrado de sistemas \n\nSCADA com controle supervis\u00f3rio  \n55 \n\n \n\n \n\ng\u00eancia (passo Emg) conduz o sistema f\u00edsico a um estado apropriado de \nacordo com as caracter\u00edsticas de cada processo e a consequente suspen-\ns\u00e3o das atividades que at\u00e9 ent\u00e3o estavam sendo realizadas.  \n\n \nFigura 4.3 SFC Main (VIEIRA et al., 2007) \n \n\nEsta estrutura \u00e9 utilizada para exemplificar a funcionalidade en-\nvio de comandos. Ela \u00e9 traduzida para a linguagem de texto estruturado, \napenas no tocante \u00e0 ativa\u00e7\u00e3o dos modos a partir de bot\u00f5es no sin\u00f3tico e \nespecificamente no modo Manual, para for\u00e7ar eventos control\u00e1veis. \n\nCabe ressaltar, que a estrutura\u00e7\u00e3o do programa de controle, inclu-\nindo o programa Main de Vieira et al.(2007), tem por objetivo muito \nmais do que somente realizar o envio de comandos, ela visa implemen-\ntar a arquitetura de controle proposta por Queiroz e Cury (2002), estabe-\nlecendo modos de opera\u00e7\u00e3o ao sistema como um todo. \n\n \n \n \n\n\n\n \n56 Metodologia para desenvolvimento integrado de sistemas \n\nSCADA com controle supervis\u00f3rio  \n \n\n \n\n\u2022 Exemplo CFM \n \n\nPara implementar o envio de comandos na CFM, \u00e9 gerado um \nc\u00f3digo em linguagem de texto estruturado, com instru\u00e7\u00f5es tipo IF, para \nativar os modos anteriormente citados, conforme mostrado na tabela 4.2.  \n\nAs vari\u00e1veis booleanas Sinit, PSInit, PSready, Superv, Manual e \nEmerg s\u00e3o condi\u00e7\u00f5es de transi\u00e7\u00e3o (comandos) que ativam os diversos \nmodos. As vari\u00e1veis booleanas, pausa e unsafe, n\u00e3o s\u00e3o comandos e \nforam implementadas no c\u00f3digo do sistema produto, para ser ativadas \ndependendo de certas condi\u00e7\u00f5es. A ativa\u00e7\u00e3o da vari\u00e1vel pausa \u00e9 usada \nno modo Manual, para n\u00e3o permitir a execu\u00e7\u00e3o de eventos control\u00e1veis \nde forma espont\u00e2nea, em raz\u00e3o de esta atividade ser realizada pelo ope-\nrador. J\u00e1, a vari\u00e1vel unsafe \u00e9 ativada sempre para significar a viola\u00e7\u00e3o \nde uma especifica\u00e7\u00e3o de controle por parte do operador.  \n\nAl\u00e9m disso, no modo Manual foram criadas vari\u00e1veis booleanas \nno c\u00f3digo do sistema produto chamadas de forca_equipamento, sendo \nque a palavra equipamento est\u00e1 associada aos subsistemas que comp\u00f5em \na planta, para depois serem representadas graficamente em forma de \nbot\u00f5es no sin\u00f3tico. Essas vari\u00e1veis atuam como comandos, ativados pelo \noperador, para for\u00e7ar a ocorr\u00eancia de eventos control\u00e1veis no modo \nManual. Por exemplo, forca_es_sol aciona a soldadeira, forca_es_fur \naciona a furadeira e assim por diante para cada evento control\u00e1vel asso-\nciado a um equipamento da CFM. A explica\u00e7\u00e3o das vari\u00e1veis nessa \nse\u00e7\u00e3o \u00e9 apresentada na se\u00e7\u00e3o 4.2.4.  \n\nOs estados das vari\u00e1veis Sinit, Superv, Manual e Emerg, tamb\u00e9m \ns\u00e3o determinados pelo operador no sin\u00f3tico atrav\u00e9s de comandos como \npode ser visto na Figura 4.2. Ao ser reconhecido estado de emerg\u00eancia \npelo operador, o sistema deve ser reinicializado atrav\u00e9s do evento Sinit. \n\n \n Tabela 4.2 C\u00f3digo em ST para implementar comandos \n\nSI PSI PSIted \nIF Sinit THEN \n    SI:=1; \n \nS\u00e3o iniciadas com valor \nzero, todas as vari\u00e1veis \nutilizadas no c\u00f3digo do \nCLP, incluindo as vari\u00e1-\nveis de entrada e sa\u00edda do \nCLP \n\nIF PSinit THEN \n     SI:=0; \n     PSI:=1; \n\n \nAqui, \u00e9 executado o programa \nde in\u00edcio do sistema f\u00edsico da \nCFM. Ap\u00f3s execu\u00e7\u00e3o, \u00e9 \nativada a vari\u00e1vel PSready. \n \n\nIF PSready THEN \n   PSI:=0; \n   PSIted:=1; \n    PSready:=0; \nEND_IF; \n\n\n\n \nMetodologia para desenvolvimento integrado de sistemas \n\nSCADA com controle supervis\u00f3rio  \n57 \n\n \n\n \n\n     PSinit:=1; \n     Sinit:=0; \nEND_IF; \n\n \nIF (Sup OR Man OR Emg) \nAND Sinit THEN \n     SI:=1; \nEND_IF; \n\n     PSready:=1; \n     PSInit:=0; \nEND_IF; \n\nMan Sup Emg \nIF PSIted AND Manual \nTHEN \n\n    PSready:=0;       \n    Man:=1; \n    PSIted:=0; \n    Manual:=0; \n    pausa:=1; \n\nEND_IF; \n \n\nIF Man AND NOT unsafe \nAND Superv THEN \n\n   Sup:=1; \n   Man:=0; \n   Superv:=0; \n   pausa:=0; \nEND_IF; \nIF Man AND un-\n\nsafe AND Superv THEN \n   Man:=1; \n   Superv:=0; \nEND_IF; \n\nIF PSIted AND Superv \nTHEN \n\n    PSready:=0;  \n    Sup:=1; \n    PSIted:=0; \n    Superv:=0; \n\nEND_IF; \n \n\nIF Sup AND Manual THEN \n   Man:=1; \n   pausa:=1; \n   Sup:=0; \n   Manual:=0; \n\nELSE IF Sup AND Emerg \nTHEN \n\n   Emg:=1; \n   Sup:=0; \n   Emerg:=0; \n\nEND_IF; \nEND_IF; \n\nIF Sup AND \nEmerg THEN \n      Emg:=1; \n      Sup:=0;       \n      Emerg:=0; \nEND_IF; \n\n \nIF Man AND un-\nsafe AND Emerg \nTHEN \n      Emg:=1; \n      Man:=0; \n      Emerg:=0;          \n      unsafe:=0; \nEND_IF; \n \nNeste estado po-\ndem ser implemen-\ntadas, dependendo \ndo processo, rotinas \nque levem a um \nestado seguro dos \nequipamentos. \n\n4.2.3 Hist\u00f3rico de Eventos \n\nComo foi mencionado no cap\u00edtulo 2, um software SCADA permi-\nte de uma forma autom\u00e1tica e a partir de uma base de dados, armazenar \ne registrar informa\u00e7\u00e3o operacional, alarmes, gr\u00e1ficos de tend\u00eancias, \nentre outros, atrav\u00e9s de hist\u00f3ricos. Por\u00e9m, nesta se\u00e7\u00e3o, \u00e9 implementado \noutro hist\u00f3rico, de eventos control\u00e1veis e n\u00e3o control\u00e1veis que acontece-\nram num per\u00edodo de tempo espec\u00edfico, tornando poss\u00edvel conhecer a \nsequ\u00eancia de eventos ocorridos at\u00e9 o acontecimento de uma falha no \nsistema, e aqueles que continuavam na sequ\u00eancia, num processo normal \n\n\n\n \n58 Metodologia para desenvolvimento integrado de sistemas \n\nSCADA com controle supervis\u00f3rio  \n \n\n \n\nde opera\u00e7\u00e3o. Esta lista de eventos complementa a informa\u00e7\u00e3o fornecida \npelos registros hist\u00f3ricos anteriormente citados.  \n\n \n\u2022 Exemplo CFM \n \n\nO hist\u00f3rico de eventos \u00e9 implementado em cinco passos (Figura \n4.4), tanto no CLP (passos 1 e 3) quanto no software SCADA (passos  2, \n4 e 5), os quais s\u00e3o descritos a seguir. \n\n \n\n Figura 4.4 Implementa\u00e7\u00e3o de hist\u00f3rico de eventos \n \nObserva-se no passo 1, Figura 4.5, uma vari\u00e1vel denominada e-\n\nventos. Essa vari\u00e1vel \u00e9 inserida inicialmente no c\u00f3digo que implementa \no sistema produto. Ela \u00e9 usada para armazenar o \u00faltimo evento ocorrido \nseja este control\u00e1vel ou n\u00e3o control\u00e1vel, identificado atrav\u00e9s de um n\u00fa-\nmero.  Como exemplo, observa-se na Figura 4.6 que ao ocorrer o fim do \ngiro da mesa, o evento bmes \u00e9 ativado e o n\u00famero 1 \u00e9 escrito na vari\u00e1vel \neventos. Da mesma forma acontece quando ocorre o in\u00edcio do giro da \nmesa atrav\u00e9s do evento ames, s\u00f3 que agora o valor desta vari\u00e1vel muda \npara 2. \n\n\n\n \nMetodologia para desenvolvimento integrado de sistemas \n\nSCADA com controle supervis\u00f3rio  \n59 \n\n \n\n \n\n \nFigura 4.5 Passo 1: Cria\u00e7\u00e3o da fila \n\n \n\n \nFigura 4.6 Trecho de c\u00f3digo do sistema produto \n\n \nPosteriormente, a vari\u00e1vel eventos \u00e9 inserida no c\u00f3digo que im-\n\nplementa os supervisores. Neste c\u00f3digo, ap\u00f3s a declara\u00e7\u00e3o de vari\u00e1veis e \na ativa\u00e7\u00e3o da vari\u00e1vel evt_blk (ocorr\u00eancia de um evento no sistema pro-\nduto), realiza-se a contagem de eventos atrav\u00e9s da vari\u00e1vel \nnum_eventos. Em seguida \u00e9 implementada uma fila FIFO (First-In-\n\n\n\n \n60 Metodologia para desenvolvimento integrado de sistemas \n\nSCADA com controle supervis\u00f3rio  \n \n\n \n\nFirst-Out) onde os elementos (eventos) s\u00e3o inseridos e removidos de \nacordo com o princ\u00edpio \u201co primeiro que entra \u00e9 o primeiro que sai\u201d. Os \nelementos da fila sempre s\u00e3o inseridos no final e removidos do come\u00e7o.  \n\nObserva-se, na Figura 4.5, a exist\u00eancia da vari\u00e1vel i. Essa vari\u00e1-\nvel \u00e9 um \u00edndice que indica a pr\u00f3xima posi\u00e7\u00e3o livre da fila. Para deslocar \no \u00edndice em uma posi\u00e7\u00e3o, \u00e9 preciso fazer a opera\u00e7\u00e3o MOD (resto da \ndivis\u00e3o) de num_eventos por 10, que \u00e9 o n\u00famero das posi\u00e7\u00f5es que tem a \nfila, denominadas por fila_x (x =1,..,10). Feito isso, uma instru\u00e7\u00e3o tipo \nCASE insere o valor da vari\u00e1vel eventos em cada uma das posi\u00e7\u00f5es da \nfila. \n\nO passo 2, Figura 4.7, consiste em criar um ponteiro para poder \nremover elementos da fila. Este ponteiro denominado indice aponta para \no primeiro elemento da fila que ainda n\u00e3o foi lido e faz parte de outra \ninstru\u00e7\u00e3o tipo CASE (inserida em baixo da implementa\u00e7\u00e3o da fila) que \ndependendo do seu valor, retira e copia o elemento pertencente a essa \nposi\u00e7\u00e3o na vari\u00e1vel evento_a_ler. Esta \u00faltima vari\u00e1vel armazena os \neventos ocorridos no sistema gerando dessa forma o hist\u00f3rico de even-\ntos. A atualiza\u00e7\u00e3o da vari\u00e1vel indice \u00e9 realizada por um Point Link (Link \nde Ponto) no software SCADA, que ser\u00e1 explicado no passo 4.  \n\nNo entanto, \u00e9 necess\u00e1rio se certificar de que a posi\u00e7\u00e3o apontada \npelo indice j\u00e1 foi lida, isto \u00e9, que o valor contido naquela posi\u00e7\u00e3o j\u00e1 foi \nremovido. Logo \u00e9 criada a vari\u00e1vel indice_a_ler que toma o valor da \nvari\u00e1vel \u00edndice. Cabe mencionar que ap\u00f3s o c\u00f3digo anterior encontra-se \no c\u00f3digo referente aos supervisores. \n\n \nFigura 4.7 Passo 2: Cria\u00e7\u00e3o de ponteiro para retirar elementos da fila \n \n\nNo passo 3, Figura 4.8, a vari\u00e1vel indice_a_ler junto com a vari-\n\u00e1vel num_eventos ficam dispon\u00edveis no contexto de um script gerado no \n\n\n\n \nMetodologia para desenvolvimento integrado de sistemas \n\nSCADA com controle supervis\u00f3rio  \n61 \n\n \n\n \n\nsoftware SCADA, para atualizar a vari\u00e1vel  indice do passo 2. O script \ntesta a condi\u00e7\u00e3o, se o \u00edndice atual da fila (aquele que foi lido) \u00e9 diferente \ndo \u00edndice objetivo (aquele que se deseja ler). O \u00edndice objetivo aponta ao \nprimeiro elemento da fila, ou seja, um evento que aconteceu e que ainda \nn\u00e3o foi removido. Se a express\u00e3o for verdadeira, o pr\u00f3ximo \u00edndice \u00e9 a \nposi\u00e7\u00e3o seguinte \u00e0quela anteriormente lida. \n\n \nFigura 4.8 Passo 3: C\u00e1lculo da posi\u00e7\u00e3o da fila que deve ser lida \n \n\nNo passo 4, Figura 4.9, \u00e9 configurado o Point Link que faz a es-\ncrita ou \u201cliga\u00e7\u00e3o\u201d entre a sa\u00edda do script gerado no passo 3 e a vari\u00e1vel \nque se quer atuar, neste caso, a vari\u00e1vel  indice. Assim, esta vari\u00e1vel \u00e9 \natualizada e, por conseguinte outro elemento \u00e9 retirado da fila atualizan-\ndo a vari\u00e1vel evento_a_ler. Os Point links s\u00e3o utilizados para atualizar o \nvalor de tags baseados no valor de outros tags. Mantendo os dois tags \nem sincronia de acordo com alguma rela\u00e7\u00e3o definida pelo usu\u00e1rio. De \nmaneira mais direta, os point links podem ser utilizados para ler valores \nem um sistema (de um ou mais data sources) e logo definir valores em \noutro sistema (para um ou mais data sources). Os point links n\u00e3o iniciam \neventos, diminuindo o overhead do sistema e resultando em melhor \nperformance, permitem a defini\u00e7\u00e3o de scripts, dando mais liberdade ao \nusu\u00e1rio e a sua interface de usu\u00e1rio est\u00e1 em uma \u00fanica e simples p\u00e1gina, \ntornando mais f\u00e1cil sua configura\u00e7\u00e3o. \n\n\n\n \n62 Metodologia para desenvolvimento integrado de sistemas \n\nSCADA com controle supervis\u00f3rio  \n \n\n \n\n \nFigura 4.9 Passo 4: Atualiza\u00e7\u00e3o de ponteiro com a nova posi\u00e7\u00e3o a ser lida \n\n \nO hist\u00f3rico gerado at\u00e9 aqui, atrav\u00e9s da vari\u00e1vel evento_a_ler, \n\nmostra n\u00fameros associados a eventos. Por\u00e9m, \u00e9 indispens\u00e1vel gerar um \nhist\u00f3rico onde se correlacione os n\u00fameros com o significado dos even-\ntos. Ent\u00e3o, no passo 5 \u00e9 gerado um script no software SCADA com uma \ninstru\u00e7\u00e3o tipo CASE de retorno alfanum\u00e9rico para a vari\u00e1vel even-\nto_a_ler, como ilustrado na Figura 4.10. \n\n \n\n \n\nFigura 4.10 Passo 5: Gera\u00e7\u00e3o de hist\u00f3rico de eventos alfanum\u00e9rico para a CFM \n\n\n\n \nMetodologia para desenvolvimento integrado de sistemas \n\nSCADA com controle supervis\u00f3rio  \n63 \n\n \n\n \n\n4.2.4 Gera\u00e7\u00e3o de alarmes cr\u00edticos \n\nS\u00e3o chamados de alarmes cr\u00edticos, aqueles gerados quando uma \nvari\u00e1vel ou condi\u00e7\u00e3o do processo de produ\u00e7\u00e3o est\u00e1 fora dos valores \nprevistos transgredindo uma especifica\u00e7\u00e3o de controle, onde se faz ne-\ncess\u00e1ria interven\u00e7\u00e3o imediata do operador. \n\n \n\u2022 Exemplo CFM \n\n \nPara exemplificar esta funcionalidade, \u00e9 implementado na CFM \n\num alarme cr\u00edtico a partir da vari\u00e1vel unsafe a qual foi introduzida na \nse\u00e7\u00e3o 4.2.2. Essa vari\u00e1vel \u00e9 ativada quando \u00e9 executado no modo Manu-\nal, um evento cujo sinal de desabilita\u00e7\u00e3o tem valor l\u00f3gico VERDADEI-\nRO. Assim, \u00e9 notificado o fato ao operador por meio de um alarme \nchamado de sistema n\u00e3o seguro no sin\u00f3tico da CFM e na tela de alar-\nmes. \n\nPara implementar esse alarme, \u00e9 modificado o c\u00f3digo de eventos \ncontrol\u00e1veis do sistema produto, ao inserir as vari\u00e1veis for-\nca_equipamento, unsafe e pausa, sendo equipamento qualquer um dos \nsubsistemas que conformam a planta. Na Figura 4.11, \u00e9 mostrado como \nexemplo, um trecho do c\u00f3digo onde \u00e9 implementado o evento control\u00e1-\nvel e_afur do gerador ??que representa a esta\u00e7\u00e3o de fura\u00e7\u00e3o da CFM. \n\n \nFigura 4.11 Trecho de c\u00f3digo do evento control\u00e1vel e_afur \n \n\nPara passar do estado 0 ao estado 1, \u00e9 necess\u00e1rio que ocorra o e-\nvento e_afur, que seu sinal de desabilita\u00e7\u00e3o esteja desativado e que a \nvari\u00e1vel evt_blk tenha valor l\u00f3gico zero. No entanto, no modo Manual, \npodem ser ativadas mais duas vari\u00e1veis: forca_es_fur que atua como um \ncomando para acionar a furadeira e pausa que n\u00e3o permite a execu\u00e7\u00e3o \nde eventos control\u00e1veis quando nesse estado. Agora, se forca_es_fur \u00e9 \nativada, unsafe toma o valor do sinal de desabilita\u00e7\u00e3o de e_afur. Caso \nesse sinal tenha valor l\u00f3gico 1, unsafe ser\u00e1 ativada e continuar\u00e1 com \nesse valor at\u00e9 ser reinicializado o sistema.  \n\n\n\n \n64 Metodologia para desenvolvimento integrado de sistemas \n\nSCADA com controle supervis\u00f3rio  \n \n\n \n\n4.2.5 Gera\u00e7\u00e3o de alarmes gerais \n\nS\u00e3o chamados de alarmes gerais, aqueles que fornecem indica\u00e7\u00e3o \nglobal do estado do sistema, chamam a aten\u00e7\u00e3o do operador para uma \nmodifica\u00e7\u00e3o do estado do processo ou sinalizam um objeto atingido. \nEstes alarmes devem ser reconhecidos por parte do operador e combi-\nnam a informa\u00e7\u00e3o de sensores com o estado l\u00f3gico dos modelos dos \ngeradores. \n\n \n\u2022 Exemplo CFM \n \n\nPara exemplificar esta funcionalidade, s\u00e3o apresentados dois a-\nlarmes importantes para a CFM, a partir da combina\u00e7\u00e3o entre os sinais \ndos sensores capacitivos da furadeira e soldadeira e os estados dos gera-\ndores da esta\u00e7\u00e3o de fura\u00e7\u00e3o (gerador ??) e de soldagem (gerador ??). \nNa Figura 4.12, \u00e9 mostrado o c\u00f3digo que implementa esses alarmes. As \nvari\u00e1veis s_fur, s_sol, p_G5 e p_G6 s\u00e3o os sinais dos sensores capaciti-\nvos da furadeira e soldadeira, os geradores da esta\u00e7\u00e3o de fura\u00e7\u00e3o e de \nsoldagem, respectivamente. As duas instru\u00e7\u00f5es IF testam a condi\u00e7\u00e3o se \nos sinais dos sensores da esta\u00e7\u00e3o de fura\u00e7\u00e3o e soldagem est\u00e3o desativa-\ndos enquanto os estados 1 ou 2 do gerador ?? ou do gerador ??, os quais \nrepresentam na sequ\u00eancia, fura\u00e7\u00e3o, n\u00e3o fura\u00e7\u00e3o, soldagem e n\u00e3o solda-\ngem, est\u00e3o ativos. Caso o teste seja positivo, os alarmes s\u00e3o gerados e \nexibidos na tela do sin\u00f3tico e de alarmes. \n\n \n\n \nFigura 4.12 C\u00f3digo que implementa alarmes gerais \n\n4.2.6 Gr\u00e1ficos de tend\u00eancias \n\nEsta funcionalidade, inclu\u00edda em todo software SCADA, desenha \num gr\u00e1fico de uma vari\u00e1vel, cont\u00ednua ou discreta, em fun\u00e7\u00e3o do tempo. \nEm sistemas de manufatura, \u00e9 comum gerar gr\u00e1ficos de tend\u00eancias de \n\n\n\n \nMetodologia para desenvolvimento integrado de sistemas \n\nSCADA com controle supervis\u00f3rio  \n65 \n\n \n\n \n\nvari\u00e1veis relacionadas com o volume de produ\u00e7\u00e3o di\u00e1rio, semanal, men-\nsal; percentagem de produtos defeituosos; estoque intermedi\u00e1rio, etc. \n\n  \n\u2022 Exemplo CFM \n\n \nPara a CFM, \u00e9 implementado um gr\u00e1fico de tend\u00eancias que rela-\n\nciona a contagem de pe\u00e7as que entram no sistema contra aquelas que \ns\u00e3o aprovadas, reprovadas e retrabalhadas. A partir deste gr\u00e1fico, Figura \n4.13, pode ser determinada a percentagem de pe\u00e7as aprovadas ou fabri-\ncadas corretamente, bem como a percentagem de pe\u00e7as reprovadas ou \ndanificadas, ao longo do tempo. A forma como \u00e9 obtida a contagem de \npe\u00e7as \u00e9 explicada na se\u00e7\u00e3o 4.2.9. \n\n \n\n \n\nFigura 4.13 Gr\u00e1fico de tend\u00eancia para a CFM \n\n4.2.7 Receitas \n\nConforme foi mencionado no cap\u00edtulo 2, uma receita \u00e9 um con-\njunto de valores pr\u00e9-definidos que podem ser carregados para um grupo \nde tags a fim de configurar um processo espec\u00edfico. \n\n \n\u2022 Exemplo CFM \n\nDevido ao fato de que a CFM s\u00f3 tem um tipo de pe\u00e7a a ser pro-\nduzida, que deve ser furada e soldada, \u00e9 implementada uma receita que \n\n\n\n \n66 Metodologia para desenvolvimento integrado de sistemas \n\nSCADA com controle supervis\u00f3rio  \n \n\n \n\nfaz refer\u00eancia \u00e0 quantidade de pe\u00e7as a serem fabricadas. Na Figura 4.14 \npode ser visto o c\u00f3digo gerado no CLP para implementar a receita. \n\n \n\n \n\nFigura 4.14 C\u00f3digo que implementa a receita para a CFM \n \nA sinaliza\u00e7\u00e3o do fim da opera\u00e7\u00e3o de retirar pe\u00e7a da posi\u00e7\u00e3o S1e \n\ncolocar no compartilhamento de pe\u00e7as aprovadas \u00e9 identificada pela \nvari\u00e1vel e_bretok. Por sua vez, a vari\u00e1vel receita_scada, determina a \nquantidade de pe\u00e7as a serem fabricadas. Este n\u00famero \u00e9 especificado \npelo operador na representa\u00e7\u00e3o gr\u00e1fica da receita, Figura 4.15. Portanto, \nquando ocorre e_bretok \u00e9 realizada uma contagem de pe\u00e7as aprovadas \natrav\u00e9s da vari\u00e1vel num_aprovada. Feito isso, \u00e9 testada a condi\u00e7\u00e3o se o \nvalor atribu\u00eddo \u00e0 receita_scada \u00e9 igual ao valor armazenado em \nnum_aprovada, sendo que esta deve ser diferente de 0. Ent\u00e3o, se o teste \nda afirma\u00e7\u00e3o \u00e9 positivo, suspende-se a gera\u00e7\u00e3o de eventos control\u00e1veis, \npara garantir que n\u00e3o ser\u00e3o fabricadas mais pe\u00e7as at\u00e9 n\u00e3o ser inserida \nem receita_scada uma nova requisi\u00e7\u00e3o de pe\u00e7as.  \n\n \n\n \n\nFigura 4.15 Representa\u00e7\u00e3o gr\u00e1fica da receita para a CFM \n\n\n\n \nMetodologia para desenvolvimento integrado de sistemas \n\nSCADA com controle supervis\u00f3rio  \n67 \n\n \n\n \n\n4.2.8 Relat\u00f3rios \n\nOs relat\u00f3rios no software SCADA permitem realizar a impress\u00e3o \ndos dados hist\u00f3ricos, cabe\u00e7alhos e alarmes, e ainda dados instant\u00e2neos \nque podem ser agendados automaticamente ou enviados via e-mail. De \nacordo com a programa\u00e7\u00e3o do controle supervis\u00f3rio, podem ser configu-\nrados relat\u00f3rios que mostrem a evolu\u00e7\u00e3o do sistema din\u00e2mico acompa-\nnhados dos alarmes gerados por falhas no sistema de controle. \n\n \n\u2022 Exemplo CFM \n\n \nA Figura 4.16 mostra um relat\u00f3rio parcial para a vari\u00e1vel even-\n\nto_alfanum\u00e9rico associada \u00e0 vari\u00e1vel evento_a_ler, discutida na se\u00e7\u00e3o \n4.2.3. Para a CFM foram gerados relat\u00f3rios importantes dos alarmes da \nse\u00e7\u00e3o 4.2.4 e 4.2.5 e de pe\u00e7as aprovadas, reprovadas e de retrabalho. \n\n \n\n \n\nFigura 4.16 Relat\u00f3rio do hist\u00f3rico de eventos para a CFM. \n\n4.2.9 Gera\u00e7\u00e3o de informa\u00e7\u00e3o para n\u00edveis gerenciais \n\nO sistema SCADA, al\u00e9m de mostrar os dados controlados, pode \npr\u00e9 format\u00e1-los para armazenamento em um BD para fins de arquivo \n\n\n\n \n68 Metodologia para desenvolvimento integrado de sistemas \n\nSCADA com controle supervis\u00f3rio  \n \n\n \n\nhist\u00f3rico, o que acaba levando a sua integra\u00e7\u00e3o com outros n\u00edveis de \ngerenciamento fabril como os Sistemas de Gest\u00e3o Integrado (Enterprise \nResource Planning - ERP), sistemas MES (Manufacturing Execution \nSystems), entre outros. Assim, a gera\u00e7\u00e3o de informa\u00e7\u00e3o para n\u00edveis \ngerenciais forma parte essencial de um sistema de produ\u00e7\u00e3o, permitindo \num feedback entre as diversas \u00e1reas de uma empresa fabril. Esta funcio-\nnalidade pode ser implementada atrav\u00e9s de scripts no software SCADA \nou de c\u00f3digo no CLP auxiliados pela cria\u00e7\u00e3o ou identifica\u00e7\u00e3o de vari\u00e1-\nveis no controle supervis\u00f3rio. \n\n \n\u2022 Exemplo CFM \n\n \nPara exemplificar de uma forma simples, foi gerada a contagem \n\nde pe\u00e7as que entram no sistema, pe\u00e7as que s\u00e3o aprovadas, reprovadas e \nque precisam de retrabalho, concluindo que \u00e9 uma informa\u00e7\u00e3o relevante \npara o sistema gerencial. Para isto, no software SCADA foram criados \ndois scripts (Figura 4.17). O primeiro toma como vari\u00e1vel de entrada o \nestado do gerador G3 (Manipulador Rob\u00f3tico) para determinar que tipo \nde pe\u00e7a \u00e9 retirada da mesa girat\u00f3ria para ser depositada num dos tr\u00eas \ncompartimentos: pe\u00e7as aprovadas (estado 1), reprovadas (estado 2) e de \nretrabalho (estado 3), bem como o n\u00famero de pe\u00e7as que entram no sis-\ntema (estado 4 e 5). O segundo script retorna o n\u00famero de pe\u00e7as em \numa hora (podendo ser qualquer faixa de tempo) mediante a fun\u00e7\u00e3o \nget() da linguagem Ecma-Script.  \n\n \n\n \nFigura 4.17 Scripts para implementar n\u00famero de pe\u00e7as de entrada \n\n\n\n \nMetodologia para desenvolvimento integrado de sistemas \n\nSCADA com controle supervis\u00f3rio  \n69 \n\n \n\n \n\n4.3 CONCLUS\u00c3O DO CAP\u00cdTULO \n\nNeste cap\u00edtulo, foi apresentada uma metodologia que integra o \ncontrole supervis\u00f3rio programado em CLP no desenvolvimento de sis-\ntemas SCADA para SED. Esta metodologia pode ser implementada em \nprojetos ou re-projetos de automa\u00e7\u00e3o permitindo uma revis\u00e3o cont\u00ednua \ndos resultados obtidos em cada etapa para alcan\u00e7ar um funcionamento \n\u00f3timo do sistema de controle. Conv\u00e9m ressaltar, que esta metodologia \npode ser desenvolvida em sistemas de manufatura j\u00e1 implantados, cuja \nestrutura de controle seja baseada na ACS, e programada se poss\u00edvel em \nlinguagem de texto estruturado. Sendo assim, o projetista pode seguir \nesta metodologia a partir da Fase V e voltar \u00e0s fases anteriores se neces-\ns\u00e1rio, sempre que seja compreendido como \u00e9 feita a s\u00edntese e programa-\n\u00e7\u00e3o de controle do processo. \n\nNo cap\u00edtulo 5, a metodologia de desenvolvimento de sistemas \nSCADA com controle supervis\u00f3rio \u00e9 aplicada a outra c\u00e9lula de manufa-\ntura localizada no LAI. \n  \n\n\n\n \n70 Metodologia para desenvolvimento integrado de sistemas \n\nSCADA com controle supervis\u00f3rio  \n \n\n \n\n \n  \n\n\n\n \n\n5. APLICA\u00c7\u00c3O DA METODOLOGIA A UMA C\u00c9LULA FLEX\u00cd-\nVEL DE MANUFATURA  \n\n \nComo visto no cap\u00edtulo 4, os sistemas SCADA exploram as ca-\n\nracter\u00edsticas do controle supervis\u00f3rio programado em CLP atrav\u00e9s de \num desenvolvimento integrado que segue v\u00e1rias fases. Neste cap\u00edtulo \u00e9 \napresentado um estudo de caso que aplica a metodologia proposta no \ncap\u00edtulo 4 para controlar e supervisionar uma c\u00e9lula flex\u00edvel de manufa-\ntura did\u00e1tica (CFM) da marca RHINO, a qual simula um processo real \nde fabrica\u00e7\u00e3o e montagem. O produto final \u00e9 composto por 4 tipos de \npe\u00e7as: uma base, um disco, um anel e um cilindro. A partir desta meto-\ndologia, s\u00e3o realizadas as fases de s\u00edntese de controle supervis\u00f3rio, im-\nplementa\u00e7\u00e3o de funcionalidades do sistema SCADA, entre outras para a \nCFM. \n\n5.1 FASE I: PROJETO INFORMACIONAL \n\nA c\u00e9lula flex\u00edvel de manufatura did\u00e1tica fabricada pela empresa \nnorte-americana RHINO Robotics LTd. e localizada no Laborat\u00f3rio de \nAutoma\u00e7\u00e3o Industrial (LAI) do Departamento de Automa\u00e7\u00e3o e Sistemas \n(DAS) da Universidade Federal de Santa Catarina, est\u00e1 composta pelos \nseguintes equipamentos (ver Figura 5.1): \n\n \n\u2022 4 Alimentadores, cada um com um tipo espec\u00edfico de pe\u00e7a: (1) \n\nbase, (2) anel, (3) disco e (4) cilindro. \n\u2022 3 Esta\u00e7\u00f5es de trabalho: (5) centro de usinagem, (6) sistema de \n\nvis\u00e3o  e (7) torno.  \n\u2022 1 Rob\u00f4 articulado XR4 de 6 graus de liberdade (6) mais uma \n\nmesa X-Y. \n\u2022 1 Rob\u00f4 articulado SCARA com 5 graus de liberdade (9). \n\u2022 1 Esteira de alimenta\u00e7\u00e3o (10). \n\u2022 1 Esteira de sa\u00edda (11). \n\u2022 1 Mesa de montagem com 2 posi\u00e7\u00f5es (12.a e 12.b). \n\u2022 1 Buffer de descarte de pe\u00e7a (16). \n\n\n\n \n72 Aplica\u00e7\u00e3o da metodologia a uma c\u00e9lula flex\u00edvel de manufatura \n\n \n\n \n\nScara\n\n1\n2\n\n3\n\n4\n\n \n\nF\nig\n\nu\nra\n\n 5\n.1\n\n C\nF\n\nM\n S\n\nis\nte\n\nm\na \n\nR\nH\n\nIN\nO\n\n \n\n\n\nAplica\u00e7\u00e3o da metodologia a uma c\u00e9lula flex\u00edvel de manufatura \n\n \n\nA CFM simula um processo real de fabrica\u00e7\u00e3o e montagem de \num produto que est\u00e1 composto pelo conjunto de 4 tipos de pe\u00e7as, que \ns\u00e3o alimentadas no sistema atrav\u00e9s dos alimentadores: base, anel, disco\ne cilindro. O processo de fabrica\u00e7\u00e3o est\u00e1 representado por 3 opera\u00e7\u00f5es: \ncentro usinagem, torno CNC e sistema de vis\u00e3o (detec\u00e7\u00e3o de falhas). As \npe\u00e7as aprovadas s\u00e3o encaminhadas para a esteira de alimenta\u00e7\u00e3o e pe\u00e7as \nrejeitadas s\u00e3o depositadas no buffer de descarte. Por sua vez, o processo \nde montagem \u00e9 realizado pelo rob\u00f4 SCARA, que deve montar as pe\u00e7as\nfinais na ordem correta, segundo a sequ\u00eancia das pe\u00e7as existentes na \nesteira. A sequ\u00eancia de montagem de um conjunto de pe\u00e7as \u00e9 descrita a \nseguir.  \n\nInicialmente o rob\u00f4 XR4 retira a pe\u00e7a do tipo base do seu respe\ntivo alimentador de pe\u00e7as, e a deposita no centro de usinagem. Ao final \nda usinagem da base, o rob\u00f4 a retira do centro e a deposita no sistema de \nvis\u00e3o, para a inspe\u00e7\u00e3o da pe\u00e7a. Caso a base seja aprovada, ent\u00e3o o rob\u00f4 \nretira a pe\u00e7a disco do seu respectivo alimentador, e a coloca no\nexistente na base, para ent\u00e3o retir\u00e1-la e deposit\u00e1-la na esteira de alime\nta\u00e7\u00e3o. Caso a base seja rejeitada, ent\u00e3o o rob\u00f4 a deposita no \ndescarte. \n\nPosteriormente, a pe\u00e7a do tipo anel \u00e9 retirada pelo rob\u00f4 XR4 do \nseu respectivo alimentador, e a deposita no torno CNC. Ao final do \ntorneamento, o rob\u00f4 a retira e a deposita no sistema de vis\u00e3o. Caso a \npe\u00e7a seja aprovada, ent\u00e3o o rob\u00f4 retira a pe\u00e7a do sistema de vis\u00e3o e a \ndeposita na esteira de alimenta\u00e7\u00e3o, e caso a pe\u00e7a seja reprovada, ent\u00e3o \nela \u00e9 depositada no buffer de descarte. Este mesmo procedimento \u00e9 re\nlizado para a pe\u00e7a do tipo cilindro. \n\nA esteira deve avan\u00e7ar as pe\u00e7as na dire\u00e7\u00e3o da posi\u00e7\u00e3o de retirada \nde pe\u00e7as pelo rob\u00f4 SCARA. Nessa posi\u00e7\u00e3o, o rob\u00f4 SCARA\nesteira de alimenta\u00e7\u00e3o a pe\u00e7a base, com o disco j\u00e1 previamente fixado\na deposita, numa das duas posi\u00e7\u00f5es livres da mesa de montagem. Na \nsequ\u00eancia, para cada base, o rob\u00f4 SCARA dever\u00e1 colocar 1 unidade da \npe\u00e7a do tipo anel e outra do tipo cilindro. Ao final de um conjunto mo\ntado, o rob\u00f4 SCARA retira tal conjunto da mesa de montagem e o dep\nsita na esteira de sa\u00edda. O conjunto pronto pode ser visualizado na \nra 5.2. \n\n \n\n \nFigura 5.2 Conjunto final \n\n \ngia a uma c\u00e9lula flex\u00edvel de manufatura  73 \n\n \nso real de fabrica\u00e7\u00e3o e montagem de \n\nest\u00e1 composto pelo conjunto de 4 tipos de pe\u00e7as, que \natrav\u00e9s dos alimentadores: base, anel, disco \n\nO processo de fabrica\u00e7\u00e3o est\u00e1 representado por 3 opera\u00e7\u00f5es: \nsinagem, torno CNC e sistema de vis\u00e3o (detec\u00e7\u00e3o de falhas). As \n\ns\u00e3o encaminhadas para a esteira de alimenta\u00e7\u00e3o e pe\u00e7as \nde descarte. Por sua vez, o processo \n\ne montar as pe\u00e7as \nqu\u00eancia das pe\u00e7as existentes na \n\nA sequ\u00eancia de montagem de um conjunto de pe\u00e7as \u00e9 descrita a \n\nInicialmente o rob\u00f4 XR4 retira a pe\u00e7a do tipo base do seu respec-\ne a deposita no centro de usinagem. Ao final \n\nda usinagem da base, o rob\u00f4 a retira do centro e a deposita no sistema de \nvis\u00e3o, para a inspe\u00e7\u00e3o da pe\u00e7a. Caso a base seja aprovada, ent\u00e3o o rob\u00f4 \nretira a pe\u00e7a disco do seu respectivo alimentador, e a coloca no chanfro \n\nna esteira de alimen-\nta\u00e7\u00e3o. Caso a base seja rejeitada, ent\u00e3o o rob\u00f4 a deposita no buffer de \n\npe\u00e7a do tipo anel \u00e9 retirada pelo rob\u00f4 XR4 do \ne a deposita no torno CNC. Ao final do \n\nretira e a deposita no sistema de vis\u00e3o. Caso a \npe\u00e7a seja aprovada, ent\u00e3o o rob\u00f4 retira a pe\u00e7a do sistema de vis\u00e3o e a \ndeposita na esteira de alimenta\u00e7\u00e3o, e caso a pe\u00e7a seja reprovada, ent\u00e3o \n\nmesmo procedimento \u00e9 rea-\n\nna dire\u00e7\u00e3o da posi\u00e7\u00e3o de retirada \nSCARA retira da \n\ncom o disco j\u00e1 previamente fixado, e \na mesa de montagem. Na \n\ndever\u00e1 colocar 1 unidade da \nAo final de um conjunto mon-\n\nretira tal conjunto da mesa de montagem e o depo-\nO conjunto pronto pode ser visualizado na Figu-\n\n\n\n \n74 Aplica\u00e7\u00e3o da metodologia a uma c\u00e9lula flex\u00edvel de manufatura \n\n \n\n \n\nO funcionamento das esta\u00e7\u00f5es de trabalho \u00e9 simulado atrav\u00e9s de \numa rotina de temporiza\u00e7\u00e3o. Um led \u00e9 ativado indicando fim de opera-\n\u00e7\u00e3o. O centro de usinagem \u00e9 usado para processar a pe\u00e7a do tipo base, \niniciando seu funcionamento ao chegar uma pe\u00e7a; o sistema de vis\u00e3o \u00e9 \nutilizado para inspecionar as pe\u00e7as tipo base, cilindro e anel, sendo que \nas pe\u00e7as rejeitadas s\u00e3o encaminhadas para o buffer de descarte e as pe-\n\u00e7as aprovadas, para a esteira de alimenta\u00e7\u00e3o; j\u00e1 o torno CNC \u00e9 usado \npara processar as pe\u00e7as tipo anel e cilindro e inicia seu funcionamento \nao chegar uma pe\u00e7a. A opera\u00e7\u00e3o de teste do sistema de vis\u00e3o \u00e9 simulada \natrav\u00e9s de uma fun\u00e7\u00e3o RANDOM. \n\nSempre que uma pe\u00e7a chega aos alimentadores, \u00e9 ativado um \nsensor de toque. Para as pe\u00e7as do tipo disco se considera que sempre \nest\u00e3o dispon\u00edveis no sistema. \n\nCada esteira tem um sensor de presen\u00e7a, por\u00e9m apenas o da estei-\nra de alimenta\u00e7\u00e3o \u00e9 utilizado. Um motor DC com encoder \u00e9 respons\u00e1vel \npela velocidade de cada esteira. A esteira de alimenta\u00e7\u00e3o possui 3 posi-\n\u00e7\u00f5es: posi\u00e7\u00e3o de dep\u00f3sito de pe\u00e7a pelo rob\u00f4 XR4, posi\u00e7\u00e3o intermedi\u00e1ria \ne posi\u00e7\u00e3o de retirada de pe\u00e7a pelo rob\u00f4 SCARA. A esteira de sa\u00edda A-\nvan\u00e7a toda vez que \u00e9 depositado um conjunto pronto. \n\nO sistema RHINO \u00e9 controlado atrav\u00e9s de um CLP da marca Al-\ntus da s\u00e9rie Ponto, Figura 5.1 (13). O barramento do CLP Altus PO3147 \npossui 3 m\u00f3dulos: PO1010, PO2020 e PO2022. O m\u00f3dulo PO1010 pos-\nsui 32 pontos de entrada digital para tens\u00e3o de 24Vdc. O m\u00f3dulo \nPO2020 possui 16 pontos de sa\u00edda digital transistorizados isolados e \ncom alimenta\u00e7\u00e3o comum. J\u00e1 o m\u00f3dulo PO2022 possui 16 pontos de \nsa\u00edda digital com contatos secos, ideal para o acionamento de cargas em \ncorrente cont\u00ednua ou alternada e para inser\u00e7\u00e3o no intertravamento de \ncircuitos l\u00f3gicos. Al\u00e9m disso, o CLP Altus possui tr\u00eas canais ou portas \nseriais, sendo COM1 o principal e o COM2 e COM3 os auxiliares e \nsuporta o protocolo propriet\u00e1rio ALNET I dispon\u00edvel em todos os canais \nseriais e o protocolo MODBUS RTU, dispon\u00edvel apenas nos canais \nauxiliares.  Maiores informa\u00e7\u00f5es sobre o hardware e a programa\u00e7\u00e3o do \nCLP podem ser obtidas diretamente no site da empresa Altus, nas se\u00e7\u00f5es \nde documenta\u00e7\u00e3o t\u00e9cnica e tutoriais. \n\nOs Rob\u00f4s XR4 e SCARA s\u00e3o rob\u00f4s did\u00e1ticos desenvolvidos com \nas mesmas caracter\u00edsticas de um rob\u00f4 industrial, por\u00e9m sua estrutura \npermite a observa\u00e7\u00e3o das engrenagens e mecanismos de movimenta\u00e7\u00e3o. \nAlgoritmos de controle PID permitem controlar a velocidade completa \nde todos os servo motores, 6 para o rob\u00f4 XR4 e 5 para o rob\u00f4 SCARA. \nO rob\u00f4 XR4 locomove-se sobre uma mesa X-Y acionada por 2 servo \nmotores. O controle de cada rob\u00f4 \u00e9 feito por um controlador dedicado \n\n\n\n \nAplica\u00e7\u00e3o da metodologia a uma c\u00e9lula flex\u00edvel de manufatura  75 \n\n \n\n \n\nMark IV, Figura 5.1 (14) e (15), e sua programa\u00e7\u00e3o \u00e9 feita utilizando-se \num programa com instru\u00e7\u00f5es padronizadas na linguagem de programa-\n\u00e7\u00e3o do equipamento chamada RoboTalk, o qual \u00e9 instalado num compu-\ntador de mesa. Cada controlador Mark IV possui 8 entradas e sa\u00eddas \ndigitais em resolu\u00e7\u00e3o de 8 bits e um teach pendant para configura\u00e7\u00e3o \nmanual. \n\nA arquitetura do sistema RHINO \u00e9 ilustrada na Figura 5.3. Num \nprimeiro n\u00edvel, encontra-se o servidor SCADA ligado ao cliente que tem \na interface homem m\u00e1quina (IHM). O servidor est\u00e1 conectado ao CLP \nAltus atrav\u00e9s de uma comunica\u00e7\u00e3o serial RS232 com o protocolo Mod-\nbus RTU e o CLP est\u00e1 conectado ao resto de subsistemas. Os leds das \nesta\u00e7\u00f5es de trabalho e os motores DC das esteiras s\u00e3o conectados \u00e0s \nsa\u00eddas do m\u00f3dulo PO2022 do CLP. Os sensores dos alimentadores s\u00e3o \nconectados \u00e0s entradas do m\u00f3dulo PO1010. Por sua vez, os controlado-\nres dos rob\u00f4s XR4 e SCARA s\u00e3o conectados aos computadores de mesa \nonde est\u00e1 rodando o programa na linguagem RoboTalk, mediante uma \ncomunica\u00e7\u00e3o RS232C. As sa\u00eddas dos m\u00f3dulos P02020 e PO2022 s\u00e3o \nconectadas \u00e0s entradas dos controladores do rob\u00f4 XR4 e SCARA, res-\npectivamente, e as sa\u00eddas dos controladores s\u00e3o conectadas \u00e0s entradas \ndo m\u00f3dulo PO1010. \n\n \nFigura 5.3 Arquitetura Sistema RHINO \n\n\n\n \n76 Aplica\u00e7\u00e3o da metodologia a uma c\u00e9lula flex\u00edvel de manufatura \n\n \n\n \n\nAs ferramentas utilizadas na aplica\u00e7\u00e3o desta metodologia s\u00e3o: \nIDES e TCT para realizar a constru\u00e7\u00e3o de geradores tanto da planta \nquanto das especifica\u00e7\u00f5es, assim como o c\u00e1lculo e redu\u00e7\u00e3o de supervi-\nsores; Supremica para realizar a emula\u00e7\u00e3o dos geradores obtidos na fase \nII, Ides2ST e MasterTool para a  implementa\u00e7\u00e3o da fase IV e o software \nScadaBR para a implementa\u00e7\u00e3o das fases V e VI. \n\n5.2 FASE II: S\u00cdNTESE DE CONTROLE SUPERVIS\u00d3RIO \n\nVisando a fabrica\u00e7\u00e3o de conjuntos de pe\u00e7as de forma eficiente e \nflex\u00edvel, alguns problemas devem ser evitados, como: \n\n \n\u2022 Realizar a montagem de mais de 2 conjuntos de pe\u00e7as simulta-\n\nneamente. \n\u2022 Processar no torno um anel e um cilindro ao mesmo tempo. \n\u2022 Processar no sistema de vis\u00e3o mais de uma pe\u00e7a. \n\u2022 Efetuar as opera\u00e7\u00f5es de usinagem, torneamento e teste se n\u00e3o \n\nhouver pe\u00e7a esperando pela realiza\u00e7\u00e3o das tarefas citadas. \n\u2022 Pegar pe\u00e7as dos alimentadores por parte do rob\u00f4 XR4 se n\u00e3o \n\nhouver pelo menos uma pe\u00e7a dispon\u00edvel. \n\u2022 Overflow e underflow da esteira de alimenta\u00e7\u00e3o. \n\u2022 Overflow da esteira de sa\u00edda. \n\u2022 Permitir desordem na sequ\u00eancia de pe\u00e7as que entram na esteira \n\nde alimenta\u00e7\u00e3o para depois ser montadas.  \n\u2022 Realizar a montagem dos conjuntos de forma errada. Um con-\n\njunto est\u00e1 formado por 1 unidade de cada tipo de pe\u00e7a e as pe-\n\u00e7as cilindro e anel devem ser montadas na mesa de montagem \nsobre uma pe\u00e7a do tipo base. \n\n5.2.1 Etapa 2.1 Modelagem dos subsistemas da CFM \n\nNa tabela 5.1 s\u00e3o apresentados os eventos utilizados na modela-\ngem dos geradores dos subsistemas e o significado f\u00edsico dos mesmos. \n\n \nTabela 5.1 Eventos do Sistema RHINO \n\nEvento Descri\u00e7\u00e3o \nAlimentadores  \n\nChega_A Chega pe\u00e7a anel no seu alimentador \nChega_B Chega pe\u00e7a base no seu alimentador \n\n\n\n \nAplica\u00e7\u00e3o da metodologia a uma c\u00e9lula flex\u00edvel de manufatura  77 \n\n \n\n \n\nChega_C Chega pe\u00e7a cilindro no seu alimentador \nChega_D Chega pe\u00e7a disco no seu alimentador \n\nTorno CNC  \nI_tor_A In\u00edcio de torneamento de pe\u00e7a anel \n\nF_tor_A Sinaliza o fim desta opera\u00e7\u00e3o \nI_tor_C In\u00edcio de torneamento de pe\u00e7a cilindro  \n\nF_tor_C Sinaliza o fim desta opera\u00e7\u00e3o \nSistema de Vis\u00e3o  \n\nI_tes_A In\u00edcio de teste de pe\u00e7a anel \nF_tes_A_ok Sinaliza a aprova\u00e7\u00e3o no teste  \n\nF_tes_A_nok Sinaliza a aprova\u00e7\u00e3o no teste \nI_tes_B In\u00edcio de teste de pe\u00e7a base \nF_tes_B_ok Sinaliza a aprova\u00e7\u00e3o no teste  \n\nF_tes_B_nok Sinaliza a aprova\u00e7\u00e3o no teste \nI_tes_C In\u00edcio de teste de pe\u00e7a cilindro \nF_tes_C_ok Sinaliza a aprova\u00e7\u00e3o no teste  \n\nF_tes_C_nok Sinaliza a aprova\u00e7\u00e3o no teste \nCentro Usinagem  \n\nI_us_B In\u00edcio de usinagem de base \nF_us_B Sinaliza o fim desta opera\u00e7\u00e3o \n\nRob\u00f4 XR4  \nI_col_B_us In\u00edcio do transporte de pe\u00e7a base do seu alimenta-\n\ndor at\u00e9 o centro de usinagem  \nF_col_B_us Sinaliza o fim desta opera\u00e7\u00e3o \nI_col_B_sv In\u00edcio do transporte de pe\u00e7a base do centro de \n\nusinagem at\u00e9 o sistema de vis\u00e3o \nF_col_B_sv Sinaliza o fim desta opera\u00e7\u00e3o \nI_col_D_bsv In\u00edcio do transporte de pe\u00e7a disco do seu alimenta-\n\ndor at\u00e9 chanfro de pe\u00e7a base no sistema de vis\u00e3o \nF_col_D_bsv Sinaliza o fim desta opera\u00e7\u00e3o \nI_col_BD_ea In\u00edcio do transporte do conjunto base + disco do \n\nsistema de vis\u00e3o at\u00e9 a esteira de alimenta\u00e7\u00e3o \nF_col_BD_ea Sinaliza o fim desta opera\u00e7\u00e3o \nI_col_B_nok In\u00edcio do transporte de pe\u00e7a base do sistema de \n\nvis\u00e3o at\u00e9 o buffer de descarte \nF_col_B_nok Sinaliza o fim desta opera\u00e7\u00e3o \nI_col_A_tcnc In\u00edcio do transporte de pe\u00e7a anel do seu alimenta-\n\ndor at\u00e9 o torno CNC \nF_col_A_tcnc Sinaliza o fim desta opera\u00e7\u00e3o \n\nI_col_A_sv In\u00edcio do transporte de pe\u00e7a anel do torno CNC at\u00e9 \no sistema de vis\u00e3o \n\nF_col_A_sv Sinaliza o fim desta opera\u00e7\u00e3o \n\n\n\n \n78 Aplica\u00e7\u00e3o da metodologia a uma c\u00e9lula flex\u00edvel de manufatura \n\n \n\n \n\nI_col_A_ea In\u00edcio do transporte de pe\u00e7a anel do sistema de \nvis\u00e3o at\u00e9 a esteira de alimenta\u00e7\u00e3o \n\nF_col_A_ea Sinaliza o fim desta opera\u00e7\u00e3o \nI_col_A_nok In\u00edcio do transporte de pe\u00e7a anel do sistema de \n\nvis\u00e3o at\u00e9 o buffer de descarte \nF_col_A_nok Sinaliza o fim desta opera\u00e7\u00e3o \nI_col_C_tcnc In\u00edcio do transporte de pe\u00e7a cilindro do seu ali-\n\nmentador at\u00e9 o torno CNC \nF_col_C_tcnc Sinaliza o fim desta opera\u00e7\u00e3o \n\nI_col_C_sv In\u00edcio do transporte de pe\u00e7a cilindro do torno CNC \nat\u00e9 o sistema de vis\u00e3o \n\nF_col_C_sv Sinaliza o fim desta opera\u00e7\u00e3o \nI_col_C_ea In\u00edcio do transporte de pe\u00e7a cilindro do sistema de \n\nvis\u00e3o at\u00e9 a esteira de alimenta\u00e7\u00e3o \nF_col_C_ea Sinaliza o fim desta opera\u00e7\u00e3o \nI_col_C_nok In\u00edcio do transporte de pe\u00e7a cilindro do sistema de \n\nvis\u00e3o at\u00e9 o buffer de descarte \nF_col_C_nok Sinaliza o fim desta opera\u00e7\u00e3o \n\nEsteira de alimenta\u00e7\u00e3o  \nI_ea In\u00edcio do avan\u00e7o da esteira de alimenta\u00e7\u00e3o \nF_ea Sinaliza o fim desta opera\u00e7\u00e3o \n\nEsteira de sa\u00edda  \nI_es In\u00edcio do avan\u00e7o da esteira de sa\u00edda \nF_es Sinaliza o fim desta opera\u00e7\u00e3o \n\nAduana  \nI_Aduana_A In\u00edcio de inspe\u00e7\u00e3o de pe\u00e7a anel, segunda posi\u00e7\u00e3o \n\nda esteira de alimenta\u00e7\u00e3o \nF_Aduana_A Sinaliza o fim desta opera\u00e7\u00e3o \nI_Aduana_BD In\u00edcio de inspe\u00e7\u00e3o de pe\u00e7a base + disco, segunda \n\nposi\u00e7\u00e3o da esteira de alimenta\u00e7\u00e3o \nF_Aduana_BD Sinaliza o fim desta opera\u00e7\u00e3o \nI_Aduana_C In\u00edcio de inspe\u00e7\u00e3o de pe\u00e7a cilindro, segunda posi-\n\n\u00e7\u00e3o da esteira de alimenta\u00e7\u00e3o \nF_Aduana_C Sinaliza o fim desta opera\u00e7\u00e3o \n\nRob\u00f4 SCARA  \nI_col_BD_mm1 In\u00edcio do transporte de conjunto base + disco da \n\nesteira de alimenta\u00e7\u00e3o at\u00e9 a posi\u00e7\u00e3o 1 da mesa de \nmontagem \n\nF_col_BD_mm1 Sinaliza o fim desta opera\u00e7\u00e3o \nI_col_BD_mm2 In\u00edcio do transporte de conjunto base + disco da \n\nesteira de alimenta\u00e7\u00e3o at\u00e9 a posi\u00e7\u00e3o 2 da mesa de \nmontagem \n\n\n\n \nAplica\u00e7\u00e3o da metodologia a uma c\u00e9lula flex\u00edvel de manufatura  79 \n\n \n\n \n\nF_col_BD_mm2 Sinaliza o fim desta opera\u00e7\u00e3o \nI_col_A_mm1 In\u00edcio do transporte de pe\u00e7a anel da esteira de \n\nalimenta\u00e7\u00e3o at\u00e9 a posi\u00e7\u00e3o 1 da mesa de montagem \nF_col_A_mm1 Sinaliza o fim desta opera\u00e7\u00e3o \nI_col_A_mm2 In\u00edcio do transporte de pe\u00e7a anel da esteira de \n\nalimenta\u00e7\u00e3o at\u00e9 a posi\u00e7\u00e3o 2 da mesa de montagem \nF_col_A_mm2 Sinaliza o fim desta opera\u00e7\u00e3o \nI_col_C_mm1 In\u00edcio do transporte de pe\u00e7a cilindro da esteira de \n\nalimenta\u00e7\u00e3o at\u00e9 a posi\u00e7\u00e3o 1 da mesa de montagem \nF_col_C_mm1 Sinaliza o fim desta opera\u00e7\u00e3o \nI_col_C_mm2 In\u00edcio do transporte de pe\u00e7a cilindro da esteira de \n\nalimenta\u00e7\u00e3o at\u00e9 a posi\u00e7\u00e3o 2 da mesa de montagem \nF_col_C_mm2 Sinaliza o fim desta opera\u00e7\u00e3o \n\nI_col_Pronta1_es In\u00edcio do transporte do conjunto final montado da \nposi\u00e7\u00e3o 1 da mesa de montagem at\u00e9 a esteira de \nsa\u00edda \n\nF_col_Pronta1_es Sinaliza o fim desta opera\u00e7\u00e3o \nI_col_Pronta2_es In\u00edcio do transporte do conjunto final montado da \n\nposi\u00e7\u00e3o 2 da mesa de montagem at\u00e9 a esteira de \nsa\u00edda \n\nF_col_Pronta2_es Sinaliza o fim desta opera\u00e7\u00e3o \n \nOs alimentadores de pe\u00e7as: anel, base, cilindro e disco possuem \n\nsensores cujos modelos \u2013 ??, ??, ??, e ?? \u2013 s\u00e3o vistos na Figura 5.4. Os \nsensores sinalizam a chegada de pe\u00e7as atrav\u00e9s dos eventos chega_a, \nchega_b, chega_c e chega_d respectivamente. Os eventos s\u00e3o modela-\ndos como n\u00e3o control\u00e1veis e podem ocorrer a qualquer instante no sis-\ntema. \n\n \n\nFigura 5.4 Geradores dos alimentadores (a) ??, (b) ??, (c) ?? e (d) ?? \n \nO gerador do torno \u2013 ?? \u2013, ilustrado pela Figura 5.5 (a), inicia a \n\nopera\u00e7\u00e3o de torneamento de um anel ou um cilindro, a partir do coman-\ndo I_tor_A e I_tor_C respectivamente e ao final da opera\u00e7\u00e3o envia o \nsinal F_tor_a e F_tor_C. \n\n \n\n\n\n \n80 Aplica\u00e7\u00e3o da metodologia a uma c\u00e9lula flex\u00edvel de manufatura \n\n \n\n \n\n \n\nFigura 5.5 Geradores do torno e usinagem (a) ?? e (b) ?? \n \nO sistema de vis\u00e3o inspeciona pe\u00e7as para encontrar defeitos que \n\nn\u00e3o permitam a montagem do conjunto final. Para isto, \u00e9 modelado o \ngerador \u2013 ?? \u2013, visto na Figura 5.6, o qual realiza, logicamente, o teste \ndas pe\u00e7as: anel, base e cilindro, atrav\u00e9s dos comandos I_tes_A, I_tes_B \ne I_tes_C respectivamente e responde com F_tes_A_ok , F_tes_B_ok e \nF_tes_C_ok caso as pe\u00e7as tenham sido aprovadas ou F_tes_A_nok, \nF_tes_B_nok e F_tes_C_nok se rejeitadas. O centro de usinagem \u2013 ?? \u2013 \nilustrado na Figura 5.5 (b), inicia sua opera\u00e7\u00e3o mediante o comando \nI_us_B e a finaliza com o sinal F_us_B.  \n\n \n\nFigura 5.6 Gerador do teste ?? \n \nO rob\u00f4 XR4, representado pelo gerador \u2013 ?\t \u2013 na Figura 5.7, e-\n\nxecuta treze a\u00e7\u00f5es diferentes. Ele pode pegar um anel ou um cilindro \niniciados por I_col_A_tcnc e I_col_C_tcnc respectivamente, e coloc\u00e1-\nlos no torno; pode pegar tamb\u00e9m uma base, iniciado por I_col_B_us e \ncoloc\u00e1-la no centro de usinagem e um disco, iniciado por  I_col_D_bsv e \ncoloc\u00e1-lo no chanfro existente na base que est\u00e1 no sistema de vis\u00e3o, \nap\u00f3s esta \u00faltima ser aprovada. Ele tamb\u00e9m retira pe\u00e7as do centro de \nusinagem e torno uma vez terminadas as opera\u00e7\u00f5es de usinagem e tor-\nneamento respectivamente, e as coloca no sistema de vis\u00e3o, atrav\u00e9s dos \ncomandos I_col_B_sv, I_col_A_sv e I_col_C_sv. Al\u00e9m disso, ele pode \nretirar pe\u00e7as aprovadas do sistema de vis\u00e3o, e deposit\u00e1-las na esteira de \nalimenta\u00e7\u00e3o por meio dos comandos I_col_A_ea, I_col_BD_ea e \n\n\n\n \nAplica\u00e7\u00e3o da metodologia a uma c\u00e9lula flex\u00edvel de manufatura  81 \n\n \n\n \n\nI_col_C_ea ou pe\u00e7as reprovadas e coloc\u00e1-las no buffer de descarte, atra-\nv\u00e9s dos comandos I_col_A_nok, I_col_B_nok e I_col_C_nok. \n\n \n\n \n\nFigura 5.7 Gerador do rob\u00f4 XR4 ?\t \n \nO gerador da esteira de alimenta\u00e7\u00e3o \u2013 ?\n \u2013, ilustrado pela Figura \n\n5.8, inicia o avan\u00e7o a partir do comando I_ea e ao final da opera\u00e7\u00e3o \nenvia o sinal F_ea.   \n\n \n\nFigura 5.8 Gerador da esteira de alimenta\u00e7\u00e3o ?\n \n \nVisando gerar um hist\u00f3rico de eventos da passagem de pe\u00e7as pela \n\nesteira de alimenta\u00e7\u00e3o, \u00e9 modelado o gerador \u2013 ??? \u2013 chamado Aduana, \nilustrado na Figura 5.9. Este gerador n\u00e3o modela um componente f\u00edsico \ndo sistema, propriamente, sendo um artif\u00edcio criado para representar a \npassagem de um anel, uma base com disco ou um cilindro, da posi\u00e7\u00e3o 1 \npara a posi\u00e7\u00e3o 2 da esteira de alimenta\u00e7\u00e3o, atrav\u00e9s dos eventos \nI_aduana_A, I_Aduana_BD e I_Aduana_C respectivamente. Os eventos \nfinais de inspe\u00e7\u00e3o F_Aduana_A, F_Aduana_B e F_Aduana_C que atu-\nam como sensores, determinam a pe\u00e7a que ocupa a segunda posi\u00e7\u00e3o da \n\n\n\n \n82 Aplica\u00e7\u00e3o da metodologia a uma c\u00e9lula flex\u00edvel de manufatura \n\n \n\n \n\nesteira de alimenta\u00e7\u00e3o. A introdu\u00e7\u00e3o destes eventos facilita a modela-\ngem das especifica\u00e7\u00f5es apresentadas na se\u00e7\u00e3o 5.2. Alternativamente, \noutras abordagens podem ser adotadas para isso, como o uso dos distin-\nguidores (BOUZON et al. 2009) \n\n \n\nFigura 5.9 Gerador da aduana ??? \n \nO rob\u00f4 SCARA \u2013 ??? \u2013, ilustrado na Figura 5.10, executa oito \n\na\u00e7\u00f5es referentes \u00e0 montagem de dois conjuntos finais para duas posi\u00e7\u00f5es \nda mesa de montagem. Ele primeiro retira da esteira de alimenta\u00e7\u00e3o uma \nbase mais o disco anteriormente colocado nela, atrav\u00e9s dos comandos \nI_col_BD_mm1, I_col_BD_mm2, para depois ser depositado na posi\u00e7\u00e3o \n1 ou 2. Feito isso, ele pode retirar tanto um anel quanto um cilindro da \nesteira de alimenta\u00e7\u00e3o pelos comandos I_col_A_mm1, I_col_A_mm2, \nI_col_C_mm1 e I_col_C_mm2 e mont\u00e1-los sobre a base na posi\u00e7\u00e3o 1 ou \n2. Quando os conjuntos estiverem prontos, ele pode coloc\u00e1-los sobre a \nesteira de sa\u00edda a partir dos comandos I_col_Pronta1_es e \nI_col_Pronta2_es, para os conjuntos vindos da posi\u00e7\u00e3o 1 ou 2 respecti-\nvamente.  \n\n \n\nFigura 5.10 Gerador do rob\u00f4 SCARA ??? \n\n\n\n \nAplica\u00e7\u00e3o da metodologia a uma c\u00e9lula flex\u00edvel de manufatura  83 \n\n \n\n \n\nO gerador da esteira de sa\u00edda \u2013 ??? \u2013, visto na Figura 5.11, inicia \nseu avan\u00e7o com um conjunto pronto, a partir do comando I_es e quando \nfinaliza sua opera\u00e7\u00e3o envia o sinal F_es. \n\n \n\nFigura 5.11Gerador da esteira de sa\u00edda ??? \n\n5.2.2 Etapa 2.2 Modelagem das especifica\u00e7\u00f5es  \n\nAs especifica\u00e7\u00f5es focam na resolu\u00e7\u00e3o dos problemas de intera\u00e7\u00e3o \nentre os subsistemas mencionados na se\u00e7\u00e3o 5.2. \n\nAs especifica\u00e7\u00f5es ??\n, ??? e ???, visualizadas na Figura 5.12(a), \n(b) e (c) respectivamente, objetivam a coordena\u00e7\u00e3o entre os alimentado-\nres de an\u00e9is, bases e cilindros com o rob\u00f4 XR4. No estado 0 dos gerado-\nres, n\u00e3o h\u00e1 pe\u00e7as nos alimentadores, sendo proibido que o rob\u00f4 XR4 \ninicie o movimento de pegar um anel, uma base e um cilindro de seus \nrespectivos alimentadores \u2013 I_col_A_tcnc, I_col_B_us e I_col_C_tcnc. \nEstes eventos somente s\u00e3o habilitados no estado 1, quando \u00e9 certa a \nexist\u00eancia de pelo menos um anel, uma base e um cilindro em seus ali-\nmentadores \u2013 ap\u00f3s ocorrer os eventos Chega_A, Chega_B e Chega_C. \nOs auto-la\u00e7os em ??\n, ???, ???, permitem que estes \u00faltimos eventos \npossam ocorrer mais de uma vez. J\u00e1 a especifica\u00e7\u00e3o ??? , ilustrada na \nFigura 5.12 (d), n\u00e3o permite no estado 0 que o rob\u00f4 XR4 retire um disco \npara colocar sobre uma base no sistema de vis\u00e3o \u2013 I_col_D_bsv, at\u00e9 n\u00e3o \nter certeza da exist\u00eancia de pelo menos um disco no seu alimentador \natrav\u00e9s do evento Chega_D. \n\n \n\n \nFigura 5.12 Especifica\u00e7\u00e3o de coordena\u00e7\u00e3o dos alimentadores com o rob\u00f4 XR4 \n(a) ??\n , (b) ??? , (c) ???  e (d) ???  \n \n\nVisando evitar o underflow e overflow das esta\u00e7\u00f5es de trabalho: \ntorno, sistema de vis\u00e3o e centro de usinagem, foram modeladas as espe-\n\n\n\n \n84 Aplica\u00e7\u00e3o da metodologia a uma c\u00e9lula flex\u00edvel de manufatura \n\n \n\n \n\ncifica\u00e7\u00f5es ??\n, ??? e ???, as quais desabilitam as opera\u00e7\u00f5es de retirada \nde pe\u00e7as se elas n\u00e3o foram depositadas anteriormente e desabilitam um \nnovo dep\u00f3sito at\u00e9 que as mesmas sejam retiradas. O gerador da Figura \n5.13 (a) indica que quando h\u00e1 pe\u00e7as no torno \u2013 estado 1\u2013, pode ocorrer a \nretirada de an\u00e9is o cilindros \u2013 I_col_A_sv e I_col_C_sv \u2013 e quando o \ntorno esta vazio \u2013 estado 0 \u2013 pode acontecer o dep\u00f3sito das mesmas \u2013 \nF_col_A_tcnc e F_col_C_tcnc. O estado 1 do gerador da Figura 5.13 (b) \nrepresenta o sistema de vis\u00e3o cheio, ou seja, com um anel, uma base ou \num cilindro, onde \u00e9 permitido a ocorr\u00eancia do evento F_col_D_bsv mais \nde uma vez pela restri\u00e7\u00e3o imposta na se\u00e7\u00e3o 5.2, onde a pe\u00e7a disco s\u00f3 \npode entrar no sistema de vis\u00e3o para ser colocada sobre a base, quando \nesta \u00faltima \u00e9 aprovada. A partir deste estado, o sistema de vis\u00e3o pode \nficar vazio por a\u00e7\u00f5es do rob\u00f4 XR4, referente ao dep\u00f3sito de pe\u00e7as na \nesteira de alimenta\u00e7\u00e3o ou no buffer de descarte. \n\n \n\nFigura 5.13 Especifica\u00e7\u00e3o do buffer do torno (a) ??\n  e sistema de vis\u00e3o (b) ???  \n \nA especifica\u00e7\u00e3o ???, visualizada na Figura 5.14, indica que so-\n\nmente pode ser retirada uma base \u2013 I_col_B_sv \u2013 se essa est\u00e1 no centro \nde usinagem \u2013 estado 1.  Quando esta esta\u00e7\u00e3o est\u00e1 vazia \u2013 estado 0 \u2013 \npode ser depositada uma base atrav\u00e9s do evento F_col_B_us. \n\n \n\nFigura 5.14 Especifica\u00e7\u00e3o do buffer do centro de usinagem ???  \n \nAs especifica\u00e7\u00f5es ??\n, ??? e ??? tratam a coordena\u00e7\u00e3o do rob\u00f4 \n\nXR4 com o fim das opera\u00e7\u00f5es de torneamento e usinagem. Os geradores \nda Figura 5.15 (a), (c) e (b) indicam que as opera\u00e7\u00f5es de torneamento e \nusinagem \u2013  I_tor_A, I_tor_C e I_us_B \u2013 somente podem come\u00e7ar \nquando \u00e9 colocado um anel ou um cilindro no torno ou uma base no \ncentro de usinagem \u2013 estado 1.  \n\n\n\n \nAplica\u00e7\u00e3o da metodologia a uma c\u00e9lula flex\u00edvel de manufatura  85 \n\n \n\n \n\n \n\nFigura 5.15 Especifica\u00e7\u00f5es de coordena\u00e7\u00e3o do rob\u00f4 XR4 com o torno (a) ??\n  e \n(c) ???  e centro de usinagem  (b) ???    \n\n \nAs especifica\u00e7\u00f5es ??\n, ??? e ??? respondem pela coordena\u00e7\u00e3o \n\nentre as esta\u00e7\u00f5es de torno e usinagem e o rob\u00f4 XR4. Os geradores da \nFigura 5.16 (a), (c) e (b) indicam que a retirada de pe\u00e7as do torno e do \ncentro de usinagem \u2013  I_col_A_sv, I_col_C_sv e I_col_B_sv \u2013 somente \npodem come\u00e7ar quando as pe\u00e7as tenham sido manufaturadas \u2013 estado 1. \n\n \n\n \n\nFigura 5.16 Especifica\u00e7\u00f5es de coordena\u00e7\u00e3o do torno e centro de usinagem com \no rob\u00f4 XR4  (a) ??\n, (b) ???  e (c) ???  \n \nA coordena\u00e7\u00e3o do rob\u00f4 XR4 com o sistema de vis\u00e3o \u00e9 modelada atrav\u00e9s \ndos geradores ??\n, ??? e ???, ilustrados na Figura 5.17 (a), (b) e (c). \nUma vez depositadas as pe\u00e7as anel, base ou cilindro pelo rob\u00f4 XR4 no \nsistema de vis\u00e3o \u2013  F_col_A_sv, F_col_B_sv e F_col_C_sv \u2013, \u2013  estado \n1 \u2013, pode ser iniciado o teste das pe\u00e7as \u2013 I_tes_A, I_tes_B e I_tes_C \u2013, \nrespectivamente. \n\n \n\nFigura 5.17 Especifica\u00e7\u00f5es de coordena\u00e7\u00e3o do rob\u00f4 XR4 com o sistema de \nvis\u00e3o (a) ??\n , (b) ???  e (c) ???  \n \nOs geradores da Figura 5.18 (a), (b), (c) e (d) s\u00e3o respons\u00e1veis da coor-\ndena\u00e7\u00e3o entre a opera\u00e7\u00e3o do sistema de vis\u00e3o e o rob\u00f4 XR4. As especi-\nfica\u00e7\u00f5es ??\n e ??? desabilitam os eventos de retirada de an\u00e9is e cilindros \n\n\n\n \n86 Aplica\u00e7\u00e3o da metodologia a uma c\u00e9lula flex\u00edvel de manufatura \n\n \n\n \n\ndo sistema de vis\u00e3o, se elas n\u00e3o foram previamente aprovadas ou repro-\nvadas e desabilitam um novo teste at\u00e9 que as mesmas sejam testadas. A \nespecifica\u00e7\u00e3o ??? desabilita a retirada de uma base do sistema de vis\u00e3o \nem dire\u00e7\u00e3o ao buffer de descarte se ela n\u00e3o foi testada como reprovada e \ndesabilita o transporte de uma base mais o disco \u00e0 esteira de alimenta\u00e7\u00e3o \nse antes n\u00e3o foi colocado o disco sobre a base \u2013 evento F_col_D_bsv. J\u00e1 \nna especifica\u00e7\u00e3o ??? , n\u00e3o pode ser colocado o disco sobre a base sem \nque esta \u00faltima seja aprovada. \n\n \n\nFigura 5.18 Especifica\u00e7\u00f5es de coordena\u00e7\u00e3o do sistema de vis\u00e3o com o rob\u00f4 \nXR4 (a) ??\n, (b) ??? , (c) ???  e (d) ???  \n\n \nA coordena\u00e7\u00e3o dos rob\u00f4s - XR4 e SCARA - e das 3 posi\u00e7\u00f5es da \n\nesteira de alimenta\u00e7\u00e3o em rela\u00e7\u00e3o ao fluxo de pe\u00e7as \u00e9 subdividida em 2 \nespecifica\u00e7\u00f5es, de modo que cada uma delas foca na intera\u00e7\u00e3o entre \nduas posi\u00e7\u00f5es vizinhas da esteira. A especifica\u00e7\u00e3o ??\n responde pelo \nrob\u00f4 XR4 e a aduana, enquanto que a especifica\u00e7\u00e3o ??? pela aduana e o \nrob\u00f4 SCARA. Um modelo gen\u00e9rico para os geradores ??\n e ??? \u00e9 mos-\ntrado na Figura 5.19. Este modelo segue o mesmo racioc\u00ednio adotado \npara modelar as especifica\u00e7\u00f5es de coordena\u00e7\u00e3o ??\n, ???, ??? e ???  da \nCFM (YURI, 2010) apresentado no cap\u00edtulo 3 deste trabalho. Os estados \ndestes geradores s\u00e3o definidos por um par de letras que indicam a pre-\nsen\u00e7a de um tipo de pe\u00e7a em alguma posi\u00e7\u00e3o da esteira de alimenta\u00e7\u00e3o \nesperando pela execu\u00e7\u00e3o de alguma opera\u00e7\u00e3o. Cabe mencionar que as \nposi\u00e7\u00f5es da esteira de alimenta\u00e7\u00e3o est\u00e3o associadas a subsistemas. A \nprimeira posi\u00e7\u00e3o est\u00e1 associada ao rob\u00f4 XR4, a segunda \u00e0 Aduana e a \nterceira ou \u00faltima posi\u00e7\u00e3o est\u00e1 associada ao rob\u00f4 SCARA. O n\u00famero 0 \nindica que n\u00e3o h\u00e1 pe\u00e7a em alguma posi\u00e7\u00e3o da esteira e as letras A, B e C \nindicam que h\u00e1 um anel, uma base com disco ou um cilindro esperando \npela execu\u00e7\u00e3o de uma tarefa. Os \u00edndices dos estados representam respec-\n\n\n\n \nAplica\u00e7\u00e3o da metodologia a uma c\u00e9lula flex\u00edvel de manufatura  87 \n\n \n\n \n\ntivamente para a especifica\u00e7\u00e3o ??\n, a primeira e segunda posi\u00e7\u00e3o e para \na especifica\u00e7\u00e3o ???, a segunda e terceira posi\u00e7\u00e3o da esteira de alimenta-\n\u00e7\u00e3o. \n\nOs eventos F_<a\u00e7\u00e3o_A>, F_<a\u00e7\u00e3o_BD> e F_<a\u00e7\u00e3o_C> cor-\nrespondem aos sinais de fim de opera\u00e7\u00e3o do subsistema anterior sobre \num anel, uma base com disco e um cilindro. J\u00e1 os eventos \nI_<prox_a\u00e7\u00e3o_A>, I_<prox_a\u00e7\u00e3o_BD> e I_<prox_a\u00e7\u00e3o_C> represen-\ntam o in\u00edcio das opera\u00e7\u00f5es sobre um anel, uma base com disco e um \ncilindro pelo subsistema seguinte ao que sinalizou os eventos \nF_<a\u00e7\u00e3o_A>, F_<a\u00e7\u00e3o_BD> e F_<a\u00e7\u00e3o_C>.  \n\n \n\n \n\nFigura 5.19 Especifica\u00e7\u00f5es gen\u00e9ricas para a coordena\u00e7\u00e3o do rob\u00f4 XR4 com a \nesteira de alimenta\u00e7\u00e3o  ??\n  e com a aduana ???  \n\n \nSuponha que a Figura 5.19 \u00e9 o gerador que representa a especifi-\n\nca\u00e7\u00e3o ??\n que coordena o rob\u00f4 XR4 e a Aduana: primeira e segunda \nposi\u00e7\u00e3o da esteira de alimenta\u00e7\u00e3o. Para este gerador, os eventos \nF_<a\u00e7\u00e3o_A>, F_<a\u00e7\u00e3o_BD>, F_<a\u00e7\u00e3o_C, I_<prox_a\u00e7\u00e3o_A>, \nI_<prox_a\u00e7\u00e3o_BD> e I_<prox_a\u00e7\u00e3o_C> s\u00e3o respectivamente: \nF_col_A_ea, F_col_BD_ea e F_col_C_ea, I_Aduana_A, I_Aduana_BD \ne I_Aduana_C. A Figura 5.20 ilustra uma sequ\u00eancia de eventos a qual \npermite mostrar a evolu\u00e7\u00e3o da especifica\u00e7\u00e3o ??\n, supondo inicialmente \nque a esteira de alimenta\u00e7\u00e3o esteja vazia. No momento do rob\u00f4 XR4 \ndepositar um anel na primeira posi\u00e7\u00e3o, o gerador evolui ao estado A0, \n\n\n\n \n88 Aplica\u00e7\u00e3o da metodologia a uma c\u00e9lula flex\u00edvel de manufatura \n\n \n\n \n\nFigura 5.20 (a), desabilitando o evento F_col_A_ea para evitar o over-\nflow de pe\u00e7as nessa posi\u00e7\u00e3o. Posteriormente \u00e9 habilitado o avan\u00e7o da \nesteira de alimenta\u00e7\u00e3o para a segunda posi\u00e7\u00e3o por meio do evento I_ea, \nfazendo evoluir o gerador ao estado 0A, mostrado fisicamente na Figura \n5.20 (b). Neste estado pode ser determinada a exist\u00eancia de um anel na \nsegunda posi\u00e7\u00e3o - I_Aduana_A - ou a chegada de uma base com disco - \nI_Aduana_BD -  ou um cilindro - I_Aduana_C - na primeira posi\u00e7\u00e3o da \nesteira de alimenta\u00e7\u00e3o. Ainda neste estado \u00e9 proibida a ativa\u00e7\u00e3o do co-\nmando I_ea e em todos os estados onde o segundo \u00edndice seja diferente \nde 0, j\u00e1 que significa que existe uma pe\u00e7a sobre a qual n\u00e3o foi realizada \na opera\u00e7\u00e3o esperada. Neste caso, seja um anel, Figura 5.20 (c), uma base \ncom disco ou um cilindro o que chegar \u00e0 primeira posi\u00e7\u00e3o, o comando \nI_ea n\u00e3o poder\u00e1 ser habilitado porquanto ainda n\u00e3o foi inspecionada a \npe\u00e7a anel. \n\n \n\n \n\nFigura 5.20 Sequ\u00eancia de opera\u00e7\u00f5es relacionada \u00e0 especifica\u00e7\u00e3o ??\n  \n \nPara a especifica\u00e7\u00e3o ???, os eventos F_<a\u00e7\u00e3o_A>, \n\nF_<a\u00e7\u00e3o_BD>, F_<a\u00e7\u00e3o_C s\u00e3o respectivamente, F_Aduana_A, \n\n\n\n \nAplica\u00e7\u00e3o da metodologia a uma c\u00e9lula flex\u00edvel de manufatura  89 \n\n \n\n \n\nF_Aduana_BD e F_Aduana_C. Em virtude dos movimentos do rob\u00f4 \nSCARA associados \u00e0 \u00faltima posi\u00e7\u00e3o da esteira de alimenta\u00e7\u00e3o serem \ndirigidos \u00e0 montagem de pe\u00e7as em duas posi\u00e7\u00f5es diferentes da mesa de \nmontagem, o evento I_<prox_a\u00e7\u00e3o_A> equivale a I_col_A_mm1 ou \nI_col_A_mm2; I_<prox_a\u00e7\u00e3o_BD> a I_col_BD_mm1 ou \nI_col_BD_mm2 e por fim, I_<prox_a\u00e7\u00e3o_C> a I_col_C_mm1 ou \nI_col_C_mm2.  Estas duas especifica\u00e7\u00f5es juntas asseguram que n\u00e3o \nhaver\u00e1 overflow na primeira posi\u00e7\u00e3o nem underflow na \u00faltima posi\u00e7\u00e3o \nda esteira de alimenta\u00e7\u00e3o; esta \u00faltima n\u00e3o avan\u00e7ar\u00e1 antes de as pe\u00e7as: \nanel, base com disco ou cilindro serem depositadas pelo rob\u00f4 XR4 na \nprimeira posi\u00e7\u00e3o, \u201cinspecionadas\u201d pela aduana e retiradas pelo rob\u00f4 \nSCARA na \u00faltima posi\u00e7\u00e3o; n\u00e3o ocorrer\u00e1 a \u201cinspe\u00e7\u00e3o\u201d da aduana sem ter \npe\u00e7a na segunda posi\u00e7\u00e3o. \n\nA especifica\u00e7\u00e3o ?\t, vista na Figura 5.21, preocupa-se em n\u00e3o \npermitir que a esteira de alimenta\u00e7\u00e3o avance sem a exist\u00eancia de pe\u00e7as \nsobre ela. No estado 1 n\u00e3o h\u00e1 pe\u00e7as sobre a esteira de alimenta\u00e7\u00e3o, sen-\ndo proibido que esta \u00faltima avance \u2013 evento I_ea. O evento I_ea somen-\nte \u00e9 habilitado no estado 2, quando h\u00e1 certeza que existe pelo menos \numa pe\u00e7a sobre a esteira de alimenta\u00e7\u00e3o, ap\u00f3s ocorrer pelo menos um \ndos eventos F_col_A_ea, F_col_BD_ea, F_col_C_ea, F_Aduana_A, \nF_Aduana_BD ou F_Aduana_C. O auto-la\u00e7o em ?\t, permite que os \neventos listados anteriormente possam ocorrer mais de uma vez, possi-\nbilitando a execu\u00e7\u00e3o concorrente destas tarefas. \n\n \n\nFigura 5.21 Especifica\u00e7\u00e3o do avan\u00e7o da esteira ?\t \n \nAs especifica\u00e7\u00f5es ?\n\n, ?\n? e ?\n?, modeladas como na Figura \n\n5.22, tratam a exclus\u00e3o m\u00fatua que deve haver entre a esteira de alimen-\nta\u00e7\u00e3o e o rob\u00f4 XR4, bem como entre a aduana e o rob\u00f4 SCARA, durante \na execu\u00e7\u00e3o do sistema. A partir destes geradores pode-se afirmar que \numa vez iniciado o avan\u00e7o da esteira de alimenta\u00e7\u00e3o atrav\u00e9s do coman-\ndo I_ea, n\u00e3o pode haver a execu\u00e7\u00e3o de tarefas por parte dos rob\u00f4s e da \naduana, at\u00e9 que o evento F_ea seja sinalizado e vice-versa. \n\n\n\n \n90 Aplica\u00e7\u00e3o da metodologia a uma c\u00e9lula flex\u00edvel de manufatura \n\n \n\n \n\n \n\nFigura 5.22Especifica\u00e7\u00f5es do mutex do rob\u00f4 XR4 e SCARA com a esteira de \nalimenta\u00e7\u00e3o (a) ?\n\n, (b) ?\n? e da aduana com a esteira de alimenta\u00e7\u00e3o (c) ?\n?  \n\n \nA montagem do conjunto final \u00e9 feita pelo rob\u00f4 SCARA em duas \n\nposi\u00e7\u00f5es diferentes da mesa de montagem. Para isto, s\u00e3o modeladas \nduas especifica\u00e7\u00f5es ???\n e ????, as quais podem ser vistas na Figura \n5.23 (a) e (b) respectivamente. A especifica\u00e7\u00e3o ???\n responde pela mon-\ntagem de pe\u00e7as na posi\u00e7\u00e3o 1 e a ???? na posi\u00e7\u00e3o 2 da mesa de monta-\ngem. Cada gerador tem 5 estados que definem a sequ\u00eancia de montagem \ndo conjunto final. Ressalta-se que a montagem sempre deve come\u00e7ar \ncom uma base com um disco incluso; seguida de um anel e um cilindro \nem qualquer ordem, por\u00e9m s\u00f3 uma unidade de cada. Finalmente o con-\njunto pronto \u00e9 depositado na esteira de sa\u00edda atrav\u00e9s do comando \nI_col_Pronta1_es ou I_col_Pronta2_es, se o conjunto \u00e9 oriundo da \nposi\u00e7\u00e3o 1 ou da posi\u00e7\u00e3o 2 da mesa de montagem, respectivamente. \n\n \n\nFigura 5.23 Especifica\u00e7\u00f5es da montagem de conjuntos na posi\u00e7\u00e3o 1 (a) ???\n  e \nna posi\u00e7\u00e3o 2 (b) ????  da mesa de montagem \n\n \nO processo de montagem de um conjunto final exige a prioridade \n\nde uma base com disco, sobre um anel ou um cilindro, conforme men-\ncionado na se\u00e7\u00e3o 5.1, caso contr\u00e1rio, o rob\u00f4 SCARA n\u00e3o inicia a mon-\ntagem e o sistema fica bloqueado. Al\u00e9m disso, \u00e9 poss\u00edvel encontrar se-\n\n\n\n \nAplica\u00e7\u00e3o da metodologia a uma c\u00e9lula flex\u00edvel de manufatura  91 \n\n \n\n \n\nqu\u00eancias de eventos que gerem tamb\u00e9m bloqueio ao deixar entrar no \ntorno, um anel ou um cilindro. Por exemplo, depois de ter ido uma base \ncom disco e um cilindro para a esteira de alimenta\u00e7\u00e3o, a pe\u00e7a que falta-\nria para terminar a montagem seria um anel, mas a pe\u00e7a que est\u00e1 no \ntorno \u00e9 um cilindro. O cilindro poderia ser mesmo rejeitado pelo sistema \nde vis\u00e3o dando passo a um anel entrar no torno. No entanto, o evento \nI_col_A_tcnc est\u00e1 desabilitado por n\u00e3o ter anel dispon\u00edvel no seu ali-\nmentador e o evento I_col_C_tcnc est\u00e1 habilitado novamente, o que \ncausa um bloqueio. \n\nPara resolver estes problemas, foi modelado o gerador ??? da Fi-\ngura 5.24, o qual reconhece uma linguagem onde sempre ap\u00f3s uma base \ncom disco, garante-se um anel e um cilindro. N\u00e3o \u00e9 considerado o sis-\ntema de vis\u00e3o, mas sim o torno para deixar entrar um anel ou um cilin-\ndro ao sistema. Na especifica\u00e7\u00e3o ???, o rob\u00f4 XR4 \u00e9 desabilitado para \npegar an\u00e9is \u2013 evento I_col_A_tcnc \u2013 ou cilindros \u2013 evento I_col_C_tcnc \n\u2013  sem antes haver aprovado uma base no sistema de vis\u00e3o e posterior-\nmente ter colocado sobre ela um disco \u2013 evento F_col_D_bsv. Tamb\u00e9m, \nno caso de ser rejeitado um anel \u2013 evento I_col_A_nok \u2013 ou um cilindro \n\u2013 evento I_col_C_nok \u2013 habilita-se um novo ingresso destas duas pe\u00e7as, \nlimitando sua quantidade a uma pe\u00e7a de cada tipo por cada base aprova-\nda. \n\n \n\nFigura 5.24 Especifica\u00e7\u00e3o da prioridade das bases sobre os an\u00e9is e os cilindros ??? \n\n\n\n \n92 Aplica\u00e7\u00e3o da metodologia a uma c\u00e9lula flex\u00edvel de manufatura \n\n \n\n \n\nConforme mencionado anteriormente, quando uma base com dis-\nco \u00e9 acompanhado por um anel e um cilindro, \u00e9 relevante deixar entrar \nmais do que duas bases ao sistema. Mas para o caso onde temos, por \nexemplo, 3 bases habilitadas para entrar ao sistema,  assim que a terceira \nbase ocupa o sistema de vis\u00e3o, ocorre um bloqueio. Ent\u00e3o, \u00e9 necess\u00e1rio \num modelo que limite as bases, como acontece com a especifica\u00e7\u00e3o ???, \nilustrado na Figura 5.25. A diferencia da especifica\u00e7\u00e3o ???, a qual limita \na entrada ao torno de um anel e um cilindro por cada base aceita, o ge-\nrador ??? limita em duas, a quantidade de bases que podem ser deposi-\ntadas no centro de usinagem \u2013 evento I_col_B_us.  \n\n \n\nFigura 5.25 Especifica\u00e7\u00e3o de limite de duas bases ??? \n \nUma vez que as duas bases tenham sido aprovadas, o evento \n\nI_col_B_us \u00e9 desabilitado at\u00e9 n\u00e3o ter ocorrido o \u00faltimo evento \nF_tes_A_ok ou F_tes_C_ok que completa a sequ\u00eancia de eventos para \nobter dois conjuntos prontos, independente de que um deles tenha sido \ncolocado na esteira de sa\u00edda. Esta restri\u00e7\u00e3o \u00e9 imposta pelo fato de que \npode acontecer uma sequ\u00eancia que leve a um bloqueio. Suponha que \nforam aprovadas duas bases que se encontram nas posi\u00e7\u00f5es 1 e 2 respec-\n\n\n\n \nAplica\u00e7\u00e3o da metodologia a uma c\u00e9lula flex\u00edvel de manufatura  93 \n\n \n\n \n\ntivamente da mesa de montagem. Em seguida um anel e um cilindro s\u00e3o \naprovados. Uma op\u00e7\u00e3o pode ser que estas \u00faltimas fa\u00e7am parte da base \nque est\u00e1 na posi\u00e7\u00e3o 1, para ter como resultado um conjunto final pronto \npara ser depositado na esteira de sa\u00edda. Neste momento, seria mais fle-\nx\u00edvel permitir a entrada de outra base no sistema. Por\u00e9m, outra escolha \npode ser tomada: o anel para a posi\u00e7\u00e3o 1 e o cilindro para a posi\u00e7\u00e3o 2, \nfazendo que o rob\u00f4 SCARA espere por outro anel e outro cilindro para \ncompletar a montagem. Assim, ao permitir o ingresso de outra base que \nfosse aprovada, causaria propriamente um bloqueio. O evento \nI_col_B_us tamb\u00e9m pode ser habilitado novamente toda vez que uma \nbase \u00e9 reprovada no sistema de vis\u00e3o. Juntas, as especifica\u00e7\u00f5es ??? e \n??? colaboram na resolu\u00e7\u00e3o do bloqueio por sequ\u00eancia de eventos que \nn\u00e3o obedecem a uma montagem correta de pe\u00e7as. \n\nA especifica\u00e7\u00e3o ???, ilustrada na Figura 5.26, preocupa-se em \nn\u00e3o permitir que a esteira de sa\u00edda avance sem a exist\u00eancia de um con-\njunto final sobre ela. No estado 1 n\u00e3o h\u00e1 conjuntos sobre a esteira de \nsa\u00edda, sendo proibido que a esteira de sa\u00edda avance \u2013 evento I_es. O \nevento I_es somente \u00e9 habilitado no estado 2, quando \u00e9 certo que um \nconjunto final est\u00e1 sobre a mesa, ap\u00f3s ocorrer os eventos \nF_col_Pronta_1_es ou F_col_Pronta_2_es. \n\n \n\nFigura 5.26 Especifica\u00e7\u00e3o esteira de sa\u00edda ??? \n\n5.2.3 Etapa 2.3 S\u00edntese de Supervisores \n\nConforme foi apresentado na se\u00e7\u00e3o 3.2, na abordagem modular \nlocal s\u00e3o exploradas as modularidades das especifica\u00e7\u00f5es e da planta. As \nplantas locais s\u00e3o obtidas a partir da composi\u00e7\u00e3o s\u00edncrona dos geradores \ndos subsistemas afetados pelas restri\u00e7\u00f5es locais, ou seja, aqueles que \ncompartilham ao menos um evento a especifica\u00e7\u00e3o. \n\nTomando como exemplo a constru\u00e7\u00e3o da planta local ?? ?\t, refe-\nrente \u00e0 ?\t, tem-se que o alfabeto desta especifica\u00e7\u00e3o \u00e9 definido por \n?Q\t '{F_col_A_ea, F_col_BD_ea, F_col_C_ea, F_Aduana_A, \nF_Aduana_BD, F_Aduana_C, I_ea }. Comparando este alfabeto com os \nalfabetos dos geradores dos subsistemas da planta, o qual pode ser obti-\n\n\n\n \n94 Aplica\u00e7\u00e3o da metodologia a uma c\u00e9lula flex\u00edvel de manufatura \n\n \n\n \n\ndo a partir das tabelas 5.1 e 5.2, nota-se que os geradores ?\t, ?\n e ??? \napresentam eventos comuns \u00e0 especifica\u00e7\u00e3o ?\t. Desta forma, a planta \nlocal \u00e9 a composi\u00e7\u00e3o s\u00edncrona dos geradores ?\t, ?\n e ???. As plantas \nlocais para a CFM s\u00e3o vistas na tabela 5.2. \n\n \nTabela 5.2 Plantas locais para o sistema RHINO \n\nGlocx || Gx \nGloc1a G1 || G8 \nGloc1b G2 || G8 \nGloc1c G3 || G8 \nGloc1d G4 || G8 \nGloc2a G8 \nGloc2b G8 \nGloc2c G8 \nGloc3a G5 || G8 \nGloc3b G7 || G8 \nGloc3c G5 || G8 \nGloc4a G5 || G8 \nGloc4b G7 || G8 \nGloc4c G5 || G8 \nGloc5a G6 || G8 \nGloc5b G6 || G8 \nGloc5c G6 || G8 \nGloc6a G6 || G8 \nGloc6b G6 || G8 \nGloc6c G6 || G8 \nGloc7a G8 || G9|| G10 \nGloc7b G9 || G10|| G11 \nGloc8 G8 || G9|| G10 \nGloc9a G8 || G9 \nGloc9b G9 || G11 \nGloc9C G9 || G10 \nGloc10a G11 \nGloc10b G11 \nGloc11 G8 \nGloc12 G6 || G8 \n\n\n\n \nAplica\u00e7\u00e3o da metodologia a uma c\u00e9lula flex\u00edvel de manufatura  95 \n\n \n\n \n\nConforme visto, o c\u00e1lculo da linguagem alvo ?? ?E para cada \nplanta local ?? ?E \u00e9 definida por ?? ?E ' ?? ?E || EZ. Ent\u00e3o aplicado ao \nsistema RHINO tem-se que [ 1 \\ '{1a, 1b, 1c, 1d, 2a, 2b, 2c, 3a, 3b, \n3c, 4a, 4b, 4c, 5a, 5b, 5c, 6a, 6b, 6d, 7a, 7b, 8, 9a, 9b, 9c,10a 10b, 11, \n12}. Em seguida \u00e9 calculada a m\u00e1xima linguagem control\u00e1vel contida \nem cada linguagem alvo, ?? ?E ' ??? ?E , ?? ?E ?. Para o sistema RHINO \nforam obtidos 30 supervisores Slocx, x ? X. Devido \u00e0 explos\u00e3o de estados \ndecorrente da alta complexidade atribu\u00edda \u00e0 ampla gama de tarefas de \ncoordena\u00e7\u00e3o entre os diversos subsistemas, associadas a cada especifi-\nca\u00e7\u00e3o, n\u00e3o foi poss\u00edvel realizar o teste de modularidade local. As ferra-\nmentas TCT e Supremica n\u00e3o suportam esta opera\u00e7\u00e3o. Por\u00e9m, conse-\nguiu-se realizar com a ferramenta TCT o produto s\u00edncrono de 23 especi-\nfica\u00e7\u00f5es, S = Sloc1a || Sloc1b || Sloc1c || Sloc1d || Sloc2a || Sloc2b || Sloc2c || Sloc3a || \nSloc3b || Sloc3c || Sloc4a || Sloc4b || Sloc4c || Sloc5a || Sloc5b || Sloc5c || Sloc6a || Sloc6c || \nSloc6d || Sloc7a || Sloc11 || Sloc12. O gerador resultante apresenta 634784 esta-\ndos e 4595152 transi\u00e7\u00f5es e \u00e9 trim, o que significa que a a\u00e7\u00e3o conjunta \ndestes supervisores \u00e9 n\u00e3o bloqueante pelo menos at\u00e9 a entrada de pe\u00e7as \nna esteira de alimenta\u00e7\u00e3o. Entretanto, isto n\u00e3o quer dizer que o bloqueio \nest\u00e1 resolvido, visto que o problema de conflito \u00e9 um problema global \nque ocorre pela intera\u00e7\u00e3o de todos os supervisores com toda a planta. \n\nPosteriormente, foram reduzidos os supervisores para diminuir o \nuso de mem\u00f3ria computacional e tornar compreens\u00edvel a interpreta\u00e7\u00e3o \ndos supervisores na etapa de implementa\u00e7\u00e3o no CLP. O n\u00famero de esta-\ndos de todos os geradores envolvidos na s\u00edntese de supervisores modula-\nres locais \u00e9 visualizado na tabela 5.3. Observa-se que os geradores dos \nsupervisores reduzidos obtidos em alguns casos s\u00e3o equivalentes \u00e0s \nespecifica\u00e7\u00f5es gen\u00e9ricas.  \n\n \nTabela 5.3 N\u00famero de estados dos geradores da s\u00edntese dos supervisores \n\nx Ex Glocx Elocx Slocx RSlocx \n1a, 1b, 1c, 1d  2  14  28  28  2  \n\n2a, 2b, 2c  2  14  26 \n22 \n27  \n\n24 \n18 \n26  \n\n2  \n\n3a, 3b, 3c  2  42 \n28 \n42  \n\n84 \n56 \n84  \n\n81 \n54 \n81  \n\n2  \n\n4a, 4b, 4c  2  42 \n28 \n42  \n\n84 \n56 \n84  \n\n70 \n42 \n70  \n\n2  \n\n\n\n \n96 Aplica\u00e7\u00e3o da metodologia a uma c\u00e9lula flex\u00edvel de manufatura \n\n \n\n \n\n5a, 5b, 5c  2  56  112  108  2  \n6a, 6b, 6c  3  56  168 \n\n160 \n168  \n\n140 \n127 \n140  \n\n3 \n4 \n3  \n\n6d  2  14  112  94  2 \n7a  16  112  1792  1504  16  \n7b  16  72  1152  504  16  \n8 2  112  224  224  2  \n\n9a, 9b, 9c  2  28 \n18 \n8  \n\n25 \n12 \n5  \n\n25 \n12 \n5  \n\n2  \n\n10a, 10b  5  9  41 \n41  \n\n31 \n31  \n\n5  \n\n11  9  14  114  109  9  \n12  13  56  692  584  24 \n13  2  18  36  32  2 \n\n5.3 FASE III: EMULA\u00c7\u00c3O \n\nComo mencionado na se\u00e7\u00e3o 5.1, a emula\u00e7\u00e3o do funcionamento \nda planta sob controle dos supervisores reduzidos obtidos na etapa 2.3, \nfoi realizada pela ferramenta Supremica. Atrav\u00e9s dessa fase, identificou-\nse a necessidade de altera\u00e7\u00e3o nos modelos de algumas especifica\u00e7\u00f5es e \nda constru\u00e7\u00e3o de novas especifica\u00e7\u00f5es que resolvessem problemas de \nbloqueio relacionados com a coordena\u00e7\u00e3o das opera\u00e7\u00f5es do sistema \nRHINO. O ciclo de emula\u00e7\u00e3o foi repetido in\u00fameras vezes, tendo que \nvoltar \u00e0 fase anterior para realizar as respectivas corre\u00e7\u00f5es. Ele foi en-\ncerrado quando o sistema RHINO estava seguindo a l\u00f3gica de controle \nproposta.  \n\n5.4 FASE IV: IMPLEMENTA\u00c7\u00c3O DO CONTROLE SUPERVIS\u00d3RIO \nEM CLP   \n\nA ferramenta Ides2ST gerou automaticamente o c\u00f3digo do con-\ntrole supervis\u00f3rio em linguagem de texto estruturado, para ser imple-\nmentado no CLP, recebendo como entrada os arquivos da planta e dos \nsupervisores na forma de geradores constru\u00eddos na ferramenta IDES. O \nc\u00f3digo gerado, como apresentado no cap\u00edtulo 3, \u00e9 dividido em tr\u00eas par-\ntes: o c\u00f3digo que implementa os supervisores, as desabilita\u00e7\u00f5es e o sis-\n\n\n\n \nAplica\u00e7\u00e3o da metodologia a uma c\u00e9lula flex\u00edvel de manufatura  97 \n\n \n\n \n\ntema produto.  Cada trecho de c\u00f3digo \u00e9 inserido em m\u00f3dulos de proce-\ndimento do CLP Altus atrav\u00e9s da sua ferramenta de programa\u00e7\u00e3o Mas-\nterTool. Posteriormente, s\u00e3o implementadas em linguagem ladder as \nsequ\u00eancias operacionais que implementam os subsistemas: alimentado-\nres, esta\u00e7\u00f5es de trabalho, aduana e esteiras. Para os rob\u00f4s XR4 e SCA-\nRA, \u00e9 implementado um c\u00f3digo em linguagem de texto estruturado que \nserve de interface com os seu controladores. Finalmente, \u00e9 realizado um \nteste inicial de funcionamento do sistema, encontrando-se erros de pro-\ngrama\u00e7\u00e3o nas sequ\u00eancias operacionais dos alimentadores e do sistema \nde vis\u00e3o associado ao RANDOM que simula a opera\u00e7\u00e3o de teste. Estes \nproblemas foram resolvidos. \n\n5.5 FASE V: IMPLEMENTA\u00c7\u00c3O DE FUNCIONALIDADES B\u00c1SI-\nCAS DO SISTEMA SCADA \n\n\u00c9 criada uma nova aplica\u00e7\u00e3o, inserindo as tags relacionadas com \nas vari\u00e1veis do c\u00f3digo gerado na fase anterior e estabelecendo a comu-\nnica\u00e7\u00e3o Modbus RTU com o CLP Altus. N\u00e3o \u00e9 necess\u00e1rio instalar e \nconfigurar o software SacadBR, j\u00e1 que esse processo foi realizado para a \nCFM do cap\u00edtulo 4. Dessa forma se deu in\u00edcio \u00e0 implementa\u00e7\u00e3o de fun-\ncionalidades b\u00e1sicas do sistema SCADA.  \n\nO sin\u00f3tico \u00e9 implementado atrav\u00e9s de objetos gr\u00e1ficos associados \naos estados dos geradores do sistema produto. De igual forma como o \nexemplo do cap\u00edtulo 4, \u00e9 encontrado que esses estados n\u00e3o conseguem \nmostrar toda a informa\u00e7\u00e3o necess\u00e1ria e suficiente do processo. Essa \ninforma\u00e7\u00e3o est\u00e1 relacionada \u00e0 perman\u00eancia de pe\u00e7as nas esta\u00e7\u00f5es de \ntrabalho uma vez terminadas suas opera\u00e7\u00f5es correspondentes e ao per-\ncurso de pe\u00e7as pela esteira de alimenta\u00e7\u00e3o. Portanto, s\u00e3o descritos os \nestados dos 30 supervisores, determinando no final que aquela informa-\n\u00e7\u00e3o \u00e9 fornecida por alguns estados dos supervisores 4A, 4B, 4C, 6A, 6B, \n6C, 6D, 7A e 7B. Na tabela 5.4, s\u00e3o descritos esses estados para serem \ninclu\u00eddos posteriormente na implementa\u00e7\u00e3o do sin\u00f3tico. Cabe mencio-\nnar que os estados que t\u00eam mais de um significado associado a situa\u00e7\u00f5es \ndiferentes, n\u00e3o s\u00e3o inclu\u00eddos no sin\u00f3tico.  \n\nNa Figura 5.27 \u00e9 apresentado o sin\u00f3tico obtido com as informa-\n\u00e7\u00f5es anteriores, no qual podem ser observados quadros com os nomes \ndos geradores do sistema produto e dos supervisores utilizados, como \ntamb\u00e9m alguns objetos gr\u00e1ficos que aparecem quando um estado \u00e9 ati-\nvado.  \n\n \n\n\n\n \n98 Aplica\u00e7\u00e3o da metodologia a uma c\u00e9lula flex\u00edvel de manufatura \n\n \n\n \n\nTabela 5.4 Descri\u00e7\u00e3o dos estados relevantes dos supervisores para o sin\u00f3tico do \nsistema RHINO   \n\nSupervisor Estado Significado \n4A 1 Anel torneado \n4B 1 Base usinada \n4C 1 Cilindro torneado \n6A \u00bd Anel reprovado/aprovado \n6B 2/3 Base aprovada com disco no sistema de vi-\n\ns\u00e3o/Base reprovada. \n6C \u00bd Cilindro reprovado/aprovado. \n6D 1 Base aprovada esperando disco no sistema de \n\nvis\u00e3o. \n7A 1/2/3 Anel/Base/Cilindro em posi\u00e7\u00e3o 1 da esteira de \n\nalimenta\u00e7\u00e3o. \n7A 4/5/6 Anel/Base/Cilindro indo da posi\u00e7\u00e3o 1 \u00e0 posi\u00e7\u00e3o \n\n2 da esteira de alimenta\u00e7\u00e3o. \n7B 1/2/3 Anel/Base/Cilindro em posi\u00e7\u00e3o 2 da esteira de \n\nalimenta\u00e7\u00e3o.  \n7B 4/5/6 Anel/Base/Cilindro indo da posi\u00e7\u00e3o 1 \u00e0 posi\u00e7\u00e3o \n\n2 da esteira de alimenta\u00e7\u00e3o. \n10A/10B 2 Base com disco e anel na posi\u00e7\u00e3o 1/posi\u00e7\u00e3o 2 \n\nda mesa de montagem. \n10A/10B 3 Base com disco e cilindro na posi\u00e7\u00e3o 1/posi\u00e7\u00e3o \n\n2 da mesa de montagem. \n10A/10B 4 Conjunto pronto na posi\u00e7\u00e3o 1/posi\u00e7\u00e3o 2 da \n\nmesa de montagem. \n13 1 Conjunto pronto na esteira de sa\u00edda. \n\n \nSuponha que o sistema est\u00e1 operando em condi\u00e7\u00f5es normais e os \n\nquadros em cor verde significam o gerador ativo. Observa-se na Figura \n5.27, que o centro de usinagem, associado ao gerador ??, est\u00e1 operando \numa base (estado 1), representado por um c\u00edrculo verde pequeno nessa \nesta\u00e7\u00e3o. Por outro lado, o sistema de vis\u00e3o (gerador ??) reprova um anel \n(estado 1 do supervisor S6A) representado por um componente gr\u00e1fico \nem cor vermelha. Posteriormente essa pe\u00e7a \u00e9 transportada pelo rob\u00f4 \nXR4 (gerador ?\t) at\u00e9 o buffer de descarte (estado 9), ao passo que o \ntorno (gerador ??) finaliza sua opera\u00e7\u00e3o e o cilindro, em cor amarela, \nespera para ser transportado para o sistema de vis\u00e3o (estado 1 do super-\nvisor S4C).  \n\n \n\n\n\n \nAplica\u00e7\u00e3o da metodologia a uma c\u00e9lula flex\u00edvel de manufatura  99 \n\n \n\n \n\nG\n7\n\nS\n4\nBG\n5\n\nS\n4\nA\n\nS\n4\nC\n\nS\n6\nB\n\nG\n6\n\nS\n6\nA\n\nS\n6\nC\n\nS\n6\nD\n\nG\n8\n\nG\n1\n1\n\nG\n9\n\nG\n1\n2\n\n1S\n7\nB\n\n2\n3\n\n4S\n7\nB\n\n5\n6\n\n1S\n7\nA\n\n2\n3\n\n4S\n7\nA\n\n5\n6\n\nS\ne\nn\ns\no\nr\n\nJ\na\nn\ne\nla\n d\ne\n A\nla\nrm\ne\ns\n\nC\no\nm\na\nn\nd\no\ns\n\nM\no\nd\no\ns\n d\ne\n O\np\ne\nra\n\u00e7\n\u00e3\no\n d\no\n S\nis\nte\nm\na\n\nIn\nfo\nrm\na\n\u00e7\n\u00e3\no\n p\na\nra\n n\n\u00edv\ne\nis\n g\ne\nre\nn\nc\nia\nis\n\nS\ne\nn\ns\no\nr\n\n4\n1\n2\n\n8\n\nG\n8\n\n F\nig\n\nu\nra\n\n  \n5\n\n.2\n7\n\n S\nin\n\n\u00f3\nti\n\nco\n p\n\nar\na \n\no\n s\n\nis\nte\n\nm\na \n\nR\nH\n\nIN\nO\n\n \n\n\n\n \n100 Aplica\u00e7\u00e3o da metodologia a uma c\u00e9lula flex\u00edvel de manufatura \n\n \n\n \n\nQuando um anel \u00e9 aprovado, aparece um rob\u00f4 pequeno, animado \ne em cor laranja, indicando que o rob\u00f4 XR4 o est\u00e1 transportando at\u00e9 a \nesteira de alimenta\u00e7\u00e3o (estado 8 do gerador ?\t). Terminada esta opera-\n\u00e7\u00e3o, \u00e9 visualizado o percurso do anel sobre a esteira de alimenta\u00e7\u00e3o \n(gerador ?\n), relacionado aos estados 1 e 4 dos supervisores7A e 7B. \n\nO sin\u00f3tico mostra ainda a montagem de pe\u00e7as nas duas posi\u00e7\u00f5es \nda mesa de montagem realizada pelo rob\u00f4 SCARA (gerador ???) asso-\nciada aos supervisores 10A e 10B. O funcionamento das esteiras \u00e9 re-\npresentado por um componente animado associado aos geradores ?\n e \n???. Por sua vez, o conjunto final na esteira de sa\u00edda \u00e9 tamb\u00e9m represen-\ntado por um componente gr\u00e1fico associado ao supervisor S13. O sin\u00f3ti-\nco \u00e9 finalizado inserindo janela de alarmes, comandos para inicializa\u00e7\u00e3o \ndos modos de opera\u00e7\u00e3o e \u00edcones que permitem visualizar informa\u00e7\u00e3o \npara n\u00edveis gerenciais. \n\nOs comandos tamb\u00e9m foram implementados em linguagem de \ntexto estruturado de forma semelhante ao explicado na se\u00e7\u00e3o 4.2.2. \nQuando o sistema encontra-se no estado Manual, os eventos control\u00e1-\nveis associados a cada subsistema podem ser ativados atrav\u00e9s dos even-\ntos forca_equipamento inseridos no c\u00f3digo do sistema produto, expres-\nsos por comandos na tela implementada para tal fim, que \u00e9 visualizada \nna Figura 5.28.  \n\nO hist\u00f3rico de eventos para o sistema RHINO \u00e9 implementado da \nmesma forma como no exemplo da CFM do cap\u00edtulo 4. A Figura 5.29 \nilustra um hist\u00f3rico de eventos obtido com a aplica\u00e7\u00e3o do m\u00e9todo apre-\nsentado na se\u00e7\u00e3o 4.2.3. \n\nA gera\u00e7\u00e3o de alarmes cr\u00edticos segue a mesma sistem\u00e1tica da apre-\nsentada na se\u00e7\u00e3o 4.2.4. Na Figura 5.30 \u00e9 visualizado um trecho de c\u00f3di-\ngo do sistema produto onde \u00e9 implementado o evento control\u00e1vel \nI_tor_C do gerador ?? que representa o torno.  Suponha o sistema no \nestado Manual e as vari\u00e1veis unsafe e De_I_tor_C em zero. Quando \u00e9 \nativado o evento  I_tor_C, o gerador ??passa do estado 0 ao estado 2. \nNesse momento seu evento de desabilita\u00e7\u00e3o De_I_tor_C \u00e9 ativado, isto \n\u00e9, o evento I_tor_C n\u00e3o pode acontecer novamente. Se isso ocorrer a \npartir da ativa\u00e7\u00e3o do evento forca_tor_c, a vari\u00e1vel unsafe toma o valor \nda desabilita\u00e7\u00e3o, logo \u00e9 gerado um alarme com o nome sistema n\u00e3o \nseguro, o que indica que o operador violou alguma especifica\u00e7\u00e3o de \ncontrole, significando comportamento n\u00e3o desejado do sistema. Esse \nalarme deve ser reconhecido pelo operador a trav\u00e9s da janela de alarmes, \no que n\u00e3o implica que o sistema volte a um estado seguro. Nesta condi-\n\u00e7\u00e3o o sistema deve ser reinicializado. As 4 funcionalidades implementa-\n\n\n\n \nAplica\u00e7\u00e3o da metodologia a uma c\u00e9lula flex\u00edvel de manufatura  101 \n\n \n\n \n\ndas nesta fase foram verificadas em sua fun\u00e7\u00e3o at\u00e9 obter um desempe-\nnho satisfat\u00f3rio. \n\n \nFigura 5.28 Tela de comandos estado Manual \n\n  \nFigura 5.29 Hist\u00f3rico de eventos gerado para o sistema RHINO \n\n\n\n \n102 Aplica\u00e7\u00e3o da metodologia a uma c\u00e9lula flex\u00edvel de manufatura \n\n \n\n \n\n \n\nFigura 5.30Trecho de c\u00f3digo do evento control\u00e1vel I_tor_C \n\n5.6 FASE VI: AVALIA\u00c7\u00c3O DO FUNCIONAMENTO DO SISTEMA \nREAL \n\nNesta fase s\u00e3o conectados os dispositivos de campo ao CLP Al-\ntus. Em seguida s\u00e3o realizados testes de avalia\u00e7\u00e3o do funcionamento do \nsistema RHINO, auxiliados pelas funcionalidades implementadas na \nfase V, tais como: o sin\u00f3tico, os comandos, o hist\u00f3rico de eventos e os \nalarmes cr\u00edticos, encontrando-se novamente erros de programa\u00e7\u00e3o, desta \nvez na sequ\u00eancia operacional dos rob\u00f4s XR4 e SCARA e na implemen-\nta\u00e7\u00e3o do modo Manual, os quais puderam ser corrigidos voltando \u00e0 fase \nanterior. Cabe ressaltar que o uso do hist\u00f3rico de eventos foi decisivo \npara facilitar a resolu\u00e7\u00e3o dos problemas mencionados.   \n\n5.7 VII: IMPLEMENTA\u00c7\u00c3O DE FUNCIONALIDADES DO SISTE-\nMA SCADA  \n\nPara o sistema RHINO, s\u00e3o implementados 4 alarmes gerais; 3 \nreferentes \u00e0 disponibilidade de pe\u00e7as nos alimentadores de an\u00e9is, bases e \ncilindros e outro referente \u00e0 presen\u00e7a de pe\u00e7a na posi\u00e7\u00e3o 1 da esteira de \nalimenta\u00e7\u00e3o. Os alarmes dos alimentadores s\u00e3o gerados a partir do sinal \ndos sensores de toque associados a eles. J\u00e1 o alarme da esteira, \u00e9 gerado \nquando o sinal do sensor da primeira posi\u00e7\u00e3o n\u00e3o \u00e9 ativado quando os \nestados 1, 2 ou 3 do gerador S7A, os quais identificam uma pe\u00e7a nessa \nposi\u00e7\u00e3o como pode ser visto na tabela 5.4, dizem o contr\u00e1rio. A Figura \n5.31 apresenta o c\u00f3digo que implementa este alarme. \n\n \n\n\n\n \nAplica\u00e7\u00e3o da metodologia a uma c\u00e9lula flex\u00edvel de manufatura  103 \n\n \n\n \n\nFigura 5.31 C\u00f3digo que implementa o alarme da esteira de alimenta\u00e7\u00e3o  \n \nConforme mencionado, o sistema RHINO fabrica um produto \n\nconstitu\u00eddo de 4 pe\u00e7as. Ent\u00e3o \u00e9 implementada uma receita para determi-\nnar a quantidade de produtos que deve ser fabricada. Isto \u00e9 feito com um \nc\u00f3digo em linguagem de texto estruturado, apresentado na Figura 5.32, \nque faz uma contagem de conjuntos prontos toda vez que um deles \u00e9 \ndepositado na esteira de sa\u00edda, atrav\u00e9s dos eventos e_F_col_Pronta1_es  \ne e_F_col_Pronta2_es. Suponha que o operador do sistema digite 4 no \ncampo N de conjuntos a fabricar na tela da receita, Figura 5.33, o qual \nest\u00e1 associado \u00e0 vari\u00e1vel receita_scada. Esse valor \u00e9 comparado com o \nvalor mostrado no campo Conjuntos fabricados, que no c\u00f3digo est\u00e1 \nassociado \u00e0 vari\u00e1vel num_conjunto_pronto. Se os valores s\u00e3o iguais, a \nvari\u00e1vel pausa, discutida anteriormente, \u00e9 ativada, n\u00e3o permitindo a \nfabrica\u00e7\u00e3o de mais conjuntos at\u00e9 ativar o campo Nova Receita que colo-\nca em zero a vari\u00e1vel pausa, possibilitando a gera\u00e7\u00e3o de uma nova re-\nceita para o processo. \n\n \n\n \nFigura 5.32 C\u00f3digo que implementa uma receita no sistema RHINO  \n \n\n\n\n \n104 Aplica\u00e7\u00e3o da metodologia a uma c\u00e9lula flex\u00edvel de manufatura \n\n \n\n \n\n \n\nFigura 5.33 \u00a1Error! No hay texto con el estilo especificado en el documen-\nto.Tela da receita \n\n \nUma informa\u00e7\u00e3o que pode ser relevante para este processo \u00e9 sa-\n\nber quantas pe\u00e7as foram aprovadas e reprovadas durante um ciclo nor-\nmal de opera\u00e7\u00e3o. Ent\u00e3o, s\u00e3o inseridas seis novas vari\u00e1veis no c\u00f3digo do \nsistema produto, na parte de eventos n\u00e3o control\u00e1veis, chamadas conta-\ndor_anel_a, contador_base_a, contador_cilindro_a, contador_anel_r, \ncontador_base_r e contador_cilindro_r, as quais realizam a contagem \nde an\u00e9is, bases e cilindros aprovados e reprovados respectivamente, \nquando os eventos F_tes_a_ok, F_tes_b_ok, F_tes_c_ok, F_tes_a_nok, \nF_tes_b_nok, F_tes_c_nok s\u00e3o ativados. Na Figura 5.34 \u00e9 visualizado \num trecho de c\u00f3digo que implementa a contagem de an\u00e9is aprovados e \nrepovados. A Figura 5.35 mostra as tend\u00eancias para as vari\u00e1veis men-\ncionadas acima.  \n\n \n\n\n\n \nAplica\u00e7\u00e3o da metodologia a uma c\u00e9lula flex\u00edvel de manufatura  105 \n\n \n\n \n\nFigura 5.34Trecho de c\u00f3digo contagem de an\u00e9is aprovados e reprovados \n\n \nFigura 5.35Tend\u00eancias de aprova\u00e7\u00e3o e reprova\u00e7\u00e3o de pe\u00e7as \n\n \nO exemplo de relat\u00f3rio apresentado aqui \u00e9 o mesmo gerado para \n\na CFM. A Figura 5.36 mostra parte do relat\u00f3rio gerado para a vari\u00e1vel \ndescri\u00e7\u00e3o_estados que representa o hist\u00f3rico de eventos para o sistema \nRHINO. \n\n \n\n\n\n \n106 Aplica\u00e7\u00e3o da metodologia a uma c\u00e9lula flex\u00edvel de manufatura \n\n \n\n \n\nFigura 5.36 Relat\u00f3rio do hist\u00f3rico de eventos do sistema RHINO  \n\n5.8 FASE VIII: VALIDA\u00c7\u00c3O \n\nO ciclo de desenvolvimento desta metodologia \u00e9 encerrado reali-\nzando testes finais de opera\u00e7\u00e3o do sistema RHINO com todas as funcio-\nnalidades do SCADA implementadas, as quais fornecem uma vis\u00e3o \nglobal do sistema em funcionamento. O sistema \u00e9 submetido a in\u00fameros \nciclos de fabrica\u00e7\u00e3o de conjuntos de pe\u00e7as sem encontrar nenhum tipo \nde bloqueio, determinando assim que a coordena\u00e7\u00e3o entre os subsiste-\nmas est\u00e1 de acordo com as leis de controle especificadas. Ao final do \nprocesso, observa-se um sistema SCADA integrado ao CLP, funcionan-\ndo de forma satisfat\u00f3ria. \n\n5.9 AN\u00c1LISE DE RESULTADOS \n\nA aplica\u00e7\u00e3o da metodologia proposta no cap\u00edtulo 4 para o sistema \nRHINO permitiu um desenvolvimento sistem\u00e1tico, flex\u00edvel e eficiente \ndo projeto de controle em CLP integrado ao sistema SCADA. Isso se d\u00e1 \npelo fato de ser implementada seguindo os procedimentos que caracteri-\nzam cada uma de suas fases, ao passo de tornar poss\u00edvel a realiza\u00e7\u00e3o de \nreconfigura\u00e7\u00e3o e altera\u00e7\u00e3o na l\u00f3gica de controle de forma r\u00e1pida e pon-\ntual, como tamb\u00e9m a efic\u00e1cia advinda da aplica\u00e7\u00e3o de testes para detec-\n\u00e7\u00e3o de erros. \n\nA estrutura\u00e7\u00e3o da l\u00f3gica de controle na forma de geradores per-\nmite que informa\u00e7\u00f5es do sistema real sejam coletadas a partir dos esta-\ndos dos modelos das plantas e supervisores implementados no CLP, \nmesmo na aus\u00eancia de sensores que forne\u00e7am diretamente essas infor-\nma\u00e7\u00f5es. Assim a aplica\u00e7\u00e3o das especifica\u00e7\u00f5es de controle sobre o siste-\nma pode ser visualizada em tempo real. O monitoramento completo, \ncontrole e distribui\u00e7\u00e3o dos dados de toda a planta contribuem para a \ntomada de decis\u00f5es produtivas. \n\nAl\u00e9m do mais, a integra\u00e7\u00e3o das funcionalidades do sistema \nSCADA com o c\u00f3digo de controle supervis\u00f3rio permitiu a identifica\u00e7\u00e3o \ne corre\u00e7\u00e3o de erros de programa\u00e7\u00e3o e digita\u00e7\u00e3o. Estas funcionalidades \ntamb\u00e9m permitiram tanto a visualiza\u00e7\u00e3o do modo de opera\u00e7\u00e3o do siste-\nma (inicializa\u00e7\u00e3o de software, inicializa\u00e7\u00e3o do sistema f\u00edsico, inativo, \nsupervisionado, manual e emerg\u00eancia) por meio do sin\u00f3tico, quanto \u00e0 \ncondu\u00e7\u00e3o do sistema ao estado inicial, supervisionado e manual, atrav\u00e9s \nde comandos. \n\n\n\n \nAplica\u00e7\u00e3o da metodologia a uma c\u00e9lula flex\u00edvel de manufatura  107 \n\n \n\n \n\nDe forma similar foi poss\u00edvel a gera\u00e7\u00e3o seletiva dos eventos con-\ntrol\u00e1veis no estado manual, associados aos subsistemas do sistema \nRHINO. Nesse estado, s\u00e3o gerados alarmes ligados ao estado ativo da \nvari\u00e1vel unsafe, indicando que o sistema tem violado alguma especifica-\n\u00e7\u00e3o de controle. Tamb\u00e9m foram implementadas 3 alarmes combinando \nos estados 1, 2 e 3 do supervisor 7A com o sensor da esteira de alimen-\nta\u00e7\u00e3o para sinalizar a aus\u00eancia de pe\u00e7a sobre a esteira num processo \nnormal de opera\u00e7\u00e3o. \n\nPor outro lado, foi poss\u00edvel a gera\u00e7\u00e3o de receitas baseadas na in-\nforma\u00e7\u00e3o inserida na representa\u00e7\u00e3o gr\u00e1fica da receita que se encontra na \naplica\u00e7\u00e3o SCADA, e dos eventos do fim do dep\u00f3sito de conjuntos finais \nsobre a esteira de sa\u00edda. Tamb\u00e9m foram geradas tend\u00eancias, hist\u00f3ricos e \nrelat\u00f3rios dos eventos control\u00e1veis e n\u00e3o control\u00e1veis para o tratamento \nde falhas. \n\nInfelizmente, o teste de modularidade local n\u00e3o p\u00f4de ser realiza-\ndo completamente devido \u00e0 grande quantidade de supervisores envolvi-\ndos no controle do sistema RHINO, o que leva a uma explos\u00e3o do espa-\n\u00e7o de estados e representa um problema recorrente no controle modular \nlocal e na TCS como um todo. Entretanto, conseguiu-se realizar o pro-\nduto s\u00edncrono de 23 supervisores locais. O gerador resultante foi trim o \nque significa que a a\u00e7\u00e3o conjunta destes supervisores \u00e9 n\u00e3o bloqueante \npelo menos at\u00e9 a entrada de pe\u00e7as na esteira de alimenta\u00e7\u00e3o. Isso n\u00e3o \ngarante aus\u00eancia de bloqueio, ap\u00f3s todas as demais especifica\u00e7\u00f5es serem \natendidas. \n  \n\n\n\n \n108 Aplica\u00e7\u00e3o da metodologia a uma c\u00e9lula flex\u00edvel de manufatura \n\n \n\n \n\n \n \n\n\n\n \n\n6. CONCLUS\u00d5ES \n\n \nOs sistemas SCADA atendem \u00e0s necessidades industriais, visto \n\nque o monitoramento completo, controle e distribui\u00e7\u00e3o dos dados de \ntoda planta auxilia nas tomadas de decis\u00f5es mais r\u00e1pidas, eficientes e \nprodutivas, que permitem \u00e0 empresa significativa vantagem competitiva. \nO sucesso depende muito da habilidade para acessar, entender e inter-\npretar o grande volume de informa\u00e7\u00f5es geradas pela opera\u00e7\u00e3o do pro-\ncesso. E o monitoramento completo, controle e distribui\u00e7\u00e3o dos dados \nde toda planta auxilia nas tomadas de decis\u00e3o mais r\u00e1pidas, eficientes. \n\nExistem na literatura acad\u00eamica, poucas metodologias que tratam \no desenvolvimento de Sistemas SCADA para sistemas de manufatura; \nalgumas que se preocupam com a valida\u00e7\u00e3o da implementa\u00e7\u00e3o da l\u00f3gica \nde controle em v\u00e1rios CLP e nenhuma que integre as funcionalidades do \nsistema SCADA ao controle supervis\u00f3rio programado em CLP. Este \ntrabalho apresentou uma metodologia que abrange essa integra\u00e7\u00e3o, apli-\ncada ao sistema RHINO apresentado no cap\u00edtulo 5, como tamb\u00e9m ao \ntrabalho de Silva e Queiroz (2009) que j\u00e1 contava com uma l\u00f3gica de \ncontrole definida pela ACS (QUEIROZ e CURY, 2002). \n\nEsta metodologia utiliza a TCS em sua abordagem modular local, \na programa\u00e7\u00e3o da ACS em linguagem de texto estruturado e as funcio-\nnalidades oferecidas pelos Sistemas SCADA, para controlar e supervisi-\nonar um sistema de manufatura. Assim, foi proposto um m\u00e9todo de \nimplementa\u00e7\u00e3o de funcionalidades de SCADA que fazem proveito da \nestrutura de implementa\u00e7\u00e3o de controle supervis\u00f3rio modular local, as \nquais s\u00e3o relacionadas a seguir:  \n\n\u2022 Acompanhamento do processo de produ\u00e7\u00e3o em tempo real e a-\npresenta\u00e7\u00e3o das informa\u00e7\u00f5es por meio de interfaces gr\u00e1ficas ba-\nseadas nos estados dos geradores e no c\u00f3digo que implementa o \nsistema produto e os supervisores;  \n\n\u2022 Execu\u00e7\u00e3o de comandos para ativar os diversos modos de opera-\n\u00e7\u00e3o do sistema e ativa\u00e7\u00e3o seletiva de eventos control\u00e1veis no \nmodo manual, por parte do operador; \n\n\u2022 Gera\u00e7\u00e3o do hist\u00f3rico da sequ\u00eancia de eventos control\u00e1veis e \nn\u00e3o control\u00e1veis ocorridos durante o ciclo de opera\u00e7\u00e3o normal, \no qual permite detectar erros de programa\u00e7\u00e3o e mau funciona-\nmento de equipamentos e determinar causas de bloqueio; \n\n\n\n \n110 Conclus\u00f5es \n\n \n\n \n\n\u2022 Gera\u00e7\u00e3o e visualiza\u00e7\u00e3o de alarmes baseados na informa\u00e7\u00e3o ob-\ntida de sensores e estados do sistema produto e supervisores in-\ndicando falhas do sistema;  \n\n\u2022 Execu\u00e7\u00e3o de receitas e gera\u00e7\u00e3o de informa\u00e7\u00e3o relevante para os \nn\u00edveis gerenciais, baseadas igualmente em informa\u00e7\u00e3o de esta-\ndos e/ou eventos dos geradores;  \n\n\u2022 Gera\u00e7\u00e3o de relat\u00f3rios e tend\u00eancias de qualquer vari\u00e1vel associ-\nada ao controle supervis\u00f3rio que sirva de suporte na tomada de \ndecis\u00f5es sobre o processo produtivo e no tratamento de falhas.  \n\n \nA metodologia proposta \u00e9 validada com a aplica\u00e7\u00e3o ao sistema \n\nRHINO seguindo todas suas fases. Uma limita\u00e7\u00e3o da aplica\u00e7\u00e3o da abor-\ndagem modular local encontrada particularmente neste caso, foi n\u00e3o \npoder realizar o teste de modularidade local devido \u00e0 explos\u00e3o do espa-\n\u00e7o de estados, resultante da composi\u00e7\u00e3o s\u00edncrona de uma grande quanti-\ndade de supervisores locais, aumentando desta forma a complexidade \ncomputacional cujas ferramentas como TCT e Supremica n\u00e3o consegui-\nram resolver. Ainda assim, a abordagem modular local traz benef\u00edcios \nevidentes quando comparada aos procedimentos monol\u00edticos. Al\u00e9m do \nmais, essa abordagem \u00e9 decisiva quando se deseja introduzir ou alterar \numa especifica\u00e7\u00e3o, j\u00e1 que n\u00e3o \u00e9 necess\u00e1rio realizar novamente a s\u00edntese \nde todo o conjunto de supervisores, mas apenas da parte espec\u00edfica que \nfoi alterada ou introduzida. Al\u00e9m do mais, algumas alternativas que de \ncerta forma fogem do escopo deste trabalho, poderiam ser adotadas para \nlidar especificamente com a complexidade do teste de modularidade, \ncomo por exemplo, o uso de abstra\u00e7\u00f5es (PENA et al., 2009). \n\nDesta forma foi emulado o comportamento do sistema com os \nsupervisores obtidos com a ferramenta Supremica, tendo como resultado \num comportamento satisfat\u00f3rio. As funcionalidades do sistema SCADA \nforam implementadas com sucesso, possibilitando uma avalia\u00e7\u00e3o do \nfuncionamento geral do sistema. Ap\u00f3s aplica\u00e7\u00e3o da \u00faltima fase da me-\ntodologia, concluiu-se que o sistema RHINO opera satisfatoriamente. \n\nA ferramenta Ides2ST, baseada na estrutura gen\u00e9rica de controle \nsupervis\u00f3rio, diminuiu o tempo de implementa\u00e7\u00e3o do controlador, per-\nmitindo a gera\u00e7\u00e3o autom\u00e1tica de c\u00f3digo em linguagem de texto estrutu-\nrado (ST) de forma clara e sistem\u00e1tica. Estas caracter\u00edsticas tornaram \nposs\u00edvel a integra\u00e7\u00e3o do c\u00f3digo do CLP com as funcionalidades do sis-\ntema SCADA. Por outro lado, o software ScadaBR usado na integra\u00e7\u00e3o \napresentou bastante problemas no in\u00edcio deste trabalho, associadas \u00e0 \ncomunica\u00e7\u00e3o serial Modbus com o CLP, al\u00e9m de n\u00e3o possuir muitas \n\n\n\n \nConclus\u00f5es 111 \n\n \n\n \n\nop\u00e7\u00f5es para elaborar sin\u00f3ticos e scripts. Isso atrasou a implementa\u00e7\u00e3o \npreliminar que deu origem \u00e0 metodologia proposta, devido a ser um \nsoftware ainda em desenvolvimento. No entanto, com o decorrer do \ntrabalho, mais especificamente no come\u00e7o de 2011, os desenvolvedores \ndo software foram adicionando mais protocolos, novas funcionalidades \npara scripting, novo construtor de telas e componentes gr\u00e1ficos, o que \npermite ser mais robusto na implementa\u00e7\u00e3o de sistemas SCADA em \nprocessos industriais. \n\n A aplica\u00e7\u00e3o desta metodologia confere sistematiza\u00e7\u00e3o, flexibili-\ndade e efici\u00eancia ao projeto de controle e supervis\u00e3o de sistemas de \nmanufatura. Todo o processo de sistematiza\u00e7\u00e3o contribui para a diminu-\ni\u00e7\u00e3o do tempo necess\u00e1rio ao desenvolvimento de cada projeto l\u00f3gico. \nSoma-se a esse fato, uma maior estrutura\u00e7\u00e3o ao projeto de controlado-\nres, deixando a l\u00f3gica de controle e sua programa\u00e7\u00e3o mais clara para o \nprojetista e os operadores do sistema, ao passo que permite a valida\u00e7\u00e3o \nde solu\u00e7\u00f5es de controle.  \n\nNa continuidade deste trabalho pode-se citar a aplica\u00e7\u00e3o desta \nmetodologia para gerenciar sistemas mais complexos distribu\u00eddos com \nCLP. Outra perspectiva para trabalhos futuros \u00e9 a integra\u00e7\u00e3o da estrutura \nproposta com os n\u00edveis superiores da pir\u00e2mide da automa\u00e7\u00e3o de forma \nque as ferramentas de planejamento e programa\u00e7\u00e3o da produ\u00e7\u00e3o possam \ndefinir a escolha de eventos atrav\u00e9s do sistema SCADA, otimizando o \nuso de recursos do sistema na execu\u00e7\u00e3o de m\u00faltiplas tarefas. Se o crit\u00e9-\nrio de otimiza\u00e7\u00e3o for o menor tempo de produ\u00e7\u00e3o tem-se um problema \nde escalonamento da produ\u00e7\u00e3o que poder ser resolvido atrav\u00e9s de heu-\nr\u00edsticas ou mesmo pelo uso da Teoria de Controle Supervis\u00f3rio. Pode-se \nainda fazer a escolha de eventos de forma que os caminhos habilitados \nn\u00e3o levem a bloqueio, resolvendo assim o problema de conflito em su-\npervisores modulares. \n  \n\n\n\n \n112 Conclus\u00f5es \n\n \n\n \n\n \n \n\n\n\n \n\nREFER\u00caNCIAS \n \n \n\nAKESSON, K. Methods and Tools in Supervisory Control Theory. \nPhD Thesis, Chalmers University of Technology, Sweden, \n2002. \n\nALMEIDA, F. R. M. Sistemas SCADA e Aplica\u00e7\u00e3o. Monografia (Gra-\ndua\u00e7\u00e3o Engenharia El\u00e9trica) \u2013 Universidade Federal do Cear\u00e1, \nCentro de Tecnologia, Fortaleza, 2009. \n\nBAILEY, D e WRIGHT, E. Practical SCADA for Industry. Perth, \nAustralia, 2003. \n\nBALIEIRO, D. Aplica\u00e7\u00e3o da Teoria de Controle Supervis\u00f3rio no \nprojeto de controladores para sistemas de Rota vari\u00e1vel cen-\ntrado em rob\u00f4 PPGEPS. Disserta\u00e7\u00e3o (Mestrado em Engenha-\nria de Produ\u00e7\u00e3o e Sistemas) \u2013 Pontif\u00edcia Universidade Cat\u00f3lica \ndo Paran\u00e1, Curitiba, 2007. \n\nBOARETTO, N. Sistemas Supervis\u00f3rios. Instituto Federal Santa Cata-\nrina, Joinville, 2008. \n\nBOUZON, G; QUEIROZ, M.H. e CURY, J.E.R. Controle Supervis\u00f3rio \nde Sistemas a Eventos Discretos com Sensores Distinguidores. \n\nBOUZON, G.; de QUEIROZ, M. H. e Cury, J. E. Supervisory Control \nof DES with Distinguishing Sensors. Proc. 9th Workshop on \nDiscrete Event Systems, Gothenburg, Sweden, pp. 390\u2013391, \n2008.  \n\nBOYER, Stuart A. SCADA: supervisory control and data acquisi-\ntion. ISA \u2013 Instrument Society of America, USA, 2004. \n\nBUSSETI, M. A.; SANTOS, E. A. P. A project Methodology Applied \nto Automated and Integrated Manufacturing Systems. Third \nInternational Conference on Production Research Americas? \nRegion, Curitiba, Brazil, 2006. \n\nCAB\u00daS, J.R.; NAVARRETE, D.G. e PORRAS, R.P. Sistemas SCA-\nDA. Miniproyecto Automatizaci\u00f3n Industrial. Especialidad \n(Electr\u00f3nica Industrial). Escola Polit\u00e8cnica Superior d\u2019 Engin-\nyeria de Vilanova i La Geltr\u00fa. Universitat Polit\u00e9cnica de Cata-\nlunya. 2004 \n\nCASSANDRAS, G.C.; LAFORTUNE, S. Introduction to Discrete \nEvent Systems. KLUWER Academic Publishers, Massachsetts, \nUSA, 1999. \n\nCHANDRA, V.; ORUGANTI, B.; KUMAR, R. UKDES. A graphical \nsoftware tool for the design, analysis e control of discrete \n\n\n\n \n114 Refer\u00eancias Bibliogr\u00e1ficas \n\n \n\n \n\nevent systems. clue.eng.iastate.edu/~rkumar/PUBS/ukdes.ps. \n8:32, 2011. \n\nCHANDRA, V.; HUANG, Z.; KUMAR, R. Automated Control Syn-\nthesis for na Assembly Line Using Discrete Event System \nControl Theory. Transactions on Systems, Man and Cybernet-\nics IEEE Vol. 33, N\u00ba 2, May, 2003. \n\nCOELHO, M. S. Apostila de Sistemas Supervis\u00f3rios. Curso superior \nde tecnologia em automa\u00e7\u00e3o e controle de processos industriais \ncont\u00ednuos. Instituto federal de educa\u00e7\u00e3o, ci\u00eancia e tecnologia de \nS\u00e3o Paulo campus Cubat\u00e3o, 2010. \n\nCOSTA, G.O. Uma Plataforma Computacional de Suporte ao Ciclo \nde Desenvolvimento de Sistemas Automatizados de Manufa-\ntura. Disserta\u00e7\u00e3o (Mestrado em Engenharia de Produ\u00e7\u00e3o e Sis-\ntemas) \u2013 Pontif\u00edcia Universidade Cat\u00f3lica do Paran\u00e1, Curitiba, \n2005. \n\nCURY, J. E. R. Teoria de Controle Supervis\u00f3rio de Sistemas a Even-\ntos Discretos. V Simp\u00f3sio Brasileiro de Automa\u00e7\u00e3o Inteligente, \nGramado, 2001. \n\nDIOGO, R.A.; VICARI, C. A.; LOURES, E. F. R.; BUSETTI, M. A.; \nSANTOS, E. A. P. An Implementation Environment for Au-\ntomated Manufacturing Systems. 17th IFAC World Congress. \nSeoul, Korea, 2008. \n\nFABIAN, M e HELLGREN A. Desco \u2013 a Tool for Education and \nControl of Discrete Event Systems. Kluwer Academic Pub-\nlishers, 2000. \n\nFENG, L. e WONHAM, W. TCT: A computation tool for supervi-\nsory control synthesis. Eighth International Workshop on Dis-\ncrete Event Systems, Ann Arbor, pp. 388\u2013389, 2006. \nhttp://www.control.toronto.edu/people/profs/wonham/wonham.\nhtml \n\nGOUYON, D.; PETIN, J. F.; GOUIN, A. Pragmatic approach for \nmodular control synthesis and implementation. International \nJournal of Production Research Vol.42, N\u00ba 14, July, 2004. \n\nGRIGOROV, L. Template Design of Discrete-Event Systems. Project \nreport, School of Computing, Queen\u2019s University, Canada, 2007. \nhttp://www.cs.queensu.ca/~grigorov/ \n\nGROOVER, M.P. Automation, Production Systems and Computer \nIntegrated Manufacturing. Ed. Prentice Hall 2\u00aa ed. New Jer-\nsey, 2001. \n\nIEC 61131-3. International Electrotechnical Commission Program-\nmable Controllers. Part 3: Programming Languages, 1998. \n\n\n\n \nRefer\u00eancias Bibliogr\u00e1ficas 115 \n\n \n\n \n\nIEEE Standard for SCADA and Automation Systems, IEEE Power En-\ngineering Society, 2008. \n\nKLINGE, S. Supervisory control of a manufacturing cell: modeling \nand implementation. (Minor Thesis) - Fakult\u00e4t f\u00fcr Elektro-\ntechnik und Informationstechnik, Otto-von\u2013Guericke-\nUniversit\u00e4t Magdeburg, 2007. \n\nKRUTZ, Ronald. Securing SCADA Systems. Wiley Publishing, Inc. \nIndiana, 2004. \n\nCLP ALTUS. Manuais MP399102, MP399103 e MP399104. Dispon\u00ed-\nvel em:&lt;http://www.altus.com.br/site_ptbr//>, 01/03/2010. \n\nMARTINS, V. BREMER, C.F. Proposta de uma Ferramenta de Inte-\ngra\u00e7\u00e3o entre Sistema ERP-SCADA: Caso Pr\u00e1tico. XXII En-\ncontro Nacional de Engenharia de produ\u00e7\u00e3o. Curitiba-PR, 23 a \n25 de outubro de 2002. \n\nMORAES, C. C.; CASTRUCCI, P. L. Engenharia de Automa\u00e7\u00e3o \nIndustrial. Livros T\u00e9cnicos e Cient\u00edficos (LTC), 2001. \n\nMORAES, C.C.; CASTRUCCI, L.C. Engenharia de Automa\u00e7\u00e3o In-\ndustrial, Editora LTC, Brasil, 2008. \n\nMODBUS. Dispon\u00edvel em:&lt;http:// http://www.modbus.org//>, \n05/06/2010. \n\nPINNHEIRO, J.M.S. Introdu\u00e7\u00e3o \u00e0s Redes de Supervis\u00e3o e Controle. \n2006. Dispon\u00edvel em: \nhttp://www.projetoderedes.com.br/artigos/artigo_redes_de_supe\nrvisao_e_controle.php 15/04/2010. \n\nPENA, P., CURY, J., e LAFORTUNE, S.Verification of Nonconflict \nof Supervisors Using Abstractions. IEEE Transactions on Au-\ntomatic Control, Vol. 54, No. 12, p. 2803, 2009. \n\nPENIN, A.R. Sistemas SCADA \u2013 2da. Edici\u00f3n. M\u00e9xico D.F, pp. 55-57, \n2007 \n\nRAMADGE, P. J. G.; WONHAM, W.M. The control of discrete event \nsystems. Proceedings of the IEEE, v. 77, n. 1, pp. 81-98, Janu-\nary 1989;  \n\nREISER, C. O Ambiente GRAIL para Controle Supervis\u00f3rio de \nSistemas a Eventos Discretos: Reestrutura\u00e7\u00e3o e Implemen-\nta\u00e7\u00e3o de Novos Algoritmos. Disserta\u00e7\u00e3o, Universidade Federal \nde Santa Catarina, 2005. \n\nQUEIROZ, M.H. e CURY, J.E.R. Modular supervisory control of \nlarge scale discrete event systems. Proceedings of the 5th In-\nternational Workshop on Discrete Event Systems, Ghent, Bel-\ngium, pp. 103 \u2013 110, 2000. \n\n\n\n \n116 Refer\u00eancias Bibliogr\u00e1ficas \n\n \n\n \n\nQUEIROZ, M.H. Controle Supervis\u00f3rio Modular de Sistemas de \nGrande Porte. Disserta\u00e7\u00e3o (Mestrado em Engenharia El\u00e9trica) \n- Programa de P\u00f3s-gradua\u00e7\u00e3o em Engenharia El\u00e9trica, Universi-\ndade Federal de Santa Catarina, Florian\u00f3polis, 2000. \n\nQUEIROZ, M.H. de; CURY, J. E. R. Controle Supervis\u00f3rio Modular \nde Sistemas de Manufatura. SBA. Sociedade Brasileira de \nAutom\u00e1tica, Campinas, v. 13, n. 2, pp. 123-133, 2002.  \n\nQUEIROZ, M.H. de ; CURY, J.E.R. Synthesis and implementation of \nlocal modular supervisory control for a manufacturing cell. \nIn: Sixth International Workshop on Discrete Event Systems, \nZaragoza, 2002.  \n\nQUEIROZ, M.H. Controle supervis\u00f3rio modular e multitarefa de \nsistemas compostos. Tese (Doutorado em Engenharia El\u00e9trica) \n- Programa de P\u00f3s-gradua\u00e7\u00e3o em Engenharia El\u00e9trica, Universi-\ndade Federal de Santa Catarina, Florian\u00f3polis, 2004. \n\nREYES, D.A.H. Las telecomunicaciones aplicadas a los procesos \nproductivos de petr\u00f3leos mexicanos. M\u00e9xico, 2007. \n\nRAYMOND, D.R. e WOOD, D. Grail: A C++ Library for Automata \nand Expressions. Journal of Symbolic Computation, \n17(4):341\u2013350, 1994. \n\nROCHA, Victor. Automa\u00e7\u00e3o e Sensoreamento Remoto utilizando \nSoftware Livre \"SCADA\u201d. Dispon\u00edvel em:  \nhttp://www.vivaolinux.com.br/artigo/Automacao-e-\nSensoreamento-Remoto-utilizando-Software-Livre-SCADA/, \n12/05/2011. \n\nSILVA, Y.G. e QUEIROZ, M.H. Formal syntheis, simulation and \nautomatic code generation of supervisory control for a \nmanufacturing cell. Proceedings of the 20th International Con-\ngress of Mechanical Engineering, Gramado, Brazil, 2009. \n\nSILVA, Y.G. Controle supervis\u00f3rio modular local de sistemas de \nve\u00edculos auto-guiados. Disserta\u00e7\u00e3o (Mestrado em Engenharia \nde Automa\u00e7\u00e3o e Sistemas) - Programa de P\u00f3s-gradua\u00e7\u00e3o em \nEngenharia de Automa\u00e7\u00e3o e Sistemas, Universidade Federal de \nSanta Catarina, Florian\u00f3polis, 2010. \n\nSILVA, A.P.G. da e SALVADOR, M. O que s\u00e3o sistemas Supervis\u00f3-\nrios?. Elipse, 2005. \n\nSTOUFFER, K.; FALCO, J. e KENT, K. Guide to Supervisory Con-\ntrol and Data Acquisition (SCADA) and Industrial Control \nSystems Security. Recommendations of the National Institute \nof Standards and Technology, pp. 1, 2-13, Gaithersburg, 2006. \n\n\n\n \nRefer\u00eancias Bibliogr\u00e1ficas 117 \n\n \n\n \n\nSU, R. e WONHAM, W.M. Supervisor reduction for discrete event \nsystems, Discrete Event Dynamic Systems, Vol. 14, No. 1, pp. \n31-53, 2004. \n\nVAZ, A. F. e WONHAM, W. M. On supervisor reduction in discrete-\nevent systems. International Journal of Control, v. 44, n. 2, pp. \n475-491, 1996. \n\nVIANNA, W.D.S.; BRINGHENTI, P.M. e MARTINS, L.D.S. Sistema \nSCADA Supervis\u00f3rio. Instituto Federal Fluminense de Educa-\n\u00e7\u00e3o Ci\u00eancia e Tecnologia. Campos dos Goytacazes, Rio de Ja-\nneiro, 2008. \n\nVIEIRA, A.D.; CURY, J.E.R.; QUEIROZ, M. H. de. Um modelo para \nimplementa\u00e7\u00e3o de controle supervis\u00f3rio em controladores \nl\u00f3gico program\u00e1veis. In: XVI Congresso Brasileiro de Auto-\nm\u00e1tica (CBA2006), Salvador, 2006.  \n\nVIEIRA, A. D. Modelo de implementa\u00e7\u00e3o do controle de sistemas a \neventos discretos com aplica\u00e7\u00e3o da Teoria de Controle Su-\npervis\u00f3rio. Tese (Doutorado em Engenharia El\u00e9trica) - Progra-\nma de P\u00f3s-gradua\u00e7\u00e3o em Engenharia El\u00e9trica, Universidade Fe-\nderal de Santa Catarina, Florian\u00f3polis, 2007. \n\nWONHAM, W.M. Notes on control of discrete-event systems. De-\npartment of Electrical and Computer Engineering, University of \nToronto, 2008."}]}}}