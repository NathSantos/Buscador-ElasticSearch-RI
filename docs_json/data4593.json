{"add": {"doc": {"field": [{"@name": "docid", "#text": "BR-TU.07036"}, {"@name": "filename", "#text": "11669_206538.pdf"}, {"@name": "filetype", "#text": "PDF"}, {"@name": "text", "#text": "DANILO DE PAULA E SILVA\nModelagem, An\u00e1lise e Controle Supervis\u00f3rio de Sistemas H\u00edbridos em uma Planta Piloto\nFlorian\u00f3polis\n2004\nUniversidade Federal de Santa Catarina\nPrograma de P\u00f3s-Grad\u00fca\u00e7A\u00fc em Engenharia El\u00e9trica\nModelagem, An\u00e1lise e Controle Supervis\u00f3rio de Sistemas H\u00edbridos em uma Planta Piloto\nTese submetida \u00e0\nUniversidade Federal de Santa Catarina como requisito para a\nobten\u00e7\u00e3o do grau de Mestre em Engenharia El\u00e9trica\nDanilo de Paula e Silva\nFlorian\u00e9polis, maio de 2004.\nModelagem, An\u00e1lise e Controle Supervis\u00f3rio de Sistemas H\u00edbridos em uma Planta Piloto Danilo de Paula e Silva\nEsta Tese foi julgada adequada para obten\u00e7\u00e3o do T\u00edtulo de Mestre em Engenharia El\u00e9trica, Area de Concentra\u00e7ao em Controle, Automa\u00e7\u00e3o e Inform\u00e1tica Industrial, e aprovada em sua forma final pelo Programa de P\u00e9s-Gradua\u00e7ao em Engenharia El\u00e9trica da Universidade Federal de Santa Catarina.\nProf. Jos\u00e9 Eduardo Ribeiro Cury, Dr. orientador\nJefferson Luiz Brum Marques, Dr\nCoordenador do curso de P\u00f3s-Gradua\u00e7ao em Engenharia El\u00e9trica da Universidade Federal de Santa Catarina.\nBanca Examinadora\nProf. Jos\u00e9e Eduardo Ribeiro Cury, Dr. orientador\nProf. Daniel Juan Pagano, Dr.\nProf. Rafael Santos Mendes. Dr.\nDedico este trabalho aos meus pais, a minha irm\u00e3 que com seus suporte e confian\u00e7a muito contribuiram proporcionando-me concluir o maior feito de minha vida at\u00e9 o presente momento. E ao Jos\u00e9 V\u00edtor, meu filho, que me impulsionou a empenhar de forma decisiva a realiza\u00e7ao do mesmo.\nAgradecimentos\nAgrade\u00e7o a meus orientadores Jos\u00e9 E. Ribeiro Cury e Daniel Juan Pagano, pela oportunidade de trabalho, al\u00e9m de seus ensinamentos e incentivos ao longo do mestrado.\nAo amigo Carlos Dami\u00e3o, que teve participa\u00e7\u00e3o decisiva na minha forma\u00e7\u00e3o.\nAos colegas Ant\u00f4nio Eduardo Cunha, Marcos Vallin, Agustinho Pluc\u00eanio, Andr\u00e9 Leal, Gustavo Bouzon, Ricardo Santos que contribu\u00e9ram de forma direta.\nA todas as amizades que fiz na sala do Programa de Recursos Humanos no 34 - Ag\u00eancia Nacional de Petr\u00e9leo e durante o mestrado.\nA todos que contribu\u00e9ram indiretamente para o desenvolvimento desta disserta\u00e7\u00e3o.\nResumo da disserta\u00e7\u00e3o apresentada \u00e0 UFSC como parte dos requisitos necess\u00e1rios para obten\u00e7\u00e3o do grau de Mestre em Engenharia El\u00e9trica.\nModelagem, Verifica\u00e7\u00e3o e Controle Supervis\u00f3rio de Sistemas H\u00edbridos em uma Planta Piloto\nDanilo de Paula e Silva\nMar\u00e7o/2004\nOrientador : Jos\u00e9 Eduardo Ribeiro Cury\nArea de Concentra\u00e7\u00e3o : Automa\u00e7ao e Sistemas\nPalavras-chave : Sistemas H\u00edbridos, Sistemas Condic\u00e3o Evento, Controle Supervis\u00e9rio, Planta Piloto\nNumero de Paginas : 113\nRecentemente o DAS teve aprovado o projeto CTPETRO \u2019\u2019Sistemas de Controle Baseados em Redes Industriais Tipo Fieldbus para o Setor de Petr\u00e9leo e G\u00e1s\u201d, que visa o desenvolvimento de solu\u00e7\u00f5es para problemas que afetam o setor de Petr\u00e9leo e G\u00e9s. No contexto deste projeto, foi adquirida uma planta piloto cujo processo consiste de va\u00e9rias malhas de controle de fluxo, n\u00e9vel e temperatura, implementadas mediante sensores e atuado-res digitais industriais, que se comunicam entre si e com uma esta\u00e7c\u00e3ao de supervisao e controle via rede fieldbus. O presente documento trata da re-solu\u00e7c\u00e3ao de um problema proposto na planta piloto atrav\u00e9es da abordagem de sistemas h\u00e9bridos e controle supervis\u00e9orio de sistemas h\u00e9bridos. A primeira parte deste documento relata uma revis\u00e3ao bibliogr\u00e9afica de conceitos sobre sistemas h\u00e9bridos, verificac\u00e7\u00e3ao de sistemas h\u00e9bridos e controle supervis\u00e9orio de sistemas h\u00e9bridos. A segunda parte do documento propo\u00e3e a resoluc\u00e7\u00e3ao de um problema proposto na planta piloto. Para a resolu\u00e7ca\u00e3o deste problema, \u00e9e feito um modelo que representa todos os comportamentos poss\u00e9veis da planta piloto atrav\u00e9s de um aut\u00f4mato h\u00e9brido. Para este modelo \u00e9 aplicado a teoria de controle supervis\u00e9orio com o intuito de resolver o problema proposto. Resolvido o problema teoricamente, \u00e9e feito na planta piloto a im-plementa\u00e7c\u00e3ao de um supervisor atrav\u00e9es de um algoritmo constituido de um jogador de aut\u00f4omatos e de uma interface homem-m\u00e9aquina para supervis\u00e3ao em tempo real. Os resultados computacionais s\u00e3ao derivados das ferramentas Chekcmate e Grail e os resultados pr\u00e1ticos derivados do software Matlab.\nSum\u00e1rio\n1\tIntrodu\u00e7\u00e3o\t1\n1.1\tObjetivos do Trabalho................................................. 3\n1.2\tOrganiza\u00e7\u00e3o do Documento ............................................. 4\n2\tSistemas\tH\u00edbridos\t5\n2.1\tBreve hist\u00f3rico ...................................................... 6\n2.2\tAbordagens para Sistemas\tH\u00edbridos..................................... 7\n2.2.1\tPerspectiva da Teoria de Controle.............................. 7\n2.2.2\tPerspectiva de Ci\u00eancia da Computa\u00e7ao.......................... 10\n2.3\tAplica\u00e7\u00f5es de Sistemas H\u00edbridos...................................... 10\n2.4\tDiscuss\u00e3o ........................................................... 11\n3\tSistemas\tH\u00edbridos: Modelagens e Verifica\u00e7\u00e3o\t12\n3.1\tAut\u00eaomato H\u00edbrido ................................................... 12\n3.1.1\tAutomato H\u00edbrido Invariante-Poliedral......................... 14\n3.2\tSistema H\u00edbrido de eventos de limiar\t............................ 14\n3.3\tBissimula\u00e7ao e Sistema de Transic\u00e3o\tQuociente ....................... 16\n3.4\tVerifica\u00e7ao de Sistemas H\u00edbridos..................................... 18\n3.4.1\tArvore de computa\u00e7\u00e3o logica................................... 19\n3.4.2\tVerifica\u00e7\u00e3o utilizando bissimulac\u00e3o .......................... 19\n3.4.3\tVerifica\u00e7\u00e3o utilizando sistemas de transi\u00e7\u00e3o quociente........ 20\n3.5\tCheckMate ........................................................... 21\n3.5.1\tPrincipais Blocos do CheckMate ............................... 22\n3.5.1.1\tSwitched Continuous System\t(SCS)..................... 22\n3.5.1.2\tPolyhedral Threshold (PTHB).......................... 23\n3.5.1.3\tBloco Maquina de Estados Finito (FSM)................ 24\n3.5.2\tAproxima\u00e7\u00f5es Flow Pipe........................................ 24\n3.5.3\tVerifica\u00e7\u00e3o ACTL.............................................. 26\n3.5.4\tRefinamento da Parti\u00e7ao....................................... 26\n3.6\tDiscuss\u00e3o ........................................................... 27\n4\tControle Supervis\u00f3rio de Sistemas H\u00edbridos\t29\n4.1\tSistema Condi\u00e7\u00e3o Evento........................................... 29\n4.2\tFormula\u00e7ao do Problema............................................ 29\n4.2.1\tSupervis\u00e3o da planta H\u00edbrida................................ 33\n4.2.2\tComportamento L\u00f3gico........................................ 35\n4.3\tAbordagem por Controle de Sistemas\ta Eventos Discretos............ 37\n4.4\tExemplo........................................................... 42\n4.5\tDiscuss\u00e3ao ....................................................... 44\n5\tPlanta Piloto: Aspectos descritivos e modelagem matem\u00f3tica\t45\n5.1\tDescri\u00e7c\u00e3ao da Planta Piloto ..................................... 45\n5.1.1\tComponentes da planta ...................................... 45\n5.1.2\tDiagrama de Processo ....................................... 47\n5.1.3\tSoftwares Utilizados ....................................... 49\n5.1.4\tCaracter\u00edsticas h\u00edbridas da planta piloto................... 51\n5.2\tProblema proposto ................................................ 51\n5.3\tModelagem matem\u00f3tica tanque de aquecimento........................ 53\n5.3.1\tValida\u00e7\u00e3o e calculo dos par\u00e2metros.......................... 57\n5.3.2\tLinearizac\u00e3o das equac\u00e3es................................... 58\n5.3.3\tCalculo das Fun\u00e7\u00e3es de Transferencia........................ 60\n5.3.4\tModelagem das equa\u00e7\u00e3es no espa\u00e7o de estados cont\u00ednuo........ 62\n5.4\tDiscussa\u00e3o\t.......................................... 63\n6\tResolucao do problema proposto atrav\u00f3s da s\u00edntese de um supervisor\ndiscreto\t65\n6.1\tModelagem do\taut\u00e2omato h\u00edbrido ................................... 65\n6.2\tC\u00edalculo do\taut\u00e2omato aproxima\u00e7ca\u00e3o .............................. 70\n6.2.1\tSimula\u00e7ao do Modelo Planta h\u00edbrida em malha aberta ......... 72\n6.2.2\tVerifica\u00e7ao de propriedades do modelo aut\u00e2mato h\u00edbrido ....\t72\n6.2.3\tObten\u00e7\u00e3o do Modelo Discreto................................. 74\n6.3\tProjeto do supervisor discreto.................................... 75\n6.4\tDiscuss\u00e3o ........................................................ 78\n7\tImplementac\u00e3o de um supervisor C/E na planta piloto\t79\n7.1\tArquitetura de rede da planta piloto ............................. 79\n7.2\tOPC - Open Process Control ....................................... 81\n7.3\tImplementa\u00e7ao do algoritmo de supervis\u00e3o discreta por um servidor\nOPC conectado ao MATLAB .......................................... 82\n7.4\tResultados da implementa\u00e7\u00e3o do algoritmo.......................... 86\n7.5\tDiscuss\u00e3o ........................................................ 88\n8\tConclus\u00e3o e Perspectivas\t89\n8.1\tConclus\u00f5es e Contribui\u00e7\u00f5es......................................... 89\n8.2\tPerspectivas....................................................... 89\nA Projeto de Controladores utilizando a Teoria de Controle Cl\u00e1ssica 91\nA.1\tIntroducao......................................................... 91\nA.2\tProjeto do controlador............................................. 91\nA.2.1 Especifica\u00e7\u00f5es de Controle................................... 92\nA.2.2 Calculo dos p\u00f3los do Sistema com controlador em malha fechada 92\nA.2.3 Gr\u00f3fico do lugar das ra\u00edzes.................................. 94\nA.3\tDiscussao ......................................................... 98\nB Algoritmo de implementacao no MATLAB\t99\nLista de Figuras\n2.1\tEstrutura de controle para sistemas chaveamos......................... 8\n2.2\tEstrutura gen\u00e9rica para o controle supervis\u00f3rio....................... 9\n2.3\tEstrutura gen\u00e9rica para o controle supervis\u00f3rio....................... 9\n3.1\ttermostato........................................................... 14\n3.2\tDiagrama de blocos ilustrando um Sistema h\u00edbrido de eventos de limiar 15\n3.3\tAbordagens de verifica\u00e7\u00e3o............................................ 21\n3.4\tProcedimento de verifica\u00e7\u00e3o do CheckMate ............................ 22\n3.5\tBloco SCS............................................................ 23\n3.6\tBloco PTHB........................................................... 23\n3.7\tBloco FSM ........................................................... 24\n3.8\tM\u00e9todo aproxima\u00e7\u00e3es flow pipe para a dinamica\tclock ................. 25\n3.9\tM\u00e9todo aproxima\u00e7\u00e3es flow pipe para as din\u00e2micas\tlinear e n\u00e3o linear .\t25\n4.1\tPlanta h\u00edbrida H..................................................... 29\n4.2\tRepresenta\u00e7\u00e3o dos sinais condi\u00e7\u00e3o evento............................. 30\n4.3\tSubsistema cont\u00ednuo Hc .............................................. 30\n4.4\tEsquema de controle supervis\u00f3rio para a planta h\u00edbrida............... 33\n4.5\tAut\u00e2mato para a ilustra\u00e7ao de r ..................................... 38\n4.6\tAut\u00e2mato que reconhece a linguagem Lm =\t........ 42\n4.7\tEspecificacao E C PV (Lm)............................................ 43\n4.8\tEspecifica\u00e7ao K C Lm ................................................ 43\n4.9\tM\u00f3xima linguagem vu-control\u00f3vel SupCV u(K)\t.................... 43\n5.1\tFoto ilustrando a planta piloto...................................... 47\n5.2\tDiagrama de processo da planta piloto................................ 48\n5.3\tIlustra\u00e7\u00e3o do software Syscon........................................ 49\n5.4\tIlustra\u00e7\u00e3o do software Conf700 ...................................... 50\n5.5\tIlustra\u00e7\u00e3o do software Process View.................................. 51\n5.6\tTanque de aquecimento de agua........................................ 53\n5.7\tComportamento da temperatura em fun\u00e7ao do tempo...................... 56\n5.8\tDiagrama de blocos de um sistemas processo-compensador no espa\u00e7o de\nestados cont\u00f3nuo. .................................................. 63\n6.1\tModelo Aut\u00f4mato h\u00edbrido para o sistema h\u00edbrido tanque de aquecimento. 69\n6.2\tModelo Checkmate do Sistema h\u00edbrido em malha aberta.................. 71\n6.3\tM\u00e1quina de estados finita representando a dinamica discreta do\naut\u00f4omato h\u00edbrido ................................................... 72\n6.4\tGr\u00e1ficos que representam um comportamento poss\u00edvel do aut\u00f4mato h\u00edbrido 73\n6.5\tModelo discreto correspondente ao aut\u00f4mato h\u00edbrido................... 74\n6.6\tEspecifica\u00e7ao Esp C PV(Lm)........................................... 76\n6.7\tEspecificac\u00e3o K C Lm ................................................ 76\n6.8\tMaxima linguagem vu-controlavel SupCV u(K)\t..................... 76\n6.9\tM\u00edquina de estados finita representando a planta h\u00edbrida sob a\u00e7\u00e3o de\num supervisor ....................................................... 77\n6.10\tGr\u00e1ficos que representam o comportamento do automato h\u00edbrido sob\na\u00e7ca\u00e3o do supervisor ................................................ 77\n7.1\tTopologia de rede da planta piloto................................... 80\n7.2\tOPC na planta piloto................................................. 81\n7.3\tExemplo de uma lista de instru\u00e7\u00e3es de\tum\taut\u00f4mato C/E............... 83\n7.4\tFluxograma do algoritmo jogador de aut\u00f4matos conectado \u00e0 planta . .\t85\n7.5\tGr\u00e1ficos representando o comportamento do n\u00edvel e temperatura da \u00edgua\nno tanque ........................................................... 86\n7.6\tGr\u00e1ficos com os eventos e condic\u00e3es do supervisor discreto........... 87\nA.1 Diagrama de Blocos do sistema n\u00edvel-controlador ...................... 92\nA.2\tGrafico do lugar das ra\u00edzes.......................................... 96\nA.3\tResposta\tdo\tsistema com controlador................................ 97\nA.4\tResposta\tdo\tsistema com k'c = 3,0.................................. 97\nA.5\tResposta\tdo\tn\u00edvel na planta piloto ................................ 98\nLista de Tabelas\n3.1\tOperadores b\u00e1sicos da CTL......................................... 19\n3.2\tTipos de dinamicas cont\u00e1nuas...................................... 23\n5.1\tLegenda do diagrama da fig.5.2.................................... 48\n5.2\tProblema proposto................................................. 52\n5.3\tTabela para o calculo de Aoko..................................... 58\n6.1\tValores de k e t para cada ponto\tde opera\u00e7ao...................... 67\n6.2\tValores de k' e t' para cada ponto\tde operac\u00e3o.................... 67\nCap\u00edtulo 1\nIntrodu\u00e7\u00e3o\nNo ano de 2002 o DAS-Depto de Automa\u00e7\u00e3o e Sistemas da Universidade Federal de Santa Catarina teve aprovado o projeto CTPETRO (Sistemas de Controle baseados em Redes Industriais Tipo Fieldbus para o Setor de Petr\u00f3leo e G\u00e1s), o qual visa o desenvolvimento de solu\u00e7\u00f5es para problemas que afetam o setor de Petr\u00f3leo e G\u00e1s. No contexto deste projeto, foi adquirida uma planta piloto composta por v\u00e1rias malhas de controle de fluxo, n\u00edvel e temperatura, implementadas mediante sensores e atuadores digitais industriais, que se comunicam entre si e com uma esta\u00e7\u00f5o de supervis\u00f5o e controle via rede fieldbus.\nO processo em quest\u00f5ao tem aplicac\u00e7\u00f5ao direta no setor de petr\u00e1oleo e g\u00e1as, incluindo-se, com especial \u00eanfase, a automa\u00e7\u00f5o das refinarias de petr\u00f3leo, plataformas de extra\u00e7\u00f5o off-shore, supervis\u00f5o e controle de oleodutos, etc. Dentro deste projeto pretende-se contemplar o estudo de sistemas cont\u00e1nuos controlados por sistemas de supervis\u00f5ao discreta, o que caracteriza um sistema de dinamica h\u00edbrida. Para isto pretende-se considerar a planta piloto em questa\u00f5o, que possui din\u00eaamicas cont\u00e1nuas representadas pelas variaveis fluxo, vazao e n\u00edvel e din\u00eamicas discretas (sinais discretos gerados por um alarme indicando temperatura alta, por exemplo) atuando em certas condi\u00e7c\u00f5oes que as vari\u00e1aveis cont\u00e1nuas porventura podem alcan\u00e7car, caracterizando a planta piloto como uma planta h\u00e1brida.\nTendo em vista a natureza h\u00e1brida da planta, pretende-se modelar o mesmo atrav\u00e1es do formalismo de aut\u00eamatos h\u00edbridos (Alur 1993) e utilizar a ferramenta computacional CheckMate (Silva e Chutinan 2000) para implementar o modelo e analisar propriedades do mesmo atrav\u00e1s de especifica\u00e7\u00f5es ACTL. Tal formalismo \u00e1 um dos varios modelos que representam sistemas h\u00edbridos.\nApo\u00e1s a modelagem da planta, deseja-se projetar um supervisor discreto que resolva um problema proposto. Este supervisor ser\u00e1a projetado segundo a abordagem de con\ntrole supervis\u00f3rio de sistemas h\u00edbridos (Cury e Niinomi 1998). Por fim, pretende-se implementar este supervisor discreto na planta piloto atrav\u00f3s de uma algoritmo feito no Matlab conectado a um servidor OPC da planta piloto. OPC \u00f3 uma tecnologia capaz de unificar fonte de dados com aplica\u00e7\u00f5es cliente, ou seja, \u00f3 uma interface de comunicac\u00e3o homem-maquina x.\nSistemas h\u00edbridos (Antsaklis 2000a), (Antsaklis 2000b) em geral, s\u00e3o sistemas que possuem tanto din\u00e2micas cont\u00ednuas quanto dinamicas discretas. Tais sistemas tem sido utilizados em diversas aplica\u00e7\u00e3es: na aviac\u00e3o, atrav\u00f3s de controle de tr\u00f3fego a\u00f3reo e dos sistemas de controle de aeronaves, tais como o sistema de prevenc\u00e7\u00e3ao de colis\u00e3oes de aeronaves; em aplica\u00e7\u00e3es automotivas, como por exemplo os sistemas de controle de tr\u00e1fego em rodovias e os sistemas de controle em sistemas de manufatura; na rob\u00f3tica; na eletr\u00e2onica de pot\u00e2encia; no controle de processos qu\u00f3micos e nucleares em geral; entre muitas outras.\nVarios modelos de sistemas h\u00f3bridos tem sido propostos. Neste documento iremos considerar tr\u00e2s modelos, denominados de aut\u00f4mato h\u00e9brido (Alur 1993), sistema h\u00e9brido de eventos de limiar e sistemas condic\u00e3o evento. O primeiro \u00f3 uma generaliza\u00e7\u00e3o do aut\u00e2mato discreto finito (Hopcroft e Ullman 1979) que inclui din\u00e2micas continuas em cada estado discreto denominado de loca\u00e7c\u00e3ao, do aut\u00e2omato. Transi\u00e7c\u00e3oes entre as loca\u00e7c\u00e3oes sa\u00e3o determinadas por condi\u00e7c\u00e3oes chamada de guardas, nos estados cont\u00f3nuos. O aut\u00e2omato h\u00f3brido ser\u00f3a utilizado para a modelagem de um modelo h\u00f3brido para a planta piloto.\nO sistema h\u00f3brido de eventos de limiar (Chutinan 1999) consiste em tr\u00e2s subsistemas: sistema cont\u00f3nuo chaveado, com entradas discretas constantes que selecionam as din\u00e2amicas cont\u00f3nuas com sa\u00f3das cont\u00f3nuas; gerador de eventos de limiar que recebe as sa\u00f3das cont\u00f3nuas do sistema cont\u00f3nuo chaveado e gera eventos quando estas atravessam certos limiares e m\u00f3aquina de estados finito que \u00f3e o sistema de transic\u00e7\u00e3ao puramente discreto com um nu\u00f3mero finito de estados. Os sistemas h\u00f3bridos de eventos de limiar s\u00e3o atrativos para o documento em quest\u00e3o. Isso se deve ao fato de que a ferramenta CheckMate utiliza esta modelagem para o procedimento de verifica\u00e7\u00e3o (Silva e Chutinan 2000).\nSistemas condi\u00e7\u00e3o evento (C/E) (Gonz\u00f3les e Krogh 2001) fornecem uma forma de se definir sistemas em tempo cont\u00f3nuo atrav\u00f3es da interconexa\u00e3o de subsistemas com sinais de entrada e sa\u00f3da discretos. Sendo assim, os sistemas ser\u00e3ao apresentados atrav\u00f3es de diagramas de blocos e fluxo de sinais discretos. Vale ressaltar que embora esteja sendo usado aqui para modelagem de sistemas h\u00f3bridos, o formalismo de sistemas C/E\n1\tP uma tecnologia de linguagem de alto n\u00edvel capaz de monitorar com facilidade equipamentos conectados a uma rede de dados. Exemplo: softwares supervisorios (Process View, In Touch, etc), Painel View, entre outros\npode ser utilizado tamb\u00f3m para a modelagem de Sistemas a Eventos Discretos (SED) (Leal 2002). Atrav\u00f3s do sistema C/E iremos obter a soluc\u00f5o de um problema proposto na planta piloto atrav\u00f3es do formalismo de controle superviso\u00f3rio de sistemas h\u00f3bridos (Gonz\u00f3les 2000).\n1.1\tObjetivos do Trabalho\nA principal motivac\u00f5o para a an\u00f3lise e modelagem da planta h\u00edbrida \u00f3 solucionar problemas pr\u00f3aticos sob o aspecto de controle supervis\u00f3orio de sistemas h\u00f3bridos (Gonz\u00f3les 2000). Em particular o tema em quest\u00f5o ainda est\u00f3 pouco difundido entre os pesquisadores brasileiros. Com isso, os principais resultados obtidos est\u00f5o sob enfoque te\u00f3rico, estendendo metodologias e abordagens de pesquisadores pioneiros na area de controle supervis\u00f3orio de sistemas h\u00f3bridos.\nOs principais objetivos deste trabalho s\u00f5o:\n\u2022\tFazer uma revisao bibliogr\u00e1fica de sistemas h\u00f3bridos e de controle supervis\u00f3rio de sistemas h\u00f3bridos\n\u2022\tEstudar o processo correspondente a uma planta piloto em escala de laborat\u00f3rio, com mu\u00f3ltiplas malhas de controle de temperatura, n\u00f3vel e vaz\u00f5ao e propor uma modelagem matem\u00f3tica da planta utilizando o formalismo de aut\u00f4matos h\u00f3bridos. Isso permite a visualiza\u00e7c\u00f5ao de quais s\u00f5ao os poss\u00f3veis comportamentos que a planta piloto pode realizar;\n\u2022\tImplementar o modelo da planta piloto na ferramenta CheckMate. O CheckMate pode gerar um aut\u00f4omato de estados finitos que represente o comportamento l\u00f3ogico aproximado do sistema h\u00f3brido (Silva e Krogh 2000). Esta constru\u00e7\u00f5o \u00f3 um ponto cr\u00edtico do trabalho, pelo fato de que pode ser extremamente dif\u00edcil ou at\u00e9 mesmo imposs\u00f3vel obter o aut\u00f4omato de estados finitos devido a problemas de verificac\u00e7\u00f5ao. Tais problemas ser\u00f5o tratados no cap\u00f3tulo 3.\n\u2022\tConstruir especificac\u00e7\u00f5oes para o comportamento desejado do sistema sob super-visa\u00f5o e projetar um supervisor sob o enfoque de controle Supervis\u00f3orio de Sistemas H\u00f3bridos.\n\u2022\tImplementar o supervisor na planta piloto atrav\u00f3es de um algoritmo que se comporta como um jogador de aut\u00f4matos conectado \u00e0s variaveis da planta atrav\u00f3s de uma conexao servidor-cliente OPC. Analisar os resultados e verificar a validac\u00f5o dos formalismos sistemas h\u00f3bridos e controle superviso\u00f3rio de sistemas h\u00f3bridos no experimento pr\u00f3atico.\n1.2\tOrganiza\u00e7\u00e3o do Documento\nEste documento est\u00e1 organizado como segue:\nO cap\u00e1tulo 2 apresenta uma introdu\u00e7\u00e3o aos sistemas h\u00e1bridos. Faz um breve hist\u00e1rico e apresenta algumas abordagens existentes nas perspectivas das comunidades de controle e de ci\u00eancia da computacao.\nO cap\u00e1tulo 3 faz uma discuss\u00e3o sobre dois modelos de sistemas h\u00e1bridos: o automato h\u00e1brido e o sistema h\u00e1brido de eventos de limiar. Faz-se uma breve introduc\u00e7a\u00e3o sobre verifica\u00e7\u00e3o e por fim apresentamos alguns aspectos importantes da ferramenta CheckMate.\nO cap\u00e1tulo 4 trata do controle supervis\u00e1rio de sistemas h\u00e1bridos. Nele \u00e1 feito a for-mulac\u00e7\u00e3ao de um problema de controle supervis\u00e1orio de sistemas h\u00e1bridos apresentando uma classe de sistemas h\u00e1bridos (sistemas C/E) que sera utilizada ao longo deste documento.\nO cap\u00e1tulo 5 trata da descric\u00e3o e utiliza\u00e7\u00e3o da planta piloto. Descreve suas principais caracter\u00edsticas, os softwares utilizados e sua conexao com a interface Matlab. Prop\u00e3e um problema para ser resolvido na planta piloto. Trata a modelagem ma-tem\u00e1atica da planta piloto, descrevendo as equa\u00e7c\u00e3oes utilizadas, valida\u00e7c\u00e3ao dos par\u00eaametros destas equac\u00e7\u00e3oes, linearizac\u00e7\u00e3ao em certos pontos de opera\u00e7c\u00e3ao, ca\u00e1lculo das fun\u00e7c\u00e3oes de transfer\u00eaencia e a representac\u00e7\u00e3ao destas equac\u00e7\u00e3oes no espa\u00e7co de estados.\nO cap\u00e1tulo 6 trata da s\u00e1ntese de um supervisor discreto para resolver um problema proposto. Para tanto, utiliza-se a abordagem de aut\u00f4matos h\u00e1bridos e constr\u00f3i o modelo da planta no CheckMate, o qual \u00e1 o programa utilizado para obter um automato discreto que \u00e1 uma aproxima\u00e7ao externa do comportamento l\u00e1gico do sistema h\u00e1brido. Ap\u00e1s a obten\u00e7ao do modelo discreto do sistema h\u00e1brido, apresenta-se algumas especificac\u00e3es discretas de controle, segundo o problema proposto e calcula-se o supervisor utilizando o formalismo de controle supervis\u00e1rio de sistemas h\u00e1bridos descrito no cap\u00e1tulo 4.\nO cap\u00e1tulo 7 trata da implementa\u00e7ao do supervisor calculado no cap\u00e1tulo 6 na planta piloto. Ser\u00e1 implementado um algoritmo capaz de interpretar o aut\u00eamato discreto da planta livre sob a\u00e7ca\u00e3o de um supervisor na planta piloto e os softwares utilizados para a implementa\u00e7\u00e3o. Por fim os resultados desta implementac\u00e3o\nO cap\u00e1tulo 8 \u00e9 a conclus\u00e3o do documento e discussao de poss\u00e1veis trabalhos futuros.\nCap\u00edtulo 2\nSistemas H\u00edbridos\nEste cap\u00edtulo trata de sistemas h\u00edbridos sob um aspecto geral. E de suma import\u00e2ncia o entendimento desta abordagem, pois o trabalho que sera relatado neste documento se baseia neste formalismo. Primeiramente define-se dois tipos de sistemas: os sistemas cont\u00ednuos e os sistemas a eventos discretos.\nUm sistema \u00e9 dito ser cont\u00ednuo se seus estados variam continuamente com o decorrer do tempo, ou seja, as variaveis do sistema dependem do tempo. De um modo geral, os sistemas cont\u00ednuos pode ser representados por equac\u00f5es diferenciais quando o tempo \u00e9 cont\u00ednuo. Quando o tempo \u00e9 amostrado em per\u00edodos, tais sistemas podem ser representados por equa\u00e7\u00f5es a diferen\u00e7as. Em ambos os casos, a vari\u00e1vel tempo (t no caso cont\u00ednuo e k no caso amostrado) e naturalmente uma vari\u00edvel independente que aparece como argumento das func\u00f5es entrada, estado e sa\u00edda. Exemplo de um sistema cont\u00ednuo pode ser um ve\u00edculo em movimento, onde se tem a variac\u00f5o da velocidade e dist\u00e2ncia percorrida por unidade de tempo.\nOutros sistemas, de natureza bastante distinta dos sistemas cont\u00ednuos, s\u00f5o os chamados Sistemas a Eventos Discretos (SED). A princ\u00edpio iremos apresentar o conceito de evento. Um evento pode ser identificado com uma a\u00e7ca\u00f5o (aperto de uma tecla), uma ocorr\u00e2encia espont\u00e2anea como um rel\u00e2ampago ou o resultado de v\u00edarias condi\u00e7c\u00f5oes satisfeitas em um dado instante (um equipamento finaliza uma opera\u00e7\u00f5o). Um sistema a eventos discretos (SED) \u00ede um sistema a estado discreto dirigido por eventos, ou seja, sua evoluc\u00e7\u00f5ao de estado depende integralmente da ocorr\u00e2encia de eventos discretos ass\u00edncronos no tempo. Um exemplo de um SED \u00ede o jogo de damas. A movimenta\u00e7c\u00f5ao de uma pec\u00e7a pode ser descrita como um evento, onde os jogadores efetuam seu lance quando querem, ou seja, de forma ass\u00edncrona com o tempo e sem intermedia\u00e7c\u00f5oes, onde h\u00eda uma configura\u00e7ca\u00f5o das pe\u00e7cas antes de um movimento e outra depois de mover a pe\u00e7ca.\nHa sistemas que possuem caracter\u00edstica puramente cont\u00ednua e outros com carac-\nter\u00edsticas puramente discretas. Contudo, h\u00e1 sistemas que possuem tanto aspectos cont\u00ednuos, quanto discretos. Tais sistemas eram tratados de acordo com a caracter\u00edstica que mais se destacava. Em certos casos, nao \u00e9 razo\u00e1vel fazer tal considerac\u00e3o. O sistema entao deve ser tratado utilizando os conceitos de sistemas cont\u00ednuos e de sistemas a eventos discretos.\nTais sistemas s\u00e3o chamados de sistemas h\u00edbridos. Genericamente, o termo h\u00edbrido se refere \u00e0 mistura ou jun\u00e7ao de dois tipos de objetos ou metodologias fundamentalmente diferentes, como um carro bicombust\u00edvel. Este carro pode ser abastecido tanto por a\u00edlcool como por gasolina, tendo portanto, uma propriedade h\u00edbrida em rela\u00e7c\u00e3ao aos carros convencionais. Os sistemas h\u00edbridos aos quais nos referimos neste trabalho s\u00e3ao sistemas que possuem dinamicas cont\u00ednuas e dinamicas de eventos discretos, sendo que, al\u00edm de coexistirem, tamb\u00edm interagem entre si. Nao apenas o sistema pode ter uma caracter\u00edstica h\u00edbrida, mas a especificac\u00e3o sobre o comportamento desejado para o mesmo tamb\u00edm pode ser h\u00edbrida. Um exemplo de um sistema h\u00edbrido pode ser uma panela de press\u00e3o. Se a panela for utilizada de forma correta, a press\u00e3o ir\u00ed ficar em uma faixa ideal para cozinhar os alimentos. Contudo, se esta press\u00e3ao for aumentado no decorrer do tempo (falha na v\u00edlvula de escape por exemplo) vai chegar a um ponto que a panela ir\u00eda explodir. Tal explos\u00e3ao n\u00e3ao depende do tempo e sim do valor m\u00edaximo de pressao que a panela pode suportar. A explos\u00e3o da panela pode ser considerado um evento que ocorreu quando a press\u00e3ao atingiu um certo valor.\nNa pr\u00f3xima se\u00e7ao \u00ed feito um breve hist\u00edrico sobre sistemas h\u00edbridos. Na se\u00e7ao 2.2 s\u00e3ao apresentadas as principais abordagens existentes para o tratamento de problemas relacionados aos sistemas h\u00edbridos sob as perspectivas das comunidades de controle e ci\u00eancias da computac\u00e3o. Na se\u00e7\u00e3o 2.3 sao citados alguns exemplos de aplica\u00e7\u00e3o de sistemas h\u00edbridos e por fim \u00ede apresentada a discuss\u00e3ao do cap\u00edtulo. Este cap\u00edtulo foi baseado em (Leal 2002), (Antsaklis e Koutsoukos 2002) e (Krogh 2002).\n2.1\tBreve hist\u00f3rico\nMuito embora o estudo de sistemas h\u00edbridos tenha se tornado popular apenas recentemente, v\u00edarios tipos de sistemas que recaem nesta categoria j\u00eda foram estudados anteriormente. Sistemas din\u00eaamicos descont\u00ednuos foram objeto de estudo sistem\u00edatico na antiga Uni\u00e3ao Sovi\u00edetica e em outros pa\u00edses do leste Europeu por um longo per\u00edodo, iniciando no final dos anos 40.\nO recente interesse e atividades sobre sistemas h\u00edbridos tem sido motivado em parte por resultados de pesquisa de desenvolvimento no controle de sistemas a eventos discretos (SED) que ocorreu nos anos 80, no desenvolvimento do controle adaptativo nos\nanos 70 e 80 e no interesse renovado na formula\u00e7c\u00e3ao do controle \u00edotimo em sistemas de dados amostrados e controle digital.\nEm paralelo houve um crescente interesse pelos sistemas h\u00edbridos entre os cientistas da computa\u00e7c\u00e3ao e estudiosos de l\u00edogica. O advento de m\u00edaquinas digitais fez com o que os sistemas h\u00edbridos se tornassem muito comuns, pois sempre que um equipamento digital interage com mundo cont\u00ednuo, o comportamento envolve fen\u00e2menos h\u00edbridos que precisam ser analisados e compreendidos.\nOs primeiros encontros sobre sistemas h\u00edbridos ocorreram no in\u00edcio dos anos 90. Organizado por Robert L. Grossas e Anil Erode, o primeiro workshop sobre sistemas h\u00edbridos foi realizado junto ao Instituto de Ci\u00e2encias Matem\u00edaticas da Universidade de Cornell, nos EUA, em 1991. Em 1992 foi realizado o segundo workshop sobre sistemas h\u00edbrido na Universidade T\u00edcnica de Lingy, na Dinamarca. A partir da\u00ed o tema despertou grande interesse junto a comunidade cient\u00edfica.\nAtualmente h\u00ed importantes workshops sobre sistemas h\u00edbridos no qual destacamos o Hybrid Systems: Computation and Control (HSCC) onde podemos adquirir informa\u00e7c\u00e3oes a respeito de publica\u00e7c\u00e3oes dos principais trabalhos e perspectivas sobre sistemas h\u00edbridos.\n2.2\tAbordagens para Sistemas H\u00edbridos\nTendo em vista a ampla a\u00edrea de abrang\u00e2encia dos sistemas h\u00edbridos, muitas foram as abordagens e os enfoques dados ao seu estudo nos temas modelagem, an\u00edalise, s\u00edntese e simula\u00e7ca\u00e3o. A seguir, divide-se as diferentes abordagens nas perspectivas das comunidades de controle e ci\u00e2encia da computac\u00e7a\u00e3o.\n2.2.1\tPerspectiva da Teoria de Controle\nNa comunidade de controle, abordagens de modelagem, an\u00edlise e projeto de controladores para sistemas h\u00edbridos estenderam a teoria de sistemas din\u00e2amicos para incluir modos discretos. Em realidade, pode-se estender o controle com estrutura varia\u00edvel, controle por modos deslizantes, controle por rel\u00e2es, controle por chaveamento de ganhos e at\u00ede mesmo controle nebuloso como exemplos de sistemas de controle h\u00edbrido. A caracter\u00edstica comum a todos estes esquemas de controle \u00ed sua natureza de chaveamento; com base na evolu\u00e7ao da planta (sistema de tempo cont\u00ednuo a ser controlado) e/ou no progresso do tempo, o supervisor chaveia de um regime de controle para o outro (van der Shaft e Schumacher 2000).\nA estrutura mais encontrada dentre a classe de sistemas chaveados \u00e9 mostrada na figura 2.1. O supervisor decide qual dos controladores deve ser usado baseado nos sinais de entrada e sa\u00e9da da planta.\nFigura 2.1: Estrutura de controle para sistemas chaveamos\nPelo fato que este tipo de estrutura tem sido utilizado com sucesso na pr\u00edtica h\u00ed muitas d\u00edcadas, v\u00edrios pesquisadores voltaram a aten\u00e7\u00e3o para a sua modelagem e analise. Desde entao, a comunidade de controle intensificou estudos sobre a extens\u00e3o de defini\u00e7c\u00e3oes e condi\u00e7co\u00e3es para a estabilidade de sistemas cont\u00ednuos para o contexto de sistemas h\u00edbridos (Liberzon e Morse 1999).\nOutro importante tema de pesquisa junto a comunidade controle tem sido o controle supervisorio de sistemas h\u00edbridos. Inspirados na estrutura utilizada para o controle digital, alguns autores propuseram uma estrutura an\u00edloga para o controle supervis\u00edrio de sistemas h\u00edbridos, na qual uma planta com caracter\u00edsticas h\u00edbridas se comunica com um supervisor discreto atrav\u00edes de uma interface formada por conversores A/D e D/A generalizados, conforme ilustrado na figura 2.2.\nNesta estrutura, a planta evolui ao longo do tempo at\u00ed que uma vari\u00edvel de seu espaco de estados cont\u00ednuo cruza determinado patamar, ent\u00e3o a interface sinaliza a ocorr\u00f4encia de um evento para o supervisor. Este, por sua vez, atualiza seu estado discreto e, de acordo com o estado atual, envia um sinal discreto para a interface, a qual transforma este em um sinal cont\u00ednuo a ser aplicado na planta, fazendo com o que a planta funcione em fun\u00e7c\u00e3ao do evento que o supervisor envia de volta para a planta.\nNa metodologia de controle digital, pode-se realizar todo o projeto do controlador no dom\u00ednio do tempo e entao aproximar ou emular o controlador por um equivalente discreto da planta tomada em conjunto com a interface, para ent\u00e3ao realizar o projeto do controlador no dom\u00ednio discreto. A analogia feita no contexto de controle supervisorio de sistemas h\u00edbridos consiste em, ao inv\u00eds de obter um modelo discreto, obter um modelo de eventos discretos da planta em conjunto com a interface como mostra a figura\nFigura 2.2: Estrutura generica para o controle supervisorio\n2.3, utilizando aut\u00f4matos ou redes de Petri. Assim, na perspectiva do supervisor, o conjunto planta-interface \u00e9 um sistema a eventos discretos, pois recebe e envia apenas sinais discretos e ent\u00e3o o controlador \u00e9 projetado usando metodol\u00f3gicas de controle supervisorio de SED.\nS\u00edmbolo\nS\u00edmbolo\nFigura 2.3: Estrutura generica para o controle supervisorio\nA estrutura apresentada na figura 2.2 foi proposta no trabalho (Antsaklis e Lemmon 1993) e depois foi considerada em varios trabalhos posteriores por estes autores (Stiver e Lemmon 1995a) ,(Stiver e Lemmon 1995b). Abordagens similares baseadas em aproxima\u00e7\u00f5es da planta por um SED foram utilizados por (Nerode 1993). Abordagens similares baseadas em aproximac\u00f5es da planta por um SED foram utilizadas em (Moor e Raish 2001), (Raish 1998) e (Cury e Niinomi 1998).\n2.2.2\tPerspectiva de Ci\u00eancia da Computa\u00e7\u00e3o\nNo final dos anos 80 (Wonham e Ramadge 1987), com a expans\u00e3o de t\u00e9cnicas de controle supervis\u00f3rio de SED, cientistas da computa\u00e7\u00e3o buscaram estender modelos puramente discretos de forma a incluir din\u00e1micas cont\u00e9nuas. Como resultado inicial desta extens\u00e3o foram propostos os aut\u00eamatos diferenciais (Tavernini 1987) e os diagramas de estados h\u00edbridos (Maler e Pnueli 1992). A seguir foram propostos os aut\u00f4matos temporizados (Allur e Dill 1994), em cujos estados discretos foram inseridas dinamicas do tipo rel\u00e9gio (na forma x = 1). Assim, o comportamento cont\u00e9nuo resultante \u00e9e crescente com uma taxa constante e o mesmo pode ser reinicializado nos instantes de ocorr\u00e1ncia de eventos discretos. Em um passo posterior, foram introduzidos os automatos h\u00edbridos (Alur 1993), os quais n\u00e3o possuem restric\u00e3o de monotonicidade e permitem equa\u00e7\u00e3es diferenciais do tipo linear e n\u00e3o linear.\nA maior parte da pesquisa desenvolvida junto a comunidade de ci\u00e1ncias da com-putac\u00e7\u00e3ao tem sido direcionada para o contexto de verificac\u00e7\u00e3ao formal utilizando a t\u00e9ecnica chamada de model checking (Alur e Dill 1990), a qual testa exaustivamente todas as trajeto\u00e9rias do sistema com o intuito de testar algumas propriedades dos sistemas h\u00e9bridos, quanto a t\u00e9cnica dedutiva de prova de teoremas (Manna e Sipma 1998), que prova a especifica\u00e7c\u00e3ao atrav\u00e9es da indu\u00e7c\u00e3ao sobre todas as trajet\u00e9orias. Entre os avan\u00e7cos mais significativos est\u00e3ao os resultados extensivos sobre divisibilidade em problemas de verificac\u00e3o para v\u00e9rias classes de sistemas h\u00edbridos (Puri e Varaiya 1994).\nNeste trabalho ser\u00e9 utilizada uma abordagem similar ao da fig.2.2. Contudo, o sistema h\u00e9brido sera\u00e9 modelado sob a perspectiva da ci\u00e1encia da computa\u00e7c\u00e3ao utilizando o modelo aut\u00e1mato h\u00e9brido (Alur 1993) e a supervisao deste sistemas ser\u00e9 feita utilizando a abordagem de (Cury e Niinomi 1998). Tal metodologia consiste no formalismo de sistemas condi\u00e7\u00e3o evento (Sreenivas e Krogh 1991) que se baseia na defini\u00e7\u00e3o formal de blocos individuais de tempo cont\u00e9nuo, os quais possuem entradas e sa\u00e9das que s\u00e3ao interconectadas de forma a criar modelos de sistemas h\u00e9bridos atrav\u00e9es de diagrama de blocos.\n2.3\tAplicac\u00e3es de Sistemas H\u00edbridos\nOs sistemas h\u00e9bridos proporcionam um rico contexto para a defini\u00e7\u00e3o de varios tipos de problema de controle. Enumera-se a seguir, algumas das aplica\u00e7c\u00e3oes nas quais s\u00e3ao utilizadas abordagens de sistemas h\u00e9bridos.\n\u2022 aplica\u00e7\u00e3es automotivas, tais como em sistemas de rodovias e autom\u00e9veis inteligentes (Silva e Engell 2001)\n\u2022\tControle de processos qu\u00edmicos (Lennartson e Pettersson 1996)\n\u2022\tredes de distribui\u00e7\u00f5o de energia (Ferrari-Trecate 2002)\n\u2022\tsistemas de seguran\u00e7a cr\u00edtica , tais como processos nucleares, sistemas de controle de tr\u00e1fego a\u00e9reo e sistemas de controle de aeronaves (Livadas 2000)\n\u2022\tsistemas de manufatura (Pepyne e Cassandras 2000)\n\u2022\teletr\u00f4nica de pot\u00eancia (Miranda e Lima 2001)\n\u2022\trob\u00e9tica (Egerstedt 2000)\n2.4\tDiscussao\nViu-se que os sistemas h\u00e9bridos s\u00f5o adequados para representar uma grande diversidade de aplica\u00e7\u00f5es, envolvendo problemas de an\u00e9lise e s\u00e9ntese e que portanto, muitos s\u00f5ao os enfoques e as abordagens propostas para tratar cada um destes problemas. Atualmente, o tema vem despertando grande interesse junto \u00e0s comunidades de controle e ci\u00f4encia da computa\u00e7c\u00f5ao, o que tem levado a um grande fluxo de publica\u00e7c\u00f5oes sobre o mesmo. Ressalta-se que o conceito de sistemas h\u00e9bridos tratado neste cap\u00e9tulo \u00e9 utilizado ao longo do presente documento pelo fato de que a planta piloto citada no cap. 1 possui propriedades h\u00e9bridas. As caracter\u00edsticas da planta piloto bem como suas propriedades h\u00e9bridas ser\u00f5o detalhadas no cap. 5.\nCap\u00edtulo 3\nSistemas H\u00edbridos: Modelagens e Verifica\u00e7\u00e3o\nNeste cap\u00edtulo iremos fazer um breve estudo sobre dois modelos de sistemas h\u00edbridos que ser\u00e3o utilizados ao longo deste documento: o aut\u00f4mato h\u00edbrido e os sistemas h\u00edbridos de eventos de limiar. Na sequencia iremos definir conceitos importantes utilizando a noc\u00e3o de sistemas de transic\u00e3o para o procedimento de verifica\u00e7\u00e3o. Por fim, introduz-se a ferramenta CheckMate e uma breve discuss\u00e3o do cap\u00edtulo.\n3.1\tAutomato H\u00edbrido\nUm aut\u00f4mato h\u00edbrido \u00ed uma generaliza\u00e7\u00e3o do aut\u00f4mato discreto finito (Hopcroft e Ullman 1979) que possui din\u00f4micas cont\u00ednuas bem como transic\u00e3es discretas. Cada estado discreto \u00ed denominado locacao. Associado com cada loca\u00e7ao sao as dinamicas cont\u00ednuas descritas por equacoes diferenciais e um conjunto invariante cont\u00ednuo. O aut\u00f4omato h\u00edbrido pode residir em uma determinada loca\u00e7c\u00e3ao tanto tempo quanto o estado cont\u00ednuo permanecer dentro do seu invariante. As transi\u00e7c\u00e3oes discretas entre loca\u00e7c\u00e3oes ocorrem de acordo com as condi\u00e7co\u00e3es guarda e reset no espac\u00e7o de estados cont\u00ednuo. Transi\u00e7\u00e3es discretas podem ocorrer quando a condi\u00e7\u00e3o guarda \u00ed satisfeita e a condi\u00e7\u00e3o reset deve estar satisfeita pelo estado cont\u00ednuo depois que a transi\u00e7\u00e3o discreta ocorreu. As condi\u00e7co\u00e3es guarda e reset podem ser representadas como um conjunto onde o estado cont\u00ednuo deve pertencer a este conjunto para satisfazer cada condi\u00e7\u00e3o. Introduziremos a nota\u00e7ao seguinte que \u00ed usada para definir as dinamicas cont\u00ednuas para cada locac\u00e3o do aut\u00f4mato h\u00edbrido.\nSejaFa,b o conjunto das funcoes que mapeiam cada membro de A nos subconjuntos de B, isto \u00ed:\nFa,b ={F : A\t2b}\nA definic\u00e3o do aut\u00eamato h\u00edbrido segue o formalismo de (Chutinan 1999).\nDefini\u00e7ao 3.1 Um aut\u00f4mato h\u00edbrido \u00e9 uma tupla H = (X,X0,F,E,I,G,R) onde:\n\u2022\tX = XC x XD onde XC C Rn \u00e9 o estado de espaco cont\u00ednuo e XD \u00e9 um conjunto finito de loca\u00e7c\u00e3oes discretas.\n\u2022\tXo C X \u00ed o conjunto de estados iniciais.\n\u2022\tF :\tXD\tFxc ,Rn\tassocia u E XD\ta uma func\u00e3o\tFu\t:\tXC\t2R\tque descreve a\ninclus\u00e3o diferencial1 x E Fu(x).\n\u2022\tI : XD\t2Xc associa u a um conjunto invariante na forma I(u) C XC.\n\u2022\tE C XD x XD e um conjunto de transi\u00e7\u00f5es discretas.\n\u2022\tG : E 2xc associa e = (u, u') E E a um conjunto guarda na forma S C I(u)\n\u2022\tR : E x XC 2XC designa para cada par (u, u') E E e x E G((u, u')) um conjunto de estados resets S E I(u'), R((u,u'),x) C I(u').\nUm exemplo de um aut\u00eamato h\u00edbrido, adaptado de (Chutinan 1999) e mostrado na fig.3.1 O aut\u00eamato h\u00edbrido modela um termostato. As loca\u00e7\u00e3es on e off correspondem aos estados on e off respectivamente. O estado cont\u00ednuo x \u00ed a temperatura. O sistema inicia com a temperatura entre 29o C e 30o C. A transi\u00e7\u00e3o de off para on pode ocorrer em qualquer ponto que satisfac\u00e7a o guarda. O n\u00e3ao determinismo ira permanecer enquanto a trajetoria cont\u00ednua de x estiver satisfazendo o invariante da loca\u00e7\u00e3o off . No instante que chega no limite do invariante de off, a transi\u00e7c\u00e3ao e1 ocorre obrigatoriamente e o termostato liga (estado on). Quando a temperatura passar de 40o, a transi\u00e7ao e2 pode ocorrer em qualquer ponto pertencente a este guarda , isso at\u00ede atingir 42o, que \u00ede a fronteira do invariante da loca\u00e7c\u00e3ao on, enta\u00e3o o termostato volta necessariamente a ficar desligado (estado off) e o processo se repete. O n\u00e3o determinismo existe porque h\u00e1 uma infinidade de pontos em que a condi\u00e7c\u00e3ao guarda \u00ede satisfeita. Por exemplo, e1 pode ocorrer quando x = 29o, mas em outro momento nada impede que e1 ocorra em x=29.5o, pois este ponto tamb\u00edm pertence ao guarda de e1. No entanto, se a trajetoria x atingir a fronteira do invariante, obrigatoriamente e1 dever\u00ed ocorrer (se este n\u00e3o ocorreu antes), pois a temperatura x nao poder\u00ed permanecer fora do invariante.\n1Sao equa\u00e7\u00f5es diferenciais definidas por intervalos. Ex: i E [1, 8]. O diferencial de x pode assumir qualquer valor compreendido entre os valores 1 e 8\nFigura 3.1: termostato\n3.1.1\tAut\u00f4mato H\u00edbrido Invariante-Poliedral\nDefini\u00e7\u00e3o 3.2 Um Aut\u00f4mato H\u00edbrido Invariante-Poliedral (PIHA)2 e um aut\u00f4mato h\u00edbrido H = (X, X0, F, E, I, G, R) com as seguintes restri\u00e7\u00f5es\n\u2022\tPara cada u E XD, F associa a para u um vetor de campo determin\u00edstico fu :\nXc\tXc .\n\u2022\tPara cada u E XD, I(u) \u00e9 um poliedro convexo.\n\u2022\tPara cada e = (u,u!) E E, o conjunto guarda G(e) \u00e9 a uni\u00e3o das faces de I(u).\n\u2022\tPara cada e = (u,u') E E e x E G(e), R(e,x) = {x}, o mapa do reset \u00e9 sempre um mapa identidade.\n\u2022\tO conjunto de estados iniciais deve ser da forma X0 = Ui(Pi,ui) onde cada Pi Q I(u) e um politopo e ui E U. Aqui, a notac\u00e3o (P, u) significa o conjunto {(x,u) E X|x E P}\n\u2022\tI, G, e E deve satisfazer a seguinte condicao.\nVe = (u, u') E E, G(e) Q I(uz).\nO PIHA e equivalente a chaveamento de din\u00e2micas cont\u00ednuas no qual n\u00e3o ha \u201cjumps\u201d na trajet\u00f3ria de estados cont\u00ednuos.\n3.2\tSistema H\u00edbrido de eventos de limiar\nSistema H\u00edbrido de eventos de limiar (TEDHS)3 consiste de tr\u00e2s tipos de subsistemas, o sistema cont\u00ednuo chaveado (SCS), o gerador de eventos de limiar (TEG) e\n2\tA abreviatura utilizada \u00e9 do nome em ingles Polyedral-Invariant Hybrid Automata\n3As abreviaturas utilizadas sao dos nomes em ingl\u00eas: threshold event-driven hybrid systems, switched cont\u00ednuos system threshold event generator e finite state machine respectivamente.\na maquina de estados finito (FSM). Sem perda de generalidade assumimos que h\u00e1 somente um subsistema como mostra a fig.3.2. Subsistemas mUltiplos do mesmo tipo podem ser reduzido a um subsistema simples por representa\u00e7\u00e3o dos sinais de entrada e sa\u00edda em vetores. O sinal de entrada u(.) para o SCS \u00e9 um sinal constante por partes, cont\u00ednuo \u00e0 direita e com limites \u00e0 esquerda , assumindo valores sobre um conjunto finito de condi\u00e7\u00e3es U. Este sinal \u00e9 gerado pelo estado do FSM, de onde as transi\u00e7\u00e3es entre os estados sao forcadas por sinal evento v(.), um sinal que assume valores nao nulos apenas em instantes isolados do tempo no conjunto {0,1}nv gerado pelo TEG4. A funcao de transic\u00e3o de estados w da FSM \u00e9 n\u00e3o determin\u00edstico (por causa das incertezas do sistema). O conjunto de eventos que representa as transicoes na FSM possui valores n\u00e3o nulos para v(.), isto \u00e9, valores pertencentes ao conjunto de eventos de limiar V = to nfo \\nv\nFigura 3.2: Diagrama de blocos ilustrando um Sistema h\u00edbrido de eventos de limiar\nAs din\u00e2micas cont\u00ednuas do SCS sao definidas por uma trajet\u00f3ria de estados x(.), que evolui em X = e que satisfaz uma equac\u00e3o de estados da forma X(t) = fu(t)x(t), onde o sinal discreto u(.) seleciona a equa\u00e7\u00e3o de estados para a dinamica cont\u00ednua em cada instante. Similar \u00e0 fun\u00e7\u00e3o de transi\u00e7\u00e3o w n\u00e3o determin\u00edstica para a FSM, a equa\u00e7c\u00e3ao de estados \u00ede usada para modelar as din\u00e2amicas cont\u00ednuas. Os estados iniciais do SCS e da FSM s\u00e3o dados por x(0) G X0 C e u(0-) G U0 C U, respectivamente.\nOs eventos de limiar que constituem os valores n\u00e3o nulos de v(.), s\u00e3o gerados a seguir. Cada funcao de sa\u00edda g\u00bf define um evento de superf\u00edcie M\u00bf = (x|gi(x) = 0} onde i \u00ed o numero dos diversos eventos de superf\u00edcie. A func\u00e3o g(.) \u00ed aplicado no sinal x(.) produzindo o sinal de sa\u00edda y(.). O sinal resultante y(.) = g(x(.)) \u00e9 a entrada para o detector de zeros que gera o sinal v(.) de acordo com:\n4Significa que o conjunto {0,1} possui nv dimens\u00f5es, onde nv \u00e9 o n\u00famero de eventos ocorridos.\n1\n0\nVi(t) =\nse yi(t) = 0 A (3A > 0)(V\u00f4 G (0, A)) : yi(t \u2014 \u00f4) &lt;0 de outra forma\nNote que o detector de zeros e direcional: um evento e gerado somente quando uma componente de y(t) se aproxima de zero por um dos lados. Note tambem que um evento distinto e gerado quando mais de um limiar e atingido em um instante particular. Isto reflete o fato que quando limiares multiplos s\u00e3o alcan\u00e7ados simultaneamente pelas componentes de y(t), a informacao sobre a localiza\u00e7\u00e3o do estado cont\u00ednuo do sistema \u00e9 conhecida com maior precis\u00e3o quando qualquer um dos patamares \u00e9 alcan\u00e7ado individualmente. Sendo assim, n\u00e3o existe a ocorr\u00eancia simult\u00e2nea de eventos de limiar.\nO cenario de interesse e quando o sinal discreto u(.) muda de valor em resposta aos eventos de limiar observados em v(.). Ent\u00e3o, um par de sinais (u(.),v(.)) e admiss\u00edvel somente se descontinuidades em u(.) ocorrem somente quando v(.) \u00e9 n\u00e3o nulo. Isto poderia representar uma situa\u00e7ao, por exemplo, onde o SCS esta operando sob um controle de malha fechada com a FSM sendo o controlador e as transi\u00e7\u00e3es de estados no FSM sao guiados pelos eventos de limiar.\nAssegura-se que u(.) e um sinal constante pode ter numero finito de chaveamento em um intervalo de tempo finito qualquer, assumimos que v(.) \u00e9 n\u00e3o-explosivo (o termo usado em processos literarios de Markov), ou nao nula.\n3.3\tBissimula\u00e7\u00e3o e Sistema de Transi\u00e7\u00e3o Quociente\nEsta secao introduz algumas defini\u00e7\u00f5es formais de sistemas de transi\u00e7\u00e3o, sistemas de transi\u00e7\u00e3o quociente e bissimula\u00e7ao, que s\u00f5o a base para o procedimento de verifica\u00e7\u00f5o que iremos considerar. Mais detalhes est\u00f5o em (Chutinan 1999).\nDefini\u00e7\u00e3o 3.3 (Sistema de transi\u00e7\u00e3o) Um sistema de transi\u00e7\u00e3o T \u00e9 uma tripla T = (Q Qo) onde Q e o conjunto de estados, Q x Q e o conjunto de transi\u00e7\u00f5es e Qo C Q e o conjunto de estados iniciais.\nDado q e qt E Q, a notac\u00f5o q qf indica que (q, q') E^. Um caminho do sistema de transicao e uma sequencia de estados de tamanho finito ou tamanho infinito com cada par de estados consecutivos satisfazendo a rela\u00e7ca\u00f5o de transi\u00e7c\u00f5ao.\nDefinicao 3.4 (Caminho) Dado um sistema de transi\u00e7\u00e3o T = (Q, ^,Q0), uma\nseqUencia de estados n = q0q1... 6 Q* U 'T \u00e9 denominado um caminho de T se qi\tqi+1 para todo i > 0. O caminho n e denominado um \u201crun\u201d de T se q0 6 Qo.\nDado um conjunto de estados P C Q, os conjuntos de estados que podem alcan\u00e7ar P ou pode ser alcan\u00e7ado por P em um passo s\u00e3o denominados pre-condiq\u00e3o e pos condi\u00e7\u00e3o de P respectivamente. Estes conjuntos ser\u00e2o definidos formalmente a seguir. Defini\u00e7\u00e3o 3.5 (Conjuntos Pre/pos-condicao) Dado um sistemas de transi\u00e7\u00e3o T = (Q, ^,Q0) e um conjunto P C Q, a pre-condi\u00e7\u00e3o de P, denotado por Pre(P), e definido como\nPre(P) ={q 6 Q| 3p 6 P,q p}.\ne a pos-condi\u00e7\u00e3o de P, denotado por Post(P), definido como\nPost(P) = {q 6 Q| 3p 6 P,p\tq}.\nPara a proposta de verificac\u00e7\u00e3ao, introduziremos uma fun\u00e7c\u00e3ao etiqueta que designa uma etiqueta para cada estado no sistema de transi\u00e7c\u00e3ao. O sistema de transi\u00e7c\u00e3ao com a fun\u00e7ca\u00e3o etiqueta \u00ede denominada de sistema de transic\u00e7\u00e3ao etiquetado.\nDefini\u00e7\u00e3o 3.6 (sistema de transi\u00e7\u00e3o etiquetado) Um sistema de transi\u00e7\u00e3o etiquetado e uma tupla T = (Q, Qo, \u00a3,L) onde (Q, Qo) e um sistema de transi\u00e7\u00e3o, \u00a3 e um conjunto cont\u00e3vel de etiquetas e L : Q \u00a3 e \u00e3 fun\u00e7\u00e3o etiqueta.\nDado dois sistemas de transi\u00e7ao etiquetados T1 e T2 com o mesmo conjunto de etiquetas, T2 \u00ed dito simular T1 se para todo caminho de T1, existir um caminho correspondente em T2. Este conceito de simula\u00e7ao sera formalizado a seguir.\nDefini\u00e7\u00e3o 3.7 (Simulac\u00e3o) Seja T1\t=\t(Qb ^,Q01,\t\u00a3,L1)\te\tT2\t=\t(Q2,\t-.Q02,\t\u00a3,L2)\nsistemas de transi\u00e7c\u00e3ao etiquetados. Uma relac\u00e7\u00e3ao de simula\u00e7c\u00e3ao de T1 para T2 e uma rela\u00e7\u00e3o binaria fi C Q1 x Q2 tal que:\n1.\tPara todo q1 6 Q1, deve existir q2 6 Q2 tal que (q1, q2) 6 fi;\n2.\tSe\t(q1,q2)\t6 fi, e q1 ^1 q1, ent\u00e3o existe q'2 tal\tque q2\t-2 q'2\te (qx, q'2)\t6 fi;\n3.\tSe\t(q1,q2)\t6 fi, entao q1 6 Q01 q2 6 Q02; e\n4.\t(Simulacao com etiqueta) Se (q1,q2) Vs entao L1(q1) = L2(q2).\nDizemos que T2 simula Tx por\tutiliza-se a notacao Tx \u2014 T2, se e uma rela\u00e7ao\nde simula\u00e7\u00e3o de Tx por T2. T2 e tambem chamado de uma ^-simula\u00e7\u00e3o de Tx.\nDefini\u00e7\u00e3o 3.8 (Bissimula\u00e7ao) Seja T1\nQoi, \u00a3,L1) e T2\t=\t(Q2; ^2\n, Q02, \u00a3,L2) sistemas de transi\u00e7ao etiquetados. Uma rela\u00e7ao de bissimula\u00e7ao entre\nTx por T2 e 1 \u00c7 Q2 x Qx e uma rela\u00e7ao de simula\u00e7ao de T2 por Tx.\nDizemos que os sistemas de transic\u00e3o Tx e T2 bissimulam mutuamente por\tutiliza-\nse a notacao Tx = T2, se \u00e9 uma rela\u00e7\u00e3o de bissimulac\u00e3o entre Tx e T2.\nUma abordagem para encontrar uma bissimulac\u00e7\u00e3ao do sistema de transi\u00e7c\u00e3ao etiquetado e o sistema de transi\u00e7\u00e3o quociente (QTS). Um sistema de transi\u00e7\u00e3o quociente e constru\u00eddo atraves de uma parti\u00e7\u00e3o do espaco de estados sob o sistema de transic\u00e3o. A parti\u00e7ca\u00e3o deve ser consistente com a func\u00e7\u00e3ao etiquetada em que n\u00e3ao ha dois estados no mesmo conjunto na parti\u00e7ca\u00e3o que sa\u00e3o permitidos ter diferentes etiquetas.\nRelac\u00e7\u00e3oes de bissimula\u00e7ca\u00e3o s\u00e3ao importantes para a verifica\u00e7c\u00e3ao porque qualquer dois sistemas de transi\u00e7ca\u00e3o que possuem uma rela\u00e7c\u00e3ao de bissimula\u00e7c\u00e3ao sa\u00e3o equivalentes em termos de alcan\u00e7cabilidade de estados. A verifica\u00e7c\u00e3ao pode ser executada em qualquer um dos dois sistemas de transi\u00e7c\u00e3ao e o resultado sera id\u00f4entico. Isto tem uma implica\u00e7ca\u00e3o significante para a verifica\u00e7c\u00e3ao de um sistema de transi\u00e7c\u00e3ao de estados infinitos em que se pudermos encontrar uma bissimula\u00e7c\u00e3ao de estados finita, podemos executar a verifica\u00e7c\u00e3ao na bissimula\u00e7ca\u00e3o de estados finitos e o procedimento de verifica\u00e7ca\u00e3o esta garantido que termina.\n3.4\tVerifica\u00e7ao de Sistemas H\u00edbridos\nSistemas de transic\u00e7\u00e3ao nos proporcionam a base para a formula\u00e7c\u00e3ao para o problema de verifica\u00e7c\u00e3ao. Nesta se\u00e7c\u00e3ao, faremos uma breve introdu\u00e7c\u00e3ao sobre a arvore de com-putacao logica (CTL)5 (Chutinan 1999). Este formalismo \u00e9 utilizado para expressar as especifica\u00e7c\u00e3oes de sistemas de transi\u00e7c\u00e3ao, em especial, para o QTS. Tambem nesta se\u00e7c\u00e3ao sera tratada a verifica\u00e7\u00e3o de sistemas h\u00edbridos utilizando bissimulac\u00e3o e QTS.\n5\tA abreviatura utilizada \u00e9 do nome em ingl\u00eas computation tree logic\nz\n3.4.1\t.Arvore de computa\u00e7\u00e3o l\u00e1gica\nA\u00f3 rvore de computac\u00e7\u00f5ao l\u00f3ogica \u00f3e uma linguagem que \u00f3e usada para especificar a evolu\u00e7ca\u00f5o do sistema em termos de valores verdadeiros atrav\u00f3es de proposi\u00e7c\u00f5oes at\u00f4omicas ao longo dos caminho da CTL. Uma f\u00f3rmula CTL consiste de operadores temporais e de quantificadores de caminhos . Operadores temporais especificam a evoluc\u00e7\u00f5ao do sistema ao longo de um u\u00f3nico caminho da \u00f3arvore computacional. H\u00f3a quatro operadores temporais b\u00f3sicos: X, F, G, e U. O operador temporal X (\u201cpr\u00f3ximo passo\u201d) assegura que a propriedade \u00f3 garantida no pr\u00f3ximo estado do caminho. F (\u201cno futuro\u201d) assegura que a propriedade e garantida em algum estado no futuro (incluindo o estado atual). G (\u201cGlobalmente\u201d) assegura que a propriedade e garantida globalmente, isto e, em todos os estados ao longo caminho. O operador U envolve duas propriedades. A inserc\u00f5o f Ug requer que g e garantido em algum estado no futuro (incluindo o estado atual) e que f \u00e9 garantido em todo estado ao longo do caminho antes da ocorr\u00f4ncia de g. Quantificadores de caminho A e E se e para todos os caminhos ou para alguns caminhos respectivamente. A tabela 3.1 resume os operadores CTL.\nQuantificadores de caminho\t\tOperadores temporais\t\nA\tPara todos os caminhos\tF\tNo futuro\nE\tPara algum caminho\tG\tGlobalmente\n\t\tX\tPr\u00f3ximo passo\n\t\tU\tAt\u00f3 que\nTabela 3.1: Operadores basicos da CTL\nFormalmente, a sintaxe da formula CTL f e dado pela semantica:\nSem\u00e2ntica CTL:f \u2014 ap, ~ ap, f&amp;f, f |f, AXf, AFf, AGf, AfUf, EXf,\nEFf, EGf, EfU\t(3.1)\nonde ap denota uma proposi\u00e7\u00e3o at\u00f4mica e &amp; e | s\u00e3o os operadores l\u00f3gicos not, and e or respectivamente. Ha uma subclasse de CTL que \u00e9 a ACTL, a qual e utilizada pela ferramenta CheckMate. Na sec\u00e3o 2.5 discutiremos sobre a ACTL.\n3.4.2\tVerifica\u00e7\u00e3o utilizando bissimulac\u00e3o\nO conceito para especifica\u00e7\u00e3o de transi\u00e7\u00e3es de estados finitos pode ser estendido para transi\u00e7\u00e3es de estados infinito, tal que o tra\u00e7o discreto do sistema de transi\u00e7\u00e3o seja Th , onde H e um TEDHS ou um automato h\u00edbrido. Proposi\u00e7\u00f5es atomicas podem ser\ndesignadas para cada estado de TH para formar um sistema de transic\u00e3o etiquetado e uma arvore computacional para TH (com incontavel numero de n\u00eds) pode ser obtida por desdobramento de seu grafo de transicoes. Uma especifica\u00e7\u00e3o CTL pode ser interpretada como antes no caso de sistemas de transi\u00e7c\u00e3ao de estados finitos. O problema aqui \u00ed que a computac\u00e3o feita pela f\u00edrmula CTL n\u00e3o terminar\u00ed porque o espaco de estado de TH \u00ed infinito.\nPara retificar este problema, muitos autores consideram o problema encontrando uma bissimula\u00e7ao finita de TH. Verificando propriedades da bissimulacao \u00ed equivalente verificar as mesmas propriedades do sistema original. Ent\u00e3o, se uma bissimula\u00e7\u00e3o finita for encontrada, a verificac\u00e7\u00e3ao pode ser executada na bissimula\u00e7c\u00e3ao, garantindo seu t\u00edrmino. A figura 3.3a mostra a abordagem de verifica\u00e7\u00e3o utilizando bissimula\u00e7ao. No entanto, uma bissimula\u00e7ca\u00e3o de estados finitos existe somente para algumas classes de sistemas h\u00edbridos (Chutinan 1999). Sabendo que uma bissimula\u00e7\u00e3o de estados finitos pode nao existir para a maioria dos sistemas h\u00edbridos, o procedimento de calcular a bissimulac\u00e7\u00e3ao pode na\u00e3o terminar e o passo de verifica\u00e7c\u00e3ao pode n\u00e3ao ser executado. Mesmo que uma bissimula\u00e7\u00e3o de estados finitos exista, pode levar um longo tempo para o procedimento de calcular a bissimulac\u00e7a\u00e3o convergir para a solu\u00e7c\u00e3ao. Na pr\u00edoxima sec\u00e7\u00e3ao, discutiremos uma alternativa para contornar este problema em certos casos.\n3.4.3\tVerificac\u00e3o utilizando sistemas de transic\u00e3o quociente\nNesta se\u00e7c\u00e3ao, observamos que os sistemas de transi\u00e7ca\u00e3o quociente s\u00e3ao, em geral, si-mulac\u00e7\u00e3oes sob o sistema de transic\u00e7\u00e3ao. Poder\u00edamos enta\u00e3o executar a verificac\u00e7\u00e3ao no sistema de transi\u00e7c\u00e3ao quociente em qualquer interac\u00e7\u00e3ao do procedimento de bissimula\u00e7c\u00e3ao mais r\u00edapido que esperar pelo procedimento de bissimula\u00e7c\u00e3ao terminar. Se a propriedade \u00ede verificada, na\u00e3o precisar\u00edamos refinar o sistema de transi\u00e7c\u00e3ao quociente. Sen\u00e3ao, outra intera\u00e7ca\u00e3o de refinamento pode ser executado e a verifica\u00e7ca\u00e3o pode ser atendida no novo QTS. Continuando este processo, em algumas vezes se \u00ed poss\u00edvel concluir ou n\u00e3o que o sistema h\u00edbrido satisfaz determinada propriedade antes que a bissimulac\u00e7\u00e3ao fosse encontrada. A figura 3.3b mostra a alternativa de abordagem de verifica\u00e7\u00e3o usando QTS. A restri\u00e7c\u00e3ao aqui \u00ede que como o QTS s\u00e3ao aproxima\u00e7co\u00e3es conservativas sob o sistema de transic\u00e7\u00e3ao, somente propriedades universais podem ser verificadas. No contexto de CTL, uma propriedade universal \u00ede uma propriedade que pode ser especificada como uma fo\u00edrmula ACTL.\nResumindo, se pudermos verificar que todas a trajet\u00f3rias no QTS satisfazem alguma propriedade, podemos concluir que todas as trajet\u00f3rias do sistema h\u00edbrido tamb\u00edm satisfazem as mesmas propriedades, ou seja, encontramos uma bissimulac\u00e7\u00e3ao para o QTS.\nFigura 3.3: Abordagens de verifica\u00e7\u00e3o\nPara encontrar uma condi\u00e7\u00e3o de bissimula\u00e7\u00e3o que termina a verifica\u00e7\u00e3o, talvez seja necess\u00e1rio calcular um refinamento da parti\u00e7\u00e3o. Na pr\u00f3xima se\u00e7ao, sera feito uma introdu\u00e7\u00e3o da ferramenta CheckMate e introduziremos o refinamento da partic\u00e3o que o CheckMate usa.\n3.5\tCheckMate\nO CheckMate \u00e9 uma ferramenta de verificac\u00e3o de sistemas h\u00edbridos. O CheckMate implementa uma t\u00e9cnica de verifica\u00e7\u00e3o que \u00e9 aproximar conservativamente o sistema h\u00edbrido original para um modelo discreto puro (Alur 1993). O processo de verifica\u00e7\u00e3o no CheckMate \u00e9 mostrado na figura 3.4.\nA classe de sistemas h\u00edbridos que pode ser modelada no CheckMate \u00e9 o TEHDS visto na se\u00e7\u00e3o 2.2. O procedimento de verifica\u00e7ao inicia com a convers\u00e3o do modelo TEHDS feito no ambiente Simulink em um modelo equivalente, que \u00e9 o PIHA, tratado na se\u00e7\u00e3o 2.1. O PIHA resultante \u00e9 discretizado na forma de um QTS, por uma parti\u00e7\u00e3o inicial de acordo com as especifica\u00e7co\u00e3es do usu\u00e9ario. As transic\u00e7\u00e3oes feitas entre os estado no QTS s\u00e3ao calculadas utilizando a t\u00e9ecnica de an\u00e9alise de alcanc\u00e7abilidade cont\u00e9nua Aproxima\u00e7\u00f5es Flow Pipe (Chutinan e Krogh 1999b). O QTS \u00e9 entao verificado pelas especificac\u00e3es ACTL utilizando a t\u00e9cnica padr\u00e3o Model Checking (Alur e Dill 1990) para um sistema de transic\u00e7\u00e3ao de estados finitos. A verifica\u00e7c\u00e3ao pode falhar devido ao fato do sistema h\u00edbrido aproximado pelo QTS ser modelado de uma maneira mais grosseira. A partic\u00e7a\u00e3o para o QTS pode ser refinado gerando uma aproxima\u00e7c\u00e3ao mais exigente. Ap\u00f3s o refinamento da parti\u00e7\u00e3o, as aproximac\u00e3es flow pipe s\u00e3o utilizadas\nFigura 3.4: Procedimento de verifica\u00e7\u00e3o do CheckMate\npara redefinir as transi\u00e7c\u00e3oes no QTS. O processo se repete at\u00ede que o QTS satisfa\u00e7ca a especifica\u00e7c\u00e3ao ou o usu\u00edario escolha encerrar a verifica\u00e7c\u00e3ao.\nMais detalhes do CheckMate ser\u00e3o discutidos nas subsecoes subsequentes.\n3.5.1\tPrincipais Blocos do CheckMate\nModelos do CheckMate sao constru\u00eddos sob a interface Matlab/Simulink utilizando duas mascara de blocos do simulink, al\u00edm dos v\u00edrios blocos padr\u00e2o do Simulink. A seguir a descri\u00e7c\u00e3ao de cada bloco do Checkmate:\n3.5.1.1\tSwitched Continuous System (SCS)\n-\tPar\u00f4ametro: Func\u00e7\u00e3ao de Mudan\u00e7cas f\n-\tEntrada: Sinal Discreto u\n-\tSa\u00edda: Vetor de estados Cont\u00ednuos x\n-\tDescricao:Dinamicas cont\u00ednuas selecionadas pelo sinal de entrada discreto\nFigura 3.5: Bloco SCS\nAs din\u00f4micas cont\u00e9nuas do bloco SCS s\u00f5o da forma:\n\u00b1 = fu(x)\n(3.2)\nO SCS aceita tr\u00f4s tipos de dinamicas cont\u00f3nuas, que podem ser especificadas por cada valor da entrada discreta u. A tabela 3.2 ilustra os tipos de din\u00f4micas cont\u00f3nuas:\n\u2018clock\u2019\tDin\u00f4micas cont\u00f3nuas da forma x = c onde c \u00f3 um vetor constante\n\u2018linear\u2019\tDin\u00f4micas cont\u00f3nuas da forma x = Ax + b onde A e b sao vetores constantes n x n e n x 1 respectivamente\n\u2018nolinear\u2019\tDin\u00f4micas cont\u00f3nuas da forma Xc = f (x)\nTabela 3.2: Tipos de din\u00f4micas cont\u00e9nuas\n3.5.1.2\tPolyhedral Threshold (PTHB)\nFigura 3.6: Bloco PTHB\n-\tPar\u00f4metro: C,d\n-\tEntrada: Vetor de estados Cont\u00e9nuos x\n-\tSa\u00edda: Sinal Booleano\n-\t1 se Cx &lt;d , 0 se nao\n-\tDescri\u00e7\u00e3o: As sa\u00eddas indicam quando x est\u00e1 dentro da regi\u00e3o (poliedro Cx &lt;d) ou n\u00e3o.\n3.5.1.3\tBloco M\u00e1quina de Estados Finito (FSM)\nFigura 3.7: Bloco FSM\nDin\u00e2micas discretas s\u00e3o modeladas usando um FSM. O FSM possui as seguintes propriedades:\n-\tEntradas: podem ser eventos (vetores) ou dados escalares\n-\tDados de entrada devem ser funcoes booleanas do PTHB e FSMB produz sa\u00eddas somente\n-\tEventos de entrada devem ser fun\u00e7\u00e3es booleanas de sa\u00eddas do PTHB somente\n-\tSa\u00eddas: Sinal discreto (Inteiro) indicando estado ativo do FSM\nOutros blocos do Simulink suportados pelo CheckMate inclui multiplexadores e blocos logicos ( AND, OR, NOT, etc.) para criar combinac\u00e3es l\u00e1gicas de PTHB e sa\u00eddas FSM.\n3.5.2\tAproxima\u00e7\u00f5es Flow Pipe\nPara calcular um QTS para um PIHA, \u00e1 necessario calcular o conjunto de estados alcan\u00e7aveis sob as dinamicas cont\u00ednuas para uma loca\u00e7\u00e3o dada do PIHA, denominado de aproxima\u00e7\u00e3es flow pipe.\nPara a din\u00e2mica clock, as equa\u00e7\u00f5es de todas as loca\u00e7\u00f5es s\u00e3o da forma x G F onde F e um poliedro constante. Neste caso os conjuntos alcan\u00e7aveis de qualquer poliedro inicial s\u00f5o obtidos pela proje\u00e7\u00f5o do poliedro inicial em todas as poss\u00edveis dire\u00e7\u00f5es que as trajet\u00f3rias do poliedro inicial podem alcancar. A fig. 3.8 mostra como funciona as aproxima\u00e7\u00f5es flow pipe para a dinamica clock.\nFigura 3.8: M\u00e9todo aproxima\u00e7\u00f5es flow pipe para a din\u00e2mica clock\nNo caso de din\u00e2micas n\u00f5o-lineares e lineares da forma x = Ax + b a tecnica de aproxima\u00e7\u00f5es flow pipe aproxima os conjuntos alcan\u00e7aveis por uma sequencia de poliedros convexos. O metodo inicia dividindo os conjuntos alcan\u00e7aveis em time segments e aproxima cada conjunto alcan\u00e7cavel de cada segmento por um encapsulamento de um poliedro convexo, denominado de politopo, ilustrado na fig. 3.9.\nFigura 3.9: Metodo aproxima\u00e7\u00f5es flow pipe para as din\u00e2micas linear e n\u00f5o linear\nMais detalhes sobre esta tecnica podem ser encontrados em (Chutinan e Krogh 1999b).\n3.5.3\tVerifica\u00e7\u00e3o ACTL\nACTL \u00ed uma subclasse do CTL. A sintaxe da f\u00edrmula ACTL f \u00ed dado pela sema\u00e2ntica:\nSem\u00e2ntica CTL:f\tap, ~ ap, f&amp;f, f\\f, AXf, AFf, AGf, AfUf\t(T3)\nNote que somente o quantificador universal A est\u00ed presente na f\u00edrmula ACTL. Isto \u00ed devido ao fato que o CheckMate utiliza aproxima\u00e7\u00f5es conservativas (QTS) para verificar propriedades do sistema h\u00edbrido. Conclu\u00edmos que o sistema h\u00edbrido original satisfaz a especifica\u00e7c\u00f5ao das aproxima\u00e7co\u00f5es conservativas somente quando uma especifica\u00e7c\u00f5ao universal (uma especifica\u00e7ao no qual requer que uma certa propriedade \u00ed garantida para todos os comportamentos do sistema) \u00ede usada. A seguir alguns exemplos de express\u00f5oes ACTL.\n\u2022\tAG seguro: o sistema \u00ed seguro em todos os caminhos\n\u2022\tAG (AF reset): o sistema \u00ed resetado infinitamente ao longo de todo caminho computacional\nDado uma especifica\u00e7c\u00f5ao CTL e um sistema de transi\u00e7ca\u00f5o de estados finitos , o problema de verifica\u00e7\u00f5o, tambem chamado de problema model checking \u00ed formalizado como:\nProblema Model Checking: encontrar o conjunto de valores onde a f\u00edrmula CTL dada \u00ede verdadeira.\n3.5.4\tRefinamento da Parti\u00e7\u00e3o\nNeste t\u00edopico ser\u00eda discutido o refinamento da partic\u00e7\u00f5ao que \u00ede usado pelo CheckMate (Chutinan e Krogh 2001).\nSe a verifica\u00e7c\u00f5ao do QTS falhar devido uma discretiza\u00e7c\u00f5ao grosseira, o usu\u00edario tem a op\u00e7c\u00f5ao de refinar a parti\u00e7ca\u00f5o, construir o pr\u00edoximo QTS, e uma nova tentativa de verificac\u00e7a\u00f5o. Para evitar que haja uma explos\u00f5ao de estados no refinamento, o CheckMate somente refina os estados que satisfazem os seguintes crit\u00ederios:\nEstados com mais de um estado sucessor\n\u2022\tEstados iniciais que n\u00e3o satisfazem a especifica\u00e7\u00e3o ACTL e todos os seus descendentes\nOs crit\u00e9rios foram adotados pelas razoes seguintes. Para o primeiro crit\u00e9rio, n\u00e3o \u00e9 preciso refinar um estado se este somente tem um Unico comportamento, sempre direcionado a um unico caminho, de tal forma que nao h\u00e1 ganho de nova informa\u00e7\u00e3o. Para o segundo crit\u00e9rio, recai no conceito que a especifica\u00e7ao ACTL \u00e9 universal. Ent\u00e3o, todos os comportamentos dos estados iniciais que satisfazem a especifica\u00e7c\u00e3ao est\u00e3ao no QTS sao garantidos para satisfazer a especificacao no sistema h\u00edbrido. Ent\u00e3o, a ve-rificac\u00e7a\u00e3o resultante na\u00e3o pode ser melhorada por refinamento desses estados iniciais e seus descendentes.\nO esquema seguinte de refinamento utilizado pelo CheckMate para cada estado que foi refinado.\n\u2022\tCalcular os estados fonte, ou seja, o conjunto de estados que possuem transi\u00e7\u00e3o para o estado corrente.\n\u2022\tSuper aproximar o conjunto alcanc\u00e9vel para cada estado fonte que esta contido no mesmo invariante como os politopos do estado corrente atrav\u00e9es de um hiper-ret\u00e2ngulo (Isto \u00e9 feito para reduzir o numero de politopos que podemos processar enquanto mant\u00e9m conservativamente a aproximac\u00e3o).\n\u2022\tSubtrai e interseciona cada hiperret\u00e2angulo com o politopo associado a cada estado corrente. Isto separa o politopo para o estado corrente na parte que pode ser alcan\u00e7cada e a parte que \u00e9e definitivamente inalcan\u00e7c\u00e9avel por cada estado fonte.\nO esquema de refinamento \u00e9e designado para dividir o politopo de cada estado em partes que podem ser alcan\u00e7cadas por diferentes combina\u00e7c\u00e3oes dos estados fontes.\n3.6\tDiscuss\u00e3o\nNeste cap\u00edtulo apresentou-se uma introdu\u00e7\u00e3o de conceitos importantes sobre o formalismo de sistemas h\u00e9bridos. Estes conceitos est\u00e3ao impl\u00e9citos no procedimento de verificac\u00e7\u00e3ao do CheckMate , outros s\u00e3ao importantes para uma modelagem proposta na planta piloto atrav\u00e9s de aut\u00e2matos h\u00e9bridos. Tal modelagem ser\u00e9 discutida no cap. 5. O importante para o leitor \u00e9e fixar este formalismo para ent\u00e3ao facilitar o entendimento de como modelar uma planta h\u00e9brida e utiliza\u00e7ca\u00e3o do CheckMate .\nDiscutiu-se, ainda neste cap\u00e9tulo, a ferramenta CheckMate sob um contexto te\u00e9rico. A utilizac\u00e7\u00e3ao do CheckMate para o presente trabalho \u00e9e gerar um aut\u00e2omato discreto\nque represente todos os comportamentos poss\u00e9veis da planta de acordo com o modelo auto\u00f4mato h\u00e9brido. Tal aut\u00f4omato h\u00e9brido foi modelado conforme sistema h\u00e9brido que ser\u00e1 proposto no cap. 5.\nVale ressaltar que alguns conceitos como refinamento da parti\u00e7\u00e3o do QTS foram citados de forma espec\u00e9fica. Este procedimento \u00e9 importante para o uso do CheckMate , n\u00e3ao sendo o foco deste documento detalhar o amplo formalismo dos procedimentos de verifica\u00e7c\u00e3ao de sistemas h\u00e9bridos.\nCap\u00edtulo 4\nControle Supervis\u00f3rio de Sistemas\nH\u00edbridos\n4.1\tSistema Condi\u00e7\u00e3o Evento\nNeste cap\u00e1tulo sera feita a modelagem da planta h\u00e1brida sob o formalismo de sistema C/E. O experimento que ser\u00e1 feito nos cap\u00e1tulos subsequentes sera baseado nesta abordagem. Sistema C/E pode ser aplicado tanto para modelagem de sistemas h\u00e1bridos como para modelagem de SED (Leal 2002).\n4.2\tFormula\u00e7\u00e3o do Problema\n->\nConsidera-se a classe de sistemas h\u00e1bridos de tempo cont\u00e1nuo, H, composta pela interconex\u00e3o de um subsistema de din\u00e2mica discreta, Hd e outro de dinamica cont\u00e1nua, Hc, conforme ilustrado na fig.4.1. Os aspectos discretos da planta h\u00e1brida sao caracterizados por sinais condi\u00e7ao e sinais evento (Sreenivas e Krogh 1991).\nFigura 4.1: Planta h\u00e9brida H\nO sinal de entrada para o subsistema cont\u00e9nuo, Hc, \u00e9 um sinal condicao, u(.), um sinal constante por partes, cont\u00e9nuo a direita e com limites a esquerda (figura 4.2(a)), assumindo valores sobre um conjunto finito de condi\u00e7oes U. O espaco de todos os sinais condicao u(.) em [0, x ) \u00e9 denotado por U. O sinal de sa\u00e9da do subsistema cont\u00e9nuo \u00e9 um sinal evento, v(.), um sinal que assume valores nao nulos apenas em instantes isolados do tempo (ver figura 4.2 (b)). O espa\u00e7o de todos os sinais evento v(.) em [0, x) \u00e9 denotado por V.\nFigura 4.2: Representa\u00e7\u00e3o dos sinais condi\u00e7\u00e3o evento\nO subsistema cont\u00e9nuo pode ser divido ainda em dois blocos funcionais: um sistema cont\u00e9nuo chaveado e um gerador de eventos de limiar conforme mostrado na figura 4.3.\nFigura 4.3: Subsistema cont\u00ednuo Hc\nAs dinamicas cont\u00e9nuas da planta h\u00e9brida H s\u00e3o definidas por uma trajet\u00e9ria de estados x(.), que evolui em X = e que satisfaz uma equa\u00e7ao de estados da forma x(t) = fu(t)x(t), onde fu :\tpara todo u E U. Assim, a sele\u00e7ao da din\u00f4mica\ncont\u00e9nua(representada pela equa\u00e7c\u00e3ao de estados) \u00e9e feita a cada instante pelo sinal condi\u00e7\u00e3o u(t). O valor inicial da trajet\u00f3ria de estados, x(0), pertence ao conjunto de estados iniciais X0 \u00c7 Rn. O conjunto de todas as poss\u00e9veis trajet\u00f3rias de estado para um dado sinal de entrada u(.) E U, iniciando em qualquer estado do conjunto X' C X0, \u00e9 denotado por Xu(.) (X').\nA func\u00e3o g : X\tgera o sinal cont\u00e9nuo de sa\u00e9da, y E , da trajet\u00f3ria de\nestados, ou seja, y(.) = g(x(.)). Cada componente do sinal cont\u00e9nuo de salda, y^ e comparado a um patamar, Ti, definido pelos componentes de um vetor de patamares, T E e o sinal de sa\u00e9da evento \u00e9 gerado por um detector de zeros, definido para t > 0 e i = 1,2,m como:\nse yi(t) - Ti = 0 A (3A > 0)\n(V\u00f5 6 (0, 5)) : yi(t - \u00f5) - Ti &lt;0 de outra forma\nUm evento de limiar ocorre nos instantes em que vi = 0. Note que os sinais evento v(.) assumem valores n\u00e3o nulos, isto \u00ed, valores pertencentes ao conjunto de eventos de limiar V = {0,1}nv -{0 }nv.\nObserve que na equa\u00e7ao de vi(t) a condic\u00e3o dada por yi(t- \u00f5) -Ti &lt;0 faz com o que um evento de limiar seja gerado somente quando a superf\u00edcie limite for alcancada por um dos lados, ou seja, a sinalizac\u00e7\u00e3ao do evento \u00ede unidirecional. Note que a inequa\u00e7ca\u00e3o yi(t - \u00f5) - Ti &lt;0 deve ser satisfeita para um \u00f5 > 0, ou seja, para que um evento v seja gerado no instante t \u00ede necess\u00edario que yi - Ti &lt;0 durante algum tempo A antes da superf\u00edcie yi-Ti ser atingida. Essa restri\u00e7ao impede que eventos sejam \u201ccontinuamente\u201d gerados quando yi desliza sobre a superf\u00edcie por um certo instante de tempo.\nO subsistema discreto \u00ed um sistema de din\u00f4mica puramente discreta que mapeia, de forma nao determin\u00edstica, sinais evento v(.) 6 V em sinais condi\u00e7ao u(.) 6 U. Assume-se que pode mudar o sinal condi\u00e7\u00e3o de entrada para Hc se e somente se um evento de limiar \u00ede observado. O subsistema discreto tem uma caracter\u00edstica de possibilitar a adic\u00e7a\u00e3o de informa\u00e7c\u00e3oes sobre as possibilidades de chaveamento, ou seja, permite modelar restri\u00e7\u00e3es sobre as poss\u00edveis entradas a serem aplicadas a Hc. A din\u00f4amica discreta \u00ede expressa por aut\u00f4omatos de Moore, sendo que as transi\u00e7c\u00e3oes de estados representam os eventos e as sa\u00eddas dos estados s\u00e3o as condic\u00e3es u (Cury e Niinomi 1998).\nA seguir da-se continuidade a modelagem da planta h\u00edbrida, utilizando-se para tal o formalismo de sistemas sistema C/E introduzido por (Sreenivas e Krogh 1991). Antes, por\u00e9m, define-se o produto cartesiano s\u00edncrono de V e U, denotado por V \u00ae U, como o conjunto de todos os pares (v(.), u(.)) 6 VxU, tal que descontinuidades em u(.) ocorrem apenas em instantes em que v(.) \u00ed n\u00e3o nulo. Define-se ainda o conjunto Vm C V com a classe de sinais evento v(t) que t\u00f4em a propriedade de possuir um nu\u00edmero finito de descontinuidades em t 6 [0, x).\nO subsistema cont\u00ednuo Hc \u00ed definido como um subconjunto de V U, sendo que o par (v(.),u(.)) 6 H se e somente se existe uma trajet\u00f3ria de estados x(.) 6 Xu(.)(X0) tal que o sinal evento de sa\u00edda resultante \u00ede v(.).\nDescreve-se o comportamento discreto do sistema C/E Hc pelo seu modelo estado discreto. Para tanto, introduz-se a representarlo de traco discreto para Hc como uma 4 - tupla (W, fi,p, W0), descrita com segue. Considere o sinal condicao w(.), constante\npor partes e cont\u00ednuo \u00e0 direita , que registra o valor correspondente da trajet\u00f3ria de estados x(.) apenas nos instantes de descontinuidades em (v(.),u(.)) G Hc. O conjunto W \u00ed o conjunto de todos os valores que o sinal w(.) pode assumir e W0 \u00ed o conjunto dos poss\u00edveis valores iniciais para w(.) . A diferenca entre w(.) e x(.) \u00ed que somente o segundo registra a trajet\u00f3ria entre as descontinuidades na entrada e sa\u00edda do sistemas . Assim, W \u00ed o mesmo conjunto original de estados X, ou seja, W = e W0 = X0. A func\u00e3o de transicao P : w x u W para w(.) possui a forma w(t) = P(w(t-),u(t-)) e \u00ede tal que:\n( \u00edu(t-)(t,W(t\")) w(t) =\n[ u(t-)\nse para algum i =1, 2,\tgi(^u(t-)(t, u(t ))) \u2014 Ti = 0\nA(3A > 0)(W G (0, A)) : gi($u(t-)(t \u2014\t-\t\u2014 ! &lt;0\nde outra forma\nonde $u(t,x(t0)) \u00ed a solu\u00e7\u00e3o da equac\u00e3o diferencial X = fu(x) para u G U, t > t0 e valor inicial x(t0). Utiliza-se a nota\u00e7\u00e3o t- para simbolizar o limite pela esquerda ao instante t. Observe que as transi\u00e7\u00e3es de estado (mudan\u00e7as no valor de w) ocorrem apenas nos instantes em que um hiperplano \u00ed alcan\u00e7ada. A funcao de sa\u00edda evento p : W x W V gera o evento de limiar correspondente no instante de transic\u00e3o do estado w(.) e \u00ed nula em qualquer outro instante. Ela \u00ed definida como:\nv(t) = p(w(t ),w(t))\n(4.1)\nDe forma semelhante, o subsistema discreto \u00e9 definido como \u00c7 . O modelo de estado discreto para \u00e9 dado pela 4 - tupla (Q, \u00ea, p, q0) onde q e conjunto discreto de estados, enumeravel e possivelmente infinito, q0 = q(0-) e o estado inicial e as fun\u00e7\u00e3es de transi\u00e7ao 5 : Q x V 2Q e de sa\u00edda condicao : Q U s\u00e3o definidas para t G [0, x ) por:\n?(\u00ed) G \u00e2(\u00ed(\u00ed ),\u00bb>(())\nu(\u00ed) = 0(q(\u00ed\u00bb\n(4.2)\n(4.3)\nNote que a ocorr\u00eancia de um evento v(.) a transi\u00e7\u00e3o do estado q(.) \u00e9 feita de forma nao determin\u00edstica e que o sinal de sa\u00edda do subsistema discreto 'Hd depende apenas deste estado. Portanto, a escolha do sinal condi\u00e7\u00e3o a ser aplicado ao subsistema cont\u00ednuo, em resposta ao evento observado, \u00ed feita de forma n\u00e3o determin\u00edstica por 'h\u00edd. Desta forma, ao observar um evento v(t), Hd transita para o estado q(t) e um sinal condi\u00e7\u00e3o u(t) \u00ed aplicado de forma instant\u00eanea.\n4.2.1\tSupervis\u00e3o da planta H\u00edbrida\nConsidere agora o esquema de controle supervisorio da fig.4.4 para a classe de sistemas h\u00edbridos apresentada anteriormente nesta cap\u00edtulo. Observe que neste modelo foi acrescida uma entrada m ao subsistema discreto e consequentemente, a planta h\u00edbrida H. Assim, denotaremos por e H o subsistema discreto em malha fechada e a planta h\u00edbrida em malha fechada respectivamente, de forma a diferenci\u00e1-los dos seu correspondentes sem acao de controle. O supervisor F observa os sinais condi\u00e7\u00e3o u(.) e evento v(.) da planta h\u00edbrida H, em resposta, aplica uma entrada de controle m(.) ao subsistema discreto de forma a restringir a gama de poss\u00edveis condic\u00e3es u(.) aplicadas ao subsistema cont\u00ednuo A entrada de controle \u00ed um sinal evento m(.) E M tomando valores nao-nulos no conjunto M = 2U e \u00ed interpretada como o conjunto das condic\u00e3es que pode aplicar \u00e0 Hc. O cenario de interesse e quando m(.) muda de valor somente quando ocorre uma descontinuidade no sinal evento v(.). O supervisor pode gerar um sinal evento m(t) se e somente se ele observar um evento de limiar v(t), o que faz com o que as descontinuidades em m(.) e em v(.) e consequentemente em u(.) sejam s\u00edncronas. No momento de ocorr\u00eancia de um evento v(t) E V uma entrada de controle m(t) C U e aplicada no supervisor e, estando no estado q(t-), o conjunto das poss\u00edveis condi\u00e7\u00f5es de entrada a serem aplicadas a Hc fica restrito a m(t) 0 ^(q(t)) E U : q(t) E \u00f5(q(t~)), v(t)).\nFigura 4.4: Esquema de controle supervis\u00edrio para a planta h\u00edbrida.\nO subsistema discreto com entrada de controle \u00ed definido como C V O M O U, sendo que a unica diferenca entre o modelo de estado discreto de em rela\u00e7ao ao modelo para a vers\u00e3ao em malha aberta reside na fun\u00e7ca\u00e3o de transic\u00e7\u00e3ao, definida agora na forma: 5 : Q x V x M 2Q para t E [0, x ) como:\n5(q(t ),v(t),m(t)) = q(t) E \u00ea(q(t ),v(t)): ^(q(t)) E m(t)\t(4.4)\nModelando a restri\u00e7ao imposta pela entrada de controle m(t) \u00e0s poss\u00edveis condi\u00e7\u00e3es\nque o subsistema discreto pode escolher no instante t de ocorr\u00eancia do evento v(t). A func\u00e3o de sa\u00edda condi\u00e7ao \u00e9 a mesma que a do modelo sem entrada de controle, ou seja, u(t) = ^(\u00c7(t))-\nO sistema h\u00edbrido sob acao de um supervisor \u00e9 dado por H Q V 0 M 0U, sendo que o mesmo apresenta uma caracter\u00edstica n\u00e3o determin\u00edstica oriunda do subsistema Hd.\nO supervisor F \u00e9 definido como um subconjunto de V 0 M 0 U sendo que para (v(.), u(.), m(.)), (v'(.), m'(.), u'(.)) E F, tem-se que:\n(v(.),u(.)) = (v'(.),u'(.))(Vt E [to,ti) A (v(ti) = v'(ti))) m(ti) = m'(tx (4.5)\nDescreve-se o comportamento discreto do supervisor C/E F Q V 0 M 0 U pelo seu modelo discreto dado pela 4-tupla Z,\u00a3,rf,z0, onde Z \u00e9 o conjunto de estados, z0 = z (0-) \u00e9 o estado inicial, \u00a3 : Z x U x V Z\u00e9a funcao de transicao de estado e\n: Z x Z M e a fun\u00e7ao sa\u00e9da evento, definidas para t E [0, x ) como:\nz (t) =&lt;(z(t-),u(t),v(t))\t(4-6)\nm(t) = ^(z(t-),z(t-))\t(4-7)\nObserve que a transi\u00e7\u00e3o de estado do supervisor ocorre de forma determin\u00edstica e que \u00ed forcada pelo sinal evento v(t). Observe ainda que a fun\u00e7\u00e3o de sa\u00edda depende do estado alcan\u00e7cado nesta transi\u00e7c\u00e3ao. Assim, no instante em que o supervisor observa o evento v(t) proveniente da planta h\u00edbrida, ele muda seu estado discreto e aplica o sinal m(t) ao sistema h\u00edbrido.\nFinalmente, o fechamento da malha resulta em um sistema C/E aut\u00e2nomo F/H Q V U e seu modelo de estado discreto \u00ed obtido pela conexao cascata e realimenta\u00e7\u00e3o (Sreenivas e Krogh 1991) dos modelos do supervisor F e do sistema h\u00edbrido H.\nA seguir, expressaremos o comportamento l\u00edogico dos sistemas em termos de linguagens.\n4.2.2\tComportamento L\u00f3gico\nUma vez que o sistema C/E possui sinais de entrada e sa\u00edda que assumem valores discretos no tempo, \u00ede poss\u00edvel associar a este um comportamento l\u00edogico, o qual \u00ede representado aqui por linguagens de palavras de comprimento finito para sistema C/E (Sreenivas e Krogh 1991).\nSeja um sistema C/E G \u00c7 , por exemplo. A linguagem gerada de G, denotada por L(G), \u00e9 a linguagem definida sobre palavras de comprimento finito obtidas pelo prefixo-fechamento de todas as cadeias formadas pelas sequencias dos valores que os pares de sinais (v(.),u(.)) G\tassumem em seus pontos de descontinuidade (sem\nregistrar os instantes de ocorr\u00f4ncia de tais descontinuidades). Vale lembrar que os sinais v(.) u(.) assume valores sobre os conjuntos discretos V e U, respectivamente. Portanto, para o sistema G tem-se que L(G) \u00c7 (V x U)*. Na eq. 4.8 apresenta-se uma definic\u00e3o formal da linguagem L(G).\nL(G) = {w = w1 o u2 o ... o un G (V x U)* : 3(v(.),u(.)) gV\u00aeU^\nt > 0 /\\ ti&lt;t2 &lt;...tn &lt;t, (v(ti),u(ti)) = Z /\\\t(4.8)\n(v(tr),u(tr)) = (0,u(t'))Vt/ = ti,t2, ...tn,t' &lt;t}\nConforme visto anteriormente, sinais condi\u00e7ca\u00e3o s\u00e3ao utilizados somente nos instantes de ocorr\u00f4encia de eventos. Desta forma, para possibilitar a representa\u00e7ca\u00e3o da aplica\u00e7c\u00e3ao de um sinal condi\u00e7c\u00e3ao inicial (antes que tenha ocorrido qualquer evento) associa-se a este um evento fict\u00edcio denominado evento de inicializa\u00e7\u00e3o, denotado por r\u00e7. Portanto, n \u00e9 um evento fict\u00edcio que \u00e9 associado a escolha n\u00e3o determin\u00edstica do estado inicial x(0) e que nao est\u00e1 associado a transic\u00e3es de estado na planta, ou seja, n G V .O conjunto V+ = {n} U V denota a inclus\u00e3o do evento de inicializa\u00e7\u00e3o em V. Considerando-se ainda o sistema G, tem-se entao que L(G) \u00c7 (V+ x U)*, ou mais especificamente L(G) \u00c7 ({n} x U)(V x U)*, uma vez que eventos n sao considerados apenas de inicializa\u00e7\u00e3o da planta. O evento de inicializa\u00e7ca\u00e3o n na\u00e3o s\u00edo tem a fun\u00e7ca\u00e3o de inicializa\u00e7c\u00e3ao, mas tamb\u00edem \u00ede importante para sistema C/E que possuem v\u00edarios estados iniciais. A inser\u00e7c\u00e3ao do evento n faz com o que estes sistemas tenham apenas um estado inicial.\nAo longo deste trabalho sa\u00e3o tratadas duas classes de linguagens, a saber: linguagens em V* e (V+ x U)* . A seguir comenta-se sobre a utilizacao de cada uma destas linguagens.\n\u2022 As especifica\u00e7\u00e3es sobre os comportamentos desejados para o sistema h\u00edbrido sob\nsupervis\u00e3o (em malha fechada), s\u00e3o expressas por linguagens E C V*, ou seja, em termos de sequencias de patamares atingidos no espa\u00e7o de estados cont\u00ednuo da planta h\u00edbrida. Assim, os controles u e U sob os quais os eventos v E V s\u00e3o gerados na\u00e3o fazem parte da especificac\u00e7\u00e3ao.\n\u2022 Para descrever os comportamentos l\u00edogicos dos sistemas sem entrada de controle (L(Hd)), (L(Hc)) e (L(H)) e tamb\u00edm para descrever o comportamento l\u00edgico do sistema h\u00edbrido sob supervisao (L((F/H)) sao utilizadas linguagens em (V x M x U)*. A semantica de um evento a = vu E L(H), por exemplo, \u00ed a seguinte: quando uma variavel do espa\u00e7o de estados cont\u00ednuo do sistema h\u00edbrido H atinge um certo patamar, o subsistema cont\u00ednuo gera um evento de limiar v E V, em resposta, o subsistema discreto aplica uma condic\u00e7a\u00e3o u E U.\nO comportamento l\u00edgico do sistema h\u00edbrido sob a\u00e7\u00e3o do supervisor \u00ed dado pela linguagem (L((F/H)) C (V x U)*. No entanto, as especifica\u00e7\u00e3es sobre o comportamentos l\u00edgicos desejados para o sistema h\u00edbrido em malha fechada sao feitas em termos de eventos, ou seja, por linguagens E C V*. Sendo assim, \u00ed necess\u00edrio definir a proje\u00e7\u00e3o l\\ : (V+ x U)* V*, a fim de que se possa relacionar o comportamento real com o desejado para o sistema sob supervis\u00e3ao.\nE\nV\npara a = nu E ({n} x U) para a = vu E (V x U);\nA projec\u00f5o definida anteriormente tamb\u00edm pode ser aplicada para linguagens (V+ x\nU)*. Assim, a projec\u00f5o de uma linguagem em K C (V+ x U)* \u00ed definida como:\nPy(K) = {t E V* : (3s E K)Py(s) = t}\t(4.9)\nDesta forma, a proje\u00e7ao PV : (V+ x U)* V* apaga os s\u00edmbolos n e u E U de palavras em (V+ x U)*.\nConsidere novamente um sistema G C (V+ x U)*. Define-se agora a linguagem marcada de G, denotada por Lm(G), como o conjuntos das cadeias u E (V+ x U)* formadas pelas sequencias dos valores que os pares de sinais (v(.),u(.)) E Vm U assumem em seus pontos de descontinuidades e tais que PV (u) representa uma sequencia de eventos de limiar que corresponde ao completamente de uma tarefa por parte do sistema h\u00edbrido .\nPor fim apresentar-se o problema de s\u00edntese de supervisores para sistema h\u00edbrido .\nProblema 4.1 (S\u00edntese de Supervisores para Sistemas H\u00edbridos - SSSH) Seja H o\nmodelo de C/E da planta h\u00edbrida com entrada de controle e dada as especifica\u00e7\u00f5es A,E Q V* para o comportamento da planta em malha fechada, encontrar um supervisor C/E F consistente para H tal que:\nA Q Pv[Lm(F/H)] Q E\t(4.10)\nOnde A e a especifica\u00e7\u00e3o do comportamento m\u00ednimo da planta em malha fechada. Na sec\u00e3o seguinte utiliza-se da teoria de controle supervis\u00e9rio de SED de modo a propor uma soluc\u00e3o formal para o problema supra apresentado.\n4.3\tAbordagem por Controle de Sistemas a Eventos Discretos\nNesta sec\u00e3o, o problema de s\u00edntese de supervisores para sistema h\u00edbrido (SSSH) \u00e9 traduzido para uma abordagem de controle puramente discreta. Mostra-se ent\u00e3o como este problema pode ser solucionado atraves de um problema equivalente no dom\u00ednio de SED. Esta sec\u00e7\u00e3ao descreve de forma sucinta algumas definic\u00e7\u00e3oes e teoremas de controle de SED. Maiores detalhes sobre esta abordagem est\u00e3o em (Leal 2002), (Cury e Niinomi 1998), (Gonz\u00edles 2000).\nAntes de apresentar um modelo de SED para o sistema h\u00edbrido \u00ed necessario definir dois novos conjuntos. Seja uma linguagem K Q (V+ x U)*.\n\u2022\tO conjunto ativo de eventos em K ap\u00eds w E K \u00ed dado por VK (w) = {v E V+ : (3u E U)w o vu E K}\n\u2022\tO conjunto ativo de condic\u00e3es em K apos w E K para um dado v E VK(w) e definido como UK(w, v) = {u E U : w o vu E K}.\nO modelo de sistemas a eventos discretos com estrutura de controle para o sistema h\u00edbrido com entrada de controle H e a tripla (L, Lm, r), onde:\nL = L(H)\nLm = Lm(H)\t(4.11)\nisto e, L e Lm sao, respectivamente, as linguagens gerada e marcada pelo sistema\nh\u00edbrido sem entrada de controle H e a estrutura de controle 7 G 2v+ xU\u00e9 um mapa tal que para todo u G L tem-se que:\nf(u) = {7 G 2v+ xU :: (Vv G VL(u))(3u G UL(u,v)) : vu G 7}\t(4-12)\nNote que a estrutura de controle depende da palavra gerada pelo sistema. Conforme definida, a estrutura de controle traduz a id\u00e9ia de que um dado evento v, ativo ap\u00f3s uma cadeia u G L, deve sempre haver pelo o menos uma condi\u00e7\u00e3o u habilitada. Repare que a inibi\u00e7ao de todas as condic\u00e3es poss\u00edveis para um dado evento significaria que o supervisor n\u00e3o previu uma resposta para a ocorr\u00eancia de uma dada cadeia, nao havendo contrapartida f\u00edsica para essa situac\u00e3o.\nSeja o automato mostrado na fig.4.5, o qual reconhece a linguagem L C (V x U). Antes de mais nada vamos interpretar a linguagem do aut\u00eamato . Para este exemplo, o conjunto V \u00e9 representado por V = {v1, v2, v3, v4} e o conjunto U = {u1,u2}. Come\u00e7amos a an\u00f3lise pelo estado inicial, de onde sai a transi\u00e7ao v1u1. Este comportamento nos diz que o estado inicial s\u00edo possui um u\u00ednico evento ativo (vi) e que este evento est\u00f3 associado a apenas uma condi\u00e7\u00e3o, no caso a u1. Isto significa que a planta possui restri\u00e7\u00e3es pr\u00f3prias, que fazem com o que apenas um unico evento (v1) associado a uma u\u00f3nica condi\u00e7ca\u00e3o u1 para o estado inicial. No estado 2 h\u00f3a apenas um evento ativo, que \u00e9 o v2. Por\u00e9m, ha duas condi\u00e7\u00f5es associadas a este evento. Ja no estado 3, a regra \u00e9 a seguinte: h\u00f3 apenas 2 eventos ativos: v3,v4. O evento v3 esta associado as duas condi\u00e7oes pertencentes ao conjunto U. Mas para o evento v4, este esta associado apenas a condi\u00e7c\u00e3ao u1.\nVoltando agora para estrutura de controle, para u = v1 u1 G L tem-se r(u) = {{v2u1}, {v2u2 O v3u1, v2u2 O v3^, v2^ O v^}, {v2u2 \u25e6 v3u1,v2u2 O v^}, {v2u2 O v3u2,v2u2 O v4u1}} = {71,72,73,74}\nFigura 4.5: Automato para a ilustra\u00e7ao de r\nNote que 7 = {v3u1, v3u2} G r(u) uma vez que nao contempla o evento v4 G Vl(u).\nA proposic\u00e7\u00e3ao apresentada a seguir estabelece a equival\u00eaencia l\u00e9ogica entre o modelo\nC/E H e o modelo de eventos discretos H = (L,Lm, r) para a planta h\u00e1brida com entrada de controle. E\u00e1 uma proposi\u00e7c\u00e3ao adaptada por (Leal 2002) de forma a tratar de linguagens marcadas.\nProposi\u00e7\u00e3o 4.1 O modelo de eventos discretos H =\t(L,Lm, r) e o modelo\ncondi\u00e7\u00e3o/evento H Q V \u00ae M U para a planta h\u00edbrida com entrada de controle s\u00e3o logicamente equivalentes no sentido que:\n1.\t(Vw E (V+ x M x U)*), w E L(H) o Pyxu(w) e L;\n2.\t(Vw E L(H)(Vvmu E V+ x M x U),w o vmu E L(H) o (3y E r(PyxU(w))) : u E m = {u' E U : vu E 7} e\n3.\t(VV E (V+ x M x U)*), V E L(H) o Pyxu(V) E Lm\nO supervisor de eventos discretos F para a planta H = (L,Lm, r) \u00e1 definido pelo mapa F : L 2y+ xU e \u00e1 representado por uma m\u00e1quina de estados F = (P,V+ x U, 0,p0) onde P \u00e9 o conjunto de estados, p0 o estado inicial e a func\u00e3o de transi\u00e7\u00e3o 0 : V+ x M x U P \u00e1 tal que para p E P e a E (V+ x U), 0(p, a) \u00e1 definida se e somente se para u E L tem-se que a E F(u) e u E (V+ x U)* tal que 0(p0,u) = p onde 0 consiste na extens\u00e3o da func\u00e3o de transi\u00e7ao para palavras em (V+ x U)*.\nA linguagem L(F/H) Q L representa o comportamento gerado da planta H = (L, Lm, r) sob acao de um supervisor F, e \u00e1 definida recursivamente como:\n1.\te E L(F/H) e\n2.\tu o vu E L(F/H) o u E L(F/H) A u o vu E L A vu E F(u)\nO comportamento marcado de F/H \u00e1 dado por Lm(F/H) = L(F/H) n Lm e representa a parte da linguagem marcada da planta que sobrevive sob a\u00e7c\u00e3ao de controle.\nSegundo (Leal 2002), um supervisor F e consistente para uma planta se para qualquer cadeia u E L(F/H) e para todo evento ativo apos u, ha ao menos uma condic\u00e3o de entrada habilitada pelo supervisor pertencente a conjunto de condic\u00e3es admiss\u00e1veis na planta.\nA proposic\u00e3o seguinte sugere que o problema de s\u00e1ntese de supervisores para sistema h\u00e1brido (SSSH) pode ser solucionado atraves da resolu\u00e7\u00e3o de um problema de controle supervisorio equivalente no dom\u00e1nio de SED.\nProblema 4.2 (Problema do Controle Supervisorio Equivalente - PCSE) Seja H = (L, Lm, r) o modelo de SED com entrada de controle para a planta h\u00edbrida e dada as especifica\u00e7\u00f5es A C E C V* para o comportamento da planta em malha fechada, encontrar um supervisor F consistente para H tal que:\nA C Pv[Lm(F/H)] C E.\t(4.13)\nNo intuito de apresentar uma solu\u00e7\u00e3o formal para este problema, apresenta-se a seguir uma s\u00e9rie de resultados da teoria de controle supervisorio de SED adaptando-so para o contexto deste trabalho (Leal 2002).\nA seguir, apresentaremos algumas defini\u00e7\u00e3es de controlabilidade de linguagens \u00e9 uma adapta\u00e7\u00e3o ao nosso contexto da defini\u00e7ao introduzida em (Gonz\u00e9les 2000)\nDefinicao 4.1 Sejam as linguagens K C L C (V+ x U)*. K e dita ser vu-controlavel em relac\u00e3o a L se:\n(Vw G K)Vl(w) = VK(w)\t(4.14)\nAssim, K \u00e9 vu-controlavel em relacao a L se apos qualquer cadeia w G K, todo evento poss\u00edvel de ocorrer em K tamb\u00e9m \u00e9 poss\u00edvel de ocorrer em L.\nSeja Ek(w) = {vu G V+ x U : wovu G K} o conjunto ativo de condicoes/eventos em K apos w G K. Seja ainda um modelo SED com estrutura de controle H = (L, Lm, r). A condi\u00e7\u00e3o apresentada na eq. 4.14 equivale \u00e0 seguinte condi\u00e7ao:\n(Vw G K)(37 G r(w)) : y n Sl(w) = Ek(w).\t(4.15)\nOu seja, uma linguagem K \u00e9 em relacao a L se para toda cadeia w G K existe pelo o menos um padr\u00e2o de controle 37 G r(w) que habilite na planta o mesmo conjunto ativo de condi\u00e7c\u00e3oes/eventos habilitados em K ap\u00e9os w.\nDa mesma forma que no dom\u00e9nio das linguagens em (V+ x U)*, podemos introduzir o conceito de controlabilidade para linguagens em V*, mais detalhes sobre as definic\u00e7\u00e3oes nas linguagens em V* est\u00e3ao em (Leal 2002). Entretanto, uma vez que o controle \u00e9e feito atrav\u00e9es dos sinais condic\u00e7\u00e3ao, a controlabilidade de uma linguagem em V* est\u00e9a diretamente associada a defini\u00e7ao de vu \u2014 controlabilidade apresentada anteriormente. Logo, a analise sobre a controlabilidade se d\u00e1 no dom\u00ednio (V+ x U)*.\nSegundo (Leal 2002) \u00e9e poss\u00e9vel provar que qualquer supervisor consistente \u00e9e n\u00e3ao\nbloqueante para H. Segundo a mesma refer\u00eancia \u00e9 poss\u00edvel provar que as propriedades de vu-controlabilidade e v-controlabilidade sao fechadas para a uniao de conjuntos.\nLogo, pode-se enunciar o seguinte lema:\nLema 4.1 O conjunto Cv u(K) e n\u00e3o vazio, fechado para a uni\u00e3o de conjuntos e cont\u00e9m um elemento supremo Unico, chamado \u201cmaxima linguagem vu-controiavel\u201d, denotado por SupCv u (K) .\nProposi\u00e7\u00e3o 4.2 Sejam H = (L,Lm, r) e K C (V+ x U)*, K = 0. Se K = K n Lm ent\u00e3o existe um supervisor n\u00e3o bloqueante F para H tal que Lm(F/H) =SupCv u(K).\nA seguir iremos introduzir alguns lemas e proposi\u00e7\u00f5es sobre o conjunto E C V*\nSeja o conjunto de todas as sublinguagens de E que s\u00f5o v-controlaveis em rela\u00e7\u00f5o L definido como:\nCv(E) = {E' C E : E \u00e9 v-control\u00e9lvel em r a L}\t(4.16)\nPode-se enunciar o seguinte lema:\nLema 4.2 O conjunto Cv (E) e nao vazio, fechado para a uni\u00e3o de conjuntos e cont\u00e9m um elemento supremo unico, chamado \u201cmaxima linguagem v-controlavel\u201d, denotado por SupCv (E) .\nSegundo (Leal 2002), e poss\u00e9vel provar que os conjuntos SupCV u (K) e SupCV (E) sao Lm-fechada e Pv(Lm)-fechada respectivamente.\nProposi\u00e7\u00e3o 4.3 Sejam H = (L, Lm, r) e E C V*, E = $.Se E = E n Pv(Lm) ent\u00e3o existe um supervisor n\u00e3o bloqueante F para H tal que Pv[Lm(F/H)]=SupCV(E).\nProposi\u00e7\u00e3o 4.4 Sejam as linguagens Lm C L(V+ x U)* e E C V*. Seja ainda K = P-1(E) n Lm. Se E C Pv(Lm) ent\u00e3o tem-se que SupCV(E) = Pv[SupCV u(K)]\nDesta forma, a m\u00e9axima linguagem contida em E que \u00e9e v-control\u00e9avel em relac\u00e7\u00e3ao a L, \u00e9 igual \u00e0 proje\u00e7ao em V* da m\u00e9xima linguagem contida em K que \u00e9 vu-control\u00e9vel em rela\u00e7ca\u00e3o a L. Note que se E consiste na especifica\u00e7ca\u00e3o sobre o comportamento l\u00e9ogico do sistema sob supervis\u00e3o feita em termos sequencias de eventos, ent\u00e3o K consiste na proje\u00e7\u00e3o de E em (V+ x U)* e \u00e9 obtida habilitando-se todas as condi\u00e7\u00e3es poss\u00e9veis de ocorrer na planta para cada cadeia de eventos em E.\nRetomando o problema de controle supervis\u00edrio equivalente (PCSE) para sistema h\u00edbrido , a teoria introduzida anteriormente indica que a soluc\u00e3o de PCSE requer a execu\u00e7\u00e3o dos seguintes passos:\n1.\tDada a especifica\u00e7ao E C V*, obter a especificac\u00e3o equivalente K C Lm C (V+ x U)*\n2.\tVerificar se K \u00ed vu-control\u00edvel em rela\u00e7ao a L. Se for, pular para o passo seguinte. Caso contrario, deve-se obter a maxima linguagem vu-controlavel contida em K, denotada por SupCvu(K)\n3.\tO supervisor F e implementado atraves de um aut\u00f4mato tal que Lm(F/H) =SupCvu(K).\nA seguir, ilustra-se esta metodologia atraves de um exemplo:\n4.4\tExemplo\nSeja um sistema h\u00e9brido H cujo comportamento logico Lm = Lm(H) e reconhecida pelo aut\u00f4mato ilustrado na fig.4.6.\nFigura 4.6: Aut\u00f4mato que reconhece a linguagem Lm = L^\u00edT0!\nDada a especificac\u00e3o E \u00c7 PV(Lm) para o comportamento desejado da planta sob supervisao como mostra a fig.4.7. Esta especifica\u00e7\u00e3o significa que vi e v2 podem ocorrer livremente, mas se ocorrer v3, obrigatoriamente tem que ocorrer v2.\nO primeiro passo consiste em obter uma especifica\u00e7c\u00e3ao equivalente que esteja contida na linguagem da planta, ou seja, K \u00c7 Lm \u00c7 (V+ x U)*. Tal especifica\u00e7ao e\nFigura 4.7: Especifica\u00e7\u00e3o E C PV(Lm)\nobtida fazendo-se K = Pv x(E)CiLm e o automato que a reconhece \u00e9 mostrado na fig.4.8.\nFigura 4.8: Especificacao K C Lm\nVerifica-se, entretanto, que a linguagem K n\u00e3o \u00e9 vu-controlavel em rela\u00e7\u00e3o a L. Note, por exemplo, apos a cadeia u' = n\u00abi \u25e6 v1u5 o v2u6 o v3u5 G K, a especificacao n\u00e3o prev\u00ea a ocorr\u00eancia da transi\u00e7\u00e3o v2u6, sendo que as sequencias ap\u00e9s u o v2u6: v3u2 o v4u1 ou v3u2 o v4u3 nao seja vu-controlavel em relacao a K. Obt\u00e9m-se ent\u00e3o a m\u00e9xima linguagem vu-control\u00e9vel contida em K, a qual \u00e9 reconhecida pelo aut\u00eamato mostrado na fig.4.9.\nFigura 4.9: Maxima linguagem vu-control\u00e1vel SupCV u(K)\nVale lembrar que Lm(F/H) = SupCV U(K). Assim, o supervisor F pode ser implementado pelo aut\u00eaomato da fig.4.9.\nPode-se enunciar agora o seguinte teorema (Cury e Niinomi 1998):\nTeorema 4.1 O Problema de controle Supervisorio Equivalente para sistema h\u00edbrido (PCSE) possui soluc\u00e3o se e somente se SupCV(E) D A.\nSendo assim, um supervisor F para H tal que PV[Lm(F/H)] = SupCV(E) \u00e9 uma solu\u00e7\u00e3o otima para o PCSE no sentido de ser o menos restritivo poss\u00edvel.\nCorol\u00e1rio 4.1 O problema de S\u00edntese de Supervisores para Sistemas H\u00edbridos (SSSH) possui solucca\u00e3o se e somente se o PCSE possui solucc\u00e3ao.\n4.5\tDiscussao\nNeste cap\u00edtulo, tratou-se do controle supervis\u00edorio de uma classe de sistema h\u00edbrido que possui din\u00f4amicas cont\u00ednuas e discretas interagindo entre si. Neste cap\u00edtulo foram introduzidos exemplos bastante acad\u00f4emicos, de forma a facilitar a introdu\u00e7ca\u00e3o dos conceitos.\nNo pr\u00edoximo cap\u00edtulo ser\u00eda iniciado ao objetivo deste trabalho, que \u00ede a implementa\u00e7c\u00e3ao de um supervisor discreto numa planta piloto com caracter\u00edsticas h\u00edbridas. Ser\u00eda feita uma breve descric\u00e7\u00e3ao da planta piloto e de um problema proposto nesta planta que ser\u00eda resolvido baseado na teria descrita neste cap\u00edtulo e nos cap\u00edtulos anteriores.\nCap\u00edtulo 5\nPlanta Piloto: Aspectos descritivos e modelagem matem\u00e1tica\nEste cap\u00edtulo trata da planta piloto citada no cap. 1 e de suas principais caracter\u00edsticas. Ainda, este cap\u00edtulo trata da formula\u00e7\u00f5o de um problema proposto na planta piloto. Os resultados de resolu\u00e7\u00f5o deste problema se encontram no cap\u00edtulo 6. Por fim, inicia a resolu\u00e7c\u00f5ao do problema proposto com a modelagem matem\u00edatica da planta piloto.\n5.1\tDescri\u00e7\u00e3o da Planta Piloto\nA aquisic\u00f5o da planta piloto atrav\u00eds do projeto CTPETRO tem por objetivo demonstrar de maneira did\u00edatica a opera\u00e7ca\u00f5o das diversas malhas de controle utilizando os mesmos equipamentos e ferramentas de configura\u00e7c\u00f5ao desenvolvidos para aplica\u00e7c\u00f5ao em controle industrial. Esta planta tem como principal caracter\u00edstica uma rede fieldbus. Esta rede possui processamento descentralizado, onde cada dispositivo de campo possui seu pro\u00edprio processamento. As principais vari\u00edaveis da planta possuem dispositivos inteligentes ligados por um barramento Fieldbus.\n5.1.1\tComponentes da planta\nA seguir uma breve descric\u00e7\u00f5ao dos equipamentos da planta piloto.\n\u2022 Moto-bombas centr\u00edfugas. S\u00f5o acionadas por um motor de indu\u00e7\u00f5o e alimentadas por uma fase de 220 V e frequ\u00e2ncia de 60 Hz. S\u00f5o as respons\u00edveis pela movi-menta\u00e7ao do fluido no equipamento. A planta possui duas moto-bombas, uma para cada tanque do processo.\n\u2022\tLC700 - Controlador L\u00f3gico Program\u00e1vel. Este CLP integra a rede fieldbus da planta com a logica discreta do CLP.\n\u2022\tChave de N\u00f3vel: \u00f3 respons\u00f3vel por detectar n\u00f3vel baixo no tanque de \u00f3gua quente. O l\u00f3quido, atingindo o eletrodo terra e o eletrodo de atua\u00e7ao, fecha o circuito pela sua pr\u00f3pria condutividade, acionando um circuito el\u00e9trico que por sua vez comuta o rele de sa\u00f3da. Este sinal \u00f3 enviado para o painel de controle fazendo habilitar a corrente que est\u00f3a indo para o conversor est\u00f3atico e por conseguinte que as resist\u00eancias sejam ligadas.\n\u2022\tTermostato: esta localizado no tanque de agua quente e tem a fun\u00e7\u00e3o de enviar um contato para inibir o conversor est\u00f3atico quando a temperatura atingir um limite alto.\n\u2022\tTanque reservat\u00f3orio: este tanque tem a fun\u00e7c\u00e3ao apenas de reservat\u00f3orio de \u00f3agua. As moto-bombas centr\u00f3fugas alimentam os demais tanques atrav\u00f3es da a\u00f3gua do tanque reservato\u00f3rio.\n\u2022\tTanque de aquecimento de \u00f3agua: neste tanque \u00f3e que se localizam os resistores, sendo poss\u00f3vel esquentar a \u00f3agua. Este tanque \u00f3e conectado no tanque de mistura por um cano localizado no n\u00f3vel m\u00f3aximo de \u00f3agua no tanque.\n\u2022\tTanque de mistura: este tanque \u00f3e onde obtemos os resultados finais de um processo. Este tanque \u00f3e alimentado por \u00f3agua fria vindo de uma segunda moto-bomba e alimentado por \u00f3agua quente atrav\u00f3es do tanque de aquecimento.\nA planta piloto possui seis dispositivos fieldbus distintos, com quantidade variada.\n\u2022\tLD302 - E\u00f3 um medidor de press\u00e3ao diferencial, onde \u00f3e poss\u00f3vel converter o sinal de press\u00e3o em sinal de vaz\u00e3o e sinal de n\u00f3vel. S\u00e3o tr\u00f4s LD302: um que representa o medidor de n\u00f3vel no tanque de aquecimento e os outro dois representam medidores de vaza\u00e3o de entrada dos tanques de aquecimento e mistura.\n\u2022\tFY302 - Posicionador de valvula. E alimentado por uma fonte externa de ar comprimido por razo\u00e3es de seguran\u00e7ca intr\u00f3nseca. Possui um dispositivo de retro-alimentac\u00e7\u00e3ao de posi\u00e7ca\u00e3o que se utiliza do efeito Hall. Existem dois dispositivos desse tipo na planta.\n\u2022\tFI302 - Controlador da intensidade de corrente eletrica: Este dispositivo \u00f3 res-pons\u00f3avel pelo controle de corrente que o conversor est\u00f3atico envia para os resistores.\n\u2022\tTT302 - Transmissor Indicador de Temperatura: A medi\u00e7\u00e3o de temperatura se d\u00e1 atrav\u00e9s de sensores localizados nos tanques de processo. A planta possui dois dispositivos desse tipo, um localizado no tanque de aquecimento e outro no tanque de mistura.\n\u2022\tDFI302 - bridge. Faz a comunica\u00e7\u00e3o da planta com os n\u00edveis superiores da rede fieldbus. No cap.7 este dispositivo \u00e9 descrito com mais detalhes.\n\u2022\tFB700: Permite a integra\u00e7\u00e3o entre o controle da planta (cont\u00ednuo) e a logica ladder do CLP (discreta).\nA figura 5.1 ilustra uma representa\u00e7\u00e3o esquematica da planta piloto com todos os seus dispositivos e equipamentos.\nFigura 5.1: Foto ilustrando a planta piloto\n5.1.2\tDiagrama de Processo\nO l\u00edquido que constitui o processo da planta e a agua. O diagrama da planta \u00e9 ilustrado na fig.5.2 com sua respectiva legenda na tabela 5.1. As linhas com setas indicativas representam o fluxo de agua no processo. As linhas cont\u00ednuas representam o fluxo principal e as linhas tracejadas s\u00e3o fluxos alternativos.\nFigura 5.2: Diagrama de processo da planta piloto\nITEM\tTAG\tdescricAo\n1\tTQ-01\tReservat\u00f3rio de \u00e1gua\n2\tTQ-02\tTanque de aquecimento de agua\n3\tTQ-03\tTanque de mistura de agua\n4\tTM-01\tTermostato\n5\t-\tSuspiro\n6\tCH-01\tChave de N\u00edvel\n7\t-\tVaivulas manuais tipo esfera\n8\tBD-01\tBomba d\u2019\u00e1gua\n9\tBD-02\tBomba dYgua\n10\tFY-01\tPosicionador de v\u00e1lvula\n11\tFY-02\tPosicionador de v\u00e1lvula\n12\tLD-01\tTransmissor de vaz\u00e3o\n13\tLD-02\tTransmissor de vaz\u00e3o\n14\tLD-03\tTransmissor de n\u00edvel\n15\tTT-01\tTransmissor de temperatura\n16\tTT-02\tTransmissor de temperatura\n17\tFI-01\tTransmissor de corrente\n18\t-\tResistencias eletricas\n19\tFL-01\tFiltro de \u00e1gua\n20\tFL-02\tFiltro de \u00e1gua\nTabela 5.1: Legenda do diagrama da fig.5.2.\nSeguindo o fluxo principal, a \u00e1gua que alimenta o tanque TQ-02 sai do TQ-01 atrav\u00e9s das bombas BD-01, passa nos filtros, passa no posicionador de v\u00e1lvula FY-01 e chega no TQ-01. Esta \u00e1gua pode ser esquentada pelas resist\u00eancias el\u00e1tricas, que por sua vez podem ser controladas pelo transmissor FI-01, quando o nivel for alto. E poss\u00edvel encher o TQ-03 com agua quente vindo do tanque TQ-02. E possivel tamb\u00e9m misturar agua quente com agua fria no TQ-03 ligando a BD-02 com o TQ-01 cheio e com \u00e1gua quente. O TQ-02 possui um suspiro caso ambos os tanques estejam cheios. A \u00e1gua que sai dos tanques TQ-02 e TQ-03 podem voltar para o TQ-01 ou ir para a rua. No fluxo principal a \u00e1gua vai para rua evitando misturar agua quente do TQ-02 com a \u00e1gua fria do TQ-01. No TQ-03 ha mais tr\u00eas sa\u00eddas de \u00e1gua para rua que podem ser habilitadas manualmente.\n5.1.3\tSoftwares Utilizados\nTanto para a configura\u00e7\u00e3o dos equipamentos fieldbus quanto para o acompanhamento das dinamicas das vari\u00e1veis da rede fieldbus na planta, \u00e9 necess\u00e1ria a utiliza\u00e7\u00e3o de softwares de configura\u00e7ao e monitoramento. Nesta se\u00e7ao, ser\u00e3o mostrados os principais programas utilizados na planta.\nSyscon\nO Syscon \u00e9 responsavel pela configura\u00e7\u00e3o dos dispositivos fieldbus da planta piloto. Podemos escolher os dispositivos que ser\u00e3o utilizados, criar estrat\u00e9gias de controle, configurar os par\u00e2metros de cada dispositivo e depois descarregar os dados do PC para cada dispositivo na planta piloto. A fig.5.3 ilustra uma janela de trabalho do syscon.\nFigura 5.3: Ilustra\u00e7\u00e3o do software Syscon\nConf700\nEste software \u00e9 o respons\u00f3vel pela configurac\u00e3o do CLP LC700. Atrav\u00e9s dele pode-se controlar toda a parte discreta da planta. Como exemplo de sinal discreto temos o ligamento/desligamento da bomba, o sinal da chave de n\u00e9vel e o sinal do termostato.\nFigura 5.4: Ilustrac\u00e3o do software Conf700\nProcess View\nEste \u00e9e o software supervis\u00e9orio do sistema, constru\u00e9do para ser a interface homem-m\u00e9aquina. Sua programa\u00e7c\u00e3ao consiste de se fazer uma boa representa\u00e7c\u00e3ao visual do sistema para o seu monitoramento e, em alguns casos, controle. O software utiliza a tecnologia OPC1 para ter acesso \u00e0s vari\u00f3veis. Atrav\u00e9s dele, podemos ter acesso aos mesmos par\u00eametros configurados no software Syscon e no CONF700, atrav\u00e9s de servidores OPC que cada software possui.\nSoft OPC Client\nE um cliente OPC que tem comunica\u00e7\u00e3o com o MATLAB. Com isso, podemos monitorar e desenvolver algoritmos de controle com as vari\u00e1veis da planta atrav\u00e9s do arquivos de extensao m do MATLAB. Mais detalhes sobre este t\u00e1pico ser\u00e1 tratado no cap\u00e1tulo 7.\n1Open Process Control\nFigura 5.5: Ilustra\u00e7\u00e3o do software Process View\n5.1.4\tCaracter\u00edsticas h\u00edbridas da planta piloto\nA planta piloto em quest\u00e3o \u00e9 utilizada neste trabalho devido \u00e0s suas caracter\u00edsticas h\u00edbridas. As principais caracter\u00edsticas h\u00edbridas da planta s\u00e3o:\n\u2022\tChave de n\u00edvel: \u00e9 respons\u00e9vel por um chaveamento da dinamica de temperatura quando o n\u00edvel atinge 90% do seu valor. E tamb\u00edm uma limitac\u00e3o que a planta possui.\n\u2022\tTanque cheio e vazio: este dois casos provocam uma mudan\u00e7a na din\u00e2mica do n\u00edvel de \u00edgua no tanque. Quando o tanque enche, o n\u00edvel de agua torna-se constante no seu valor maximo. O mesmo acontece com o tanque vazio: n\u00edvel constante e igual a zero.\n\u2022\tModelagem h\u00edbrida: for\u00e7am-se certos chaveamentos para que determinadas condicoes sejam satisfeitas. Exemplo: subdividir um sistema n\u00e3o-linear em equac\u00e7\u00e3oes lineares com v\u00edarios pontos de opera\u00e7c\u00e3ao.\n5.2\tProblema proposto\nO problema ser\u00ed focado somente no tanque de aquecimento da planta. Uma justificativa \u00ed que se fosse os dois tanques, o no de vari\u00edveis de estado iria dobrar. Com isso o problema torna-se intratavel pelo fato de que a ferramenta CheckMate est\u00ed limitada ao uso de no m\u00edximo cinco variaveis de estado cont\u00ednuas. Portanto, o tanque de aquecimento de agua ser\u00ed o sistema h\u00edbrido estudado ao longo deste documento.\nFazer com que a agua que escoa para o tanque de mistura atraves da vaz\u00e3o Fs tenha uma temperatura constante e maior que a temperatura ambiente.\nTabela 5.2: Problema proposto\nDeseja-se resolver o seguinte problema no tanque de aquecimento:\nOnde Fs \u00ed a vazao de agua do cano que liga o tanque de aquecimento ao tanque de mistura (o sentido da vaz\u00e3o e do tanque de aquecimento para o tanque de mistura). Uma maneira de resolver o problema proposto anteriormente e executar os seguintes passos:\n\u2022\tLigar a bomba 1 e deixar que o n\u00edvel do tanque de aquecimento atinja a chave do n\u00edvel, situada a 90% do n\u00edvel.\n\u2022\tQuando o n\u00edvel atingir 90%, as resist\u00eancias ser\u00e2o ligadas. Inicia-se entao um controle PI do n\u00edvel em um valor entre 90% e 100% do maximo. Tamb\u00edm \u00e9 feito um controle PI de temperatura para o valor desejado. A justificativa para este controle \u00ede que a constante de tempo da temperatura \u00ede muito grande comparada com a constante de tempo do n\u00edvel e tamb\u00edem porque a \u00edagua s\u00edo come\u00e7ca a esquentar quando a chave de n\u00edvel atua habilitando o conversor est\u00edatico a fornecer pot\u00eaencia para as resist\u00eaencias.\n\u2022\tNo instante em que a temperatura atingir o valor desejado, faz-se um controle de n\u00edvel de tal forma que o tanque encha e permane\u00e7ca o controle de temperatura.\n\u2022\tQuando o tanque estiver cheio, verificamos se o fluxo de agua que escoa atrav\u00eds do cano que interliga os dois tanques estar\u00eda com agua na temperatura desejada ou n\u00e3ao.\nQuando for utilizado o termo sistema h\u00edbrido, ou planta h\u00edbrida, tais termos se referem ao tanque de aquecimento da planta.\nTodo o trabalho escrito a partir deste ponto est\u00eda baseado nesta se\u00e7c\u00e3ao. O t\u00edopico seguinte d\u00e1 in\u00edcio a modelagem matem\u00e1tica do tanque de aquecimento com o intuito de resolver este problema.\n5.3\tModelagem matem\u00e1tica tanque de aqueci-\nmento\nA seguir ser\u00e1 tratada a modelagem matem\u00e1tica do tanque de aquecimento. Consideraremos as equa\u00e7\u00f5es de forma gen\u00e1rica. No pr\u00e1ximo cap\u00edtulo, quando ser\u00e1 feita a modelagem do aut\u00f4mato h\u00e1brido, ser\u00f5o calculados os valores num\u00e9ricos para cada locac\u00f5o. Para o calculo das equacoes, considera-se que agua \u00e1 um l\u00e1quido incompress\u00e1vel2 e que as perdas de calor no tanque s\u00f5o desprez\u00e1veis.\nA figura 5.6 ilustra o desenho do tanque de aquecimento separado da planta.\nFigura 5.6: Tanque de aquecimento de \u00e1gua\nEste tanque possui vari\u00e1veis que estao conectadas aos dispositivos inteligentes. As vari\u00e1veis s\u00e3o:\n\u2022 F1\tvaz\u00e3o de entrada vinda da bomba 1 em L/s.\n\u2022 h nivel de \u00e1gua no tanque em cm.\n\u2022 T1\ttemperatura da agua do tanque de aquecimento em oC.\n\u2022 Q Pot\u00eancias dos resistores em Watts.\n2\tmassa espec\u00edfica da \u00e1gua nao varia com o tempo\nHa tamb\u00e9m variaveis que n\u00e3o s\u00e3o monitoradas pelos dispositivos diretamente. S\u00e3o elas:\n\u2022\tFo\tvazao de sa\u00e9da inferior do tanque de aquecimento. Denominada vazao\n\u201dladrao\u201c do tanque. Esta vaz\u00e3o escoa agua direto para a rua.\n\u2022\tFs\tvazao superior que so existe quando o n\u00e9vel do tanque for maximo. Ela\nescoa a\u00e9gua do tanque de aquecimento para o tanque de mistura.\nPor fim temos os par\u00f4metros :\n\u2022\tA area da secao transversal to tanque em cm2.\n\u2022\tAo\t\u00e9rea da secao transversal do cano da vazao ladr\u00e2o em cm2.\nNa figura 5.6, iremos aplicar o princ\u00e9pio de conserva\u00e7\u00e3o de duas grandezas fundamentais: massa e energia.\nBalan\u00e7o de massa: Em um sistema qualquer, o balan\u00e7o de massa \u00e9 dado por:\nmassatotoi = massain \u2014 :mi.ssaout\nEm termos de equa\u00e7c\u00e3oes para o tanque de aquecimento temos:\n(5.1)\nAssumindo a \u00e1gua como l\u00edquido incompress\u00edvel a eq. 5.1 torna-se:\n(5.2)\nPela equa\u00e7\u00e3o de Bernoulli (Halliday e Walker 1997) obtemos a vaz\u00e3o ladr\u00e3o Fo:\nFo = 2Aok\n(5.3)\nonde ko \u00e9 uma constante adimensional que varia entre 0,6 e 1.\nSubstituindo a eq. 5.3 na eq. 5.2 obtemos:\n, dh\t.\t/\u2014\u2014\nA\u2014 = Fi - 2Aoko\\fgh dt\n(5.4)\nQuando o tanque est\u00e1 cheio, a eq. 5.4 muda para:\ndh\t.____\nA~dt\tF1\t2Aoko\\/ ghmax\tFs\n(5.5)\nonde hm\u00e0x \u00f3 o valor do n\u00f3vel m\u00f3ximo.\nBalan\u00e7o de energia\nO balan\u00e7o de energia \u00e9 dado por:\nenergia\u00ednterna\tenergia\u2122\tener giaout + energia fonte\nEm termos de equa\u00e7\u00f5es para o tanque de aquecimento temos (Stephanopoulos 1984):\nd[p AhCd1 ~ T0)] = ~pAF1c(T1 - To) + pAFoc(T1 - T0) + Q\t(5.6)\ndt\nonde Q \u00e9 a quantidade de calor fornecida pelas resist\u00eancias por unidade de tempo, ceo calor espec\u00edfico da agua e To e a temperatura inicial do tanque. Reagrupando os termos da eq. 5.6 obtemos:\nAd(hTi) FT FT , Q\t(57)\nA\u2014-\u2014 = FiTo - FoTi +--------\t(5.7)\ndt\tpc\nA equacao 5.7 assumir\u00e9 a forma de diferen\u00e7a de temperatura. Chamaremos de T a diferen\u00e7a entre a temperatura T1 \u2014 To onde T1 > To. Desenvolvendo a derivada do produto e substituindo a eq. 5.2 na eq. 5.7 obtemos:\nAh^f = -F1T + Q dt\tpc\n(5.8)\nA eq. 5.8 tera um n\u00edvel constante e igual a li,:l!!x caso o tanque de aquecimento esteja cheio.\nResumindo os passos da modelagem, temos que:\n. dh\nA\t= Fi - 2Aok^/gh\ndt\nAhdT = -FiT + Q dt\tpc\n(5.9)\n(5.10)\nAs variaveis nas equacoes 5.9 e 5.10 s\u00e3o classificadas como:\nVari\u00e1veis de estado: h, T\nSa\u00eddas: h, T\nEntradas: entradas classificadas como:\nPertuba\u00e7oes: T0, F03\nVariaveis manipuladas: Q,F1\nApesar das equa\u00e7c\u00e3oes e 5.9 e 5.10 serem n\u00e3ao-lineares, tais equa\u00e7c\u00e3oes possuem comportamento similar a uma fun\u00e7c\u00e3ao de transfer\u00eaencia de primeira ordem. A fig.5.7 ilustra o comportamento da temperatura em fun\u00e7ca\u00e3o do tempo da eq. 5.10.\nFigura 5.7: Comportamento da temperatura em fun\u00e7c\u00e3ao do tempo\nPode ser verificado que a temperatura possui uma faixa de varia\u00e7\u00e3o entre T1 e To.\nAntes de se iniciar o proximo topico \u00e9 necessario acrescentar uma observa\u00e7\u00e3o importante a respeito do problema proposto da sec\u00e3o 5.2. Para que o problema seja resolvido de forma otimizada, foram feitas as seguintes considerac\u00e7\u00e3oes:\n3To e a temperatura ambiente e como tal, pode ser distinta em instantes distintos. J\u00e1 F0 tem haver mais com certas ocorr\u00eancias indesejaveis, como o cano entupir ou quebrar, alguma pessoa mexer na vaivula do cano de F0 em um dado instante, fazendo com o que esta variavel seja uma pertubac\u00e3o.\n1.\tColoca a valvula do cano da vaz\u00e3o Fo semi-aberta. Isto se justifica na eq. 5.7 pois quanto maior for a vaz\u00e3o Fo, maior ser\u00e2 a perda de energia interna pelo tanque, fazendo com o que a faixa de varia\u00e7\u00e3o de temperatura seja menor.\n2.\tO controle de n\u00edvel com tanque cheio descrito na sec\u00e3o 5.2 se justifica para constatar que a vaz\u00e3o F1 nao precisa ser a vazao nominal da bomba para encher o tanque e contribui para que a temperatura tenha uma maior faixa de varia\u00e7ca\u00e3o (vide eq.5.7) .\n5.3.1\tValida\u00e7\u00e3o e c\u00e1lculo dos par\u00e2metros\nNa verdade, h\u00e1 dois par\u00e2metros a serem levantados na planta.\n\u00c1rea do tanque\nMediu-se o di\u00e2metro interno do tanque com uma fita m\u00e9trica:\nd = 20, 7cm\nCom isso:\nA = nr2 = 335, 885cm2\n\u00c1rea do cano da vazao Fo: calcularemos na verdade o produto Aoko.\nPara isso, foi feito um teste na planta. Colocou-se a v\u00e9alvula do cano em quest\u00e3ao semi-aberta em quatro pontos diferentes e mediu-se a vaza\u00e3o e o n\u00e9vel em regime permanente.\nPara cada valor, aplicou-se a eq. 5.9, isolando os termos Aoko quando a derivada do n\u00e9vel for nula, obtemos:\nAok\nFi\n2Vgh\n(5.11)\no\nCom os valores de cada ponto calculou-se uma m\u00e9edia aritm\u00e9etica deste valores.\nAoko = 0, 7322e-4\n(5.12)\nAs grandes varia\u00e7\u00f5es obtidas na tab.5.3 se devem principalmente nos dois primeiros\nAbertura da V\u00e1lvula (%)\tVaz\u00e3o (L/s)\tN\u00edvel (%)\tAoko (10-4)\n39\t0,1933\t36,1\t0,8808\n42\t0,2083\t86,15\t0,7911\n46\t0,2267\t98,0\t0,6132\n50\t0,245\t100,0\t0,6477\nTabela 5.3: Tabela para o c\u00edlculo de A0k0\nvalores, onde as medidas s\u00e3o menos precisas em func\u00e3o do n\u00edvel oscilar mesmo em regime. Estas oscila\u00e7c\u00e3oes ocorrem porque quando o tanque est\u00eda com pouca \u00edagua, a massa de \u00edagua que escoa para dentro do tanque \u00ede significativa comparada com a massa de \u00edagua dentro tanque, logo o deslocamento de \u00edagua que ocorre no tanque faz com o que o n\u00edvel oscile, dificultando a precis\u00e3ao das medidas. Em contrapartida, quando o n\u00edvel esta\u00ed alto, a massa de \u00edagua que entra \u00ede insignificante comparada com a massa de \u00edgua dentro do tanque. Logo, as oscilac\u00e3es no n\u00edvel sao desprez\u00edveis, acarretando em uma melhor precis\u00e3ao das medidas.\nOs demais para\u00e2metros s\u00e3ao:\np = 1000Kg/m3 c = 4186J/KgoC hmax = 68,0cm\nPmax = 4400W F1max 0, 5L/s\ng = 9, 81m/s2\nAs equacoes 5.9 e 5.10 s\u00e3o n\u00e3o lineares e ser\u00ed preciso lineariza-las em certos pontos de operac\u00e3o. A linearizac\u00e3o tem por objetivo facilitar o projeto de controladores PI e proporcionais e a representac\u00e3o das equa\u00e7\u00f5es em vari\u00edveis de estado. Na pr\u00edxima se\u00e7c\u00e3ao iremos tratar desta linearizac\u00e7\u00e3ao.\n5.3.2\tLineariza\u00e7\u00e3o das equa\u00e7\u00f5es\nBalan\u00e7o de massa\nPara efeito de recapitula\u00e7c\u00e3ao, a equa\u00e7ca\u00e3o de balanc\u00e7o de massa \u00ede dada por:\n, dh\t.\t/\u2014\u2014\nA\u2014 = Fi - 2Aok^/gh dt\n(5.13)\nTemos ent\u00e3o que linearizar o termo nao linear definida por f (h) = 2Aok^/gh. Para isso, criaremos uma vari\u00f3vel incremento h dada por:\nh = h \u2014 h\n(5.14)\nonde h \u00e9 o ponto de opera\u00e7\u00e3o. Aplicando s\u00e9rie de Taylor na fun\u00e7\u00e3o f (h) obtemos (Stephanopoulos 1984):\nf (h) = Aoko&lt;/y-h\nh\u00e3\n(5.15)\nEnt\u00e3ao a eq. 5.13 torna-se:\nA\u2014 = Fi - 2Aoko dt\n(5.16)\nonde = F1 \u2014 . Em alguns casos, quando a vazao F1 for nula, a s\u00e9rie de Taylor ter\u00f3 apenas um elemento, a constante. Aplicando h = h na fun\u00e7ao f (h) e substituindo na eq. 5.13 obtemos:\n. dh . ,\nA\u2014 = -2Aok^/ gh dt\nBalan\u00e7o de energia\nPara a o balan\u00e7co de energia, modelou-se a seguinte equa\u00e7c\u00e3ao:\nAhdT = -FiT + Q dt\tpc\n(5.17)\n(5.18)\nConsiderou-se a eq. 5.18 para varia\u00e7oes de T e F1 somente. Com a limita\u00e7ao da chave de n\u00e9vel, o conversor est\u00f3tico so injeta corrente nos resistores com o n\u00e9vel acima de 90%. Com isso, admitiu-se a varia\u00e7\u00e3o do n\u00e9vel no intervalo entre 90% e 100% \u00e9 desprez\u00e9vel. Temos enta\u00e3o que a eq. 5.18 possui um termo n\u00e3ao linear:\nf (T, F,) = F,T\n(5.19)\nUsando a s\u00edrie de Taylor para duas ou mais variaveis para a eq 5.19 obtemos:\nf (T, F,) = TF, + F1T\nonde:\n(5.20)\n(5.21)\ne Fi e T sao os pontos de opera\u00e7ao para as variaveis Fi e T respectivamente.\nSubstituindo a eq. 5.20 na eq. 5.18 e agrupando os termos obtemos:\nhA^ = -TFi - FXT + Q\t(5.22)\ndt\tpc\nPortanto, temos que a equacao 5.16 possui uma entrada (Fi) e uma variavel apenas (h). Ja a equa\u00e7ao 5.22 possui duas entradas (Q e F\\). Na proxima secao calcularemos as fun\u00e7c\u00e3oes de transfer\u00e2encia para cada caso.\n5.3.3\tC\u00e1lculo das Fun\u00e7\u00f5es de Transfer\u00eancia\nNeste t\u00edopico iremos aplicar a transformada de Laplace nas equa\u00e7c\u00e3oes de balan\u00e7co de massa e balanc\u00e7o de energia linearizadas para efetuar o c\u00edalculo das fun\u00e7c\u00e3oes de trans-fer\u00e2encia do processo. Considera-se que as condi\u00e7c\u00e3oes iniciais sa\u00e3o nulas.\nBalan\u00e7o de Massa\nPara facilitar o c\u00edalculo da func\u00e7\u00e3ao de transfer\u00e2encia do balanc\u00e7o de massa, define-se uma constante co como:\nco\tAok\no\n(5.23)\nPara calcular a fun\u00e7c\u00e3ao de transfer\u00e2encia de balanc\u00e7o de massa, aplica-se a transformada de Laplace na eq.5.16 ja com a eq. 5.23 inclu\u00e9da:\nAsH(s) = -coH(s) + Fi(s)\n(5.24)\nApos algumas manipula\u00e7\u00f5es alg\u00e9bricas, obtemos:\nH(s) =\tco 1\nFi(s)\tAs + 1\n(5.25)\nBalan\u00e7o de Energia\nSeja a equac\u00e7\u00e3ao do balanc\u00e7o de energia linearizada:\nhA\u2014^ = -TFi - F\\T + Q\t(5.26)\ndt\tpc\nAplicando a transformada de Laplace na eq. 5.26 teremos duas fun\u00e7\u00f5es de transfer\u00eancia, uma para a entrada Q e outra para a entrada F1.\n1.\tEntrada F1\nNeste caso, a fun\u00e7ao de transfer\u00eancia \u00e9 dada por:\nT(s) Fi(s)\n2.\tPara entrada Q\nA fun\u00e7ao de transfer\u00eancia \u00e9 dada por:\nT(s)\nQ(s)\nT(Fi)-1\t(5.27)\nf s + 1\t\n(PcF^i)-1\t(5.28)\nf s + 1\t\nApesar da temperatura possuir duas fun\u00e7\u00f5es de transfer\u00eancia, utilizaremos somente a eq. 5.28. Verifica-se que todas as funcoes de transfer\u00eancia sao de 1a ordem e que este e um processo multivari\u00e1vel, onde a entrada F1 acopla as variaveis n\u00edvel e temperatura. No cap\u00edtulo seguinte trataremos da sintonia dos controladores PI para cada fun\u00e7ao de transfer\u00eancia. Por\u00e9m, iremos considerar os controladores para a modelagem das equa\u00e7co\u00f5es no espac\u00e7o de estados cont\u00e1nuo tratado no t\u00e1opico seguinte.\n5.3.4\tModelagem das equa\u00e7\u00f5es no espa\u00e7o de estados cont\u00ednuo\nIremos deduzir de forma generica a transforma\u00e7\u00e3o das fun\u00e7oes de transfer\u00f4ncia e controladores para o espa\u00e7co de estados.\nSeja a funcao de transfer\u00f4ncia de 1a ordem dada por:\nY (s)\tk\nU (s)\tTS + 1\n(5.29)\nonde U(s) \u00e9 a entrada do sistema, Y(s) \u00e9 a sa\u00edda, k \u00e9 ganho do sistema e t \u00e9 a constante de tempo.\nPara transformar esta fun\u00e7c\u00e3ao de transfer\u00f4encia em uma equac\u00e7a\u00e3o de variaveis de estados, aplica-se a transformada inversa de Laplace \u00e0 equa\u00e7ao 5.29 e fazendo y = x:\n1k\nx = \u2014 x(t) +\u2014 u(t)\nTT\nO compensador ou controlador PI e dado por:\nU (s)\tkc s + kikc\nE(s) =\ts\n(5.30)\n(5.31)\nonde kc e o ganho proporcional e o ki \u00e9 o ganho integral.\nDe acordo com (Ogata 1998), colocou-se o controlador PI na forma can\u00f3nica ob-servavel . Com isso, as equa\u00e7\u00e3es de estado para eq. 5.31 sao da forma:\nXc =\nkikce(t)\n(5.32)\nu(t) = xc(t) + kce(t)\n(5.33)\nonde a func\u00e3o e(t) e o erro dado por:\ne(t) = r(t) - y(t)\t(5.34)\nsendo que r(t) \u00e9 a refer\u00f4ncia. Substituindo e(t) da eq. 5.34 na eq. 5.32 e y(t) por x(t) obtemos:\nxc = \u2014 kikcx(t) + kikcr(t)\n(5.35)\nEsta \u00e9 a equa\u00e7\u00e3o de estados para o compensador PI. Para a planta, substituindo a eq. 5.33 na eq. 5.30 a agrupando os termos obtemos:\n(1 + kkc)\nT\nk\tkkc\nx(t) + - Xc(t) +----r(t)\nT\tT\n(5.36)\nA figura seguinte ilustra um diagrama de blocos com o sistema processo-compensador no intuito de facilitar o entendimento ao leitor.\nCOMPENSADOR\nPROCESSO\nr(t)\n+\n\t\tx = kikce(t')\tu(t) f\tX = --\u00cd-X0+ \u2014 u(t) T\tT\n-\t\tu(t} = xc (t}+kce(t}\t\tr(0= x(f)\ny(t)\nX = \u2014\nFigura 5.8: Diagrama de blocos de um sistemas processo-compensador no espa\u00e7o de estados cont\u00e9nuo.\nColocando as equa\u00e7\u00f5es na forma matricial:\nX\nXc\n(i+fefee)\tk\nT\tT\n\u2014 kikc\t0\nx(t)\nXc(t)\nkkc\nT\nkikc\nr(t)\n(5.37)\n+\nEste modelo matricial \u00e9 \u00fatil pelo fato de ser a estrutura utilizada pelo CheckMate de declarar as poss\u00edveis din\u00e2micas cont\u00ednuas sob a forma de equac\u00e3es de estados. O cap\u00edtulo seguinte trata esta questao com mais detalhes.\n5.4\tDiscuss\u00e3o\nEste cap\u00edtulo tratou de uma breve descri\u00e7\u00f5o da planta piloto, onde ser\u00e2o feitos experimentos pr\u00e1ticos aplicando-se a teoria de controle supervis\u00f3rio de sistemas h\u00edbridos. Iniciou-se a resolu\u00e7\u00f5o do problema proposto tratando os aspectos matem\u00e1ticos do tanque de aquecimento. Tal modelagem \u00f3 importante nao s\u00e1 para o modelo aut\u00f4mato h\u00edbrido, mas tamb\u00e1m para diversos estudos de outras \u00e1reas e abordagens. O pr\u00f3ximo cap\u00edtulo continua a resolu\u00e7ao do problema da sec\u00f5o 5.2 com a modelagem do aut\u00f4mato h\u00e1brido de comportamento livre e o c\u00e1alculo de seu respectivo aut\u00f4omato discreto atrav\u00e1es da ferramenta CheckMate , tratada no cap 3.\nCap\u00edtulo 6\nResolu\u00e7\u00e3o do problema proposto atrav\u00e9s da s\u00edntese de um supervisor discreto\nO presente cap\u00edtulo d\u00e1 continuidade na resolu\u00e7\u00e3o do problema proposto tratado no cap\u00edtulo 5 com a modelagem de um automato h\u00edbrido que represente o comportamento da planta livre. Em seguida trata o c\u00e1lculo do aut\u00f4mato discreto aproximado que representa o aut\u00f4mato h\u00edbrido. Por fim, dada uma especificac\u00e3o em rela\u00e7\u00e3o ao problema proposto, faz o projeto de um supervisor discreto de acordo com a teoria de controle superviso\u00edrio de sistemas h\u00edbridos.\n6.1\tModelagem do aut\u00f4mato h\u00edbrido\nInicia-se a modelagem destacando as vari\u00e1veis n\u00edvel (h) e temperatura (T). A modelagem h\u00edbrida, como cruzamento de hiperplanos e os guardas do modelo aut\u00f4omato h\u00edbrido do tanque de aquecimento \u00ede baseada nestas duas vari\u00edaveis. As vari\u00edaveis de estado utilizadas para a modelagem sao 4:\n\u2022\tx1 esta variavel representa o n\u00edvel de agua no tanque h.\n\u2022\tx2 esta vari\u00edvel nao tem sentido f\u00edsico expl\u00edcito, mas surgiu com a inser\u00e7ao de um compensador PI para o n\u00edvel.\n\u2022\tx3\testa variavel representa a temperatura de agua no tanque T.\n\u2022\tx4\testa vari\u00edvel nao tem sentido f\u00edsico expl\u00edcito, mas surgiu com a inser\u00e7ao de\num compensador PI para a temperatura.\nA seguir a defini\u00e7\u00f5o de cada hiperplano de h:\n\u2022\th &lt;0: A modelagem h\u00edbrida proposta \u00ed que se a igualdade referida anteriormente for satisfeita, podem ocorrer duas possibilidades. A primeira \u00e9 o tanque ficar permanentemente vazio e a segunda \u00e9 o n\u00edvel de agua no tanque voltar a subir.\n\u2022\th > 0.5m Este hiperplano tem a fun\u00e7ao de inserir no sistema a t\u00e9cnica de chave-amento de controladores. Este chaveamento se justifica no intuito de atenuar o overshoot do n\u00edvel de \u00e1gua, evitando assim que haja cruzamentos indesej\u00e1veis de hiperplanos .\n\u2022\th > 0.64m: A modelagem h\u00edbrida neste caso dar-se-\u00e1 pelo fato da uma restri\u00e7\u00f5o de funcionamento da planta piloto dada pela chave de n\u00edvel. S\u00e1 \u00e9 poss\u00edvel fornecer pot\u00eancia aos resistores quando a condic\u00f5o h >= 0.64m for satisfeita. Por quest\u00f5o de seguran\u00e7ca, os resistores s\u00edo podem estar ligados se estiverem submersos na \u00edgua. Caso contrario, a falta de \u00edgua acarretaria na queima dos resistores. Nesta desigualdade h\u00ed v\u00edrias din\u00eamicas poss\u00edveis de serem implementadas, que ser\u00e2o tratadas ainda nesta se\u00e7c\u00f5ao.\n\u2022\th &lt;0.64m: Este hiperplano possui comportamento oposto do hiperplano anterior. Com o n\u00edvel baixo, o conversor est\u00edtico deixa de fornecer pot\u00eancia aos resistores.\n\u2022\th > 0.68m: A modelagem h\u00edbrida proposta \u00ed que se a igualdade referida anteriormente for satisfeita, o tanque fica cheio e aparecer\u00ed a vaz\u00f5o Fs. Ha tamb\u00edm v\u00edarias din\u00eaamicas poss\u00edveis e estas sera\u00f5o tratadas posteriormente\nNeste momento definem-se os hiperplanos para a temperatura.\n\u2022\tT > 2 este valor de temperatura e o valor desejado para resolver o problema proposto.\n\u2022\tT > Tmax: este hiperplano foi criado no intuito de evitar que o tanque fique muito quente.\nValores num\u00edricos das equa\u00e7\u00f5es:\nPrimeiro, reescreve-se funcao de transfer\u00eancia de 1a ordem:\nY (s)\tk\nU (s)\tTS + 1\n(6.1)\nComparando a eq. 5.25 com a eq. 5.29 temos:\ne\nk = c-1\n(6.2)\nA\nT = \u2014\nCo\n(6.3)\nA equa\u00e7\u00e3o do balan\u00e7o de massa ser\u00e1 dividida em tr\u00eas pontos de opera\u00e7\u00e3o, uma para cada regiao entre os hiperplanos do n\u00e1vel. A tabela 6.1 mostra os valores calculados para as fun\u00e7\u00e3es de transfer\u00eancia do n\u00e1vel para cada ponto de opera\u00e7\u00e3o.\nIntervalos (cm)\th (cm)\tCo\tk\tT\n]0, 50]\t30,0\t0,2961\t3,378\t113,44\n]50,60[\t50,0\t0,2293\t4,36\t146,48\n[60, 68[\t62,0\t0,206\t4,85\t163,05\nTabela 6.1: Valores de k e t para cada ponto de opera\u00e7\u00e3o\nPara o balan\u00e7o de energia, comparando a eq. 5.28 com a eq. 5.29 obt\u00e9m-se\nk' = (pc.F1)-1\n(6.4)\ne\nAh\nK\n(6.5)\nNeste caso, utiliza-se dois pontos de opera\u00e7ao para o n\u00e1vel e um ponto de opera\u00e7\u00e3o para a vaz\u00e3o F\\. Os valores dos pontos de operacao localizam-se entre a chave de n\u00e1vel e o n\u00e1vel maximo do tanque. A tabela 6.2 mostra os valores das fun\u00e7\u00e3es de transfer\u00eaencia da temperatura para os dois casos.\nIntervalos (cm)\th (cm)\t. (l/s)\tk\u2019\tT'\n[62, 68[\t62,0\t0,333\t1\t62,54\n68\t68,0\t0,333\t1\t68,60\nTabela 6.2: Valores de k' e t' para cada ponto de opera\u00e7\u00e3o\nNestas tabelas n\u00e3o se inclui os controladores. O ap\u00eandice A deste documento trata de um projeto de controlador PI feito passo a passo e os valores dos demais controladores.\nModelo Aut\u00f4mato H\u00edbrido\nO modelo aut\u00f4mato h\u00edbrido que est\u00e1 ilustrado na fig.6.11 est\u00e1 de acordo com a defini\u00e7\u00e3o 3.1 e com os valores num\u00e9ricos ja inclu\u00eddos. As equa\u00e7\u00f5es estao no espa\u00e7o de estados cont\u00ednuo de acordo com a eq. 5.37.\nOnde:\n\u2022\tr \u00e9 a refer\u00eancia do n\u00edvel igual a 64cm.\n\u2022\trm\u00e1x \u00e9 a refer\u00eancia do n\u00edvel para tanque cheio\n\u2022\trT \u00ed a refer\u00eancia da temperatura igual a 2oC\n\u2022\tTm\u00e1x \u00ed a diferen\u00e7a maxima de temperatura que o tanque pode atingir. Este valor \u00ed obtido aplicando-se o teorema do valor final na eq.5.28 com um degrau Q = 4400W . Logo, Tm\u00e1x = 3,1oC.\nA seguir uma breve descri\u00e7ao de cada locacao:\nLocac\u00e3o 1: E a loca\u00e7\u00e3o inicial do aut\u00f4mato h\u00edbrido. Significa que o tanque est\u00e1 inicialmente vazio e enchendo sob ac\u00e3o de um controlador proporcional. Neste momento n\u00e3ao tem aquecimento de \u00edagua.\nLoca\u00e7c\u00e3ao 3: sua import\u00eaancia se da pela modelagem de um chaveamento de controladores. O controlador proporcional d\u00ed lugar a um controlador PI. Este chaveamento tem o intuito de se evitar um sobressinal muito alto no n\u00edvel de \u00edgua no tanque.\nLoca\u00e7\u00e3es de 4 a 8: S\u00e3o locacoes que estao com valores de n\u00edvel acima do hiperplano da chave de n\u00edvel. Foi proposto aqui uma combina\u00e7ao de poss\u00edveis dinamicas que podem ser configuradas na planta. As locac\u00e3es 4 e 5 o n\u00edvel de \u00edgua continua enchendo, mas na loca\u00e7c\u00e3ao 4 a temperatura est\u00eda em malha aberta e na loca\u00e7c\u00e3ao 5 a temperatura est\u00eda em malha fechada com refer\u00eancia igual a 2oC. O mesmo acontece com as loca\u00e7\u00e3es 6 e 7. Ambas est\u00e3o com o n\u00edvel com controlador PI com refer\u00eancia em 64cm, mas na loca\u00e7c\u00e3ao 6 a temperatura est\u00eda em malha aberta e na loca\u00e7ca\u00e3o 7 a temperatura est\u00eda em malha fechada com refer\u00eancia igual a 2. Ja a locacao 8 representa uma situa\u00e7\u00e3o em que o n\u00edvel esta diminuindo. Neste caso, o n\u00edvel atingir\u00ed a chave de n\u00edvel fazendo cortar o aquecimento do tanque.\nLoca\u00e7oes 9 e 10: Sao loca\u00e7oes que indicam que o n\u00edvel de agua no tanque est\u00ed no m\u00edaximo. A temperatura est\u00eda em malha aberta na loca\u00e7c\u00e3ao 9 e com um controlador PI\n1A transi\u00e7\u00e3o em tracejado e similar \u00e0s demais transi\u00e7\u00f5es, servindo apenas para n\u00e3o atrapalhar a leitura textual da figura.\n-0.0 l\u00f5x, +1.146 10\"\u2019\nr_0F9i67 +\t0-\nFigura 6.1: Modelo Aut\u00f4mato h\u00edbrido para o sistema h\u00edbrido tanque de aquecimento.\ncom refer\u00eancia igual a 2 na loca\u00e7ao 10. Esta ultima \u00ed o objetivo deste trabalho. Se for poss\u00edvel atingir esta loca\u00e7ca\u00e3o e permanecer nela, resolve-se o problema proposto.\nLocac\u00e7\u00e3ao 2: Esta loca\u00e7c\u00e3ao indica que a chave de n\u00edvel desabilitou a temperatura e que o n\u00edvel est\u00eda decaindo com o tempo.\nLocac\u00e7\u00e3ao 11: Significa que o tanque est\u00eda vazio.\nVerifica-se o aut\u00eamato h\u00edbrido modelado na fig.6.1 possui transi\u00e7\u00f5es de mesmo nome e guardas. Isto caracteriza o comportamento n\u00e3o determin\u00edstico deste aut\u00eamato. A transi\u00e7\u00e3o C, por exemplo, pode levar para qualquer loca\u00e7\u00e3o de 4 a 8.\nLogo, a modelagem do comportamento livre da planta \u00ede importante para que se possa formular um problema sob um aspecto geral, onde se considera no modelo todas as possibilidades de chaveamentos de din\u00eaamicas relevantes. O modelo planta livre n\u00e3ao \u00ede u\u00ednico. E\u00ed poss\u00edvel, em um mesmo sistema h\u00edbrido, modelar uma planta livre com um modelo automato h\u00edbrido diferente da fig.6.1. Isto depende do problema a ser resolvido, quais s\u00e3ao as vari\u00edaveis relevantes, a modelagem dos hiperplanos, escolha dos controladores, possibilidades de chaveamento, etc.\nPara resolver este problema de controle, obt\u00edm-se um aut\u00eamato de estados finitos que represente o comportamento l\u00edogico aproximado do sistema h\u00edbrido. Na se\u00e7c\u00e3ao seguinte \u00ede detalhada a obtenc\u00e7\u00e3ao deste modelo discreto.\n6.2\tCalculo do automato aproxima\u00e7\u00e3o\nPara o tratamento do aut\u00eamato h\u00edbrido da fig.6.1, utilizaremos a ferramenta CheckMate . A fig. 6.2 ilustra este modelo.\nDin\u00e2mica Cont\u00ednua\nO bloco SCS da fig.6.2 corresponde a um bloco de sistema cont\u00ednuo chaveado modelando Hc. Para este modelo em particular, o sinal de entrada u \u00ed um vetor (sinal multiplexado) de 4 sinais cada um assumindo o valor das vari\u00edveis x1, x2, x3 e x4 da fig.6.1.\nA fun\u00e7c\u00e3ao de chaveamento que retorna a derivada de cada valor de u \u00ede especificada em um arquivo de extens\u00e3o \u201c.m\u201d que associa cada valor de u uma dinamica do aut\u00eamato h\u00edbrido, onde o no da locac\u00e3o \u00ed igual a u.\nSete blocos \u00e0 direita do bloco SCS correspondem a blocos de limite poli\u00eddrico (PTHB). Tais blocos equivalem aos guardas do automato h\u00edbrido. Nota-se que o auto\u00eamato h\u00edbrido da fig.6.1 possui mais que sete transi\u00e7c\u00e3oes. No entanto ha\u00ed muitas\ntransi\u00e7co\u00e3es iguais devido ao comportamento n\u00e3ao-determin\u00edstico do aut\u00e2omato h\u00edbrido e portanto basta um PTHB para representar todas as transi\u00e7\u00e3es iguais. Neste modelo, cada poliedro convexo limita-se apenas a definir um limite do tipo reta associado a cada transic\u00e7\u00e3ao do modelo aut\u00e2omato h\u00edbrido. Assim por exemplo, considerando x = [x1 x2 x3 x4]T, o poliedro definido pelo par (C, d), onde C = [\u20141 0 0 0] e d = [\u20140.5 0 0 0]T, define o limite \u2014x1 &lt;\u20140.5 ou x1 > 0.5. Para este poliedro, o sinal de sa\u00edda so \u00ed verdadeiro para valores x1 > 0.5.\nDin\u00e2mica Discreta\nO bloco mais a direita da fig. 6.2 representa o bloco de maquina de estados finito que modela Hd. Os eventos de entrada deste bloco sao sinais multiplexados, ou vetores de sinais. O crit\u00ederio de deten\u00e7c\u00e3ao da mudan\u00e7ca do sinal adotado para todos os eventos \u00ede do tipo borda de descida. Para funcionar como borda de descida, muda a desigualdade dos guardas. Assim, para borda de descida, o limite x1 > 0.5 mudar\u00ed para x1 &lt;0.5.\nO modelo da m\u00edquina de estado finito da fig.6.3 representa as caracter\u00edsticas discretas do aut\u00e2omato h\u00edbrido.\nFigura 6.3: M\u00e1quina de estados finita representando a din\u00e2mica discreta do aut\u00f4mato h\u00edbrido\nDestacam-se as loca\u00e7\u00f5es de no 11 (Avoid) e de no 10 (sucesso). A primeira significa uma loca\u00e7\u00f5o indesej\u00e1vel, que \u00e9 quando o tanque esvazia e permanece vazio. A segunda \u00e9 a loca\u00e7\u00f5o que resolve o problema proposto, conseguir agua quente a uma temperatura constante escoando para o tanque de mistura.\n6.2.1\tSimula\u00e7\u00e3o do Modelo Planta h\u00edbrida em malha aberta\nUma dos aspectos relevantes do CheckMate n\u00f5o s\u00e9 \u00e9 a verifica\u00e7\u00f5o , mas tamb\u00e9m a simulac\u00f5o de um sistema h\u00edbrido. A simula\u00e7\u00f5o engloba apenas um subconjunto de condi\u00e7c\u00f5oes iniciais do sistema enquanto que a verificac\u00e7a\u00f5o considera todas as possibilidades pertencentes a um conjunto de condic\u00e7\u00f5oes iniciais. Assim, a simula\u00e7ca\u00f5o pode ser u\u00e9til para conhecer a resposta do sistema sob certas condi\u00e7co\u00f5es sem a necessidade de se efetuar uma verifica\u00e7\u00f5o, que \u00e9 bem mais demorado. A simula\u00e7ao \u00e9 feita sob o ambiente Simulink do MATLAB. A fig.6.4 ilustra um dos poss\u00e9veis comportamentos que o modelo da planta h\u00e9brida em malha aberta pode realizar.\n6.2.2\tVerifica\u00e7\u00e3o de propriedades do modelo aut\u00f4mato h\u00edbrido\nA principal utiliza\u00e7\u00e3o da ferramenta CheckMate \u00e1 a verifica\u00e7\u00e3o de sistemas h\u00edbridos. Este t\u00e1pico inicia a verifica\u00e7ao do modelo aut\u00f4mato h\u00edbrido da fig.6.1. A verifica\u00e7\u00e3o utiliza a mesma configura\u00e7\u00e3o de blocos da fig. 6.2.\nPara a verifica\u00e7\u00e3o, dois par\u00e2metros s\u00e3o importantes no CheckMate : O conjunto\n(a)\tN\u00edvel\t(b) temperatura\nFigura 6.4: Gr\u00e1ficos que representam um comportamento poss\u00edvel do aut\u00f4mato h\u00edbrido\nde condi\u00e7\u00f5es iniciais e as especifica\u00e7\u00f5es ACTL tratadas no cap. 3 para verifica\u00e7\u00e3o de propriedades.\nPara as condi\u00e7\u00f5es iniciais temos que:\n0 &lt;x1 &lt;0.3m\nX2 = 0\n0 &lt;x3 &lt;0.01oC\t(6.6)\n0 &lt;X4 &lt;0.01\nO CheckMate obriga o usu\u00e1rio a definir um intervalo de condi\u00e7\u00f5es iniciais para n-1 vari\u00e1veis, mesmo que um intervalo de condic\u00f5es iniciais seja importante para apenas uma vari\u00e1vel. Neste caso em particular, apenas o conjunto de condi\u00e7oes iniciais de x1 \u00e1 importante analisar devido ao fato de que x2 e x4 nao possuem sentido f\u00edsico e x3 que representa a temperatura est\u00e1 inativa na loca\u00e7\u00e3o inicial e portanto sua condi\u00e7\u00e3o inicial \u00e1 sempre nula.\nAs especificac\u00f5es ACTL foram geradas em rela\u00e7ao aos estados avoid e sucesso:\n\u2022\tEspecifica\u00e7\u00f5o 1 AG(AF fsm == sucesso): Significa que todos os caminhos no futuro levam ao estado sucesso e va\u00f5o permanecer nele.\n\u2022\tEspecificac\u00f5o 2 (AG-fsm == avoid): Significa que para todos os caminhos globalmente o estado avoid nunca sera atingido.\nVale ressaltar que se a especificac\u00f5o 1 for satisfeita, necessariamente a especifica\u00e7\u00f5o 2 tamb\u00e9m \u00e1 satisfeita, j\u00e1 que no estado sucesso nao haver\u00e1 mais cruzamentos de hi-perplanos. Efetuou-se a verifica\u00e7\u00f5o no CheckMate atrav\u00e1s do comando verify. Ambas\nas especifica\u00e7\u00f5es falharam, o que significa que existe alguma condi\u00e7\u00e3o inicial e tamb\u00e9m o comportamento n\u00e3o determin\u00edstico do aut\u00f4mato h\u00edbrido que leva ao estado avoid e que consequentemente nao atinja o estado sucesso.\n6.2.3\tObten\u00e7\u00e3o do Modelo Discreto\nO modelo discreto da verifica\u00e7\u00e3o descrita anteriormente \u00e9 guardado em uma vari\u00e1vel do MATLAB/Workspace chamada de GLOBAL AUTOMATON. O modelo discreto \u00e9 uma aproximac\u00e3o do modelo aut\u00f4mato h\u00edbrido.\nEste modelo \u00e9 tratado na ferramenta Grail, que \u00e9 uma biblioteca de fun\u00e7\u00e3es em C++ que permite a computac\u00e3o simb\u00f3lica sobre express\u00f5es regulares, linguagens finitas e aut\u00f4matos finitos (Gonz\u00e1les 2000). Contudo, a vari\u00e1vel GLOBAL AUTOMATON n\u00e3o pode ser interpretada diretamente pelo Grail. Para isso, foi utilizado um algoritmo que \u00e9 capaz de converter o modelo discreto calculado no CheckMate em uma lista de instru\u00e7\u00f5es que pode ser interpretada pelo Grail (Leal e Cury 2004). O resultado \u00e9 um aut\u00f4mato C/E que descreve o comportamento da planta h\u00e9brida\nA fig.6.5 mostra o resultado da verificac\u00e3o:\nFigura 6.5: Modelo discreto correspondente ao aut\u00f4mato h\u00e9brido\nO modelo da fig.6.5 \u00e9 um aut\u00f4mato C/E onde v s\u00e3o os eventos e u s\u00e3o as condi\u00e7\u00e3es. Na abordagem de sistemas h\u00edbridos, os eventos de um sistema C/E est\u00e3o associados ao cruzamento de hiperplanos de um sistema h\u00edbrido. Hiperplanos diferentes e sentido de cruzamento diferentes implicam em eventos distintos. As condi\u00e7oes s\u00e3o associadas as\ndinamicas de um sistema h\u00edbrido. Din\u00e2micas distintas sao determinadas por condic\u00e3es distintas.\nPara o modelo discreto da fig.6.5, a numera\u00e7\u00e3o do \u00edndices de u \u00e9 a mesma que cada locac\u00e3o do aut\u00e2mato h\u00edbrido possui. As transic\u00e3es A, B, C, D, E, F, e G, s\u00e3o representados pelos eventos v1, v2, v3, v4, v5, v6 e v7 respectivamente.\nAnalisando o modelo discreto da fig.6.5, verificamos que o evento de inicializa\u00e7c\u00e3ao ocorre com a condi\u00e7ao u1. Repare que o estado atingido pela transicao nu1 possui restricoes de comportamento, pois ha somente um evento ativo ap\u00eds nu1, que \u00ed o v1. Para o evento v1 h\u00ed somente a condicao u3. Com a ocorr\u00e2ncia da transicao v1u3, o estado atingido possui tambem apenas um evento ativo ap\u00eds a cadeia nu1 o v1u3 (v3), contudo tal evento est\u00ed associado a cinco condic\u00e3es: u4, u5, u6, u7 e u8. A cadeia nu1 o v1u3 corresponde a inicializacao do aut\u00e2mato h\u00edbrido na loca\u00e7ao 1 e a ocorr\u00eancia da transi\u00e7\u00e3o A: x1 > 0, 5 levando o modelo para a locacao 2. Na loca\u00e7ao 2, h\u00ed um nao determinismo que faz com o que uma transi\u00e7c\u00e3ao possa atingir cinco loca\u00e7c\u00e3oes distintas.\nFazendo a an\u00edlise completa do modelo discreto, \u00ed f\u00edcil notar que tal modelo \u00ed id\u00e2ntico ao aut\u00e2mato h\u00edbrido (sob aspecto discreto). O que normalmente ocorre \u00ed a obten\u00e7c\u00e3ao de uma aproxima\u00e7c\u00e3ao externa e que com o refinamento desta aproxima\u00e7c\u00e3ao talvez consiga atingir o modelo exato (Chutinan 1999). Neste caso em particular o modelo discreto exato do aut\u00e2mato h\u00edbrido foi calculado sem a necessidade de um refinamento.\nO problema agora \u00ede que tal modelo n\u00e3ao satisfaz a especifica\u00e7ca\u00e3o de atingir e permanecer no estado sucesso. Para isso, ser\u00ed utilizado a teoria de controle supervis\u00edrio de sistemas h\u00edbridos para resolver o problema proposto.\n6.3\tProjeto do supervisor discreto\nPara o projeto de um supervisor, foi utilizada a ferramenta Grail. Recentes pequisas acrescentaram ao Grail novas bibliotecas de fun\u00e7\u00e3es. Tais bibliotecas dizem respeito a teoria de controle supervisorio de SED, aut\u00e2mato C/E e controle supervisorio de sistemas C/E e outras. Foram utilizadas neste trabalho as bibliotecas de fun\u00e7\u00e3es sobre o aut\u00e2omato C/E e controle supervis\u00edorio de sistemas C/E. O projeto do supervisor discreto segue os mesmos passos do exemplo feito no cap.4. A planta livre \u00ede o modelo da fig.6.5\nDada a especificacao E C PV(Lm) para o comportamento desejado da planta sob supervisao como mostra a fig.6.6. Esta especifica\u00e7\u00e3o \u00ed do tipo sequ\u00e2ncia de eventos que leva ao estado correspondente \u00e0 locac\u00e3o 10 do aut\u00e2mato h\u00edbrido.\nFigura 6.6: Especifica\u00e7\u00e3o Esp C PV(Lm)\nO proximo passo \u00e1 encontrar uma linguagem K C (V+ x U)*. Aplica-se a proje\u00e7\u00e3o inversa em Esp e faz a intersec\u00e7ao com a linguagem marcada da planta. Com isso obtemos o aut\u00eamato ilustrado na fig. 6.7.\nFigura 6.7: Especifica\u00e7ao K C Lm\nVerifica-se, entretanto, que a linguagem K n\u00e3o \u00e1 vu-controlavel em rela\u00e7ao a L. Note, por exemplo, que ap\u00e1s a sequencia u = puy o vyu2 \u25e6 v3u5 E K pode levar a sequencias que nao s\u00e3o vu-controlaveis em rela\u00e7ao a K. Obt\u00e1m-se ent\u00e3o a m\u00e1xima linguagem vu-control\u00e1vel contida em K, a qual \u00e1 reconhecida pelo automato mostrado na fig.6.8.\nFigura 6.8: Maxima linguagem vu-controlavel SupCV u(K)\nCom isso o supervisor para o aut\u00eamato h\u00edbrido que representa o comportamento da planta h\u00edbrida foi conclu\u00eddo. Ressalta-se que pela fig.6.8 h\u00e9 quatro caminhos distintos que levam ao estado desejado. So o aspecto f\u00edsico, tais caminhos combinam as vari\u00e9veis n\u00edvel e temperatura tendo controladores ou em malha aberta. O pr\u00e9ximo passo \u00e9 utilizar novamente o CheckMate para verificar as especificac\u00e3es da subse\u00e7ao 6.2.2 que falharam para o modelo discreto da planta h\u00edbrida em malha fechada.\nVerifica\u00e7\u00e3o de propriedades do modelo aut\u00f4mato h\u00edbrido sob a\u00e7\u00e3o do supervisor\nPara este caso em particular, basta substituir a parte discreta da planta original pelo supervisor, pois o modelo discreto da planta \u00e9 exato e n\u00e3o aproximado. Se o modelo discreto fosse uma aproxima\u00e7\u00e3o externa teria que se fazer o produto s\u00edncrono do supervisor e parte discreta da planta acoplada com a parte cont\u00ednua da planta (Gonz\u00e1les 2000).\nff\t\"dd\n99\t\tee\nentry: q=7;\tU\tK\tentry: q=5,\nFigura 6.9: M\u00e1quina de estados finita representando a planta h\u00edbrida sob a\u00e7\u00e3o de um supervisor\nEfetua-se agora a verificacao para a 1a especifica\u00e7ao descrita na subse\u00e7\u00e3o 6.2.2. Observar-se que na fig. 6.9 o estado avoid nao se encontra. Ent\u00e3o n\u00e3o faz sentido testar a segunda especifica\u00e7ao da subsec\u00e3o 6.2.2, pois o supervisor impede que tal especifica\u00e7ao falhe.\nEfetuou-se uma simulacao que comprova que a especificacao foi satisfeita. Pela fig.\n6.10\tobserva-se pelo gr\u00e1fico do n\u00edvel que o tanque enche em torno de 150 segundos e a temperatura estabiliza em torno de 200 segundos.\n(a)\tN\u00edvel\t(b) temperatura\nFigura 6.10: Gr\u00e1ficos que representam o comportamento do automato h\u00edbrido sob a\u00e7ao do supervisor\nA especifica\u00e7\u00e3o, como previsto, \u00e1 satisfeita. Isso mostra que sistema h\u00edbrido modelado pelo aut\u00f4mato h\u00edbrido da fig.6.1 sob ac\u00e3o do supervisor da fig. 6.8 atende a especifica\u00e7\u00e3o ACTL. Vale ressaltar que esta \u00e9 apenas uma possibilidade das quatro\nposs\u00edveis que a planta h\u00edbrida em malha fechada consegue satisfazer a especifica\u00e7\u00e3o ACTL. Fisicamente, a possibilidade \u00ed encher o tanque \u00edgua e n\u00edvel com controle proporcional, chaveamento do controlador proporcional do n\u00edvel para um PI com refer\u00eancia em 64cm. Com o n\u00edvel estabilizado em 64cm, a temperatura comeca a subir e esta sem controle at\u00ed atingir o valor de 2 graus. Com isso, o n\u00edvel volta a subir e a temperatura permanece aumentando e sem controle at\u00ede que o tanque enche e a temperatura passa a ser controlada com refer\u00eaencia em 2 graus.\n6.4\tDiscuss\u00e3o\nEste cap\u00edtulo apresentou a resolu\u00e7c\u00e3ao de um problema proposto na planta piloto, que possui comportamento de um sistema h\u00edbrido guiado por eventos. Este problema aborda a s\u00edntese de supervisores discretos acoplados em uma planta h\u00edbrida.\nA utilizac\u00e3o da ferramenta CheckMate e uma extensao de fun\u00e7oes sobre aut\u00f4matos Grail permitiram resolver computacionalmente o problema de controle proposto. Contudo, o problema da complexidade algor\u00edtmica envolvida na verifica\u00e7\u00e3o impoem uma severa limita\u00e7c\u00e3ao computacional para problemas mais complexos.\nOs resultados obtidos at\u00ede agora s\u00e3ao te\u00edoricos, mas constituem um passo importante para uma implementa\u00e7\u00e3o pr\u00edtica. O pr\u00edximo cap\u00edtulo trata da implementacao pratica do supervisor discreto na planta piloto.\nCap\u00edtulo 7\nImplementa\u00e7\u00e3o de um supervisor C/E na planta piloto\nEste cap\u00edtulo mostra um procedimento para implementa\u00e7c\u00e3ao de supervisores discretos como o projetado no cap.6. Ser\u00eda descrito aqui um pouco mais sobre a rede Fieldbus, em especial a rede Fieldbus da planta, denominada de Foundation Fieldbus. A arquitetura de rede, protocolos de comunica\u00e7c\u00e3ao ter\u00e3ao uma breve descri\u00e7c\u00e3ao. Ser\u00eda tratado tamb\u00edem o conceito de OPC, alguns servidores OPC dispon\u00edveis na planta e sua interface com o MATLAB. Por fim, \u00ede descrito o algoritmo de controle que introduz o supervisor discreto por um jogador de aut\u00eaomatos feito no MATLAB e interagindo com as vari\u00edaveis cont\u00ednuas da planta.\n7.1\tArquitetura de rede da planta piloto\nA rede Foundation Fieldbus \u00ede uma arquitetura aberta para a integra\u00e7c\u00e3ao da in-forma\u00e7c\u00e3ao. O sistema de comunica\u00e7ca\u00e3o Foundation \u00ede um sistema digital, serial e bidirecional. Esta rede se destaca das outras por ter a capacidade de distribuir o controle no campo. Isto \u00ed poss\u00edvel devido \u00e0 inser\u00e7\u00e3o de processadores nos dispositivos de campo. Ela \u00ede regulamentada pela Fieldbus Foundation, uma organiza\u00e7c\u00e3ao internacional, sem fins lucrativos, formada pela unia\u00e3o de mais de 185 companhias-membros que representam aproximadamente 90% do mercado mundial do mercado de instrumentac\u00e3o e controle de processos.\nTopologia da Rede\nA arquitetura de rede da planta piloto \u00e9 distribu\u00edda e possui uma ponte denominada de DFI302 (Fieldbus Universal Bridge) que interliga os n\u00edveis de ch\u00e3o de fabrica com os n\u00edveis de usuario ou esta\u00e7\u00e3o de trabalho. A fig.7.1 ilustra a topologia da rede\nFoundation Fieldbus na planta piloto. O DFI302 \u00ed um elemento chave na arquitetura distribu\u00edda da planta. Este combina caracter\u00edsticas de comunica\u00e7\u00e3o com acesso direto de entrada e sa\u00edda (I/O) e controle para aplicacoes cont\u00ednuas e discretas. Tamb\u00edm prov\u00ea servicos de comunicacao para controle, utilizando o OPC, configurac\u00e3o e manutencao usando OLE.\nFigura 7.1: Topologia de rede da planta piloto\nOs principais protocolos de comunica\u00e7c\u00e3ao do DFI s\u00e3ao:\n\u2022\tEthernet: \u00ed o protocolo que interliga os n\u00edveis mais altos, como controladores de alta velocidade, dos servi\u00e7cos de dados e de esta\u00e7c\u00e3oes de trabalho, como mostra a fig.7.1. Este protocolo possui uma taxa de transmiss\u00e3o de 100Mbits/s e \u00ed baseado no protocolo TCP/IP.\n\u2022\tFoundation Fieldbus: que \u00ede um dos mais avanc\u00e7ados protocolos destinados para sistemas de automa\u00e7\u00e3o. O n\u00edvel H1 conforme mostra a fig.7.1 possui uma velocidade de 31.25Kbit/s por raz\u00e3es de seguran\u00e7a intr\u00ednseca. E o n\u00edvel responsavel pela interconex\u00e3ao dos equipamentos de ch\u00e3ao de f\u00edabrica tais como sensores, atua-dores e dispositivos de I/O.\n\u2022\tUtilizando portas adicionais, o Protocolo Modbus conecta com os dados da rede Fieldbus virtualmente e com qualquer dispositivo da rede que esteja dispon\u00edvel.\n7.2\tOPC - Open Process Control\nOPC \u00ed uma maneira unificada para conectar fontes de dados tais como dispositivos, base de dados, com aplicacoes cliente (interfaces homem-m\u00edquina). Esta tecnologia melhora a interface entre as aplica\u00e7oes cliente e servidor fazendo com que exista um mecanismo padr\u00e2o para comunicacao de uma fonte de dados para qualquer aplicacao cliente. Em outras palavras, OPC \u00ed um mecanismo que habilita no campo a automa\u00e7ao e as interfaces homem-maquina.\nAs principais caracter\u00edsticas da tecnologia OPC sao:\n\u2022\tE flex\u00edvel - suporta diversas aplica\u00e7\u00e3es.\n\u2022\tEfici\u00eancia e escalavel - suporta aplicacoes grandes e complexas.\n\u2022\tFacilidade de compreensa\u00e3o e de uso.\n\u2022\tPossui uma grande aceita\u00e7ca\u00e3o no mercado.\nPara o caso da planta, os clientes OPC s\u00e3ao conectados no servidor OPC atrav\u00edes de um software backplane, ou seja, \u00ed um software que pode ser conectado diretamente por qualquer cliente OPC. Por fim, os servidores OPC se comunicam com as variaveis dos dispositivos inteligentes da planta. A fig. 7.2 ilustra a configuracao OPC para a planta piloto.\nFigura 7.2: OPC na planta piloto\nO servidor OPC que os softwares da planta, como o syscon, utilizam \u00e9 o servidor com o nome SMAR.DFIOLESRVER.0. Com este servidor, \u00e9 poss\u00edvel acessar os par\u00e2metros de configura\u00e7\u00e3o que cada dispositivo inteligente da planta possui.\nRecentemente um novo cliente OPC foi instalado na planta. Tal cliente possui um controle denominado de ActiveX, que possibilita a integra\u00e7ao de dados com diferentes sistemas tais como fontes de banco de dados, linguagens de programac\u00e7\u00f5ao, etc. O controle ActiveX possibilita o software MATLAB acessar os servidores OPC da planta, em especial o servidor SMAR.DFIOLESRVER.0. Atraves de alguns comandos feitos no MATLAB, e poss\u00edvel acessar os par\u00f4metros de configura\u00e7ao de cada dispositivo da planta e ate mesmo modifica-los. O MATLAB utiliza o novo cliente OPC para se conectar aos servidores OPC da planta piloto.\n7.3\tImplementa\u00e7\u00e3o do algoritmo de supervis\u00e3o discreta por um servidor OPC conectado ao MATLAB\nO algoritmo de implementa\u00e7\u00f5o \u00e9 um jogador de aut\u00f4matos C/E conectado em um servidor OPC da planta1. Os eventos e condi\u00e7\u00f5es do jogador est\u00f5o associados com as variaveis T e h vindas da planta. Os controladores PIDs2 estao embutidos na configura\u00e7\u00f5o da planta. Cria-se ent\u00f5o uma configura\u00e7\u00f5o no Syscon que possui os blocos de n\u00edvel, temperatura, controladores e atuadores. Para o n\u00edvel, o atuador \u00e9 o posicionador de valvula FY302 e para a temperatura \u00ed o conversor estatico que est\u00ed interligado com o dispositivo FI302, um medidor de corrente. Ap\u00eds isso, o operador descarrega esta configura\u00e7ca\u00f5o na planta, para que o experimento possa ser realizado. O mais importante \u00ede que o cliente OPC acessa as vari\u00edaveis que est\u00f5ao no servidor OPC da ultima configurac\u00f5o descarregada do Syscon para os dispositivos da planta. Logo, tal configura\u00e7c\u00f5ao deve ser conferida para o correto funcionamento da implementa\u00e7ca\u00f5o do supervisor discreto. Com rela\u00e7ao \u00e0s variaveis, o algoritmo tem capacidade de ler e setar para\u00f4metros como ganho e integrador do PID, setpoints, etc. Para leituras e escritas das varia\u00edveis, o servidor OPC necessita de um atraso no algoritmo com o intuito de atualizar as vari\u00edveis, que varia de acordo com o no de dispositivos configurados na rede e se \u00ed leitura ou escrita de dados. Quanto mais dispositivos estiverem na rede, maior sera o atraso. Assim ocorre com escritas, que necessitam de um atraso maior que a leitura de dados. Para este algoritmo em particular, a atualiza\u00e7c\u00f5ao das variaveis possui um atraso de 2 segundos. Com isso, se quisermos plotar um grafico com 30 amostras do n\u00edvel e temperatura, o tempo do experimento sera de 1 minuto.\n1A implementa\u00e7\u00e3o do algoritmo tamb\u00e9m pode ser feita em outras linguagens de programa\u00e7\u00e3o, como C, C++, java, etc. Para isso, \u00e9 preciso obter uma biblioteca de comandos Activex para a linguagem escolhida com o intuito de se obter acesso \u00e0s variaveis da planta.\n2\tOs blocos de fun\u00e7ao dos dispositivos da planta sao chamados de PID. Contudo, os controladores modelados s\u00e3o PIs, que s\u00e3o um caso particular dos PIDs. Logo, foi utilizado o bloco PID e configurou-se um controlador PI de acordo com a modelagem feita no cap\u00edtulo 5.\nO algoritmo de implementa\u00e7ca\u00f5o do supervisor discreto sob abordagem do controle superviso\u00e1rio de sistemas h\u00e1bridos possui sete passos distintos:\n1. Convers\u00f5ao do arquivo em formato grail para uma matriz de transi\u00e7c\u00f5ao. A fig.7.3 ilustra uma lista de instru\u00e7\u00f5es do grail representando um aut\u00f4mato C/E qualquer.\n(START) I- 0\n0 [OJ ] 1\n1\t[1.5] 2\n3\t[3.5] 2\n2\t[2.6] 3\n2-I (FINAL)\nFigura 7.3: Exemplo de uma lista de instru\u00e7\u00f5es de um aut\u00f4mato C/E\nO termo START indica qual \u00e1e o estado inicial e o termo FINAL s\u00f5ao para os estados que possuem marca\u00e7c\u00f5ao. Os termos entre colchetes s\u00f5ao os eventos e condi\u00e7c\u00f5oes respectivamente. Os termos da 1a coluna s\u00f5o os estados de partida das transi\u00e7\u00f5es e os termos da 4a coluna sao os estados atingidos pelas transic\u00f5es. Uma fun\u00e7\u00f5o denominada de grailce2mat l\u00f4 os numeros do arquivo do grail e os guarda em uma matriz, arquivada em formato .mat. Esta matriz possui n linhas por 4 colunas, onde a 1a coluna significa o estado de onde sai a transi\u00e7ao, a 2a coluna significa os eventos pertencentes aos estados da 1a coluna, a 3a coluna sao as condic\u00f5es referentes as colunas anteriores e a 4a coluna s\u00f5o os estados atingidos pela transi\u00e7c\u00f5ao vu. O nu\u00e1mero de linhas significa o tamanho do aut\u00f4omato em termos de transi\u00e7\u00f5es. A seguir a matriz de transi\u00e7ao equivalente a lista de instru\u00e7\u00f5es da fig.7.3.\n0 0 11\n115 2\n2223\n(7.1)\n3352\nO algoritmo de conversao ordena todos as linhas pela ordem crescente dos estados de sa\u00edda das transi\u00e7\u00f5es e em seguida pela ordem crescente dos eventos servindo para facilitar o c\u00e1lculo do algoritmo. No entanto, a marca\u00e7\u00f5o nao \u00e9 considerada na matriz. Isto se justifica que a marca\u00e7\u00f5o \u00e9 um atributo te\u00f3rico que serve para marcar estados que possuem tarefa completa. A marca\u00e7ao foi de grande importancia na s\u00edntese do supervisor. Mas no caso desta implementa\u00e7\u00f5o, o jogador ir\u00e9a percorrer todas as transi\u00e7c\u00f5oes pertencentes a matriz de transi\u00e7c\u00f5ao do aut\u00f4omato independente da marca\u00e7ca\u00f5o dos estados.\n2.\tConex\u00e3o com o servidor OPC. O algoritmo configura o cliente OPC, conecta com o servidor OPC, adiciona as vari\u00e1veis que se deseja utilizar, leituras e escritas das vari\u00e3veis.\n3.\tNesta parte declaram-se alguns par\u00e2metros importantes, como o tamanho da matriz de transic\u00e3o, estado inicial, vari\u00e1veis auxiliares, etc.\n4.\tIn\u00e1cio do jogador de aut\u00f4matos. Nesta parte se inicia um loop que termina de acordo com no de amostras das vari\u00e1veis cont\u00ednuas conectadas no servidor OPC, que se deseja analisar. Este loop cont\u00e1m o jogador de aut\u00f4matos e a atualiza\u00e7\u00e3o das vari\u00e1aveis conectadas com o servidor OPC.\n5.\tEventos. Nesta parte localizam-se os eventos pertencentes ao estado inicial e atrav\u00e1s de uma func\u00e3o de configura\u00e7ao dos eventos, verifica-se qual o evento ocorreu. A fun\u00e7ao dos eventos descreve quais sao os cruzamentos de patamares que podem ocorrer no estado inicial. Se n\u00e3o ocorreu nenhum evento, o algoritmo volta para o in\u00edcio do loop e repete-se as partes 3, 4 e 5. Se ocorreu algum evento, enta\u00e3o ocorre o passo seguinte, que \u00e1e localizar as condi\u00e7c\u00e3oes associadas ao evento ocorrido.\n6.\tCondic\u00e3es. Ap\u00e1s a ocorr\u00f4ncia de um evento, verifica-se quais s\u00e3o as condic\u00e3es associadas ao evento ocorrido e atrav\u00e1es de uma func\u00e7\u00e3ao na\u00e3o determin\u00e1stica, escolhe-se o valor da condic\u00e7a\u00e3o de maneira aleat\u00e1oria. Com o valor da condi\u00e7c\u00e3ao, associa-se este valor uma din\u00f4amica. Isto \u00e1e feito atrav\u00e1es de uma fun\u00e7c\u00e3ao onde se declaram todas as din\u00f4micas poss\u00e1veis de ocorrer na planta h\u00e1brida para cada valor da condi\u00e7c\u00e3ao. Por fim, ocorrido o evento e determinado a condi\u00e7ca\u00e3o, atualiza o estado do aut\u00f4omato e a din\u00f4amica a ele associado e repete os passos de 3 at\u00e1e 6 para o estado atual.\n7.\tOs passos de 3 a 6 ocorrem at\u00e9 que acabe o no de amostras, que ent\u00e3o se encerra o loop, desconecta com o servidor OPC e fim do algoritmo\nA fig.7.4 ilustra o fluxograma do algoritmo implementando o supervisor discreto na planta piloto. Cada reta\u00f4ngulo pontilhado representa as partes do algoritmo que foram descritas anteriormente.\nFigura 7.4: Fluxograma do algoritmo jogador de aut\u00eamatos conectado \u00e0 planta\nE importante ressaltar que o algoritmo descrito pelo fluxograma da fig. 7.4 \u00e9 capaz de implementar supervisores para diferentes especificac\u00f5es. O que mudaria \u00e9 o arquivo gerado pelo do grail devido a inser\u00e7\u00f5o de diferentes especifica\u00e7\u00f5es e consequentemente a matriz de transicao.\nTamb\u00e9m \u00e9 poss\u00edvel a implementa\u00e7\u00f5o de supervisores para outros sistemas h\u00edbridos (SH). Para isso, \u00e9 necess\u00e1rio alterar as fun\u00e7\u00f5es de configuracao de eventos e condicoes do algoritmo. Isto porque a funcao eventos esta associado com os guardas do modelo aut\u00f4mato h\u00e9brido de um supervisor para um SH qualquer. Basta alterar os guardas e o numero de eventos de acordo com a modelagem escolhida. A fun\u00e7\u00f5o de confi-gurac\u00e7\u00f5ao de condi\u00e7c\u00f5oes est\u00e9a associado com as poss\u00e9veis din\u00f4amicas do sistema. Para um supervisor de um SH qualquer, basta alterar as equa\u00e7\u00f5es, as vari\u00e9veis e o numero de dinamicas poss\u00e9veis de acordo com a modelagem escolhida. Deve ser checado se o supervisor em quest\u00f5ao possui interface homem-m\u00e9aquina, isto \u00e9e, se \u00e9e poss\u00e9vel obter acesso as suas vari\u00e9veis em tempo real. Logo, cada supervisor tem seus pr\u00e9prios arquivos de configurac\u00e7\u00f5ao de eventos e condi\u00e7c\u00f5oes.\nO Ap\u00f4ndice B deste documento ilustra o codigo de instru\u00e7\u00f5es em MATLAB do algoritmo.\n7.4\tResultados da implementa\u00e7\u00e3o do algoritmo\nA seguir \u00e9 apresentado os resultados da implementa\u00e7\u00e3o do algoritmo para o supervisor da fig.6.8.\n(a) n\u00edvel\t(b) Temperatura\nFigura 7.5: Gr\u00e1ficos representando o comportamento do n\u00e9vel e temperatura da \u00e9gua no tanque\nNote que o n\u00e9vel inicia subindo, depois tem-se um queda e volta a subir. O controlador PI faz o n\u00e9vel atingir a refer\u00eancia e depois o n\u00e9vel sobe at\u00e9 encher o tanque.\nA descida do n\u00edvel conforme ilustra a fig.7.5(a) foi um fato inesperado e que ocorreu no instante em que o controlador, que antes era proporcional, passou a ser um PI. O controlador PID do n\u00edvel, por quest\u00f5es de seguran\u00e7a, fez a v\u00e1lvula fechar totalmente por um certo tempo. A princ\u00edpio o problema dever estar na atualiza\u00e7\u00e3o brusca do valor do O controlador PID n\u00e3o foi projetado para alteracoes bruscas nos seus par\u00e2metros de configura\u00e7\u00e3o. Uma l\u00e1gica de controle que varie gradativamente o valor de Ti poderia resolver este problema. Para o jogador de aut\u00f4matos, o problema no PID n\u00e3ao afetou o algoritmo porque n\u00e3ao havia nenhum cruzamento de patamar que gerasse a ocorr\u00e2ncia de um evento na descida do n\u00edvel de \u00e1gua no tanque.\nPela curva da temperatura ilustrada na fig.7.5(b), nota-se que esta n\u00e3o foi afetada pelo chaveamento, pois ainda n\u00e3o havia aquecimento no tanque. Verifica-se no in\u00edcio do experimento uma queda de temperatura. Isto ocorreu porque foram feitas outros experimentos e provavelmente o tanque ficou com um res\u00edduo de calor. Quando o tanque come\u00e7cou a encher com \u00edagua fria, isto fez com o que a temperatura diminu\u00edsse e s\u00ed voltou a aquecer quando a chave de n\u00edvel atuou, habilitando o conversor est\u00edtico a fornecer pot\u00e2encia aos resistores.\nPela fig.7.6(a), nota-se que o supervisor segue a sequencia de eventos dado pela especificac\u00e3o da fig.6.6. Pode-se observar que os eventos 1, 3, 4 e 5 ocorrem aproximadamente nos tempo de 60s, 120s 200s e 240s respectivamente. E no mesmo instante, acrescido de 2s de atraso, que o comportamento das variaveis continuas se alteram pela introducao da nova condicao. Na fig.7.6(b) ilustra o comportamento das condi\u00e7oes, que s\u00e3o constantes por partes e mudam de valor somente nos instantes em que ocorreu os eventos.\n(a) Eventos\t(b) Condi\u00e7\u00f5es\nFigura 7.6: Gr\u00e1ficos com os eventos e condi\u00e7\u00f5es do supervisor discreto\nForam realizadas outras duas implementares na planta, mas por coincid\u00eancia, as condic\u00f5es associadas aos eventos foram os mesmos da fig.7.5. Coincid\u00eancia pelo fato da funcao nao determin\u00edstica ser capaz de escolher outro valor de condi\u00e7ao que pertenca\nao supervisor da planta.\n7.5\tDiscuss\u00e3o\nEste cap\u00edtulo apresentou os resultados da implementac\u00f5o do supervisor discreto da fig.6.8 na planta piloto atrav\u00eds de um algoritmo que \u00ed um jogador de aut\u00eamatos C/E conectado ao servidor OPC das vari\u00edveis cont\u00ednuas da planta. Os resultados mostraram ser satisfat\u00edrios com rela\u00e7ao a teoria de controle supervis\u00edrio de sistemas h\u00edbridos, apesar do problema no chaveamento de controladores referente a loca\u00e7\u00f5o 3 do aut\u00eamato h\u00edbrido da fig.6.1. Logo, foi poss\u00edvel efetuar o controle de uma planta com caracter\u00edsticas h\u00edbridas por um supervisor discreto, uma abordagem utilizada por (Cury e Niinomi 1998).\nVale ressaltar alguns pontos sobre o atraso na planta. Uma sugest\u00f5o seria modelar o atraso que ocorre na atualiza\u00e7\u00f5o das vari\u00edveis do modelo como um clock entre uma dinamica e outra, ficando assim, um modelo mais complexo e interessante. Isto \u00ed, o modelo aut\u00eamato h\u00edbrido da planta teria uma vari\u00edvel de estado a mais e quase o dobro de loca\u00e7co\u00f5es em relac\u00e7a\u00f5o ao modelo original. No entanto, problemas de verifica\u00e7c\u00f5ao com a ferramenta CheckMate devido ao aumento do numero de locac\u00f5es do automato h\u00edbrido e principalmente o aumento de varia\u00edveis de estado, tornariam a verifica\u00e7c\u00f5ao intrata\u00edvel. Sabe-se que pesquisas recentes estao surgindo com o objetivo de resolver o problema de aspecto computacional e algor\u00edtmico que dificulta e muito a verificac\u00f5o de sistemas h\u00edbridos. Em um futuro n\u00f5ao muito distante espera-se que este problema seja resolvido ou pelo o menos minimizado.\nCap\u00edtulo 8\nConclus\u00f5o e Perspectivas\nEste cap\u00edtulo re\u00fane algumas conclus\u00e3es e contribui\u00e7\u00e3es da pesquisa apresentada neste documento. Por fim algumas perspectivas de trabalho futuro sao apresentadas.\n8.1\tConclusoes e Contribuic\u00f5es\nNesta disserta\u00e7c\u00e3ao foram estudados e implementados numa planta piloto a abordagem de controle supervis\u00e9orio de sistemas h\u00e9bridos. Os aspectos de controle superviso\u00e9rio de sistemas h\u00edbridos foram abordados no cap. 4. A principal contribuic\u00e3o deste trabalho foi da abordagem utilizada por (Gonzales 2000) e (Cury e Niinomi 1998) com aplica\u00e7ca\u00e3o pr\u00e9atica. Foi feita uma modelagem sobre as caracter\u00e9sticas h\u00e9bridas da planta piloto, modelo aut\u00e1mato h\u00edbrido e s\u00e9ntese de um supervisor discreto utilizando softwares acad\u00eamicos, como o CheckMate e o Grail. Atrav\u00e9s destes resultados foi poss\u00e9vel implementar um algoritmo que interpretasse o supervisor que controle a planta em tempo real, conforme o problema proposto do cap. 5. A implementac\u00e3o foi feita em um sistema h\u00e9brido relativamente simples, que possui poucas loca\u00e7c\u00e3oes, mas pode mostrar, com resultados satisfat\u00e9orios, a validac\u00e7a\u00e3o da teoria na pra\u00e9tica, feita no cap. 7.\n8.2\tPerspectivas\nAlgumas sugesto\u00e3es de pesquisa sobre a implementac\u00e7a\u00e3o de supervisores discretos em sistemas h\u00e9bridos reais s\u00e3ao listados a seguir:\n\u2022 Aperfei\u00e7oamento de t\u00e9cnicas computacionais para a verifica\u00e7\u00e3o e extra\u00e7ao de aproxima\u00e7co\u00e3es do comportamento lo\u00e9gico de sistemas h\u00e9bridos.\n\u2022\tImplementacao do formalismo sistemas h\u00edbridos em plantas mais complexas. E sempre importante o in\u00edcio da implementa\u00e7ao de um formalismo em sistemas reais mais simples. Contudo, isto nos leva pensar que sistemas reais mais complexos tamb\u00edem podem ser estudados e analisados.\n\u2022\tA introduc\u00e7\u00e3ao da abordagem modular para o controle supervis\u00edorio de sistemas h\u00edbridos (Leal 2002). A implementa\u00e7ao do formalismo de controle supervis\u00edrio de sistemas h\u00edbridos para plantas reais complexas se tornara\u00ed mais atrativa com a utiliza\u00e7c\u00e3ao de abordagens mais apuradas, como a abordagem modular.\n\u2022\tAperfeic\u00e7oamento e cria\u00e7c\u00e3ao de ferramentas para verificac\u00e7\u00e3ao de sistemas h\u00edbridos. Considerando a ferramenta CheckMate e a dificuldade envolvida no calculo do modelo aproximadoi do comportamento l\u00edogico da planta h\u00edbrida \u00ede razo\u00edavel considerar melhorias nesta ferramenta, como por exemplo uma melhor documenta\u00e7c\u00e3ao, melhor interface homem maquina, diminui\u00e7ao de limitacoes, como a de no de vari\u00edaveis de estado.\n1Como descrito no cap.6 para este trabalho em particular foi obtido o modelo exato do comportamento l\u00f3gico da planta h\u00edbrida.\nAp\u00eandice A\nProjeto de Controladores utilizando \u00e3 Teoria de Controle Cl\u00e1ssica\nA.1 Introdu\u00e7\u00e3o\nEste ap\u00eandice trata de um projeto de um controlador utilizando a teoria de controle cl\u00e9ssico. Dadas especifica\u00e7\u00e3es de controle, ir-se-\u00e9 projetar um controlador que satisfa\u00e7a as especifica\u00e7c\u00e3oes. O projeto do controlador utiliza o m\u00e9etodo lugar das ra\u00e9zes, que \u00e9e um m\u00e9etodo onde as ra\u00e9zes da equac\u00e7a\u00e3o caracter\u00e9stica sa\u00e3o colocadas em um gr\u00e9afico para todos os valores do ganho de malha aberta.\nA.2 Projeto do controlador\nN\u00edvel de \u00e1gua no tanque:\nEsta se\u00e7c\u00e3ao dar-se in\u00e9cio no projeto de um controlador. O processo escolhido a ser controlado \u00e9e:\nH\u00eds! =\t4-85\t(A 1)\nF(s)\t163.05s + 1\tv \u2019 7\nque utiliza os valores de ganho e constante de tempo ilustrados na tabela 6.1. Foi escolhido tais valores devido ao valor de refer\u00f4encia se situar dentro do intervalo 60cm &lt;h &lt;68cm, que \u00e9 o mesmo intervalo para os valores de ganho e constante de tempo do n\u00e9vel descritos na eq. A.1.\nA.2.1 Especifica\u00e7\u00f5es de Controle\nO projeto do controlador dever\u00ed satisfazer as seguintes especifica\u00e7\u00f5es:\n\u2022\tSobre-sinal maximo1 SSM &lt;4%. Para evitar que o tanque encha.\n\u2022\tTempo de acomoda\u00e7\u00e3o2 ts = 8s. Usada para obter uma resposta r\u00e1pida do sistema.\nO primeiro passo \u00e1 definir um controlador. O controlador ser\u00e1 do tipo atraso de fase. Mais especificamente um PI, que possui um polo na origem.\nO controlador \u00e1 o mesmo da eq. A.2, mas reescrito da forma:\nC (s) = k'c\nTi s + 1\n(A.2)\ns\nonde ki = T e k'c =\t.\nCOMPENSADOR\tPROCESSO\nFigura A.1: Diagrama de Blocos do sistema n\u00edvel-controlador\nA.2.2 C\u00e1lculo dos p\u00f3los do Sistema com controlador em malha fechada\nA equa\u00e7ao caracter\u00edstica do sistema da fig. A.1 \u00e1 de segunda ordem do tipo\ns2 + 2^un + w2 \u2014 0\n(A.3)\nque possui duas ra\u00e1zes do tipo:\nr\u00e1SM \u00e9 o maior desvio da sa\u00edda para a entrada.\n2ts e o tempo que o sistema leva para entrar na regiao de regime permanente. Neste caso, o crit\u00e9rio utilizado e de 2 %.\nS12 =\t\u00b1 jun\\/1 \u2014 \u00a32\n(A.4)\nCalcula-se os polos de malha fechada (MF) da equagao caracter\u00edstica do sistema. Para isso,utiliza-se a definicao do SSM que \u00ed:\nSSM = exp(\n\n(A.5)\nPara SSM = 0, 04 tem-se que \u00a3 = 0, 71564. Utiliza-se agora a definic\u00e3o de ts com o crit\u00edrio de 2%:\nsubstituindo o valor de ts = 8 obt\u00e9m-se un = 0, 69867. Para calcular os p\u00f3los de MF, basta substituir os valores num\u00e9ricos de \u00a3 e zn na eq.A.4:\nsi2 = \u20140, 5 \u00b1 j0, 34085\n(A.7)\nDefine-se ent\u00e3o o ponto po do plano s da locac\u00e3o de p\u00f3los de MF. Tal ponto pode ser qualquer um dos p\u00f3los da eq. A.7, cujo m\u00f3dulo \u00e9:\n|po| = 0, 60513\n(A.8)\nO compensador devera introduzir uma fase quase nula em po e que o ganho em baixas frequ\u00eancias permita aumentar o valor do ganho do sistema em 5 vezes. Para isso o controlador tera\u00ed um par p\u00edolos-zeros com a seguinte relac\u00e7\u00e3ao.\n|p| &lt;|z|&lt;&lt;|po|\n(A.9)\nPara o controlador PI, |p| = 0. Isto significa que basta z ser diferente de zero para atender a primeira desigualdade da eq. A.9. Na segunda desigualdade da eq. A.9, a regra pratica para o c\u00edlculo \u00ed escolher |z| no m\u00ednimo dez vezes menor que [po^ Entao o valor de |z| = 0,060513. Com isso, o valor de Ti = z-1 = 16,53. Para facilitar os c\u00edlculos escolheu-se Ti = 17.\nO pro\u00edximo passo \u00ede tra\u00e7car o lugar das ra\u00edzes para o ganho do sistema com controlador em malha aberta (MA).\nA.2.3 Gr\u00e1fico do lugar das ra\u00edzes\nPara se analisar o ganho do sistema com controlador em MA \u00ed de grande utilidade esbo\u00e7ar o grafico do lugar das ra\u00edzes (LR). Com este metodo temos todos os valores de ganho de zero at\u00ede infinito e podemos analisar a posi\u00e7ca\u00f5o dos p\u00edolos do sistema para cada valor deste ganho.\nDar-se in\u00edcio ao LR calculando a fun\u00e7\u00f5o de transfer\u00eancia em MA.\nG(s)=C (s) Hs)\n4, 85kC\n17s + 1 163,05s2 + s\n(A.10)\nPara o LR, calcula-se a FT de MA com um fator multiplicativo do tipo:\n1\t+ KG'(s) = 0\n(A.11)\nsubstitui-se a eq. A.10 na eq. A.11 e obt\u00edem-se\n1 + K\n17s + 1 163,05s2 + s\n=0\n(A.12)\nonde K = 4, 85k'c.\nP\u00f3los de G(s): s\u00f5o os pontos onde K = 0.\nPortanto, p1 = 0 e p2 = -6,133 \u2022 10-3\nZeros de G(s): sao os pontos onde K = x.\nPortanto, z1 = x e z2 = -5, 882 \u2022 10-2\nDetermina\u00e7\u00e3o do no de ramos:\nO numero de ramos \u00ed o grau da equa\u00e7\u00f5o caracter\u00edstica. Portanto s\u00f5o dois ramos.\nPonto de teste sobre o eixo real s = \u2014 1:\nA direita deste ponto ha\u00ed dois po\u00edlos e um zero, onde a soma total \u00ede tr\u00e2es3. Portanto s G LR\nIntersec\u00e7\u00e3o das Assintotas:\n3\tO no \u00edmpar da soma de p\u00f3los e zeros finitos significa que o ponto est\u00e1 na LR e no par significa LR Complementar.\nEsta sobre o eixo real e \u00e9 \u00fanico para LR.\nJa\nEpolos finitos \u2014 Ezeros finitos\nnm\n(A.13)\nOnde n e m sao os no de p\u00e9los e zeros finitos respectivamente e aa \u00e9 o ponto de intersecc\u00e3o das ass\u00e9ntotas. Logo, aa = 0, 0564.\nAngulos da assintotas:\nE o angulo entre 2(n \u2014 m) ass\u00e9ntotas. O c\u00e1lculo do \u00eangulo \u00e9 feito pela seguinte equac\u00e3o:\n&amp; = \u00b1180(21 + \" (l = 0,1,2, ...|n \u2014 m|)\nnm\n(A.14)\nLogo, Jo =\t= 180. As duas ass\u00e9ntotas possuem um \u00f4ngulo de 180 graus entre si\nno ponto aa.\nAngulo de partida dos p\u00f3los e de chegada dos zeros:\nTodos os po\u00e9los e zeros finitos s\u00f5ao reais. Portanto o a\u00f4ngulo de partida para os po\u00e9los e de chegada para os zeros \u00e9 de \u00b1180.\nIntersecc\u00e3o com o eixo imaginario:\nNo p\u00e9lo s = ju = 0 \u00e9 a intersec\u00e7\u00f5o com o eixo imagin\u00e9rio. Logo K = 0 e u = 0.\nPontos de ramificac\u00e3o ou pontos sela:\nCorrespondem \u00e0s ra\u00e9zes de ordem m\u00faltipla. Se n ramos se aproximam, n ramos deixam com o ponto de ramifica\u00e7ao com espacamento 'j\". Logo , sao dois ramos que deixam o(s) ponto(s) de ramificacao com espacamento de 90o.\nCondi\u00e7c\u00f5oes para o c\u00e9alculo do ponto de ramifica\u00e7ca\u00f5o.\n\u2022\tcondi\u00e7\u00f5o necessaria mas nao suficiente: d' \u00b1' = 0\n\u2022\tas soluc\u00f5es desta equac\u00f5o devem tamb\u00e9m satisfazer a eq. A.11 quando a solu\u00e7\u00f5o for ra\u00e9zes complexas. Para ra\u00e9zes reais sempre existe um K que satisfaz a eq.A.11, bastando apenas verificar se os pontos pertencem ao LR ou ao lugar das ra\u00e9zes complementar (LRC).\nEnt\u00e3ao faz-se\nd\t17s +1\t=0\nds 163,05s2 + s\n(A.15)\napos algumas manipula\u00e7c\u00f5oes algebricas, obtem-se a seguinte equa\u00e7c\u00f5ao:\n2771,85s2 + 326,1s + 1 = 0\t(A.16)\nA soluc\u00e3o da eq. A.16 e s1 = -3,1509 \u2022 10-3 e s2 = -0,1145. Sao ra\u00edzes reais, portanto s\u00e3o pontos de ramificac\u00e3o. Ambos do LR, pois s1 esta a direita dos dois polos e do zero, sendo portanto tr\u00e2s pontos e o s2 esta \u00e0 direita somente do polo na origem, caracterizando assim, um ponto.\nNa figura A.2 mostra o esboco grafico do lugar das ra\u00edzes com a regiao \u00a3 > 0, 715 onde os p\u00edlos de MF do sistema devem se situar na regiao conica formada pelas duas retas.\nFigura A.2: Gr\u00edfico do lugar das ra\u00edzes\nC\u00e1lculo do modulo de K para o ponto s2 = \u20140,1145:\n|K| = W\u00ed\t<A-17)\nSubstituindo s2 na eq. A.17 obtemos K = 2,14.\nC\u00edlculo do m\u00eddulo de K para o ponto s^n = \u2014 &amp;n = \u20140, 5, que \u00ed o valor da parte real de po. Substituindo s^n na eq. A.17 obtemos K = 5, 368. Com isso, k'c = 1,107.\nO grafico da fig. A.3 ilustra o comportamento do sistema com o controlador PI.\nPode-se observar que as especificac\u00e7o\u00f5es do sistema n\u00f5ao foram atingidas. Isto se deve ao fato de que o zero do controlador e muito pequeno, proximo dos polos dominantes\nFigura A.3: Resposta do sistema com controlador\ne tamb\u00e9m porque o c\u00e1lculo dos p\u00f3los em MF feito na eq. A.4 \u00e9 para uma fun\u00e7\u00e3o de 2a ordem pura, n\u00e3o levando em conta o zero. Observa-se pela fig.A.2 que aumentando o valor de K, o SSM cai. Com isso, colocando o valor de em torno de 14,55 , teremos k'c = 3, 0. O grafico da fig.A.4 ilustra a nova resposta do sistema:\nFigura A.4: Resposta do sistema com k'c = 3, 0.\nNota-se que o pico maximo foi de aproximadamente 0, 66 metros que corresponde a um SSM de 3,1%, satisfazendo a especifica\u00e7ao. No caso do tempo de acomoda\u00e7\u00e3o, tal especificacao pode ser relaxada, pelo fato de que a especifica\u00e7ao importante para este sistema seja o SSM, para que se evite que o tanque encha. Um fator importante nao considerado aqui, mas considerado no problema tratado neste documento \u00e9 a saturacao da valvula. A vazao maxima \u00e9 em torno de 0, 5 litros por segundo. Com isso, a resposta do sistema com satura\u00e7ca\u00e3o sera\u00e9 bem mais lenta que a resposta sem satura\u00e7ca\u00e3o, que \u00e9e o que ocorre na pra\u00e9tica.\nAqui \u00e9 ilustra-se um grafico da planta piloto com o controlador de n\u00edvel.4\n4O atraso inicial do resposta e em virtude da demora do operador em ligar o processo com rela\u00e7\u00e3o a plotagem do grafico.\nFigura A.5: Resposta do n\u00e9vel na planta piloto\nTemperatura:\nPara a temperatura, foi projetado um controlador PI para a fun\u00e7\u00e3o de transfer\u00eancia daeq. 5.28 com os valores da Ultima linha da tab. 6.2. Utilizou-se a mesma metodologia feita para o n\u00edvel de agua e os resultados foram:\nkc = 29,3\nTi = 18\t(A.18)\nA.3 Discuss\u00e3o\nEste ap\u00eandice tratou de um projeto de um controlador PI feito passo a passo utilizando a teoria de controle ciassica. Este projeto tem como intuito mostrar uma metodologia de projeto e n\u00e3o uma t\u00e9cnica de controle. Par\u00e2metros de controle como as pertubacoes, filtros de refer\u00eancia e atraso de transporte n\u00e3o foram tratados, apesar de serem bastante relevantes para a teoria de controle, devido ao fato de que esta n\u00e3o \u00e9 a proposta de trabalho deste documento e sim o controle de um sistema h\u00e9brido por um supervisor discreto sob a abordagem de Sistemas H\u00edbridos e Sistemas a Eventos Discretos. Os controladores do ponto de vista de um sistema h\u00edbrido, sao apenas um subconjunto do conjunto de todas as dina\u00eamicas cont\u00e9nuas deste sistema. Por fim, ressalta-se que as especifica\u00e7\u00e3es foram um meio utilizado para ser uma refer\u00eancia de projeto, mas o ajuste final se baseou em atender apenas uma especifica\u00e7ao (o SSM para o n\u00edvel e o ts para a temperatura) e nao foi levado em conta a satura\u00e7ao. Contudo, resultados pr\u00e9aticos mostraram que a resposta do sistema n\u00e9vel com controlador foram satisfat\u00e9rias, mesmo com a satura\u00e7ao real existente.\nAp\u00eandice B\nAlgoritmo de implementa\u00e7\u00e3o no MATLAB\nEste ap\u00f4endice ilustra o co\u00e1digo de instruc\u00e7\u00f5oes do algoritmo jogador de auto\u00f4matos C/E conectado ao servidor OPC da planta piloto descrito no cap.7.\nclear all\nk=input('Informe o n. de amostras ')\nTo=input('Informe a temperatura ambiente ')\ns=input('Informe o nome completo do supervisor ')\n% Parte 1:\n% Funcao que converte o arquivo do grail em uma matriz contendo\n% a funcao de transicao do supervisor C/E\n[X, V, U, n, Mark, name] = grailce2mat(s);\nsortrows(X ,[1 2]);\t% Ordena a matriz X de forma crescente em\n% relacao as colunas 1 e 2\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n% Parte 2: Criacao dos ervidor OPC\nOPC = actxserver('Softing.SOAXC.OPCDataControl.1 ' )\t;\n% Selecao do servidor OPC\nset(OPC, 'ServerName ' , 'Smar.DfiOleServer.0'); set (OPC , 'UpdateRate ' , 1000)\t;\n% Selecao das variaveis I = get (OPC , 'Items')\ninvoke(I, 'AddItem',\nNi v e l\nde agua no\ntanque\ninvoke(I, 'AddItem',\ndo processo\n'LD_AI.PV.VALUE')\t;\n'FY_AO.OUT.VALUE')\t;\n'LD_PID.SP.VALUE ')\t;\n'LD_PID.GAIN')\t;\n' LD_PID.RESET ' ) ;\ndo posicionador de valvula\n% Saida\ninvoke (I ,\tAddItem' ,\n% Setpoint\tdo nivel\ninvoke (I ,\tAddItem' ,\n% Ganho kp\t\ninvoke (I ,\tAddItem' ,\n% Ganho Ti\t\ninvoke (I ,\t' AddItem' ,\n' TT_AI . PV . VALUE ' )\n% Valor da invoke (I ,\n% Sa i d a do invoke (I ,\ntemperatura\nAddItem', 'FI_AO.OUT.VALUE\nconversor de potencia\nAddItem' ,\t' TT_PID. SP. VALUE\n)\n)\n% Setpoint da temperatura invoked, 'AddItem', 'TT_PID.GAIN')\t;\n% Ganho kpt invoked, 'AddItem', ' TT_PID . RESET ' ) ;\n% Ganho Tit\n% Obter acesso individual a cada uma das variaveis\nItemH\t= get\t(I,\t' Item'\t,0)\nItemFY_\tAO = get\t(I,\t' Item'\t,1)\nItemPID\t_SP = get\t(I,\t' Item'\t,2)\nItemPID\t_kp = get\t(I,\t' Item'\t,3)\nItemPID\t_Ti = get\t(I,\t' Item'\t,4)\nItemT\t\t= get\t(I,\t' Item\t' ,5) ;\nItemFI_AO\t\t= get\t(I,\t' Item\t' ,6) ;\nItemTTPID_\tSP\t= get\t(I,\t' Item\t' ,7) ;\nItemTTPID_\tkp\t= get\t(I,\t' Item\t' ,8) ;\nItemTTPID_\tTi\t= get\t(I,\t' Item\t' ,9);\n% Conexao\tao\tservidor\t\tOPC e\tatualizacao\ninvoke (OPC\t,\tConnect ' )\t\t\t\ninvoke (OPC\t,\tUpdate\t');\t\t\ndas variaveis\nget (ItemH, 'Value'); get (ItemT, 'Value');\npause(2)\ninvoke (OPC , get (ItemT ,\n'Update '); 'Value ')\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % %\n% Parte 3: Declaracao de parametros utilizados ao longo\n% do algoritmo\n[m,n]= size(X);\nUU=[] ;\nP=[] ;\nstate = X(1 ,1);\nq=100;\ntic\nc o nt = 1 ;\nTime = [] ;\nfq = 0;\nff = 1;\nflag=0;\nfv = 0;\nTo=26;\n%\tInforma as m linhas e n colunas\tde\tX\n%\tVetor Sinal condicao\t\t\n%\tVetor Sinal Evento\t\t\n%\tInforma o estado inicial\t\t\n%\tSempre sera o primeiro elemento\tda\tmatriz por\n%\tcausa do comando \" sortrows \"\t\t\n% Temperatura ambiente\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n% Parte j:\n% Testa o automato atraves de um jogador de automatos C/E\nwhile cont<=k\nif fq = = 0\n% Numero\nde amostras que se deseja analisar\nTeste para evitar que na ocorrencia de um\n% evento\no comando pause seja executado 2 vezes\ninvoke (OPC ,\npause (2)\nend\n'Update ');\n% Pausa a\n% Atualizacao das variaveis execucao do algoritmo em 2 seg\n% Principais h(cont) = T(cont) = Q(cont) = v(cont) =\nvariaveis da planta piloto get (ItemH, 'Value'); get (ItemT, 'Value'); get (ItemFI_AO, 'Value'); get (ItemFY_AO, 'Value');\n% Nivel\n% Temperatura\n% Potencia\n% Valvula\nfq = 0;\n% Parte:5 Associacao dos eventos com os cruzamentos de\n% patamares.\nif ff == 1\t% Teste para que a rotina seguinte ocorra uma\n% unica vez apos encontrar o estado.\nfor i=1:m % Localiza o estado atual na matriz X\nif state == X(i ,1)\nff=0;\nbreak;\nend\nend\nend\nj = i;\nwhile state= = X(j ,1) % Testa todos os eventos possiveis de % ocorrer pertencentes a um estado\nP = X(j ,2);\n[fv]= eventos(cont, p ,h, T, To); % Funcao eventos\nif fv==1\ndisp (p)\nbreak;\nend\nj=j+1;\nif j >m\nbreak;\ne nd\nend\nP( cont)=fv*p; % Valor do sinal evento\n% Parte 5: Verifica-se a condicao associada e estado\n% atingido apos uma ocorr\u00eancia de um evento\nif fv==1 % Indica que ocorreu um evento no estado atual\n[u, state] = nao_determinismo_temp(j , m, p, X)\n% Funcao que fornece o valor de u nao\n% deterministico associado ao evento corrente\nflag=1;\nfq = 1;\nff = 1; fv=0;\n% Habilita a funcao condicoes\n% Desabilita atualizacao inicial\n% de variaveis\n% Habilita localizacao de estado\n% Indica que nao ocorreu nenhum evento\n% no estado atual\nend\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % %\nUU(cont)= u; % Sinal condicao\n% Parte 6:\nif flag==1\n% teste para que a condicao seja aplicada\n% somente na ocorrencia de um evento\n% condicao aplicada\nq = condicoes_temperatura(OPC, To , ItemPID_SP , ItemPID_kp , ItemPID_Ti, ItemTTPID_SP, u)\nfq=i;\ne nd\nTime (cont)=toc;\n[h(cont) T(cont) P(cont)\nUU( cont )\nTime(cont) ] ;\ncont=cont+1; % Atualiza contador de amostras\nflag=0; % Zera o flag para que se aplique as condicoes\n% somente quando a condicao fv=1 (ocorreu um evento) % fo r s at i s fe i t a\nend\nsave data h T P UU Time % Salva as amostras das variaveis em\n% um arquivo de extensao . mat\n|| invoke (OPC ,\n\u2019Disconnect\u2019) % Fim do algoritmo\nAlgoritmo B.1: Corpo principal do Jogador de Aut\u00e2matos.\n//\nfunction [X, V, U, n, Mark, name] = grailce2mat(file)\n% Converte o arquivo .do para .mat\nif ~ exist (file ) ,\nerror([ 'File \u2019 char(file) \u2019 not f ound! \u2019 ]);\nend\n[path,name,ext] = fileparts (file);\nini\t= 0;\t\t\t\nMark\t= []\ti\t\t\nX =\t[];\t\t\t\nV=[]\t; %\tvetor\tde\teventos\nU=[]\t; %\tvetor\tde\tcondicoes\nfid = fopen(file);\ns=fgetl(fid);\nwhile ischar (s)\nif ~isempty(strfind (s ,\u2019| -\t\u2019))\nini = sscanf(s,\u2019(START)\t|- %u \u2019);\nelseif ~isempty ( strfind (s, \u2019 -| \u2019))\nMark = [Mark sscanf (s, \u2019%u -|\t(FINAL)')];\nelse\nTrans = sscanf (s,\u2019%i\t[%i,%i] %i\u2019);\nif length(Trans)==4\nX = [X; Trans \u2019] ;\nif ~any(V = =Trans (2))\nV = [V Trans (2)] ;\nend\nif ~any(U = =Trans (3))\nU = [U Trans (3)] ;\nend\nend\ne nd\ns = fgetl(fid) ;\nend\nV=sort(V) ;\nU=sort(U);\nX=sortrows(X , [ 1 2]);\nn = max([X(: ,1) ;X(: ,4) ] ) + 1;\nfclose (fid) ;\ndisp(X)\ni)\nAlgoritmo B.2: Convers\u00e3o do arquivo no formato Grail para uma Matriz.\nfunction [fv]= eventos(cont , p ,h, T)\n%\n%\n%\nFuncao que verifica a ocorr\u00eancia ou nao de eventos pertencentes ao estado atual\nFuncao especifica para o automato hibrido da fig . 6.1\nswitch p\ncase 0\nif h(cont)>=-1\nf v = 1;\nelse\nf v=0 ;\nend\n% Variavel evento\n% Patamar cInicializaao da planta\n% Ocorreu o evento 0\n% Nao ocorreu eventos\ncase 1\nif h(cont)>=52\nf v = 1;\nelse\nf v=0 ;\ne nd\n% Patamar chaveamento de controladores\n% Ocorreu o evento 1\n% Nao ocorreu eventos\ncase 3\nif h(cont)>=60\n% Patamar Indica resistencias ligadas\nfv=1;\nelse\nfv=0;\ne nd\ncase 4\nif T(cont)>=2+To\nfv = 1;\nelse\nfv = 0;\ne nd\ncase 5\nif h( cont)> = 67 fv = 1;\nelse\nfv=0;\ne nd\n% Patamar Encher o tanque\n% Patamar Tanque esta cheio\ncase 7\nif T(cont)>=3+To fv = 1;\nelse\nfv=0;\ne nd\ncase 6\nif h( cont)&lt;= 60 fv = 1;\nelse\nfv=0;\ne nd\ncase 2\nif h( cont)&lt;= 1\n% Patamar Temperatura muito alta\n% Patamar Desliga resistencias\n% Patamar Tanque vazio\nfv = 1;\nelse\nfv = 0;\nend\nend\nreturn\nAlgoritmo B.3: Func\u00f5o de Configura\u00e7ao de Eventos.\nfunction q = condicoes_temperatura(OPC, To, ItemPID_SP , ItemPID_kp , ItemPID_Ti , ItemTTPID_SP , u)\n% Associando as din\u00e1micas possiveis a cada estado atraves da % condicao u\nswitch u, %Variavel condicao\ncase 1 % Estado inicial\ntanque enchendo\nset (ItemPID_Ti , 'Value pause(2)\ninvoke(OPC, 'Update'); set (ItemPID_kp , 'Value pause (2)\ninvoke(OPC, 'Update'); set (ItemPID_SP , 'Value invoke(OPC ,\t' Update ' ) ;\npause (2)\n,100000);% Ti\n,50)\n,60)\nNivel com Controle\nProporcional\nSetpoint do nivel em 60cm\nq=\nget (ItemPID_SP, 'Value % funcao\nArtificio para\ncase 3\nset\n% Chaveia\n(ItemPID_kp (ItemPID_Ti\nset\ninvoke (OPC , pause (2)\nseja aceita.\ni\nVariavel sem funcao\ncontro le de\n'Value ' ,3);\n'Value',18);\n>\n'Update ');\nnivel proporcional Controle PI Kp Ganho Ti\n%\n%\n%\n%\nAtualizacao das\nque a presente no algor itmo.\nPI\nvariaveis\nPause para atualizacao\no\n>\n\n\ni\n%\n%\n\ni\n%\n\n)\n%\nq= get (ItemPID_SP, 'Value')\ni\ncase 2 % Tanque esvaziando com temp. desligada set (ItemPID_SP, 'Value', 0);\ninvoke(OPC, 'Update');\npause(2) q= get (ItemPID_SP, 'Value');\ncase 4\t% Liga o conversor, temp em malha aberta e tanque\n% enchendo\nset (ItemPID_SP , 'Value\u2019,67); % % set (ItemTTPID_SP ,\t'Value',10);\ninvoke(OPC, 'Update');\t%\npause (2)\t%\nq= get (ItemPID_SP, 'Value');\nSetpoint do nivel para tanque cheio\nAtualizacao das variaveis\nPause para atualizacao\ncase 5\n% Liga o conversor, temp com controle PI e tanque\n% enchendo\nset (ItemPID_SP ,\t'Value',67);\t% Setpoint do nivel para\n% tanque cheio\nset (ItemTTPID_SP , 'Value',To+2);\t% Referencia da temperatura\n% igual a 2\ninvoke( OPC ,\t' Update ' ) ;\t% Atualizacao das variaveis\npause (2)\t% Pause para atualizacao\nq= get (ItemPID_SP, 'Value');\ncase 6 % Liga o conversor, temp em malha aberta com PI em 64cm % no nivel\nset (ItemTTPID_SP ,\t'Value',10);\t% malha aberta\nset(ItemPID_SP, \u2019Value\u2019 ,64); % Setpoint do nivel em 64cm invoke(OPC, 'Update');\t% Atualizacao das variaveis\npause (2)\t% Pause para atualizacao\nq= get (ItemPID_SP, 'Value');\ncase 7\t% Liga o conversor, temp com controle PI e com\n% controle PI em 64cm no nivel\nset (ItemTTPID_SP , 'Value',To+2);\nset ( ItemPID_SP ,\t' Value ' , 64) ;\t% Setpoint do nivel em 64cm\ninvoke( OPC ,\t' Update ' ) ;\npause (2)\nq= get ( ItemPID_SP ,\t' Value ' ) ;\ncase 8\t% O tanque comeca a esvaziar\nset (ItemPID_SP , 'Value' , 0); %Valvula em 0% invoke(OPC, 'Update');\npause(2)\nq = get (ItemPID_SP, 'Value');\ncase 10 % Controle de temperatura com tanque cheio: SUCESSO\nset (ItemTTPID_SP , 'Value',To+2); invoke(OPC, 'Update');\npause (2)\nq= get (ItemPID_SP, 'Value');\ncase 9 % Temperatura em malha aberta e tanque cheio\nset (ItemTTPID_SP , 'Value',10); invoke(OPC, 'Update');\npause (2)\nq= get (ItemPID_SP, 'Value');\ncase 11 % Estado indesejado, tanque vazio\ninvoke(OPC, 'Update');\npause(2)\nq= get (ItemPID_SP, 'Value');\nend\nreturn\nAlgoritmo B.4: Fun\u00e7ao de Configura\u00e7\u00e3o de Condic\u00e3es.\n\t function [u , state] =\t\t\tnao_determinismo_temp(j, m, p, X)\t\u2014\n% Funcao para gerar\t\tuma condicao u nao-deterministica\t\t\nB=[] ;\t\t\t\t\nb=j;\t\t%\tGuarda alinha da matriz x\t\nc = 1;\t\t%\tDeclara o indice de B\t\nwhile X(b , 2)= = p\t\t%\tTesta quantas \u00e7condioes estao\t\n\t\t%\tassociadas ao evento p\t\nB(c)=X(b,3);\t\t%\tGuarda o valor do sinal u no vetor linha\tB\nc=c+1;\t\t%\tAtualiza contadores\t\nb=b+1;\t\t\t\t\nif b>m\t\t%\tEvita erro de dimensao de X\t\nbreak;\t\t\t\t\nend\t\t\t\t\nend\t\t\t\t\nz=length(B);\t\t%\tCalcula o tamanho do vetor B e guarda em\tz\nd=randperm(z);\t\t%\tGera o vetor d de tamanho igual ao B\t\n\t\t%\tmas com os indices de B como elemetos\t\n\t\t%\tpermutados aleatoriamente no vetor d\t\nu=X(d(1)+b-c ,3);\t%\tu\trecebe o valor de X com o indice contendo\t\n\t%\to primeiro elemento de d, que eh\t\t\n\t%\tum\tindice de B aleatorio, mais a defazagem\t\n\t%\tdos\tcontadores de X e B\t\nstate=X(d(1)+b-c\t,4)\t;%\tstate recebe o valor do estado a ser\t\n\t\t%\tatingido associado a condicao u\t\n\t\t%\tanterior.\t\nreturn\t\t\t\t\n\t\t\t\t\t\u2014y\nAlgoritmo B.5: Fun\u00e7ao de escolha da condi\u00e7\u00e3o de forma n\u00e3o-determin\u00edstica.\nReferencias Bibliogr\u00e1ficas\nAllur, R. e Dill, D. L. (1994). A theory of timed automata,, Theorycal Computer Science 126(2): 183-235.\nAlur, R. Courcoubetis, C. e Dill, D. (1990). Model checking for a real-time systems, 5th IEEE Symposium on Logic in Computer Science, pp. 414-425.\nAlur, R. Courcoubetis, C. H. T. A. e. H. P. H. (1993). Hybrid automata: an algoritmic approach to the specification and verification of hybrid systems, in Grossman et al. p. 209-229.\nAntsaklis, P. J. e Koutsoukos, X. D. (2002). Hybrid systems: Review and recent progress., Chapter in Software-Enabled Control: Information Technologies for Dynamic systems. 88(7): 879-557.\nAntsaklis, P. J. Stiver, J. A. e Lemmon, M. D. (1993). Hybrid systems modeling and autonomous control systems, in Grossman et al p. 366-392.\nAntsaklis, P. J. (2000a). A brief introducion to the teory and aplications of hybrid systems, Proceedings of the IEEE, Special Issue on Hybrid Systems, Theory and applications .\nAntsaklis, P. J. (2000b). Special issue on hybrid systems, theory and applications, Proceedings of the IEEE .\nChutinan, A. e Krogh, B. H. (1999a). Computing approximating automata for a class of linear hybrid systems., In Hybrid Systems V, LNCS 1567, Springer-Verlag p. 1637.\nChutinan, A. e Krogh, B. H. (1999b). Verification of polyhedral-invariant hybrid automata using polygonal flow pipe approximations, In Hybrid systems: Computation and Control, Second International Workshop, Springer-Verlag p. 76-90.\nChutinan, A. e Krogh, B. H. (2001). Verification of infinite-state dynamic systems using approximate quotient transition systems, IEEE Trans. on Automatic Control 46(9): 1401-1410.\nChutinan, A. (1999). Hybrid system verification using discrete model approximations, Ph.d. in electrical engeneering, Carnegie Mellon University, Pittsburgh, USA.\nCury, J. E. R. Krogh, B. H. e Niinomi, T. (1998). Synthesis of supervisory controllers for hybrid systems based on approximating automata, IEE Transations on Automatic Control, Special issue on Hybrid Control Systems 43(4): 564-568.\nEgerstedt, M. (2000). Behavior besed robotics using hybrid automata, Third International Workshop, HSCC 2000 .\nFerrari-Trecate, e. a. (2002). Modeling and control of co-generation power plants:, 5th International Workshop, HSCC 2002 p. 209-224.\nGarcia, T. R. (2002). Controle supervisorio de sistemas a eventos discretos: Uma abordagem por modelo condi\u00e7\u00e3o/evento, Dissertac\u00e3o de mestrado, Universidade Federal de Santa Catarina, Florian\u00f3polis, Brasil.\nGonzales, J. M. E. da Cunha, A. E. C. C. J. E. R. e Krogh, B. H. (2001). Surpevision of event-driven hybrid systems: Modeling and syntesis, 4th International Workshop, HSCC, Rome, Italy.\nGonzales, J. M. E. (2000). Aspectos de .s\u00edntese de surpevisores para sistemas a eventos discretos e sistemas h\u00edbridos, Tese (doutorado), Universidade Federal de Santa Catarina, Floriano\u00f3polis , Brasil.\nHalliday, D. Resnick, R. e Walker, J. (1997). Fundamentos de F\u00edsica 2, 4a ed., Livros T\u00f3cnicos e Cient\u00edficos Editora S.A.\nHopcroft, J. E. e Ullman, J. D. (1979). Introducion to automata theory, languages and computation, Addison-Wesley .\nKhalil, H. K. (1996). Nonlinear systems, Prentice Hall.\nKrogh, B. H. (2002). Recent advances in discrete analysis and control of hybrid systems, 6o International Workshop on Discrete Event Systems, Zaragoza, Spain.\nLeal, A. B. E. e Cury, J. E. R. (2004). Modular supervision of hybrid systems: A des approach, 7th Workshop on Discrete Event Systems.\nLeal, A. B. (2002). Controle supervisorio modular de sistemas h\u00edbridos, Exame de qua-lificacao (doutor), Universidade Federal de Santa Catarina, Florian\u00f3polis, Brasil.\nLennartson, B. Tittus, M. E. B. e Pettersson, S. (1996). Hybrid systems in process control, IEEE, Control Engeneering Lab. Chalmers University of Thecnology, Gothenburg, Sweden.\nLiberzon, D. e Morse, A. S. (1999). Basic problems in stability and design of switched systems,, IEEE Control Systems Magazine 19(5): 59-70.\nLivadas, e. a. (2000). High-level modeling and analysis of the traffic alert and collision avoidance system, IEEE, Special Issue of Hybrid Systems: Theory and Aplications 88(7): 926-948.\nMaler, O. Manna, Z. e Pnueli, A. (1992). From timed to hybrid systems, in the Bakker et al. p. 474-484.\nManna, Z. e Sipma, H. (1998). Deductive verification of hybrid systems usin step, First International Workshop, HSCC 98, Berkeley, California, USA 11(6): 665-683.\nMiranda, M. V. C. e Lima, A. M. N. (2001). Using hyibrid automata to model power eletronic circuits,, VI Congresso brasileiro de Eletr\u00f4nica de Pot\u00eancia - COPEB 2001 .\nMoor, T. Davoren, J. M. e Raish, J. (2001). Modular supervisory control of a class of hybrid systems in behavior framework, Proc. euproean Control Conference ECC2001, Porto Portugal p. 870-875.\nNerode, A. e. K. (1993). Models of hybrid systems: Automata, topologies, controllability, observability,, in Grossman et al p. 317-356.\nOgata, K. (1998). Engenharia de Controle Moderno 3a ed.\nPepyne, D. L. e Cassandras, C. G. (2000). Optimal control of hybrid systems in manfacturing, IEEE, Special Issue of Hybrid Systems: Theory and Aplications 88(7): 1108-1123.\nPuri, A. e Varaiya, P. (1994). Decidability of hybrid systems with rectangular differential inclusions, 818: 95-104.\nRaish, J. e O\u2019Young, S. D. (1998). Discrete approximation and supervisory control of continuous systems, IEEE Transacitons on Automatic Control, Special issue on Hybrid Control Systems 43(4): 569-573.\nRico, J. E. N. (2000). Apostila de Controle Cl\u00e1ssico.\nSilva, B. I. e Krogh, B. H. (2000). Formal verification of hybrid system using checkmate: A case study, American Control Conference.\nSilva, B. I. Richeson, K. K. B. H. e Chutinan, A. (2000). Modeling and verification of hybrid dynamical system using checkmate, ADPM 2000.\nSilva, B. I. Stursberg, O. K. B. H. e Engell, S. (2001). An assessment of the current status of algorithmic, approaches to the verification of hybrid systems, Conference on Decision and Control, Carnegie Mellon University, Pittsburgh, USA.\nSreenivas, R. S. e Krogh, B. H. (1991). On condition/event systems with discrete state realizations., Discrete Event Dynamic Systems: Theory and Applications p. 1:209-236.\nStephanopoulos, G. (1984). Chemical Process Control An introducion to theory and practice, Prentice Hall.\nStiver, J. A. Antsaklis, P. J. e Lemmon, M. D. (1995a). Hybrid control system design for hybrid control systems, 34th IEEE Conference on Decision and control, .\nStiver, J. A. Antsaklis, P. J. e Lemmon, M. D. (1995b). Interface and controler designs for hybrid control systems, Hybrid Systems II, Spribger-Velag .\nTavernini, L. (1987). Differencial automata and their discrete simulators, Nonlinear Analysis, Theory, Methods and Aplications 11(6): 665-683.\nvan der Shaft, A. e Schumacher (2000). An Introducion to Hybrid Dynamics Systems, Vol. 251 of Lecture Notes in Control and Informtion Sciences.\nWonham, W. M. e Ramadge, P. J. (1987). On the supremal controllable sublanguage of given language, SIAM, Journal of Control and Optimization 25(3): 637-659."}]}}}